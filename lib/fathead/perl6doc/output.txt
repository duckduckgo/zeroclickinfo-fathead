&lt;=&gt;	R	Order.&lt;=&gt;										
(Variables)	R	Variable.(Variables)										
:delete	R	Hash.:delete										
:exists	R	Hash.:exists										
:k	R	Hash.:k										
:p	R	Hash.:p										
?	R	Bool.?										
ACCEPTS	D								*[[AST.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Any.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Attribute.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Bag.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[BagHash.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Baggy.ACCEPTS]], defined as:\n*[[Block.ACCEPTS]], usually calls the code object and passes $topic as an argument.\n*[[CallFrame.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Callable.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Cancellation.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Capture.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Channel.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Code.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Complex.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[ComplexStr.ACCEPTS]], returns True if the string is the same as $other.\n*[[Cool.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[CurrentThreadScheduler.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Cursor.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Date.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[DateTime.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Duration.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Exception.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Failure.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[FatRat.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Grammar.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Hash.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Instant.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Int.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[IntStr.ACCEPTS]], returns True if the string is the same as $other.\n*[[Iterable.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Junction.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Label.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[List.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Lock.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Macro.ACCEPTS]], usually calls the code object and passes $topic as an argument.\n*[[Map.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Match.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Method.ACCEPTS]], usually calls the code object and passes $topic as an argument.\n*[[Mix.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[MixHash.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Mixy.ACCEPTS]], defined as:\n*[[Mu.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Nil.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Num.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[NumStr.ACCEPTS]], returns True if the string is the same as $other.\n*[[Numeric.ACCEPTS]], returns True if $other is numerically the same as the invocant.\n*[[ObjAt.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Pair.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Parameter.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Positional.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Proc.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Promise.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Proxy.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Range.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Rat.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[RatStr.ACCEPTS]], returns True if the string is the same as $other.\n*[[Rational.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Real.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Regex.ACCEPTS]], usually calls the code object and passes $topic as an argument.\n*[[Routine.ACCEPTS]], usually calls the code object and passes $topic as an argument.\n*[[Scalar.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Semaphore.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Seq.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Set.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[SetHash.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Setty.ACCEPTS]], returns True if $other and self contain all the same elements, and no others.\n*[[Signature.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Stash.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Str.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Sub.ACCEPTS]], usually calls the code object and passes $topic as an argument.\n*[[Submethod.ACCEPTS]], usually calls the code object and passes $topic as an argument.\n*[[Supplier.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Tap.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Thread.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[ThreadPoolScheduler.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Uni.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Variable.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Version.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[Whatever.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).\n*[[WhateverCode.ACCEPTS]], usually calls the code object and passes $topic as an argument.\n*[[supplies.ACCEPTS]], aCCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).			
AST.ACCEPTS	A			Perl 6 AST							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Any%29_method_ACCEPTS
AST.ACCEPTS	A			Perl 6 AST							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_method_ACCEPTS
AST.Bool	A			Perl 6 AST							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_routine_Bool
AST.CREATE	A			Perl 6 AST							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_method_CREATE
AST.Str	A			Perl 6 AST							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_method_Str
AST.WHERE	A			Perl 6 AST							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_method_WHERE
AST.WHICH	A			Perl 6 AST							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_method_WHICH
AST.WHY	A			Perl 6 AST							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_method_WHY
AST.all	A			Perl 6 AST							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Any%29_method_all
AST.any	A			Perl 6 AST							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Any%29_method_any
AST.bless	A			Perl 6 AST							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_method_bless
AST.clone	A			Perl 6 AST							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_method_clone
AST.deepmap	A			Perl 6 AST							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Any%29_method_deepmap
AST.defined	A			Perl 6 AST							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_routine_defined
AST.does	A			Perl 6 AST							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_routine_does
AST.duckmap	A			Perl 6 AST							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Any%29_method_duckmap
AST.eager	A			Perl 6 AST							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Any%29_method_eager
AST.elems	A			Perl 6 AST							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Any%29_method_elems
AST.emit	A			Perl 6 AST							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_method_emit
AST.end	A			Perl 6 AST							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Any%29_method_end
AST.exit	A			Perl 6 AST							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Any%29_sub_exit
AST.export	A			Perl 6 AST							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_trait_is_export
AST.flat	A			Perl 6 AST							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Any%29_method_flat
AST.gist	A			Perl 6 AST							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_routine_gist
AST.isa	A			Perl 6 AST							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_routine_isa
AST.item	A			Perl 6 AST							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_method_item
AST.list	A			Perl 6 AST							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Any%29_method_list
AST.map	A			Perl 6 AST							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Any%29_method_map
AST.new	A			Perl 6 AST							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_method_new
AST.none	A			Perl 6 AST							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Any%29_method_none
AST.not	A			Perl 6 AST							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_method_not
AST.one	A			Perl 6 AST							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Any%29_method_one
AST.pairup	A			Perl 6 AST							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Any%29_method_pairup
AST.perl	A			Perl 6 AST							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_routine_perl
AST.print	A			Perl 6 AST							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_method_print
AST.push	A			Perl 6 AST							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Any%29_method_push
AST.put	A			Perl 6 AST							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_method_put
AST.return	A			Perl 6 AST							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_method_return
AST.return-rw	A			Perl 6 AST							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_method_return-rw
AST.reverse	A			Perl 6 AST							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Any%29_routine_reverse
AST.say	A			Perl 6 AST							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_method_say
AST.so	A			Perl 6 AST							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_method_so
AST.sort	A			Perl 6 AST							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Any%29_method_sort
AST.take	A			Perl 6 AST							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_method_take
AST.take	A			Perl 6 AST							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_routine_take
AST.take-rw	A			Perl 6 AST							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/AST.html#%28Mu%29_routine_take-rw
Any.ACCEPTS	A			Perl 6 Any							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#method_ACCEPTS
Any.ACCEPTS	A			Perl 6 Any							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_method_ACCEPTS
Any.Bool	A			Perl 6 Any							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_routine_Bool
Any.CREATE	A			Perl 6 Any							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_method_CREATE
Any.Str	A			Perl 6 Any							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_method_Str
Any.WHERE	A			Perl 6 Any							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_method_WHERE
Any.WHICH	A			Perl 6 Any							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_method_WHICH
Any.WHY	A			Perl 6 Any							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_method_WHY
Any.all	A			Perl 6 Any							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#method_all
Any.any	A			Perl 6 Any							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#method_any
Any.bless	A			Perl 6 Any							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_method_bless
Any.clone	A			Perl 6 Any							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_method_clone
Any.deepmap	A			Perl 6 Any							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#method_deepmap
Any.defined	A			Perl 6 Any							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_routine_defined
Any.does	A			Perl 6 Any							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_routine_does
Any.duckmap	A			Perl 6 Any							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#method_duckmap
Any.eager	A			Perl 6 Any							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#method_eager
Any.elems	A			Perl 6 Any							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#method_elems
Any.emit	A			Perl 6 Any							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_method_emit
Any.end	A			Perl 6 Any							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#method_end
Any.exit	A			Perl 6 Any							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#sub_exit
Any.export	A			Perl 6 Any							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_trait_is_export
Any.flat	A			Perl 6 Any							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#method_flat
Any.gist	A			Perl 6 Any							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_routine_gist
Any.isa	A			Perl 6 Any							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_routine_isa
Any.item	A			Perl 6 Any							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_method_item
Any.list	A			Perl 6 Any							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#method_list
Any.map	A			Perl 6 Any							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#method_map
Any.new	A			Perl 6 Any							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_method_new
Any.none	A			Perl 6 Any							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#method_none
Any.not	A			Perl 6 Any							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_method_not
Any.one	A			Perl 6 Any							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#method_one
Any.pairup	A			Perl 6 Any							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#method_pairup
Any.perl	A			Perl 6 Any							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_routine_perl
Any.print	A			Perl 6 Any							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_method_print
Any.push	A			Perl 6 Any							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#method_push
Any.put	A			Perl 6 Any							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_method_put
Any.return	A			Perl 6 Any							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_method_return
Any.return-rw	A			Perl 6 Any							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_method_return-rw
Any.reverse	A			Perl 6 Any							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#routine_reverse
Any.say	A			Perl 6 Any							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_method_say
Any.so	A			Perl 6 Any							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_method_so
Any.sort	A			Perl 6 Any							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#method_sort
Any.take	A			Perl 6 Any							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_method_take
Any.take	A			Perl 6 Any							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_routine_take
Any.take-rw	A			Perl 6 Any							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Any.html#%28Mu%29_routine_take-rw
Array.ACCEPTS	R	Iterable.ACCEPTS										
Array.ACCEPTS	R	Iterable.ACCEPTS										
Array.Bool	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_method_Bool
Array.Bool	R	Iterable.Bool										
Array.CREATE	R	Iterable.CREATE										
Array.Capture	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_method_Capture
Array.EVAL	R	Iterable.EVAL										
Array.EVALFILE	R	Iterable.EVALFILE										
Array.IO	R	Iterable.IO										
Array.Int	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_method_Int
Array.Numeric	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_method_Numeric
Array.Str	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_method_Str
Array.Str	R	Iterable.Str										
Array.WHERE	R	Iterable.WHERE										
Array.WHICH	R	Iterable.WHICH										
Array.WHY	R	Iterable.WHY										
Array.abs	R	Iterable.abs										
Array.acos	R	Iterable.acos										
Array.acosec	R	Iterable.acosec										
Array.acosech	R	Iterable.acosech										
Array.acosh	R	Iterable.acosh										
Array.acotan	R	Iterable.acotan										
Array.acotanh	R	Iterable.acotanh										
Array.all	R	Iterable.all										
Array.antipairs	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_antipairs
Array.any	R	Iterable.any										
Array.append	A			Perl 6 Array							<section class="prog__container"><p>Defined as&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#method_append
Array.asec	R	Iterable.asec										
Array.asech	R	Iterable.asech										
Array.asin	R	Iterable.asin										
Array.asinh	R	Iterable.asinh										
Array.atan	R	Iterable.atan										
Array.atan2	R	Iterable.atan2										
Array.atanh	R	Iterable.atanh										
Array.bless	R	Iterable.bless										
Array.categorize	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_categorize
Array.ceiling	R	Iterable.ceiling										
Array.chars	R	Iterable.chars										
Array.chomp	R	Iterable.chomp										
Array.chop	R	Iterable.chop										
Array.chr	R	Iterable.chr										
Array.chrs	R	Iterable.chrs										
Array.cis	R	Iterable.cis										
Array.classify	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_classify
Array.clone	R	Iterable.clone										
Array.codes	R	Iterable.codes										
Array.comb	R	Iterable.comb										
Array.combinations	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_combinations
Array.conj	R	Iterable.conj										
Array.contains	R	Iterable.contains										
Array.cos	R	Iterable.cos										
Array.cosec	R	Iterable.cosec										
Array.cosech	R	Iterable.cosech										
Array.cosh	R	Iterable.cosh										
Array.cotan	R	Iterable.cotan										
Array.cotanh	R	Iterable.cotanh										
Array.cross	A			Perl 6 Array							<section class="prog__container"><pre><code>sub cross(+@e, :&amp;with --&gt; Seq:D)</code></pre><p>Computes the cross-product of two or more lists or iterables.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_cross
Array.deepmap	R	Iterable.deepmap										
Array.default	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#method_default
Array.defined	R	Iterable.defined										
Array.does	R	Iterable.does										
Array.duckmap	R	Iterable.duckmap										
Array.eager	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_eager
Array.eager	R	Iterable.eager										
Array.elems	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_elems
Array.elems	R	Iterable.elems										
Array.emit	R	Iterable.emit										
Array.end	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_end
Array.end	R	Iterable.end										
Array.exit	R	Iterable.exit										
Array.exp	R	Iterable.exp										
Array.export	R	Iterable.export										
Array.fc	R	Iterable.fc										
Array.first	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_first
Array.flat	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_sub_flat
Array.flat	R	Iterable.flat										
Array.flat	R	Iterable.flat										
Array.flatmap	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_method_flatmap
Array.flip	R	Iterable.flip										
Array.floor	R	Iterable.floor										
Array.fmt	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_method_fmt
Array.fmt	R	Iterable.fmt										
Array.from	A			Perl 6 Array							<section class="prog__container"><p>Assumes the list contains Match objects and returns the value of .from called on the first element of the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_method_from
Array.gist	R	Iterable.gist										
Array.grep	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_grep
Array.head	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_method_head
Array.hyper	R	Iterable.hyper										
Array.index	R	Iterable.index										
Array.isa	R	Iterable.isa										
Array.item	R	Iterable.item										
Array.iterator	R	Iterable.iterator										
Array.join	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_join
Array.keys	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_keys
Array.kv	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_kv
Array.lazy	R	Iterable.lazy										
Array.lc	R	Iterable.lc										
Array.lines	R	Iterable.lines										
Array.list	R	Iterable.list										
Array.log	R	Iterable.log										
Array.log10	R	Iterable.log10										
Array.map	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_map
Array.map	R	Iterable.map										
Array.match	R	Iterable.match										
Array.new	R	Iterable.new										
Array.none	R	Iterable.none										
Array.not	R	Iterable.not										
Array.of	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#method_of
Array.of	R	Positional.of										
Array.one	R	Iterable.one										
Array.ord	R	Iterable.ord										
Array.ords	R	Iterable.ords										
Array.pairs	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_pairs
Array.pairup	R	Iterable.pairup										
Array.perl	R	Iterable.perl										
Array.permutations	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_permutations
Array.pick	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_pick
Array.pop	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#routine_pop
Array.prepend	A			Perl 6 Array							<section class="prog__container"><p>Defined as&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#method_prepend
Array.print	R	Iterable.print										
Array.produce	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_produce
Array.push	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#routine_push
Array.push	R	Iterable.push										
Array.put	R	Iterable.put										
Array.race	R	Iterable.race										
Array.rand	R	Iterable.rand										
Array.reduce	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_reduce
Array.repeated	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_repeated
Array.return	R	Iterable.return										
Array.return-rw	R	Iterable.return-rw										
Array.reverse	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_reverse
Array.reverse	R	Iterable.reverse										
Array.rindex	R	Iterable.rindex										
Array.roll	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_roll
Array.roots	R	Iterable.roots										
Array.rotate	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_rotate
Array.rotor	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_method_rotor
Array.round	R	Iterable.round										
Array.roundrobin	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_sub_roundrobin
Array.samecase	R	Iterable.samecase										
Array.say	R	Iterable.say										
Array.sec	R	Iterable.sec										
Array.sech	R	Iterable.sech										
Array.shape	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#method_shape
Array.shift	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#routine_shift
Array.sign	R	Iterable.sign										
Array.sin	R	Iterable.sin										
Array.sinh	R	Iterable.sinh										
Array.so	R	Iterable.so										
Array.sort	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_sort
Array.sort	R	Iterable.sort										
Array.splice	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#routine_splice
Array.split	R	Iterable.split										
Array.sqrt	R	Iterable.sqrt										
Array.squish	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_squish
Array.substr	R	Iterable.substr										
Array.sum	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_sum
Array.tail	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_method_tail
Array.take	R	Iterable.take										
Array.take	R	Iterable.take										
Array.take-rw	R	Iterable.take-rw										
Array.tan	R	Iterable.tan										
Array.tanh	R	Iterable.tanh										
Array.tc	R	Iterable.tc										
Array.tclc	R	Iterable.tclc										
Array.to	A			Perl 6 Array							<section class="prog__container"><pre><code>"abc123def" ~~ m:g/&#92;d/;say $/.to; # 6 </code></pre><p>Assumes the List contains Match objects, such as the $/ variable being a List, when using :g modifier in regexes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_method_to
Array.trim	R	Iterable.trim										
Array.trim-leading	R	Iterable.trim-leading										
Array.trim-trailing	R	Iterable.trim-trailing										
Array.truncate	R	Iterable.truncate										
Array.uc	R	Iterable.uc										
Array.unimatch	R	Iterable.unimatch										
Array.uniname	R	Iterable.uniname										
Array.uninames	R	Iterable.uninames										
Array.uniprop	R	Iterable.uniprop										
Array.uniprops	R	Iterable.uniprops										
Array.unique	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_unique
Array.unpolar	R	Iterable.unpolar										
Array.unshift	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#routine_unshift
Array.values	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_values
Array.wordcase	R	Iterable.wordcase										
Array.words	R	Iterable.words										
Array.zip	A			Perl 6 Array							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Array.html#%28List%29_routine_zip
Attribute.ACCEPTS	A			Perl 6 Attribute							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Any%29_method_ACCEPTS
Attribute.ACCEPTS	A			Perl 6 Attribute							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_method_ACCEPTS
Attribute.Bool	A			Perl 6 Attribute							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_routine_Bool
Attribute.CREATE	A			Perl 6 Attribute							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_method_CREATE
Attribute.Str	A			Perl 6 Attribute							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_method_Str
Attribute.WHERE	A			Perl 6 Attribute							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_method_WHERE
Attribute.WHICH	A			Perl 6 Attribute							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_method_WHICH
Attribute.WHY	A			Perl 6 Attribute							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_method_WHY
Attribute.all	A			Perl 6 Attribute							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Any%29_method_all
Attribute.any	A			Perl 6 Attribute							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Any%29_method_any
Attribute.bless	A			Perl 6 Attribute							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_method_bless
Attribute.clone	A			Perl 6 Attribute							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_method_clone
Attribute.deepmap	A			Perl 6 Attribute							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Any%29_method_deepmap
Attribute.defined	A			Perl 6 Attribute							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_routine_defined
Attribute.does	A			Perl 6 Attribute							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_routine_does
Attribute.duckmap	A			Perl 6 Attribute							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Any%29_method_duckmap
Attribute.eager	A			Perl 6 Attribute							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Any%29_method_eager
Attribute.elems	A			Perl 6 Attribute							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Any%29_method_elems
Attribute.emit	A			Perl 6 Attribute							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_method_emit
Attribute.end	A			Perl 6 Attribute							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Any%29_method_end
Attribute.exit	A			Perl 6 Attribute							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Any%29_sub_exit
Attribute.export	A			Perl 6 Attribute							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_trait_is_export
Attribute.flat	A			Perl 6 Attribute							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Any%29_method_flat
Attribute.get_value	A			Perl 6 Attribute							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#method_get_value
Attribute.gist	A			Perl 6 Attribute							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_routine_gist
Attribute.has_accessor	A			Perl 6 Attribute							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#method_has_accessor
Attribute.isa	A			Perl 6 Attribute							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_routine_isa
Attribute.item	A			Perl 6 Attribute							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_method_item
Attribute.list	A			Perl 6 Attribute							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Any%29_method_list
Attribute.map	A			Perl 6 Attribute							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Any%29_method_map
Attribute.name	A			Perl 6 Attribute							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#method_name
Attribute.new	A			Perl 6 Attribute							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_method_new
Attribute.none	A			Perl 6 Attribute							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Any%29_method_none
Attribute.not	A			Perl 6 Attribute							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_method_not
Attribute.one	A			Perl 6 Attribute							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Any%29_method_one
Attribute.package	A			Perl 6 Attribute							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#method_package
Attribute.pairup	A			Perl 6 Attribute							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Any%29_method_pairup
Attribute.perl	A			Perl 6 Attribute							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_routine_perl
Attribute.print	A			Perl 6 Attribute							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_method_print
Attribute.push	A			Perl 6 Attribute							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Any%29_method_push
Attribute.put	A			Perl 6 Attribute							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_method_put
Attribute.readonly	A			Perl 6 Attribute							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#method_readonly
Attribute.required	A			Perl 6 Attribute							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt; (Attribute $attr, :$required!)</code></pre><p>Marks an attribute as being required.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#trait_is_required
Attribute.return	A			Perl 6 Attribute							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_method_return
Attribute.return-rw	A			Perl 6 Attribute							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_method_return-rw
Attribute.reverse	A			Perl 6 Attribute							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Any%29_routine_reverse
Attribute.rw	A			Perl 6 Attribute							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt; (Attribute:D $attr, :$rw!)</code></pre><p>Marks an attribute as read/write as opposed to the default readonly.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#trait_is_rw
Attribute.say	A			Perl 6 Attribute							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_method_say
Attribute.set_value	A			Perl 6 Attribute							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#method_set_value
Attribute.so	A			Perl 6 Attribute							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_method_so
Attribute.sort	A			Perl 6 Attribute							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Any%29_method_sort
Attribute.take	A			Perl 6 Attribute							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_method_take
Attribute.take	A			Perl 6 Attribute							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_routine_take
Attribute.take-rw	A			Perl 6 Attribute							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#%28Mu%29_routine_take-rw
Attribute.type	A			Perl 6 Attribute							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Attribute.html#method_type
Backtrace.ACCEPTS	R	Iterable.ACCEPTS										
Backtrace.ACCEPTS	R	Iterable.ACCEPTS										
Backtrace.Bool	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_method_Bool
Backtrace.Bool	R	Iterable.Bool										
Backtrace.CREATE	R	Iterable.CREATE										
Backtrace.Capture	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_method_Capture
Backtrace.EVAL	R	Iterable.EVAL										
Backtrace.EVALFILE	R	Iterable.EVALFILE										
Backtrace.IO	R	Iterable.IO										
Backtrace.Int	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_method_Int
Backtrace.Numeric	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_method_Numeric
Backtrace.Str	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_method_Str
Backtrace.Str	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#method_Str
Backtrace.Str	R	Iterable.Str										
Backtrace.WHERE	R	Iterable.WHERE										
Backtrace.WHICH	R	Iterable.WHICH										
Backtrace.WHY	R	Iterable.WHY										
Backtrace.abs	R	Iterable.abs										
Backtrace.acos	R	Iterable.acos										
Backtrace.acosec	R	Iterable.acosec										
Backtrace.acosech	R	Iterable.acosech										
Backtrace.acosh	R	Iterable.acosh										
Backtrace.acotan	R	Iterable.acotan										
Backtrace.acotanh	R	Iterable.acotanh										
Backtrace.all	R	Iterable.all										
Backtrace.antipairs	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_antipairs
Backtrace.any	R	Iterable.any										
Backtrace.asec	R	Iterable.asec										
Backtrace.asech	R	Iterable.asech										
Backtrace.asin	R	Iterable.asin										
Backtrace.asinh	R	Iterable.asinh										
Backtrace.atan	R	Iterable.atan										
Backtrace.atan2	R	Iterable.atan2										
Backtrace.atanh	R	Iterable.atanh										
Backtrace.bless	R	Iterable.bless										
Backtrace.categorize	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_categorize
Backtrace.ceiling	R	Iterable.ceiling										
Backtrace.chars	R	Iterable.chars										
Backtrace.chomp	R	Iterable.chomp										
Backtrace.chop	R	Iterable.chop										
Backtrace.chr	R	Iterable.chr										
Backtrace.chrs	R	Iterable.chrs										
Backtrace.cis	R	Iterable.cis										
Backtrace.classify	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_classify
Backtrace.clone	R	Iterable.clone										
Backtrace.codes	R	Iterable.codes										
Backtrace.comb	R	Iterable.comb										
Backtrace.combinations	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_combinations
Backtrace.conj	R	Iterable.conj										
Backtrace.contains	R	Iterable.contains										
Backtrace.cos	R	Iterable.cos										
Backtrace.cosec	R	Iterable.cosec										
Backtrace.cosech	R	Iterable.cosech										
Backtrace.cosh	R	Iterable.cosh										
Backtrace.cotan	R	Iterable.cotan										
Backtrace.cotanh	R	Iterable.cotanh										
Backtrace.cross	A			Perl 6 Backtrace							<section class="prog__container"><pre><code>sub cross(+@e, :&amp;with --&gt; Seq:D)</code></pre><p>Computes the cross-product of two or more lists or iterables.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_cross
Backtrace.deepmap	R	Iterable.deepmap										
Backtrace.defined	R	Iterable.defined										
Backtrace.does	R	Iterable.does										
Backtrace.duckmap	R	Iterable.duckmap										
Backtrace.eager	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_eager
Backtrace.eager	R	Iterable.eager										
Backtrace.elems	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_elems
Backtrace.elems	R	Iterable.elems										
Backtrace.emit	R	Iterable.emit										
Backtrace.end	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_end
Backtrace.end	R	Iterable.end										
Backtrace.exit	R	Iterable.exit										
Backtrace.exp	R	Iterable.exp										
Backtrace.export	R	Iterable.export										
Backtrace.fc	R	Iterable.fc										
Backtrace.first	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_first
Backtrace.flat	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_sub_flat
Backtrace.flat	R	Iterable.flat										
Backtrace.flat	R	Iterable.flat										
Backtrace.flatmap	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_method_flatmap
Backtrace.flip	R	Iterable.flip										
Backtrace.floor	R	Iterable.floor										
Backtrace.fmt	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_method_fmt
Backtrace.fmt	R	Iterable.fmt										
Backtrace.from	A			Perl 6 Backtrace							<section class="prog__container"><p>Assumes the list contains Match objects and returns the value of .from called on the first element of the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_method_from
Backtrace.full	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#method_full
Backtrace.gist	R	Iterable.gist										
Backtrace.grep	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_grep
Backtrace.head	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_method_head
Backtrace.hyper	R	Iterable.hyper										
Backtrace.index	R	Iterable.index										
Backtrace.isa	R	Iterable.isa										
Backtrace.item	R	Iterable.item										
Backtrace.iterator	R	Iterable.iterator										
Backtrace.join	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_join
Backtrace.keys	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_keys
Backtrace.kv	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_kv
Backtrace.lazy	R	Iterable.lazy										
Backtrace.lc	R	Iterable.lc										
Backtrace.lines	R	Iterable.lines										
Backtrace.list	R	Iterable.list										
Backtrace.log	R	Iterable.log										
Backtrace.log10	R	Iterable.log10										
Backtrace.map	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_map
Backtrace.map	R	Iterable.map										
Backtrace.match	R	Iterable.match										
Backtrace.new	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#method_new
Backtrace.new	R	Iterable.new										
Backtrace.none	R	Iterable.none										
Backtrace.not	R	Iterable.not										
Backtrace.of	R	Positional.of										
Backtrace.one	R	Iterable.one										
Backtrace.ord	R	Iterable.ord										
Backtrace.ords	R	Iterable.ords										
Backtrace.pairs	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_pairs
Backtrace.pairup	R	Iterable.pairup										
Backtrace.perl	R	Iterable.perl										
Backtrace.permutations	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_permutations
Backtrace.pick	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_pick
Backtrace.print	R	Iterable.print										
Backtrace.produce	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_produce
Backtrace.push	R	Iterable.push										
Backtrace.put	R	Iterable.put										
Backtrace.race	R	Iterable.race										
Backtrace.rand	R	Iterable.rand										
Backtrace.reduce	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_reduce
Backtrace.repeated	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_repeated
Backtrace.return	R	Iterable.return										
Backtrace.return-rw	R	Iterable.return-rw										
Backtrace.reverse	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_reverse
Backtrace.reverse	R	Iterable.reverse										
Backtrace.rindex	R	Iterable.rindex										
Backtrace.roll	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_roll
Backtrace.roots	R	Iterable.roots										
Backtrace.rotate	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_rotate
Backtrace.rotor	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_method_rotor
Backtrace.round	R	Iterable.round										
Backtrace.roundrobin	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_sub_roundrobin
Backtrace.samecase	R	Iterable.samecase										
Backtrace.say	R	Iterable.say										
Backtrace.sec	R	Iterable.sec										
Backtrace.sech	R	Iterable.sech										
Backtrace.sign	R	Iterable.sign										
Backtrace.sin	R	Iterable.sin										
Backtrace.sinh	R	Iterable.sinh										
Backtrace.so	R	Iterable.so										
Backtrace.sort	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_sort
Backtrace.sort	R	Iterable.sort										
Backtrace.split	R	Iterable.split										
Backtrace.sqrt	R	Iterable.sqrt										
Backtrace.squish	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_squish
Backtrace.substr	R	Iterable.substr										
Backtrace.sum	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_sum
Backtrace.tail	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_method_tail
Backtrace.take	R	Iterable.take										
Backtrace.take	R	Iterable.take										
Backtrace.take-rw	R	Iterable.take-rw										
Backtrace.tan	R	Iterable.tan										
Backtrace.tanh	R	Iterable.tanh										
Backtrace.tc	R	Iterable.tc										
Backtrace.tclc	R	Iterable.tclc										
Backtrace.to	A			Perl 6 Backtrace							<section class="prog__container"><pre><code>"abc123def" ~~ m:g/&#92;d/;say $/.to; # 6 </code></pre><p>Assumes the List contains Match objects, such as the $/ variable being a List, when using :g modifier in regexes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_method_to
Backtrace.trim	R	Iterable.trim										
Backtrace.trim-leading	R	Iterable.trim-leading										
Backtrace.trim-trailing	R	Iterable.trim-trailing										
Backtrace.truncate	R	Iterable.truncate										
Backtrace.uc	R	Iterable.uc										
Backtrace.unimatch	R	Iterable.unimatch										
Backtrace.uniname	R	Iterable.uniname										
Backtrace.uninames	R	Iterable.uninames										
Backtrace.uniprop	R	Iterable.uniprop										
Backtrace.uniprops	R	Iterable.uniprops										
Backtrace.unique	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_unique
Backtrace.unpolar	R	Iterable.unpolar										
Backtrace.values	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_values
Backtrace.wordcase	R	Iterable.wordcase										
Backtrace.words	R	Iterable.words										
Backtrace.zip	A			Perl 6 Backtrace							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Backtrace.html#%28List%29_routine_zip
Bag.ACCEPTS	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Any%29_method_ACCEPTS
Bag.ACCEPTS	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_ACCEPTS
Bag.ACCEPTS	A			Perl 6 Bag							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_method_ACCEPTS
Bag.Bool	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_Bool
Bag.Bool	A			Perl 6 Bag							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_routine_Bool
Bag.CREATE	A			Perl 6 Bag							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_method_CREATE
Bag.Set	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_Set
Bag.SetHash	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_SetHash
Bag.Str	A			Perl 6 Bag							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_method_Str
Bag.WHERE	A			Perl 6 Bag							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_method_WHERE
Bag.WHICH	A			Perl 6 Bag							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_method_WHICH
Bag.WHY	A			Perl 6 Bag							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_method_WHY
Bag.all	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Any%29_method_all
Bag.antipairs	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_antipairs
Bag.any	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Any%29_method_any
Bag.bag	A			Perl 6 Bag							<section class="prog__container"><pre><code>sub bag(*@args --&gt; Bag)</code></pre><p>Creates a new Bag from @args.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#sub_bag
Bag.bless	A			Perl 6 Bag							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_method_bless
Bag.categorize-list	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_categorize-list
Bag.classify-list	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_classify-list
Bag.clone	A			Perl 6 Bag							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_method_clone
Bag.deepmap	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Any%29_method_deepmap
Bag.default	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_default
Bag.defined	A			Perl 6 Bag							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_routine_defined
Bag.does	A			Perl 6 Bag							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_routine_does
Bag.duckmap	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Any%29_method_duckmap
Bag.eager	A			Perl 6 Bag							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Any%29_method_eager
Bag.elems	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_elems
Bag.elems	A			Perl 6 Bag							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Any%29_method_elems
Bag.emit	A			Perl 6 Bag							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_method_emit
Bag.end	A			Perl 6 Bag							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Any%29_method_end
Bag.exit	A			Perl 6 Bag							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Any%29_sub_exit
Bag.export	A			Perl 6 Bag							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_trait_is_export
Bag.flat	A			Perl 6 Bag							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Any%29_method_flat
Bag.gist	A			Perl 6 Bag							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_routine_gist
Bag.grab	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_grab
Bag.grabpairs	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_grabpairs
Bag.hash	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_hash
Bag.invert	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_invert
Bag.isa	A			Perl 6 Bag							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_routine_isa
Bag.item	A			Perl 6 Bag							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_method_item
Bag.keys	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_keys
Bag.kv	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_kv
Bag.kxxv	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_kxxv
Bag.list	A			Perl 6 Bag							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Any%29_method_list
Bag.map	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Any%29_method_map
Bag.new	A			Perl 6 Bag							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_method_new
Bag.new-from-pairs	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_new-from-pairs
Bag.none	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Any%29_method_none
Bag.not	A			Perl 6 Bag							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_method_not
Bag.one	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Any%29_method_one
Bag.pairs	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_pairs
Bag.pairup	A			Perl 6 Bag							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Any%29_method_pairup
Bag.perl	A			Perl 6 Bag							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_routine_perl
Bag.pick	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_pick
Bag.pickpairs	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_pickpairs
Bag.print	A			Perl 6 Bag							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_method_print
Bag.push	A			Perl 6 Bag							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Any%29_method_push
Bag.put	A			Perl 6 Bag							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_method_put
Bag.return	A			Perl 6 Bag							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_method_return
Bag.return-rw	A			Perl 6 Bag							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_method_return-rw
Bag.reverse	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Any%29_routine_reverse
Bag.roll	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_roll
Bag.say	A			Perl 6 Bag							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_method_say
Bag.so	A			Perl 6 Bag							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_method_so
Bag.sort	A			Perl 6 Bag							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Any%29_method_sort
Bag.take	A			Perl 6 Bag							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_method_take
Bag.take	A			Perl 6 Bag							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_routine_take
Bag.take-rw	A			Perl 6 Bag							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Mu%29_routine_take-rw
Bag.total	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_total
Bag.values	A			Perl 6 Bag							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bag.html#%28Baggy%29_method_values
BagHash.ACCEPTS	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Any%29_method_ACCEPTS
BagHash.ACCEPTS	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_ACCEPTS
BagHash.ACCEPTS	A			Perl 6 BagHash							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_method_ACCEPTS
BagHash.Bool	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_Bool
BagHash.Bool	A			Perl 6 BagHash							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_routine_Bool
BagHash.CREATE	A			Perl 6 BagHash							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_method_CREATE
BagHash.Set	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_Set
BagHash.SetHash	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_SetHash
BagHash.Str	A			Perl 6 BagHash							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_method_Str
BagHash.WHERE	A			Perl 6 BagHash							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_method_WHERE
BagHash.WHICH	A			Perl 6 BagHash							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_method_WHICH
BagHash.WHY	A			Perl 6 BagHash							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_method_WHY
BagHash.all	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Any%29_method_all
BagHash.antipairs	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_antipairs
BagHash.any	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Any%29_method_any
BagHash.bless	A			Perl 6 BagHash							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_method_bless
BagHash.categorize-list	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_categorize-list
BagHash.classify-list	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_classify-list
BagHash.clone	A			Perl 6 BagHash							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_method_clone
BagHash.deepmap	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Any%29_method_deepmap
BagHash.default	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_default
BagHash.defined	A			Perl 6 BagHash							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_routine_defined
BagHash.does	A			Perl 6 BagHash							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_routine_does
BagHash.duckmap	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Any%29_method_duckmap
BagHash.eager	A			Perl 6 BagHash							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Any%29_method_eager
BagHash.elems	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_elems
BagHash.elems	A			Perl 6 BagHash							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Any%29_method_elems
BagHash.emit	A			Perl 6 BagHash							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_method_emit
BagHash.end	A			Perl 6 BagHash							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Any%29_method_end
BagHash.exit	A			Perl 6 BagHash							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Any%29_sub_exit
BagHash.export	A			Perl 6 BagHash							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_trait_is_export
BagHash.flat	A			Perl 6 BagHash							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Any%29_method_flat
BagHash.gist	A			Perl 6 BagHash							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_routine_gist
BagHash.grab	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_grab
BagHash.grabpairs	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_grabpairs
BagHash.hash	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_hash
BagHash.invert	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_invert
BagHash.isa	A			Perl 6 BagHash							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_routine_isa
BagHash.item	A			Perl 6 BagHash							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_method_item
BagHash.keys	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_keys
BagHash.kv	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_kv
BagHash.kxxv	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_kxxv
BagHash.list	A			Perl 6 BagHash							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Any%29_method_list
BagHash.map	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Any%29_method_map
BagHash.new	A			Perl 6 BagHash							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_method_new
BagHash.new-from-pairs	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_new-from-pairs
BagHash.none	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Any%29_method_none
BagHash.not	A			Perl 6 BagHash							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_method_not
BagHash.one	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Any%29_method_one
BagHash.pairs	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_pairs
BagHash.pairup	A			Perl 6 BagHash							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Any%29_method_pairup
BagHash.perl	A			Perl 6 BagHash							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_routine_perl
BagHash.pick	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_pick
BagHash.pickpairs	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_pickpairs
BagHash.print	A			Perl 6 BagHash							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_method_print
BagHash.push	A			Perl 6 BagHash							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Any%29_method_push
BagHash.put	A			Perl 6 BagHash							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_method_put
BagHash.return	A			Perl 6 BagHash							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_method_return
BagHash.return-rw	A			Perl 6 BagHash							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_method_return-rw
BagHash.reverse	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Any%29_routine_reverse
BagHash.roll	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_roll
BagHash.say	A			Perl 6 BagHash							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_method_say
BagHash.so	A			Perl 6 BagHash							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_method_so
BagHash.sort	A			Perl 6 BagHash							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Any%29_method_sort
BagHash.take	A			Perl 6 BagHash							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_method_take
BagHash.take	A			Perl 6 BagHash							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_routine_take
BagHash.take-rw	A			Perl 6 BagHash							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Mu%29_routine_take-rw
BagHash.total	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_total
BagHash.values	A			Perl 6 BagHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/BagHash.html#%28Baggy%29_method_values
Baggy.ACCEPTS	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_ACCEPTS
Baggy.Bool	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_Bool
Baggy.Set	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_Set
Baggy.SetHash	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_SetHash
Baggy.antipairs	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_antipairs
Baggy.categorize-list	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_categorize-list
Baggy.classify-list	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_classify-list
Baggy.default	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_default
Baggy.elems	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_elems
Baggy.grab	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_grab
Baggy.grabpairs	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_grabpairs
Baggy.hash	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_hash
Baggy.invert	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_invert
Baggy.keys	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_keys
Baggy.kv	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_kv
Baggy.kxxv	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_kxxv
Baggy.new-from-pairs	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_new-from-pairs
Baggy.pairs	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_pairs
Baggy.pick	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_pick
Baggy.pickpairs	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_pickpairs
Baggy.roll	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_roll
Baggy.total	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_total
Baggy.values	A			Perl 6 Baggy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Baggy.html#method_values
Blob.Bool	A			Perl 6 Blob							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Blob.html#method_Bool
Blob.bytes	A			Perl 6 Blob							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Blob.html#method_bytes
Blob.decode	A			Perl 6 Blob							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Blob.html#method_decode
Blob.elems	A			Perl 6 Blob							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Blob.html#method_elems
Blob.new	A			Perl 6 Blob							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Blob.html#method_new
Blob.of	A			Perl 6 Blob							<section class="prog__container"><pre><code>method of()</code></pre><p>Returns the type constraint for elements of the positional container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Blob.html#%28Positional%29_method_of
Blob.pack	A			Perl 6 Blob							<section class="prog__container"><p>This subroutine is considered experimental, in order to use it you will need to do:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Blob.html#sub_pack
Blob.subbuf	A			Perl 6 Blob							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Blob.html#method_subbuf
Blob.unpack	A			Perl 6 Blob							<section class="prog__container"><p>This method is considered experimental, in order to use it you will need to do:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Blob.html#method_unpack
Block.ACCEPTS	A			Perl 6 Block							<section class="prog__container"><pre><code>multi method ACCEPTS(Code:D: Mu $topic)</code></pre><p>Usually calls the code object and passes $topic as an argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Block.html#%28Code%29_method_ACCEPTS
Block.ACCEPTS	R	Callable.ACCEPTS										
Block.ACCEPTS	R	Callable.ACCEPTS										
Block.Bool	R	Callable.Bool										
Block.CALL-ME	R	Callable.CALL-ME										
Block.CREATE	R	Callable.CREATE										
Block.Str	A			Perl 6 Block							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Block.html#%28Code%29_method_Str
Block.Str	R	Callable.Str										
Block.WHERE	R	Callable.WHERE										
Block.WHICH	R	Callable.WHICH										
Block.WHY	R	Callable.WHY										
Block.all	R	Callable.all										
Block.any	R	Callable.any										
Block.arity	A			Perl 6 Block							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Block.html#%28Code%29_method_arity
Block.assuming	R	Callable.assuming										
Block.bless	R	Callable.bless										
Block.clone	R	Callable.clone										
Block.count	A			Perl 6 Block							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Block.html#%28Code%29_method_count
Block.deepmap	R	Callable.deepmap										
Block.defined	R	Callable.defined										
Block.does	R	Callable.does										
Block.duckmap	R	Callable.duckmap										
Block.eager	R	Callable.eager										
Block.elems	R	Callable.elems										
Block.emit	R	Callable.emit										
Block.end	R	Callable.end										
Block.exit	R	Callable.exit										
Block.export	R	Callable.export										
Block.file	A			Perl 6 Block							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Block.html#%28Code%29_method_file
Block.flat	R	Callable.flat										
Block.gist	R	Callable.gist										
Block.isa	R	Callable.isa										
Block.item	R	Callable.item										
Block.line	A			Perl 6 Block							<section class="prog__container"><p>Defined as&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Block.html#%28Code%29_method_line
Block.list	R	Callable.list										
Block.map	R	Callable.map										
Block.new	R	Callable.new										
Block.none	R	Callable.none										
Block.not	R	Callable.not										
Block.one	R	Callable.one										
Block.pairup	R	Callable.pairup										
Block.perl	R	Callable.perl										
Block.print	R	Callable.print										
Block.push	R	Callable.push										
Block.put	R	Callable.put										
Block.return	R	Callable.return										
Block.return-rw	R	Callable.return-rw										
Block.reverse	R	Callable.reverse										
Block.say	R	Callable.say										
Block.signature	A			Perl 6 Block							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Block.html#%28Code%29_method_signature
Block.so	R	Callable.so										
Block.sort	R	Callable.sort										
Block.take	R	Callable.take										
Block.take	R	Callable.take										
Block.take-rw	R	Callable.take-rw										
Bool.?	A			Perl 6 Bool							<section class="prog__container"><pre><code>multi sub prefix:&lt;?&gt;(Mu --&gt; Bool:D)</code></pre><p>Coerces its argument to Bool.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bool.html#prefix_%3F
Bool.ACCEPTS	R	Real.ACCEPTS										
Bool.ACCEPTS	R	Real.ACCEPTS										
Bool.Bool	R	Real.Bool										
Bool.CREATE	R	Real.CREATE										
Bool.EVAL	R	Real.EVAL										
Bool.EVALFILE	R	Real.EVALFILE										
Bool.IO	R	Real.IO										
Bool.Numeric	A			Perl 6 Bool							<section class="prog__container"><pre><code>multi method Numeric(Bool:D --&gt; Int:D)</code></pre><p>Returns the value part of the enum pair.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bool.html#routine_Numeric
Bool.Rat	R	Real.Rat										
Bool.Str	R	Real.Str										
Bool.WHERE	R	Real.WHERE										
Bool.WHICH	R	Real.WHICH										
Bool.WHY	R	Real.WHY										
Bool.abs	R	Real.abs										
Bool.acos	R	Real.acos										
Bool.acosec	R	Real.acosec										
Bool.acosech	R	Real.acosech										
Bool.acosh	R	Real.acosh										
Bool.acotan	R	Real.acotan										
Bool.acotanh	R	Real.acotanh										
Bool.all	R	Real.all										
Bool.any	R	Real.any										
Bool.asec	R	Real.asec										
Bool.asech	R	Real.asech										
Bool.asin	R	Real.asin										
Bool.asinh	R	Real.asinh										
Bool.atan	R	Real.atan										
Bool.atan2	R	Real.atan2										
Bool.atanh	R	Real.atanh										
Bool.base	R	Real.base										
Bool.bless	R	Real.bless										
Bool.ceiling	R	Real.ceiling										
Bool.ceiling	R	Real.ceiling										
Bool.chars	R	Real.chars										
Bool.chomp	R	Real.chomp										
Bool.chop	R	Real.chop										
Bool.chr	A			Perl 6 Bool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bool.html#%28Int%29_routine_chr
Bool.chr	R	Real.chr										
Bool.chrs	R	Real.chrs										
Bool.cis	R	Real.cis										
Bool.clone	R	Real.clone										
Bool.codes	R	Real.codes										
Bool.comb	R	Real.comb										
Bool.conj	R	Real.conj										
Bool.contains	R	Real.contains										
Bool.cos	R	Real.cos										
Bool.cosec	R	Real.cosec										
Bool.cosech	R	Real.cosech										
Bool.cosh	R	Real.cosh										
Bool.cotan	R	Real.cotan										
Bool.cotanh	R	Real.cotanh										
Bool.deepmap	R	Real.deepmap										
Bool.defined	R	Real.defined										
Bool.div	A			Perl 6 Bool							<section class="prog__container"><pre><code>multi sub infix:&lt;div&gt;(Int:D, Int:D --&gt; Int:D)</code></pre><p>Does an integer division, rounded down.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bool.html#%28Int%29_infix_div
Bool.does	R	Real.does										
Bool.duckmap	R	Real.duckmap										
Bool.eager	R	Real.eager										
Bool.elems	R	Real.elems										
Bool.emit	R	Real.emit										
Bool.end	R	Real.end										
Bool.enums	A			Perl 6 Bool							<section class="prog__container"><pre><code>method enums(--&gt; Hash:D)</code></pre><p>Returns a Hash of enum-pairs.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bool.html#routine_enums
Bool.exit	R	Real.exit										
Bool.exp	R	Real.exp										
Bool.expmod	A			Perl 6 Bool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bool.html#%28Int%29_routine_expmod
Bool.export	R	Real.export										
Bool.fc	R	Real.fc										
Bool.flat	R	Real.flat										
Bool.flip	R	Real.flip										
Bool.floor	R	Real.floor										
Bool.floor	R	Real.floor										
Bool.fmt	R	Real.fmt										
Bool.gist	R	Real.gist										
Bool.index	R	Real.index										
Bool.is-prime	A			Perl 6 Bool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bool.html#%28Int%29_routine_is-prime
Bool.isa	R	Real.isa										
Bool.item	R	Real.item										
Bool.lc	R	Real.lc										
Bool.lines	R	Real.lines										
Bool.list	R	Real.list										
Bool.log	R	Real.log										
Bool.log10	R	Real.log10										
Bool.lsb	A			Perl 6 Bool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bool.html#%28Int%29_routine_lsb
Bool.map	R	Real.map										
Bool.match	R	Real.match										
Bool.msb	A			Perl 6 Bool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bool.html#%28Int%29_routine_msb
Bool.new	R	Real.new										
Bool.none	R	Real.none										
Bool.not	R	Real.not										
Bool.one	R	Real.one										
Bool.ord	R	Real.ord										
Bool.ords	R	Real.ords										
Bool.pairup	R	Real.pairup										
Bool.perl	R	Real.perl										
Bool.pick	A			Perl 6 Bool							<section class="prog__container"><pre><code>multi method pick(Bool:U --&gt; Bool:D)multi method pick(Bool:U $count --&gt; Seq:D)</code></pre><p>Returns True or False if called without any argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bool.html#routine_pick
Bool.polymod	A			Perl 6 Bool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bool.html#%28Int%29_method_polymod
Bool.pred	A			Perl 6 Bool							<section class="prog__container"><pre><code>method pred(--&gt; Bool:D)</code></pre><p>Returns False.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bool.html#routine_pred
Bool.print	R	Real.print										
Bool.push	R	Real.push										
Bool.put	R	Real.put										
Bool.rand	R	Real.rand										
Bool.rand	R	Real.rand										
Bool.return	R	Real.return										
Bool.return-rw	R	Real.return-rw										
Bool.reverse	R	Real.reverse										
Bool.rindex	R	Real.rindex										
Bool.roll	A			Perl 6 Bool							<section class="prog__container"><pre><code>multi method roll(Bool:U --&gt; Bool:D)multi method roll(Bool:U $count --&gt; Seq:D)</code></pre><p>Returns True or False if called without any argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bool.html#routine_roll
Bool.roots	R	Real.roots										
Bool.round	R	Real.round										
Bool.round	R	Real.round										
Bool.samecase	R	Real.samecase										
Bool.say	R	Real.say										
Bool.sec	R	Real.sec										
Bool.sech	R	Real.sech										
Bool.sign	R	Real.sign										
Bool.sign	R	Real.sign										
Bool.sin	R	Real.sin										
Bool.sinh	R	Real.sinh										
Bool.so	A			Perl 6 Bool							<section class="prog__container"><pre><code>multi sub prefix:&lt;so&gt;(Mu --&gt; Bool:D)</code></pre><p>Coerces its argument to Bool, has looser precedence than prefix:&lt;?&gt; .&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bool.html#prefix_so
Bool.so	R	Real.so										
Bool.sort	R	Real.sort										
Bool.split	R	Real.split										
Bool.sqrt	R	Real.sqrt										
Bool.substr	R	Real.substr										
Bool.succ	A			Perl 6 Bool							<section class="prog__container"><pre><code>method succ(--&gt; Bool:D)</code></pre><p>Returns True.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bool.html#routine_succ
Bool.take	R	Real.take										
Bool.take	R	Real.take										
Bool.take-rw	R	Real.take-rw										
Bool.tan	R	Real.tan										
Bool.tanh	R	Real.tanh										
Bool.tc	R	Real.tc										
Bool.tclc	R	Real.tclc										
Bool.trim	R	Real.trim										
Bool.trim-leading	R	Real.trim-leading										
Bool.trim-trailing	R	Real.trim-trailing										
Bool.truncate	R	Real.truncate										
Bool.truncate	R	Real.truncate										
Bool.uc	R	Real.uc										
Bool.unimatch	R	Real.unimatch										
Bool.uniname	R	Real.uniname										
Bool.uninames	R	Real.uninames										
Bool.uniprop	R	Real.uniprop										
Bool.uniprops	R	Real.uniprops										
Bool.unival	A			Perl 6 Bool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Bool.html#%28Int%29_routine_unival
Bool.unpolar	R	Real.unpolar										
Bool.wordcase	R	Real.wordcase										
Bool.words	R	Real.words										
Buf.Bool	A			Perl 6 Buf							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Buf.html#%28Blob%29_method_Bool
Buf.bytes	A			Perl 6 Buf							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Buf.html#%28Blob%29_method_bytes
Buf.decode	A			Perl 6 Buf							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Buf.html#%28Blob%29_method_decode
Buf.elems	A			Perl 6 Buf							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Buf.html#%28Blob%29_method_elems
Buf.new	A			Perl 6 Buf							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Buf.html#%28Blob%29_method_new
Buf.of	A			Perl 6 Buf							<section class="prog__container"><pre><code>method of()</code></pre><p>Returns the type constraint for elements of the positional container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Buf.html#%28Positional%29_method_of
Buf.pack	A			Perl 6 Buf							<section class="prog__container"><p>This subroutine is considered experimental, in order to use it you will need to do:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Buf.html#%28Blob%29_sub_pack
Buf.subbuf	A			Perl 6 Buf							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Buf.html#%28Blob%29_method_subbuf
Buf.unpack	A			Perl 6 Buf							<section class="prog__container"><p>This method is considered experimental, in order to use it you will need to do:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Buf.html#%28Blob%29_method_unpack
CALL-ME	D								*[[Callable.CALL-ME]], this method is required for postfix:«( )» and postfix:«.( )».\n*[[Code.CALL-ME]], this method is required for postfix:«( )» and postfix:«.( )».			
CREATE	D								*[[AST.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Any.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Attribute.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Bag.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[BagHash.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[CallFrame.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Callable.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Cancellation.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Capture.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Channel.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Code.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Complex.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Cool.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[CurrentThreadScheduler.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Cursor.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Date.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[DateTime.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Duration.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Exception.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Failure.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[FatRat.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Grammar.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Hash.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Instant.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Int.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Iterable.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Junction.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Label.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[List.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Lock.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Map.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Match.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Mix.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[MixHash.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Mu.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Nil.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Num.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Numeric.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[ObjAt.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Pair.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Parameter.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Positional.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Proc.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Promise.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Proxy.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Range.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Rat.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Rational.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Real.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Scalar.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Semaphore.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Seq.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Set.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[SetHash.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Signature.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Stash.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Str.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Supplier.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Tap.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Thread.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[ThreadPoolScheduler.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Uni.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Variable.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Version.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[Whatever.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.\n*[[supplies.CREATE]], allocates a new object of the same type as the invocant, without initializing any attributes.			
CallFrame.ACCEPTS	A			Perl 6 CallFrame							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Any%29_method_ACCEPTS
CallFrame.ACCEPTS	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_method_ACCEPTS
CallFrame.Bool	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_routine_Bool
CallFrame.CREATE	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_method_CREATE
CallFrame.Str	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_method_Str
CallFrame.WHERE	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_method_WHERE
CallFrame.WHICH	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_method_WHICH
CallFrame.WHY	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_method_WHY
CallFrame.all	A			Perl 6 CallFrame							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Any%29_method_all
CallFrame.any	A			Perl 6 CallFrame							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Any%29_method_any
CallFrame.bless	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_method_bless
CallFrame.callframe	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>sub callframe(Int $level = 0)</code></pre><p>Returns a CallFrame object for the given level.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#sub_callframe
CallFrame.clone	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_method_clone
CallFrame.code	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>method code(CallFrame:D:)</code></pre><p>Return the callable code for the current block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#method_code
CallFrame.deepmap	A			Perl 6 CallFrame							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Any%29_method_deepmap
CallFrame.defined	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_routine_defined
CallFrame.does	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_routine_does
CallFrame.duckmap	A			Perl 6 CallFrame							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Any%29_method_duckmap
CallFrame.eager	A			Perl 6 CallFrame							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Any%29_method_eager
CallFrame.elems	A			Perl 6 CallFrame							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Any%29_method_elems
CallFrame.emit	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_method_emit
CallFrame.end	A			Perl 6 CallFrame							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Any%29_method_end
CallFrame.exit	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Any%29_sub_exit
CallFrame.export	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_trait_is_export
CallFrame.file	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>method file(CallFrame:D:)</code></pre><p>This is a shortcut for looking up the file annotation.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#method_file
CallFrame.flat	A			Perl 6 CallFrame							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Any%29_method_flat
CallFrame.gist	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_routine_gist
CallFrame.isa	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_routine_isa
CallFrame.item	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_method_item
CallFrame.level	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>method level(CallFrame:D:)</code></pre><p>Return the absolute level of the frame in the stack.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#method_level
CallFrame.line	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>method line(CallFrame:D:)</code></pre><p>This is a shortcut for looking up the line annotation.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#method_line
CallFrame.list	A			Perl 6 CallFrame							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Any%29_method_list
CallFrame.map	A			Perl 6 CallFrame							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Any%29_method_map
CallFrame.my	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>method my(CallFrame:D:)</code></pre><p>Return a Hash that names all the variables and their values associated with the lexical scope of the frame.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#method_my
CallFrame.new	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_method_new
CallFrame.none	A			Perl 6 CallFrame							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Any%29_method_none
CallFrame.not	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_method_not
CallFrame.one	A			Perl 6 CallFrame							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Any%29_method_one
CallFrame.pairup	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Any%29_method_pairup
CallFrame.perl	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_routine_perl
CallFrame.print	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_method_print
CallFrame.push	A			Perl 6 CallFrame							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Any%29_method_push
CallFrame.put	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_method_put
CallFrame.return	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_method_return
CallFrame.return-rw	A			Perl 6 CallFrame							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_method_return-rw
CallFrame.reverse	A			Perl 6 CallFrame							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Any%29_routine_reverse
CallFrame.say	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_method_say
CallFrame.so	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_method_so
CallFrame.sort	A			Perl 6 CallFrame							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Any%29_method_sort
CallFrame.take	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_method_take
CallFrame.take	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_routine_take
CallFrame.take-rw	A			Perl 6 CallFrame							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CallFrame.html#%28Mu%29_routine_take-rw
Callable.CALL-ME	A			Perl 6 Callable							<section class="prog__container"><pre><code>method CALL-ME(Callable:D $self: |arguments)</code></pre><p>This method is required for postfix:«( )» and postfix:«.( )».&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Callable.html#method_CALL-ME
Callable.assuming	A			Perl 6 Callable							<section class="prog__container"><pre><code>method assuming(Callable:D $self: |primers)</code></pre><p>Returns a Callable that implements the same behaviour as the original, but has the values passed to .assuming already bound to the corresponding parameters.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Callable.html#method_assuming
Cancellation.ACCEPTS	A			Perl 6 Cancellation							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Any%29_method_ACCEPTS
Cancellation.ACCEPTS	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_method_ACCEPTS
Cancellation.Bool	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_routine_Bool
Cancellation.CREATE	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_method_CREATE
Cancellation.Str	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_method_Str
Cancellation.WHERE	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_method_WHERE
Cancellation.WHICH	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_method_WHICH
Cancellation.WHY	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_method_WHY
Cancellation.all	A			Perl 6 Cancellation							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Any%29_method_all
Cancellation.any	A			Perl 6 Cancellation							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Any%29_method_any
Cancellation.bless	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_method_bless
Cancellation.cancel	A			Perl 6 Cancellation							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#method_cancel
Cancellation.clone	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_method_clone
Cancellation.deepmap	A			Perl 6 Cancellation							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Any%29_method_deepmap
Cancellation.defined	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_routine_defined
Cancellation.does	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_routine_does
Cancellation.duckmap	A			Perl 6 Cancellation							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Any%29_method_duckmap
Cancellation.eager	A			Perl 6 Cancellation							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Any%29_method_eager
Cancellation.elems	A			Perl 6 Cancellation							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Any%29_method_elems
Cancellation.emit	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_method_emit
Cancellation.end	A			Perl 6 Cancellation							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Any%29_method_end
Cancellation.exit	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Any%29_sub_exit
Cancellation.export	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_trait_is_export
Cancellation.flat	A			Perl 6 Cancellation							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Any%29_method_flat
Cancellation.gist	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_routine_gist
Cancellation.isa	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_routine_isa
Cancellation.item	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_method_item
Cancellation.list	A			Perl 6 Cancellation							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Any%29_method_list
Cancellation.map	A			Perl 6 Cancellation							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Any%29_method_map
Cancellation.new	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_method_new
Cancellation.none	A			Perl 6 Cancellation							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Any%29_method_none
Cancellation.not	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_method_not
Cancellation.one	A			Perl 6 Cancellation							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Any%29_method_one
Cancellation.pairup	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Any%29_method_pairup
Cancellation.perl	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_routine_perl
Cancellation.print	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_method_print
Cancellation.push	A			Perl 6 Cancellation							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Any%29_method_push
Cancellation.put	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_method_put
Cancellation.return	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_method_return
Cancellation.return-rw	A			Perl 6 Cancellation							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_method_return-rw
Cancellation.reverse	A			Perl 6 Cancellation							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Any%29_routine_reverse
Cancellation.say	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_method_say
Cancellation.so	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_method_so
Cancellation.sort	A			Perl 6 Cancellation							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Any%29_method_sort
Cancellation.take	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_method_take
Cancellation.take	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_routine_take
Cancellation.take-rw	A			Perl 6 Cancellation							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cancellation.html#%28Mu%29_routine_take-rw
Capture.ACCEPTS	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Any%29_method_ACCEPTS
Capture.ACCEPTS	A			Perl 6 Capture							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_method_ACCEPTS
Capture.Bool	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#method_Bool
Capture.Bool	A			Perl 6 Capture							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_routine_Bool
Capture.CREATE	A			Perl 6 Capture							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_method_CREATE
Capture.Capture	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#method_Capture
Capture.Numeric	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#method_Numeric
Capture.Str	A			Perl 6 Capture							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_method_Str
Capture.WHERE	A			Perl 6 Capture							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_method_WHERE
Capture.WHICH	A			Perl 6 Capture							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_method_WHICH
Capture.WHY	A			Perl 6 Capture							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_method_WHY
Capture.all	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Any%29_method_all
Capture.antipairs	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#method_antipairs
Capture.any	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Any%29_method_any
Capture.bless	A			Perl 6 Capture							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_method_bless
Capture.clone	A			Perl 6 Capture							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_method_clone
Capture.deepmap	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Any%29_method_deepmap
Capture.defined	A			Perl 6 Capture							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_routine_defined
Capture.does	A			Perl 6 Capture							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_routine_does
Capture.duckmap	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Any%29_method_duckmap
Capture.eager	A			Perl 6 Capture							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Any%29_method_eager
Capture.elems	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#method_elems
Capture.elems	A			Perl 6 Capture							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Any%29_method_elems
Capture.emit	A			Perl 6 Capture							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_method_emit
Capture.end	A			Perl 6 Capture							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Any%29_method_end
Capture.exit	A			Perl 6 Capture							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Any%29_sub_exit
Capture.export	A			Perl 6 Capture							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_trait_is_export
Capture.flat	A			Perl 6 Capture							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Any%29_method_flat
Capture.gist	A			Perl 6 Capture							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_routine_gist
Capture.hash	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#method_hash
Capture.isa	A			Perl 6 Capture							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_routine_isa
Capture.item	A			Perl 6 Capture							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_method_item
Capture.keys	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#method_keys
Capture.kv	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#method_kv
Capture.list	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#method_list
Capture.list	A			Perl 6 Capture							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Any%29_method_list
Capture.map	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Any%29_method_map
Capture.new	A			Perl 6 Capture							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_method_new
Capture.none	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Any%29_method_none
Capture.not	A			Perl 6 Capture							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_method_not
Capture.one	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Any%29_method_one
Capture.pairs	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#method_pairs
Capture.pairup	A			Perl 6 Capture							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Any%29_method_pairup
Capture.perl	A			Perl 6 Capture							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_routine_perl
Capture.print	A			Perl 6 Capture							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_method_print
Capture.push	A			Perl 6 Capture							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Any%29_method_push
Capture.put	A			Perl 6 Capture							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_method_put
Capture.return	A			Perl 6 Capture							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_method_return
Capture.return-rw	A			Perl 6 Capture							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_method_return-rw
Capture.reverse	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Any%29_routine_reverse
Capture.say	A			Perl 6 Capture							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_method_say
Capture.so	A			Perl 6 Capture							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_method_so
Capture.sort	A			Perl 6 Capture							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Any%29_method_sort
Capture.take	A			Perl 6 Capture							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_method_take
Capture.take	A			Perl 6 Capture							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_routine_take
Capture.take-rw	A			Perl 6 Capture							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#%28Mu%29_routine_take-rw
Capture.values	A			Perl 6 Capture							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Capture.html#method_values
Channel.ACCEPTS	A			Perl 6 Channel							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Any%29_method_ACCEPTS
Channel.ACCEPTS	A			Perl 6 Channel							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_method_ACCEPTS
Channel.Bool	A			Perl 6 Channel							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_routine_Bool
Channel.CREATE	A			Perl 6 Channel							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_method_CREATE
Channel.Str	A			Perl 6 Channel							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_method_Str
Channel.Supply	A			Perl 6 Channel							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#method_Supply
Channel.WHERE	A			Perl 6 Channel							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_method_WHERE
Channel.WHICH	A			Perl 6 Channel							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_method_WHICH
Channel.WHY	A			Perl 6 Channel							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_method_WHY
Channel.all	A			Perl 6 Channel							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Any%29_method_all
Channel.any	A			Perl 6 Channel							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Any%29_method_any
Channel.await	A			Perl 6 Channel							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#sub_await
Channel.bless	A			Perl 6 Channel							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_method_bless
Channel.clone	A			Perl 6 Channel							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_method_clone
Channel.close	A			Perl 6 Channel							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#method_close
Channel.closed	A			Perl 6 Channel							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#method_closed
Channel.deepmap	A			Perl 6 Channel							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Any%29_method_deepmap
Channel.defined	A			Perl 6 Channel							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_routine_defined
Channel.does	A			Perl 6 Channel							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_routine_does
Channel.duckmap	A			Perl 6 Channel							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Any%29_method_duckmap
Channel.eager	A			Perl 6 Channel							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Any%29_method_eager
Channel.elems	A			Perl 6 Channel							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Any%29_method_elems
Channel.emit	A			Perl 6 Channel							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_method_emit
Channel.end	A			Perl 6 Channel							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Any%29_method_end
Channel.exit	A			Perl 6 Channel							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Any%29_sub_exit
Channel.export	A			Perl 6 Channel							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_trait_is_export
Channel.fail	A			Perl 6 Channel							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#method_fail
Channel.flat	A			Perl 6 Channel							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Any%29_method_flat
Channel.gist	A			Perl 6 Channel							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_routine_gist
Channel.isa	A			Perl 6 Channel							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_routine_isa
Channel.item	A			Perl 6 Channel							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_method_item
Channel.list	A			Perl 6 Channel							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#method_list
Channel.list	A			Perl 6 Channel							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Any%29_method_list
Channel.map	A			Perl 6 Channel							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Any%29_method_map
Channel.new	A			Perl 6 Channel							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_method_new
Channel.none	A			Perl 6 Channel							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Any%29_method_none
Channel.not	A			Perl 6 Channel							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_method_not
Channel.one	A			Perl 6 Channel							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Any%29_method_one
Channel.pairup	A			Perl 6 Channel							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Any%29_method_pairup
Channel.perl	A			Perl 6 Channel							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_routine_perl
Channel.poll	A			Perl 6 Channel							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#method_poll
Channel.print	A			Perl 6 Channel							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_method_print
Channel.push	A			Perl 6 Channel							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Any%29_method_push
Channel.put	A			Perl 6 Channel							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_method_put
Channel.receive	A			Perl 6 Channel							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#method_receive
Channel.return	A			Perl 6 Channel							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_method_return
Channel.return-rw	A			Perl 6 Channel							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_method_return-rw
Channel.reverse	A			Perl 6 Channel							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Any%29_routine_reverse
Channel.say	A			Perl 6 Channel							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_method_say
Channel.send	A			Perl 6 Channel							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#method_send
Channel.so	A			Perl 6 Channel							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_method_so
Channel.sort	A			Perl 6 Channel							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Any%29_method_sort
Channel.take	A			Perl 6 Channel							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_method_take
Channel.take	A			Perl 6 Channel							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_routine_take
Channel.take-rw	A			Perl 6 Channel							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Channel.html#%28Mu%29_routine_take-rw
Code.ACCEPTS	A			Perl 6 Code							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Any%29_method_ACCEPTS
Code.ACCEPTS	A			Perl 6 Code							<section class="prog__container"><pre><code>multi method ACCEPTS(Code:D: Mu $topic)</code></pre><p>Usually calls the code object and passes $topic as an argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#method_ACCEPTS
Code.ACCEPTS	A			Perl 6 Code							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_method_ACCEPTS
Code.Bool	A			Perl 6 Code							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_routine_Bool
Code.CALL-ME	A			Perl 6 Code							<section class="prog__container"><pre><code>method CALL-ME(Callable:D $self: |arguments)</code></pre><p>This method is required for postfix:«( )» and postfix:«.( )».&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Callable%29_method_CALL-ME
Code.CREATE	A			Perl 6 Code							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_method_CREATE
Code.Str	A			Perl 6 Code							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#method_Str
Code.Str	A			Perl 6 Code							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_method_Str
Code.WHERE	A			Perl 6 Code							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_method_WHERE
Code.WHICH	A			Perl 6 Code							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_method_WHICH
Code.WHY	A			Perl 6 Code							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_method_WHY
Code.all	A			Perl 6 Code							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Any%29_method_all
Code.any	A			Perl 6 Code							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Any%29_method_any
Code.arity	A			Perl 6 Code							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#method_arity
Code.assuming	A			Perl 6 Code							<section class="prog__container"><pre><code>method assuming(Callable:D $self: |primers)</code></pre><p>Returns a Callable that implements the same behaviour as the original, but has the values passed to .assuming already bound to the corresponding parameters.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Callable%29_method_assuming
Code.bless	A			Perl 6 Code							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_method_bless
Code.clone	A			Perl 6 Code							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_method_clone
Code.count	A			Perl 6 Code							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#method_count
Code.deepmap	A			Perl 6 Code							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Any%29_method_deepmap
Code.defined	A			Perl 6 Code							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_routine_defined
Code.does	A			Perl 6 Code							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_routine_does
Code.duckmap	A			Perl 6 Code							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Any%29_method_duckmap
Code.eager	A			Perl 6 Code							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Any%29_method_eager
Code.elems	A			Perl 6 Code							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Any%29_method_elems
Code.emit	A			Perl 6 Code							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_method_emit
Code.end	A			Perl 6 Code							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Any%29_method_end
Code.exit	A			Perl 6 Code							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Any%29_sub_exit
Code.export	A			Perl 6 Code							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_trait_is_export
Code.file	A			Perl 6 Code							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#method_file
Code.flat	A			Perl 6 Code							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Any%29_method_flat
Code.gist	A			Perl 6 Code							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_routine_gist
Code.isa	A			Perl 6 Code							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_routine_isa
Code.item	A			Perl 6 Code							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_method_item
Code.line	A			Perl 6 Code							<section class="prog__container"><p>Defined as&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#method_line
Code.list	A			Perl 6 Code							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Any%29_method_list
Code.map	A			Perl 6 Code							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Any%29_method_map
Code.new	A			Perl 6 Code							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_method_new
Code.none	A			Perl 6 Code							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Any%29_method_none
Code.not	A			Perl 6 Code							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_method_not
Code.of	A			Perl 6 Code							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#of
Code.one	A			Perl 6 Code							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Any%29_method_one
Code.pairup	A			Perl 6 Code							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Any%29_method_pairup
Code.perl	A			Perl 6 Code							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_routine_perl
Code.print	A			Perl 6 Code							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_method_print
Code.push	A			Perl 6 Code							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Any%29_method_push
Code.put	A			Perl 6 Code							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_method_put
Code.return	A			Perl 6 Code							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_method_return
Code.return-rw	A			Perl 6 Code							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_method_return-rw
Code.reverse	A			Perl 6 Code							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Any%29_routine_reverse
Code.say	A			Perl 6 Code							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_method_say
Code.signature	A			Perl 6 Code							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#method_signature
Code.so	A			Perl 6 Code							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_method_so
Code.sort	A			Perl 6 Code							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Any%29_method_sort
Code.take	A			Perl 6 Code							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_method_take
Code.take	A			Perl 6 Code							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_routine_take
Code.take-rw	A			Perl 6 Code							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Code.html#%28Mu%29_routine_take-rw
Complex.ACCEPTS	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Any%29_method_ACCEPTS
Complex.ACCEPTS	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_method_ACCEPTS
Complex.ACCEPTS	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi method ACCEPTS(Numeric:D: $other)</code></pre><p>Returns True if $other is numerically the same as the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Numeric%29_method_ACCEPTS
Complex.Bool	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi method Bool(Numeric:D:)</code></pre><p>Returns False if the number is equivalent to zero, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Numeric%29_method_Bool
Complex.Bool	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_routine_Bool
Complex.CREATE	A			Perl 6 Complex							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_method_CREATE
Complex.EVAL	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_EVAL
Complex.EVALFILE	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_EVALFILE
Complex.IO	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_method_IO
Complex.Int	A			Perl 6 Complex							<section class="prog__container"><pre><code>method Int(Numeric:D: --&gt; Int:D)</code></pre><p>If this Numeric is equivalent to a Real, return the equivalent of calling truncate on that Real to get an Int.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Numeric%29_method_Int
Complex.Num	A			Perl 6 Complex							<section class="prog__container"><pre><code>method Num(Numeric:D: --&gt; Num:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real as a Num as accurately as is possible.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Numeric%29_method_Num
Complex.Rat	A			Perl 6 Complex							<section class="prog__container"><pre><code>method Rat(Numeric:D: Real $epsilon = 1.0e-6 --&gt; Rat:D)</code></pre><p>If this Numeric is equivalent to a Real, return a Rat which is within $epsilon of that Real's value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Numeric%29_method_Rat
Complex.Real	A			Perl 6 Complex							<section class="prog__container"><pre><code>method Real(Numeric:D: --&gt; Real:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Numeric%29_method_Real
Complex.Str	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_method_Str
Complex.WHERE	A			Perl 6 Complex							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_method_WHERE
Complex.WHICH	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_method_WHICH
Complex.WHY	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_method_WHY
Complex.abs	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_abs
Complex.abs	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#method_abs
Complex.abs	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi sub    abs(Numeric:D  --&gt; Real:D)multi method abs(Numeric:D: --&gt; Real:D)</code></pre><p>Returns the absolute value of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Numeric%29_routine_abs
Complex.acos	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_acos
Complex.acosec	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_acosec
Complex.acosech	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_acosech
Complex.acosh	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_acosh
Complex.acotan	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_acotan
Complex.acotanh	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_acotanh
Complex.all	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Any%29_method_all
Complex.any	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Any%29_method_any
Complex.asec	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_asec
Complex.asech	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_asech
Complex.asin	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_asin
Complex.asinh	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_asinh
Complex.atan	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_atan
Complex.atan2	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_atan2
Complex.atanh	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_atanh
Complex.bless	A			Perl 6 Complex							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_method_bless
Complex.ceiling	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_ceiling
Complex.ceiling	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#method_ceiling
Complex.chars	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_chars
Complex.chomp	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_chomp
Complex.chop	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_chop
Complex.chr	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_chr
Complex.chrs	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_chrs
Complex.cis	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_cis
Complex.clone	A			Perl 6 Complex							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_method_clone
Complex.codes	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_codes
Complex.comb	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_comb
Complex.conj	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_method_conj
Complex.conj	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#method_conj
Complex.conj	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi method conj(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the complex conjugate of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Numeric%29_method_conj
Complex.contains	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi method contains(Cool:D: Str(Cool) $needle, Cool $start? --&gt; Bool:D)</code></pre><p>Returns True if the invocant contains the $needle at any position within the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_method_contains
Complex.cos	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_cos
Complex.cosec	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_cosec
Complex.cosech	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_cosech
Complex.cosh	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_cosh
Complex.cotan	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_cotan
Complex.cotanh	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_cotanh
Complex.deepmap	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Any%29_method_deepmap
Complex.defined	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_routine_defined
Complex.does	A			Perl 6 Complex							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_routine_does
Complex.duckmap	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Any%29_method_duckmap
Complex.eager	A			Perl 6 Complex							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Any%29_method_eager
Complex.elems	A			Perl 6 Complex							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Any%29_method_elems
Complex.emit	A			Perl 6 Complex							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_method_emit
Complex.end	A			Perl 6 Complex							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Any%29_method_end
Complex.exit	A			Perl 6 Complex							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Any%29_sub_exit
Complex.exp	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_method_exp
Complex.exp	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi sub    exp(Numeric:D, Numeric:D $base = e --&gt; Numeric:D)multi method exp(Numeric:D: Numeric:D $base = e --&gt; Numeric:D)</code></pre><p>Returns $base to the power of the number, or e to the power of the number if called without a second argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Numeric%29_routine_exp
Complex.export	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_trait_is_export
Complex.fc	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_fc
Complex.flat	A			Perl 6 Complex							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Any%29_method_flat
Complex.flip	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_flip
Complex.floor	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_floor
Complex.floor	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#method_floor
Complex.fmt	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_method_fmt
Complex.gist	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#method_gist
Complex.gist	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_routine_gist
Complex.i	A			Perl 6 Complex							<section class="prog__container"><p>Adding a trailing i to a number literal makes it a Complex, for example:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#postfix_i
Complex.im	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#method_im
Complex.index	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_index
Complex.isNaN	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#method_isNaN
Complex.isa	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_routine_isa
Complex.item	A			Perl 6 Complex							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_method_item
Complex.lc	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_lc
Complex.lines	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_lines
Complex.list	A			Perl 6 Complex							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Any%29_method_list
Complex.log	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_log
Complex.log	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi sub    log(Numeric:D, Numeric $base = e --&gt; Numeric:D)multi method log(Numeric:D: Numeric $base = e --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base $base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Numeric%29_routine_log
Complex.log10	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_log10
Complex.log10	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi sub    log10(Numeric:D  --&gt; Numeric:D)multi method log10(Numeric:D: --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base 10.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Numeric%29_routine_log10
Complex.map	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Any%29_method_map
Complex.match	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_match
Complex.narrow	A			Perl 6 Complex							<section class="prog__container"><pre><code>method narrow(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the number converted to the narrowest type that can hold it without loss of precision.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Numeric%29_method_narrow
Complex.new	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#method_new
Complex.new	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_method_new
Complex.none	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Any%29_method_none
Complex.not	A			Perl 6 Complex							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_method_not
Complex.one	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Any%29_method_one
Complex.ord	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_ord
Complex.ords	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_ords
Complex.pairup	A			Perl 6 Complex							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Any%29_method_pairup
Complex.perl	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#method_perl
Complex.perl	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_routine_perl
Complex.polar	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#method_polar
Complex.pred	A			Perl 6 Complex							<section class="prog__container"><pre><code>method pred(Numeric:D:)</code></pre><p>Returns the number decremented by one (predecessor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Numeric%29_method_pred
Complex.print	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_method_print
Complex.push	A			Perl 6 Complex							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Any%29_method_push
Complex.put	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_method_put
Complex.rand	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_method_rand
Complex.re	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#method_re
Complex.reals	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#method_reals
Complex.return	A			Perl 6 Complex							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_method_return
Complex.return-rw	A			Perl 6 Complex							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_method_return-rw
Complex.reverse	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Any%29_routine_reverse
Complex.rindex	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_rindex
Complex.roots	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_roots
Complex.roots	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi method roots(Numeric:D: Int:D $n --&gt; Positional)</code></pre><p>Returns a list of the $n complex roots, which evaluate to the original number when raised to the $nth power.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Numeric%29_method_roots
Complex.round	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_round
Complex.round	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#method_round
Complex.samecase	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_samecase
Complex.say	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_method_say
Complex.sec	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_method_sec
Complex.sech	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_sech
Complex.sign	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_method_sign
Complex.sin	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_sin
Complex.sinh	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_sinh
Complex.so	A			Perl 6 Complex							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_method_so
Complex.sort	A			Perl 6 Complex							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Any%29_method_sort
Complex.split	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_split
Complex.sqrt	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_sqrt
Complex.sqrt	A			Perl 6 Complex							<section class="prog__container"><pre><code>multi sub    sqrt(Numeric:D --&gt; Numeric:D)multi method sqrt(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns a square root of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Numeric%29_routine_sqrt
Complex.substr	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_substr
Complex.succ	A			Perl 6 Complex							<section class="prog__container"><pre><code>method succ(Numeric:D:)</code></pre><p>Returns the number incremented by one (successor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Numeric%29_method_succ
Complex.take	A			Perl 6 Complex							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_method_take
Complex.take	A			Perl 6 Complex							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_routine_take
Complex.take-rw	A			Perl 6 Complex							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Mu%29_routine_take-rw
Complex.tan	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_tan
Complex.tanh	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_tanh
Complex.tc	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_tc
Complex.tclc	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_tclc
Complex.trim	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_trim
Complex.trim-leading	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_trim-leading
Complex.trim-trailing	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_trim-trailing
Complex.truncate	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_truncate
Complex.truncate	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#method_truncate
Complex.uc	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_uc
Complex.unimatch	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_method_unimatch
Complex.uniname	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_method_uniname
Complex.uninames	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_method_uninames
Complex.uniprop	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_method_uniprop
Complex.uniprops	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_method_uniprops
Complex.unpolar	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_method_unpolar
Complex.wordcase	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_routine_wordcase
Complex.words	A			Perl 6 Complex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Complex.html#%28Cool%29_method_words
ComplexStr.ACCEPTS	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi method ACCEPTS(Str:D: $other)</code></pre><p>Returns True if the string is the same as $other.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_ACCEPTS
ComplexStr.ACCEPTS	R	Numeric.ACCEPTS										
ComplexStr.ACCEPTS	R	Numeric.ACCEPTS										
ComplexStr.ACCEPTS	R	Numeric.ACCEPTS										
ComplexStr.Bool	R	Numeric.Bool										
ComplexStr.Bool	R	Numeric.Bool										
ComplexStr.CREATE	R	Numeric.CREATE										
ComplexStr.Complex	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>method Complex</code></pre><p>Returns the Complex value of the ComplexStr.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#method_Complex
ComplexStr.EVAL	R	Numeric.EVAL										
ComplexStr.EVALFILE	R	Numeric.EVALFILE										
ComplexStr.IO	R	Numeric.IO										
ComplexStr.Int	R	Numeric.Int										
ComplexStr.NFC	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>method NFC(Str:D: --&gt; NFC:D)</code></pre><p>Returns a codepoint string in NFC format (Unicode Normalization Form C / Composed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_NFC
ComplexStr.NFD	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>method NFD(Str:D: --&gt; NFD:D)</code></pre><p>Returns a codepoint string in NFC format (Unicode Normalization Form D / Decomposed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_NFD
ComplexStr.NFKC	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>method NFKC(Str:D: --&gt; NFKC:D)</code></pre><p>Returns a codepoint string in NFKC format (Unicode Normalization Form KC / Compatibility Composed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_NFKC
ComplexStr.NFKD	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>method NFKD(Str:D: --&gt; NFKD:D)</code></pre><p>Returns a codepoint string in NFC format (Unicode Normalization Form KD / Compatibility Decomposed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_NFKD
ComplexStr.Num	R	Numeric.Num										
ComplexStr.Numeric	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>method Numeric</code></pre><p>The numeric coercion is applied when the ComplexStr is used in a numeric context, such as a numeric comparison or smart match against a numeric value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#method_Numeric
ComplexStr.Rat	R	Numeric.Rat										
ComplexStr.Real	R	Numeric.Real										
ComplexStr.Str	A			Perl 6 ComplexStr							<section class="prog__container"><p>Returns the string value of the ComplexStr.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#method_Str
ComplexStr.Str	R	Numeric.Str										
ComplexStr.WHERE	R	Numeric.WHERE										
ComplexStr.WHICH	R	Numeric.WHICH										
ComplexStr.WHY	R	Numeric.WHY										
ComplexStr.abs	A			Perl 6 ComplexStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Complex%29_method_abs
ComplexStr.abs	R	Numeric.abs										
ComplexStr.abs	R	Numeric.abs										
ComplexStr.acos	R	Numeric.acos										
ComplexStr.acosec	R	Numeric.acosec										
ComplexStr.acosech	R	Numeric.acosech										
ComplexStr.acosh	R	Numeric.acosh										
ComplexStr.acotan	R	Numeric.acotan										
ComplexStr.acotanh	R	Numeric.acotanh										
ComplexStr.all	R	Numeric.all										
ComplexStr.any	R	Numeric.any										
ComplexStr.asec	R	Numeric.asec										
ComplexStr.asech	R	Numeric.asech										
ComplexStr.asin	R	Numeric.asin										
ComplexStr.asinh	R	Numeric.asinh										
ComplexStr.atan	R	Numeric.atan										
ComplexStr.atan2	R	Numeric.atan2										
ComplexStr.atanh	R	Numeric.atanh										
ComplexStr.bless	R	Numeric.bless										
ComplexStr.ceiling	A			Perl 6 ComplexStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Complex%29_method_ceiling
ComplexStr.ceiling	R	Numeric.ceiling										
ComplexStr.chars	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub    chars(Cool  $x --&gt; Int:D)multi sub    chars(Str:D $x --&gt; Int:D)multi sub    chars(str   $x --&gt; int)multi method chars(Str:D:   --&gt; Int:D)</code></pre><p>Returns the number of characters in the string in graphemes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_chars
ComplexStr.chars	R	Numeric.chars										
ComplexStr.chomp	A			Perl 6 ComplexStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_chomp
ComplexStr.chomp	R	Numeric.chomp										
ComplexStr.chop	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub    chop(Str:D --&gt; Str:D)multi method chop(Str:D: $chars = 1 --&gt; Str:D)</code></pre><p>Returns the string with $chars characters removed from the end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_chop
ComplexStr.chop	R	Numeric.chop										
ComplexStr.chr	R	Numeric.chr										
ComplexStr.chrs	R	Numeric.chrs										
ComplexStr.cis	R	Numeric.cis										
ComplexStr.clone	R	Numeric.clone										
ComplexStr.cmp	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub infix:&lt;cmp&gt;(ComplexStr:D $a, ComplexStr:D $b)</code></pre><p>Compare two ComplexStr objects.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#infix_cmp
ComplexStr.codes	R	Numeric.codes										
ComplexStr.comb	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub    comb(Str:D   $matcher, Str:D $input, $limit = Inf)multi sub    comb(Regex:D $matcher, Str:D $input, $limit = Inf, Bool :$match)multi sub    comb(Int:D $size, Str:D $input, $limit = Inf)multi method comb(Str:D $input:)multi method comb(Str:D $input: Str:D   $matcher, $limit = Inf)multi method comb(Str:D $input: Regex:D $matcher, $limit = Inf, Bool :$match)multi method comb(Str:D $input: Int:D $size, $limit = Inf)</code></pre><p>Searches for $matcher in $input and returns a list of all matches (as Str by default, or as Match if $match is True), limited to at most $limit matches.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_comb
ComplexStr.comb	R	Numeric.comb										
ComplexStr.conj	A			Perl 6 ComplexStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Complex%29_method_conj
ComplexStr.conj	R	Numeric.conj										
ComplexStr.conj	R	Numeric.conj										
ComplexStr.contains	R	Numeric.contains										
ComplexStr.cos	R	Numeric.cos										
ComplexStr.cosec	R	Numeric.cosec										
ComplexStr.cosech	R	Numeric.cosech										
ComplexStr.cosh	R	Numeric.cosh										
ComplexStr.cotan	R	Numeric.cotan										
ComplexStr.cotanh	R	Numeric.cotanh										
ComplexStr.deepmap	R	Numeric.deepmap										
ComplexStr.defined	R	Numeric.defined										
ComplexStr.does	R	Numeric.does										
ComplexStr.duckmap	R	Numeric.duckmap										
ComplexStr.eager	R	Numeric.eager										
ComplexStr.elems	R	Numeric.elems										
ComplexStr.emit	R	Numeric.emit										
ComplexStr.encode	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi method encode(Str:D: $encoding, $nf --&gt; Blob)</code></pre><p>Returns a Blob which represents the original string in the given encoding and normal form.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_encode
ComplexStr.end	R	Numeric.end										
ComplexStr.ends-with	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi method ends-with(Str:D: Str(Cool) $needle --&gt; True:D)</code></pre><p>Returns True if the invocant is identical to or ends with $needle.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_ends-with
ComplexStr.exit	R	Numeric.exit										
ComplexStr.exp	R	Numeric.exp										
ComplexStr.exp	R	Numeric.exp										
ComplexStr.export	R	Numeric.export										
ComplexStr.fc	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub    fc(Str:D  --&gt; Str:D)multi method fc(Str:D: --&gt; Str:D)</code></pre><p>Does a Unicode "fold case" operation suitable for doing caseless string comparisons.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_fc
ComplexStr.fc	R	Numeric.fc										
ComplexStr.flat	R	Numeric.flat										
ComplexStr.flip	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub    flip(Str:D  --&gt; Str:D)multi method flip(Str:D: --&gt; Str:D)</code></pre><p>Returns the string reversed character by character.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_flip
ComplexStr.flip	R	Numeric.flip										
ComplexStr.floor	A			Perl 6 ComplexStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Complex%29_method_floor
ComplexStr.floor	R	Numeric.floor										
ComplexStr.fmt	R	Numeric.fmt										
ComplexStr.gist	A			Perl 6 ComplexStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Complex%29_method_gist
ComplexStr.gist	R	Numeric.gist										
ComplexStr.i	A			Perl 6 ComplexStr							<section class="prog__container"><p>Adding a trailing i to a number literal makes it a Complex, for example:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Complex%29_postfix_i
ComplexStr.im	A			Perl 6 ComplexStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Complex%29_method_im
ComplexStr.indent	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi method indent(Int $steps where { $_ == 0 } )multi method indent(Int $steps where { $_ &gt; 0  } )multi method indent($steps where { .isa(Whatever) || .isa(Int) &amp;&amp; $_ &lt; 0 } )</code></pre><p>Indents each line of the string by $steps.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_indent
ComplexStr.index	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub    index(Cool $s, Str:D $needle, Cool $startpos = 0 --&gt; Int)multi method index(Cool $needle, Cool $startpos = 0 --&gt; Int)</code></pre><p>Searches for $needle in the string starting from $startpos.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_index
ComplexStr.index	R	Numeric.index										
ComplexStr.isNaN	A			Perl 6 ComplexStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Complex%29_method_isNaN
ComplexStr.isa	R	Numeric.isa										
ComplexStr.item	R	Numeric.item										
ComplexStr.lc	A			Perl 6 ComplexStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_lc
ComplexStr.lc	R	Numeric.lc										
ComplexStr.lines	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub    lines(Str:D $input, $limit = Inf --&gt; Positional)multi method lines(Str:D $input: $limit = Inf --&gt; Positional)</code></pre><p>Returns a list of lines (without trailing newline characters), i.e. the same as a call to $input.comb( / ^^ &#92;N* /, $limit ) would.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_lines
ComplexStr.lines	R	Numeric.lines										
ComplexStr.list	R	Numeric.list										
ComplexStr.log	R	Numeric.log										
ComplexStr.log	R	Numeric.log										
ComplexStr.log10	R	Numeric.log10										
ComplexStr.log10	R	Numeric.log10										
ComplexStr.map	R	Numeric.map										
ComplexStr.match	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>method match($pat, :continue(:$c), :pos(:$p), :global(:$g), :overlap(:$ov), :exhaustive(:$ex), :st(:$nd), :rd(:$th), :$nth, :$x --&gt; Match)</code></pre><p>Performs a match of the string against $pat and returns a Match object if there is a successful match, and (Any) otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_match
ComplexStr.match	R	Numeric.match										
ComplexStr.narrow	R	Numeric.narrow										
ComplexStr.new	A			Perl 6 ComplexStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Complex%29_method_new
ComplexStr.new	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>method new(Complex $i, Str $s)</code></pre><p>The constructor requires both the Complex and the Str value, when constructing one directly the values can be whatever is required:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#method_new
ComplexStr.new	R	Numeric.new										
ComplexStr.none	R	Numeric.none										
ComplexStr.not	R	Numeric.not										
ComplexStr.one	R	Numeric.one										
ComplexStr.ord	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub    ord(Str:D  --&gt; Int:D)multi method ord(Str:D: --&gt; Int:D)</code></pre><p>Returns the codepoint number of the base characters of the first grapheme in the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_ord
ComplexStr.ord	R	Numeric.ord										
ComplexStr.ords	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi method ords(Str:D: --&gt; Positional)</code></pre><p>Returns a list of Unicode codepoint numbers that describe the codepoints making up the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_ords
ComplexStr.ords	R	Numeric.ords										
ComplexStr.pairup	R	Numeric.pairup										
ComplexStr.parse-base	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub    parse-base(Str:D $num, Int:D $radix --&gt; Numeric)multi method parse-base(Str:D $num: Int:D $radix --&gt; Numeric)</code></pre><p>Performs the reverse of base by converting a string with a base-$radix number to its base-10 Numeric equivalent.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_parse-base
ComplexStr.perl	A			Perl 6 ComplexStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Complex%29_method_perl
ComplexStr.perl	R	Numeric.perl										
ComplexStr.polar	A			Perl 6 ComplexStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Complex%29_method_polar
ComplexStr.pred	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>method pred(Str:D: --&gt; Str:D)</code></pre><p>Returns the string decremented by one.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_pred
ComplexStr.pred	R	Numeric.pred										
ComplexStr.print	R	Numeric.print										
ComplexStr.push	R	Numeric.push										
ComplexStr.put	R	Numeric.put										
ComplexStr.rand	R	Numeric.rand										
ComplexStr.re	A			Perl 6 ComplexStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Complex%29_method_re
ComplexStr.reals	A			Perl 6 ComplexStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Complex%29_method_reals
ComplexStr.return	R	Numeric.return										
ComplexStr.return-rw	R	Numeric.return-rw										
ComplexStr.reverse	R	Numeric.reverse										
ComplexStr.rindex	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub    rindex(Str:D $haystack, Str:D $needle, Int $startpos = $haystack.chars --&gt; Int)multi method rindex(Str:D $haystack: Str:D $needle, Int $startpos = $haystack.chars --&gt; Int)</code></pre><p>Returns the last position of $needle in $haystack not after $startpos.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_rindex
ComplexStr.rindex	R	Numeric.rindex										
ComplexStr.roots	R	Numeric.roots										
ComplexStr.roots	R	Numeric.roots										
ComplexStr.round	A			Perl 6 ComplexStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Complex%29_method_round
ComplexStr.round	R	Numeric.round										
ComplexStr.samecase	R	Numeric.samecase										
ComplexStr.samemark	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub samemark(Str:D $string, Str:D $pattern --&gt; Str:D)method    samemark(Str:D: Str:D $pattern --&gt; Str:D)</code></pre><p>Returns a copy of $string with the mark/accent information for each character changed such that it matches the mark/accent of the corresponding character in $pattern.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_samemark
ComplexStr.say	R	Numeric.say										
ComplexStr.sec	R	Numeric.sec										
ComplexStr.sech	R	Numeric.sech										
ComplexStr.sign	R	Numeric.sign										
ComplexStr.sin	R	Numeric.sin										
ComplexStr.sinh	R	Numeric.sinh										
ComplexStr.so	R	Numeric.so										
ComplexStr.sort	R	Numeric.sort										
ComplexStr.split	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub    split(  Str:D $delimiter, Str:D $input, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi sub    split(Regex:D $delimiter, Str:D $input, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi sub    split(List:D $delimiters, Str:D $input, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi method split(Str:D:   Str:D $delimiter, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi method split(Str:D: Regex:D $delimiter, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi method split(Str:D: List:D $delimiters, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)</code></pre><p>Splits a string up into pieces based on delimiters found in the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_split
ComplexStr.split	R	Numeric.split										
ComplexStr.sprintf	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub sprintf( Str:D $format, *@args --&gt; Str:D)</code></pre><p>This function is mostly identical to the C library sprintf and printf functions.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_sub_sprintf
ComplexStr.sqrt	R	Numeric.sqrt										
ComplexStr.sqrt	R	Numeric.sqrt										
ComplexStr.starts-with	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi method starts-with(Str:D: Str(Cool) $needle --&gt; True:D)</code></pre><p>Returns True if the invocant is identical to or starts with $needle.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_starts-with
ComplexStr.subst	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi method subst(Str:D: $matcher, $replacement, *%opts)</code></pre><p>Returns the invocant string where $matcher is replaced by $replacement (or the original string, if no match was found).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_subst
ComplexStr.subst-mutate	A			Perl 6 ComplexStr							<section class="prog__container"><p>Where subst returns the modified string and leaves the original unchanged, it is possible to mutate the original string by using subst-mutate.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_subst-mutate
ComplexStr.substr	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub    substr(Str:D $s, Int:D $from, Int:D $chars = $s.chars - $from --&gt; Str:D)multi sub    substr(Str:D $s, Range $from-to --&gt; Str:D)multi method substr(Str:D $s: Int:D $from, Int:D $chars = $s.chars - $from --&gt; Str:D)multi method substr(Str:D $s: Range $from-to --&gt; Str:D)</code></pre><p>Returns a part of the string, starting from the character with index $from (where the first character has index 0) and with length $chars.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_substr
ComplexStr.substr	R	Numeric.substr										
ComplexStr.substr-eq	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi method substr-eq(Str:D:  Str(Cool) $test-string, Int(Cool) $from --&gt; Bool)multi method substr-eq(Cool:D: Str(Cool) $test-string, Int(Cool) $from --&gt; Bool)</code></pre><p>Returns True if the $test-string exactly matches the String object, starting from the given initial index $from.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_substr-eq
ComplexStr.substr-rw	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>method substr-rw($from, $length?)</code></pre><p>A version of substr that returns a Proxy functioning as a writable reference to a part of a string variable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_substr-rw
ComplexStr.succ	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>method succ(Str:D --&gt; Str:D)</code></pre><p>Returns the string incremented by one.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_succ
ComplexStr.succ	R	Numeric.succ										
ComplexStr.take	R	Numeric.take										
ComplexStr.take	R	Numeric.take										
ComplexStr.take-rw	R	Numeric.take-rw										
ComplexStr.tan	R	Numeric.tan										
ComplexStr.tanh	R	Numeric.tanh										
ComplexStr.tc	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub    tc(Str:D  --&gt; Str:D)multi method tc(Str:D: --&gt; Str:D)</code></pre><p>Does a Unicode "titlecase" operation, that is changes the first character in the string to title case, or to upper case if the character has no title case mapping&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_tc
ComplexStr.tc	R	Numeric.tc										
ComplexStr.tclc	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub    tclc(Str:D  --&gt; Str:D)multi method tclc(Str:D: --&gt; Str:D)</code></pre><p>Turns the first character to title case, and all other characters to lower case&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_tclc
ComplexStr.tclc	R	Numeric.tclc										
ComplexStr.trans	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi method trans(Str:D: Pair:D &#92;what, *%n --&gt; Str)multi method trans(Str:D: *@changes, :complement(:$c), :squash(:$s), :delete(:$d) --&gt; Str)</code></pre><p>Replaces one or many characters with one or many characters.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_trans
ComplexStr.trim	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>method trim(Str:D: --&gt; Str)</code></pre><p>Remove leading and trailing whitespace.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_trim
ComplexStr.trim	R	Numeric.trim										
ComplexStr.trim-leading	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>method trim-leading(Str:D: --&gt; Str)</code></pre><p>Remove the whitespace characters from the beginning of a string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_trim-leading
ComplexStr.trim-leading	R	Numeric.trim-leading										
ComplexStr.trim-trailing	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>method trim-trailing(Str:D: --&gt; Str)</code></pre><p>Remove the whitespace characters from the end of a string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_trim-trailing
ComplexStr.trim-trailing	R	Numeric.trim-trailing										
ComplexStr.truncate	A			Perl 6 ComplexStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Complex%29_method_truncate
ComplexStr.truncate	R	Numeric.truncate										
ComplexStr.uc	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub    uc(Str:D  --&gt; Str:D)multi method uc(Str:D: --&gt; Str:D)</code></pre><p>Returns an uppercase version of the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_uc
ComplexStr.uc	R	Numeric.uc										
ComplexStr.unimatch	R	Numeric.unimatch										
ComplexStr.uniname	R	Numeric.uniname										
ComplexStr.uninames	R	Numeric.uninames										
ComplexStr.uniprop	R	Numeric.uniprop										
ComplexStr.uniprops	R	Numeric.uniprops										
ComplexStr.unival	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi method unival(Str:D --&gt; Numeric)</code></pre><p>Returns the numeric value that the first codepoint in the invocant represents, or NaN if it's not numeric.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_unival
ComplexStr.univals	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi method univals(Str:D --&gt; List)</code></pre><p>Returns a list of numeric values represented by each codepoint in the invocant string, and NaN for non-numeric characters.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_method_univals
ComplexStr.unpolar	R	Numeric.unpolar										
ComplexStr.val	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub val(Str:D $MAYBEVAL, :$val-or-fail)</code></pre><p>Given a Str that may be parsable as a numeric value, it will attempt to construct the appropriate allomorph, returning one of IntStr, NumStr, RatStr or ComplexStr or a plain Str if a numeric value cannot be parsed.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_sub_val
ComplexStr.wordcase	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub    wordcase(Cool $x  --&gt; Str)multi sub    wordcase(Str:D $x --&gt; Str)multi method wordcase(Str:D: :&amp;filter = &amp;tclc, Mu :$where = True --&gt; Str)</code></pre><p>Returns a string in which &amp;filter has been applied to all the words that match $where.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_wordcase
ComplexStr.wordcase	R	Numeric.wordcase										
ComplexStr.words	A			Perl 6 ComplexStr							<section class="prog__container"><pre><code>multi sub    words(Str:D $input, $limit = Inf --&gt; Positional)multi method words(Str:D $input: $limit = Inf --&gt; Positional)</code></pre><p>Returns a list of non-whitespace bits, i.e. the same as a call to $input.comb( / &#92;S+ /, $limit ) would.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ComplexStr.html#%28Str%29_routine_words
ComplexStr.words	R	Numeric.words										
Cool.ACCEPTS	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Any%29_method_ACCEPTS
Cool.ACCEPTS	A			Perl 6 Cool							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_method_ACCEPTS
Cool.Bool	A			Perl 6 Cool							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_routine_Bool
Cool.CREATE	A			Perl 6 Cool							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_method_CREATE
Cool.EVAL	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_EVAL
Cool.EVALFILE	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_EVALFILE
Cool.IO	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#method_IO
Cool.Str	A			Perl 6 Cool							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_method_Str
Cool.WHERE	A			Perl 6 Cool							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_method_WHERE
Cool.WHICH	A			Perl 6 Cool							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_method_WHICH
Cool.WHY	A			Perl 6 Cool							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_method_WHY
Cool.abs	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_abs
Cool.acos	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_acos
Cool.acosec	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_acosec
Cool.acosech	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_acosech
Cool.acosh	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_acosh
Cool.acotan	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_acotan
Cool.acotanh	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_acotanh
Cool.all	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Any%29_method_all
Cool.any	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Any%29_method_any
Cool.asec	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_asec
Cool.asech	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_asech
Cool.asin	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_asin
Cool.asinh	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_asinh
Cool.atan	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_atan
Cool.atan2	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_atan2
Cool.atanh	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_atanh
Cool.bless	A			Perl 6 Cool							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_method_bless
Cool.ceiling	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_ceiling
Cool.chars	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_chars
Cool.chomp	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_chomp
Cool.chop	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_chop
Cool.chr	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_chr
Cool.chrs	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_chrs
Cool.cis	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_cis
Cool.clone	A			Perl 6 Cool							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_method_clone
Cool.codes	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_codes
Cool.comb	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_comb
Cool.conj	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#method_conj
Cool.contains	A			Perl 6 Cool							<section class="prog__container"><pre><code>multi method contains(Cool:D: Str(Cool) $needle, Cool $start? --&gt; Bool:D)</code></pre><p>Returns True if the invocant contains the $needle at any position within the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#method_contains
Cool.cos	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_cos
Cool.cosec	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_cosec
Cool.cosech	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_cosech
Cool.cosh	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_cosh
Cool.cotan	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_cotan
Cool.cotanh	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_cotanh
Cool.deepmap	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Any%29_method_deepmap
Cool.defined	A			Perl 6 Cool							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_routine_defined
Cool.does	A			Perl 6 Cool							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_routine_does
Cool.duckmap	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Any%29_method_duckmap
Cool.eager	A			Perl 6 Cool							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Any%29_method_eager
Cool.elems	A			Perl 6 Cool							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Any%29_method_elems
Cool.emit	A			Perl 6 Cool							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_method_emit
Cool.end	A			Perl 6 Cool							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Any%29_method_end
Cool.exit	A			Perl 6 Cool							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Any%29_sub_exit
Cool.exp	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#method_exp
Cool.export	A			Perl 6 Cool							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_trait_is_export
Cool.fc	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_fc
Cool.flat	A			Perl 6 Cool							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Any%29_method_flat
Cool.flip	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_flip
Cool.floor	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_floor
Cool.fmt	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#method_fmt
Cool.gist	A			Perl 6 Cool							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_routine_gist
Cool.index	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_index
Cool.isa	A			Perl 6 Cool							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_routine_isa
Cool.item	A			Perl 6 Cool							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_method_item
Cool.lc	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_lc
Cool.lines	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_lines
Cool.list	A			Perl 6 Cool							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Any%29_method_list
Cool.log	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_log
Cool.log10	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_log10
Cool.map	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Any%29_method_map
Cool.match	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_match
Cool.new	A			Perl 6 Cool							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_method_new
Cool.none	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Any%29_method_none
Cool.not	A			Perl 6 Cool							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_method_not
Cool.one	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Any%29_method_one
Cool.ord	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_ord
Cool.ords	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_ords
Cool.pairup	A			Perl 6 Cool							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Any%29_method_pairup
Cool.perl	A			Perl 6 Cool							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_routine_perl
Cool.print	A			Perl 6 Cool							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_method_print
Cool.push	A			Perl 6 Cool							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Any%29_method_push
Cool.put	A			Perl 6 Cool							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_method_put
Cool.rand	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#method_rand
Cool.return	A			Perl 6 Cool							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_method_return
Cool.return-rw	A			Perl 6 Cool							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_method_return-rw
Cool.reverse	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Any%29_routine_reverse
Cool.rindex	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_rindex
Cool.roots	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_roots
Cool.round	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_round
Cool.samecase	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_samecase
Cool.say	A			Perl 6 Cool							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_method_say
Cool.sec	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#method_sec
Cool.sech	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_sech
Cool.sign	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#method_sign
Cool.sin	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_sin
Cool.sinh	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_sinh
Cool.so	A			Perl 6 Cool							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_method_so
Cool.sort	A			Perl 6 Cool							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Any%29_method_sort
Cool.split	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_split
Cool.sqrt	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_sqrt
Cool.substr	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_substr
Cool.take	A			Perl 6 Cool							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_method_take
Cool.take	A			Perl 6 Cool							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_routine_take
Cool.take-rw	A			Perl 6 Cool							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#%28Mu%29_routine_take-rw
Cool.tan	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_tan
Cool.tanh	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_tanh
Cool.tc	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_tc
Cool.tclc	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_tclc
Cool.trim	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_trim
Cool.trim-leading	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_trim-leading
Cool.trim-trailing	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_trim-trailing
Cool.truncate	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_truncate
Cool.uc	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_uc
Cool.unimatch	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#method_unimatch
Cool.uniname	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#method_uniname
Cool.uninames	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#method_uninames
Cool.uniprop	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#method_uniprop
Cool.uniprops	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#method_uniprops
Cool.unpolar	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#method_unpolar
Cool.wordcase	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#routine_wordcase
Cool.words	A			Perl 6 Cool							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cool.html#method_words
CurrentThreadScheduler.ACCEPTS	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Any%29_method_ACCEPTS
CurrentThreadScheduler.ACCEPTS	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_method_ACCEPTS
CurrentThreadScheduler.Bool	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_routine_Bool
CurrentThreadScheduler.CREATE	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_method_CREATE
CurrentThreadScheduler.Str	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_method_Str
CurrentThreadScheduler.WHERE	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_method_WHERE
CurrentThreadScheduler.WHICH	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_method_WHICH
CurrentThreadScheduler.WHY	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_method_WHY
CurrentThreadScheduler.all	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Any%29_method_all
CurrentThreadScheduler.any	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Any%29_method_any
CurrentThreadScheduler.bless	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_method_bless
CurrentThreadScheduler.clone	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_method_clone
CurrentThreadScheduler.cue	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>method cue(:&amp;code, Instant :$at, :$in, :$every, :$times = 1; :&amp;catch)</code></pre><p>Schedules a callable (&amp;code) for execution.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Scheduler%29_method_cue
CurrentThreadScheduler.deepmap	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Any%29_method_deepmap
CurrentThreadScheduler.defined	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_routine_defined
CurrentThreadScheduler.does	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_routine_does
CurrentThreadScheduler.duckmap	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Any%29_method_duckmap
CurrentThreadScheduler.eager	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Any%29_method_eager
CurrentThreadScheduler.elems	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Any%29_method_elems
CurrentThreadScheduler.emit	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_method_emit
CurrentThreadScheduler.end	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Any%29_method_end
CurrentThreadScheduler.exit	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Any%29_sub_exit
CurrentThreadScheduler.export	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_trait_is_export
CurrentThreadScheduler.flat	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Any%29_method_flat
CurrentThreadScheduler.gist	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_routine_gist
CurrentThreadScheduler.isa	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_routine_isa
CurrentThreadScheduler.item	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_method_item
CurrentThreadScheduler.list	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Any%29_method_list
CurrentThreadScheduler.map	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Any%29_method_map
CurrentThreadScheduler.new	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_method_new
CurrentThreadScheduler.none	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Any%29_method_none
CurrentThreadScheduler.not	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_method_not
CurrentThreadScheduler.one	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Any%29_method_one
CurrentThreadScheduler.pairup	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Any%29_method_pairup
CurrentThreadScheduler.perl	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_routine_perl
CurrentThreadScheduler.print	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_method_print
CurrentThreadScheduler.push	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Any%29_method_push
CurrentThreadScheduler.put	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_method_put
CurrentThreadScheduler.return	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_method_return
CurrentThreadScheduler.return-rw	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_method_return-rw
CurrentThreadScheduler.reverse	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Any%29_routine_reverse
CurrentThreadScheduler.say	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_method_say
CurrentThreadScheduler.so	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_method_so
CurrentThreadScheduler.sort	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Any%29_method_sort
CurrentThreadScheduler.take	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_method_take
CurrentThreadScheduler.take	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_routine_take
CurrentThreadScheduler.take-rw	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Mu%29_routine_take-rw
CurrentThreadScheduler.uncaught_handler	A			Perl 6 CurrentThreadScheduler							<section class="prog__container"><pre><code>method uncaught_handler() is rw</code></pre><p>RW-Accessor for the handler that is caught for uncaught exceptions from the code that is being scheduled and run.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/CurrentThreadScheduler.html#%28Scheduler%29_method_uncaught_handler
Cursor.ACCEPTS	A			Perl 6 Cursor							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Any%29_method_ACCEPTS
Cursor.ACCEPTS	A			Perl 6 Cursor							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_method_ACCEPTS
Cursor.Bool	A			Perl 6 Cursor							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_routine_Bool
Cursor.CREATE	A			Perl 6 Cursor							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_method_CREATE
Cursor.Str	A			Perl 6 Cursor							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_method_Str
Cursor.WHERE	A			Perl 6 Cursor							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_method_WHERE
Cursor.WHICH	A			Perl 6 Cursor							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_method_WHICH
Cursor.WHY	A			Perl 6 Cursor							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_method_WHY
Cursor.all	A			Perl 6 Cursor							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Any%29_method_all
Cursor.any	A			Perl 6 Cursor							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Any%29_method_any
Cursor.bless	A			Perl 6 Cursor							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_method_bless
Cursor.clone	A			Perl 6 Cursor							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_method_clone
Cursor.deepmap	A			Perl 6 Cursor							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Any%29_method_deepmap
Cursor.defined	A			Perl 6 Cursor							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_routine_defined
Cursor.does	A			Perl 6 Cursor							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_routine_does
Cursor.duckmap	A			Perl 6 Cursor							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Any%29_method_duckmap
Cursor.eager	A			Perl 6 Cursor							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Any%29_method_eager
Cursor.elems	A			Perl 6 Cursor							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Any%29_method_elems
Cursor.emit	A			Perl 6 Cursor							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_method_emit
Cursor.end	A			Perl 6 Cursor							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Any%29_method_end
Cursor.exit	A			Perl 6 Cursor							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Any%29_sub_exit
Cursor.export	A			Perl 6 Cursor							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_trait_is_export
Cursor.flat	A			Perl 6 Cursor							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Any%29_method_flat
Cursor.gist	A			Perl 6 Cursor							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_routine_gist
Cursor.isa	A			Perl 6 Cursor							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_routine_isa
Cursor.item	A			Perl 6 Cursor							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_method_item
Cursor.list	A			Perl 6 Cursor							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Any%29_method_list
Cursor.map	A			Perl 6 Cursor							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Any%29_method_map
Cursor.new	A			Perl 6 Cursor							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_method_new
Cursor.none	A			Perl 6 Cursor							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Any%29_method_none
Cursor.not	A			Perl 6 Cursor							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_method_not
Cursor.one	A			Perl 6 Cursor							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Any%29_method_one
Cursor.pairup	A			Perl 6 Cursor							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Any%29_method_pairup
Cursor.perl	A			Perl 6 Cursor							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_routine_perl
Cursor.print	A			Perl 6 Cursor							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_method_print
Cursor.push	A			Perl 6 Cursor							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Any%29_method_push
Cursor.put	A			Perl 6 Cursor							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_method_put
Cursor.return	A			Perl 6 Cursor							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_method_return
Cursor.return-rw	A			Perl 6 Cursor							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_method_return-rw
Cursor.reverse	A			Perl 6 Cursor							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Any%29_routine_reverse
Cursor.say	A			Perl 6 Cursor							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_method_say
Cursor.so	A			Perl 6 Cursor							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_method_so
Cursor.sort	A			Perl 6 Cursor							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Any%29_method_sort
Cursor.take	A			Perl 6 Cursor							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_method_take
Cursor.take	A			Perl 6 Cursor							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_routine_take
Cursor.take-rw	A			Perl 6 Cursor							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Cursor.html#%28Mu%29_routine_take-rw
DEPRECATED	D								*[[Macro.DEPRECATED]], marks a routine as deprecated, optionally with a message what to use instead.\n*[[Method.DEPRECATED]], marks a routine as deprecated, optionally with a message what to use instead.\n*[[Regex.DEPRECATED]], marks a routine as deprecated, optionally with a message what to use instead.\n*[[Routine.DEPRECATED]], marks a routine as deprecated, optionally with a message what to use instead.\n*[[Sub.DEPRECATED]], marks a routine as deprecated, optionally with a message what to use instead.\n*[[Submethod.DEPRECATED]], marks a routine as deprecated, optionally with a message what to use instead.			
Date.ACCEPTS	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Any%29_method_ACCEPTS
Date.ACCEPTS	A			Perl 6 Date							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_method_ACCEPTS
Date.Bool	A			Perl 6 Date							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_routine_Bool
Date.CREATE	A			Perl 6 Date							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_method_CREATE
Date.Date	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#method_Date
Date.DateTime	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#method_DateTime
Date.IO	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Dateish%29_method_IO
Date.Str	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#method_Str
Date.Str	A			Perl 6 Date							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_method_Str
Date.WHERE	A			Perl 6 Date							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_method_WHERE
Date.WHICH	A			Perl 6 Date							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_method_WHICH
Date.WHY	A			Perl 6 Date							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_method_WHY
Date.all	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Any%29_method_all
Date.any	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Any%29_method_any
Date.bless	A			Perl 6 Date							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_method_bless
Date.clone	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#method_clone
Date.clone	A			Perl 6 Date							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_method_clone
Date.day	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Dateish%29_method_day
Date.day-of-month	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Dateish%29_method_day-of-month
Date.day-of-week	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Dateish%29_method_day-of-week
Date.day-of-year	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Dateish%29_method_day-of-year
Date.daycount	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Dateish%29_method_daycount
Date.days-in-month	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Dateish%29_method_days-in-month
Date.deepmap	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Any%29_method_deepmap
Date.defined	A			Perl 6 Date							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_routine_defined
Date.does	A			Perl 6 Date							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_routine_does
Date.duckmap	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Any%29_method_duckmap
Date.eager	A			Perl 6 Date							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Any%29_method_eager
Date.earlier	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#method_earlier
Date.elems	A			Perl 6 Date							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Any%29_method_elems
Date.emit	A			Perl 6 Date							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_method_emit
Date.end	A			Perl 6 Date							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Any%29_method_end
Date.exit	A			Perl 6 Date							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Any%29_sub_exit
Date.export	A			Perl 6 Date							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_trait_is_export
Date.flat	A			Perl 6 Date							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Any%29_method_flat
Date.formatter	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Dateish%29_method_formatter
Date.gist	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#method_gist
Date.gist	A			Perl 6 Date							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_routine_gist
Date.infix:&lt;+&gt;	A			Perl 6 Date							<section class="prog__container"><pre><code>sub infix:&lt;+&gt; (Date:D, Int:D --&gt; Date:D)sub infix:&lt;+&gt; (Int:D, Date:D --&gt; Date:D)</code></pre><p>Takes an Int and adds that many days to the given Date object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#sub_infix%3A%3C%2B%3E
Date.infix:&lt;-&gt;	A			Perl 6 Date							<section class="prog__container"><pre><code>sub infix:&lt;-&gt; (Date:D, Int:D --&gt; Date:D)sub infix:&lt;-&gt; (Date:D, Date:D --&gt; Int:D)</code></pre><p>Takes a date to subtract from and either an Int, representing the number of days to subtract, or another Date object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#sub_infix%3A%3C-%3E
Date.is-leap-year	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Dateish%29_method_is-leap-year
Date.isa	A			Perl 6 Date							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_routine_isa
Date.item	A			Perl 6 Date							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_method_item
Date.later	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#method_later
Date.list	A			Perl 6 Date							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Any%29_method_list
Date.map	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Any%29_method_map
Date.month	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Dateish%29_method_month
Date.new	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#method_new
Date.new	A			Perl 6 Date							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_method_new
Date.new-from-daycount	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#method_new-from-daycount
Date.none	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Any%29_method_none
Date.not	A			Perl 6 Date							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_method_not
Date.one	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Any%29_method_one
Date.pairup	A			Perl 6 Date							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Any%29_method_pairup
Date.perl	A			Perl 6 Date							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_routine_perl
Date.pred	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#method_pred
Date.print	A			Perl 6 Date							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_method_print
Date.push	A			Perl 6 Date							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Any%29_method_push
Date.put	A			Perl 6 Date							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_method_put
Date.return	A			Perl 6 Date							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_method_return
Date.return-rw	A			Perl 6 Date							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_method_return-rw
Date.reverse	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Any%29_routine_reverse
Date.say	A			Perl 6 Date							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_method_say
Date.sleep	A			Perl 6 Date							<section class="prog__container"><pre><code>sub sleep($seconds = Inf --&gt; Nil)</code></pre><p>Attempt to sleep for the given number of $seconds.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#sub_sleep
Date.sleep-timer	A			Perl 6 Date							<section class="prog__container"><pre><code>sub sleep-timer(Real $seconds = Inf --&gt; Duration)</code></pre><p>This function is just like sleep, but returns the amount of time remaining to sleep as a Duration (which will be 0 if the call was not interrupted).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#sub_sleep-timer
Date.sleep-until	A			Perl 6 Date							<section class="prog__container"><pre><code>sub sleep-until(Instant $until --&gt; Bool)</code></pre><p>Works just like sleep but checks the current time and goes back to sleep if accidentally woken up early, to guarantee waiting until the specified time.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#sub_sleep-until
Date.so	A			Perl 6 Date							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_method_so
Date.sort	A			Perl 6 Date							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Any%29_method_sort
Date.succ	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#method_succ
Date.take	A			Perl 6 Date							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_method_take
Date.take	A			Perl 6 Date							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_routine_take
Date.take-rw	A			Perl 6 Date							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Mu%29_routine_take-rw
Date.today	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#method_today
Date.truncated-to	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#method_truncated-to
Date.week	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Dateish%29_method_week
Date.week-number	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Dateish%29_method_week-number
Date.week-year	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Dateish%29_method_week-year
Date.weekday-of-month	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Dateish%29_method_weekday-of-month
Date.year	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Dateish%29_method_year
Date.yyyy-mm-dd	A			Perl 6 Date							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Date.html#%28Dateish%29_method_yyyy-mm-dd
DateTime.ACCEPTS	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Any%29_method_ACCEPTS
DateTime.ACCEPTS	A			Perl 6 DateTime							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_method_ACCEPTS
DateTime.Bool	A			Perl 6 DateTime							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_routine_Bool
DateTime.CREATE	A			Perl 6 DateTime							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_method_CREATE
DateTime.Date	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_Date
DateTime.DateTime	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_DateTime
DateTime.IO	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Dateish%29_method_IO
DateTime.Instant	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_Instant
DateTime.Str	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_Str
DateTime.Str	A			Perl 6 DateTime							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_method_Str
DateTime.WHERE	A			Perl 6 DateTime							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_method_WHERE
DateTime.WHICH	A			Perl 6 DateTime							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_method_WHICH
DateTime.WHY	A			Perl 6 DateTime							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_method_WHY
DateTime.all	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Any%29_method_all
DateTime.any	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Any%29_method_any
DateTime.bless	A			Perl 6 DateTime							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_method_bless
DateTime.clone	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_clone
DateTime.clone	A			Perl 6 DateTime							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_method_clone
DateTime.day	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Dateish%29_method_day
DateTime.day-of-month	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Dateish%29_method_day-of-month
DateTime.day-of-week	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Dateish%29_method_day-of-week
DateTime.day-of-year	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Dateish%29_method_day-of-year
DateTime.daycount	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Dateish%29_method_daycount
DateTime.days-in-month	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Dateish%29_method_days-in-month
DateTime.deepmap	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Any%29_method_deepmap
DateTime.defined	A			Perl 6 DateTime							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_routine_defined
DateTime.does	A			Perl 6 DateTime							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_routine_does
DateTime.duckmap	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Any%29_method_duckmap
DateTime.eager	A			Perl 6 DateTime							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Any%29_method_eager
DateTime.earlier	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_earlier
DateTime.elems	A			Perl 6 DateTime							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Any%29_method_elems
DateTime.emit	A			Perl 6 DateTime							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_method_emit
DateTime.end	A			Perl 6 DateTime							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Any%29_method_end
DateTime.exit	A			Perl 6 DateTime							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Any%29_sub_exit
DateTime.export	A			Perl 6 DateTime							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_trait_is_export
DateTime.flat	A			Perl 6 DateTime							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Any%29_method_flat
DateTime.formatter	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Dateish%29_method_formatter
DateTime.gist	A			Perl 6 DateTime							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_routine_gist
DateTime.hh-mm-ss	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_hh-mm-ss
DateTime.hour	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_hour
DateTime.in-timezone	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_in-timezone
DateTime.infix:&lt;+&gt;	A			Perl 6 DateTime							<section class="prog__container"><pre><code>sub infix:&lt;+&gt; (DateTime:D, Duration:D --&gt; DateTime:D)sub infix:&lt;+&gt; (Duration:D, DateTime:D --&gt; DateTime:D)</code></pre><p>Takes a DateTime and increases it by the given Duration, preserving the timezone.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#sub_infix%3A%3C%2B%3E
DateTime.infix:&lt;-&gt;	A			Perl 6 DateTime							<section class="prog__container"><pre><code>sub infix:&lt;-&gt; (DateTime:D, Duration:D --&gt; DateTime:D)sub infix:&lt;-&gt; (DateTime:D, DateTime:D --&gt; Duration:D)</code></pre><p>Takes a DateTime to subtract from and either a Duration or another DateTime object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#sub_infix%3A%3C-%3E
DateTime.is-leap-year	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Dateish%29_method_is-leap-year
DateTime.isa	A			Perl 6 DateTime							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_routine_isa
DateTime.item	A			Perl 6 DateTime							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_method_item
DateTime.later	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_later
DateTime.list	A			Perl 6 DateTime							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Any%29_method_list
DateTime.local	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_local
DateTime.map	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Any%29_method_map
DateTime.minute	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_minute
DateTime.month	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Dateish%29_method_month
DateTime.new	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_new
DateTime.new	A			Perl 6 DateTime							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_method_new
DateTime.none	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Any%29_method_none
DateTime.not	A			Perl 6 DateTime							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_method_not
DateTime.now	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_now
DateTime.offset	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_offset
DateTime.offset-in-hours	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_offset-in-hours
DateTime.offset-in-minutes	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_offset-in-minutes
DateTime.one	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Any%29_method_one
DateTime.pairup	A			Perl 6 DateTime							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Any%29_method_pairup
DateTime.perl	A			Perl 6 DateTime							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_routine_perl
DateTime.posix	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_posix
DateTime.print	A			Perl 6 DateTime							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_method_print
DateTime.push	A			Perl 6 DateTime							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Any%29_method_push
DateTime.put	A			Perl 6 DateTime							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_method_put
DateTime.return	A			Perl 6 DateTime							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_method_return
DateTime.return-rw	A			Perl 6 DateTime							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_method_return-rw
DateTime.reverse	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Any%29_routine_reverse
DateTime.say	A			Perl 6 DateTime							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_method_say
DateTime.second	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_second
DateTime.so	A			Perl 6 DateTime							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_method_so
DateTime.sort	A			Perl 6 DateTime							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Any%29_method_sort
DateTime.take	A			Perl 6 DateTime							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_method_take
DateTime.take	A			Perl 6 DateTime							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_routine_take
DateTime.take-rw	A			Perl 6 DateTime							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Mu%29_routine_take-rw
DateTime.timezone	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_timezone
DateTime.truncated-to	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_truncated-to
DateTime.utc	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_utc
DateTime.week	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Dateish%29_method_week
DateTime.week-number	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Dateish%29_method_week-number
DateTime.week-year	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Dateish%29_method_week-year
DateTime.weekday-of-month	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Dateish%29_method_weekday-of-month
DateTime.whole-second	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#method_whole-second
DateTime.year	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Dateish%29_method_year
DateTime.yyyy-mm-dd	A			Perl 6 DateTime							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/DateTime.html#%28Dateish%29_method_yyyy-mm-dd
Dateish.IO	A			Perl 6 Dateish							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Dateish.html#method_IO
Dateish.day	A			Perl 6 Dateish							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Dateish.html#method_day
Dateish.day-of-month	A			Perl 6 Dateish							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Dateish.html#method_day-of-month
Dateish.day-of-week	A			Perl 6 Dateish							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Dateish.html#method_day-of-week
Dateish.day-of-year	A			Perl 6 Dateish							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Dateish.html#method_day-of-year
Dateish.daycount	A			Perl 6 Dateish							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Dateish.html#method_daycount
Dateish.days-in-month	A			Perl 6 Dateish							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Dateish.html#method_days-in-month
Dateish.formatter	A			Perl 6 Dateish							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Dateish.html#method_formatter
Dateish.is-leap-year	A			Perl 6 Dateish							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Dateish.html#method_is-leap-year
Dateish.month	A			Perl 6 Dateish							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Dateish.html#method_month
Dateish.week	A			Perl 6 Dateish							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Dateish.html#method_week
Dateish.week-number	A			Perl 6 Dateish							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Dateish.html#method_week-number
Dateish.week-year	A			Perl 6 Dateish							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Dateish.html#method_week-year
Dateish.weekday-of-month	A			Perl 6 Dateish							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Dateish.html#method_weekday-of-month
Dateish.year	A			Perl 6 Dateish							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Dateish.html#method_year
Dateish.yyyy-mm-dd	A			Perl 6 Dateish							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Dateish.html#method_yyyy-mm-dd
Duration.ACCEPTS	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Any%29_method_ACCEPTS
Duration.ACCEPTS	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_method_ACCEPTS
Duration.ACCEPTS	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi method ACCEPTS(Numeric:D: $other)</code></pre><p>Returns True if $other is numerically the same as the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Numeric%29_method_ACCEPTS
Duration.Bool	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi method Bool(Numeric:D:)</code></pre><p>Returns False if the number is equivalent to zero, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Numeric%29_method_Bool
Duration.Bool	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_routine_Bool
Duration.CREATE	A			Perl 6 Duration							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_method_CREATE
Duration.EVAL	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_EVAL
Duration.EVALFILE	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_EVALFILE
Duration.IO	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_method_IO
Duration.Int	A			Perl 6 Duration							<section class="prog__container"><pre><code>method Int(Numeric:D: --&gt; Int:D)</code></pre><p>If this Numeric is equivalent to a Real, return the equivalent of calling truncate on that Real to get an Int.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Numeric%29_method_Int
Duration.Num	A			Perl 6 Duration							<section class="prog__container"><pre><code>method Num(Numeric:D: --&gt; Num:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real as a Num as accurately as is possible.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Numeric%29_method_Num
Duration.Rat	A			Perl 6 Duration							<section class="prog__container"><pre><code>method Rat(Numeric:D: Real $epsilon = 1.0e-6 --&gt; Rat:D)</code></pre><p>If this Numeric is equivalent to a Real, return a Rat which is within $epsilon of that Real's value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Numeric%29_method_Rat
Duration.Rat	A			Perl 6 Duration							<section class="prog__container"><pre><code>method Rat(Real:D: Real $epsilon = 1e-6)</code></pre><p>Converts the number to a Rat with the precision $epsilon.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Real%29_method_Rat
Duration.Real	A			Perl 6 Duration							<section class="prog__container"><pre><code>method Real(Numeric:D: --&gt; Real:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Numeric%29_method_Real
Duration.Str	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_method_Str
Duration.WHERE	A			Perl 6 Duration							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_method_WHERE
Duration.WHICH	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_method_WHICH
Duration.WHY	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_method_WHY
Duration.abs	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_abs
Duration.abs	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi sub    abs(Numeric:D  --&gt; Real:D)multi method abs(Numeric:D: --&gt; Real:D)</code></pre><p>Returns the absolute value of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Numeric%29_routine_abs
Duration.acos	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_acos
Duration.acosec	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_acosec
Duration.acosech	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_acosech
Duration.acosh	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_acosh
Duration.acotan	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_acotan
Duration.acotanh	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_acotanh
Duration.all	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Any%29_method_all
Duration.any	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Any%29_method_any
Duration.asec	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_asec
Duration.asech	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_asech
Duration.asin	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_asin
Duration.asinh	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_asinh
Duration.atan	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_atan
Duration.atan2	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_atan2
Duration.atanh	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_atanh
Duration.base	A			Perl 6 Duration							<section class="prog__container"><pre><code>method base(Real:D: Int:D $base where 2..36, $digits? --&gt; Str:D)</code></pre><p>Converts the number to a string, using $base as base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Real%29_method_base
Duration.bless	A			Perl 6 Duration							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_method_bless
Duration.ceiling	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_ceiling
Duration.ceiling	A			Perl 6 Duration							<section class="prog__container"><pre><code>method ceiling(Real:D --&gt; Int:D)</code></pre><p>Returns the smallest integer not less than the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Real%29_method_ceiling
Duration.chars	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_chars
Duration.chomp	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_chomp
Duration.chop	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_chop
Duration.chr	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_chr
Duration.chrs	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_chrs
Duration.cis	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_cis
Duration.clone	A			Perl 6 Duration							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_method_clone
Duration.codes	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_codes
Duration.comb	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_comb
Duration.conj	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_method_conj
Duration.conj	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi method conj(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the complex conjugate of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Numeric%29_method_conj
Duration.contains	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi method contains(Cool:D: Str(Cool) $needle, Cool $start? --&gt; Bool:D)</code></pre><p>Returns True if the invocant contains the $needle at any position within the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_method_contains
Duration.cos	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_cos
Duration.cosec	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_cosec
Duration.cosech	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_cosech
Duration.cosh	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_cosh
Duration.cotan	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_cotan
Duration.cotanh	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_cotanh
Duration.deepmap	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Any%29_method_deepmap
Duration.defined	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_routine_defined
Duration.does	A			Perl 6 Duration							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_routine_does
Duration.duckmap	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Any%29_method_duckmap
Duration.eager	A			Perl 6 Duration							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Any%29_method_eager
Duration.elems	A			Perl 6 Duration							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Any%29_method_elems
Duration.emit	A			Perl 6 Duration							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_method_emit
Duration.end	A			Perl 6 Duration							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Any%29_method_end
Duration.exit	A			Perl 6 Duration							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Any%29_sub_exit
Duration.exp	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_method_exp
Duration.exp	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi sub    exp(Numeric:D, Numeric:D $base = e --&gt; Numeric:D)multi method exp(Numeric:D: Numeric:D $base = e --&gt; Numeric:D)</code></pre><p>Returns $base to the power of the number, or e to the power of the number if called without a second argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Numeric%29_routine_exp
Duration.export	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_trait_is_export
Duration.fc	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_fc
Duration.flat	A			Perl 6 Duration							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Any%29_method_flat
Duration.flip	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_flip
Duration.floor	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_floor
Duration.floor	A			Perl 6 Duration							<section class="prog__container"><pre><code>method floor(Real:D --&gt; Int:D)</code></pre><p>Return the largest integer not greater than the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Real%29_method_floor
Duration.fmt	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_method_fmt
Duration.gist	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_routine_gist
Duration.index	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_index
Duration.isa	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_routine_isa
Duration.item	A			Perl 6 Duration							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_method_item
Duration.lc	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_lc
Duration.lines	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_lines
Duration.list	A			Perl 6 Duration							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Any%29_method_list
Duration.log	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_log
Duration.log	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi sub    log(Numeric:D, Numeric $base = e --&gt; Numeric:D)multi method log(Numeric:D: Numeric $base = e --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base $base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Numeric%29_routine_log
Duration.log10	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_log10
Duration.log10	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi sub    log10(Numeric:D  --&gt; Numeric:D)multi method log10(Numeric:D: --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base 10.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Numeric%29_routine_log10
Duration.map	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Any%29_method_map
Duration.match	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_match
Duration.narrow	A			Perl 6 Duration							<section class="prog__container"><pre><code>method narrow(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the number converted to the narrowest type that can hold it without loss of precision.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Numeric%29_method_narrow
Duration.new	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_method_new
Duration.none	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Any%29_method_none
Duration.not	A			Perl 6 Duration							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_method_not
Duration.one	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Any%29_method_one
Duration.ord	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_ord
Duration.ords	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_ords
Duration.pairup	A			Perl 6 Duration							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Any%29_method_pairup
Duration.perl	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_routine_perl
Duration.pred	A			Perl 6 Duration							<section class="prog__container"><pre><code>method pred(Numeric:D:)</code></pre><p>Returns the number decremented by one (predecessor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Numeric%29_method_pred
Duration.print	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_method_print
Duration.push	A			Perl 6 Duration							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Any%29_method_push
Duration.put	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_method_put
Duration.rand	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_method_rand
Duration.rand	A			Perl 6 Duration							<section class="prog__container"><pre><code>sub term:&lt;rand&gt; (--&gt; Num:D)method rand(Real:D: --&gt; Real:D)</code></pre><p>Returns a pseudo-random number between zero and the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Real%29_routine_rand
Duration.return	A			Perl 6 Duration							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_method_return
Duration.return-rw	A			Perl 6 Duration							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_method_return-rw
Duration.reverse	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Any%29_routine_reverse
Duration.rindex	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_rindex
Duration.roots	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_roots
Duration.roots	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi method roots(Numeric:D: Int:D $n --&gt; Positional)</code></pre><p>Returns a list of the $n complex roots, which evaluate to the original number when raised to the $nth power.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Numeric%29_method_roots
Duration.round	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_round
Duration.round	A			Perl 6 Duration							<section class="prog__container"><pre><code>method round(Real:D: $scale = 1)</code></pre><p>Rounds the number to scale $scale.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Real%29_method_round
Duration.samecase	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_samecase
Duration.say	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_method_say
Duration.sec	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_method_sec
Duration.sech	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_sech
Duration.sign	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_method_sign
Duration.sign	A			Perl 6 Duration							<section class="prog__container"><pre><code>method sign(Real:D:)</code></pre><p>Returns -1 if the number is negative, 0 if it is zero and 1 otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Real%29_method_sign
Duration.sin	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_sin
Duration.sinh	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_sinh
Duration.so	A			Perl 6 Duration							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_method_so
Duration.sort	A			Perl 6 Duration							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Any%29_method_sort
Duration.split	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_split
Duration.sqrt	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_sqrt
Duration.sqrt	A			Perl 6 Duration							<section class="prog__container"><pre><code>multi sub    sqrt(Numeric:D --&gt; Numeric:D)multi method sqrt(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns a square root of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Numeric%29_routine_sqrt
Duration.substr	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_substr
Duration.succ	A			Perl 6 Duration							<section class="prog__container"><pre><code>method succ(Numeric:D:)</code></pre><p>Returns the number incremented by one (successor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Numeric%29_method_succ
Duration.take	A			Perl 6 Duration							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_method_take
Duration.take	A			Perl 6 Duration							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_routine_take
Duration.take-rw	A			Perl 6 Duration							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Mu%29_routine_take-rw
Duration.tan	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_tan
Duration.tanh	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_tanh
Duration.tc	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_tc
Duration.tclc	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_tclc
Duration.trim	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_trim
Duration.trim-leading	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_trim-leading
Duration.trim-trailing	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_trim-trailing
Duration.truncate	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_truncate
Duration.truncate	A			Perl 6 Duration							<section class="prog__container"><pre><code>method truncate(Real:D --&gt; Int:D)</code></pre><p>Rounds the number towards zero.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Real%29_method_truncate
Duration.uc	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_uc
Duration.unimatch	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_method_unimatch
Duration.uniname	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_method_uniname
Duration.uninames	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_method_uninames
Duration.uniprop	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_method_uniprop
Duration.uniprops	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_method_uniprops
Duration.unpolar	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_method_unpolar
Duration.wordcase	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_routine_wordcase
Duration.words	A			Perl 6 Duration							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Duration.html#%28Cool%29_method_words
EVAL	D								*[[Complex.EVAL]], defined as:\n*[[Cool.EVAL]], defined as:\n*[[Duration.EVAL]], defined as:\n*[[FatRat.EVAL]], defined as:\n*[[Hash.EVAL]], defined as:\n*[[Instant.EVAL]], defined as:\n*[[Int.EVAL]], defined as:\n*[[Iterable.EVAL]], defined as:\n*[[List.EVAL]], defined as:\n*[[Map.EVAL]], defined as:\n*[[Match.EVAL]], defined as:\n*[[Nil.EVAL]], defined as:\n*[[Num.EVAL]], defined as:\n*[[Numeric.EVAL]], defined as:\n*[[Range.EVAL]], defined as:\n*[[Rat.EVAL]], defined as:\n*[[Rational.EVAL]], defined as:\n*[[Real.EVAL]], defined as:\n*[[Seq.EVAL]], defined as:\n*[[Stash.EVAL]], defined as:\n*[[Str.EVAL]], defined as:			
EVALFILE	D								*[[Complex.EVALFILE]], defined as:\n*[[Cool.EVALFILE]], defined as:\n*[[Duration.EVALFILE]], defined as:\n*[[FatRat.EVALFILE]], defined as:\n*[[Hash.EVALFILE]], defined as:\n*[[Instant.EVALFILE]], defined as:\n*[[Int.EVALFILE]], defined as:\n*[[Iterable.EVALFILE]], defined as:\n*[[List.EVALFILE]], defined as:\n*[[Map.EVALFILE]], defined as:\n*[[Match.EVALFILE]], defined as:\n*[[Nil.EVALFILE]], defined as:\n*[[Num.EVALFILE]], defined as:\n*[[Numeric.EVALFILE]], defined as:\n*[[Range.EVALFILE]], defined as:\n*[[Rat.EVALFILE]], defined as:\n*[[Rational.EVALFILE]], defined as:\n*[[Real.EVALFILE]], defined as:\n*[[Seq.EVALFILE]], defined as:\n*[[Stash.EVALFILE]], defined as:\n*[[Str.EVALFILE]], defined as:			
Exception.ACCEPTS	A			Perl 6 Exception							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Any%29_method_ACCEPTS
Exception.ACCEPTS	A			Perl 6 Exception							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_method_ACCEPTS
Exception.Bool	A			Perl 6 Exception							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_routine_Bool
Exception.CREATE	A			Perl 6 Exception							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_method_CREATE
Exception.Str	A			Perl 6 Exception							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_method_Str
Exception.WHERE	A			Perl 6 Exception							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_method_WHERE
Exception.WHICH	A			Perl 6 Exception							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_method_WHICH
Exception.WHY	A			Perl 6 Exception							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_method_WHY
Exception.all	A			Perl 6 Exception							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Any%29_method_all
Exception.any	A			Perl 6 Exception							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Any%29_method_any
Exception.backtrace	A			Perl 6 Exception							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#method_backtrace
Exception.bless	A			Perl 6 Exception							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_method_bless
Exception.clone	A			Perl 6 Exception							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_method_clone
Exception.deepmap	A			Perl 6 Exception							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Any%29_method_deepmap
Exception.defined	A			Perl 6 Exception							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_routine_defined
Exception.die	A			Perl 6 Exception							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#sub_die
Exception.does	A			Perl 6 Exception							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_routine_does
Exception.duckmap	A			Perl 6 Exception							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Any%29_method_duckmap
Exception.eager	A			Perl 6 Exception							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Any%29_method_eager
Exception.elems	A			Perl 6 Exception							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Any%29_method_elems
Exception.emit	A			Perl 6 Exception							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_method_emit
Exception.end	A			Perl 6 Exception							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Any%29_method_end
Exception.exit	A			Perl 6 Exception							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Any%29_sub_exit
Exception.export	A			Perl 6 Exception							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_trait_is_export
Exception.fail	A			Perl 6 Exception							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#method_fail
Exception.flat	A			Perl 6 Exception							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Any%29_method_flat
Exception.gist	A			Perl 6 Exception							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#method_gist
Exception.gist	A			Perl 6 Exception							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_routine_gist
Exception.isa	A			Perl 6 Exception							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_routine_isa
Exception.item	A			Perl 6 Exception							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_method_item
Exception.list	A			Perl 6 Exception							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Any%29_method_list
Exception.map	A			Perl 6 Exception							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Any%29_method_map
Exception.message	A			Perl 6 Exception							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#method_message
Exception.new	A			Perl 6 Exception							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_method_new
Exception.none	A			Perl 6 Exception							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Any%29_method_none
Exception.not	A			Perl 6 Exception							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_method_not
Exception.one	A			Perl 6 Exception							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Any%29_method_one
Exception.pairup	A			Perl 6 Exception							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Any%29_method_pairup
Exception.perl	A			Perl 6 Exception							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_routine_perl
Exception.print	A			Perl 6 Exception							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_method_print
Exception.push	A			Perl 6 Exception							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Any%29_method_push
Exception.put	A			Perl 6 Exception							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_method_put
Exception.resume	A			Perl 6 Exception							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#method_resume
Exception.rethrow	A			Perl 6 Exception							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#method_rethrow
Exception.return	A			Perl 6 Exception							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_method_return
Exception.return-rw	A			Perl 6 Exception							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_method_return-rw
Exception.reverse	A			Perl 6 Exception							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Any%29_routine_reverse
Exception.say	A			Perl 6 Exception							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_method_say
Exception.so	A			Perl 6 Exception							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_method_so
Exception.sort	A			Perl 6 Exception							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Any%29_method_sort
Exception.take	A			Perl 6 Exception							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_method_take
Exception.take	A			Perl 6 Exception							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_routine_take
Exception.take-rw	A			Perl 6 Exception							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#%28Mu%29_routine_take-rw
Exception.throw	A			Perl 6 Exception							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#method_throw
Exception.warn	A			Perl 6 Exception							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Exception.html#sub_warn
Failure.ACCEPTS	A			Perl 6 Failure							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Any%29_method_ACCEPTS
Failure.ACCEPTS	A			Perl 6 Failure							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_method_ACCEPTS
Failure.Bool	A			Perl 6 Failure							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#method_Bool
Failure.Bool	A			Perl 6 Failure							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_routine_Bool
Failure.CREATE	A			Perl 6 Failure							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_method_CREATE
Failure.Str	A			Perl 6 Failure							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_method_Str
Failure.WHERE	A			Perl 6 Failure							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_method_WHERE
Failure.WHICH	A			Perl 6 Failure							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_method_WHICH
Failure.WHY	A			Perl 6 Failure							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_method_WHY
Failure.all	A			Perl 6 Failure							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Any%29_method_all
Failure.any	A			Perl 6 Failure							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Any%29_method_any
Failure.bless	A			Perl 6 Failure							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_method_bless
Failure.clone	A			Perl 6 Failure							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_method_clone
Failure.deepmap	A			Perl 6 Failure							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Any%29_method_deepmap
Failure.defined	A			Perl 6 Failure							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#method_defined
Failure.defined	A			Perl 6 Failure							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_routine_defined
Failure.does	A			Perl 6 Failure							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_routine_does
Failure.duckmap	A			Perl 6 Failure							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Any%29_method_duckmap
Failure.eager	A			Perl 6 Failure							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Any%29_method_eager
Failure.elems	A			Perl 6 Failure							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Any%29_method_elems
Failure.emit	A			Perl 6 Failure							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_method_emit
Failure.end	A			Perl 6 Failure							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Any%29_method_end
Failure.exception	A			Perl 6 Failure							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#method_exception
Failure.exit	A			Perl 6 Failure							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Any%29_sub_exit
Failure.export	A			Perl 6 Failure							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_trait_is_export
Failure.flat	A			Perl 6 Failure							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Any%29_method_flat
Failure.gist	A			Perl 6 Failure							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_routine_gist
Failure.handled	A			Perl 6 Failure							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#method_handled
Failure.isa	A			Perl 6 Failure							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_routine_isa
Failure.item	A			Perl 6 Failure							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_method_item
Failure.list	A			Perl 6 Failure							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Any%29_method_list
Failure.map	A			Perl 6 Failure							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Any%29_method_map
Failure.new	A			Perl 6 Failure							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_method_new
Failure.none	A			Perl 6 Failure							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Any%29_method_none
Failure.not	A			Perl 6 Failure							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_method_not
Failure.one	A			Perl 6 Failure							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Any%29_method_one
Failure.pairup	A			Perl 6 Failure							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Any%29_method_pairup
Failure.perl	A			Perl 6 Failure							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_routine_perl
Failure.print	A			Perl 6 Failure							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_method_print
Failure.push	A			Perl 6 Failure							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Any%29_method_push
Failure.put	A			Perl 6 Failure							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_method_put
Failure.return	A			Perl 6 Failure							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_method_return
Failure.return-rw	A			Perl 6 Failure							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_method_return-rw
Failure.reverse	A			Perl 6 Failure							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Any%29_routine_reverse
Failure.say	A			Perl 6 Failure							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_method_say
Failure.so	A			Perl 6 Failure							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_method_so
Failure.sort	A			Perl 6 Failure							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Any%29_method_sort
Failure.take	A			Perl 6 Failure							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_method_take
Failure.take	A			Perl 6 Failure							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_routine_take
Failure.take-rw	A			Perl 6 Failure							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Failure.html#%28Mu%29_routine_take-rw
FatRat.ACCEPTS	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Any%29_method_ACCEPTS
FatRat.ACCEPTS	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_method_ACCEPTS
FatRat.ACCEPTS	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi method ACCEPTS(Numeric:D: $other)</code></pre><p>Returns True if $other is numerically the same as the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Numeric%29_method_ACCEPTS
FatRat.Bool	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi method Bool(Numeric:D:)</code></pre><p>Returns False if the number is equivalent to zero, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Numeric%29_method_Bool
FatRat.Bool	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_routine_Bool
FatRat.CREATE	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_method_CREATE
FatRat.EVAL	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_EVAL
FatRat.EVALFILE	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_EVALFILE
FatRat.IO	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_method_IO
FatRat.Int	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method Int(Numeric:D: --&gt; Int:D)</code></pre><p>If this Numeric is equivalent to a Real, return the equivalent of calling truncate on that Real to get an Int.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Numeric%29_method_Int
FatRat.Num	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method Num(Numeric:D: --&gt; Num:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real as a Num as accurately as is possible.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Numeric%29_method_Num
FatRat.Rat	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method Rat(Numeric:D: Real $epsilon = 1.0e-6 --&gt; Rat:D)</code></pre><p>If this Numeric is equivalent to a Real, return a Rat which is within $epsilon of that Real's value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Numeric%29_method_Rat
FatRat.Rat	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method Rat(Real:D: Real $epsilon = 1e-6)</code></pre><p>Converts the number to a Rat with the precision $epsilon.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Real%29_method_Rat
FatRat.Real	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method Real(Numeric:D: --&gt; Real:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Numeric%29_method_Real
FatRat.Str	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_method_Str
FatRat.WHERE	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_method_WHERE
FatRat.WHICH	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_method_WHICH
FatRat.WHY	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_method_WHY
FatRat.abs	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_abs
FatRat.abs	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi sub    abs(Numeric:D  --&gt; Real:D)multi method abs(Numeric:D: --&gt; Real:D)</code></pre><p>Returns the absolute value of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Numeric%29_routine_abs
FatRat.acos	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_acos
FatRat.acosec	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_acosec
FatRat.acosech	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_acosech
FatRat.acosh	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_acosh
FatRat.acotan	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_acotan
FatRat.acotanh	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_acotanh
FatRat.all	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Any%29_method_all
FatRat.any	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Any%29_method_any
FatRat.asec	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_asec
FatRat.asech	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_asech
FatRat.asin	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_asin
FatRat.asinh	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_asinh
FatRat.atan	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_atan
FatRat.atan2	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_atan2
FatRat.atanh	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_atanh
FatRat.base	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method base(Real:D: Int:D $base where 2..36, $digits? --&gt; Str:D)</code></pre><p>Converts the number to a string, using $base as base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Real%29_method_base
FatRat.base-repeating	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method base-repeating(Rational:D: Int:D() $base)</code></pre><p>Returns a list of two strings that, when concatenated, represent the number in base $base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Rational%29_method_base-repeating
FatRat.bless	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_method_bless
FatRat.ceiling	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_ceiling
FatRat.ceiling	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method ceiling(Real:D --&gt; Int:D)</code></pre><p>Returns the smallest integer not less than the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Real%29_method_ceiling
FatRat.chars	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_chars
FatRat.chomp	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_chomp
FatRat.chop	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_chop
FatRat.chr	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_chr
FatRat.chrs	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_chrs
FatRat.cis	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_cis
FatRat.clone	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_method_clone
FatRat.codes	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_codes
FatRat.comb	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_comb
FatRat.conj	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_method_conj
FatRat.conj	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi method conj(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the complex conjugate of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Numeric%29_method_conj
FatRat.contains	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi method contains(Cool:D: Str(Cool) $needle, Cool $start? --&gt; Bool:D)</code></pre><p>Returns True if the invocant contains the $needle at any position within the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_method_contains
FatRat.cos	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_cos
FatRat.cosec	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_cosec
FatRat.cosech	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_cosech
FatRat.cosh	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_cosh
FatRat.cotan	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_cotan
FatRat.cotanh	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_cotanh
FatRat.deepmap	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Any%29_method_deepmap
FatRat.defined	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_routine_defined
FatRat.denominator	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method denominator(Rational:D: --&gt; DeT:D)</code></pre><p>Returns the denominator.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Rational%29_method_denominator
FatRat.does	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_routine_does
FatRat.duckmap	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Any%29_method_duckmap
FatRat.eager	A			Perl 6 FatRat							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Any%29_method_eager
FatRat.elems	A			Perl 6 FatRat							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Any%29_method_elems
FatRat.emit	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_method_emit
FatRat.end	A			Perl 6 FatRat							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Any%29_method_end
FatRat.exit	A			Perl 6 FatRat							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Any%29_sub_exit
FatRat.exp	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_method_exp
FatRat.exp	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi sub    exp(Numeric:D, Numeric:D $base = e --&gt; Numeric:D)multi method exp(Numeric:D: Numeric:D $base = e --&gt; Numeric:D)</code></pre><p>Returns $base to the power of the number, or e to the power of the number if called without a second argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Numeric%29_routine_exp
FatRat.export	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_trait_is_export
FatRat.fc	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_fc
FatRat.flat	A			Perl 6 FatRat							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Any%29_method_flat
FatRat.flip	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_flip
FatRat.floor	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_floor
FatRat.floor	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method floor(Real:D --&gt; Int:D)</code></pre><p>Return the largest integer not greater than the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Real%29_method_floor
FatRat.fmt	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_method_fmt
FatRat.gist	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_routine_gist
FatRat.index	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_index
FatRat.isNaN	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method isNaN(Rational:D: --&gt; Bool:D)</code></pre><p>Tests whether the invocant's Num value is a NaN.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Rational%29_method_isNaN
FatRat.isa	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_routine_isa
FatRat.item	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_method_item
FatRat.lc	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_lc
FatRat.lines	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_lines
FatRat.list	A			Perl 6 FatRat							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Any%29_method_list
FatRat.log	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_log
FatRat.log	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi sub    log(Numeric:D, Numeric $base = e --&gt; Numeric:D)multi method log(Numeric:D: Numeric $base = e --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base $base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Numeric%29_routine_log
FatRat.log10	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_log10
FatRat.log10	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi sub    log10(Numeric:D  --&gt; Numeric:D)multi method log10(Numeric:D: --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base 10.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Numeric%29_routine_log10
FatRat.map	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Any%29_method_map
FatRat.match	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_match
FatRat.narrow	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method narrow(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the number converted to the narrowest type that can hold it without loss of precision.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Numeric%29_method_narrow
FatRat.new	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method new(NuT:D: $numerator, DeT:D: $denominator --&gt; Rational:D)</code></pre><p>Creates a new rational object from numerator and denominator.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Rational%29_method_new
FatRat.new	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_method_new
FatRat.none	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Any%29_method_none
FatRat.norm	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method norm(Rational:D: --&gt; Rational:D)</code></pre><p>Returns a normalized Rational object, i.e. with positive denominator, and numerator and denominator coprime.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Rational%29_method_norm
FatRat.not	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_method_not
FatRat.nude	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method nude(Rational:D: --&gt; Positional)</code></pre><p>Returns a list of the numerator and denominator.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Rational%29_method_nude
FatRat.numerator	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method numerator(Rational:D: --&gt; NuT:D)</code></pre><p>Returns the numerator.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Rational%29_method_numerator
FatRat.one	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Any%29_method_one
FatRat.ord	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_ord
FatRat.ords	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_ords
FatRat.pairup	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Any%29_method_pairup
FatRat.perl	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_routine_perl
FatRat.pred	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method pred(Numeric:D:)</code></pre><p>Returns the number decremented by one (predecessor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Numeric%29_method_pred
FatRat.print	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_method_print
FatRat.push	A			Perl 6 FatRat							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Any%29_method_push
FatRat.put	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_method_put
FatRat.rand	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_method_rand
FatRat.rand	A			Perl 6 FatRat							<section class="prog__container"><pre><code>sub term:&lt;rand&gt; (--&gt; Num:D)method rand(Real:D: --&gt; Real:D)</code></pre><p>Returns a pseudo-random number between zero and the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Real%29_routine_rand
FatRat.return	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_method_return
FatRat.return-rw	A			Perl 6 FatRat							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_method_return-rw
FatRat.reverse	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Any%29_routine_reverse
FatRat.rindex	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_rindex
FatRat.roots	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_roots
FatRat.roots	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi method roots(Numeric:D: Int:D $n --&gt; Positional)</code></pre><p>Returns a list of the $n complex roots, which evaluate to the original number when raised to the $nth power.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Numeric%29_method_roots
FatRat.round	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_round
FatRat.round	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method round(Real:D: $scale = 1)</code></pre><p>Rounds the number to scale $scale.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Real%29_method_round
FatRat.samecase	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_samecase
FatRat.say	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_method_say
FatRat.sec	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_method_sec
FatRat.sech	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_sech
FatRat.sign	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_method_sign
FatRat.sign	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method sign(Real:D:)</code></pre><p>Returns -1 if the number is negative, 0 if it is zero and 1 otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Real%29_method_sign
FatRat.sin	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_sin
FatRat.sinh	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_sinh
FatRat.so	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_method_so
FatRat.sort	A			Perl 6 FatRat							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Any%29_method_sort
FatRat.split	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_split
FatRat.sqrt	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_sqrt
FatRat.sqrt	A			Perl 6 FatRat							<section class="prog__container"><pre><code>multi sub    sqrt(Numeric:D --&gt; Numeric:D)multi method sqrt(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns a square root of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Numeric%29_routine_sqrt
FatRat.substr	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_substr
FatRat.succ	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method succ(Numeric:D:)</code></pre><p>Returns the number incremented by one (successor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Numeric%29_method_succ
FatRat.take	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_method_take
FatRat.take	A			Perl 6 FatRat							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_routine_take
FatRat.take-rw	A			Perl 6 FatRat							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Mu%29_routine_take-rw
FatRat.tan	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_tan
FatRat.tanh	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_tanh
FatRat.tc	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_tc
FatRat.tclc	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_tclc
FatRat.trim	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_trim
FatRat.trim-leading	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_trim-leading
FatRat.trim-trailing	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_trim-trailing
FatRat.truncate	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_truncate
FatRat.truncate	A			Perl 6 FatRat							<section class="prog__container"><pre><code>method truncate(Real:D --&gt; Int:D)</code></pre><p>Rounds the number towards zero.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Real%29_method_truncate
FatRat.uc	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_uc
FatRat.unimatch	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_method_unimatch
FatRat.uniname	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_method_uniname
FatRat.uninames	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_method_uninames
FatRat.uniprop	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_method_uniprop
FatRat.uniprops	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_method_uniprops
FatRat.unpolar	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_method_unpolar
FatRat.wordcase	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_routine_wordcase
FatRat.words	A			Perl 6 FatRat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/FatRat.html#%28Cool%29_method_words
Grammar.ACCEPTS	A			Perl 6 Grammar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Any%29_method_ACCEPTS
Grammar.ACCEPTS	A			Perl 6 Grammar							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_method_ACCEPTS
Grammar.Bool	A			Perl 6 Grammar							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_routine_Bool
Grammar.CREATE	A			Perl 6 Grammar							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_method_CREATE
Grammar.Str	A			Perl 6 Grammar							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_method_Str
Grammar.WHERE	A			Perl 6 Grammar							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_method_WHERE
Grammar.WHICH	A			Perl 6 Grammar							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_method_WHICH
Grammar.WHY	A			Perl 6 Grammar							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_method_WHY
Grammar.all	A			Perl 6 Grammar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Any%29_method_all
Grammar.any	A			Perl 6 Grammar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Any%29_method_any
Grammar.bless	A			Perl 6 Grammar							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_method_bless
Grammar.clone	A			Perl 6 Grammar							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_method_clone
Grammar.deepmap	A			Perl 6 Grammar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Any%29_method_deepmap
Grammar.defined	A			Perl 6 Grammar							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_routine_defined
Grammar.does	A			Perl 6 Grammar							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_routine_does
Grammar.duckmap	A			Perl 6 Grammar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Any%29_method_duckmap
Grammar.eager	A			Perl 6 Grammar							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Any%29_method_eager
Grammar.elems	A			Perl 6 Grammar							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Any%29_method_elems
Grammar.emit	A			Perl 6 Grammar							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_method_emit
Grammar.end	A			Perl 6 Grammar							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Any%29_method_end
Grammar.exit	A			Perl 6 Grammar							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Any%29_sub_exit
Grammar.export	A			Perl 6 Grammar							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_trait_is_export
Grammar.flat	A			Perl 6 Grammar							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Any%29_method_flat
Grammar.gist	A			Perl 6 Grammar							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_routine_gist
Grammar.isa	A			Perl 6 Grammar							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_routine_isa
Grammar.item	A			Perl 6 Grammar							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_method_item
Grammar.list	A			Perl 6 Grammar							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Any%29_method_list
Grammar.map	A			Perl 6 Grammar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Any%29_method_map
Grammar.new	A			Perl 6 Grammar							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_method_new
Grammar.none	A			Perl 6 Grammar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Any%29_method_none
Grammar.not	A			Perl 6 Grammar							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_method_not
Grammar.one	A			Perl 6 Grammar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Any%29_method_one
Grammar.pairup	A			Perl 6 Grammar							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Any%29_method_pairup
Grammar.parse	A			Perl 6 Grammar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#method_parse
Grammar.parsefile	A			Perl 6 Grammar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#method_parsefile
Grammar.perl	A			Perl 6 Grammar							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_routine_perl
Grammar.print	A			Perl 6 Grammar							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_method_print
Grammar.push	A			Perl 6 Grammar							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Any%29_method_push
Grammar.put	A			Perl 6 Grammar							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_method_put
Grammar.return	A			Perl 6 Grammar							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_method_return
Grammar.return-rw	A			Perl 6 Grammar							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_method_return-rw
Grammar.reverse	A			Perl 6 Grammar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Any%29_routine_reverse
Grammar.say	A			Perl 6 Grammar							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_method_say
Grammar.so	A			Perl 6 Grammar							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_method_so
Grammar.sort	A			Perl 6 Grammar							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Any%29_method_sort
Grammar.subparse	A			Perl 6 Grammar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#method_subparse
Grammar.take	A			Perl 6 Grammar							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_method_take
Grammar.take	A			Perl 6 Grammar							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_routine_take
Grammar.take-rw	A			Perl 6 Grammar							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Grammar.html#%28Mu%29_routine_take-rw
Hash.:delete	A			Perl 6 Hash							<section class="prog__container"><p>Use :delete to remove a Pair from the Hash.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%3Adelete
Hash.:exists	A			Perl 6 Hash							<section class="prog__container"><p>The adverb :exists returns Bool::True if a key exists in the Hash.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%3Aexists
Hash.:k	A			Perl 6 Hash							<section class="prog__container"><p>The adverbs :v and :k return the key or value or a list their of.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%3Ak
Hash.:p	A			Perl 6 Hash							<section class="prog__container"><p>The adverb :p returns a Pair or a List of Pair instead of just the value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%3Ap
Hash.ACCEPTS	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Any%29_method_ACCEPTS
Hash.ACCEPTS	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Map%29_method_ACCEPTS
Hash.ACCEPTS	A			Perl 6 Hash							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_method_ACCEPTS
Hash.Bool	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Map%29_method_Bool
Hash.Bool	A			Perl 6 Hash							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_routine_Bool
Hash.CREATE	A			Perl 6 Hash							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_method_CREATE
Hash.Capture	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Map%29_method_Capture
Hash.EVAL	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_EVAL
Hash.EVALFILE	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_EVALFILE
Hash.IO	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_method_IO
Hash.Int	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Map%29_method_Int
Hash.Numeric	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Map%29_method_Numeric
Hash.Slices	A			Perl 6 Hash							<section class="prog__container"><p>You can assign to multiple keys at the same time with a slice.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#Slices
Hash.Str	A			Perl 6 Hash							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_method_Str
Hash.WHERE	A			Perl 6 Hash							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_method_WHERE
Hash.WHICH	A			Perl 6 Hash							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_method_WHICH
Hash.WHY	A			Perl 6 Hash							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_method_WHY
Hash.abs	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_abs
Hash.acos	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_acos
Hash.acosec	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_acosec
Hash.acosech	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_acosech
Hash.acosh	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_acosh
Hash.acotan	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_acotan
Hash.acotanh	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_acotanh
Hash.all	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Any%29_method_all
Hash.antipairs	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Map%29_method_antipairs
Hash.any	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Any%29_method_any
Hash.append	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#method_append
Hash.asec	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_asec
Hash.asech	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_asech
Hash.asin	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_asin
Hash.asinh	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_asinh
Hash.atan	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_atan
Hash.atan2	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_atan2
Hash.atanh	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_atanh
Hash.bless	A			Perl 6 Hash							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_method_bless
Hash.categorize-list	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#method_categorize-list
Hash.ceiling	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_ceiling
Hash.chars	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_chars
Hash.chomp	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_chomp
Hash.chop	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_chop
Hash.chr	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_chr
Hash.chrs	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_chrs
Hash.cis	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_cis
Hash.classify-list	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#method_classify-list
Hash.clone	A			Perl 6 Hash							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_method_clone
Hash.codes	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_codes
Hash.comb	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_comb
Hash.conj	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_method_conj
Hash.contains	A			Perl 6 Hash							<section class="prog__container"><pre><code>multi method contains(Cool:D: Str(Cool) $needle, Cool $start? --&gt; Bool:D)</code></pre><p>Returns True if the invocant contains the $needle at any position within the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_method_contains
Hash.cos	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_cos
Hash.cosec	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_cosec
Hash.cosech	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_cosech
Hash.cosh	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_cosh
Hash.cotan	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_cotan
Hash.cotanh	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_cotanh
Hash.deepmap	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Any%29_method_deepmap
Hash.default	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#method_default
Hash.defined	A			Perl 6 Hash							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_routine_defined
Hash.does	A			Perl 6 Hash							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_routine_does
Hash.duckmap	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Any%29_method_duckmap
Hash.eager	A			Perl 6 Hash							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Any%29_method_eager
Hash.elems	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Map%29_method_elems
Hash.elems	A			Perl 6 Hash							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Any%29_method_elems
Hash.emit	A			Perl 6 Hash							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_method_emit
Hash.end	A			Perl 6 Hash							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Any%29_method_end
Hash.exit	A			Perl 6 Hash							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Any%29_sub_exit
Hash.exp	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_method_exp
Hash.export	A			Perl 6 Hash							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_trait_is_export
Hash.fc	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_fc
Hash.flat	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Iterable%29_method_flat
Hash.flat	A			Perl 6 Hash							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Any%29_method_flat
Hash.flip	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_flip
Hash.floor	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_floor
Hash.fmt	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_method_fmt
Hash.gist	A			Perl 6 Hash							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_routine_gist
Hash.hyper	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Iterable%29_method_hyper
Hash.index	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_index
Hash.invert	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Map%29_method_invert
Hash.isa	A			Perl 6 Hash							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_routine_isa
Hash.item	A			Perl 6 Hash							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_method_item
Hash.iterator	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Iterable%29_method_iterator
Hash.keyof	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#method_keyof
Hash.keys	A			Perl 6 Hash							<section class="prog__container"><p>By default keys in { } are forced to strings.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#Non-string_keys
Hash.keys	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Map%29_method_keys
Hash.kv	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Map%29_method_kv
Hash.lazy	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Iterable%29_method_lazy
Hash.lc	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_lc
Hash.lines	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_lines
Hash.list	A			Perl 6 Hash							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Any%29_method_list
Hash.log	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_log
Hash.log10	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_log10
Hash.map	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Any%29_method_map
Hash.match	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_match
Hash.new	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Map%29_method_new
Hash.new	A			Perl 6 Hash							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_method_new
Hash.none	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Any%29_method_none
Hash.not	A			Perl 6 Hash							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_method_not
Hash.of	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#method_of
Hash.one	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Any%29_method_one
Hash.ord	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_ord
Hash.ords	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_ords
Hash.pairs	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Map%29_method_pairs
Hash.pairup	A			Perl 6 Hash							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Any%29_method_pairup
Hash.perl	A			Perl 6 Hash							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_routine_perl
Hash.print	A			Perl 6 Hash							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_method_print
Hash.push	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#method_push
Hash.push	A			Perl 6 Hash							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Any%29_method_push
Hash.put	A			Perl 6 Hash							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_method_put
Hash.race	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Iterable%29_method_race
Hash.rand	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_method_rand
Hash.return	A			Perl 6 Hash							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_method_return
Hash.return-rw	A			Perl 6 Hash							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_method_return-rw
Hash.reverse	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Any%29_routine_reverse
Hash.rindex	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_rindex
Hash.roots	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_roots
Hash.round	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_round
Hash.samecase	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_samecase
Hash.say	A			Perl 6 Hash							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_method_say
Hash.sec	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_method_sec
Hash.sech	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_sech
Hash.sign	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_method_sign
Hash.sin	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_sin
Hash.sinh	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_sinh
Hash.so	A			Perl 6 Hash							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_method_so
Hash.sort	A			Perl 6 Hash							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Any%29_method_sort
Hash.split	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_split
Hash.sqrt	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_sqrt
Hash.substr	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_substr
Hash.take	A			Perl 6 Hash							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_method_take
Hash.take	A			Perl 6 Hash							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_routine_take
Hash.take-rw	A			Perl 6 Hash							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Mu%29_routine_take-rw
Hash.tan	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_tan
Hash.tanh	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_tanh
Hash.tc	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_tc
Hash.tclc	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_tclc
Hash.trim	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_trim
Hash.trim-leading	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_trim-leading
Hash.trim-trailing	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_trim-trailing
Hash.truncate	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_truncate
Hash.types	A			Perl 6 Hash							<section class="prog__container"><p>Place a type object in-between the declarator and the name to constraint the type of all values of a Hash.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#Constraint_value_types
Hash.uc	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_uc
Hash.unimatch	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_method_unimatch
Hash.uniname	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_method_uniname
Hash.uninames	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_method_uninames
Hash.uniprop	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_method_uniprop
Hash.uniprops	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_method_uniprops
Hash.unpolar	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_method_unpolar
Hash.values	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Map%29_method_values
Hash.values	A			Perl 6 Hash							<section class="prog__container"><p>There may be times when you would like to modify the values of a hash while iterating over them.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#In_place_editing_of_values
Hash.wordcase	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_routine_wordcase
Hash.words	A			Perl 6 Hash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Hash.html#%28Cool%29_method_words
IO.close	A			Perl 6 IO							<section class="prog__container"><p>To close an open file handle, simply call its close method:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IO.html#method_close
IO.note	A			Perl 6 IO							<section class="prog__container"><p>Print the given text, followed by a newline "&#92;n" on $*ERR (standard error).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IO.html#sub_note
IO.open	A			Perl 6 IO							<section class="prog__container"><pre><code>my $fh = open(IO::Path() $path, :$r, :$w, :$a, :$rw,              :$bin, :$enc, :$nl-in, :$nl-out, :$chomp)</code></pre><p>Opens the $path (by default in text mode) with the given options, returning an IO::Handle object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IO.html#sub_open
IO.print	A			Perl 6 IO							<section class="prog__container"><p>Print the given text on $*OUT (standard output), e.g.:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IO.html#sub_print
IO.prompt	A			Perl 6 IO							<section class="prog__container"><pre><code>sub prompt($msg)</code></pre><p>Prints $msg to standard output and waits for the user to type something and finish with an ENTER.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IO.html#sub_prompt
IO.put	A			Perl 6 IO							<section class="prog__container"><p>Print the given text on $*OUT (standard output) with appended $*OUT.nl-out.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IO.html#sub_put
IO.run	A			Perl 6 IO							<section class="prog__container"><pre><code>sub run(*@args ($, *@) --&gt; Proc)</code></pre><p>Runs an external command without involving a shell (if possible).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IO.html#sub_run
IO.say	A			Perl 6 IO							<section class="prog__container"><p>Print the given text in human readable form, followed by a $*OUT.nl-out (platform dependent newline) on $*OUT (standard output).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IO.html#sub_say
IO.shell	A			Perl 6 IO							<section class="prog__container"><pre><code>sub shell($cmd --&gt; Proc)</code></pre><p>Runs a command through the system shell.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IO.html#sub_shell
IO.slurp	A			Perl 6 IO							<section class="prog__container"><p>Slurps the contents of the entire file into a Str (or Buf if :bin).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IO.html#sub_slurp
IO.spurt	A			Perl 6 IO							<section class="prog__container"><pre><code>sub spurt($where, $what,    Str  :$enc        = 'utf8',    Bool :$bin        = False,    Bool :$append      = False,    Bool :$createonly = False    --&gt; Bool )</code></pre><p>Writes the indicated contents (2nd positional parameter, $what) to the location indicated by the first positional parameter, $where (which can either be a string or an IO::Path object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IO.html#sub_spurt
Instant.ACCEPTS	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Any%29_method_ACCEPTS
Instant.ACCEPTS	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_method_ACCEPTS
Instant.ACCEPTS	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi method ACCEPTS(Numeric:D: $other)</code></pre><p>Returns True if $other is numerically the same as the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Numeric%29_method_ACCEPTS
Instant.Bool	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi method Bool(Numeric:D:)</code></pre><p>Returns False if the number is equivalent to zero, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Numeric%29_method_Bool
Instant.Bool	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_routine_Bool
Instant.CREATE	A			Perl 6 Instant							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_method_CREATE
Instant.Date	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#method_Date
Instant.EVAL	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_EVAL
Instant.EVALFILE	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_EVALFILE
Instant.IO	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_method_IO
Instant.Int	A			Perl 6 Instant							<section class="prog__container"><pre><code>method Int(Numeric:D: --&gt; Int:D)</code></pre><p>If this Numeric is equivalent to a Real, return the equivalent of calling truncate on that Real to get an Int.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Numeric%29_method_Int
Instant.Num	A			Perl 6 Instant							<section class="prog__container"><pre><code>method Num(Numeric:D: --&gt; Num:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real as a Num as accurately as is possible.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Numeric%29_method_Num
Instant.Rat	A			Perl 6 Instant							<section class="prog__container"><pre><code>method Rat(Numeric:D: Real $epsilon = 1.0e-6 --&gt; Rat:D)</code></pre><p>If this Numeric is equivalent to a Real, return a Rat which is within $epsilon of that Real's value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Numeric%29_method_Rat
Instant.Rat	A			Perl 6 Instant							<section class="prog__container"><pre><code>method Rat(Real:D: Real $epsilon = 1e-6)</code></pre><p>Converts the number to a Rat with the precision $epsilon.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Real%29_method_Rat
Instant.Real	A			Perl 6 Instant							<section class="prog__container"><pre><code>method Real(Numeric:D: --&gt; Real:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Numeric%29_method_Real
Instant.Str	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_method_Str
Instant.WHERE	A			Perl 6 Instant							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_method_WHERE
Instant.WHICH	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_method_WHICH
Instant.WHY	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_method_WHY
Instant.abs	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_abs
Instant.abs	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi sub    abs(Numeric:D  --&gt; Real:D)multi method abs(Numeric:D: --&gt; Real:D)</code></pre><p>Returns the absolute value of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Numeric%29_routine_abs
Instant.acos	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_acos
Instant.acosec	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_acosec
Instant.acosech	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_acosech
Instant.acosh	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_acosh
Instant.acotan	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_acotan
Instant.acotanh	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_acotanh
Instant.all	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Any%29_method_all
Instant.any	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Any%29_method_any
Instant.asec	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_asec
Instant.asech	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_asech
Instant.asin	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_asin
Instant.asinh	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_asinh
Instant.atan	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_atan
Instant.atan2	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_atan2
Instant.atanh	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_atanh
Instant.base	A			Perl 6 Instant							<section class="prog__container"><pre><code>method base(Real:D: Int:D $base where 2..36, $digits? --&gt; Str:D)</code></pre><p>Converts the number to a string, using $base as base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Real%29_method_base
Instant.bless	A			Perl 6 Instant							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_method_bless
Instant.ceiling	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_ceiling
Instant.ceiling	A			Perl 6 Instant							<section class="prog__container"><pre><code>method ceiling(Real:D --&gt; Int:D)</code></pre><p>Returns the smallest integer not less than the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Real%29_method_ceiling
Instant.chars	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_chars
Instant.chomp	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_chomp
Instant.chop	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_chop
Instant.chr	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_chr
Instant.chrs	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_chrs
Instant.cis	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_cis
Instant.clone	A			Perl 6 Instant							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_method_clone
Instant.codes	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_codes
Instant.comb	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_comb
Instant.conj	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_method_conj
Instant.conj	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi method conj(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the complex conjugate of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Numeric%29_method_conj
Instant.contains	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi method contains(Cool:D: Str(Cool) $needle, Cool $start? --&gt; Bool:D)</code></pre><p>Returns True if the invocant contains the $needle at any position within the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_method_contains
Instant.cos	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_cos
Instant.cosec	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_cosec
Instant.cosech	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_cosech
Instant.cosh	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_cosh
Instant.cotan	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_cotan
Instant.cotanh	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_cotanh
Instant.deepmap	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Any%29_method_deepmap
Instant.defined	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_routine_defined
Instant.does	A			Perl 6 Instant							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_routine_does
Instant.duckmap	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Any%29_method_duckmap
Instant.eager	A			Perl 6 Instant							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Any%29_method_eager
Instant.elems	A			Perl 6 Instant							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Any%29_method_elems
Instant.emit	A			Perl 6 Instant							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_method_emit
Instant.end	A			Perl 6 Instant							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Any%29_method_end
Instant.exit	A			Perl 6 Instant							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Any%29_sub_exit
Instant.exp	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_method_exp
Instant.exp	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi sub    exp(Numeric:D, Numeric:D $base = e --&gt; Numeric:D)multi method exp(Numeric:D: Numeric:D $base = e --&gt; Numeric:D)</code></pre><p>Returns $base to the power of the number, or e to the power of the number if called without a second argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Numeric%29_routine_exp
Instant.export	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_trait_is_export
Instant.fc	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_fc
Instant.flat	A			Perl 6 Instant							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Any%29_method_flat
Instant.flip	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_flip
Instant.floor	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_floor
Instant.floor	A			Perl 6 Instant							<section class="prog__container"><pre><code>method floor(Real:D --&gt; Int:D)</code></pre><p>Return the largest integer not greater than the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Real%29_method_floor
Instant.fmt	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_method_fmt
Instant.from-posix	A			Perl 6 Instant							<section class="prog__container"><pre><code>method from-posix($posix, Bool $prefer-leap-second = False)</code></pre><p>Converts the POSIX timestamp $posix to an Instant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#method_from-posix
Instant.gist	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_routine_gist
Instant.index	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_index
Instant.isa	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_routine_isa
Instant.item	A			Perl 6 Instant							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_method_item
Instant.lc	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_lc
Instant.lines	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_lines
Instant.list	A			Perl 6 Instant							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Any%29_method_list
Instant.log	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_log
Instant.log	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi sub    log(Numeric:D, Numeric $base = e --&gt; Numeric:D)multi method log(Numeric:D: Numeric $base = e --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base $base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Numeric%29_routine_log
Instant.log10	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_log10
Instant.log10	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi sub    log10(Numeric:D  --&gt; Numeric:D)multi method log10(Numeric:D: --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base 10.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Numeric%29_routine_log10
Instant.map	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Any%29_method_map
Instant.match	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_match
Instant.narrow	A			Perl 6 Instant							<section class="prog__container"><pre><code>method narrow(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the number converted to the narrowest type that can hold it without loss of precision.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Numeric%29_method_narrow
Instant.new	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_method_new
Instant.none	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Any%29_method_none
Instant.not	A			Perl 6 Instant							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_method_not
Instant.one	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Any%29_method_one
Instant.ord	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_ord
Instant.ords	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_ords
Instant.pairup	A			Perl 6 Instant							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Any%29_method_pairup
Instant.perl	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_routine_perl
Instant.pred	A			Perl 6 Instant							<section class="prog__container"><pre><code>method pred(Numeric:D:)</code></pre><p>Returns the number decremented by one (predecessor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Numeric%29_method_pred
Instant.print	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_method_print
Instant.push	A			Perl 6 Instant							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Any%29_method_push
Instant.put	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_method_put
Instant.rand	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_method_rand
Instant.rand	A			Perl 6 Instant							<section class="prog__container"><pre><code>sub term:&lt;rand&gt; (--&gt; Num:D)method rand(Real:D: --&gt; Real:D)</code></pre><p>Returns a pseudo-random number between zero and the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Real%29_routine_rand
Instant.return	A			Perl 6 Instant							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_method_return
Instant.return-rw	A			Perl 6 Instant							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_method_return-rw
Instant.reverse	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Any%29_routine_reverse
Instant.rindex	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_rindex
Instant.roots	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_roots
Instant.roots	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi method roots(Numeric:D: Int:D $n --&gt; Positional)</code></pre><p>Returns a list of the $n complex roots, which evaluate to the original number when raised to the $nth power.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Numeric%29_method_roots
Instant.round	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_round
Instant.round	A			Perl 6 Instant							<section class="prog__container"><pre><code>method round(Real:D: $scale = 1)</code></pre><p>Rounds the number to scale $scale.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Real%29_method_round
Instant.samecase	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_samecase
Instant.say	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_method_say
Instant.sec	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_method_sec
Instant.sech	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_sech
Instant.sign	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_method_sign
Instant.sign	A			Perl 6 Instant							<section class="prog__container"><pre><code>method sign(Real:D:)</code></pre><p>Returns -1 if the number is negative, 0 if it is zero and 1 otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Real%29_method_sign
Instant.sin	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_sin
Instant.sinh	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_sinh
Instant.so	A			Perl 6 Instant							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_method_so
Instant.sort	A			Perl 6 Instant							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Any%29_method_sort
Instant.split	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_split
Instant.sqrt	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_sqrt
Instant.sqrt	A			Perl 6 Instant							<section class="prog__container"><pre><code>multi sub    sqrt(Numeric:D --&gt; Numeric:D)multi method sqrt(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns a square root of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Numeric%29_routine_sqrt
Instant.substr	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_substr
Instant.succ	A			Perl 6 Instant							<section class="prog__container"><pre><code>method succ(Numeric:D:)</code></pre><p>Returns the number incremented by one (successor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Numeric%29_method_succ
Instant.take	A			Perl 6 Instant							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_method_take
Instant.take	A			Perl 6 Instant							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_routine_take
Instant.take-rw	A			Perl 6 Instant							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Mu%29_routine_take-rw
Instant.tan	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_tan
Instant.tanh	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_tanh
Instant.tc	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_tc
Instant.tclc	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_tclc
Instant.to-posix	A			Perl 6 Instant							<section class="prog__container"><pre><code>method to-posix()</code></pre><p>Converts the invocant to a POSIX timestamp and returns a two element list containing the POSIX timestamp and a Bool.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#method_to-posix
Instant.trim	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_trim
Instant.trim-leading	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_trim-leading
Instant.trim-trailing	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_trim-trailing
Instant.truncate	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_truncate
Instant.truncate	A			Perl 6 Instant							<section class="prog__container"><pre><code>method truncate(Real:D --&gt; Int:D)</code></pre><p>Rounds the number towards zero.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Real%29_method_truncate
Instant.uc	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_uc
Instant.unimatch	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_method_unimatch
Instant.uniname	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_method_uniname
Instant.uninames	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_method_uninames
Instant.uniprop	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_method_uniprop
Instant.uniprops	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_method_uniprops
Instant.unpolar	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_method_unpolar
Instant.wordcase	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_routine_wordcase
Instant.words	A			Perl 6 Instant							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Instant.html#%28Cool%29_method_words
Int.ACCEPTS	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Any%29_method_ACCEPTS
Int.ACCEPTS	A			Perl 6 Int							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_method_ACCEPTS
Int.ACCEPTS	A			Perl 6 Int							<section class="prog__container"><pre><code>multi method ACCEPTS(Numeric:D: $other)</code></pre><p>Returns True if $other is numerically the same as the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Numeric%29_method_ACCEPTS
Int.Bool	A			Perl 6 Int							<section class="prog__container"><pre><code>multi method Bool(Numeric:D:)</code></pre><p>Returns False if the number is equivalent to zero, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Numeric%29_method_Bool
Int.Bool	A			Perl 6 Int							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_routine_Bool
Int.CREATE	A			Perl 6 Int							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_method_CREATE
Int.EVAL	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_EVAL
Int.EVALFILE	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_EVALFILE
Int.IO	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_method_IO
Int.Int	A			Perl 6 Int							<section class="prog__container"><pre><code>method Int(Numeric:D: --&gt; Int:D)</code></pre><p>If this Numeric is equivalent to a Real, return the equivalent of calling truncate on that Real to get an Int.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Numeric%29_method_Int
Int.Num	A			Perl 6 Int							<section class="prog__container"><pre><code>method Num(Numeric:D: --&gt; Num:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real as a Num as accurately as is possible.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Numeric%29_method_Num
Int.Rat	A			Perl 6 Int							<section class="prog__container"><pre><code>method Rat(Numeric:D: Real $epsilon = 1.0e-6 --&gt; Rat:D)</code></pre><p>If this Numeric is equivalent to a Real, return a Rat which is within $epsilon of that Real's value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Numeric%29_method_Rat
Int.Rat	A			Perl 6 Int							<section class="prog__container"><pre><code>method Rat(Real:D: Real $epsilon = 1e-6)</code></pre><p>Converts the number to a Rat with the precision $epsilon.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Real%29_method_Rat
Int.Real	A			Perl 6 Int							<section class="prog__container"><pre><code>method Real(Numeric:D: --&gt; Real:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Numeric%29_method_Real
Int.Str	A			Perl 6 Int							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_method_Str
Int.WHERE	A			Perl 6 Int							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_method_WHERE
Int.WHICH	A			Perl 6 Int							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_method_WHICH
Int.WHY	A			Perl 6 Int							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_method_WHY
Int.abs	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_abs
Int.abs	A			Perl 6 Int							<section class="prog__container"><pre><code>multi sub    abs(Numeric:D  --&gt; Real:D)multi method abs(Numeric:D: --&gt; Real:D)</code></pre><p>Returns the absolute value of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Numeric%29_routine_abs
Int.acos	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_acos
Int.acosec	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_acosec
Int.acosech	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_acosech
Int.acosh	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_acosh
Int.acotan	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_acotan
Int.acotanh	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_acotanh
Int.all	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Any%29_method_all
Int.any	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Any%29_method_any
Int.asec	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_asec
Int.asech	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_asech
Int.asin	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_asin
Int.asinh	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_asinh
Int.atan	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_atan
Int.atan2	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_atan2
Int.atanh	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_atanh
Int.base	A			Perl 6 Int							<section class="prog__container"><pre><code>method base(Real:D: Int:D $base where 2..36, $digits? --&gt; Str:D)</code></pre><p>Converts the number to a string, using $base as base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Real%29_method_base
Int.bless	A			Perl 6 Int							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_method_bless
Int.ceiling	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_ceiling
Int.ceiling	A			Perl 6 Int							<section class="prog__container"><pre><code>method ceiling(Real:D --&gt; Int:D)</code></pre><p>Returns the smallest integer not less than the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Real%29_method_ceiling
Int.chars	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_chars
Int.chomp	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_chomp
Int.chop	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_chop
Int.chr	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_chr
Int.chr	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#routine_chr
Int.chrs	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_chrs
Int.cis	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_cis
Int.clone	A			Perl 6 Int							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_method_clone
Int.codes	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_codes
Int.comb	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_comb
Int.conj	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_method_conj
Int.conj	A			Perl 6 Int							<section class="prog__container"><pre><code>multi method conj(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the complex conjugate of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Numeric%29_method_conj
Int.contains	A			Perl 6 Int							<section class="prog__container"><pre><code>multi method contains(Cool:D: Str(Cool) $needle, Cool $start? --&gt; Bool:D)</code></pre><p>Returns True if the invocant contains the $needle at any position within the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_method_contains
Int.cos	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_cos
Int.cosec	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_cosec
Int.cosech	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_cosech
Int.cosh	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_cosh
Int.cotan	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_cotan
Int.cotanh	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_cotanh
Int.deepmap	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Any%29_method_deepmap
Int.defined	A			Perl 6 Int							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_routine_defined
Int.div	A			Perl 6 Int							<section class="prog__container"><pre><code>multi sub infix:&lt;div&gt;(Int:D, Int:D --&gt; Int:D)</code></pre><p>Does an integer division, rounded down.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#infix_div
Int.does	A			Perl 6 Int							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_routine_does
Int.duckmap	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Any%29_method_duckmap
Int.eager	A			Perl 6 Int							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Any%29_method_eager
Int.elems	A			Perl 6 Int							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Any%29_method_elems
Int.emit	A			Perl 6 Int							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_method_emit
Int.end	A			Perl 6 Int							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Any%29_method_end
Int.exit	A			Perl 6 Int							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Any%29_sub_exit
Int.exp	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_method_exp
Int.exp	A			Perl 6 Int							<section class="prog__container"><pre><code>multi sub    exp(Numeric:D, Numeric:D $base = e --&gt; Numeric:D)multi method exp(Numeric:D: Numeric:D $base = e --&gt; Numeric:D)</code></pre><p>Returns $base to the power of the number, or e to the power of the number if called without a second argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Numeric%29_routine_exp
Int.expmod	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#routine_expmod
Int.export	A			Perl 6 Int							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_trait_is_export
Int.fc	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_fc
Int.flat	A			Perl 6 Int							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Any%29_method_flat
Int.flip	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_flip
Int.floor	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_floor
Int.floor	A			Perl 6 Int							<section class="prog__container"><pre><code>method floor(Real:D --&gt; Int:D)</code></pre><p>Return the largest integer not greater than the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Real%29_method_floor
Int.fmt	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_method_fmt
Int.gist	A			Perl 6 Int							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_routine_gist
Int.index	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_index
Int.is-prime	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#routine_is-prime
Int.isa	A			Perl 6 Int							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_routine_isa
Int.item	A			Perl 6 Int							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_method_item
Int.lc	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_lc
Int.lines	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_lines
Int.list	A			Perl 6 Int							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Any%29_method_list
Int.log	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_log
Int.log	A			Perl 6 Int							<section class="prog__container"><pre><code>multi sub    log(Numeric:D, Numeric $base = e --&gt; Numeric:D)multi method log(Numeric:D: Numeric $base = e --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base $base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Numeric%29_routine_log
Int.log10	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_log10
Int.log10	A			Perl 6 Int							<section class="prog__container"><pre><code>multi sub    log10(Numeric:D  --&gt; Numeric:D)multi method log10(Numeric:D: --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base 10.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Numeric%29_routine_log10
Int.lsb	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#routine_lsb
Int.map	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Any%29_method_map
Int.match	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_match
Int.msb	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#routine_msb
Int.narrow	A			Perl 6 Int							<section class="prog__container"><pre><code>method narrow(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the number converted to the narrowest type that can hold it without loss of precision.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Numeric%29_method_narrow
Int.new	A			Perl 6 Int							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_method_new
Int.none	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Any%29_method_none
Int.not	A			Perl 6 Int							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_method_not
Int.one	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Any%29_method_one
Int.ord	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_ord
Int.ords	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_ords
Int.pairup	A			Perl 6 Int							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Any%29_method_pairup
Int.perl	A			Perl 6 Int							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_routine_perl
Int.polymod	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#method_polymod
Int.pred	A			Perl 6 Int							<section class="prog__container"><pre><code>method pred(Numeric:D:)</code></pre><p>Returns the number decremented by one (predecessor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Numeric%29_method_pred
Int.print	A			Perl 6 Int							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_method_print
Int.push	A			Perl 6 Int							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Any%29_method_push
Int.put	A			Perl 6 Int							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_method_put
Int.rand	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_method_rand
Int.rand	A			Perl 6 Int							<section class="prog__container"><pre><code>sub term:&lt;rand&gt; (--&gt; Num:D)method rand(Real:D: --&gt; Real:D)</code></pre><p>Returns a pseudo-random number between zero and the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Real%29_routine_rand
Int.return	A			Perl 6 Int							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_method_return
Int.return-rw	A			Perl 6 Int							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_method_return-rw
Int.reverse	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Any%29_routine_reverse
Int.rindex	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_rindex
Int.roots	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_roots
Int.roots	A			Perl 6 Int							<section class="prog__container"><pre><code>multi method roots(Numeric:D: Int:D $n --&gt; Positional)</code></pre><p>Returns a list of the $n complex roots, which evaluate to the original number when raised to the $nth power.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Numeric%29_method_roots
Int.round	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_round
Int.round	A			Perl 6 Int							<section class="prog__container"><pre><code>method round(Real:D: $scale = 1)</code></pre><p>Rounds the number to scale $scale.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Real%29_method_round
Int.samecase	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_samecase
Int.say	A			Perl 6 Int							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_method_say
Int.sec	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_method_sec
Int.sech	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_sech
Int.sign	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_method_sign
Int.sign	A			Perl 6 Int							<section class="prog__container"><pre><code>method sign(Real:D:)</code></pre><p>Returns -1 if the number is negative, 0 if it is zero and 1 otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Real%29_method_sign
Int.sin	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_sin
Int.sinh	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_sinh
Int.so	A			Perl 6 Int							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_method_so
Int.sort	A			Perl 6 Int							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Any%29_method_sort
Int.split	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_split
Int.sqrt	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_sqrt
Int.sqrt	A			Perl 6 Int							<section class="prog__container"><pre><code>multi sub    sqrt(Numeric:D --&gt; Numeric:D)multi method sqrt(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns a square root of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Numeric%29_routine_sqrt
Int.substr	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_substr
Int.succ	A			Perl 6 Int							<section class="prog__container"><pre><code>method succ(Numeric:D:)</code></pre><p>Returns the number incremented by one (successor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Numeric%29_method_succ
Int.take	A			Perl 6 Int							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_method_take
Int.take	A			Perl 6 Int							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_routine_take
Int.take-rw	A			Perl 6 Int							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Mu%29_routine_take-rw
Int.tan	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_tan
Int.tanh	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_tanh
Int.tc	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_tc
Int.tclc	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_tclc
Int.trim	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_trim
Int.trim-leading	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_trim-leading
Int.trim-trailing	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_trim-trailing
Int.truncate	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_truncate
Int.truncate	A			Perl 6 Int							<section class="prog__container"><pre><code>method truncate(Real:D --&gt; Int:D)</code></pre><p>Rounds the number towards zero.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Real%29_method_truncate
Int.uc	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_uc
Int.unimatch	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_method_unimatch
Int.uniname	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_method_uniname
Int.uninames	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_method_uninames
Int.uniprop	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_method_uniprop
Int.uniprops	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_method_uniprops
Int.unival	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#routine_unival
Int.unpolar	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_method_unpolar
Int.wordcase	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_routine_wordcase
Int.words	A			Perl 6 Int							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Int.html#%28Cool%29_method_words
IntStr.ACCEPTS	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi method ACCEPTS(Str:D: $other)</code></pre><p>Returns True if the string is the same as $other.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_ACCEPTS
IntStr.ACCEPTS	R	Real.ACCEPTS										
IntStr.ACCEPTS	R	Real.ACCEPTS										
IntStr.Bool	R	Real.Bool										
IntStr.CREATE	R	Real.CREATE										
IntStr.EVAL	R	Real.EVAL										
IntStr.EVALFILE	R	Real.EVALFILE										
IntStr.IO	R	Real.IO										
IntStr.Int	A			Perl 6 IntStr							<section class="prog__container"><pre><code>method Int</code></pre><p>Returns the integer value of the IntStr.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#method_Int
IntStr.NFC	A			Perl 6 IntStr							<section class="prog__container"><pre><code>method NFC(Str:D: --&gt; NFC:D)</code></pre><p>Returns a codepoint string in NFC format (Unicode Normalization Form C / Composed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_NFC
IntStr.NFD	A			Perl 6 IntStr							<section class="prog__container"><pre><code>method NFD(Str:D: --&gt; NFD:D)</code></pre><p>Returns a codepoint string in NFC format (Unicode Normalization Form D / Decomposed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_NFD
IntStr.NFKC	A			Perl 6 IntStr							<section class="prog__container"><pre><code>method NFKC(Str:D: --&gt; NFKC:D)</code></pre><p>Returns a codepoint string in NFKC format (Unicode Normalization Form KC / Compatibility Composed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_NFKC
IntStr.NFKD	A			Perl 6 IntStr							<section class="prog__container"><pre><code>method NFKD(Str:D: --&gt; NFKD:D)</code></pre><p>Returns a codepoint string in NFC format (Unicode Normalization Form KD / Compatibility Decomposed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_NFKD
IntStr.Numeric	A			Perl 6 IntStr							<section class="prog__container"><pre><code>method Numeric</code></pre><p>The numeric coercion is applied when the IntStr is used in a numeric context, such as a numeric comparison or smart match against a numeric value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#method_Numeric
IntStr.Rat	R	Real.Rat										
IntStr.Str	A			Perl 6 IntStr							<section class="prog__container"><p>Returns the string value of the IntStr.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#method_Str
IntStr.Str	R	Real.Str										
IntStr.WHERE	R	Real.WHERE										
IntStr.WHICH	R	Real.WHICH										
IntStr.WHY	R	Real.WHY										
IntStr.abs	R	Real.abs										
IntStr.acos	R	Real.acos										
IntStr.acosec	R	Real.acosec										
IntStr.acosech	R	Real.acosech										
IntStr.acosh	R	Real.acosh										
IntStr.acotan	R	Real.acotan										
IntStr.acotanh	R	Real.acotanh										
IntStr.all	R	Real.all										
IntStr.any	R	Real.any										
IntStr.asec	R	Real.asec										
IntStr.asech	R	Real.asech										
IntStr.asin	R	Real.asin										
IntStr.asinh	R	Real.asinh										
IntStr.atan	R	Real.atan										
IntStr.atan2	R	Real.atan2										
IntStr.atanh	R	Real.atanh										
IntStr.base	R	Real.base										
IntStr.bless	R	Real.bless										
IntStr.ceiling	R	Real.ceiling										
IntStr.ceiling	R	Real.ceiling										
IntStr.chars	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub    chars(Cool  $x --&gt; Int:D)multi sub    chars(Str:D $x --&gt; Int:D)multi sub    chars(str   $x --&gt; int)multi method chars(Str:D:   --&gt; Int:D)</code></pre><p>Returns the number of characters in the string in graphemes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_chars
IntStr.chars	R	Real.chars										
IntStr.chomp	A			Perl 6 IntStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_chomp
IntStr.chomp	R	Real.chomp										
IntStr.chop	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub    chop(Str:D --&gt; Str:D)multi method chop(Str:D: $chars = 1 --&gt; Str:D)</code></pre><p>Returns the string with $chars characters removed from the end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_chop
IntStr.chop	R	Real.chop										
IntStr.chr	A			Perl 6 IntStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Int%29_routine_chr
IntStr.chr	R	Real.chr										
IntStr.chrs	R	Real.chrs										
IntStr.cis	R	Real.cis										
IntStr.clone	R	Real.clone										
IntStr.cmp	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub infix:&lt;cmp&gt;(IntStr:D $a, IntStr:D $b)</code></pre><p>Compare two IntStr objects.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#infix_cmp
IntStr.codes	R	Real.codes										
IntStr.comb	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub    comb(Str:D   $matcher, Str:D $input, $limit = Inf)multi sub    comb(Regex:D $matcher, Str:D $input, $limit = Inf, Bool :$match)multi sub    comb(Int:D $size, Str:D $input, $limit = Inf)multi method comb(Str:D $input:)multi method comb(Str:D $input: Str:D   $matcher, $limit = Inf)multi method comb(Str:D $input: Regex:D $matcher, $limit = Inf, Bool :$match)multi method comb(Str:D $input: Int:D $size, $limit = Inf)</code></pre><p>Searches for $matcher in $input and returns a list of all matches (as Str by default, or as Match if $match is True), limited to at most $limit matches.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_comb
IntStr.comb	R	Real.comb										
IntStr.conj	R	Real.conj										
IntStr.contains	R	Real.contains										
IntStr.cos	R	Real.cos										
IntStr.cosec	R	Real.cosec										
IntStr.cosech	R	Real.cosech										
IntStr.cosh	R	Real.cosh										
IntStr.cotan	R	Real.cotan										
IntStr.cotanh	R	Real.cotanh										
IntStr.deepmap	R	Real.deepmap										
IntStr.defined	R	Real.defined										
IntStr.div	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub infix:&lt;div&gt;(Int:D, Int:D --&gt; Int:D)</code></pre><p>Does an integer division, rounded down.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Int%29_infix_div
IntStr.does	R	Real.does										
IntStr.duckmap	R	Real.duckmap										
IntStr.eager	R	Real.eager										
IntStr.elems	R	Real.elems										
IntStr.emit	R	Real.emit										
IntStr.encode	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi method encode(Str:D: $encoding, $nf --&gt; Blob)</code></pre><p>Returns a Blob which represents the original string in the given encoding and normal form.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_encode
IntStr.end	R	Real.end										
IntStr.ends-with	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi method ends-with(Str:D: Str(Cool) $needle --&gt; True:D)</code></pre><p>Returns True if the invocant is identical to or ends with $needle.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_ends-with
IntStr.exit	R	Real.exit										
IntStr.exp	R	Real.exp										
IntStr.expmod	A			Perl 6 IntStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Int%29_routine_expmod
IntStr.export	R	Real.export										
IntStr.fc	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub    fc(Str:D  --&gt; Str:D)multi method fc(Str:D: --&gt; Str:D)</code></pre><p>Does a Unicode "fold case" operation suitable for doing caseless string comparisons.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_fc
IntStr.fc	R	Real.fc										
IntStr.flat	R	Real.flat										
IntStr.flip	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub    flip(Str:D  --&gt; Str:D)multi method flip(Str:D: --&gt; Str:D)</code></pre><p>Returns the string reversed character by character.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_flip
IntStr.flip	R	Real.flip										
IntStr.floor	R	Real.floor										
IntStr.floor	R	Real.floor										
IntStr.fmt	R	Real.fmt										
IntStr.gist	R	Real.gist										
IntStr.indent	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi method indent(Int $steps where { $_ == 0 } )multi method indent(Int $steps where { $_ &gt; 0  } )multi method indent($steps where { .isa(Whatever) || .isa(Int) &amp;&amp; $_ &lt; 0 } )</code></pre><p>Indents each line of the string by $steps.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_indent
IntStr.index	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub    index(Cool $s, Str:D $needle, Cool $startpos = 0 --&gt; Int)multi method index(Cool $needle, Cool $startpos = 0 --&gt; Int)</code></pre><p>Searches for $needle in the string starting from $startpos.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_index
IntStr.index	R	Real.index										
IntStr.is-prime	A			Perl 6 IntStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Int%29_routine_is-prime
IntStr.isa	R	Real.isa										
IntStr.item	R	Real.item										
IntStr.lc	A			Perl 6 IntStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_lc
IntStr.lc	R	Real.lc										
IntStr.lines	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub    lines(Str:D $input, $limit = Inf --&gt; Positional)multi method lines(Str:D $input: $limit = Inf --&gt; Positional)</code></pre><p>Returns a list of lines (without trailing newline characters), i.e. the same as a call to $input.comb( / ^^ &#92;N* /, $limit ) would.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_lines
IntStr.lines	R	Real.lines										
IntStr.list	R	Real.list										
IntStr.log	R	Real.log										
IntStr.log10	R	Real.log10										
IntStr.lsb	A			Perl 6 IntStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Int%29_routine_lsb
IntStr.map	R	Real.map										
IntStr.match	A			Perl 6 IntStr							<section class="prog__container"><pre><code>method match($pat, :continue(:$c), :pos(:$p), :global(:$g), :overlap(:$ov), :exhaustive(:$ex), :st(:$nd), :rd(:$th), :$nth, :$x --&gt; Match)</code></pre><p>Performs a match of the string against $pat and returns a Match object if there is a successful match, and (Any) otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_match
IntStr.match	R	Real.match										
IntStr.msb	A			Perl 6 IntStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Int%29_routine_msb
IntStr.new	A			Perl 6 IntStr							<section class="prog__container"><pre><code>method new(Int $i, Str $s)</code></pre><p>The constructor requires both the Int and the Str value, when constructing one directly the values can be whatever is required:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#method_new
IntStr.new	R	Real.new										
IntStr.none	R	Real.none										
IntStr.not	R	Real.not										
IntStr.one	R	Real.one										
IntStr.ord	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub    ord(Str:D  --&gt; Int:D)multi method ord(Str:D: --&gt; Int:D)</code></pre><p>Returns the codepoint number of the base characters of the first grapheme in the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_ord
IntStr.ord	R	Real.ord										
IntStr.ords	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi method ords(Str:D: --&gt; Positional)</code></pre><p>Returns a list of Unicode codepoint numbers that describe the codepoints making up the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_ords
IntStr.ords	R	Real.ords										
IntStr.pairup	R	Real.pairup										
IntStr.parse-base	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub    parse-base(Str:D $num, Int:D $radix --&gt; Numeric)multi method parse-base(Str:D $num: Int:D $radix --&gt; Numeric)</code></pre><p>Performs the reverse of base by converting a string with a base-$radix number to its base-10 Numeric equivalent.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_parse-base
IntStr.perl	R	Real.perl										
IntStr.polymod	A			Perl 6 IntStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Int%29_method_polymod
IntStr.pred	A			Perl 6 IntStr							<section class="prog__container"><pre><code>method pred(Str:D: --&gt; Str:D)</code></pre><p>Returns the string decremented by one.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_pred
IntStr.print	R	Real.print										
IntStr.push	R	Real.push										
IntStr.put	R	Real.put										
IntStr.rand	R	Real.rand										
IntStr.rand	R	Real.rand										
IntStr.return	R	Real.return										
IntStr.return-rw	R	Real.return-rw										
IntStr.reverse	R	Real.reverse										
IntStr.rindex	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub    rindex(Str:D $haystack, Str:D $needle, Int $startpos = $haystack.chars --&gt; Int)multi method rindex(Str:D $haystack: Str:D $needle, Int $startpos = $haystack.chars --&gt; Int)</code></pre><p>Returns the last position of $needle in $haystack not after $startpos.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_rindex
IntStr.rindex	R	Real.rindex										
IntStr.roots	R	Real.roots										
IntStr.round	R	Real.round										
IntStr.round	R	Real.round										
IntStr.samecase	R	Real.samecase										
IntStr.samemark	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub samemark(Str:D $string, Str:D $pattern --&gt; Str:D)method    samemark(Str:D: Str:D $pattern --&gt; Str:D)</code></pre><p>Returns a copy of $string with the mark/accent information for each character changed such that it matches the mark/accent of the corresponding character in $pattern.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_samemark
IntStr.say	R	Real.say										
IntStr.sec	R	Real.sec										
IntStr.sech	R	Real.sech										
IntStr.sign	R	Real.sign										
IntStr.sign	R	Real.sign										
IntStr.sin	R	Real.sin										
IntStr.sinh	R	Real.sinh										
IntStr.so	R	Real.so										
IntStr.sort	R	Real.sort										
IntStr.split	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub    split(  Str:D $delimiter, Str:D $input, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi sub    split(Regex:D $delimiter, Str:D $input, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi sub    split(List:D $delimiters, Str:D $input, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi method split(Str:D:   Str:D $delimiter, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi method split(Str:D: Regex:D $delimiter, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi method split(Str:D: List:D $delimiters, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)</code></pre><p>Splits a string up into pieces based on delimiters found in the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_split
IntStr.split	R	Real.split										
IntStr.sprintf	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub sprintf( Str:D $format, *@args --&gt; Str:D)</code></pre><p>This function is mostly identical to the C library sprintf and printf functions.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_sub_sprintf
IntStr.sqrt	R	Real.sqrt										
IntStr.starts-with	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi method starts-with(Str:D: Str(Cool) $needle --&gt; True:D)</code></pre><p>Returns True if the invocant is identical to or starts with $needle.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_starts-with
IntStr.subst	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi method subst(Str:D: $matcher, $replacement, *%opts)</code></pre><p>Returns the invocant string where $matcher is replaced by $replacement (or the original string, if no match was found).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_subst
IntStr.subst-mutate	A			Perl 6 IntStr							<section class="prog__container"><p>Where subst returns the modified string and leaves the original unchanged, it is possible to mutate the original string by using subst-mutate.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_subst-mutate
IntStr.substr	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub    substr(Str:D $s, Int:D $from, Int:D $chars = $s.chars - $from --&gt; Str:D)multi sub    substr(Str:D $s, Range $from-to --&gt; Str:D)multi method substr(Str:D $s: Int:D $from, Int:D $chars = $s.chars - $from --&gt; Str:D)multi method substr(Str:D $s: Range $from-to --&gt; Str:D)</code></pre><p>Returns a part of the string, starting from the character with index $from (where the first character has index 0) and with length $chars.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_substr
IntStr.substr	R	Real.substr										
IntStr.substr-eq	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi method substr-eq(Str:D:  Str(Cool) $test-string, Int(Cool) $from --&gt; Bool)multi method substr-eq(Cool:D: Str(Cool) $test-string, Int(Cool) $from --&gt; Bool)</code></pre><p>Returns True if the $test-string exactly matches the String object, starting from the given initial index $from.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_substr-eq
IntStr.substr-rw	A			Perl 6 IntStr							<section class="prog__container"><pre><code>method substr-rw($from, $length?)</code></pre><p>A version of substr that returns a Proxy functioning as a writable reference to a part of a string variable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_substr-rw
IntStr.succ	A			Perl 6 IntStr							<section class="prog__container"><pre><code>method succ(Str:D --&gt; Str:D)</code></pre><p>Returns the string incremented by one.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_succ
IntStr.take	R	Real.take										
IntStr.take	R	Real.take										
IntStr.take-rw	R	Real.take-rw										
IntStr.tan	R	Real.tan										
IntStr.tanh	R	Real.tanh										
IntStr.tc	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub    tc(Str:D  --&gt; Str:D)multi method tc(Str:D: --&gt; Str:D)</code></pre><p>Does a Unicode "titlecase" operation, that is changes the first character in the string to title case, or to upper case if the character has no title case mapping&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_tc
IntStr.tc	R	Real.tc										
IntStr.tclc	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub    tclc(Str:D  --&gt; Str:D)multi method tclc(Str:D: --&gt; Str:D)</code></pre><p>Turns the first character to title case, and all other characters to lower case&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_tclc
IntStr.tclc	R	Real.tclc										
IntStr.trans	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi method trans(Str:D: Pair:D &#92;what, *%n --&gt; Str)multi method trans(Str:D: *@changes, :complement(:$c), :squash(:$s), :delete(:$d) --&gt; Str)</code></pre><p>Replaces one or many characters with one or many characters.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_trans
IntStr.trim	A			Perl 6 IntStr							<section class="prog__container"><pre><code>method trim(Str:D: --&gt; Str)</code></pre><p>Remove leading and trailing whitespace.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_trim
IntStr.trim	R	Real.trim										
IntStr.trim-leading	A			Perl 6 IntStr							<section class="prog__container"><pre><code>method trim-leading(Str:D: --&gt; Str)</code></pre><p>Remove the whitespace characters from the beginning of a string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_trim-leading
IntStr.trim-leading	R	Real.trim-leading										
IntStr.trim-trailing	A			Perl 6 IntStr							<section class="prog__container"><pre><code>method trim-trailing(Str:D: --&gt; Str)</code></pre><p>Remove the whitespace characters from the end of a string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_trim-trailing
IntStr.trim-trailing	R	Real.trim-trailing										
IntStr.truncate	R	Real.truncate										
IntStr.truncate	R	Real.truncate										
IntStr.uc	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub    uc(Str:D  --&gt; Str:D)multi method uc(Str:D: --&gt; Str:D)</code></pre><p>Returns an uppercase version of the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_uc
IntStr.uc	R	Real.uc										
IntStr.unimatch	R	Real.unimatch										
IntStr.uniname	R	Real.uniname										
IntStr.uninames	R	Real.uninames										
IntStr.uniprop	R	Real.uniprop										
IntStr.uniprops	R	Real.uniprops										
IntStr.unival	A			Perl 6 IntStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Int%29_routine_unival
IntStr.unival	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi method unival(Str:D --&gt; Numeric)</code></pre><p>Returns the numeric value that the first codepoint in the invocant represents, or NaN if it's not numeric.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_unival
IntStr.univals	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi method univals(Str:D --&gt; List)</code></pre><p>Returns a list of numeric values represented by each codepoint in the invocant string, and NaN for non-numeric characters.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_method_univals
IntStr.unpolar	R	Real.unpolar										
IntStr.val	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub val(Str:D $MAYBEVAL, :$val-or-fail)</code></pre><p>Given a Str that may be parsable as a numeric value, it will attempt to construct the appropriate allomorph, returning one of IntStr, NumStr, RatStr or ComplexStr or a plain Str if a numeric value cannot be parsed.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_sub_val
IntStr.wordcase	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub    wordcase(Cool $x  --&gt; Str)multi sub    wordcase(Str:D $x --&gt; Str)multi method wordcase(Str:D: :&amp;filter = &amp;tclc, Mu :$where = True --&gt; Str)</code></pre><p>Returns a string in which &amp;filter has been applied to all the words that match $where.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_wordcase
IntStr.wordcase	R	Real.wordcase										
IntStr.words	A			Perl 6 IntStr							<section class="prog__container"><pre><code>multi sub    words(Str:D $input, $limit = Inf --&gt; Positional)multi method words(Str:D $input: $limit = Inf --&gt; Positional)</code></pre><p>Returns a list of non-whitespace bits, i.e. the same as a call to $input.comb( / &#92;S+ /, $limit ) would.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/IntStr.html#%28Str%29_routine_words
IntStr.words	R	Real.words										
Iterable.flat	A			Perl 6 Iterable							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Iterable.html#method_flat
Iterable.hyper	A			Perl 6 Iterable							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Iterable.html#method_hyper
Iterable.iterator	A			Perl 6 Iterable							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Iterable.html#method_iterator
Iterable.lazy	A			Perl 6 Iterable							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Iterable.html#method_lazy
Iterable.race	A			Perl 6 Iterable							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Iterable.html#method_race
Iterator.is-lazy	A			Perl 6 Iterator							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Iterator.html#method_is-lazy
Iterator.pull-one	A			Perl 6 Iterator							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Iterator.html#method_pull-one
Iterator.push-all	A			Perl 6 Iterator							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Iterator.html#method_push-all
Iterator.push-at-least	A			Perl 6 Iterator							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Iterator.html#method_push-at-least
Iterator.push-exactly	A			Perl 6 Iterator							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Iterator.html#method_push-exactly
Iterator.push-until-lazy	A			Perl 6 Iterator							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Iterator.html#method_push-until-lazy
Iterator.sink-all	A			Perl 6 Iterator							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Iterator.html#method_sink-all
Iterator.skip-at-least	A			Perl 6 Iterator							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Iterator.html#method_skip-at-least
Iterator.skip-at-least-pull-one	A			Perl 6 Iterator							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Iterator.html#method_skip-at-least-pull-one
Iterator.skip-one	A			Perl 6 Iterator							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Iterator.html#method_skip-one
Junction.ACCEPTS	A			Perl 6 Junction							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_method_ACCEPTS
Junction.Bool	A			Perl 6 Junction							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_routine_Bool
Junction.CREATE	A			Perl 6 Junction							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_method_CREATE
Junction.Str	A			Perl 6 Junction							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_method_Str
Junction.WHERE	A			Perl 6 Junction							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_method_WHERE
Junction.WHICH	A			Perl 6 Junction							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_method_WHICH
Junction.WHY	A			Perl 6 Junction							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_method_WHY
Junction.bless	A			Perl 6 Junction							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_method_bless
Junction.clone	A			Perl 6 Junction							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_method_clone
Junction.defined	A			Perl 6 Junction							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_routine_defined
Junction.does	A			Perl 6 Junction							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_routine_does
Junction.emit	A			Perl 6 Junction							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_method_emit
Junction.export	A			Perl 6 Junction							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_trait_is_export
Junction.gist	A			Perl 6 Junction							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_routine_gist
Junction.isa	A			Perl 6 Junction							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_routine_isa
Junction.item	A			Perl 6 Junction							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_method_item
Junction.new	A			Perl 6 Junction							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_method_new
Junction.not	A			Perl 6 Junction							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_method_not
Junction.perl	A			Perl 6 Junction							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_routine_perl
Junction.print	A			Perl 6 Junction							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_method_print
Junction.put	A			Perl 6 Junction							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_method_put
Junction.return	A			Perl 6 Junction							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_method_return
Junction.return-rw	A			Perl 6 Junction							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_method_return-rw
Junction.say	A			Perl 6 Junction							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_method_say
Junction.so	A			Perl 6 Junction							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_method_so
Junction.take	A			Perl 6 Junction							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_method_take
Junction.take	A			Perl 6 Junction							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_routine_take
Junction.take-rw	A			Perl 6 Junction							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Junction.html#%28Mu%29_routine_take-rw
Label.ACCEPTS	A			Perl 6 Label							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Any%29_method_ACCEPTS
Label.ACCEPTS	A			Perl 6 Label							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_method_ACCEPTS
Label.Bool	A			Perl 6 Label							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_routine_Bool
Label.CREATE	A			Perl 6 Label							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_method_CREATE
Label.Str	A			Perl 6 Label							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_method_Str
Label.WHERE	A			Perl 6 Label							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_method_WHERE
Label.WHICH	A			Perl 6 Label							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_method_WHICH
Label.WHY	A			Perl 6 Label							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_method_WHY
Label.all	A			Perl 6 Label							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Any%29_method_all
Label.any	A			Perl 6 Label							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Any%29_method_any
Label.bless	A			Perl 6 Label							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_method_bless
Label.clone	A			Perl 6 Label							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_method_clone
Label.deepmap	A			Perl 6 Label							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Any%29_method_deepmap
Label.defined	A			Perl 6 Label							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_routine_defined
Label.does	A			Perl 6 Label							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_routine_does
Label.duckmap	A			Perl 6 Label							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Any%29_method_duckmap
Label.eager	A			Perl 6 Label							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Any%29_method_eager
Label.elems	A			Perl 6 Label							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Any%29_method_elems
Label.emit	A			Perl 6 Label							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_method_emit
Label.end	A			Perl 6 Label							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Any%29_method_end
Label.exit	A			Perl 6 Label							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Any%29_sub_exit
Label.export	A			Perl 6 Label							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_trait_is_export
Label.flat	A			Perl 6 Label							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Any%29_method_flat
Label.gist	A			Perl 6 Label							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_routine_gist
Label.isa	A			Perl 6 Label							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_routine_isa
Label.item	A			Perl 6 Label							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_method_item
Label.last	A			Perl 6 Label							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#method_last
Label.list	A			Perl 6 Label							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Any%29_method_list
Label.map	A			Perl 6 Label							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Any%29_method_map
Label.new	A			Perl 6 Label							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_method_new
Label.next	A			Perl 6 Label							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#method_next
Label.none	A			Perl 6 Label							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Any%29_method_none
Label.not	A			Perl 6 Label							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_method_not
Label.one	A			Perl 6 Label							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Any%29_method_one
Label.pairup	A			Perl 6 Label							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Any%29_method_pairup
Label.perl	A			Perl 6 Label							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_routine_perl
Label.print	A			Perl 6 Label							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_method_print
Label.push	A			Perl 6 Label							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Any%29_method_push
Label.put	A			Perl 6 Label							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_method_put
Label.return	A			Perl 6 Label							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_method_return
Label.return-rw	A			Perl 6 Label							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_method_return-rw
Label.reverse	A			Perl 6 Label							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Any%29_routine_reverse
Label.say	A			Perl 6 Label							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_method_say
Label.so	A			Perl 6 Label							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_method_so
Label.sort	A			Perl 6 Label							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Any%29_method_sort
Label.take	A			Perl 6 Label							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_method_take
Label.take	A			Perl 6 Label							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_routine_take
Label.take-rw	A			Perl 6 Label							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Label.html#%28Mu%29_routine_take-rw
List.ACCEPTS	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Any%29_method_ACCEPTS
List.ACCEPTS	A			Perl 6 List							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_method_ACCEPTS
List.Bool	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#method_Bool
List.Bool	A			Perl 6 List							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_routine_Bool
List.CREATE	A			Perl 6 List							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_method_CREATE
List.Capture	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#method_Capture
List.EVAL	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_EVAL
List.EVALFILE	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_EVALFILE
List.IO	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_method_IO
List.Int	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#method_Int
List.Numeric	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#method_Numeric
List.Str	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#method_Str
List.Str	A			Perl 6 List							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_method_Str
List.WHERE	A			Perl 6 List							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_method_WHERE
List.WHICH	A			Perl 6 List							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_method_WHICH
List.WHY	A			Perl 6 List							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_method_WHY
List.abs	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_abs
List.acos	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_acos
List.acosec	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_acosec
List.acosech	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_acosech
List.acosh	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_acosh
List.acotan	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_acotan
List.acotanh	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_acotanh
List.all	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Any%29_method_all
List.antipairs	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_antipairs
List.any	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Any%29_method_any
List.asec	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_asec
List.asech	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_asech
List.asin	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_asin
List.asinh	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_asinh
List.atan	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_atan
List.atan2	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_atan2
List.atanh	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_atanh
List.bless	A			Perl 6 List							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_method_bless
List.categorize	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_categorize
List.ceiling	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_ceiling
List.chars	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_chars
List.chomp	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_chomp
List.chop	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_chop
List.chr	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_chr
List.chrs	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_chrs
List.cis	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_cis
List.classify	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_classify
List.clone	A			Perl 6 List							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_method_clone
List.codes	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_codes
List.comb	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_comb
List.combinations	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_combinations
List.conj	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_method_conj
List.contains	A			Perl 6 List							<section class="prog__container"><pre><code>multi method contains(Cool:D: Str(Cool) $needle, Cool $start? --&gt; Bool:D)</code></pre><p>Returns True if the invocant contains the $needle at any position within the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_method_contains
List.cos	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_cos
List.cosec	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_cosec
List.cosech	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_cosech
List.cosh	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_cosh
List.cotan	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_cotan
List.cotanh	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_cotanh
List.cross	A			Perl 6 List							<section class="prog__container"><pre><code>sub cross(+@e, :&amp;with --&gt; Seq:D)</code></pre><p>Computes the cross-product of two or more lists or iterables.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_cross
List.deepmap	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Any%29_method_deepmap
List.defined	A			Perl 6 List							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_routine_defined
List.does	A			Perl 6 List							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_routine_does
List.duckmap	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Any%29_method_duckmap
List.eager	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_eager
List.eager	A			Perl 6 List							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Any%29_method_eager
List.elems	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_elems
List.elems	A			Perl 6 List							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Any%29_method_elems
List.emit	A			Perl 6 List							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_method_emit
List.end	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_end
List.end	A			Perl 6 List							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Any%29_method_end
List.exit	A			Perl 6 List							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Any%29_sub_exit
List.exp	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_method_exp
List.export	A			Perl 6 List							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_trait_is_export
List.fc	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_fc
List.first	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_first
List.flat	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Iterable%29_method_flat
List.flat	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#sub_flat
List.flat	A			Perl 6 List							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Any%29_method_flat
List.flatmap	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#method_flatmap
List.flip	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_flip
List.floor	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_floor
List.fmt	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_method_fmt
List.fmt	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#method_fmt
List.from	A			Perl 6 List							<section class="prog__container"><p>Assumes the list contains Match objects and returns the value of .from called on the first element of the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#method_from
List.gist	A			Perl 6 List							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_routine_gist
List.grep	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_grep
List.head	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#method_head
List.hyper	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Iterable%29_method_hyper
List.index	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_index
List.isa	A			Perl 6 List							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_routine_isa
List.item	A			Perl 6 List							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_method_item
List.iterator	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Iterable%29_method_iterator
List.join	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_join
List.keys	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_keys
List.kv	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_kv
List.lazy	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Iterable%29_method_lazy
List.lc	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_lc
List.lines	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_lines
List.list	A			Perl 6 List							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Any%29_method_list
List.log	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_log
List.log10	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_log10
List.map	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Any%29_method_map
List.map	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_map
List.match	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_match
List.new	A			Perl 6 List							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_method_new
List.none	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Any%29_method_none
List.not	A			Perl 6 List							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_method_not
List.of	A			Perl 6 List							<section class="prog__container"><pre><code>method of()</code></pre><p>Returns the type constraint for elements of the positional container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Positional%29_method_of
List.one	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Any%29_method_one
List.ord	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_ord
List.ords	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_ords
List.pairs	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_pairs
List.pairup	A			Perl 6 List							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Any%29_method_pairup
List.perl	A			Perl 6 List							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_routine_perl
List.permutations	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_permutations
List.pick	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_pick
List.print	A			Perl 6 List							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_method_print
List.produce	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_produce
List.push	A			Perl 6 List							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Any%29_method_push
List.put	A			Perl 6 List							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_method_put
List.race	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Iterable%29_method_race
List.rand	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_method_rand
List.reduce	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_reduce
List.repeated	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_repeated
List.return	A			Perl 6 List							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_method_return
List.return-rw	A			Perl 6 List							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_method_return-rw
List.reverse	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Any%29_routine_reverse
List.reverse	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_reverse
List.rindex	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_rindex
List.roll	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_roll
List.roots	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_roots
List.rotate	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_rotate
List.rotor	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#method_rotor
List.round	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_round
List.roundrobin	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#sub_roundrobin
List.samecase	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_samecase
List.say	A			Perl 6 List							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_method_say
List.sec	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_method_sec
List.sech	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_sech
List.sign	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_method_sign
List.sin	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_sin
List.sinh	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_sinh
List.so	A			Perl 6 List							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_method_so
List.sort	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_sort
List.sort	A			Perl 6 List							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Any%29_method_sort
List.split	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_split
List.sqrt	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_sqrt
List.squish	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_squish
List.substr	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_substr
List.sum	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_sum
List.tail	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#method_tail
List.take	A			Perl 6 List							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_method_take
List.take	A			Perl 6 List							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_routine_take
List.take-rw	A			Perl 6 List							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Mu%29_routine_take-rw
List.tan	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_tan
List.tanh	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_tanh
List.tc	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_tc
List.tclc	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_tclc
List.to	A			Perl 6 List							<section class="prog__container"><pre><code>"abc123def" ~~ m:g/&#92;d/;say $/.to; # 6 </code></pre><p>Assumes the List contains Match objects, such as the $/ variable being a List, when using :g modifier in regexes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#method_to
List.trim	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_trim
List.trim-leading	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_trim-leading
List.trim-trailing	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_trim-trailing
List.truncate	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_truncate
List.uc	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_uc
List.unimatch	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_method_unimatch
List.uniname	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_method_uniname
List.uninames	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_method_uninames
List.uniprop	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_method_uniprop
List.uniprops	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_method_uniprops
List.unique	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_unique
List.unpolar	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_method_unpolar
List.values	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_values
List.wordcase	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_routine_wordcase
List.words	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#%28Cool%29_method_words
List.zip	A			Perl 6 List							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/List.html#routine_zip
Lock.ACCEPTS	A			Perl 6 Lock							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Any%29_method_ACCEPTS
Lock.ACCEPTS	A			Perl 6 Lock							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_method_ACCEPTS
Lock.Bool	A			Perl 6 Lock							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_routine_Bool
Lock.CREATE	A			Perl 6 Lock							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_method_CREATE
Lock.Str	A			Perl 6 Lock							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_method_Str
Lock.WHERE	A			Perl 6 Lock							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_method_WHERE
Lock.WHICH	A			Perl 6 Lock							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_method_WHICH
Lock.WHY	A			Perl 6 Lock							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_method_WHY
Lock.all	A			Perl 6 Lock							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Any%29_method_all
Lock.any	A			Perl 6 Lock							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Any%29_method_any
Lock.bless	A			Perl 6 Lock							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_method_bless
Lock.clone	A			Perl 6 Lock							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_method_clone
Lock.condition	A			Perl 6 Lock							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#method_condition
Lock.deepmap	A			Perl 6 Lock							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Any%29_method_deepmap
Lock.defined	A			Perl 6 Lock							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_routine_defined
Lock.does	A			Perl 6 Lock							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_routine_does
Lock.duckmap	A			Perl 6 Lock							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Any%29_method_duckmap
Lock.eager	A			Perl 6 Lock							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Any%29_method_eager
Lock.elems	A			Perl 6 Lock							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Any%29_method_elems
Lock.emit	A			Perl 6 Lock							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_method_emit
Lock.end	A			Perl 6 Lock							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Any%29_method_end
Lock.exit	A			Perl 6 Lock							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Any%29_sub_exit
Lock.export	A			Perl 6 Lock							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_trait_is_export
Lock.flat	A			Perl 6 Lock							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Any%29_method_flat
Lock.gist	A			Perl 6 Lock							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_routine_gist
Lock.isa	A			Perl 6 Lock							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_routine_isa
Lock.item	A			Perl 6 Lock							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_method_item
Lock.list	A			Perl 6 Lock							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Any%29_method_list
Lock.lock	A			Perl 6 Lock							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#method_lock
Lock.map	A			Perl 6 Lock							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Any%29_method_map
Lock.new	A			Perl 6 Lock							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_method_new
Lock.none	A			Perl 6 Lock							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Any%29_method_none
Lock.not	A			Perl 6 Lock							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_method_not
Lock.one	A			Perl 6 Lock							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Any%29_method_one
Lock.pairup	A			Perl 6 Lock							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Any%29_method_pairup
Lock.perl	A			Perl 6 Lock							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_routine_perl
Lock.print	A			Perl 6 Lock							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_method_print
Lock.protect	A			Perl 6 Lock							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#method_protect
Lock.push	A			Perl 6 Lock							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Any%29_method_push
Lock.put	A			Perl 6 Lock							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_method_put
Lock.return	A			Perl 6 Lock							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_method_return
Lock.return-rw	A			Perl 6 Lock							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_method_return-rw
Lock.reverse	A			Perl 6 Lock							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Any%29_routine_reverse
Lock.say	A			Perl 6 Lock							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_method_say
Lock.so	A			Perl 6 Lock							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_method_so
Lock.sort	A			Perl 6 Lock							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Any%29_method_sort
Lock.take	A			Perl 6 Lock							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_method_take
Lock.take	A			Perl 6 Lock							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_routine_take
Lock.take-rw	A			Perl 6 Lock							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#%28Mu%29_routine_take-rw
Lock.unlock	A			Perl 6 Lock							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Lock.html#method_unlock
Macro.ACCEPTS	A			Perl 6 Macro							<section class="prog__container"><pre><code>multi method ACCEPTS(Code:D: Mu $topic)</code></pre><p>Usually calls the code object and passes $topic as an argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Code%29_method_ACCEPTS
Macro.ACCEPTS	R	Callable.ACCEPTS										
Macro.ACCEPTS	R	Callable.ACCEPTS										
Macro.Bool	R	Callable.Bool										
Macro.CALL-ME	R	Callable.CALL-ME										
Macro.CREATE	R	Callable.CREATE										
Macro.DEPRECATED	A			Perl 6 Macro							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine:D $r, :$DEPRECATED!)</code></pre><p>Marks a routine as deprecated, optionally with a message what to use instead.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Routine%29_trait_is_DEPRECATED
Macro.Str	A			Perl 6 Macro							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Code%29_method_Str
Macro.Str	R	Callable.Str										
Macro.WHERE	R	Callable.WHERE										
Macro.WHICH	R	Callable.WHICH										
Macro.WHY	R	Callable.WHY										
Macro.all	R	Callable.all										
Macro.any	R	Callable.any										
Macro.arity	A			Perl 6 Macro							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Code%29_method_arity
Macro.assuming	R	Callable.assuming										
Macro.bless	R	Callable.bless										
Macro.cached	A			Perl 6 Macro							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$cached!)</code></pre><p>NOTE: this feature is currently EXPERIMENTAL.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Routine%29_trait_is_cached
Macro.candidates	A			Perl 6 Macro							<section class="prog__container"><pre><code>method candidates(Routine:D: --&gt; Positional:D)</code></pre><p>Returns a list of multi candidates, or a one-element list with itself if it's not a multi&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Routine%29_method_candidates
Macro.cando	A			Perl 6 Macro							<section class="prog__container"><pre><code>method cando(Capture $c)</code></pre><p>Returns a possibly-empty list of candidates that can be called with the given Capture, ordered by narrowest candidate first.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Routine%29_method_cando
Macro.clone	R	Callable.clone										
Macro.count	A			Perl 6 Macro							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Code%29_method_count
Macro.deepmap	R	Callable.deepmap										
Macro.defined	R	Callable.defined										
Macro.does	R	Callable.does										
Macro.duckmap	R	Callable.duckmap										
Macro.eager	R	Callable.eager										
Macro.elems	R	Callable.elems										
Macro.emit	R	Callable.emit										
Macro.end	R	Callable.end										
Macro.exit	R	Callable.exit										
Macro.export	A			Perl 6 Macro							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$export!)</code></pre><p>Marks a routine as exported to the rest of the world&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Routine%29_trait_is_export
Macro.export	R	Callable.export										
Macro.file	A			Perl 6 Macro							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Code%29_method_file
Macro.flat	R	Callable.flat										
Macro.gist	R	Callable.gist										
Macro.hidden-from-backtrace	A			Perl 6 Macro							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine:D, :$hidden-from-backtrace!)</code></pre><p>Hides a routine from showing up in a default backtrace.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Routine%29_trait_is_hidden-from-backtrace
Macro.isa	R	Callable.isa										
Macro.item	R	Callable.item										
Macro.line	A			Perl 6 Macro							<section class="prog__container"><p>Defined as&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Code%29_method_line
Macro.list	R	Callable.list										
Macro.map	R	Callable.map										
Macro.multi	A			Perl 6 Macro							<section class="prog__container"><pre><code>method multi(Routine:D: --&gt; Bool:D)</code></pre><p>Returns True if the routine is a multi sub or method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Routine%29_method_multi
Macro.name	A			Perl 6 Macro							<section class="prog__container"><pre><code>method name(Routine:D: --&gt; Str:D)</code></pre><p>Returns the name of the sub or method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Routine%29_method_name
Macro.new	R	Callable.new										
Macro.none	R	Callable.none										
Macro.not	R	Callable.not										
Macro.one	R	Callable.one										
Macro.package	A			Perl 6 Macro							<section class="prog__container"><pre><code>method package(Routine:D:)</code></pre><p>Returns the package in which the routine is defined.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Routine%29_method_package
Macro.pairup	R	Callable.pairup										
Macro.perl	R	Callable.perl										
Macro.print	R	Callable.print										
Macro.pure	A			Perl 6 Macro							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$pure!)</code></pre><p>Marks a subroutine as pure, that is, it asserts that for the same input, it will always produce the same output without any additional side effects.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Routine%29_trait_is_pure
Macro.push	R	Callable.push										
Macro.put	R	Callable.put										
Macro.return	R	Callable.return										
Macro.return-rw	R	Callable.return-rw										
Macro.reverse	R	Callable.reverse										
Macro.rw	A			Perl 6 Macro							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$rw!)</code></pre><p>When a routine is modified with this trait, its return value will be writable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Routine%29_trait_is_rw
Macro.say	R	Callable.say										
Macro.signature	A			Perl 6 Macro							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Code%29_method_signature
Macro.so	R	Callable.so										
Macro.sort	R	Callable.sort										
Macro.take	R	Callable.take										
Macro.take	R	Callable.take										
Macro.take-rw	R	Callable.take-rw										
Macro.unwrap	A			Perl 6 Macro							<section class="prog__container"><pre><code>method unwrap(Routine:D: $wraphandler)</code></pre><p>Restores the original routine after it has been wrapped with wrap.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Routine%29_method_unwrap
Macro.wrap	A			Perl 6 Macro							<section class="prog__container"><pre><code>method wrap(Routine:D: &amp;wrapper)</code></pre><p>Wraps (i.e. in-place modifies) the routine.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Routine%29_method_wrap
Macro.yada	A			Perl 6 Macro							<section class="prog__container"><pre><code>method yada(Routine:D: --&gt; Bool:D)</code></pre><p>Returns True if the routine is a stub&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Macro.html#%28Routine%29_method_yada
Map.ACCEPTS	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Any%29_method_ACCEPTS
Map.ACCEPTS	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#method_ACCEPTS
Map.ACCEPTS	A			Perl 6 Map							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_method_ACCEPTS
Map.Bool	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#method_Bool
Map.Bool	A			Perl 6 Map							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_routine_Bool
Map.CREATE	A			Perl 6 Map							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_method_CREATE
Map.Capture	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#method_Capture
Map.EVAL	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_EVAL
Map.EVALFILE	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_EVALFILE
Map.IO	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_method_IO
Map.Int	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#method_Int
Map.Numeric	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#method_Numeric
Map.Str	A			Perl 6 Map							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_method_Str
Map.WHERE	A			Perl 6 Map							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_method_WHERE
Map.WHICH	A			Perl 6 Map							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_method_WHICH
Map.WHY	A			Perl 6 Map							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_method_WHY
Map.abs	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_abs
Map.acos	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_acos
Map.acosec	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_acosec
Map.acosech	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_acosech
Map.acosh	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_acosh
Map.acotan	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_acotan
Map.acotanh	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_acotanh
Map.all	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Any%29_method_all
Map.antipairs	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#method_antipairs
Map.any	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Any%29_method_any
Map.asec	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_asec
Map.asech	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_asech
Map.asin	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_asin
Map.asinh	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_asinh
Map.atan	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_atan
Map.atan2	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_atan2
Map.atanh	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_atanh
Map.bless	A			Perl 6 Map							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_method_bless
Map.ceiling	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_ceiling
Map.chars	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_chars
Map.chomp	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_chomp
Map.chop	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_chop
Map.chr	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_chr
Map.chrs	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_chrs
Map.cis	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_cis
Map.clone	A			Perl 6 Map							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_method_clone
Map.codes	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_codes
Map.comb	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_comb
Map.conj	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_method_conj
Map.contains	A			Perl 6 Map							<section class="prog__container"><pre><code>multi method contains(Cool:D: Str(Cool) $needle, Cool $start? --&gt; Bool:D)</code></pre><p>Returns True if the invocant contains the $needle at any position within the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_method_contains
Map.cos	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_cos
Map.cosec	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_cosec
Map.cosech	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_cosech
Map.cosh	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_cosh
Map.cotan	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_cotan
Map.cotanh	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_cotanh
Map.deepmap	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Any%29_method_deepmap
Map.defined	A			Perl 6 Map							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_routine_defined
Map.does	A			Perl 6 Map							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_routine_does
Map.duckmap	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Any%29_method_duckmap
Map.eager	A			Perl 6 Map							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Any%29_method_eager
Map.elems	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#method_elems
Map.elems	A			Perl 6 Map							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Any%29_method_elems
Map.emit	A			Perl 6 Map							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_method_emit
Map.end	A			Perl 6 Map							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Any%29_method_end
Map.exit	A			Perl 6 Map							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Any%29_sub_exit
Map.exp	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_method_exp
Map.export	A			Perl 6 Map							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_trait_is_export
Map.fc	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_fc
Map.flat	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Iterable%29_method_flat
Map.flat	A			Perl 6 Map							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Any%29_method_flat
Map.flip	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_flip
Map.floor	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_floor
Map.fmt	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_method_fmt
Map.gist	A			Perl 6 Map							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_routine_gist
Map.hyper	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Iterable%29_method_hyper
Map.index	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_index
Map.invert	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#method_invert
Map.isa	A			Perl 6 Map							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_routine_isa
Map.item	A			Perl 6 Map							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_method_item
Map.iterator	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Iterable%29_method_iterator
Map.keys	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#method_keys
Map.kv	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#method_kv
Map.lazy	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Iterable%29_method_lazy
Map.lc	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_lc
Map.lines	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_lines
Map.list	A			Perl 6 Map							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Any%29_method_list
Map.log	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_log
Map.log10	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_log10
Map.map	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Any%29_method_map
Map.match	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_match
Map.new	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#method_new
Map.new	A			Perl 6 Map							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_method_new
Map.none	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Any%29_method_none
Map.not	A			Perl 6 Map							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_method_not
Map.one	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Any%29_method_one
Map.ord	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_ord
Map.ords	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_ords
Map.pairs	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#method_pairs
Map.pairup	A			Perl 6 Map							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Any%29_method_pairup
Map.perl	A			Perl 6 Map							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_routine_perl
Map.print	A			Perl 6 Map							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_method_print
Map.push	A			Perl 6 Map							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Any%29_method_push
Map.put	A			Perl 6 Map							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_method_put
Map.race	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Iterable%29_method_race
Map.rand	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_method_rand
Map.return	A			Perl 6 Map							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_method_return
Map.return-rw	A			Perl 6 Map							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_method_return-rw
Map.reverse	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Any%29_routine_reverse
Map.rindex	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_rindex
Map.roots	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_roots
Map.round	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_round
Map.samecase	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_samecase
Map.say	A			Perl 6 Map							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_method_say
Map.sec	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_method_sec
Map.sech	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_sech
Map.sign	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_method_sign
Map.sin	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_sin
Map.sinh	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_sinh
Map.so	A			Perl 6 Map							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_method_so
Map.sort	A			Perl 6 Map							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Any%29_method_sort
Map.split	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_split
Map.sqrt	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_sqrt
Map.substr	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_substr
Map.take	A			Perl 6 Map							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_method_take
Map.take	A			Perl 6 Map							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_routine_take
Map.take-rw	A			Perl 6 Map							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Mu%29_routine_take-rw
Map.tan	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_tan
Map.tanh	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_tanh
Map.tc	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_tc
Map.tclc	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_tclc
Map.trim	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_trim
Map.trim-leading	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_trim-leading
Map.trim-trailing	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_trim-trailing
Map.truncate	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_truncate
Map.uc	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_uc
Map.unimatch	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_method_unimatch
Map.uniname	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_method_uniname
Map.uninames	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_method_uninames
Map.uniprop	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_method_uniprop
Map.uniprops	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_method_uniprops
Map.unpolar	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_method_unpolar
Map.values	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#method_values
Map.wordcase	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_routine_wordcase
Map.words	A			Perl 6 Map							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Map.html#%28Cool%29_method_words
Match.ACCEPTS	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Any%29_method_ACCEPTS
Match.ACCEPTS	A			Perl 6 Match							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_method_ACCEPTS
Match.Bool	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Capture%29_method_Bool
Match.Bool	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#method_Bool
Match.Bool	A			Perl 6 Match							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_routine_Bool
Match.CREATE	A			Perl 6 Match							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_method_CREATE
Match.Capture	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Capture%29_method_Capture
Match.EVAL	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_EVAL
Match.EVALFILE	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_EVALFILE
Match.IO	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_method_IO
Match.Numeric	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Capture%29_method_Numeric
Match.Str	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#method_Str
Match.Str	A			Perl 6 Match							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_method_Str
Match.WHERE	A			Perl 6 Match							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_method_WHERE
Match.WHICH	A			Perl 6 Match							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_method_WHICH
Match.WHY	A			Perl 6 Match							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_method_WHY
Match.abs	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_abs
Match.acos	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_acos
Match.acosec	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_acosec
Match.acosech	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_acosech
Match.acosh	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_acosh
Match.acotan	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_acotan
Match.acotanh	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_acotanh
Match.all	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Any%29_method_all
Match.antipairs	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Capture%29_method_antipairs
Match.any	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Any%29_method_any
Match.asec	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_asec
Match.asech	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_asech
Match.asin	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_asin
Match.asinh	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_asinh
Match.ast	A			Perl 6 Match							<section class="prog__container"><p>Alias for method made.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#method_ast
Match.atan	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_atan
Match.atan2	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_atan2
Match.atanh	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_atanh
Match.bless	A			Perl 6 Match							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_method_bless
Match.caps	A			Perl 6 Match							<section class="prog__container"><p>Returns a list of pairs, with the index or submatch name as key and the submatches as values.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#method_caps
Match.ceiling	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_ceiling
Match.chars	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_chars
Match.chomp	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_chomp
Match.chop	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_chop
Match.chr	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_chr
Match.chrs	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_chrs
Match.chunks	A			Perl 6 Match							<section class="prog__container"><p>Returns a list of pairs, with the index or submatch name as key and the submatches as values.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#method_chunks
Match.cis	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_cis
Match.clone	A			Perl 6 Match							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_method_clone
Match.codes	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_codes
Match.comb	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_comb
Match.conj	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_method_conj
Match.contains	A			Perl 6 Match							<section class="prog__container"><pre><code>multi method contains(Cool:D: Str(Cool) $needle, Cool $start? --&gt; Bool:D)</code></pre><p>Returns True if the invocant contains the $needle at any position within the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_method_contains
Match.cos	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_cos
Match.cosec	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_cosec
Match.cosech	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_cosech
Match.cosh	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_cosh
Match.cotan	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_cotan
Match.cotanh	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_cotanh
Match.deepmap	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Any%29_method_deepmap
Match.defined	A			Perl 6 Match							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_routine_defined
Match.does	A			Perl 6 Match							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_routine_does
Match.duckmap	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Any%29_method_duckmap
Match.eager	A			Perl 6 Match							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Any%29_method_eager
Match.elems	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Capture%29_method_elems
Match.elems	A			Perl 6 Match							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Any%29_method_elems
Match.emit	A			Perl 6 Match							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_method_emit
Match.end	A			Perl 6 Match							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Any%29_method_end
Match.exit	A			Perl 6 Match							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Any%29_sub_exit
Match.exp	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_method_exp
Match.export	A			Perl 6 Match							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_trait_is_export
Match.fc	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_fc
Match.flat	A			Perl 6 Match							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Any%29_method_flat
Match.flip	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_flip
Match.floor	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_floor
Match.fmt	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_method_fmt
Match.from	A			Perl 6 Match							<section class="prog__container"><p>Returns the index of the starting position of the match.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#method_from
Match.gist	A			Perl 6 Match							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_routine_gist
Match.hash	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Capture%29_method_hash
Match.hash	A			Perl 6 Match							<section class="prog__container"><p>Returns a hash of named submatches.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#method_hash
Match.index	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_index
Match.isa	A			Perl 6 Match							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_routine_isa
Match.item	A			Perl 6 Match							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_method_item
Match.keys	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Capture%29_method_keys
Match.kv	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Capture%29_method_kv
Match.lc	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_lc
Match.lines	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_lines
Match.list	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Capture%29_method_list
Match.list	A			Perl 6 Match							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Any%29_method_list
Match.list	A			Perl 6 Match							<section class="prog__container"><p>Returns a list of positional submatches.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#method_list
Match.log	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_log
Match.log10	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_log10
Match.made	A			Perl 6 Match							<section class="prog__container"><p>Returns the payload that was set with method make.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#method_made
Match.make	A			Perl 6 Match							<section class="prog__container"><pre><code>method make(Match:D: Mu $ast)sub make(Mu $ast)</code></pre><p>Sets the AST to $ast, and returns it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#method_make
Match.map	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Any%29_method_map
Match.match	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_match
Match.new	A			Perl 6 Match							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_method_new
Match.none	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Any%29_method_none
Match.not	A			Perl 6 Match							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_method_not
Match.one	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Any%29_method_one
Match.ord	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_ord
Match.ords	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_ords
Match.orig	A			Perl 6 Match							<section class="prog__container"><p>Returns the original string that the regex was matched against.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#method_orig
Match.pairs	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Capture%29_method_pairs
Match.pairup	A			Perl 6 Match							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Any%29_method_pairup
Match.perl	A			Perl 6 Match							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_routine_perl
Match.postmatch	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#method_postmatch
Match.prematch	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#method_prematch
Match.print	A			Perl 6 Match							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_method_print
Match.push	A			Perl 6 Match							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Any%29_method_push
Match.put	A			Perl 6 Match							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_method_put
Match.rand	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_method_rand
Match.return	A			Perl 6 Match							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_method_return
Match.return-rw	A			Perl 6 Match							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_method_return-rw
Match.reverse	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Any%29_routine_reverse
Match.rindex	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_rindex
Match.roots	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_roots
Match.round	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_round
Match.samecase	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_samecase
Match.say	A			Perl 6 Match							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_method_say
Match.sec	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_method_sec
Match.sech	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_sech
Match.sign	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_method_sign
Match.sin	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_sin
Match.sinh	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_sinh
Match.so	A			Perl 6 Match							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_method_so
Match.sort	A			Perl 6 Match							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Any%29_method_sort
Match.split	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_split
Match.sqrt	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_sqrt
Match.substr	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_substr
Match.take	A			Perl 6 Match							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_method_take
Match.take	A			Perl 6 Match							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_routine_take
Match.take-rw	A			Perl 6 Match							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Mu%29_routine_take-rw
Match.tan	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_tan
Match.tanh	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_tanh
Match.tc	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_tc
Match.tclc	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_tclc
Match.to	A			Perl 6 Match							<section class="prog__container"><p>Returns the index of the end position of the match.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#method_to
Match.trim	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_trim
Match.trim-leading	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_trim-leading
Match.trim-trailing	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_trim-trailing
Match.truncate	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_truncate
Match.uc	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_uc
Match.unimatch	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_method_unimatch
Match.uniname	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_method_uniname
Match.uninames	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_method_uninames
Match.uniprop	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_method_uniprop
Match.uniprops	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_method_uniprops
Match.unpolar	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_method_unpolar
Match.values	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Capture%29_method_values
Match.wordcase	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_routine_wordcase
Match.words	A			Perl 6 Match							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Match.html#%28Cool%29_method_words
Method.ACCEPTS	A			Perl 6 Method							<section class="prog__container"><pre><code>multi method ACCEPTS(Code:D: Mu $topic)</code></pre><p>Usually calls the code object and passes $topic as an argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Code%29_method_ACCEPTS
Method.ACCEPTS	R	Callable.ACCEPTS										
Method.ACCEPTS	R	Callable.ACCEPTS										
Method.Bool	R	Callable.Bool										
Method.CALL-ME	R	Callable.CALL-ME										
Method.CREATE	R	Callable.CREATE										
Method.DEPRECATED	A			Perl 6 Method							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine:D $r, :$DEPRECATED!)</code></pre><p>Marks a routine as deprecated, optionally with a message what to use instead.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Routine%29_trait_is_DEPRECATED
Method.Str	A			Perl 6 Method							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Code%29_method_Str
Method.Str	R	Callable.Str										
Method.WHERE	R	Callable.WHERE										
Method.WHICH	R	Callable.WHICH										
Method.WHY	R	Callable.WHY										
Method.all	R	Callable.all										
Method.any	R	Callable.any										
Method.arity	A			Perl 6 Method							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Code%29_method_arity
Method.assuming	R	Callable.assuming										
Method.bless	R	Callable.bless										
Method.cached	A			Perl 6 Method							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$cached!)</code></pre><p>NOTE: this feature is currently EXPERIMENTAL.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Routine%29_trait_is_cached
Method.candidates	A			Perl 6 Method							<section class="prog__container"><pre><code>method candidates(Routine:D: --&gt; Positional:D)</code></pre><p>Returns a list of multi candidates, or a one-element list with itself if it's not a multi&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Routine%29_method_candidates
Method.cando	A			Perl 6 Method							<section class="prog__container"><pre><code>method cando(Capture $c)</code></pre><p>Returns a possibly-empty list of candidates that can be called with the given Capture, ordered by narrowest candidate first.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Routine%29_method_cando
Method.clone	R	Callable.clone										
Method.count	A			Perl 6 Method							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Code%29_method_count
Method.deepmap	R	Callable.deepmap										
Method.defined	R	Callable.defined										
Method.does	R	Callable.does										
Method.duckmap	R	Callable.duckmap										
Method.eager	R	Callable.eager										
Method.elems	R	Callable.elems										
Method.emit	R	Callable.emit										
Method.end	R	Callable.end										
Method.exit	R	Callable.exit										
Method.export	A			Perl 6 Method							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$export!)</code></pre><p>Marks a routine as exported to the rest of the world&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Routine%29_trait_is_export
Method.export	R	Callable.export										
Method.file	A			Perl 6 Method							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Code%29_method_file
Method.flat	R	Callable.flat										
Method.gist	R	Callable.gist										
Method.hidden-from-backtrace	A			Perl 6 Method							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine:D, :$hidden-from-backtrace!)</code></pre><p>Hides a routine from showing up in a default backtrace.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Routine%29_trait_is_hidden-from-backtrace
Method.isa	R	Callable.isa										
Method.item	R	Callable.item										
Method.line	A			Perl 6 Method							<section class="prog__container"><p>Defined as&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Code%29_method_line
Method.list	R	Callable.list										
Method.map	R	Callable.map										
Method.multi	A			Perl 6 Method							<section class="prog__container"><pre><code>method multi(Routine:D: --&gt; Bool:D)</code></pre><p>Returns True if the routine is a multi sub or method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Routine%29_method_multi
Method.name	A			Perl 6 Method							<section class="prog__container"><pre><code>method name(Routine:D: --&gt; Str:D)</code></pre><p>Returns the name of the sub or method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Routine%29_method_name
Method.new	R	Callable.new										
Method.none	R	Callable.none										
Method.not	R	Callable.not										
Method.one	R	Callable.one										
Method.package	A			Perl 6 Method							<section class="prog__container"><pre><code>method package(Routine:D:)</code></pre><p>Returns the package in which the routine is defined.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Routine%29_method_package
Method.pairup	R	Callable.pairup										
Method.perl	R	Callable.perl										
Method.print	R	Callable.print										
Method.pure	A			Perl 6 Method							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$pure!)</code></pre><p>Marks a subroutine as pure, that is, it asserts that for the same input, it will always produce the same output without any additional side effects.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Routine%29_trait_is_pure
Method.push	R	Callable.push										
Method.put	R	Callable.put										
Method.return	R	Callable.return										
Method.return-rw	R	Callable.return-rw										
Method.reverse	R	Callable.reverse										
Method.rw	A			Perl 6 Method							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$rw!)</code></pre><p>When a routine is modified with this trait, its return value will be writable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Routine%29_trait_is_rw
Method.say	R	Callable.say										
Method.signature	A			Perl 6 Method							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Code%29_method_signature
Method.so	R	Callable.so										
Method.sort	R	Callable.sort										
Method.take	R	Callable.take										
Method.take	R	Callable.take										
Method.take-rw	R	Callable.take-rw										
Method.unwrap	A			Perl 6 Method							<section class="prog__container"><pre><code>method unwrap(Routine:D: $wraphandler)</code></pre><p>Restores the original routine after it has been wrapped with wrap.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Routine%29_method_unwrap
Method.wrap	A			Perl 6 Method							<section class="prog__container"><pre><code>method wrap(Routine:D: &amp;wrapper)</code></pre><p>Wraps (i.e. in-place modifies) the routine.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Routine%29_method_wrap
Method.yada	A			Perl 6 Method							<section class="prog__container"><pre><code>method yada(Routine:D: --&gt; Bool:D)</code></pre><p>Returns True if the routine is a stub&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Method.html#%28Routine%29_method_yada
Mix.ACCEPTS	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Any%29_method_ACCEPTS
Mix.ACCEPTS	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_ACCEPTS
Mix.ACCEPTS	A			Perl 6 Mix							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_method_ACCEPTS
Mix.Bag	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#method_Bag
Mix.BagHash	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#method_BagHash
Mix.Bool	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_Bool
Mix.Bool	A			Perl 6 Mix							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_routine_Bool
Mix.CREATE	A			Perl 6 Mix							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_method_CREATE
Mix.Set	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_Set
Mix.SetHash	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_SetHash
Mix.Str	A			Perl 6 Mix							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_method_Str
Mix.WHERE	A			Perl 6 Mix							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_method_WHERE
Mix.WHICH	A			Perl 6 Mix							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_method_WHICH
Mix.WHY	A			Perl 6 Mix							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_method_WHY
Mix.all	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Any%29_method_all
Mix.antipairs	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_antipairs
Mix.any	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Any%29_method_any
Mix.bless	A			Perl 6 Mix							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_method_bless
Mix.categorize-list	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_categorize-list
Mix.classify-list	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_classify-list
Mix.clone	A			Perl 6 Mix							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_method_clone
Mix.deepmap	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Any%29_method_deepmap
Mix.default	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_default
Mix.defined	A			Perl 6 Mix							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_routine_defined
Mix.does	A			Perl 6 Mix							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_routine_does
Mix.duckmap	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Any%29_method_duckmap
Mix.eager	A			Perl 6 Mix							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Any%29_method_eager
Mix.elems	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_elems
Mix.elems	A			Perl 6 Mix							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Any%29_method_elems
Mix.emit	A			Perl 6 Mix							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_method_emit
Mix.end	A			Perl 6 Mix							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Any%29_method_end
Mix.exit	A			Perl 6 Mix							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Any%29_sub_exit
Mix.export	A			Perl 6 Mix							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_trait_is_export
Mix.flat	A			Perl 6 Mix							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Any%29_method_flat
Mix.gist	A			Perl 6 Mix							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_routine_gist
Mix.grab	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_grab
Mix.grabpairs	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_grabpairs
Mix.hash	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_hash
Mix.invert	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_invert
Mix.isa	A			Perl 6 Mix							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_routine_isa
Mix.item	A			Perl 6 Mix							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_method_item
Mix.keys	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_keys
Mix.kv	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_kv
Mix.kxxv	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_kxxv
Mix.list	A			Perl 6 Mix							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Any%29_method_list
Mix.map	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Any%29_method_map
Mix.mix	A			Perl 6 Mix							<section class="prog__container"><pre><code>sub mix(*@args --&gt; Mix)</code></pre><p>Creates a new Mix from @args.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#sub_mix
Mix.new	A			Perl 6 Mix							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_method_new
Mix.new-from-pairs	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_new-from-pairs
Mix.none	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Any%29_method_none
Mix.not	A			Perl 6 Mix							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_method_not
Mix.one	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Any%29_method_one
Mix.pairs	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_pairs
Mix.pairup	A			Perl 6 Mix							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Any%29_method_pairup
Mix.perl	A			Perl 6 Mix							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_routine_perl
Mix.pick	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_pick
Mix.pickpairs	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_pickpairs
Mix.print	A			Perl 6 Mix							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_method_print
Mix.push	A			Perl 6 Mix							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Any%29_method_push
Mix.put	A			Perl 6 Mix							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_method_put
Mix.return	A			Perl 6 Mix							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_method_return
Mix.return-rw	A			Perl 6 Mix							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_method_return-rw
Mix.reverse	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Any%29_routine_reverse
Mix.roll	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_roll
Mix.roll	A			Perl 6 Mix							<section class="prog__container"><pre><code>method roll($count = 1)</code></pre><p>Similar to a Bag.roll, but with Real weights rather than integral ones.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mixy%29_method_roll
Mix.say	A			Perl 6 Mix							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_method_say
Mix.so	A			Perl 6 Mix							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_method_so
Mix.sort	A			Perl 6 Mix							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Any%29_method_sort
Mix.take	A			Perl 6 Mix							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_method_take
Mix.take	A			Perl 6 Mix							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_routine_take
Mix.take-rw	A			Perl 6 Mix							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mu%29_routine_take-rw
Mix.total	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_total
Mix.total	A			Perl 6 Mix							<section class="prog__container"><pre><code>method total(--&gt; Real)</code></pre><p>Returns the sum of all the weights&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Mixy%29_method_total
Mix.values	A			Perl 6 Mix							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mix.html#%28Baggy%29_method_values
MixHash.ACCEPTS	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Any%29_method_ACCEPTS
MixHash.ACCEPTS	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_ACCEPTS
MixHash.ACCEPTS	A			Perl 6 MixHash							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_method_ACCEPTS
MixHash.Bag	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#method_Bag
MixHash.BagHash	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#method_BagHash
MixHash.Bool	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_Bool
MixHash.Bool	A			Perl 6 MixHash							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_routine_Bool
MixHash.CREATE	A			Perl 6 MixHash							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_method_CREATE
MixHash.Set	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_Set
MixHash.SetHash	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_SetHash
MixHash.Str	A			Perl 6 MixHash							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_method_Str
MixHash.WHERE	A			Perl 6 MixHash							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_method_WHERE
MixHash.WHICH	A			Perl 6 MixHash							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_method_WHICH
MixHash.WHY	A			Perl 6 MixHash							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_method_WHY
MixHash.all	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Any%29_method_all
MixHash.antipairs	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_antipairs
MixHash.any	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Any%29_method_any
MixHash.bless	A			Perl 6 MixHash							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_method_bless
MixHash.categorize-list	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_categorize-list
MixHash.classify-list	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_classify-list
MixHash.clone	A			Perl 6 MixHash							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_method_clone
MixHash.deepmap	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Any%29_method_deepmap
MixHash.default	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_default
MixHash.defined	A			Perl 6 MixHash							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_routine_defined
MixHash.does	A			Perl 6 MixHash							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_routine_does
MixHash.duckmap	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Any%29_method_duckmap
MixHash.eager	A			Perl 6 MixHash							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Any%29_method_eager
MixHash.elems	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_elems
MixHash.elems	A			Perl 6 MixHash							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Any%29_method_elems
MixHash.emit	A			Perl 6 MixHash							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_method_emit
MixHash.end	A			Perl 6 MixHash							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Any%29_method_end
MixHash.exit	A			Perl 6 MixHash							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Any%29_sub_exit
MixHash.export	A			Perl 6 MixHash							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_trait_is_export
MixHash.flat	A			Perl 6 MixHash							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Any%29_method_flat
MixHash.gist	A			Perl 6 MixHash							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_routine_gist
MixHash.grab	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_grab
MixHash.grabpairs	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_grabpairs
MixHash.hash	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_hash
MixHash.invert	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_invert
MixHash.isa	A			Perl 6 MixHash							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_routine_isa
MixHash.item	A			Perl 6 MixHash							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_method_item
MixHash.keys	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_keys
MixHash.kv	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_kv
MixHash.kxxv	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_kxxv
MixHash.list	A			Perl 6 MixHash							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Any%29_method_list
MixHash.map	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Any%29_method_map
MixHash.new	A			Perl 6 MixHash							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_method_new
MixHash.new-from-pairs	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_new-from-pairs
MixHash.none	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Any%29_method_none
MixHash.not	A			Perl 6 MixHash							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_method_not
MixHash.one	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Any%29_method_one
MixHash.pairs	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_pairs
MixHash.pairup	A			Perl 6 MixHash							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Any%29_method_pairup
MixHash.perl	A			Perl 6 MixHash							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_routine_perl
MixHash.pick	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_pick
MixHash.pickpairs	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_pickpairs
MixHash.print	A			Perl 6 MixHash							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_method_print
MixHash.push	A			Perl 6 MixHash							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Any%29_method_push
MixHash.put	A			Perl 6 MixHash							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_method_put
MixHash.return	A			Perl 6 MixHash							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_method_return
MixHash.return-rw	A			Perl 6 MixHash							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_method_return-rw
MixHash.reverse	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Any%29_routine_reverse
MixHash.roll	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_roll
MixHash.roll	A			Perl 6 MixHash							<section class="prog__container"><pre><code>method roll($count = 1)</code></pre><p>Similar to a Bag.roll, but with Real weights rather than integral ones.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mixy%29_method_roll
MixHash.say	A			Perl 6 MixHash							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_method_say
MixHash.so	A			Perl 6 MixHash							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_method_so
MixHash.sort	A			Perl 6 MixHash							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Any%29_method_sort
MixHash.take	A			Perl 6 MixHash							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_method_take
MixHash.take	A			Perl 6 MixHash							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_routine_take
MixHash.take-rw	A			Perl 6 MixHash							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mu%29_routine_take-rw
MixHash.total	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_total
MixHash.total	A			Perl 6 MixHash							<section class="prog__container"><pre><code>method total(--&gt; Real)</code></pre><p>Returns the sum of all the weights&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Mixy%29_method_total
MixHash.values	A			Perl 6 MixHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/MixHash.html#%28Baggy%29_method_values
Mixy.ACCEPTS	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_ACCEPTS
Mixy.Bool	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_Bool
Mixy.Set	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_Set
Mixy.SetHash	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_SetHash
Mixy.antipairs	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_antipairs
Mixy.categorize-list	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_categorize-list
Mixy.classify-list	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_classify-list
Mixy.default	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_default
Mixy.elems	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_elems
Mixy.grab	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_grab
Mixy.grabpairs	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_grabpairs
Mixy.hash	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_hash
Mixy.invert	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_invert
Mixy.keys	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_keys
Mixy.kv	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_kv
Mixy.kxxv	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_kxxv
Mixy.new-from-pairs	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_new-from-pairs
Mixy.pairs	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_pairs
Mixy.pick	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_pick
Mixy.pickpairs	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_pickpairs
Mixy.roll	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_roll
Mixy.roll	A			Perl 6 Mixy							<section class="prog__container"><pre><code>method roll($count = 1)</code></pre><p>Similar to a Bag.roll, but with Real weights rather than integral ones.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#method_roll
Mixy.total	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_total
Mixy.total	A			Perl 6 Mixy							<section class="prog__container"><pre><code>method total(--&gt; Real)</code></pre><p>Returns the sum of all the weights&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#method_total
Mixy.values	A			Perl 6 Mixy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mixy.html#%28Baggy%29_method_values
Mu.ACCEPTS	A			Perl 6 Mu							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#method_ACCEPTS
Mu.Bool	A			Perl 6 Mu							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#routine_Bool
Mu.CREATE	A			Perl 6 Mu							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#method_CREATE
Mu.Str	A			Perl 6 Mu							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#method_Str
Mu.WHERE	A			Perl 6 Mu							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#method_WHERE
Mu.WHICH	A			Perl 6 Mu							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#method_WHICH
Mu.WHY	A			Perl 6 Mu							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#method_WHY
Mu.bless	A			Perl 6 Mu							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#method_bless
Mu.clone	A			Perl 6 Mu							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#method_clone
Mu.defined	A			Perl 6 Mu							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#routine_defined
Mu.does	A			Perl 6 Mu							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#routine_does
Mu.emit	A			Perl 6 Mu							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#method_emit
Mu.export	A			Perl 6 Mu							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#trait_is_export
Mu.gist	A			Perl 6 Mu							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#routine_gist
Mu.isa	A			Perl 6 Mu							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#routine_isa
Mu.item	A			Perl 6 Mu							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#method_item
Mu.new	A			Perl 6 Mu							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#method_new
Mu.not	A			Perl 6 Mu							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#method_not
Mu.perl	A			Perl 6 Mu							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#routine_perl
Mu.print	A			Perl 6 Mu							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#method_print
Mu.put	A			Perl 6 Mu							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#method_put
Mu.return	A			Perl 6 Mu							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#method_return
Mu.return-rw	A			Perl 6 Mu							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#method_return-rw
Mu.say	A			Perl 6 Mu							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#method_say
Mu.so	A			Perl 6 Mu							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#method_so
Mu.take	A			Perl 6 Mu							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#method_take
Mu.take	A			Perl 6 Mu							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#routine_take
Mu.take-rw	A			Perl 6 Mu							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Mu.html#routine_take-rw
NFC.ACCEPTS	R	Positional.ACCEPTS										
NFC.ACCEPTS	R	Positional.ACCEPTS										
NFC.Bool	R	Positional.Bool										
NFC.CREATE	R	Positional.CREATE										
NFC.NFC	A			Perl 6 NFC							<section class="prog__container"><pre><code>method NFC(Uni:D: --&gt; NFC:D)</code></pre><p>Returns a NFC (Normal Form Composed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFC.html#%28Uni%29_method_NFC
NFC.NFD	A			Perl 6 NFC							<section class="prog__container"><pre><code>method NFD(Uni:D: --&gt; NFD:D)</code></pre><p>Returns a NFD (Normal Form Decomposed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFC.html#%28Uni%29_method_NFD
NFC.NFKC	A			Perl 6 NFC							<section class="prog__container"><pre><code>method NFKC(Uni:D: --&gt; NFKC:D)</code></pre><p>Returns a NFKC (Normal Form Compatibility Composed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFC.html#%28Uni%29_method_NFKC
NFC.NFKD	A			Perl 6 NFC							<section class="prog__container"><pre><code>method NFKD(Uni:D: --&gt; NFKD:D)</code></pre><p>Returns a NFD (Normal Form Compatibility Decomposed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFC.html#%28Uni%29_method_NFKD
NFC.Str	R	Positional.Str										
NFC.WHERE	R	Positional.WHERE										
NFC.WHICH	R	Positional.WHICH										
NFC.WHY	R	Positional.WHY										
NFC.all	R	Positional.all										
NFC.any	R	Positional.any										
NFC.bless	R	Positional.bless										
NFC.clone	R	Positional.clone										
NFC.codes	A			Perl 6 NFC							<section class="prog__container"><pre><code>method codes(Uni:D: --&gt; Int:D)</code></pre><p>Returns the number of codepoints in the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFC.html#%28Uni%29_method_codes
NFC.deepmap	R	Positional.deepmap										
NFC.defined	R	Positional.defined										
NFC.does	R	Positional.does										
NFC.duckmap	R	Positional.duckmap										
NFC.eager	R	Positional.eager										
NFC.elems	A			Perl 6 NFC							<section class="prog__container"><pre><code>method elems(Uni:D: --&gt; Int:D)</code></pre><p>Returns the number of codepoints in the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFC.html#%28Uni%29_method_elems
NFC.elems	R	Positional.elems										
NFC.emit	R	Positional.emit										
NFC.end	R	Positional.end										
NFC.exit	R	Positional.exit										
NFC.export	R	Positional.export										
NFC.flat	R	Positional.flat										
NFC.gist	R	Positional.gist										
NFC.isa	R	Positional.isa										
NFC.item	R	Positional.item										
NFC.list	R	Positional.list										
NFC.map	R	Positional.map										
NFC.new	A			Perl 6 NFC							<section class="prog__container"><pre><code>method new(*@codes --&gt; Uni:D)</code></pre><p>Creates a new Uni instance from the given codepoint numbers.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFC.html#%28Uni%29_method_new
NFC.new	R	Positional.new										
NFC.none	R	Positional.none										
NFC.not	R	Positional.not										
NFC.of	R	Positional.of										
NFC.one	R	Positional.one										
NFC.pairup	R	Positional.pairup										
NFC.perl	R	Positional.perl										
NFC.print	R	Positional.print										
NFC.push	R	Positional.push										
NFC.put	R	Positional.put										
NFC.return	R	Positional.return										
NFC.return-rw	R	Positional.return-rw										
NFC.reverse	R	Positional.reverse										
NFC.say	R	Positional.say										
NFC.so	R	Positional.so										
NFC.sort	R	Positional.sort										
NFC.take	R	Positional.take										
NFC.take	R	Positional.take										
NFC.take-rw	R	Positional.take-rw										
NFD.ACCEPTS	R	Positional.ACCEPTS										
NFD.ACCEPTS	R	Positional.ACCEPTS										
NFD.Bool	R	Positional.Bool										
NFD.CREATE	R	Positional.CREATE										
NFD.NFC	A			Perl 6 NFD							<section class="prog__container"><pre><code>method NFC(Uni:D: --&gt; NFC:D)</code></pre><p>Returns a NFC (Normal Form Composed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFD.html#%28Uni%29_method_NFC
NFD.NFD	A			Perl 6 NFD							<section class="prog__container"><pre><code>method NFD(Uni:D: --&gt; NFD:D)</code></pre><p>Returns a NFD (Normal Form Decomposed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFD.html#%28Uni%29_method_NFD
NFD.NFKC	A			Perl 6 NFD							<section class="prog__container"><pre><code>method NFKC(Uni:D: --&gt; NFKC:D)</code></pre><p>Returns a NFKC (Normal Form Compatibility Composed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFD.html#%28Uni%29_method_NFKC
NFD.NFKD	A			Perl 6 NFD							<section class="prog__container"><pre><code>method NFKD(Uni:D: --&gt; NFKD:D)</code></pre><p>Returns a NFD (Normal Form Compatibility Decomposed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFD.html#%28Uni%29_method_NFKD
NFD.Str	R	Positional.Str										
NFD.WHERE	R	Positional.WHERE										
NFD.WHICH	R	Positional.WHICH										
NFD.WHY	R	Positional.WHY										
NFD.all	R	Positional.all										
NFD.any	R	Positional.any										
NFD.bless	R	Positional.bless										
NFD.clone	R	Positional.clone										
NFD.codes	A			Perl 6 NFD							<section class="prog__container"><pre><code>method codes(Uni:D: --&gt; Int:D)</code></pre><p>Returns the number of codepoints in the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFD.html#%28Uni%29_method_codes
NFD.deepmap	R	Positional.deepmap										
NFD.defined	R	Positional.defined										
NFD.does	R	Positional.does										
NFD.duckmap	R	Positional.duckmap										
NFD.eager	R	Positional.eager										
NFD.elems	A			Perl 6 NFD							<section class="prog__container"><pre><code>method elems(Uni:D: --&gt; Int:D)</code></pre><p>Returns the number of codepoints in the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFD.html#%28Uni%29_method_elems
NFD.elems	R	Positional.elems										
NFD.emit	R	Positional.emit										
NFD.end	R	Positional.end										
NFD.exit	R	Positional.exit										
NFD.export	R	Positional.export										
NFD.flat	R	Positional.flat										
NFD.gist	R	Positional.gist										
NFD.isa	R	Positional.isa										
NFD.item	R	Positional.item										
NFD.list	R	Positional.list										
NFD.map	R	Positional.map										
NFD.new	A			Perl 6 NFD							<section class="prog__container"><pre><code>method new(*@codes --&gt; Uni:D)</code></pre><p>Creates a new Uni instance from the given codepoint numbers.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFD.html#%28Uni%29_method_new
NFD.new	R	Positional.new										
NFD.none	R	Positional.none										
NFD.not	R	Positional.not										
NFD.of	R	Positional.of										
NFD.one	R	Positional.one										
NFD.pairup	R	Positional.pairup										
NFD.perl	R	Positional.perl										
NFD.print	R	Positional.print										
NFD.push	R	Positional.push										
NFD.put	R	Positional.put										
NFD.return	R	Positional.return										
NFD.return-rw	R	Positional.return-rw										
NFD.reverse	R	Positional.reverse										
NFD.say	R	Positional.say										
NFD.so	R	Positional.so										
NFD.sort	R	Positional.sort										
NFD.take	R	Positional.take										
NFD.take	R	Positional.take										
NFD.take-rw	R	Positional.take-rw										
NFKC.ACCEPTS	R	Positional.ACCEPTS										
NFKC.ACCEPTS	R	Positional.ACCEPTS										
NFKC.Bool	R	Positional.Bool										
NFKC.CREATE	R	Positional.CREATE										
NFKC.NFC	A			Perl 6 NFKC							<section class="prog__container"><pre><code>method NFC(Uni:D: --&gt; NFC:D)</code></pre><p>Returns a NFC (Normal Form Composed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFKC.html#%28Uni%29_method_NFC
NFKC.NFD	A			Perl 6 NFKC							<section class="prog__container"><pre><code>method NFD(Uni:D: --&gt; NFD:D)</code></pre><p>Returns a NFD (Normal Form Decomposed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFKC.html#%28Uni%29_method_NFD
NFKC.NFKC	A			Perl 6 NFKC							<section class="prog__container"><pre><code>method NFKC(Uni:D: --&gt; NFKC:D)</code></pre><p>Returns a NFKC (Normal Form Compatibility Composed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFKC.html#%28Uni%29_method_NFKC
NFKC.NFKD	A			Perl 6 NFKC							<section class="prog__container"><pre><code>method NFKD(Uni:D: --&gt; NFKD:D)</code></pre><p>Returns a NFD (Normal Form Compatibility Decomposed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFKC.html#%28Uni%29_method_NFKD
NFKC.Str	R	Positional.Str										
NFKC.WHERE	R	Positional.WHERE										
NFKC.WHICH	R	Positional.WHICH										
NFKC.WHY	R	Positional.WHY										
NFKC.all	R	Positional.all										
NFKC.any	R	Positional.any										
NFKC.bless	R	Positional.bless										
NFKC.clone	R	Positional.clone										
NFKC.codes	A			Perl 6 NFKC							<section class="prog__container"><pre><code>method codes(Uni:D: --&gt; Int:D)</code></pre><p>Returns the number of codepoints in the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFKC.html#%28Uni%29_method_codes
NFKC.deepmap	R	Positional.deepmap										
NFKC.defined	R	Positional.defined										
NFKC.does	R	Positional.does										
NFKC.duckmap	R	Positional.duckmap										
NFKC.eager	R	Positional.eager										
NFKC.elems	A			Perl 6 NFKC							<section class="prog__container"><pre><code>method elems(Uni:D: --&gt; Int:D)</code></pre><p>Returns the number of codepoints in the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFKC.html#%28Uni%29_method_elems
NFKC.elems	R	Positional.elems										
NFKC.emit	R	Positional.emit										
NFKC.end	R	Positional.end										
NFKC.exit	R	Positional.exit										
NFKC.export	R	Positional.export										
NFKC.flat	R	Positional.flat										
NFKC.gist	R	Positional.gist										
NFKC.isa	R	Positional.isa										
NFKC.item	R	Positional.item										
NFKC.list	R	Positional.list										
NFKC.map	R	Positional.map										
NFKC.new	A			Perl 6 NFKC							<section class="prog__container"><pre><code>method new(*@codes --&gt; Uni:D)</code></pre><p>Creates a new Uni instance from the given codepoint numbers.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFKC.html#%28Uni%29_method_new
NFKC.new	R	Positional.new										
NFKC.none	R	Positional.none										
NFKC.not	R	Positional.not										
NFKC.of	R	Positional.of										
NFKC.one	R	Positional.one										
NFKC.pairup	R	Positional.pairup										
NFKC.perl	R	Positional.perl										
NFKC.print	R	Positional.print										
NFKC.push	R	Positional.push										
NFKC.put	R	Positional.put										
NFKC.return	R	Positional.return										
NFKC.return-rw	R	Positional.return-rw										
NFKC.reverse	R	Positional.reverse										
NFKC.say	R	Positional.say										
NFKC.so	R	Positional.so										
NFKC.sort	R	Positional.sort										
NFKC.take	R	Positional.take										
NFKC.take	R	Positional.take										
NFKC.take-rw	R	Positional.take-rw										
NFKD.ACCEPTS	R	Positional.ACCEPTS										
NFKD.ACCEPTS	R	Positional.ACCEPTS										
NFKD.Bool	R	Positional.Bool										
NFKD.CREATE	R	Positional.CREATE										
NFKD.NFC	A			Perl 6 NFKD							<section class="prog__container"><pre><code>method NFC(Uni:D: --&gt; NFC:D)</code></pre><p>Returns a NFC (Normal Form Composed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFKD.html#%28Uni%29_method_NFC
NFKD.NFD	A			Perl 6 NFKD							<section class="prog__container"><pre><code>method NFD(Uni:D: --&gt; NFD:D)</code></pre><p>Returns a NFD (Normal Form Decomposed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFKD.html#%28Uni%29_method_NFD
NFKD.NFKC	A			Perl 6 NFKD							<section class="prog__container"><pre><code>method NFKC(Uni:D: --&gt; NFKC:D)</code></pre><p>Returns a NFKC (Normal Form Compatibility Composed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFKD.html#%28Uni%29_method_NFKC
NFKD.NFKD	A			Perl 6 NFKD							<section class="prog__container"><pre><code>method NFKD(Uni:D: --&gt; NFKD:D)</code></pre><p>Returns a NFD (Normal Form Compatibility Decomposed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFKD.html#%28Uni%29_method_NFKD
NFKD.Str	R	Positional.Str										
NFKD.WHERE	R	Positional.WHERE										
NFKD.WHICH	R	Positional.WHICH										
NFKD.WHY	R	Positional.WHY										
NFKD.all	R	Positional.all										
NFKD.any	R	Positional.any										
NFKD.bless	R	Positional.bless										
NFKD.clone	R	Positional.clone										
NFKD.codes	A			Perl 6 NFKD							<section class="prog__container"><pre><code>method codes(Uni:D: --&gt; Int:D)</code></pre><p>Returns the number of codepoints in the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFKD.html#%28Uni%29_method_codes
NFKD.deepmap	R	Positional.deepmap										
NFKD.defined	R	Positional.defined										
NFKD.does	R	Positional.does										
NFKD.duckmap	R	Positional.duckmap										
NFKD.eager	R	Positional.eager										
NFKD.elems	A			Perl 6 NFKD							<section class="prog__container"><pre><code>method elems(Uni:D: --&gt; Int:D)</code></pre><p>Returns the number of codepoints in the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFKD.html#%28Uni%29_method_elems
NFKD.elems	R	Positional.elems										
NFKD.emit	R	Positional.emit										
NFKD.end	R	Positional.end										
NFKD.exit	R	Positional.exit										
NFKD.export	R	Positional.export										
NFKD.flat	R	Positional.flat										
NFKD.gist	R	Positional.gist										
NFKD.isa	R	Positional.isa										
NFKD.item	R	Positional.item										
NFKD.list	R	Positional.list										
NFKD.map	R	Positional.map										
NFKD.new	A			Perl 6 NFKD							<section class="prog__container"><pre><code>method new(*@codes --&gt; Uni:D)</code></pre><p>Creates a new Uni instance from the given codepoint numbers.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NFKD.html#%28Uni%29_method_new
NFKD.new	R	Positional.new										
NFKD.none	R	Positional.none										
NFKD.not	R	Positional.not										
NFKD.of	R	Positional.of										
NFKD.one	R	Positional.one										
NFKD.pairup	R	Positional.pairup										
NFKD.perl	R	Positional.perl										
NFKD.print	R	Positional.print										
NFKD.push	R	Positional.push										
NFKD.put	R	Positional.put										
NFKD.return	R	Positional.return										
NFKD.return-rw	R	Positional.return-rw										
NFKD.reverse	R	Positional.reverse										
NFKD.say	R	Positional.say										
NFKD.so	R	Positional.so										
NFKD.sort	R	Positional.sort										
NFKD.take	R	Positional.take										
NFKD.take	R	Positional.take										
NFKD.take-rw	R	Positional.take-rw										
NaN	R	Num.NaN										
Named	R	Signature.Named										
Names	R	Signature.Names										
Nil.ACCEPTS	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Any%29_method_ACCEPTS
Nil.ACCEPTS	A			Perl 6 Nil							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_method_ACCEPTS
Nil.Bool	A			Perl 6 Nil							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_routine_Bool
Nil.CREATE	A			Perl 6 Nil							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_method_CREATE
Nil.EVAL	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_EVAL
Nil.EVALFILE	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_EVALFILE
Nil.IO	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_method_IO
Nil.Numeric	A			Perl 6 Nil							<section class="prog__container"><pre><code>method Numeric()</code></pre><p>Warns the user that they tried to numify a Nil.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#method_Numeric
Nil.Str	A			Perl 6 Nil							<section class="prog__container"><pre><code>method Str()</code></pre><p>Warns the user that they tried to stringify a Nil.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#method_Str
Nil.Str	A			Perl 6 Nil							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_method_Str
Nil.WHERE	A			Perl 6 Nil							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_method_WHERE
Nil.WHICH	A			Perl 6 Nil							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_method_WHICH
Nil.WHY	A			Perl 6 Nil							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_method_WHY
Nil.abs	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_abs
Nil.acos	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_acos
Nil.acosec	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_acosec
Nil.acosech	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_acosech
Nil.acosh	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_acosh
Nil.acotan	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_acotan
Nil.acotanh	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_acotanh
Nil.all	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Any%29_method_all
Nil.any	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Any%29_method_any
Nil.append	A			Perl 6 Nil							<section class="prog__container"><pre><code>method append(*@)</code></pre><p>Warns the user that they tried to append onto a Nil.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#method_append
Nil.asec	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_asec
Nil.asech	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_asech
Nil.asin	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_asin
Nil.asinh	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_asinh
Nil.atan	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_atan
Nil.atan2	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_atan2
Nil.atanh	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_atanh
Nil.bless	A			Perl 6 Nil							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_method_bless
Nil.ceiling	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_ceiling
Nil.chars	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_chars
Nil.chomp	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_chomp
Nil.chop	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_chop
Nil.chr	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_chr
Nil.chrs	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_chrs
Nil.cis	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_cis
Nil.clone	A			Perl 6 Nil							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_method_clone
Nil.codes	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_codes
Nil.comb	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_comb
Nil.conj	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_method_conj
Nil.contains	A			Perl 6 Nil							<section class="prog__container"><pre><code>multi method contains(Cool:D: Str(Cool) $needle, Cool $start? --&gt; Bool:D)</code></pre><p>Returns True if the invocant contains the $needle at any position within the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_method_contains
Nil.cos	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_cos
Nil.cosec	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_cosec
Nil.cosech	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_cosech
Nil.cosh	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_cosh
Nil.cotan	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_cotan
Nil.cotanh	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_cotanh
Nil.deepmap	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Any%29_method_deepmap
Nil.defined	A			Perl 6 Nil							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_routine_defined
Nil.does	A			Perl 6 Nil							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_routine_does
Nil.duckmap	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Any%29_method_duckmap
Nil.eager	A			Perl 6 Nil							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Any%29_method_eager
Nil.elems	A			Perl 6 Nil							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Any%29_method_elems
Nil.emit	A			Perl 6 Nil							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_method_emit
Nil.end	A			Perl 6 Nil							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Any%29_method_end
Nil.exit	A			Perl 6 Nil							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Any%29_sub_exit
Nil.exp	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_method_exp
Nil.export	A			Perl 6 Nil							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_trait_is_export
Nil.fc	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_fc
Nil.flat	A			Perl 6 Nil							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Any%29_method_flat
Nil.flip	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_flip
Nil.floor	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_floor
Nil.fmt	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_method_fmt
Nil.gist	A			Perl 6 Nil							<section class="prog__container"><pre><code>method gist(--&gt; Str:D)</code></pre><p>Returns "Nil".&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#method_gist
Nil.gist	A			Perl 6 Nil							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_routine_gist
Nil.index	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_index
Nil.isa	A			Perl 6 Nil							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_routine_isa
Nil.item	A			Perl 6 Nil							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_method_item
Nil.lc	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_lc
Nil.lines	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_lines
Nil.list	A			Perl 6 Nil							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Any%29_method_list
Nil.log	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_log
Nil.log10	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_log10
Nil.map	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Any%29_method_map
Nil.match	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_match
Nil.new	A			Perl 6 Nil							<section class="prog__container"><pre><code>method new(*@)</code></pre><p>Returns Nil&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#method_new
Nil.new	A			Perl 6 Nil							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_method_new
Nil.none	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Any%29_method_none
Nil.not	A			Perl 6 Nil							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_method_not
Nil.one	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Any%29_method_one
Nil.ord	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_ord
Nil.ords	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_ords
Nil.pairup	A			Perl 6 Nil							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Any%29_method_pairup
Nil.perl	A			Perl 6 Nil							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_routine_perl
Nil.prepend	A			Perl 6 Nil							<section class="prog__container"><pre><code>method prepend(*@)</code></pre><p>Warns the user that they tried to prepend onto a Nil.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#method_prepend
Nil.print	A			Perl 6 Nil							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_method_print
Nil.push	A			Perl 6 Nil							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Any%29_method_push
Nil.push	A			Perl 6 Nil							<section class="prog__container"><pre><code>method push(*@)</code></pre><p>Warns the user that they tried to push onto a Nil.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#method_push
Nil.put	A			Perl 6 Nil							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_method_put
Nil.rand	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_method_rand
Nil.return	A			Perl 6 Nil							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_method_return
Nil.return-rw	A			Perl 6 Nil							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_method_return-rw
Nil.reverse	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Any%29_routine_reverse
Nil.rindex	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_rindex
Nil.roots	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_roots
Nil.round	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_round
Nil.samecase	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_samecase
Nil.say	A			Perl 6 Nil							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_method_say
Nil.sec	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_method_sec
Nil.sech	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_sech
Nil.sign	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_method_sign
Nil.sin	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_sin
Nil.sinh	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_sinh
Nil.so	A			Perl 6 Nil							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_method_so
Nil.sort	A			Perl 6 Nil							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Any%29_method_sort
Nil.split	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_split
Nil.sqrt	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_sqrt
Nil.substr	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_substr
Nil.take	A			Perl 6 Nil							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_method_take
Nil.take	A			Perl 6 Nil							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_routine_take
Nil.take-rw	A			Perl 6 Nil							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Mu%29_routine_take-rw
Nil.tan	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_tan
Nil.tanh	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_tanh
Nil.tc	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_tc
Nil.tclc	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_tclc
Nil.trim	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_trim
Nil.trim-leading	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_trim-leading
Nil.trim-trailing	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_trim-trailing
Nil.truncate	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_truncate
Nil.uc	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_uc
Nil.unimatch	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_method_unimatch
Nil.uniname	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_method_uniname
Nil.uninames	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_method_uninames
Nil.uniprop	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_method_uniprop
Nil.uniprops	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_method_uniprops
Nil.unpolar	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_method_unpolar
Nil.unshift	A			Perl 6 Nil							<section class="prog__container"><pre><code>method unshift(*@)</code></pre><p>Warns the user that they tried to unshift onto a Nil.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#method_unshift
Nil.wordcase	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_routine_wordcase
Nil.words	A			Perl 6 Nil							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Nil.html#%28Cool%29_method_words
Num.ACCEPTS	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Any%29_method_ACCEPTS
Num.ACCEPTS	A			Perl 6 Num							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_method_ACCEPTS
Num.ACCEPTS	A			Perl 6 Num							<section class="prog__container"><pre><code>multi method ACCEPTS(Numeric:D: $other)</code></pre><p>Returns True if $other is numerically the same as the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Numeric%29_method_ACCEPTS
Num.Bool	A			Perl 6 Num							<section class="prog__container"><pre><code>multi method Bool(Numeric:D:)</code></pre><p>Returns False if the number is equivalent to zero, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Numeric%29_method_Bool
Num.Bool	A			Perl 6 Num							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_routine_Bool
Num.CREATE	A			Perl 6 Num							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_method_CREATE
Num.EVAL	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_EVAL
Num.EVALFILE	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_EVALFILE
Num.IO	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_method_IO
Num.Int	A			Perl 6 Num							<section class="prog__container"><pre><code>method Int(Numeric:D: --&gt; Int:D)</code></pre><p>If this Numeric is equivalent to a Real, return the equivalent of calling truncate on that Real to get an Int.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Numeric%29_method_Int
Num.NaN	A			Perl 6 Num							<section class="prog__container"><p>The value NaN is an instance of Num and represents a float point not-a-number value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#NaN
Num.Num	A			Perl 6 Num							<section class="prog__container"><pre><code>method Num(Numeric:D: --&gt; Num:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real as a Num as accurately as is possible.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Numeric%29_method_Num
Num.Rat	A			Perl 6 Num							<section class="prog__container"><pre><code>method Rat(Numeric:D: Real $epsilon = 1.0e-6 --&gt; Rat:D)</code></pre><p>If this Numeric is equivalent to a Real, return a Rat which is within $epsilon of that Real's value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Numeric%29_method_Rat
Num.Rat	A			Perl 6 Num							<section class="prog__container"><pre><code>method Rat(Real:D: Real $epsilon = 1e-6)</code></pre><p>Converts the number to a Rat with the precision $epsilon.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Real%29_method_Rat
Num.Real	A			Perl 6 Num							<section class="prog__container"><pre><code>method Real(Numeric:D: --&gt; Real:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Numeric%29_method_Real
Num.Str	A			Perl 6 Num							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_method_Str
Num.WHERE	A			Perl 6 Num							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_method_WHERE
Num.WHICH	A			Perl 6 Num							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_method_WHICH
Num.WHY	A			Perl 6 Num							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_method_WHY
Num.abs	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_abs
Num.abs	A			Perl 6 Num							<section class="prog__container"><pre><code>multi sub    abs(Numeric:D  --&gt; Real:D)multi method abs(Numeric:D: --&gt; Real:D)</code></pre><p>Returns the absolute value of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Numeric%29_routine_abs
Num.acos	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_acos
Num.acosec	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_acosec
Num.acosech	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_acosech
Num.acosh	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_acosh
Num.acotan	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_acotan
Num.acotanh	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_acotanh
Num.all	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Any%29_method_all
Num.any	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Any%29_method_any
Num.asec	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_asec
Num.asech	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_asech
Num.asin	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_asin
Num.asinh	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_asinh
Num.atan	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_atan
Num.atan2	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_atan2
Num.atanh	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_atanh
Num.base	A			Perl 6 Num							<section class="prog__container"><pre><code>method base(Real:D: Int:D $base where 2..36, $digits? --&gt; Str:D)</code></pre><p>Converts the number to a string, using $base as base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Real%29_method_base
Num.bless	A			Perl 6 Num							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_method_bless
Num.ceiling	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_ceiling
Num.ceiling	A			Perl 6 Num							<section class="prog__container"><pre><code>method ceiling(Real:D --&gt; Int:D)</code></pre><p>Returns the smallest integer not less than the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Real%29_method_ceiling
Num.chars	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_chars
Num.chomp	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_chomp
Num.chop	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_chop
Num.chr	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_chr
Num.chrs	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_chrs
Num.cis	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_cis
Num.clone	A			Perl 6 Num							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_method_clone
Num.codes	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_codes
Num.comb	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_comb
Num.conj	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_method_conj
Num.conj	A			Perl 6 Num							<section class="prog__container"><pre><code>multi method conj(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the complex conjugate of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Numeric%29_method_conj
Num.contains	A			Perl 6 Num							<section class="prog__container"><pre><code>multi method contains(Cool:D: Str(Cool) $needle, Cool $start? --&gt; Bool:D)</code></pre><p>Returns True if the invocant contains the $needle at any position within the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_method_contains
Num.cos	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_cos
Num.cosec	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_cosec
Num.cosech	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_cosech
Num.cosh	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_cosh
Num.cotan	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_cotan
Num.cotanh	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_cotanh
Num.deepmap	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Any%29_method_deepmap
Num.defined	A			Perl 6 Num							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_routine_defined
Num.does	A			Perl 6 Num							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_routine_does
Num.duckmap	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Any%29_method_duckmap
Num.eager	A			Perl 6 Num							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Any%29_method_eager
Num.elems	A			Perl 6 Num							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Any%29_method_elems
Num.emit	A			Perl 6 Num							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_method_emit
Num.end	A			Perl 6 Num							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Any%29_method_end
Num.exit	A			Perl 6 Num							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Any%29_sub_exit
Num.exp	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_method_exp
Num.exp	A			Perl 6 Num							<section class="prog__container"><pre><code>multi sub    exp(Numeric:D, Numeric:D $base = e --&gt; Numeric:D)multi method exp(Numeric:D: Numeric:D $base = e --&gt; Numeric:D)</code></pre><p>Returns $base to the power of the number, or e to the power of the number if called without a second argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Numeric%29_routine_exp
Num.export	A			Perl 6 Num							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_trait_is_export
Num.fc	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_fc
Num.flat	A			Perl 6 Num							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Any%29_method_flat
Num.flip	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_flip
Num.floor	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_floor
Num.floor	A			Perl 6 Num							<section class="prog__container"><pre><code>method floor(Real:D --&gt; Int:D)</code></pre><p>Return the largest integer not greater than the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Real%29_method_floor
Num.fmt	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_method_fmt
Num.gist	A			Perl 6 Num							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_routine_gist
Num.index	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_index
Num.isa	A			Perl 6 Num							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_routine_isa
Num.item	A			Perl 6 Num							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_method_item
Num.lc	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_lc
Num.lines	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_lines
Num.list	A			Perl 6 Num							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Any%29_method_list
Num.log	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_log
Num.log	A			Perl 6 Num							<section class="prog__container"><pre><code>multi sub    log(Numeric:D, Numeric $base = e --&gt; Numeric:D)multi method log(Numeric:D: Numeric $base = e --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base $base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Numeric%29_routine_log
Num.log10	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_log10
Num.log10	A			Perl 6 Num							<section class="prog__container"><pre><code>multi sub    log10(Numeric:D  --&gt; Numeric:D)multi method log10(Numeric:D: --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base 10.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Numeric%29_routine_log10
Num.map	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Any%29_method_map
Num.match	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_match
Num.narrow	A			Perl 6 Num							<section class="prog__container"><pre><code>method narrow(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the number converted to the narrowest type that can hold it without loss of precision.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Numeric%29_method_narrow
Num.new	A			Perl 6 Num							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_method_new
Num.none	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Any%29_method_none
Num.not	A			Perl 6 Num							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_method_not
Num.one	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Any%29_method_one
Num.ord	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_ord
Num.ords	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_ords
Num.pairup	A			Perl 6 Num							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Any%29_method_pairup
Num.perl	A			Perl 6 Num							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_routine_perl
Num.pred	A			Perl 6 Num							<section class="prog__container"><pre><code>method pred(Numeric:D:)</code></pre><p>Returns the number decremented by one (predecessor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Numeric%29_method_pred
Num.print	A			Perl 6 Num							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_method_print
Num.push	A			Perl 6 Num							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Any%29_method_push
Num.put	A			Perl 6 Num							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_method_put
Num.rand	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_method_rand
Num.rand	A			Perl 6 Num							<section class="prog__container"><pre><code>method rand(Num:D: --&gt; Num)</code></pre><p>Returns a pseudo random number between 0 and the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#method_rand
Num.rand	A			Perl 6 Num							<section class="prog__container"><pre><code>sub term:&lt;rand&gt; (--&gt; Num:D)method rand(Real:D: --&gt; Real:D)</code></pre><p>Returns a pseudo-random number between zero and the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Real%29_routine_rand
Num.return	A			Perl 6 Num							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_method_return
Num.return-rw	A			Perl 6 Num							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_method_return-rw
Num.reverse	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Any%29_routine_reverse
Num.rindex	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_rindex
Num.roots	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_roots
Num.roots	A			Perl 6 Num							<section class="prog__container"><pre><code>multi method roots(Numeric:D: Int:D $n --&gt; Positional)</code></pre><p>Returns a list of the $n complex roots, which evaluate to the original number when raised to the $nth power.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Numeric%29_method_roots
Num.round	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_round
Num.round	A			Perl 6 Num							<section class="prog__container"><pre><code>method round(Real:D: $scale = 1)</code></pre><p>Rounds the number to scale $scale.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Real%29_method_round
Num.samecase	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_samecase
Num.say	A			Perl 6 Num							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_method_say
Num.sec	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_method_sec
Num.sech	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_sech
Num.sign	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_method_sign
Num.sign	A			Perl 6 Num							<section class="prog__container"><pre><code>method sign(Real:D:)</code></pre><p>Returns -1 if the number is negative, 0 if it is zero and 1 otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Real%29_method_sign
Num.sin	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_sin
Num.sinh	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_sinh
Num.so	A			Perl 6 Num							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_method_so
Num.sort	A			Perl 6 Num							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Any%29_method_sort
Num.split	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_split
Num.sqrt	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_sqrt
Num.sqrt	A			Perl 6 Num							<section class="prog__container"><pre><code>multi sub    sqrt(Numeric:D --&gt; Numeric:D)multi method sqrt(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns a square root of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Numeric%29_routine_sqrt
Num.srand	A			Perl 6 Num							<section class="prog__container"><pre><code>sub srand(Int $seed --&gt; Int:D)</code></pre><p>Seeds the pseudo random number generator used by Num.rand with the provided value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#sub_srand
Num.substr	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_substr
Num.succ	A			Perl 6 Num							<section class="prog__container"><pre><code>method succ(Numeric:D:)</code></pre><p>Returns the number incremented by one (successor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Numeric%29_method_succ
Num.take	A			Perl 6 Num							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_method_take
Num.take	A			Perl 6 Num							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_routine_take
Num.take-rw	A			Perl 6 Num							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Mu%29_routine_take-rw
Num.tan	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_tan
Num.tanh	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_tanh
Num.tc	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_tc
Num.tclc	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_tclc
Num.trim	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_trim
Num.trim-leading	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_trim-leading
Num.trim-trailing	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_trim-trailing
Num.truncate	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_truncate
Num.truncate	A			Perl 6 Num							<section class="prog__container"><pre><code>method truncate(Real:D --&gt; Int:D)</code></pre><p>Rounds the number towards zero.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Real%29_method_truncate
Num.uc	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_uc
Num.unimatch	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_method_unimatch
Num.uniname	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_method_uniname
Num.uninames	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_method_uninames
Num.uniprop	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_method_uniprop
Num.uniprops	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_method_uniprops
Num.unpolar	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_method_unpolar
Num.wordcase	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_routine_wordcase
Num.words	A			Perl 6 Num							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Num.html#%28Cool%29_method_words
NumStr.ACCEPTS	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi method ACCEPTS(Str:D: $other)</code></pre><p>Returns True if the string is the same as $other.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_ACCEPTS
NumStr.ACCEPTS	R	Real.ACCEPTS										
NumStr.ACCEPTS	R	Real.ACCEPTS										
NumStr.Bool	R	Real.Bool										
NumStr.CREATE	R	Real.CREATE										
NumStr.EVAL	R	Real.EVAL										
NumStr.EVALFILE	R	Real.EVALFILE										
NumStr.IO	R	Real.IO										
NumStr.NFC	A			Perl 6 NumStr							<section class="prog__container"><pre><code>method NFC(Str:D: --&gt; NFC:D)</code></pre><p>Returns a codepoint string in NFC format (Unicode Normalization Form C / Composed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_NFC
NumStr.NFD	A			Perl 6 NumStr							<section class="prog__container"><pre><code>method NFD(Str:D: --&gt; NFD:D)</code></pre><p>Returns a codepoint string in NFC format (Unicode Normalization Form D / Decomposed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_NFD
NumStr.NFKC	A			Perl 6 NumStr							<section class="prog__container"><pre><code>method NFKC(Str:D: --&gt; NFKC:D)</code></pre><p>Returns a codepoint string in NFKC format (Unicode Normalization Form KC / Compatibility Composed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_NFKC
NumStr.NFKD	A			Perl 6 NumStr							<section class="prog__container"><pre><code>method NFKD(Str:D: --&gt; NFKD:D)</code></pre><p>Returns a codepoint string in NFC format (Unicode Normalization Form KD / Compatibility Decomposed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_NFKD
NumStr.Num	A			Perl 6 NumStr							<section class="prog__container"><pre><code>method Num</code></pre><p>Returns the Num value of the NumStr.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#method_Num
NumStr.Numeric	A			Perl 6 NumStr							<section class="prog__container"><pre><code>method Numeric</code></pre><p>The numeric coercion is applied when the NumStr is used in a numeric context, such as a numeric comparison or smart match against a numeric value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#method_Numeric
NumStr.Rat	R	Real.Rat										
NumStr.Str	A			Perl 6 NumStr							<section class="prog__container"><p>Returns the string value of the NumStr.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#method_Str
NumStr.Str	R	Real.Str										
NumStr.WHERE	R	Real.WHERE										
NumStr.WHICH	R	Real.WHICH										
NumStr.WHY	R	Real.WHY										
NumStr.abs	R	Real.abs										
NumStr.acos	R	Real.acos										
NumStr.acosec	R	Real.acosec										
NumStr.acosech	R	Real.acosech										
NumStr.acosh	R	Real.acosh										
NumStr.acotan	R	Real.acotan										
NumStr.acotanh	R	Real.acotanh										
NumStr.all	R	Real.all										
NumStr.any	R	Real.any										
NumStr.asec	R	Real.asec										
NumStr.asech	R	Real.asech										
NumStr.asin	R	Real.asin										
NumStr.asinh	R	Real.asinh										
NumStr.atan	R	Real.atan										
NumStr.atan2	R	Real.atan2										
NumStr.atanh	R	Real.atanh										
NumStr.base	R	Real.base										
NumStr.bless	R	Real.bless										
NumStr.ceiling	R	Real.ceiling										
NumStr.ceiling	R	Real.ceiling										
NumStr.chars	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub    chars(Cool  $x --&gt; Int:D)multi sub    chars(Str:D $x --&gt; Int:D)multi sub    chars(str   $x --&gt; int)multi method chars(Str:D:   --&gt; Int:D)</code></pre><p>Returns the number of characters in the string in graphemes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_chars
NumStr.chars	R	Real.chars										
NumStr.chomp	A			Perl 6 NumStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_chomp
NumStr.chomp	R	Real.chomp										
NumStr.chop	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub    chop(Str:D --&gt; Str:D)multi method chop(Str:D: $chars = 1 --&gt; Str:D)</code></pre><p>Returns the string with $chars characters removed from the end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_chop
NumStr.chop	R	Real.chop										
NumStr.chr	R	Real.chr										
NumStr.chrs	R	Real.chrs										
NumStr.cis	R	Real.cis										
NumStr.clone	R	Real.clone										
NumStr.cmp	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub infix:&lt;cmp&gt;(NumStr:D $a, NumStr:D $b)</code></pre><p>Compare two NumStr objects.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#infix_cmp
NumStr.codes	R	Real.codes										
NumStr.comb	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub    comb(Str:D   $matcher, Str:D $input, $limit = Inf)multi sub    comb(Regex:D $matcher, Str:D $input, $limit = Inf, Bool :$match)multi sub    comb(Int:D $size, Str:D $input, $limit = Inf)multi method comb(Str:D $input:)multi method comb(Str:D $input: Str:D   $matcher, $limit = Inf)multi method comb(Str:D $input: Regex:D $matcher, $limit = Inf, Bool :$match)multi method comb(Str:D $input: Int:D $size, $limit = Inf)</code></pre><p>Searches for $matcher in $input and returns a list of all matches (as Str by default, or as Match if $match is True), limited to at most $limit matches.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_comb
NumStr.comb	R	Real.comb										
NumStr.conj	R	Real.conj										
NumStr.contains	R	Real.contains										
NumStr.cos	R	Real.cos										
NumStr.cosec	R	Real.cosec										
NumStr.cosech	R	Real.cosech										
NumStr.cosh	R	Real.cosh										
NumStr.cotan	R	Real.cotan										
NumStr.cotanh	R	Real.cotanh										
NumStr.deepmap	R	Real.deepmap										
NumStr.defined	R	Real.defined										
NumStr.does	R	Real.does										
NumStr.duckmap	R	Real.duckmap										
NumStr.eager	R	Real.eager										
NumStr.elems	R	Real.elems										
NumStr.emit	R	Real.emit										
NumStr.encode	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi method encode(Str:D: $encoding, $nf --&gt; Blob)</code></pre><p>Returns a Blob which represents the original string in the given encoding and normal form.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_encode
NumStr.end	R	Real.end										
NumStr.ends-with	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi method ends-with(Str:D: Str(Cool) $needle --&gt; True:D)</code></pre><p>Returns True if the invocant is identical to or ends with $needle.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_ends-with
NumStr.exit	R	Real.exit										
NumStr.exp	R	Real.exp										
NumStr.export	R	Real.export										
NumStr.fc	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub    fc(Str:D  --&gt; Str:D)multi method fc(Str:D: --&gt; Str:D)</code></pre><p>Does a Unicode "fold case" operation suitable for doing caseless string comparisons.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_fc
NumStr.fc	R	Real.fc										
NumStr.flat	R	Real.flat										
NumStr.flip	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub    flip(Str:D  --&gt; Str:D)multi method flip(Str:D: --&gt; Str:D)</code></pre><p>Returns the string reversed character by character.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_flip
NumStr.flip	R	Real.flip										
NumStr.floor	R	Real.floor										
NumStr.floor	R	Real.floor										
NumStr.fmt	R	Real.fmt										
NumStr.gist	R	Real.gist										
NumStr.indent	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi method indent(Int $steps where { $_ == 0 } )multi method indent(Int $steps where { $_ &gt; 0  } )multi method indent($steps where { .isa(Whatever) || .isa(Int) &amp;&amp; $_ &lt; 0 } )</code></pre><p>Indents each line of the string by $steps.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_indent
NumStr.index	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub    index(Cool $s, Str:D $needle, Cool $startpos = 0 --&gt; Int)multi method index(Cool $needle, Cool $startpos = 0 --&gt; Int)</code></pre><p>Searches for $needle in the string starting from $startpos.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_index
NumStr.index	R	Real.index										
NumStr.isa	R	Real.isa										
NumStr.item	R	Real.item										
NumStr.lc	A			Perl 6 NumStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_lc
NumStr.lc	R	Real.lc										
NumStr.lines	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub    lines(Str:D $input, $limit = Inf --&gt; Positional)multi method lines(Str:D $input: $limit = Inf --&gt; Positional)</code></pre><p>Returns a list of lines (without trailing newline characters), i.e. the same as a call to $input.comb( / ^^ &#92;N* /, $limit ) would.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_lines
NumStr.lines	R	Real.lines										
NumStr.list	R	Real.list										
NumStr.log	R	Real.log										
NumStr.log10	R	Real.log10										
NumStr.map	R	Real.map										
NumStr.match	A			Perl 6 NumStr							<section class="prog__container"><pre><code>method match($pat, :continue(:$c), :pos(:$p), :global(:$g), :overlap(:$ov), :exhaustive(:$ex), :st(:$nd), :rd(:$th), :$nth, :$x --&gt; Match)</code></pre><p>Performs a match of the string against $pat and returns a Match object if there is a successful match, and (Any) otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_match
NumStr.match	R	Real.match										
NumStr.new	A			Perl 6 NumStr							<section class="prog__container"><pre><code>method new(Num $i, Str $s)</code></pre><p>The constructor requires both the Num and the Str value, when constructing one directly the values can be whatever is required:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#method_new
NumStr.new	R	Real.new										
NumStr.none	R	Real.none										
NumStr.not	R	Real.not										
NumStr.one	R	Real.one										
NumStr.ord	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub    ord(Str:D  --&gt; Int:D)multi method ord(Str:D: --&gt; Int:D)</code></pre><p>Returns the codepoint number of the base characters of the first grapheme in the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_ord
NumStr.ord	R	Real.ord										
NumStr.ords	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi method ords(Str:D: --&gt; Positional)</code></pre><p>Returns a list of Unicode codepoint numbers that describe the codepoints making up the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_ords
NumStr.ords	R	Real.ords										
NumStr.pairup	R	Real.pairup										
NumStr.parse-base	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub    parse-base(Str:D $num, Int:D $radix --&gt; Numeric)multi method parse-base(Str:D $num: Int:D $radix --&gt; Numeric)</code></pre><p>Performs the reverse of base by converting a string with a base-$radix number to its base-10 Numeric equivalent.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_parse-base
NumStr.perl	R	Real.perl										
NumStr.pred	A			Perl 6 NumStr							<section class="prog__container"><pre><code>method pred(Str:D: --&gt; Str:D)</code></pre><p>Returns the string decremented by one.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_pred
NumStr.print	R	Real.print										
NumStr.push	R	Real.push										
NumStr.put	R	Real.put										
NumStr.rand	A			Perl 6 NumStr							<section class="prog__container"><pre><code>method rand(Num:D: --&gt; Num)</code></pre><p>Returns a pseudo random number between 0 and the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Num%29_method_rand
NumStr.rand	R	Real.rand										
NumStr.rand	R	Real.rand										
NumStr.return	R	Real.return										
NumStr.return-rw	R	Real.return-rw										
NumStr.reverse	R	Real.reverse										
NumStr.rindex	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub    rindex(Str:D $haystack, Str:D $needle, Int $startpos = $haystack.chars --&gt; Int)multi method rindex(Str:D $haystack: Str:D $needle, Int $startpos = $haystack.chars --&gt; Int)</code></pre><p>Returns the last position of $needle in $haystack not after $startpos.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_rindex
NumStr.rindex	R	Real.rindex										
NumStr.roots	R	Real.roots										
NumStr.round	R	Real.round										
NumStr.round	R	Real.round										
NumStr.samecase	R	Real.samecase										
NumStr.samemark	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub samemark(Str:D $string, Str:D $pattern --&gt; Str:D)method    samemark(Str:D: Str:D $pattern --&gt; Str:D)</code></pre><p>Returns a copy of $string with the mark/accent information for each character changed such that it matches the mark/accent of the corresponding character in $pattern.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_samemark
NumStr.say	R	Real.say										
NumStr.sec	R	Real.sec										
NumStr.sech	R	Real.sech										
NumStr.sign	R	Real.sign										
NumStr.sign	R	Real.sign										
NumStr.sin	R	Real.sin										
NumStr.sinh	R	Real.sinh										
NumStr.so	R	Real.so										
NumStr.sort	R	Real.sort										
NumStr.split	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub    split(  Str:D $delimiter, Str:D $input, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi sub    split(Regex:D $delimiter, Str:D $input, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi sub    split(List:D $delimiters, Str:D $input, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi method split(Str:D:   Str:D $delimiter, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi method split(Str:D: Regex:D $delimiter, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi method split(Str:D: List:D $delimiters, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)</code></pre><p>Splits a string up into pieces based on delimiters found in the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_split
NumStr.split	R	Real.split										
NumStr.sprintf	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub sprintf( Str:D $format, *@args --&gt; Str:D)</code></pre><p>This function is mostly identical to the C library sprintf and printf functions.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_sub_sprintf
NumStr.sqrt	R	Real.sqrt										
NumStr.srand	A			Perl 6 NumStr							<section class="prog__container"><pre><code>sub srand(Int $seed --&gt; Int:D)</code></pre><p>Seeds the pseudo random number generator used by Num.rand with the provided value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Num%29_sub_srand
NumStr.starts-with	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi method starts-with(Str:D: Str(Cool) $needle --&gt; True:D)</code></pre><p>Returns True if the invocant is identical to or starts with $needle.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_starts-with
NumStr.subst	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi method subst(Str:D: $matcher, $replacement, *%opts)</code></pre><p>Returns the invocant string where $matcher is replaced by $replacement (or the original string, if no match was found).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_subst
NumStr.subst-mutate	A			Perl 6 NumStr							<section class="prog__container"><p>Where subst returns the modified string and leaves the original unchanged, it is possible to mutate the original string by using subst-mutate.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_subst-mutate
NumStr.substr	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub    substr(Str:D $s, Int:D $from, Int:D $chars = $s.chars - $from --&gt; Str:D)multi sub    substr(Str:D $s, Range $from-to --&gt; Str:D)multi method substr(Str:D $s: Int:D $from, Int:D $chars = $s.chars - $from --&gt; Str:D)multi method substr(Str:D $s: Range $from-to --&gt; Str:D)</code></pre><p>Returns a part of the string, starting from the character with index $from (where the first character has index 0) and with length $chars.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_substr
NumStr.substr	R	Real.substr										
NumStr.substr-eq	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi method substr-eq(Str:D:  Str(Cool) $test-string, Int(Cool) $from --&gt; Bool)multi method substr-eq(Cool:D: Str(Cool) $test-string, Int(Cool) $from --&gt; Bool)</code></pre><p>Returns True if the $test-string exactly matches the String object, starting from the given initial index $from.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_substr-eq
NumStr.substr-rw	A			Perl 6 NumStr							<section class="prog__container"><pre><code>method substr-rw($from, $length?)</code></pre><p>A version of substr that returns a Proxy functioning as a writable reference to a part of a string variable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_substr-rw
NumStr.succ	A			Perl 6 NumStr							<section class="prog__container"><pre><code>method succ(Str:D --&gt; Str:D)</code></pre><p>Returns the string incremented by one.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_succ
NumStr.take	R	Real.take										
NumStr.take	R	Real.take										
NumStr.take-rw	R	Real.take-rw										
NumStr.tan	R	Real.tan										
NumStr.tanh	R	Real.tanh										
NumStr.tc	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub    tc(Str:D  --&gt; Str:D)multi method tc(Str:D: --&gt; Str:D)</code></pre><p>Does a Unicode "titlecase" operation, that is changes the first character in the string to title case, or to upper case if the character has no title case mapping&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_tc
NumStr.tc	R	Real.tc										
NumStr.tclc	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub    tclc(Str:D  --&gt; Str:D)multi method tclc(Str:D: --&gt; Str:D)</code></pre><p>Turns the first character to title case, and all other characters to lower case&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_tclc
NumStr.tclc	R	Real.tclc										
NumStr.trans	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi method trans(Str:D: Pair:D &#92;what, *%n --&gt; Str)multi method trans(Str:D: *@changes, :complement(:$c), :squash(:$s), :delete(:$d) --&gt; Str)</code></pre><p>Replaces one or many characters with one or many characters.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_trans
NumStr.trim	A			Perl 6 NumStr							<section class="prog__container"><pre><code>method trim(Str:D: --&gt; Str)</code></pre><p>Remove leading and trailing whitespace.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_trim
NumStr.trim	R	Real.trim										
NumStr.trim-leading	A			Perl 6 NumStr							<section class="prog__container"><pre><code>method trim-leading(Str:D: --&gt; Str)</code></pre><p>Remove the whitespace characters from the beginning of a string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_trim-leading
NumStr.trim-leading	R	Real.trim-leading										
NumStr.trim-trailing	A			Perl 6 NumStr							<section class="prog__container"><pre><code>method trim-trailing(Str:D: --&gt; Str)</code></pre><p>Remove the whitespace characters from the end of a string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_trim-trailing
NumStr.trim-trailing	R	Real.trim-trailing										
NumStr.truncate	R	Real.truncate										
NumStr.truncate	R	Real.truncate										
NumStr.uc	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub    uc(Str:D  --&gt; Str:D)multi method uc(Str:D: --&gt; Str:D)</code></pre><p>Returns an uppercase version of the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_uc
NumStr.uc	R	Real.uc										
NumStr.unimatch	R	Real.unimatch										
NumStr.uniname	R	Real.uniname										
NumStr.uninames	R	Real.uninames										
NumStr.uniprop	R	Real.uniprop										
NumStr.uniprops	R	Real.uniprops										
NumStr.unival	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi method unival(Str:D --&gt; Numeric)</code></pre><p>Returns the numeric value that the first codepoint in the invocant represents, or NaN if it's not numeric.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_unival
NumStr.univals	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi method univals(Str:D --&gt; List)</code></pre><p>Returns a list of numeric values represented by each codepoint in the invocant string, and NaN for non-numeric characters.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_method_univals
NumStr.unpolar	R	Real.unpolar										
NumStr.val	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub val(Str:D $MAYBEVAL, :$val-or-fail)</code></pre><p>Given a Str that may be parsable as a numeric value, it will attempt to construct the appropriate allomorph, returning one of IntStr, NumStr, RatStr or ComplexStr or a plain Str if a numeric value cannot be parsed.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_sub_val
NumStr.wordcase	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub    wordcase(Cool $x  --&gt; Str)multi sub    wordcase(Str:D $x --&gt; Str)multi method wordcase(Str:D: :&amp;filter = &amp;tclc, Mu :$where = True --&gt; Str)</code></pre><p>Returns a string in which &amp;filter has been applied to all the words that match $where.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_wordcase
NumStr.wordcase	R	Real.wordcase										
NumStr.words	A			Perl 6 NumStr							<section class="prog__container"><pre><code>multi sub    words(Str:D $input, $limit = Inf --&gt; Positional)multi method words(Str:D $input: $limit = Inf --&gt; Positional)</code></pre><p>Returns a list of non-whitespace bits, i.e. the same as a call to $input.comb( / &#92;S+ /, $limit ) would.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/NumStr.html#%28Str%29_routine_words
NumStr.words	R	Real.words										
Numeric.ACCEPTS	A			Perl 6 Numeric							<section class="prog__container"><pre><code>multi method ACCEPTS(Numeric:D: $other)</code></pre><p>Returns True if $other is numerically the same as the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Numeric.html#method_ACCEPTS
Numeric.Bool	A			Perl 6 Numeric							<section class="prog__container"><pre><code>multi method Bool(Numeric:D:)</code></pre><p>Returns False if the number is equivalent to zero, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Numeric.html#method_Bool
Numeric.Int	A			Perl 6 Numeric							<section class="prog__container"><pre><code>method Int(Numeric:D: --&gt; Int:D)</code></pre><p>If this Numeric is equivalent to a Real, return the equivalent of calling truncate on that Real to get an Int.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Numeric.html#method_Int
Numeric.Num	A			Perl 6 Numeric							<section class="prog__container"><pre><code>method Num(Numeric:D: --&gt; Num:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real as a Num as accurately as is possible.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Numeric.html#method_Num
Numeric.Rat	A			Perl 6 Numeric							<section class="prog__container"><pre><code>method Rat(Numeric:D: Real $epsilon = 1.0e-6 --&gt; Rat:D)</code></pre><p>If this Numeric is equivalent to a Real, return a Rat which is within $epsilon of that Real's value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Numeric.html#method_Rat
Numeric.Real	A			Perl 6 Numeric							<section class="prog__container"><pre><code>method Real(Numeric:D: --&gt; Real:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Numeric.html#method_Real
Numeric.abs	A			Perl 6 Numeric							<section class="prog__container"><pre><code>multi sub    abs(Numeric:D  --&gt; Real:D)multi method abs(Numeric:D: --&gt; Real:D)</code></pre><p>Returns the absolute value of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Numeric.html#routine_abs
Numeric.conj	A			Perl 6 Numeric							<section class="prog__container"><pre><code>multi method conj(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the complex conjugate of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Numeric.html#method_conj
Numeric.exp	A			Perl 6 Numeric							<section class="prog__container"><pre><code>multi sub    exp(Numeric:D, Numeric:D $base = e --&gt; Numeric:D)multi method exp(Numeric:D: Numeric:D $base = e --&gt; Numeric:D)</code></pre><p>Returns $base to the power of the number, or e to the power of the number if called without a second argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Numeric.html#routine_exp
Numeric.log	A			Perl 6 Numeric							<section class="prog__container"><pre><code>multi sub    log(Numeric:D, Numeric $base = e --&gt; Numeric:D)multi method log(Numeric:D: Numeric $base = e --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base $base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Numeric.html#routine_log
Numeric.log10	A			Perl 6 Numeric							<section class="prog__container"><pre><code>multi sub    log10(Numeric:D  --&gt; Numeric:D)multi method log10(Numeric:D: --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base 10.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Numeric.html#routine_log10
Numeric.narrow	A			Perl 6 Numeric							<section class="prog__container"><pre><code>method narrow(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the number converted to the narrowest type that can hold it without loss of precision.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Numeric.html#method_narrow
Numeric.pred	A			Perl 6 Numeric							<section class="prog__container"><pre><code>method pred(Numeric:D:)</code></pre><p>Returns the number decremented by one (predecessor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Numeric.html#method_pred
Numeric.roots	A			Perl 6 Numeric							<section class="prog__container"><pre><code>multi method roots(Numeric:D: Int:D $n --&gt; Positional)</code></pre><p>Returns a list of the $n complex roots, which evaluate to the original number when raised to the $nth power.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Numeric.html#method_roots
Numeric.sqrt	A			Perl 6 Numeric							<section class="prog__container"><pre><code>multi sub    sqrt(Numeric:D --&gt; Numeric:D)multi method sqrt(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns a square root of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Numeric.html#routine_sqrt
Numeric.succ	A			Perl 6 Numeric							<section class="prog__container"><pre><code>method succ(Numeric:D:)</code></pre><p>Returns the number incremented by one (successor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Numeric.html#method_succ
ObjAt.ACCEPTS	A			Perl 6 ObjAt							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Any%29_method_ACCEPTS
ObjAt.ACCEPTS	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_method_ACCEPTS
ObjAt.Bool	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_routine_Bool
ObjAt.CREATE	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_method_CREATE
ObjAt.Str	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_method_Str
ObjAt.WHERE	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_method_WHERE
ObjAt.WHICH	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_method_WHICH
ObjAt.WHY	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_method_WHY
ObjAt.all	A			Perl 6 ObjAt							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Any%29_method_all
ObjAt.any	A			Perl 6 ObjAt							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Any%29_method_any
ObjAt.bless	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_method_bless
ObjAt.clone	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_method_clone
ObjAt.deepmap	A			Perl 6 ObjAt							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Any%29_method_deepmap
ObjAt.defined	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_routine_defined
ObjAt.does	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_routine_does
ObjAt.duckmap	A			Perl 6 ObjAt							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Any%29_method_duckmap
ObjAt.eager	A			Perl 6 ObjAt							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Any%29_method_eager
ObjAt.elems	A			Perl 6 ObjAt							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Any%29_method_elems
ObjAt.emit	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_method_emit
ObjAt.end	A			Perl 6 ObjAt							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Any%29_method_end
ObjAt.exit	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Any%29_sub_exit
ObjAt.export	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_trait_is_export
ObjAt.flat	A			Perl 6 ObjAt							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Any%29_method_flat
ObjAt.gist	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_routine_gist
ObjAt.isa	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_routine_isa
ObjAt.item	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_method_item
ObjAt.list	A			Perl 6 ObjAt							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Any%29_method_list
ObjAt.map	A			Perl 6 ObjAt							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Any%29_method_map
ObjAt.new	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_method_new
ObjAt.none	A			Perl 6 ObjAt							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Any%29_method_none
ObjAt.not	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_method_not
ObjAt.one	A			Perl 6 ObjAt							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Any%29_method_one
ObjAt.pairup	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Any%29_method_pairup
ObjAt.perl	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_routine_perl
ObjAt.print	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_method_print
ObjAt.push	A			Perl 6 ObjAt							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Any%29_method_push
ObjAt.put	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_method_put
ObjAt.return	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_method_return
ObjAt.return-rw	A			Perl 6 ObjAt							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_method_return-rw
ObjAt.reverse	A			Perl 6 ObjAt							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Any%29_routine_reverse
ObjAt.say	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_method_say
ObjAt.so	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_method_so
ObjAt.sort	A			Perl 6 ObjAt							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Any%29_method_sort
ObjAt.take	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_method_take
ObjAt.take	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_routine_take
ObjAt.take-rw	A			Perl 6 ObjAt							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ObjAt.html#%28Mu%29_routine_take-rw
Order.&lt;=&gt;	A			Perl 6 Order							<section class="prog__container"><pre><code>multi sub infix:«&lt;=&gt;»(Int:D &#92;a, Int:D &#92;b --&gt; Order:D)</code></pre><p>Specialized form for Int.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Order.html#infix_%3C%3D%3E
Order.ACCEPTS	R	Real.ACCEPTS										
Order.ACCEPTS	R	Real.ACCEPTS										
Order.Bool	R	Real.Bool										
Order.CREATE	R	Real.CREATE										
Order.EVAL	R	Real.EVAL										
Order.EVALFILE	R	Real.EVALFILE										
Order.IO	R	Real.IO										
Order.Rat	R	Real.Rat										
Order.Str	R	Real.Str										
Order.WHERE	R	Real.WHERE										
Order.WHICH	R	Real.WHICH										
Order.WHY	R	Real.WHY										
Order.abs	R	Real.abs										
Order.acos	R	Real.acos										
Order.acosec	R	Real.acosec										
Order.acosech	R	Real.acosech										
Order.acosh	R	Real.acosh										
Order.acotan	R	Real.acotan										
Order.acotanh	R	Real.acotanh										
Order.all	R	Real.all										
Order.any	R	Real.any										
Order.asec	R	Real.asec										
Order.asech	R	Real.asech										
Order.asin	R	Real.asin										
Order.asinh	R	Real.asinh										
Order.atan	R	Real.atan										
Order.atan2	R	Real.atan2										
Order.atanh	R	Real.atanh										
Order.base	R	Real.base										
Order.bless	R	Real.bless										
Order.ceiling	R	Real.ceiling										
Order.ceiling	R	Real.ceiling										
Order.chars	R	Real.chars										
Order.chomp	R	Real.chomp										
Order.chop	R	Real.chop										
Order.chr	A			Perl 6 Order							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Order.html#%28Int%29_routine_chr
Order.chr	R	Real.chr										
Order.chrs	R	Real.chrs										
Order.cis	R	Real.cis										
Order.clone	R	Real.clone										
Order.cmp	A			Perl 6 Order							<section class="prog__container"><pre><code>multi sub infix:&lt;cmp&gt;(&#92;a, &#92;b --&gt; Order:D)</code></pre><p>Coerces its arguments to Stringy.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Order.html#infix_cmp
Order.codes	R	Real.codes										
Order.comb	R	Real.comb										
Order.conj	R	Real.conj										
Order.contains	R	Real.contains										
Order.cos	R	Real.cos										
Order.cosec	R	Real.cosec										
Order.cosech	R	Real.cosech										
Order.cosh	R	Real.cosh										
Order.cotan	R	Real.cotan										
Order.cotanh	R	Real.cotanh										
Order.deepmap	R	Real.deepmap										
Order.defined	R	Real.defined										
Order.div	A			Perl 6 Order							<section class="prog__container"><pre><code>multi sub infix:&lt;div&gt;(Int:D, Int:D --&gt; Int:D)</code></pre><p>Does an integer division, rounded down.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Order.html#%28Int%29_infix_div
Order.does	R	Real.does										
Order.duckmap	R	Real.duckmap										
Order.eager	R	Real.eager										
Order.elems	R	Real.elems										
Order.emit	R	Real.emit										
Order.end	R	Real.end										
Order.exit	R	Real.exit										
Order.exp	R	Real.exp										
Order.expmod	A			Perl 6 Order							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Order.html#%28Int%29_routine_expmod
Order.export	R	Real.export										
Order.fc	R	Real.fc										
Order.flat	R	Real.flat										
Order.flip	R	Real.flip										
Order.floor	R	Real.floor										
Order.floor	R	Real.floor										
Order.fmt	R	Real.fmt										
Order.gist	R	Real.gist										
Order.index	R	Real.index										
Order.is-prime	A			Perl 6 Order							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Order.html#%28Int%29_routine_is-prime
Order.isa	R	Real.isa										
Order.item	R	Real.item										
Order.lc	R	Real.lc										
Order.lines	R	Real.lines										
Order.list	R	Real.list										
Order.log	R	Real.log										
Order.log10	R	Real.log10										
Order.lsb	A			Perl 6 Order							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Order.html#%28Int%29_routine_lsb
Order.map	R	Real.map										
Order.match	R	Real.match										
Order.msb	A			Perl 6 Order							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Order.html#%28Int%29_routine_msb
Order.new	R	Real.new										
Order.none	R	Real.none										
Order.not	R	Real.not										
Order.one	R	Real.one										
Order.ord	R	Real.ord										
Order.ords	R	Real.ords										
Order.pairup	R	Real.pairup										
Order.perl	R	Real.perl										
Order.polymod	A			Perl 6 Order							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Order.html#%28Int%29_method_polymod
Order.print	R	Real.print										
Order.push	R	Real.push										
Order.put	R	Real.put										
Order.rand	R	Real.rand										
Order.rand	R	Real.rand										
Order.return	R	Real.return										
Order.return-rw	R	Real.return-rw										
Order.reverse	R	Real.reverse										
Order.rindex	R	Real.rindex										
Order.roots	R	Real.roots										
Order.round	R	Real.round										
Order.round	R	Real.round										
Order.samecase	R	Real.samecase										
Order.say	R	Real.say										
Order.sec	R	Real.sec										
Order.sech	R	Real.sech										
Order.sign	R	Real.sign										
Order.sign	R	Real.sign										
Order.sin	R	Real.sin										
Order.sinh	R	Real.sinh										
Order.so	R	Real.so										
Order.sort	R	Real.sort										
Order.split	R	Real.split										
Order.sqrt	R	Real.sqrt										
Order.substr	R	Real.substr										
Order.take	R	Real.take										
Order.take	R	Real.take										
Order.take-rw	R	Real.take-rw										
Order.tan	R	Real.tan										
Order.tanh	R	Real.tanh										
Order.tc	R	Real.tc										
Order.tclc	R	Real.tclc										
Order.trim	R	Real.trim										
Order.trim-leading	R	Real.trim-leading										
Order.trim-trailing	R	Real.trim-trailing										
Order.truncate	R	Real.truncate										
Order.truncate	R	Real.truncate										
Order.uc	R	Real.uc										
Order.unimatch	R	Real.unimatch										
Order.uniname	R	Real.uniname										
Order.uninames	R	Real.uninames										
Order.uniprop	R	Real.uniprop										
Order.uniprops	R	Real.uniprops										
Order.unival	A			Perl 6 Order							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Order.html#%28Int%29_routine_unival
Order.unpolar	R	Real.unpolar										
Order.wordcase	R	Real.wordcase										
Order.words	R	Real.words										
Pair.ACCEPTS	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Any%29_method_ACCEPTS
Pair.ACCEPTS	A			Perl 6 Pair							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_method_ACCEPTS
Pair.Bool	A			Perl 6 Pair							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_routine_Bool
Pair.CREATE	A			Perl 6 Pair							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_method_CREATE
Pair.Str	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#method_Str
Pair.Str	A			Perl 6 Pair							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_method_Str
Pair.WHERE	A			Perl 6 Pair							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_method_WHERE
Pair.WHICH	A			Perl 6 Pair							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_method_WHICH
Pair.WHY	A			Perl 6 Pair							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_method_WHY
Pair.all	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Any%29_method_all
Pair.antipair	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#method_antipair
Pair.antipairs	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#method_antipairs
Pair.any	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Any%29_method_any
Pair.bless	A			Perl 6 Pair							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_method_bless
Pair.clone	A			Perl 6 Pair							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_method_clone
Pair.cmp	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#infix_cmp
Pair.deepmap	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Any%29_method_deepmap
Pair.defined	A			Perl 6 Pair							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_routine_defined
Pair.does	A			Perl 6 Pair							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_routine_does
Pair.duckmap	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Any%29_method_duckmap
Pair.eager	A			Perl 6 Pair							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Any%29_method_eager
Pair.elems	A			Perl 6 Pair							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Any%29_method_elems
Pair.emit	A			Perl 6 Pair							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_method_emit
Pair.end	A			Perl 6 Pair							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Any%29_method_end
Pair.exit	A			Perl 6 Pair							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Any%29_sub_exit
Pair.export	A			Perl 6 Pair							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_trait_is_export
Pair.flat	A			Perl 6 Pair							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Any%29_method_flat
Pair.fmt	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#method_fmt
Pair.freeze	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#method_freeze
Pair.gist	A			Perl 6 Pair							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_routine_gist
Pair.invert	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#method_invert
Pair.isa	A			Perl 6 Pair							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_routine_isa
Pair.item	A			Perl 6 Pair							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_method_item
Pair.key	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#method_key
Pair.keys	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#method_keys
Pair.kv	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#method_kv
Pair.list	A			Perl 6 Pair							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Any%29_method_list
Pair.map	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Any%29_method_map
Pair.new	A			Perl 6 Pair							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_method_new
Pair.none	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Any%29_method_none
Pair.not	A			Perl 6 Pair							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_method_not
Pair.one	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Any%29_method_one
Pair.pairs	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#method_pairs
Pair.pairup	A			Perl 6 Pair							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Any%29_method_pairup
Pair.perl	A			Perl 6 Pair							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_routine_perl
Pair.print	A			Perl 6 Pair							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_method_print
Pair.push	A			Perl 6 Pair							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Any%29_method_push
Pair.put	A			Perl 6 Pair							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_method_put
Pair.return	A			Perl 6 Pair							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_method_return
Pair.return-rw	A			Perl 6 Pair							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_method_return-rw
Pair.reverse	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Any%29_routine_reverse
Pair.say	A			Perl 6 Pair							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_method_say
Pair.so	A			Perl 6 Pair							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_method_so
Pair.sort	A			Perl 6 Pair							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Any%29_method_sort
Pair.take	A			Perl 6 Pair							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_method_take
Pair.take	A			Perl 6 Pair							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_routine_take
Pair.take-rw	A			Perl 6 Pair							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#%28Mu%29_routine_take-rw
Pair.value	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#method_value
Pair.values	A			Perl 6 Pair							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Pair.html#method_values
Parameter.ACCEPTS	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Any%29_method_ACCEPTS
Parameter.ACCEPTS	A			Perl 6 Parameter							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_method_ACCEPTS
Parameter.Bool	A			Perl 6 Parameter							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_routine_Bool
Parameter.CREATE	A			Perl 6 Parameter							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_method_CREATE
Parameter.Str	A			Perl 6 Parameter							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_method_Str
Parameter.WHERE	A			Perl 6 Parameter							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_method_WHERE
Parameter.WHICH	A			Perl 6 Parameter							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_method_WHICH
Parameter.WHY	A			Perl 6 Parameter							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_method_WHY
Parameter.all	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Any%29_method_all
Parameter.any	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Any%29_method_any
Parameter.bless	A			Perl 6 Parameter							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_method_bless
Parameter.capture	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#method_capture
Parameter.clone	A			Perl 6 Parameter							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_method_clone
Parameter.constraints	A			Perl 6 Parameter							<section class="prog__container"><p>Returns additional constraints on the parameter (usually as an all-Junction).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#method_constraints
Parameter.copy	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#method_copy
Parameter.deepmap	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Any%29_method_deepmap
Parameter.default	A			Perl 6 Parameter							<section class="prog__container"><p>Returns a closure that upon invocation returns the default value for this parameter, or Any if no default was provided.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#method_default
Parameter.defined	A			Perl 6 Parameter							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_routine_defined
Parameter.does	A			Perl 6 Parameter							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_routine_does
Parameter.duckmap	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Any%29_method_duckmap
Parameter.eager	A			Perl 6 Parameter							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Any%29_method_eager
Parameter.elems	A			Perl 6 Parameter							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Any%29_method_elems
Parameter.emit	A			Perl 6 Parameter							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_method_emit
Parameter.end	A			Perl 6 Parameter							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Any%29_method_end
Parameter.exit	A			Perl 6 Parameter							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Any%29_sub_exit
Parameter.export	A			Perl 6 Parameter							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_trait_is_export
Parameter.flat	A			Perl 6 Parameter							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Any%29_method_flat
Parameter.gist	A			Perl 6 Parameter							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_routine_gist
Parameter.invocant	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#method_invocant
Parameter.isa	A			Perl 6 Parameter							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_routine_isa
Parameter.item	A			Perl 6 Parameter							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_method_item
Parameter.list	A			Perl 6 Parameter							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Any%29_method_list
Parameter.map	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Any%29_method_map
Parameter.name	A			Perl 6 Parameter							<section class="prog__container"><p>Returns the variable name, which includes all sigils and twigils.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#method_name
Parameter.named	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#method_named
Parameter.named_names	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#method_named_names
Parameter.new	A			Perl 6 Parameter							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_method_new
Parameter.none	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Any%29_method_none
Parameter.not	A			Perl 6 Parameter							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_method_not
Parameter.one	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Any%29_method_one
Parameter.optional	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#method_optional
Parameter.pairup	A			Perl 6 Parameter							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Any%29_method_pairup
Parameter.perl	A			Perl 6 Parameter							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_routine_perl
Parameter.positional	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#method_positional
Parameter.print	A			Perl 6 Parameter							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_method_print
Parameter.push	A			Perl 6 Parameter							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Any%29_method_push
Parameter.put	A			Perl 6 Parameter							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_method_put
Parameter.raw	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#method_raw
Parameter.readonly	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#method_readonly
Parameter.return	A			Perl 6 Parameter							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_method_return
Parameter.return-rw	A			Perl 6 Parameter							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_method_return-rw
Parameter.reverse	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Any%29_routine_reverse
Parameter.rw	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#method_rw
Parameter.say	A			Perl 6 Parameter							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_method_say
Parameter.sigil	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#method_sigil
Parameter.slurpy	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#method_slurpy
Parameter.so	A			Perl 6 Parameter							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_method_so
Parameter.sort	A			Perl 6 Parameter							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Any%29_method_sort
Parameter.sub_signature	A			Perl 6 Parameter							<section class="prog__container"><p>If the parameter has a sub-signature, returns a Signature object for it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#method_sub_signature
Parameter.take	A			Perl 6 Parameter							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_method_take
Parameter.take	A			Perl 6 Parameter							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_routine_take
Parameter.take-rw	A			Perl 6 Parameter							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#%28Mu%29_routine_take-rw
Parameter.twigil	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#method_twigil
Parameter.type	A			Perl 6 Parameter							<section class="prog__container"><p>Returns the nominal type constraint of the parameter.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#method_type
Parameter.type_captures	A			Perl 6 Parameter							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Parameter.html#method_type_captures
Parameters	R	Signature.Parameters										
Parameters	R	Signature.Parameters										
Parameters	R	Signature.Parameters										
Positional.of	A			Perl 6 Positional							<section class="prog__container"><pre><code>method of()</code></pre><p>Returns the type constraint for elements of the positional container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Positional.html#method_of
PositionalBindFailover.cache	A			Perl 6 PositionalBindFailover							<section class="prog__container"><pre><code>method cache(PositionalBindFailover:D: --&gt; List:D)</code></pre><p>Returns a List based on the iterator method, and caches it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/PositionalBindFailover.html#method_cache
PositionalBindFailover.iterator	A			Perl 6 PositionalBindFailover							<section class="prog__container"><pre><code>method iterator(PositionalBindFailover:D:) { ... }</code></pre><p>This method stub ensure that a class implementing role PositionalBindFailover provides an iterator method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/PositionalBindFailover.html#method_iterator
PositionalBindFailover.list	A			Perl 6 PositionalBindFailover							<section class="prog__container"><pre><code>method list(PositionalBindFailover:D: --&gt; List:D)</code></pre><p>Returns a List based on the iterator method without caching it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/PositionalBindFailover.html#method_list
Proc.ACCEPTS	A			Perl 6 Proc							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Any%29_method_ACCEPTS
Proc.ACCEPTS	A			Perl 6 Proc							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_method_ACCEPTS
Proc.Bool	A			Perl 6 Proc							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_routine_Bool
Proc.CREATE	A			Perl 6 Proc							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_method_CREATE
Proc.Str	A			Perl 6 Proc							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_method_Str
Proc.WHERE	A			Perl 6 Proc							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_method_WHERE
Proc.WHICH	A			Perl 6 Proc							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_method_WHICH
Proc.WHY	A			Perl 6 Proc							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_method_WHY
Proc.all	A			Perl 6 Proc							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Any%29_method_all
Proc.any	A			Perl 6 Proc							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Any%29_method_any
Proc.bless	A			Perl 6 Proc							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_method_bless
Proc.clone	A			Perl 6 Proc							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_method_clone
Proc.command	A			Perl 6 Proc							<section class="prog__container"><pre><code>method command(Proc:D: --&gt; Array:D)</code></pre><p>The command method is an accessor to an array containing the arguments that were passed when the Proc object was executed via spawn or shell or run.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#method_command
Proc.deepmap	A			Perl 6 Proc							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Any%29_method_deepmap
Proc.defined	A			Perl 6 Proc							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_routine_defined
Proc.does	A			Perl 6 Proc							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_routine_does
Proc.duckmap	A			Perl 6 Proc							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Any%29_method_duckmap
Proc.eager	A			Perl 6 Proc							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Any%29_method_eager
Proc.elems	A			Perl 6 Proc							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Any%29_method_elems
Proc.emit	A			Perl 6 Proc							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_method_emit
Proc.end	A			Perl 6 Proc							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Any%29_method_end
Proc.exit	A			Perl 6 Proc							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Any%29_sub_exit
Proc.exitcode	A			Perl 6 Proc							<section class="prog__container"><pre><code>method exitcode(Proc:D: --&gt; Int:D)</code></pre><p>Returns the exit code of the external process, or -1 if it has not exited yet.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#method_exitcode
Proc.export	A			Perl 6 Proc							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_trait_is_export
Proc.flat	A			Perl 6 Proc							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Any%29_method_flat
Proc.gist	A			Perl 6 Proc							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_routine_gist
Proc.isa	A			Perl 6 Proc							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_routine_isa
Proc.item	A			Perl 6 Proc							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_method_item
Proc.list	A			Perl 6 Proc							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Any%29_method_list
Proc.map	A			Perl 6 Proc							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Any%29_method_map
Proc.new	A			Perl 6 Proc							<section class="prog__container"><pre><code>method new(Proc:U:        :$in = '-',        :$out = '-',        :$err = '-',        Bool :$bin = False,        Bool :$chomp = True,        Bool :$merge = False,        Str:D :$enc = 'UTF-8',        Str:D :$nl = "&#92;n",    --&gt; Proc:D)sub run(        :$in = '-',        :$out = '-',        :$err = '-',        Bool :$bin = False,        Bool :$chomp = True,        Bool :$merge = False,        Str:D :$enc = 'UTF-8',        Str:D :$nl = "&#92;n",        :$cwd = $*CWD,        Hash() :$env = %*ENV,        *@args    --&gt; Proc:D)</code></pre><p>new creates a new Proc object, whereas run creates one, and spawns it with the command and arguments provided in @args.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#method_new
Proc.new	A			Perl 6 Proc							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_method_new
Proc.none	A			Perl 6 Proc							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Any%29_method_none
Proc.not	A			Perl 6 Proc							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_method_not
Proc.one	A			Perl 6 Proc							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Any%29_method_one
Proc.pairup	A			Perl 6 Proc							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Any%29_method_pairup
Proc.perl	A			Perl 6 Proc							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_routine_perl
Proc.pid	A			Perl 6 Proc							<section class="prog__container"><pre><code>method pid(Proc:D:)</code></pre><p>Returns the Process Identifier (pid) of the external process, if available.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#method_pid
Proc.print	A			Perl 6 Proc							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_method_print
Proc.push	A			Perl 6 Proc							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Any%29_method_push
Proc.put	A			Perl 6 Proc							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_method_put
Proc.return	A			Perl 6 Proc							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_method_return
Proc.return-rw	A			Perl 6 Proc							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_method_return-rw
Proc.reverse	A			Perl 6 Proc							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Any%29_routine_reverse
Proc.say	A			Perl 6 Proc							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_method_say
Proc.shell	A			Perl 6 Proc							<section class="prog__container"><pre><code>method shell($cmd, :$cwd = $*CWD, :$env --&gt; Bool:D)</code></pre><p>Runs the Proc object with the given command, which is passed through to the shell for parsing and execution.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#method_shell
Proc.signal	A			Perl 6 Proc							<section class="prog__container"><pre><code>method signal(Proc:D:)</code></pre><p>Returns the signal number with which the external process was killed, or 0 or an undefined value otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#method_signal
Proc.sink	A			Perl 6 Proc							<section class="prog__container"><p>When sunk, the Proc object will throw X::Proc::Unsuccessful if the process it ran exited unsuccessfully.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#method_sink
Proc.so	A			Perl 6 Proc							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_method_so
Proc.sort	A			Perl 6 Proc							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Any%29_method_sort
Proc.spawn	A			Perl 6 Proc							<section class="prog__container"><pre><code>method spawn(*@args ($, *@), :$cwd = $*CWD, Hash() :$env = %*ENV --&gt; Bool:D)</code></pre><p>Runs the Proc object with the given command, argument list, working directory and environment.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#method_spawn
Proc.take	A			Perl 6 Proc							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_method_take
Proc.take	A			Perl 6 Proc							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_routine_take
Proc.take-rw	A			Perl 6 Proc							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proc.html#%28Mu%29_routine_take-rw
Promise.ACCEPTS	A			Perl 6 Promise							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Any%29_method_ACCEPTS
Promise.ACCEPTS	A			Perl 6 Promise							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_method_ACCEPTS
Promise.Bool	A			Perl 6 Promise							<section class="prog__container"><pre><code>multi method Bool(Promise:D:)</code></pre><p>Returns True for a kept or broken promise, and False for one in state Planned.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#method_Bool
Promise.Bool	A			Perl 6 Promise							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_routine_Bool
Promise.CREATE	A			Perl 6 Promise							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_method_CREATE
Promise.Str	A			Perl 6 Promise							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_method_Str
Promise.Supply	A			Perl 6 Promise							<section class="prog__container"><pre><code>method Supply(Promise:D:)</code></pre><p>Returns a Supply that will emit the result of the Promise being Kept or quit with the cause if the Promise is Broken.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#method_Supply
Promise.WHERE	A			Perl 6 Promise							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_method_WHERE
Promise.WHICH	A			Perl 6 Promise							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_method_WHICH
Promise.WHY	A			Perl 6 Promise							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_method_WHY
Promise.all	A			Perl 6 Promise							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Any%29_method_all
Promise.allof	A			Perl 6 Promise							<section class="prog__container"><pre><code>method allof(Promise:U: *@promises --&gt; Promise:D)</code></pre><p>Returns a new promise that will be kept when all the promises passed as arguments are kept or broken.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#method_allof
Promise.any	A			Perl 6 Promise							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Any%29_method_any
Promise.anyof	A			Perl 6 Promise							<section class="prog__container"><pre><code>method anyof(Promise:U: *@promises --&gt; Promise:D)</code></pre><p>Returns a new promise that will be kept as soon as any of the promises passed as arguments is kept or broken.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#method_anyof
Promise.at	A			Perl 6 Promise							<section class="prog__container"><pre><code>method at(Promise:U: $time, :$scheduler = $*SCHEDULER --&gt; Promise:D)</code></pre><p>Creates a new Promise that will be kept at the given time, or later.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#method_at
Promise.await	A			Perl 6 Promise							<section class="prog__container"><pre><code>multi sub await(Promise:D)multi sub await(*@)</code></pre><p>Waits until one or more promises are all fulfilled, and then returns their values.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#sub_await
Promise.bless	A			Perl 6 Promise							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_method_bless
Promise.break	A			Perl 6 Promise							<section class="prog__container"><pre><code>multi method break(Promise:D:)multi method break(Promise:D: &#92;result)</code></pre><p>Breaks a promise, optionally setting the result.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#method_break
Promise.cause	A			Perl 6 Promise							<section class="prog__container"><pre><code>method cause(Promise:D)</code></pre><p>If the promise was broken, returns the result (or exception).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#method_cause
Promise.clone	A			Perl 6 Promise							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_method_clone
Promise.deepmap	A			Perl 6 Promise							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Any%29_method_deepmap
Promise.defined	A			Perl 6 Promise							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_routine_defined
Promise.does	A			Perl 6 Promise							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_routine_does
Promise.duckmap	A			Perl 6 Promise							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Any%29_method_duckmap
Promise.eager	A			Perl 6 Promise							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Any%29_method_eager
Promise.elems	A			Perl 6 Promise							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Any%29_method_elems
Promise.emit	A			Perl 6 Promise							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_method_emit
Promise.end	A			Perl 6 Promise							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Any%29_method_end
Promise.exit	A			Perl 6 Promise							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Any%29_sub_exit
Promise.export	A			Perl 6 Promise							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_trait_is_export
Promise.flat	A			Perl 6 Promise							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Any%29_method_flat
Promise.gist	A			Perl 6 Promise							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_routine_gist
Promise.in	A			Perl 6 Promise							<section class="prog__container"><pre><code>method in(Promise:U: $seconds, :$scheduler = $*SCHEDULER --&gt; Promise:D)</code></pre><p>Creates a new Promise that will be kept in $seconds seconds, or later.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#method_in
Promise.isa	A			Perl 6 Promise							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_routine_isa
Promise.item	A			Perl 6 Promise							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_method_item
Promise.keep	A			Perl 6 Promise							<section class="prog__container"><pre><code>multi method keep(Promise:D:)multi method keep(Promise:D: &#92;result)</code></pre><p>Keeps a promise, optionally setting the result.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#method_keep
Promise.list	A			Perl 6 Promise							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Any%29_method_list
Promise.map	A			Perl 6 Promise							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Any%29_method_map
Promise.new	A			Perl 6 Promise							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_method_new
Promise.none	A			Perl 6 Promise							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Any%29_method_none
Promise.not	A			Perl 6 Promise							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_method_not
Promise.one	A			Perl 6 Promise							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Any%29_method_one
Promise.pairup	A			Perl 6 Promise							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Any%29_method_pairup
Promise.perl	A			Perl 6 Promise							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_routine_perl
Promise.print	A			Perl 6 Promise							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_method_print
Promise.push	A			Perl 6 Promise							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Any%29_method_push
Promise.put	A			Perl 6 Promise							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_method_put
Promise.result	A			Perl 6 Promise							<section class="prog__container"><pre><code>method result(Promise:D)</code></pre><p>Waits for the promise to be kept or broken.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#method_result
Promise.return	A			Perl 6 Promise							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_method_return
Promise.return-rw	A			Perl 6 Promise							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_method_return-rw
Promise.reverse	A			Perl 6 Promise							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Any%29_routine_reverse
Promise.say	A			Perl 6 Promise							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_method_say
Promise.scheduler	A			Perl 6 Promise							<section class="prog__container"><pre><code>method scheduler(Promise:D:)</code></pre><p>Returns the scheduler that manages the promise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#method_scheduler
Promise.so	A			Perl 6 Promise							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_method_so
Promise.sort	A			Perl 6 Promise							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Any%29_method_sort
Promise.start	A			Perl 6 Promise							<section class="prog__container"><pre><code>method start(Promise:U: &amp;code, :$scheduler = $*SCHEDULER --&gt; Promise:D)</code></pre><p>Creates a new Promise that runs the given code object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#method_start
Promise.status	A			Perl 6 Promise							<section class="prog__container"><pre><code>method status(Promise:D --&gt; PromiseStatus)</code></pre><p>Returns the current state of the promise: Kept, Broken or Planned:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#method_status
Promise.take	A			Perl 6 Promise							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_method_take
Promise.take	A			Perl 6 Promise							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_routine_take
Promise.take-rw	A			Perl 6 Promise							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#%28Mu%29_routine_take-rw
Promise.then	A			Perl 6 Promise							<section class="prog__container"><pre><code>method then(Promise:D: &amp;code)</code></pre><p>Schedules a piece of code to be run after the invocant has been kept or broken, and returns a new promise for this computation.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#method_then
Promise.vow	A			Perl 6 Promise							<section class="prog__container"><pre><code>my class Vow {    has Promise $.promise;    method keep() { ... }    method break() { ... }}method vow(Promise:D: --&gt; Vow:D)</code></pre><p>Returns an object that holds the sole authority over keeping or breaking a promise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Promise.html#method_vow
Proxy.ACCEPTS	A			Perl 6 Proxy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Any%29_method_ACCEPTS
Proxy.ACCEPTS	A			Perl 6 Proxy							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_method_ACCEPTS
Proxy.Bool	A			Perl 6 Proxy							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_routine_Bool
Proxy.CREATE	A			Perl 6 Proxy							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_method_CREATE
Proxy.Str	A			Perl 6 Proxy							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_method_Str
Proxy.WHERE	A			Perl 6 Proxy							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_method_WHERE
Proxy.WHICH	A			Perl 6 Proxy							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_method_WHICH
Proxy.WHY	A			Perl 6 Proxy							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_method_WHY
Proxy.all	A			Perl 6 Proxy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Any%29_method_all
Proxy.any	A			Perl 6 Proxy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Any%29_method_any
Proxy.bless	A			Perl 6 Proxy							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_method_bless
Proxy.clone	A			Perl 6 Proxy							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_method_clone
Proxy.deepmap	A			Perl 6 Proxy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Any%29_method_deepmap
Proxy.defined	A			Perl 6 Proxy							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_routine_defined
Proxy.does	A			Perl 6 Proxy							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_routine_does
Proxy.duckmap	A			Perl 6 Proxy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Any%29_method_duckmap
Proxy.eager	A			Perl 6 Proxy							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Any%29_method_eager
Proxy.elems	A			Perl 6 Proxy							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Any%29_method_elems
Proxy.emit	A			Perl 6 Proxy							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_method_emit
Proxy.end	A			Perl 6 Proxy							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Any%29_method_end
Proxy.exit	A			Perl 6 Proxy							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Any%29_sub_exit
Proxy.export	A			Perl 6 Proxy							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_trait_is_export
Proxy.flat	A			Perl 6 Proxy							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Any%29_method_flat
Proxy.gist	A			Perl 6 Proxy							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_routine_gist
Proxy.isa	A			Perl 6 Proxy							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_routine_isa
Proxy.item	A			Perl 6 Proxy							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_method_item
Proxy.list	A			Perl 6 Proxy							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Any%29_method_list
Proxy.map	A			Perl 6 Proxy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Any%29_method_map
Proxy.new	A			Perl 6 Proxy							<section class="prog__container"><pre><code>method new(:&amp;FETCH!, :&amp;STORE! --&gt; Proxy:D)</code></pre><p>Creates a new Proxy object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#method_new
Proxy.new	A			Perl 6 Proxy							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_method_new
Proxy.none	A			Perl 6 Proxy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Any%29_method_none
Proxy.not	A			Perl 6 Proxy							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_method_not
Proxy.one	A			Perl 6 Proxy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Any%29_method_one
Proxy.pairup	A			Perl 6 Proxy							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Any%29_method_pairup
Proxy.perl	A			Perl 6 Proxy							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_routine_perl
Proxy.print	A			Perl 6 Proxy							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_method_print
Proxy.push	A			Perl 6 Proxy							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Any%29_method_push
Proxy.put	A			Perl 6 Proxy							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_method_put
Proxy.return	A			Perl 6 Proxy							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_method_return
Proxy.return-rw	A			Perl 6 Proxy							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_method_return-rw
Proxy.reverse	A			Perl 6 Proxy							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Any%29_routine_reverse
Proxy.say	A			Perl 6 Proxy							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_method_say
Proxy.so	A			Perl 6 Proxy							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_method_so
Proxy.sort	A			Perl 6 Proxy							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Any%29_method_sort
Proxy.take	A			Perl 6 Proxy							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_method_take
Proxy.take	A			Perl 6 Proxy							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_routine_take
Proxy.take-rw	A			Perl 6 Proxy							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Proxy.html#%28Mu%29_routine_take-rw
Range.ACCEPTS	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Any%29_method_ACCEPTS
Range.ACCEPTS	A			Perl 6 Range							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_method_ACCEPTS
Range.Bool	A			Perl 6 Range							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_routine_Bool
Range.CREATE	A			Perl 6 Range							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_method_CREATE
Range.EVAL	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_EVAL
Range.EVALFILE	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_EVALFILE
Range.IO	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_method_IO
Range.Str	A			Perl 6 Range							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_method_Str
Range.WHERE	A			Perl 6 Range							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_method_WHERE
Range.WHICH	A			Perl 6 Range							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_method_WHICH
Range.WHY	A			Perl 6 Range							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_method_WHY
Range.abs	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_abs
Range.acos	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_acos
Range.acosec	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_acosec
Range.acosech	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_acosech
Range.acosh	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_acosh
Range.acotan	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_acotan
Range.acotanh	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_acotanh
Range.all	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Any%29_method_all
Range.any	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Any%29_method_any
Range.asec	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_asec
Range.asech	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_asech
Range.asin	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_asin
Range.asinh	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_asinh
Range.atan	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_atan
Range.atan2	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_atan2
Range.atanh	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_atanh
Range.bless	A			Perl 6 Range							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_method_bless
Range.bounds	A			Perl 6 Range							<section class="prog__container"><pre><code>method bounds(Range:D: --&gt; Positional)</code></pre><p>Returns a list consisting of the start and end point.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#method_bounds
Range.ceiling	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_ceiling
Range.chars	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_chars
Range.chomp	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_chomp
Range.chop	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_chop
Range.chr	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_chr
Range.chrs	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_chrs
Range.cis	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_cis
Range.clone	A			Perl 6 Range							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_method_clone
Range.codes	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_codes
Range.comb	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_comb
Range.conj	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_method_conj
Range.contains	A			Perl 6 Range							<section class="prog__container"><pre><code>multi method contains(Cool:D: Str(Cool) $needle, Cool $start? --&gt; Bool:D)</code></pre><p>Returns True if the invocant contains the $needle at any position within the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_method_contains
Range.cos	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_cos
Range.cosec	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_cosec
Range.cosech	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_cosech
Range.cosh	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_cosh
Range.cotan	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_cotan
Range.cotanh	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_cotanh
Range.deepmap	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Any%29_method_deepmap
Range.defined	A			Perl 6 Range							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_routine_defined
Range.does	A			Perl 6 Range							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_routine_does
Range.duckmap	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Any%29_method_duckmap
Range.eager	A			Perl 6 Range							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Any%29_method_eager
Range.elems	A			Perl 6 Range							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Any%29_method_elems
Range.elems	A			Perl 6 Range							<section class="prog__container"><pre><code>method elems(Range:D: --&gt; Numeric:D)</code></pre><p>Returns the number of elements in the range, e.g. when being iterated over, or when used as a List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#method_elems
Range.emit	A			Perl 6 Range							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_method_emit
Range.end	A			Perl 6 Range							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Any%29_method_end
Range.excludes-max	A			Perl 6 Range							<section class="prog__container"><pre><code>method excludes-max(Range:D: --&gt; Bool:D)</code></pre><p>Returns True if the end point is excluded from the range, and False otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#method_excludes-max
Range.excludes-min	A			Perl 6 Range							<section class="prog__container"><pre><code>method excludes-min(Range:D: --&gt; Bool:D)</code></pre><p>Returns True if the start point is excluded from the range, and False otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#method_excludes-min
Range.exit	A			Perl 6 Range							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Any%29_sub_exit
Range.exp	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_method_exp
Range.export	A			Perl 6 Range							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_trait_is_export
Range.fc	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_fc
Range.flat	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Iterable%29_method_flat
Range.flat	A			Perl 6 Range							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Any%29_method_flat
Range.flat	A			Perl 6 Range							<section class="prog__container"><pre><code>method flat(Range:D: --&gt; List:D)</code></pre><p>Generates the list of elements that the range represents.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#method_flat
Range.flip	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_flip
Range.floor	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_floor
Range.fmt	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_method_fmt
Range.gist	A			Perl 6 Range							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_routine_gist
Range.hyper	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Iterable%29_method_hyper
Range.index	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_index
Range.infinite	A			Perl 6 Range							<section class="prog__container"><pre><code>method infinite(Range:D: --&gt; Bool:D)</code></pre><p>Returns True if either end point was declared with Inf or *.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#method_infinite
Range.int-bounds	A			Perl 6 Range							<section class="prog__container"><pre><code>method bounds(Range:D: --&gt; Positional)</code></pre><p>If the Range is an integer range (as indicated by is-int), then this method returns a list with the first and last value it will iterate over (taking into account excludes-min and excludes-max).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#method_int-bounds
Range.is-int	A			Perl 6 Range							<section class="prog__container"><pre><code>method is-int(Range:D: --&gt; Bool:D)</code></pre><p>Returns True if both end points are Int values.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#method_is-int
Range.isa	A			Perl 6 Range							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_routine_isa
Range.item	A			Perl 6 Range							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_method_item
Range.iterator	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Iterable%29_method_iterator
Range.lazy	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Iterable%29_method_lazy
Range.lc	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_lc
Range.lines	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_lines
Range.list	A			Perl 6 Range							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Any%29_method_list
Range.list	A			Perl 6 Range							<section class="prog__container"><pre><code>method list(Range:D: --&gt; List:D)</code></pre><p>Generates the list of elements that the range represents.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#method_list
Range.log	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_log
Range.log10	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_log10
Range.map	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Any%29_method_map
Range.match	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_match
Range.max	A			Perl 6 Range							<section class="prog__container"><pre><code>method max(Range:D:)</code></pre><p>Returns the end point of the range.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#method_max
Range.min	A			Perl 6 Range							<section class="prog__container"><pre><code>method min(Range:D:)</code></pre><p>Returns the start point of the range.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#method_min
Range.minmax	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#method_minmax
Range.new	A			Perl 6 Range							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_method_new
Range.none	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Any%29_method_none
Range.not	A			Perl 6 Range							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_method_not
Range.of	A			Perl 6 Range							<section class="prog__container"><pre><code>method of()</code></pre><p>Returns the type constraint for elements of the positional container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Positional%29_method_of
Range.one	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Any%29_method_one
Range.ord	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_ord
Range.ords	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_ords
Range.pairup	A			Perl 6 Range							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Any%29_method_pairup
Range.perl	A			Perl 6 Range							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_routine_perl
Range.pick	A			Perl 6 Range							<section class="prog__container"><pre><code>multi method pick(Range:D:         --&gt; Any:D)multi method pick(Range:D: $number --&gt; Seq:D)</code></pre><p>Performs the same function as Range.list.pick, but attempts to optimize by not actually generating the list if it is not necessary.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#method_pick
Range.print	A			Perl 6 Range							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_method_print
Range.push	A			Perl 6 Range							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Any%29_method_push
Range.put	A			Perl 6 Range							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_method_put
Range.race	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Iterable%29_method_race
Range.rand	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_method_rand
Range.return	A			Perl 6 Range							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_method_return
Range.return-rw	A			Perl 6 Range							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_method_return-rw
Range.reverse	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Any%29_routine_reverse
Range.reverse	A			Perl 6 Range							<section class="prog__container"><pre><code>method reverse(Range:D: --&gt; Seq:D)</code></pre><p>Returns a Seq where all elements that the Range represents have been reversed.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#method_reverse
Range.rindex	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_rindex
Range.roll	A			Perl 6 Range							<section class="prog__container"><pre><code>multi method roll(Range:D:         --&gt; Any:D)multi method roll(Range:D: $number --&gt; Seq:D)</code></pre><p>Performs the same function as Range.list.roll, but attempts to optimize by not actually generating the list if it is not necessary.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#method_roll
Range.roots	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_roots
Range.round	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_round
Range.samecase	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_samecase
Range.say	A			Perl 6 Range							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_method_say
Range.sec	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_method_sec
Range.sech	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_sech
Range.sign	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_method_sign
Range.sin	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_sin
Range.sinh	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_sinh
Range.so	A			Perl 6 Range							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_method_so
Range.sort	A			Perl 6 Range							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Any%29_method_sort
Range.split	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_split
Range.sqrt	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_sqrt
Range.subscripts	A			Perl 6 Range							<section class="prog__container"><p>A Range can be used in a subscript to get a range of values.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#Ranges_in_subscripts
Range.substr	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_substr
Range.sum	A			Perl 6 Range							<section class="prog__container"><pre><code>multi method sum(--&gt; Numeric:D)</code></pre><p>Returns the sum of all elements in the Range.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#method_sum
Range.take	A			Perl 6 Range							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_method_take
Range.take	A			Perl 6 Range							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_routine_take
Range.take-rw	A			Perl 6 Range							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Mu%29_routine_take-rw
Range.tan	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_tan
Range.tanh	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_tanh
Range.tc	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_tc
Range.tclc	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_tclc
Range.trim	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_trim
Range.trim-leading	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_trim-leading
Range.trim-trailing	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_trim-trailing
Range.truncate	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_truncate
Range.uc	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_uc
Range.unimatch	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_method_unimatch
Range.uniname	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_method_uniname
Range.uninames	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_method_uninames
Range.uniprop	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_method_uniprop
Range.uniprops	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_method_uniprops
Range.unpolar	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_method_unpolar
Range.wordcase	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_routine_wordcase
Range.words	A			Perl 6 Range							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Range.html#%28Cool%29_method_words
Rat.ACCEPTS	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Any%29_method_ACCEPTS
Rat.ACCEPTS	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_method_ACCEPTS
Rat.ACCEPTS	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi method ACCEPTS(Numeric:D: $other)</code></pre><p>Returns True if $other is numerically the same as the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Numeric%29_method_ACCEPTS
Rat.Bool	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi method Bool(Numeric:D:)</code></pre><p>Returns False if the number is equivalent to zero, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Numeric%29_method_Bool
Rat.Bool	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_routine_Bool
Rat.CREATE	A			Perl 6 Rat							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_method_CREATE
Rat.EVAL	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_EVAL
Rat.EVALFILE	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_EVALFILE
Rat.IO	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_method_IO
Rat.Int	A			Perl 6 Rat							<section class="prog__container"><pre><code>method Int(Numeric:D: --&gt; Int:D)</code></pre><p>If this Numeric is equivalent to a Real, return the equivalent of calling truncate on that Real to get an Int.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Numeric%29_method_Int
Rat.Num	A			Perl 6 Rat							<section class="prog__container"><pre><code>method Num(Numeric:D: --&gt; Num:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real as a Num as accurately as is possible.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Numeric%29_method_Num
Rat.Rat	A			Perl 6 Rat							<section class="prog__container"><pre><code>method Rat(Numeric:D: Real $epsilon = 1.0e-6 --&gt; Rat:D)</code></pre><p>If this Numeric is equivalent to a Real, return a Rat which is within $epsilon of that Real's value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Numeric%29_method_Rat
Rat.Rat	A			Perl 6 Rat							<section class="prog__container"><pre><code>method Rat(Real:D: Real $epsilon = 1e-6)</code></pre><p>Converts the number to a Rat with the precision $epsilon.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Real%29_method_Rat
Rat.Real	A			Perl 6 Rat							<section class="prog__container"><pre><code>method Real(Numeric:D: --&gt; Real:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Numeric%29_method_Real
Rat.Str	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_method_Str
Rat.WHERE	A			Perl 6 Rat							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_method_WHERE
Rat.WHICH	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_method_WHICH
Rat.WHY	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_method_WHY
Rat.abs	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_abs
Rat.abs	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi sub    abs(Numeric:D  --&gt; Real:D)multi method abs(Numeric:D: --&gt; Real:D)</code></pre><p>Returns the absolute value of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Numeric%29_routine_abs
Rat.acos	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_acos
Rat.acosec	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_acosec
Rat.acosech	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_acosech
Rat.acosh	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_acosh
Rat.acotan	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_acotan
Rat.acotanh	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_acotanh
Rat.all	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Any%29_method_all
Rat.any	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Any%29_method_any
Rat.asec	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_asec
Rat.asech	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_asech
Rat.asin	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_asin
Rat.asinh	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_asinh
Rat.atan	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_atan
Rat.atan2	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_atan2
Rat.atanh	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_atanh
Rat.base	A			Perl 6 Rat							<section class="prog__container"><pre><code>method base(Real:D: Int:D $base where 2..36, $digits? --&gt; Str:D)</code></pre><p>Converts the number to a string, using $base as base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Real%29_method_base
Rat.base-repeating	A			Perl 6 Rat							<section class="prog__container"><pre><code>method base-repeating(Rational:D: Int:D() $base)</code></pre><p>Returns a list of two strings that, when concatenated, represent the number in base $base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Rational%29_method_base-repeating
Rat.bless	A			Perl 6 Rat							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_method_bless
Rat.ceiling	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_ceiling
Rat.ceiling	A			Perl 6 Rat							<section class="prog__container"><pre><code>method ceiling(Real:D --&gt; Int:D)</code></pre><p>Returns the smallest integer not less than the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Real%29_method_ceiling
Rat.chars	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_chars
Rat.chomp	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_chomp
Rat.chop	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_chop
Rat.chr	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_chr
Rat.chrs	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_chrs
Rat.cis	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_cis
Rat.clone	A			Perl 6 Rat							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_method_clone
Rat.codes	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_codes
Rat.comb	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_comb
Rat.conj	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_method_conj
Rat.conj	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi method conj(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the complex conjugate of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Numeric%29_method_conj
Rat.contains	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi method contains(Cool:D: Str(Cool) $needle, Cool $start? --&gt; Bool:D)</code></pre><p>Returns True if the invocant contains the $needle at any position within the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_method_contains
Rat.cos	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_cos
Rat.cosec	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_cosec
Rat.cosech	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_cosech
Rat.cosh	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_cosh
Rat.cotan	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_cotan
Rat.cotanh	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_cotanh
Rat.deepmap	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Any%29_method_deepmap
Rat.defined	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_routine_defined
Rat.denominator	A			Perl 6 Rat							<section class="prog__container"><pre><code>method denominator(Rational:D: --&gt; DeT:D)</code></pre><p>Returns the denominator.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Rational%29_method_denominator
Rat.does	A			Perl 6 Rat							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_routine_does
Rat.duckmap	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Any%29_method_duckmap
Rat.eager	A			Perl 6 Rat							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Any%29_method_eager
Rat.elems	A			Perl 6 Rat							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Any%29_method_elems
Rat.emit	A			Perl 6 Rat							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_method_emit
Rat.end	A			Perl 6 Rat							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Any%29_method_end
Rat.exit	A			Perl 6 Rat							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Any%29_sub_exit
Rat.exp	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_method_exp
Rat.exp	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi sub    exp(Numeric:D, Numeric:D $base = e --&gt; Numeric:D)multi method exp(Numeric:D: Numeric:D $base = e --&gt; Numeric:D)</code></pre><p>Returns $base to the power of the number, or e to the power of the number if called without a second argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Numeric%29_routine_exp
Rat.export	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_trait_is_export
Rat.fc	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_fc
Rat.flat	A			Perl 6 Rat							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Any%29_method_flat
Rat.flip	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_flip
Rat.floor	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_floor
Rat.floor	A			Perl 6 Rat							<section class="prog__container"><pre><code>method floor(Real:D --&gt; Int:D)</code></pre><p>Return the largest integer not greater than the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Real%29_method_floor
Rat.fmt	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_method_fmt
Rat.gist	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_routine_gist
Rat.index	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_index
Rat.isNaN	A			Perl 6 Rat							<section class="prog__container"><pre><code>method isNaN(Rational:D: --&gt; Bool:D)</code></pre><p>Tests whether the invocant's Num value is a NaN.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Rational%29_method_isNaN
Rat.isa	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_routine_isa
Rat.item	A			Perl 6 Rat							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_method_item
Rat.lc	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_lc
Rat.lines	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_lines
Rat.list	A			Perl 6 Rat							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Any%29_method_list
Rat.log	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_log
Rat.log	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi sub    log(Numeric:D, Numeric $base = e --&gt; Numeric:D)multi method log(Numeric:D: Numeric $base = e --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base $base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Numeric%29_routine_log
Rat.log10	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_log10
Rat.log10	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi sub    log10(Numeric:D  --&gt; Numeric:D)multi method log10(Numeric:D: --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base 10.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Numeric%29_routine_log10
Rat.map	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Any%29_method_map
Rat.match	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_match
Rat.narrow	A			Perl 6 Rat							<section class="prog__container"><pre><code>method narrow(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the number converted to the narrowest type that can hold it without loss of precision.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Numeric%29_method_narrow
Rat.new	A			Perl 6 Rat							<section class="prog__container"><pre><code>method new(NuT:D: $numerator, DeT:D: $denominator --&gt; Rational:D)</code></pre><p>Creates a new rational object from numerator and denominator.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Rational%29_method_new
Rat.new	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_method_new
Rat.none	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Any%29_method_none
Rat.norm	A			Perl 6 Rat							<section class="prog__container"><pre><code>method norm(Rational:D: --&gt; Rational:D)</code></pre><p>Returns a normalized Rational object, i.e. with positive denominator, and numerator and denominator coprime.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Rational%29_method_norm
Rat.not	A			Perl 6 Rat							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_method_not
Rat.nude	A			Perl 6 Rat							<section class="prog__container"><pre><code>method nude(Rational:D: --&gt; Positional)</code></pre><p>Returns a list of the numerator and denominator.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Rational%29_method_nude
Rat.numerator	A			Perl 6 Rat							<section class="prog__container"><pre><code>method numerator(Rational:D: --&gt; NuT:D)</code></pre><p>Returns the numerator.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Rational%29_method_numerator
Rat.one	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Any%29_method_one
Rat.ord	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_ord
Rat.ords	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_ords
Rat.pairup	A			Perl 6 Rat							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Any%29_method_pairup
Rat.perl	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi method perl(Rat:D: --&gt; Str:D)</code></pre><p>Returns a string representation corresponding to the unambiguous val()-based representation of rational literals.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#method_perl
Rat.perl	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_routine_perl
Rat.pred	A			Perl 6 Rat							<section class="prog__container"><pre><code>method pred(Numeric:D:)</code></pre><p>Returns the number decremented by one (predecessor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Numeric%29_method_pred
Rat.print	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_method_print
Rat.push	A			Perl 6 Rat							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Any%29_method_push
Rat.put	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_method_put
Rat.rand	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_method_rand
Rat.rand	A			Perl 6 Rat							<section class="prog__container"><pre><code>sub term:&lt;rand&gt; (--&gt; Num:D)method rand(Real:D: --&gt; Real:D)</code></pre><p>Returns a pseudo-random number between zero and the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Real%29_routine_rand
Rat.return	A			Perl 6 Rat							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_method_return
Rat.return-rw	A			Perl 6 Rat							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_method_return-rw
Rat.reverse	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Any%29_routine_reverse
Rat.rindex	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_rindex
Rat.roots	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_roots
Rat.roots	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi method roots(Numeric:D: Int:D $n --&gt; Positional)</code></pre><p>Returns a list of the $n complex roots, which evaluate to the original number when raised to the $nth power.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Numeric%29_method_roots
Rat.round	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_round
Rat.round	A			Perl 6 Rat							<section class="prog__container"><pre><code>method round(Real:D: $scale = 1)</code></pre><p>Rounds the number to scale $scale.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Real%29_method_round
Rat.samecase	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_samecase
Rat.say	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_method_say
Rat.sec	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_method_sec
Rat.sech	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_sech
Rat.sign	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_method_sign
Rat.sign	A			Perl 6 Rat							<section class="prog__container"><pre><code>method sign(Real:D:)</code></pre><p>Returns -1 if the number is negative, 0 if it is zero and 1 otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Real%29_method_sign
Rat.sin	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_sin
Rat.sinh	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_sinh
Rat.so	A			Perl 6 Rat							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_method_so
Rat.sort	A			Perl 6 Rat							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Any%29_method_sort
Rat.split	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_split
Rat.sqrt	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_sqrt
Rat.sqrt	A			Perl 6 Rat							<section class="prog__container"><pre><code>multi sub    sqrt(Numeric:D --&gt; Numeric:D)multi method sqrt(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns a square root of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Numeric%29_routine_sqrt
Rat.substr	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_substr
Rat.succ	A			Perl 6 Rat							<section class="prog__container"><pre><code>method succ(Numeric:D:)</code></pre><p>Returns the number incremented by one (successor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Numeric%29_method_succ
Rat.take	A			Perl 6 Rat							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_method_take
Rat.take	A			Perl 6 Rat							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_routine_take
Rat.take-rw	A			Perl 6 Rat							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Mu%29_routine_take-rw
Rat.tan	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_tan
Rat.tanh	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_tanh
Rat.tc	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_tc
Rat.tclc	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_tclc
Rat.trim	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_trim
Rat.trim-leading	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_trim-leading
Rat.trim-trailing	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_trim-trailing
Rat.truncate	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_truncate
Rat.truncate	A			Perl 6 Rat							<section class="prog__container"><pre><code>method truncate(Real:D --&gt; Int:D)</code></pre><p>Rounds the number towards zero.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Real%29_method_truncate
Rat.uc	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_uc
Rat.unimatch	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_method_unimatch
Rat.uniname	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_method_uniname
Rat.uninames	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_method_uninames
Rat.uniprop	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_method_uniprop
Rat.uniprops	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_method_uniprops
Rat.unpolar	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_method_unpolar
Rat.wordcase	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_routine_wordcase
Rat.words	A			Perl 6 Rat							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rat.html#%28Cool%29_method_words
RatStr.ACCEPTS	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi method ACCEPTS(Str:D: $other)</code></pre><p>Returns True if the string is the same as $other.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_ACCEPTS
RatStr.ACCEPTS	R	Rational.ACCEPTS										
RatStr.ACCEPTS	R	Rational.ACCEPTS										
RatStr.Bool	R	Rational.Bool										
RatStr.CREATE	R	Rational.CREATE										
RatStr.EVAL	R	Rational.EVAL										
RatStr.EVALFILE	R	Rational.EVALFILE										
RatStr.IO	R	Rational.IO										
RatStr.NFC	A			Perl 6 RatStr							<section class="prog__container"><pre><code>method NFC(Str:D: --&gt; NFC:D)</code></pre><p>Returns a codepoint string in NFC format (Unicode Normalization Form C / Composed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_NFC
RatStr.NFD	A			Perl 6 RatStr							<section class="prog__container"><pre><code>method NFD(Str:D: --&gt; NFD:D)</code></pre><p>Returns a codepoint string in NFC format (Unicode Normalization Form D / Decomposed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_NFD
RatStr.NFKC	A			Perl 6 RatStr							<section class="prog__container"><pre><code>method NFKC(Str:D: --&gt; NFKC:D)</code></pre><p>Returns a codepoint string in NFKC format (Unicode Normalization Form KC / Compatibility Composed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_NFKC
RatStr.NFKD	A			Perl 6 RatStr							<section class="prog__container"><pre><code>method NFKD(Str:D: --&gt; NFKD:D)</code></pre><p>Returns a codepoint string in NFC format (Unicode Normalization Form KD / Compatibility Decomposed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_NFKD
RatStr.Numeric	A			Perl 6 RatStr							<section class="prog__container"><pre><code>method Numeric</code></pre><p>The numeric coercion is applied when the RatStr is used in a numeric context, such as a numeric comparison or smart match against a numeric value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#method_Numeric
RatStr.Rat	A			Perl 6 RatStr							<section class="prog__container"><pre><code>method Rat</code></pre><p>Returns the Rat value of the RatStr.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#method_Rat
RatStr.Str	A			Perl 6 RatStr							<section class="prog__container"><p>Returns the string value of the RatStr.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#method_Str
RatStr.Str	R	Rational.Str										
RatStr.WHERE	R	Rational.WHERE										
RatStr.WHICH	R	Rational.WHICH										
RatStr.WHY	R	Rational.WHY										
RatStr.abs	R	Rational.abs										
RatStr.acos	R	Rational.acos										
RatStr.acosec	R	Rational.acosec										
RatStr.acosech	R	Rational.acosech										
RatStr.acosh	R	Rational.acosh										
RatStr.acotan	R	Rational.acotan										
RatStr.acotanh	R	Rational.acotanh										
RatStr.all	R	Rational.all										
RatStr.any	R	Rational.any										
RatStr.asec	R	Rational.asec										
RatStr.asech	R	Rational.asech										
RatStr.asin	R	Rational.asin										
RatStr.asinh	R	Rational.asinh										
RatStr.atan	R	Rational.atan										
RatStr.atan2	R	Rational.atan2										
RatStr.atanh	R	Rational.atanh										
RatStr.base-repeating	R	Rational.base-repeating										
RatStr.bless	R	Rational.bless										
RatStr.ceiling	R	Rational.ceiling										
RatStr.chars	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub    chars(Cool  $x --&gt; Int:D)multi sub    chars(Str:D $x --&gt; Int:D)multi sub    chars(str   $x --&gt; int)multi method chars(Str:D:   --&gt; Int:D)</code></pre><p>Returns the number of characters in the string in graphemes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_chars
RatStr.chars	R	Rational.chars										
RatStr.chomp	A			Perl 6 RatStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_chomp
RatStr.chomp	R	Rational.chomp										
RatStr.chop	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub    chop(Str:D --&gt; Str:D)multi method chop(Str:D: $chars = 1 --&gt; Str:D)</code></pre><p>Returns the string with $chars characters removed from the end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_chop
RatStr.chop	R	Rational.chop										
RatStr.chr	R	Rational.chr										
RatStr.chrs	R	Rational.chrs										
RatStr.cis	R	Rational.cis										
RatStr.clone	R	Rational.clone										
RatStr.cmp	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub infix:&lt;cmp&gt;(RatStr:D $a, RatStr:D $b)</code></pre><p>Compare two RatStr objects.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#infix_cmp
RatStr.codes	R	Rational.codes										
RatStr.comb	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub    comb(Str:D   $matcher, Str:D $input, $limit = Inf)multi sub    comb(Regex:D $matcher, Str:D $input, $limit = Inf, Bool :$match)multi sub    comb(Int:D $size, Str:D $input, $limit = Inf)multi method comb(Str:D $input:)multi method comb(Str:D $input: Str:D   $matcher, $limit = Inf)multi method comb(Str:D $input: Regex:D $matcher, $limit = Inf, Bool :$match)multi method comb(Str:D $input: Int:D $size, $limit = Inf)</code></pre><p>Searches for $matcher in $input and returns a list of all matches (as Str by default, or as Match if $match is True), limited to at most $limit matches.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_comb
RatStr.comb	R	Rational.comb										
RatStr.conj	R	Rational.conj										
RatStr.contains	R	Rational.contains										
RatStr.cos	R	Rational.cos										
RatStr.cosec	R	Rational.cosec										
RatStr.cosech	R	Rational.cosech										
RatStr.cosh	R	Rational.cosh										
RatStr.cotan	R	Rational.cotan										
RatStr.cotanh	R	Rational.cotanh										
RatStr.deepmap	R	Rational.deepmap										
RatStr.defined	R	Rational.defined										
RatStr.denominator	R	Rational.denominator										
RatStr.does	R	Rational.does										
RatStr.duckmap	R	Rational.duckmap										
RatStr.eager	R	Rational.eager										
RatStr.elems	R	Rational.elems										
RatStr.emit	R	Rational.emit										
RatStr.encode	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi method encode(Str:D: $encoding, $nf --&gt; Blob)</code></pre><p>Returns a Blob which represents the original string in the given encoding and normal form.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_encode
RatStr.end	R	Rational.end										
RatStr.ends-with	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi method ends-with(Str:D: Str(Cool) $needle --&gt; True:D)</code></pre><p>Returns True if the invocant is identical to or ends with $needle.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_ends-with
RatStr.exit	R	Rational.exit										
RatStr.exp	R	Rational.exp										
RatStr.export	R	Rational.export										
RatStr.fc	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub    fc(Str:D  --&gt; Str:D)multi method fc(Str:D: --&gt; Str:D)</code></pre><p>Does a Unicode "fold case" operation suitable for doing caseless string comparisons.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_fc
RatStr.fc	R	Rational.fc										
RatStr.flat	R	Rational.flat										
RatStr.flip	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub    flip(Str:D  --&gt; Str:D)multi method flip(Str:D: --&gt; Str:D)</code></pre><p>Returns the string reversed character by character.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_flip
RatStr.flip	R	Rational.flip										
RatStr.floor	R	Rational.floor										
RatStr.fmt	R	Rational.fmt										
RatStr.gist	R	Rational.gist										
RatStr.indent	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi method indent(Int $steps where { $_ == 0 } )multi method indent(Int $steps where { $_ &gt; 0  } )multi method indent($steps where { .isa(Whatever) || .isa(Int) &amp;&amp; $_ &lt; 0 } )</code></pre><p>Indents each line of the string by $steps.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_indent
RatStr.index	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub    index(Cool $s, Str:D $needle, Cool $startpos = 0 --&gt; Int)multi method index(Cool $needle, Cool $startpos = 0 --&gt; Int)</code></pre><p>Searches for $needle in the string starting from $startpos.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_index
RatStr.index	R	Rational.index										
RatStr.isNaN	R	Rational.isNaN										
RatStr.isa	R	Rational.isa										
RatStr.item	R	Rational.item										
RatStr.lc	A			Perl 6 RatStr							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_lc
RatStr.lc	R	Rational.lc										
RatStr.lines	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub    lines(Str:D $input, $limit = Inf --&gt; Positional)multi method lines(Str:D $input: $limit = Inf --&gt; Positional)</code></pre><p>Returns a list of lines (without trailing newline characters), i.e. the same as a call to $input.comb( / ^^ &#92;N* /, $limit ) would.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_lines
RatStr.lines	R	Rational.lines										
RatStr.list	R	Rational.list										
RatStr.log	R	Rational.log										
RatStr.log10	R	Rational.log10										
RatStr.map	R	Rational.map										
RatStr.match	A			Perl 6 RatStr							<section class="prog__container"><pre><code>method match($pat, :continue(:$c), :pos(:$p), :global(:$g), :overlap(:$ov), :exhaustive(:$ex), :st(:$nd), :rd(:$th), :$nth, :$x --&gt; Match)</code></pre><p>Performs a match of the string against $pat and returns a Match object if there is a successful match, and (Any) otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_match
RatStr.match	R	Rational.match										
RatStr.new	A			Perl 6 RatStr							<section class="prog__container"><pre><code>method new(Rat $i, Str $s)</code></pre><p>The constructor requires both the Rat and the Str value, when constructing one directly the values can be whatever is required:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#method_new
RatStr.new	R	Rational.new										
RatStr.new	R	Rational.new										
RatStr.none	R	Rational.none										
RatStr.norm	R	Rational.norm										
RatStr.not	R	Rational.not										
RatStr.nude	R	Rational.nude										
RatStr.numerator	R	Rational.numerator										
RatStr.one	R	Rational.one										
RatStr.ord	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub    ord(Str:D  --&gt; Int:D)multi method ord(Str:D: --&gt; Int:D)</code></pre><p>Returns the codepoint number of the base characters of the first grapheme in the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_ord
RatStr.ord	R	Rational.ord										
RatStr.ords	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi method ords(Str:D: --&gt; Positional)</code></pre><p>Returns a list of Unicode codepoint numbers that describe the codepoints making up the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_ords
RatStr.ords	R	Rational.ords										
RatStr.pairup	R	Rational.pairup										
RatStr.parse-base	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub    parse-base(Str:D $num, Int:D $radix --&gt; Numeric)multi method parse-base(Str:D $num: Int:D $radix --&gt; Numeric)</code></pre><p>Performs the reverse of base by converting a string with a base-$radix number to its base-10 Numeric equivalent.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_parse-base
RatStr.perl	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi method perl(Rat:D: --&gt; Str:D)</code></pre><p>Returns a string representation corresponding to the unambiguous val()-based representation of rational literals.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Rat%29_method_perl
RatStr.perl	R	Rational.perl										
RatStr.pred	A			Perl 6 RatStr							<section class="prog__container"><pre><code>method pred(Str:D: --&gt; Str:D)</code></pre><p>Returns the string decremented by one.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_pred
RatStr.print	R	Rational.print										
RatStr.push	R	Rational.push										
RatStr.put	R	Rational.put										
RatStr.rand	R	Rational.rand										
RatStr.return	R	Rational.return										
RatStr.return-rw	R	Rational.return-rw										
RatStr.reverse	R	Rational.reverse										
RatStr.rindex	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub    rindex(Str:D $haystack, Str:D $needle, Int $startpos = $haystack.chars --&gt; Int)multi method rindex(Str:D $haystack: Str:D $needle, Int $startpos = $haystack.chars --&gt; Int)</code></pre><p>Returns the last position of $needle in $haystack not after $startpos.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_rindex
RatStr.rindex	R	Rational.rindex										
RatStr.roots	R	Rational.roots										
RatStr.round	R	Rational.round										
RatStr.samecase	R	Rational.samecase										
RatStr.samemark	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub samemark(Str:D $string, Str:D $pattern --&gt; Str:D)method    samemark(Str:D: Str:D $pattern --&gt; Str:D)</code></pre><p>Returns a copy of $string with the mark/accent information for each character changed such that it matches the mark/accent of the corresponding character in $pattern.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_samemark
RatStr.say	R	Rational.say										
RatStr.sec	R	Rational.sec										
RatStr.sech	R	Rational.sech										
RatStr.sign	R	Rational.sign										
RatStr.sin	R	Rational.sin										
RatStr.sinh	R	Rational.sinh										
RatStr.so	R	Rational.so										
RatStr.sort	R	Rational.sort										
RatStr.split	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub    split(  Str:D $delimiter, Str:D $input, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi sub    split(Regex:D $delimiter, Str:D $input, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi sub    split(List:D $delimiters, Str:D $input, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi method split(Str:D:   Str:D $delimiter, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi method split(Str:D: Regex:D $delimiter, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi method split(Str:D: List:D $delimiters, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)</code></pre><p>Splits a string up into pieces based on delimiters found in the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_split
RatStr.split	R	Rational.split										
RatStr.sprintf	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub sprintf( Str:D $format, *@args --&gt; Str:D)</code></pre><p>This function is mostly identical to the C library sprintf and printf functions.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_sub_sprintf
RatStr.sqrt	R	Rational.sqrt										
RatStr.starts-with	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi method starts-with(Str:D: Str(Cool) $needle --&gt; True:D)</code></pre><p>Returns True if the invocant is identical to or starts with $needle.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_starts-with
RatStr.subst	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi method subst(Str:D: $matcher, $replacement, *%opts)</code></pre><p>Returns the invocant string where $matcher is replaced by $replacement (or the original string, if no match was found).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_subst
RatStr.subst-mutate	A			Perl 6 RatStr							<section class="prog__container"><p>Where subst returns the modified string and leaves the original unchanged, it is possible to mutate the original string by using subst-mutate.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_subst-mutate
RatStr.substr	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub    substr(Str:D $s, Int:D $from, Int:D $chars = $s.chars - $from --&gt; Str:D)multi sub    substr(Str:D $s, Range $from-to --&gt; Str:D)multi method substr(Str:D $s: Int:D $from, Int:D $chars = $s.chars - $from --&gt; Str:D)multi method substr(Str:D $s: Range $from-to --&gt; Str:D)</code></pre><p>Returns a part of the string, starting from the character with index $from (where the first character has index 0) and with length $chars.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_substr
RatStr.substr	R	Rational.substr										
RatStr.substr-eq	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi method substr-eq(Str:D:  Str(Cool) $test-string, Int(Cool) $from --&gt; Bool)multi method substr-eq(Cool:D: Str(Cool) $test-string, Int(Cool) $from --&gt; Bool)</code></pre><p>Returns True if the $test-string exactly matches the String object, starting from the given initial index $from.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_substr-eq
RatStr.substr-rw	A			Perl 6 RatStr							<section class="prog__container"><pre><code>method substr-rw($from, $length?)</code></pre><p>A version of substr that returns a Proxy functioning as a writable reference to a part of a string variable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_substr-rw
RatStr.succ	A			Perl 6 RatStr							<section class="prog__container"><pre><code>method succ(Str:D --&gt; Str:D)</code></pre><p>Returns the string incremented by one.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_succ
RatStr.take	R	Rational.take										
RatStr.take	R	Rational.take										
RatStr.take-rw	R	Rational.take-rw										
RatStr.tan	R	Rational.tan										
RatStr.tanh	R	Rational.tanh										
RatStr.tc	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub    tc(Str:D  --&gt; Str:D)multi method tc(Str:D: --&gt; Str:D)</code></pre><p>Does a Unicode "titlecase" operation, that is changes the first character in the string to title case, or to upper case if the character has no title case mapping&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_tc
RatStr.tc	R	Rational.tc										
RatStr.tclc	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub    tclc(Str:D  --&gt; Str:D)multi method tclc(Str:D: --&gt; Str:D)</code></pre><p>Turns the first character to title case, and all other characters to lower case&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_tclc
RatStr.tclc	R	Rational.tclc										
RatStr.trans	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi method trans(Str:D: Pair:D &#92;what, *%n --&gt; Str)multi method trans(Str:D: *@changes, :complement(:$c), :squash(:$s), :delete(:$d) --&gt; Str)</code></pre><p>Replaces one or many characters with one or many characters.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_trans
RatStr.trim	A			Perl 6 RatStr							<section class="prog__container"><pre><code>method trim(Str:D: --&gt; Str)</code></pre><p>Remove leading and trailing whitespace.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_trim
RatStr.trim	R	Rational.trim										
RatStr.trim-leading	A			Perl 6 RatStr							<section class="prog__container"><pre><code>method trim-leading(Str:D: --&gt; Str)</code></pre><p>Remove the whitespace characters from the beginning of a string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_trim-leading
RatStr.trim-leading	R	Rational.trim-leading										
RatStr.trim-trailing	A			Perl 6 RatStr							<section class="prog__container"><pre><code>method trim-trailing(Str:D: --&gt; Str)</code></pre><p>Remove the whitespace characters from the end of a string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_trim-trailing
RatStr.trim-trailing	R	Rational.trim-trailing										
RatStr.truncate	R	Rational.truncate										
RatStr.uc	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub    uc(Str:D  --&gt; Str:D)multi method uc(Str:D: --&gt; Str:D)</code></pre><p>Returns an uppercase version of the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_uc
RatStr.uc	R	Rational.uc										
RatStr.unimatch	R	Rational.unimatch										
RatStr.uniname	R	Rational.uniname										
RatStr.uninames	R	Rational.uninames										
RatStr.uniprop	R	Rational.uniprop										
RatStr.uniprops	R	Rational.uniprops										
RatStr.unival	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi method unival(Str:D --&gt; Numeric)</code></pre><p>Returns the numeric value that the first codepoint in the invocant represents, or NaN if it's not numeric.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_unival
RatStr.univals	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi method univals(Str:D --&gt; List)</code></pre><p>Returns a list of numeric values represented by each codepoint in the invocant string, and NaN for non-numeric characters.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_method_univals
RatStr.unpolar	R	Rational.unpolar										
RatStr.val	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub val(Str:D $MAYBEVAL, :$val-or-fail)</code></pre><p>Given a Str that may be parsable as a numeric value, it will attempt to construct the appropriate allomorph, returning one of IntStr, NumStr, RatStr or ComplexStr or a plain Str if a numeric value cannot be parsed.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_sub_val
RatStr.wordcase	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub    wordcase(Cool $x  --&gt; Str)multi sub    wordcase(Str:D $x --&gt; Str)multi method wordcase(Str:D: :&amp;filter = &amp;tclc, Mu :$where = True --&gt; Str)</code></pre><p>Returns a string in which &amp;filter has been applied to all the words that match $where.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_wordcase
RatStr.wordcase	R	Rational.wordcase										
RatStr.words	A			Perl 6 RatStr							<section class="prog__container"><pre><code>multi sub    words(Str:D $input, $limit = Inf --&gt; Positional)multi method words(Str:D $input: $limit = Inf --&gt; Positional)</code></pre><p>Returns a list of non-whitespace bits, i.e. the same as a call to $input.comb( / &#92;S+ /, $limit ) would.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/RatStr.html#%28Str%29_routine_words
RatStr.words	R	Rational.words										
Rational.ACCEPTS	A			Perl 6 Rational							<section class="prog__container"><pre><code>multi method ACCEPTS(Numeric:D: $other)</code></pre><p>Returns True if $other is numerically the same as the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Numeric%29_method_ACCEPTS
Rational.Bool	A			Perl 6 Rational							<section class="prog__container"><pre><code>multi method Bool(Numeric:D:)</code></pre><p>Returns False if the number is equivalent to zero, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Numeric%29_method_Bool
Rational.Int	A			Perl 6 Rational							<section class="prog__container"><pre><code>method Int(Numeric:D: --&gt; Int:D)</code></pre><p>If this Numeric is equivalent to a Real, return the equivalent of calling truncate on that Real to get an Int.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Numeric%29_method_Int
Rational.Num	A			Perl 6 Rational							<section class="prog__container"><pre><code>method Num(Numeric:D: --&gt; Num:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real as a Num as accurately as is possible.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Numeric%29_method_Num
Rational.Rat	A			Perl 6 Rational							<section class="prog__container"><pre><code>method Rat(Numeric:D: Real $epsilon = 1.0e-6 --&gt; Rat:D)</code></pre><p>If this Numeric is equivalent to a Real, return a Rat which is within $epsilon of that Real's value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Numeric%29_method_Rat
Rational.Rat	A			Perl 6 Rational							<section class="prog__container"><pre><code>method Rat(Real:D: Real $epsilon = 1e-6)</code></pre><p>Converts the number to a Rat with the precision $epsilon.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Real%29_method_Rat
Rational.Real	A			Perl 6 Rational							<section class="prog__container"><pre><code>method Real(Numeric:D: --&gt; Real:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Numeric%29_method_Real
Rational.abs	A			Perl 6 Rational							<section class="prog__container"><pre><code>multi sub    abs(Numeric:D  --&gt; Real:D)multi method abs(Numeric:D: --&gt; Real:D)</code></pre><p>Returns the absolute value of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Numeric%29_routine_abs
Rational.base	A			Perl 6 Rational							<section class="prog__container"><pre><code>method base(Real:D: Int:D $base where 2..36, $digits? --&gt; Str:D)</code></pre><p>Converts the number to a string, using $base as base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Real%29_method_base
Rational.base-repeating	A			Perl 6 Rational							<section class="prog__container"><pre><code>method base-repeating(Rational:D: Int:D() $base)</code></pre><p>Returns a list of two strings that, when concatenated, represent the number in base $base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#method_base-repeating
Rational.ceiling	A			Perl 6 Rational							<section class="prog__container"><pre><code>method ceiling(Real:D --&gt; Int:D)</code></pre><p>Returns the smallest integer not less than the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Real%29_method_ceiling
Rational.conj	A			Perl 6 Rational							<section class="prog__container"><pre><code>multi method conj(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the complex conjugate of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Numeric%29_method_conj
Rational.denominator	A			Perl 6 Rational							<section class="prog__container"><pre><code>method denominator(Rational:D: --&gt; DeT:D)</code></pre><p>Returns the denominator.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#method_denominator
Rational.exp	A			Perl 6 Rational							<section class="prog__container"><pre><code>multi sub    exp(Numeric:D, Numeric:D $base = e --&gt; Numeric:D)multi method exp(Numeric:D: Numeric:D $base = e --&gt; Numeric:D)</code></pre><p>Returns $base to the power of the number, or e to the power of the number if called without a second argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Numeric%29_routine_exp
Rational.floor	A			Perl 6 Rational							<section class="prog__container"><pre><code>method floor(Real:D --&gt; Int:D)</code></pre><p>Return the largest integer not greater than the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Real%29_method_floor
Rational.isNaN	A			Perl 6 Rational							<section class="prog__container"><pre><code>method isNaN(Rational:D: --&gt; Bool:D)</code></pre><p>Tests whether the invocant's Num value is a NaN.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#method_isNaN
Rational.log	A			Perl 6 Rational							<section class="prog__container"><pre><code>multi sub    log(Numeric:D, Numeric $base = e --&gt; Numeric:D)multi method log(Numeric:D: Numeric $base = e --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base $base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Numeric%29_routine_log
Rational.log10	A			Perl 6 Rational							<section class="prog__container"><pre><code>multi sub    log10(Numeric:D  --&gt; Numeric:D)multi method log10(Numeric:D: --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base 10.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Numeric%29_routine_log10
Rational.narrow	A			Perl 6 Rational							<section class="prog__container"><pre><code>method narrow(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the number converted to the narrowest type that can hold it without loss of precision.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Numeric%29_method_narrow
Rational.new	A			Perl 6 Rational							<section class="prog__container"><pre><code>method new(NuT:D: $numerator, DeT:D: $denominator --&gt; Rational:D)</code></pre><p>Creates a new rational object from numerator and denominator.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#method_new
Rational.norm	A			Perl 6 Rational							<section class="prog__container"><pre><code>method norm(Rational:D: --&gt; Rational:D)</code></pre><p>Returns a normalized Rational object, i.e. with positive denominator, and numerator and denominator coprime.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#method_norm
Rational.nude	A			Perl 6 Rational							<section class="prog__container"><pre><code>method nude(Rational:D: --&gt; Positional)</code></pre><p>Returns a list of the numerator and denominator.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#method_nude
Rational.numerator	A			Perl 6 Rational							<section class="prog__container"><pre><code>method numerator(Rational:D: --&gt; NuT:D)</code></pre><p>Returns the numerator.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#method_numerator
Rational.pred	A			Perl 6 Rational							<section class="prog__container"><pre><code>method pred(Numeric:D:)</code></pre><p>Returns the number decremented by one (predecessor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Numeric%29_method_pred
Rational.rand	A			Perl 6 Rational							<section class="prog__container"><pre><code>sub term:&lt;rand&gt; (--&gt; Num:D)method rand(Real:D: --&gt; Real:D)</code></pre><p>Returns a pseudo-random number between zero and the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Real%29_routine_rand
Rational.roots	A			Perl 6 Rational							<section class="prog__container"><pre><code>multi method roots(Numeric:D: Int:D $n --&gt; Positional)</code></pre><p>Returns a list of the $n complex roots, which evaluate to the original number when raised to the $nth power.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Numeric%29_method_roots
Rational.round	A			Perl 6 Rational							<section class="prog__container"><pre><code>method round(Real:D: $scale = 1)</code></pre><p>Rounds the number to scale $scale.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Real%29_method_round
Rational.sign	A			Perl 6 Rational							<section class="prog__container"><pre><code>method sign(Real:D:)</code></pre><p>Returns -1 if the number is negative, 0 if it is zero and 1 otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Real%29_method_sign
Rational.sqrt	A			Perl 6 Rational							<section class="prog__container"><pre><code>multi sub    sqrt(Numeric:D --&gt; Numeric:D)multi method sqrt(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns a square root of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Numeric%29_routine_sqrt
Rational.succ	A			Perl 6 Rational							<section class="prog__container"><pre><code>method succ(Numeric:D:)</code></pre><p>Returns the number incremented by one (successor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Numeric%29_method_succ
Rational.truncate	A			Perl 6 Rational							<section class="prog__container"><pre><code>method truncate(Real:D --&gt; Int:D)</code></pre><p>Rounds the number towards zero.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Rational.html#%28Real%29_method_truncate
Real.ACCEPTS	A			Perl 6 Real							<section class="prog__container"><pre><code>multi method ACCEPTS(Numeric:D: $other)</code></pre><p>Returns True if $other is numerically the same as the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#%28Numeric%29_method_ACCEPTS
Real.Bool	A			Perl 6 Real							<section class="prog__container"><pre><code>multi method Bool(Numeric:D:)</code></pre><p>Returns False if the number is equivalent to zero, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#%28Numeric%29_method_Bool
Real.Int	A			Perl 6 Real							<section class="prog__container"><pre><code>method Int(Numeric:D: --&gt; Int:D)</code></pre><p>If this Numeric is equivalent to a Real, return the equivalent of calling truncate on that Real to get an Int.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#%28Numeric%29_method_Int
Real.Num	A			Perl 6 Real							<section class="prog__container"><pre><code>method Num(Numeric:D: --&gt; Num:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real as a Num as accurately as is possible.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#%28Numeric%29_method_Num
Real.Rat	A			Perl 6 Real							<section class="prog__container"><pre><code>method Rat(Numeric:D: Real $epsilon = 1.0e-6 --&gt; Rat:D)</code></pre><p>If this Numeric is equivalent to a Real, return a Rat which is within $epsilon of that Real's value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#%28Numeric%29_method_Rat
Real.Rat	A			Perl 6 Real							<section class="prog__container"><pre><code>method Rat(Real:D: Real $epsilon = 1e-6)</code></pre><p>Converts the number to a Rat with the precision $epsilon.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#method_Rat
Real.Real	A			Perl 6 Real							<section class="prog__container"><pre><code>method Real(Numeric:D: --&gt; Real:D)</code></pre><p>If this Numeric is equivalent to a Real, return that Real.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#%28Numeric%29_method_Real
Real.abs	A			Perl 6 Real							<section class="prog__container"><pre><code>multi sub    abs(Numeric:D  --&gt; Real:D)multi method abs(Numeric:D: --&gt; Real:D)</code></pre><p>Returns the absolute value of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#%28Numeric%29_routine_abs
Real.base	A			Perl 6 Real							<section class="prog__container"><pre><code>method base(Real:D: Int:D $base where 2..36, $digits? --&gt; Str:D)</code></pre><p>Converts the number to a string, using $base as base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#method_base
Real.ceiling	A			Perl 6 Real							<section class="prog__container"><pre><code>method ceiling(Real:D --&gt; Int:D)</code></pre><p>Returns the smallest integer not less than the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#method_ceiling
Real.conj	A			Perl 6 Real							<section class="prog__container"><pre><code>multi method conj(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the complex conjugate of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#%28Numeric%29_method_conj
Real.exp	A			Perl 6 Real							<section class="prog__container"><pre><code>multi sub    exp(Numeric:D, Numeric:D $base = e --&gt; Numeric:D)multi method exp(Numeric:D: Numeric:D $base = e --&gt; Numeric:D)</code></pre><p>Returns $base to the power of the number, or e to the power of the number if called without a second argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#%28Numeric%29_routine_exp
Real.floor	A			Perl 6 Real							<section class="prog__container"><pre><code>method floor(Real:D --&gt; Int:D)</code></pre><p>Return the largest integer not greater than the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#method_floor
Real.log	A			Perl 6 Real							<section class="prog__container"><pre><code>multi sub    log(Numeric:D, Numeric $base = e --&gt; Numeric:D)multi method log(Numeric:D: Numeric $base = e --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base $base.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#%28Numeric%29_routine_log
Real.log10	A			Perl 6 Real							<section class="prog__container"><pre><code>multi sub    log10(Numeric:D  --&gt; Numeric:D)multi method log10(Numeric:D: --&gt; Numeric:D)</code></pre><p>Calculates the logarithm to base 10.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#%28Numeric%29_routine_log10
Real.narrow	A			Perl 6 Real							<section class="prog__container"><pre><code>method narrow(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns the number converted to the narrowest type that can hold it without loss of precision.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#%28Numeric%29_method_narrow
Real.pred	A			Perl 6 Real							<section class="prog__container"><pre><code>method pred(Numeric:D:)</code></pre><p>Returns the number decremented by one (predecessor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#%28Numeric%29_method_pred
Real.rand	A			Perl 6 Real							<section class="prog__container"><pre><code>sub term:&lt;rand&gt; (--&gt; Num:D)method rand(Real:D: --&gt; Real:D)</code></pre><p>Returns a pseudo-random number between zero and the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#routine_rand
Real.roots	A			Perl 6 Real							<section class="prog__container"><pre><code>multi method roots(Numeric:D: Int:D $n --&gt; Positional)</code></pre><p>Returns a list of the $n complex roots, which evaluate to the original number when raised to the $nth power.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#%28Numeric%29_method_roots
Real.round	A			Perl 6 Real							<section class="prog__container"><pre><code>method round(Real:D: $scale = 1)</code></pre><p>Rounds the number to scale $scale.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#method_round
Real.sign	A			Perl 6 Real							<section class="prog__container"><pre><code>method sign(Real:D:)</code></pre><p>Returns -1 if the number is negative, 0 if it is zero and 1 otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#method_sign
Real.sqrt	A			Perl 6 Real							<section class="prog__container"><pre><code>multi sub    sqrt(Numeric:D --&gt; Numeric:D)multi method sqrt(Numeric:D --&gt; Numeric:D)</code></pre><p>Returns a square root of the number.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#%28Numeric%29_routine_sqrt
Real.succ	A			Perl 6 Real							<section class="prog__container"><pre><code>method succ(Numeric:D:)</code></pre><p>Returns the number incremented by one (successor).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#%28Numeric%29_method_succ
Real.truncate	A			Perl 6 Real							<section class="prog__container"><pre><code>method truncate(Real:D --&gt; Int:D)</code></pre><p>Rounds the number towards zero.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Real.html#method_truncate
Regex.ACCEPTS	A			Perl 6 Regex							<section class="prog__container"><pre><code>multi method ACCEPTS(Code:D: Mu $topic)</code></pre><p>Usually calls the code object and passes $topic as an argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Code%29_method_ACCEPTS
Regex.ACCEPTS	A			Perl 6 Regex							<section class="prog__container"><pre><code>multi method ACCEPTS(Regex:D: Mu --&gt; Match:D)multi method ACCEPTS(Regex:D: @)multi method ACCEPTS(Regex:D: %)</code></pre><p>Matches the regex against the argument passed in.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#method_ACCEPTS
Regex.ACCEPTS	R	Callable.ACCEPTS										
Regex.ACCEPTS	R	Callable.ACCEPTS										
Regex.Bool	A			Perl 6 Regex							<section class="prog__container"><pre><code>multi method Bool(Regex:D: --&gt; Bool:D)</code></pre><p>Matches against the caller's $_ variable, and returns True for a match or False for no match.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#method_Bool
Regex.Bool	R	Callable.Bool										
Regex.CALL-ME	R	Callable.CALL-ME										
Regex.CREATE	R	Callable.CREATE										
Regex.DEPRECATED	A			Perl 6 Regex							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine:D $r, :$DEPRECATED!)</code></pre><p>Marks a routine as deprecated, optionally with a message what to use instead.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Routine%29_trait_is_DEPRECATED
Regex.Str	A			Perl 6 Regex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Code%29_method_Str
Regex.Str	R	Callable.Str										
Regex.WHERE	R	Callable.WHERE										
Regex.WHICH	R	Callable.WHICH										
Regex.WHY	R	Callable.WHY										
Regex.all	R	Callable.all										
Regex.any	R	Callable.any										
Regex.arity	A			Perl 6 Regex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Code%29_method_arity
Regex.assuming	R	Callable.assuming										
Regex.bless	R	Callable.bless										
Regex.cached	A			Perl 6 Regex							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$cached!)</code></pre><p>NOTE: this feature is currently EXPERIMENTAL.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Routine%29_trait_is_cached
Regex.candidates	A			Perl 6 Regex							<section class="prog__container"><pre><code>method candidates(Routine:D: --&gt; Positional:D)</code></pre><p>Returns a list of multi candidates, or a one-element list with itself if it's not a multi&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Routine%29_method_candidates
Regex.cando	A			Perl 6 Regex							<section class="prog__container"><pre><code>method cando(Capture $c)</code></pre><p>Returns a possibly-empty list of candidates that can be called with the given Capture, ordered by narrowest candidate first.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Routine%29_method_cando
Regex.clone	R	Callable.clone										
Regex.count	A			Perl 6 Regex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Code%29_method_count
Regex.deepmap	R	Callable.deepmap										
Regex.defined	R	Callable.defined										
Regex.does	R	Callable.does										
Regex.duckmap	R	Callable.duckmap										
Regex.eager	R	Callable.eager										
Regex.elems	R	Callable.elems										
Regex.emit	R	Callable.emit										
Regex.end	R	Callable.end										
Regex.exit	R	Callable.exit										
Regex.export	A			Perl 6 Regex							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$export!)</code></pre><p>Marks a routine as exported to the rest of the world&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Routine%29_trait_is_export
Regex.export	R	Callable.export										
Regex.file	A			Perl 6 Regex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Code%29_method_file
Regex.flat	R	Callable.flat										
Regex.gist	R	Callable.gist										
Regex.hidden-from-backtrace	A			Perl 6 Regex							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine:D, :$hidden-from-backtrace!)</code></pre><p>Hides a routine from showing up in a default backtrace.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Routine%29_trait_is_hidden-from-backtrace
Regex.isa	R	Callable.isa										
Regex.item	R	Callable.item										
Regex.line	A			Perl 6 Regex							<section class="prog__container"><p>Defined as&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Code%29_method_line
Regex.list	R	Callable.list										
Regex.map	R	Callable.map										
Regex.multi	A			Perl 6 Regex							<section class="prog__container"><pre><code>method multi(Routine:D: --&gt; Bool:D)</code></pre><p>Returns True if the routine is a multi sub or method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Routine%29_method_multi
Regex.name	A			Perl 6 Regex							<section class="prog__container"><pre><code>method name(Routine:D: --&gt; Str:D)</code></pre><p>Returns the name of the sub or method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Routine%29_method_name
Regex.new	R	Callable.new										
Regex.none	R	Callable.none										
Regex.not	R	Callable.not										
Regex.one	R	Callable.one										
Regex.package	A			Perl 6 Regex							<section class="prog__container"><pre><code>method package(Routine:D:)</code></pre><p>Returns the package in which the routine is defined.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Routine%29_method_package
Regex.pairup	R	Callable.pairup										
Regex.perl	R	Callable.perl										
Regex.print	R	Callable.print										
Regex.pure	A			Perl 6 Regex							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$pure!)</code></pre><p>Marks a subroutine as pure, that is, it asserts that for the same input, it will always produce the same output without any additional side effects.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Routine%29_trait_is_pure
Regex.push	R	Callable.push										
Regex.put	R	Callable.put										
Regex.return	R	Callable.return										
Regex.return-rw	R	Callable.return-rw										
Regex.reverse	R	Callable.reverse										
Regex.rw	A			Perl 6 Regex							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$rw!)</code></pre><p>When a routine is modified with this trait, its return value will be writable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Routine%29_trait_is_rw
Regex.say	R	Callable.say										
Regex.signature	A			Perl 6 Regex							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Code%29_method_signature
Regex.so	R	Callable.so										
Regex.sort	R	Callable.sort										
Regex.take	R	Callable.take										
Regex.take	R	Callable.take										
Regex.take-rw	R	Callable.take-rw										
Regex.unwrap	A			Perl 6 Regex							<section class="prog__container"><pre><code>method unwrap(Routine:D: $wraphandler)</code></pre><p>Restores the original routine after it has been wrapped with wrap.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Routine%29_method_unwrap
Regex.wrap	A			Perl 6 Regex							<section class="prog__container"><pre><code>method wrap(Routine:D: &amp;wrapper)</code></pre><p>Wraps (i.e. in-place modifies) the routine.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Routine%29_method_wrap
Regex.yada	A			Perl 6 Regex							<section class="prog__container"><pre><code>method yada(Routine:D: --&gt; Bool:D)</code></pre><p>Returns True if the routine is a stub&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Regex.html#%28Routine%29_method_yada
Routine.ACCEPTS	A			Perl 6 Routine							<section class="prog__container"><pre><code>multi method ACCEPTS(Code:D: Mu $topic)</code></pre><p>Usually calls the code object and passes $topic as an argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#%28Code%29_method_ACCEPTS
Routine.ACCEPTS	R	Callable.ACCEPTS										
Routine.ACCEPTS	R	Callable.ACCEPTS										
Routine.Bool	R	Callable.Bool										
Routine.CALL-ME	R	Callable.CALL-ME										
Routine.CREATE	R	Callable.CREATE										
Routine.DEPRECATED	A			Perl 6 Routine							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine:D $r, :$DEPRECATED!)</code></pre><p>Marks a routine as deprecated, optionally with a message what to use instead.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#trait_is_DEPRECATED
Routine.Str	A			Perl 6 Routine							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#%28Code%29_method_Str
Routine.Str	R	Callable.Str										
Routine.WHERE	R	Callable.WHERE										
Routine.WHICH	R	Callable.WHICH										
Routine.WHY	R	Callable.WHY										
Routine.all	R	Callable.all										
Routine.any	R	Callable.any										
Routine.arity	A			Perl 6 Routine							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#%28Code%29_method_arity
Routine.assuming	R	Callable.assuming										
Routine.bless	R	Callable.bless										
Routine.cached	A			Perl 6 Routine							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$cached!)</code></pre><p>NOTE: this feature is currently EXPERIMENTAL.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#trait_is_cached
Routine.candidates	A			Perl 6 Routine							<section class="prog__container"><pre><code>method candidates(Routine:D: --&gt; Positional:D)</code></pre><p>Returns a list of multi candidates, or a one-element list with itself if it's not a multi&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#method_candidates
Routine.cando	A			Perl 6 Routine							<section class="prog__container"><pre><code>method cando(Capture $c)</code></pre><p>Returns a possibly-empty list of candidates that can be called with the given Capture, ordered by narrowest candidate first.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#method_cando
Routine.clone	R	Callable.clone										
Routine.count	A			Perl 6 Routine							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#%28Code%29_method_count
Routine.deepmap	R	Callable.deepmap										
Routine.defined	R	Callable.defined										
Routine.does	R	Callable.does										
Routine.duckmap	R	Callable.duckmap										
Routine.eager	R	Callable.eager										
Routine.elems	R	Callable.elems										
Routine.emit	R	Callable.emit										
Routine.end	R	Callable.end										
Routine.exit	R	Callable.exit										
Routine.export	A			Perl 6 Routine							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$export!)</code></pre><p>Marks a routine as exported to the rest of the world&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#trait_is_export
Routine.export	R	Callable.export										
Routine.file	A			Perl 6 Routine							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#%28Code%29_method_file
Routine.flat	R	Callable.flat										
Routine.gist	R	Callable.gist										
Routine.hidden-from-backtrace	A			Perl 6 Routine							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine:D, :$hidden-from-backtrace!)</code></pre><p>Hides a routine from showing up in a default backtrace.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#trait_is_hidden-from-backtrace
Routine.isa	R	Callable.isa										
Routine.item	R	Callable.item										
Routine.line	A			Perl 6 Routine							<section class="prog__container"><p>Defined as&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#%28Code%29_method_line
Routine.list	R	Callable.list										
Routine.map	R	Callable.map										
Routine.multi	A			Perl 6 Routine							<section class="prog__container"><pre><code>method multi(Routine:D: --&gt; Bool:D)</code></pre><p>Returns True if the routine is a multi sub or method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#method_multi
Routine.name	A			Perl 6 Routine							<section class="prog__container"><pre><code>method name(Routine:D: --&gt; Str:D)</code></pre><p>Returns the name of the sub or method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#method_name
Routine.new	R	Callable.new										
Routine.none	R	Callable.none										
Routine.not	R	Callable.not										
Routine.one	R	Callable.one										
Routine.package	A			Perl 6 Routine							<section class="prog__container"><pre><code>method package(Routine:D:)</code></pre><p>Returns the package in which the routine is defined.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#method_package
Routine.pairup	R	Callable.pairup										
Routine.perl	R	Callable.perl										
Routine.print	R	Callable.print										
Routine.pure	A			Perl 6 Routine							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$pure!)</code></pre><p>Marks a subroutine as pure, that is, it asserts that for the same input, it will always produce the same output without any additional side effects.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#trait_is_pure
Routine.push	R	Callable.push										
Routine.put	R	Callable.put										
Routine.return	R	Callable.return										
Routine.return-rw	R	Callable.return-rw										
Routine.reverse	R	Callable.reverse										
Routine.rw	A			Perl 6 Routine							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$rw!)</code></pre><p>When a routine is modified with this trait, its return value will be writable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#trait_is_rw
Routine.say	R	Callable.say										
Routine.signature	A			Perl 6 Routine							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#%28Code%29_method_signature
Routine.so	R	Callable.so										
Routine.sort	R	Callable.sort										
Routine.take	R	Callable.take										
Routine.take	R	Callable.take										
Routine.take-rw	R	Callable.take-rw										
Routine.unwrap	A			Perl 6 Routine							<section class="prog__container"><pre><code>method unwrap(Routine:D: $wraphandler)</code></pre><p>Restores the original routine after it has been wrapped with wrap.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#method_unwrap
Routine.wrap	A			Perl 6 Routine							<section class="prog__container"><pre><code>method wrap(Routine:D: &amp;wrapper)</code></pre><p>Wraps (i.e. in-place modifies) the routine.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#method_wrap
Routine.yada	A			Perl 6 Routine							<section class="prog__container"><pre><code>method yada(Routine:D: --&gt; Bool:D)</code></pre><p>Returns True if the routine is a stub&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Routine.html#method_yada
Scalar.ACCEPTS	A			Perl 6 Scalar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Any%29_method_ACCEPTS
Scalar.ACCEPTS	A			Perl 6 Scalar							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_method_ACCEPTS
Scalar.Bool	A			Perl 6 Scalar							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_routine_Bool
Scalar.CREATE	A			Perl 6 Scalar							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_method_CREATE
Scalar.Str	A			Perl 6 Scalar							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_method_Str
Scalar.WHERE	A			Perl 6 Scalar							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_method_WHERE
Scalar.WHICH	A			Perl 6 Scalar							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_method_WHICH
Scalar.WHY	A			Perl 6 Scalar							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_method_WHY
Scalar.all	A			Perl 6 Scalar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Any%29_method_all
Scalar.any	A			Perl 6 Scalar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Any%29_method_any
Scalar.bless	A			Perl 6 Scalar							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_method_bless
Scalar.clone	A			Perl 6 Scalar							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_method_clone
Scalar.deepmap	A			Perl 6 Scalar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Any%29_method_deepmap
Scalar.defined	A			Perl 6 Scalar							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_routine_defined
Scalar.does	A			Perl 6 Scalar							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_routine_does
Scalar.duckmap	A			Perl 6 Scalar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Any%29_method_duckmap
Scalar.eager	A			Perl 6 Scalar							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Any%29_method_eager
Scalar.elems	A			Perl 6 Scalar							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Any%29_method_elems
Scalar.emit	A			Perl 6 Scalar							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_method_emit
Scalar.end	A			Perl 6 Scalar							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Any%29_method_end
Scalar.exit	A			Perl 6 Scalar							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Any%29_sub_exit
Scalar.export	A			Perl 6 Scalar							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_trait_is_export
Scalar.flat	A			Perl 6 Scalar							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Any%29_method_flat
Scalar.gist	A			Perl 6 Scalar							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_routine_gist
Scalar.isa	A			Perl 6 Scalar							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_routine_isa
Scalar.item	A			Perl 6 Scalar							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_method_item
Scalar.list	A			Perl 6 Scalar							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Any%29_method_list
Scalar.map	A			Perl 6 Scalar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Any%29_method_map
Scalar.new	A			Perl 6 Scalar							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_method_new
Scalar.none	A			Perl 6 Scalar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Any%29_method_none
Scalar.not	A			Perl 6 Scalar							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_method_not
Scalar.one	A			Perl 6 Scalar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Any%29_method_one
Scalar.pairup	A			Perl 6 Scalar							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Any%29_method_pairup
Scalar.perl	A			Perl 6 Scalar							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_routine_perl
Scalar.print	A			Perl 6 Scalar							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_method_print
Scalar.push	A			Perl 6 Scalar							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Any%29_method_push
Scalar.put	A			Perl 6 Scalar							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_method_put
Scalar.return	A			Perl 6 Scalar							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_method_return
Scalar.return-rw	A			Perl 6 Scalar							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_method_return-rw
Scalar.reverse	A			Perl 6 Scalar							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Any%29_routine_reverse
Scalar.say	A			Perl 6 Scalar							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_method_say
Scalar.so	A			Perl 6 Scalar							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_method_so
Scalar.sort	A			Perl 6 Scalar							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Any%29_method_sort
Scalar.take	A			Perl 6 Scalar							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_method_take
Scalar.take	A			Perl 6 Scalar							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_routine_take
Scalar.take-rw	A			Perl 6 Scalar							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scalar.html#%28Mu%29_routine_take-rw
Scheduler.cue	A			Perl 6 Scheduler							<section class="prog__container"><pre><code>method cue(:&amp;code, Instant :$at, :$in, :$every, :$times = 1; :&amp;catch)</code></pre><p>Schedules a callable (&amp;code) for execution.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scheduler.html#method_cue
Scheduler.uncaught_handler	A			Perl 6 Scheduler							<section class="prog__container"><pre><code>method uncaught_handler() is rw</code></pre><p>RW-Accessor for the handler that is caught for uncaught exceptions from the code that is being scheduled and run.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Scheduler.html#method_uncaught_handler
Semaphore.ACCEPTS	A			Perl 6 Semaphore							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Any%29_method_ACCEPTS
Semaphore.ACCEPTS	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_method_ACCEPTS
Semaphore.Bool	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_routine_Bool
Semaphore.CREATE	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_method_CREATE
Semaphore.Str	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_method_Str
Semaphore.WHERE	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_method_WHERE
Semaphore.WHICH	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_method_WHICH
Semaphore.WHY	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_method_WHY
Semaphore.acquire	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>method acquire()</code></pre><p>Acquire access.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#method_acquire
Semaphore.all	A			Perl 6 Semaphore							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Any%29_method_all
Semaphore.any	A			Perl 6 Semaphore							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Any%29_method_any
Semaphore.bless	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_method_bless
Semaphore.clone	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_method_clone
Semaphore.deepmap	A			Perl 6 Semaphore							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Any%29_method_deepmap
Semaphore.defined	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_routine_defined
Semaphore.does	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_routine_does
Semaphore.duckmap	A			Perl 6 Semaphore							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Any%29_method_duckmap
Semaphore.eager	A			Perl 6 Semaphore							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Any%29_method_eager
Semaphore.elems	A			Perl 6 Semaphore							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Any%29_method_elems
Semaphore.emit	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_method_emit
Semaphore.end	A			Perl 6 Semaphore							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Any%29_method_end
Semaphore.exit	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Any%29_sub_exit
Semaphore.export	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_trait_is_export
Semaphore.flat	A			Perl 6 Semaphore							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Any%29_method_flat
Semaphore.gist	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_routine_gist
Semaphore.isa	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_routine_isa
Semaphore.item	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_method_item
Semaphore.list	A			Perl 6 Semaphore							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Any%29_method_list
Semaphore.map	A			Perl 6 Semaphore							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Any%29_method_map
Semaphore.new	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>method new( int $permits )</code></pre><p>Initialize the semaphore with the number of permitted accesses.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#method_new
Semaphore.new	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_method_new
Semaphore.none	A			Perl 6 Semaphore							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Any%29_method_none
Semaphore.not	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_method_not
Semaphore.one	A			Perl 6 Semaphore							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Any%29_method_one
Semaphore.pairup	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Any%29_method_pairup
Semaphore.perl	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_routine_perl
Semaphore.print	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_method_print
Semaphore.push	A			Perl 6 Semaphore							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Any%29_method_push
Semaphore.put	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_method_put
Semaphore.release	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>method release()</code></pre><p>Release the semaphore raising the number of permissions.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#method_release
Semaphore.return	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_method_return
Semaphore.return-rw	A			Perl 6 Semaphore							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_method_return-rw
Semaphore.reverse	A			Perl 6 Semaphore							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Any%29_routine_reverse
Semaphore.say	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_method_say
Semaphore.so	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_method_so
Semaphore.sort	A			Perl 6 Semaphore							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Any%29_method_sort
Semaphore.take	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_method_take
Semaphore.take	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_routine_take
Semaphore.take-rw	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#%28Mu%29_routine_take-rw
Semaphore.try_acquire	A			Perl 6 Semaphore							<section class="prog__container"><pre><code>method try_acquire(--&gt; Bool)</code></pre><p>Same as acquire but will not block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Semaphore.html#method_try_acquire
Separators	R	Signature.Separators										
Seq.ACCEPTS	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Any%29_method_ACCEPTS
Seq.ACCEPTS	A			Perl 6 Seq							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_method_ACCEPTS
Seq.Bool	A			Perl 6 Seq							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_routine_Bool
Seq.CREATE	A			Perl 6 Seq							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_method_CREATE
Seq.EVAL	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_EVAL
Seq.EVALFILE	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_EVALFILE
Seq.IO	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_method_IO
Seq.Str	A			Perl 6 Seq							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_method_Str
Seq.WHERE	A			Perl 6 Seq							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_method_WHERE
Seq.WHICH	A			Perl 6 Seq							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_method_WHICH
Seq.WHY	A			Perl 6 Seq							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_method_WHY
Seq.abs	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_abs
Seq.acos	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_acos
Seq.acosec	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_acosec
Seq.acosech	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_acosech
Seq.acosh	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_acosh
Seq.acotan	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_acotan
Seq.acotanh	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_acotanh
Seq.all	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Any%29_method_all
Seq.any	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Any%29_method_any
Seq.asec	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_asec
Seq.asech	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_asech
Seq.asin	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_asin
Seq.asinh	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_asinh
Seq.atan	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_atan
Seq.atan2	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_atan2
Seq.atanh	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_atanh
Seq.bless	A			Perl 6 Seq							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_method_bless
Seq.cache	A			Perl 6 Seq							<section class="prog__container"><pre><code>method cache(PositionalBindFailover:D: --&gt; List:D)</code></pre><p>Returns a List based on the iterator method, and caches it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28PositionalBindFailover%29_method_cache
Seq.ceiling	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_ceiling
Seq.chars	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_chars
Seq.chomp	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_chomp
Seq.chop	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_chop
Seq.chr	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_chr
Seq.chrs	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_chrs
Seq.cis	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_cis
Seq.clone	A			Perl 6 Seq							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_method_clone
Seq.codes	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_codes
Seq.comb	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_comb
Seq.conj	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_method_conj
Seq.contains	A			Perl 6 Seq							<section class="prog__container"><pre><code>multi method contains(Cool:D: Str(Cool) $needle, Cool $start? --&gt; Bool:D)</code></pre><p>Returns True if the invocant contains the $needle at any position within the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_method_contains
Seq.cos	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_cos
Seq.cosec	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_cosec
Seq.cosech	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_cosech
Seq.cosh	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_cosh
Seq.cotan	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_cotan
Seq.cotanh	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_cotanh
Seq.deepmap	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Any%29_method_deepmap
Seq.defined	A			Perl 6 Seq							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_routine_defined
Seq.does	A			Perl 6 Seq							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_routine_does
Seq.duckmap	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Any%29_method_duckmap
Seq.eager	A			Perl 6 Seq							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Any%29_method_eager
Seq.eager	A			Perl 6 Seq							<section class="prog__container"><pre><code>method eager(Seq:D: --&gt; List:D)</code></pre><p>Returns an eagerly evaluated List based on the invocant sequence, and marks it as consumed.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#method_eager
Seq.elems	A			Perl 6 Seq							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Any%29_method_elems
Seq.emit	A			Perl 6 Seq							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_method_emit
Seq.end	A			Perl 6 Seq							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Any%29_method_end
Seq.exit	A			Perl 6 Seq							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Any%29_sub_exit
Seq.exp	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_method_exp
Seq.export	A			Perl 6 Seq							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_trait_is_export
Seq.fc	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_fc
Seq.flat	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Iterable%29_method_flat
Seq.flat	A			Perl 6 Seq							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Any%29_method_flat
Seq.flip	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_flip
Seq.floor	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_floor
Seq.fmt	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_method_fmt
Seq.from-loop	A			Perl 6 Seq							<section class="prog__container"><pre><code>multi method from-loop(&amp;body --&gt; Seq:D)multi method from-loop(&amp;body, &amp;cond, :$repeat --&gt; Seq:D)multi method from-loop(&amp;body, &amp;cond, &amp;afterward --&gt; Seq:D)</code></pre><p>Creates a new Seq based callbacks.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#method_from-loop
Seq.gist	A			Perl 6 Seq							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_routine_gist
Seq.hyper	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Iterable%29_method_hyper
Seq.index	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_index
Seq.is-lazy	A			Perl 6 Seq							<section class="prog__container"><pre><code>method is-lazy(Seq:D: --&gt; Bool:D)</code></pre><p>Returns True if the sequence is lazy and potentially infinite, and False otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#method_is-lazy
Seq.isa	A			Perl 6 Seq							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_routine_isa
Seq.item	A			Perl 6 Seq							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_method_item
Seq.iterator	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Iterable%29_method_iterator
Seq.iterator	A			Perl 6 Seq							<section class="prog__container"><pre><code>method iterator(PositionalBindFailover:D:) { ... }</code></pre><p>This method stub ensure that a class implementing role PositionalBindFailover provides an iterator method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28PositionalBindFailover%29_method_iterator
Seq.iterator	A			Perl 6 Seq							<section class="prog__container"><pre><code>method iterator(Seq:D: --&gt; Iterator:D)</code></pre><p>Returns the underlying iterator, and marks the invocant as consumed.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#method_iterator
Seq.lazy	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Iterable%29_method_lazy
Seq.lc	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_lc
Seq.lines	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_lines
Seq.list	A			Perl 6 Seq							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Any%29_method_list
Seq.list	A			Perl 6 Seq							<section class="prog__container"><pre><code>method list(PositionalBindFailover:D: --&gt; List:D)</code></pre><p>Returns a List based on the iterator method without caching it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28PositionalBindFailover%29_method_list
Seq.log	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_log
Seq.log10	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_log10
Seq.map	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Any%29_method_map
Seq.match	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_match
Seq.new	A			Perl 6 Seq							<section class="prog__container"><pre><code>method new(Iterator:D $iter --&gt; Seq:D)</code></pre><p>Creates a new Seq object from the iterator passed as the single argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#method_new
Seq.new	A			Perl 6 Seq							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_method_new
Seq.none	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Any%29_method_none
Seq.not	A			Perl 6 Seq							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_method_not
Seq.one	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Any%29_method_one
Seq.ord	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_ord
Seq.ords	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_ords
Seq.pairup	A			Perl 6 Seq							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Any%29_method_pairup
Seq.perl	A			Perl 6 Seq							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_routine_perl
Seq.print	A			Perl 6 Seq							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_method_print
Seq.push	A			Perl 6 Seq							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Any%29_method_push
Seq.put	A			Perl 6 Seq							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_method_put
Seq.race	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Iterable%29_method_race
Seq.rand	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_method_rand
Seq.return	A			Perl 6 Seq							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_method_return
Seq.return-rw	A			Perl 6 Seq							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_method_return-rw
Seq.reverse	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Any%29_routine_reverse
Seq.rindex	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_rindex
Seq.roots	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_roots
Seq.round	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_round
Seq.samecase	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_samecase
Seq.say	A			Perl 6 Seq							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_method_say
Seq.sec	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_method_sec
Seq.sech	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_sech
Seq.sign	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_method_sign
Seq.sin	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_sin
Seq.sinh	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_sinh
Seq.so	A			Perl 6 Seq							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_method_so
Seq.sort	A			Perl 6 Seq							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Any%29_method_sort
Seq.split	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_split
Seq.sqrt	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_sqrt
Seq.substr	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_substr
Seq.take	A			Perl 6 Seq							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_method_take
Seq.take	A			Perl 6 Seq							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_routine_take
Seq.take-rw	A			Perl 6 Seq							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Mu%29_routine_take-rw
Seq.tan	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_tan
Seq.tanh	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_tanh
Seq.tc	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_tc
Seq.tclc	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_tclc
Seq.trim	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_trim
Seq.trim-leading	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_trim-leading
Seq.trim-trailing	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_trim-trailing
Seq.truncate	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_truncate
Seq.uc	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_uc
Seq.unimatch	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_method_unimatch
Seq.uniname	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_method_uniname
Seq.uninames	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_method_uninames
Seq.uniprop	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_method_uniprop
Seq.uniprops	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_method_uniprops
Seq.unpolar	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_method_unpolar
Seq.wordcase	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_routine_wordcase
Seq.words	A			Perl 6 Seq							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Seq.html#%28Cool%29_method_words
Set.ACCEPTS	A			Perl 6 Set							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Any%29_method_ACCEPTS
Set.ACCEPTS	A			Perl 6 Set							<section class="prog__container"><pre><code>method ACCEPTS($other)</code></pre><p>Returns True if $other and self contain all the same elements, and no others.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Setty%29_method_ACCEPTS
Set.ACCEPTS	A			Perl 6 Set							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_method_ACCEPTS
Set.Bag	A			Perl 6 Set							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Setty%29_method_Bag
Set.BagHash	A			Perl 6 Set							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Setty%29_method_BagHash
Set.Bool	A			Perl 6 Set							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Setty%29_method_Bool
Set.Bool	A			Perl 6 Set							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_routine_Bool
Set.CREATE	A			Perl 6 Set							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_method_CREATE
Set.Mix	A			Perl 6 Set							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Setty%29_method_Mix
Set.MixHash	A			Perl 6 Set							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Setty%29_method_MixHash
Set.Str	A			Perl 6 Set							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_method_Str
Set.WHERE	A			Perl 6 Set							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_method_WHERE
Set.WHICH	A			Perl 6 Set							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_method_WHICH
Set.WHY	A			Perl 6 Set							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_method_WHY
Set.all	A			Perl 6 Set							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Any%29_method_all
Set.any	A			Perl 6 Set							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Any%29_method_any
Set.bless	A			Perl 6 Set							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_method_bless
Set.clone	A			Perl 6 Set							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_method_clone
Set.deepmap	A			Perl 6 Set							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Any%29_method_deepmap
Set.default	A			Perl 6 Set							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Setty%29_method_default
Set.defined	A			Perl 6 Set							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_routine_defined
Set.does	A			Perl 6 Set							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_routine_does
Set.duckmap	A			Perl 6 Set							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Any%29_method_duckmap
Set.eager	A			Perl 6 Set							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Any%29_method_eager
Set.elems	A			Perl 6 Set							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Any%29_method_elems
Set.elems	A			Perl 6 Set							<section class="prog__container"><pre><code>method elems(--&gt; Int)</code></pre><p>The number of elements of the set.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Setty%29_method_elems
Set.emit	A			Perl 6 Set							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_method_emit
Set.end	A			Perl 6 Set							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Any%29_method_end
Set.exit	A			Perl 6 Set							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Any%29_sub_exit
Set.export	A			Perl 6 Set							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_trait_is_export
Set.flat	A			Perl 6 Set							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Any%29_method_flat
Set.gist	A			Perl 6 Set							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_routine_gist
Set.grab	A			Perl 6 Set							<section class="prog__container"><pre><code>method grab($count = 1)</code></pre><p>Removes and returns $count elements chosen at random (without repetition) from the set.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Setty%29_method_grab
Set.grabpairs	A			Perl 6 Set							<section class="prog__container"><pre><code>method grabpairs($count = 1)</code></pre><p>Removes $count elements chosen at random (without repetition) from the set, and returns a list of Pair objects whose keys are the grabbed elements and whose values are True.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Setty%29_method_grabpairs
Set.isa	A			Perl 6 Set							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_routine_isa
Set.item	A			Perl 6 Set							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_method_item
Set.keys	A			Perl 6 Set							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Setty%29_method_keys
Set.kv	A			Perl 6 Set							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Setty%29_method_kv
Set.list	A			Perl 6 Set							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Any%29_method_list
Set.map	A			Perl 6 Set							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Any%29_method_map
Set.new	A			Perl 6 Set							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_method_new
Set.new-from-pairs	A			Perl 6 Set							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Setty%29_method_new-from-pairs
Set.none	A			Perl 6 Set							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Any%29_method_none
Set.not	A			Perl 6 Set							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_method_not
Set.one	A			Perl 6 Set							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Any%29_method_one
Set.pairup	A			Perl 6 Set							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Any%29_method_pairup
Set.perl	A			Perl 6 Set							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_routine_perl
Set.pick	A			Perl 6 Set							<section class="prog__container"><pre><code>multi method pick($count = 1)</code></pre><p>Returns $count elements chosen at random (without repetition) from the set.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Setty%29_method_pick
Set.print	A			Perl 6 Set							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_method_print
Set.push	A			Perl 6 Set							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Any%29_method_push
Set.put	A			Perl 6 Set							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_method_put
Set.return	A			Perl 6 Set							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_method_return
Set.return-rw	A			Perl 6 Set							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_method_return-rw
Set.reverse	A			Perl 6 Set							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Any%29_routine_reverse
Set.roll	A			Perl 6 Set							<section class="prog__container"><pre><code>multi method roll($count = 1)</code></pre><p>Returns a lazy list of $count elements, each randomly selected from the set.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Setty%29_method_roll
Set.say	A			Perl 6 Set							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_method_say
Set.set	A			Perl 6 Set							<section class="prog__container"><pre><code>sub set(*@args --&gt; Set)</code></pre><p>Creates a Set from the given @args&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#sub_set
Set.so	A			Perl 6 Set							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_method_so
Set.sort	A			Perl 6 Set							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Any%29_method_sort
Set.take	A			Perl 6 Set							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_method_take
Set.take	A			Perl 6 Set							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_routine_take
Set.take-rw	A			Perl 6 Set							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Mu%29_routine_take-rw
Set.total	A			Perl 6 Set							<section class="prog__container"><pre><code>method total(--&gt; Int)</code></pre><p>The total of all the values of the QuantHash object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Setty%29_method_total
Set.values	A			Perl 6 Set							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Set.html#%28Setty%29_method_values
SetHash.ACCEPTS	A			Perl 6 SetHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Any%29_method_ACCEPTS
SetHash.ACCEPTS	A			Perl 6 SetHash							<section class="prog__container"><pre><code>method ACCEPTS($other)</code></pre><p>Returns True if $other and self contain all the same elements, and no others.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Setty%29_method_ACCEPTS
SetHash.ACCEPTS	A			Perl 6 SetHash							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_method_ACCEPTS
SetHash.Bag	A			Perl 6 SetHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Setty%29_method_Bag
SetHash.BagHash	A			Perl 6 SetHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Setty%29_method_BagHash
SetHash.Bool	A			Perl 6 SetHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Setty%29_method_Bool
SetHash.Bool	A			Perl 6 SetHash							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_routine_Bool
SetHash.CREATE	A			Perl 6 SetHash							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_method_CREATE
SetHash.Mix	A			Perl 6 SetHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Setty%29_method_Mix
SetHash.MixHash	A			Perl 6 SetHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Setty%29_method_MixHash
SetHash.Str	A			Perl 6 SetHash							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_method_Str
SetHash.WHERE	A			Perl 6 SetHash							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_method_WHERE
SetHash.WHICH	A			Perl 6 SetHash							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_method_WHICH
SetHash.WHY	A			Perl 6 SetHash							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_method_WHY
SetHash.all	A			Perl 6 SetHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Any%29_method_all
SetHash.any	A			Perl 6 SetHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Any%29_method_any
SetHash.bless	A			Perl 6 SetHash							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_method_bless
SetHash.clone	A			Perl 6 SetHash							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_method_clone
SetHash.deepmap	A			Perl 6 SetHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Any%29_method_deepmap
SetHash.default	A			Perl 6 SetHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Setty%29_method_default
SetHash.defined	A			Perl 6 SetHash							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_routine_defined
SetHash.does	A			Perl 6 SetHash							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_routine_does
SetHash.duckmap	A			Perl 6 SetHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Any%29_method_duckmap
SetHash.eager	A			Perl 6 SetHash							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Any%29_method_eager
SetHash.elems	A			Perl 6 SetHash							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Any%29_method_elems
SetHash.elems	A			Perl 6 SetHash							<section class="prog__container"><pre><code>method elems(--&gt; Int)</code></pre><p>The number of elements of the set.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Setty%29_method_elems
SetHash.emit	A			Perl 6 SetHash							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_method_emit
SetHash.end	A			Perl 6 SetHash							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Any%29_method_end
SetHash.exit	A			Perl 6 SetHash							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Any%29_sub_exit
SetHash.export	A			Perl 6 SetHash							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_trait_is_export
SetHash.flat	A			Perl 6 SetHash							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Any%29_method_flat
SetHash.gist	A			Perl 6 SetHash							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_routine_gist
SetHash.grab	A			Perl 6 SetHash							<section class="prog__container"><pre><code>method grab($count = 1)</code></pre><p>Removes and returns $count elements chosen at random (without repetition) from the set.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Setty%29_method_grab
SetHash.grabpairs	A			Perl 6 SetHash							<section class="prog__container"><pre><code>method grabpairs($count = 1)</code></pre><p>Removes $count elements chosen at random (without repetition) from the set, and returns a list of Pair objects whose keys are the grabbed elements and whose values are True.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Setty%29_method_grabpairs
SetHash.isa	A			Perl 6 SetHash							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_routine_isa
SetHash.item	A			Perl 6 SetHash							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_method_item
SetHash.keys	A			Perl 6 SetHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Setty%29_method_keys
SetHash.kv	A			Perl 6 SetHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Setty%29_method_kv
SetHash.list	A			Perl 6 SetHash							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Any%29_method_list
SetHash.map	A			Perl 6 SetHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Any%29_method_map
SetHash.new	A			Perl 6 SetHash							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_method_new
SetHash.new-from-pairs	A			Perl 6 SetHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Setty%29_method_new-from-pairs
SetHash.none	A			Perl 6 SetHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Any%29_method_none
SetHash.not	A			Perl 6 SetHash							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_method_not
SetHash.one	A			Perl 6 SetHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Any%29_method_one
SetHash.pairup	A			Perl 6 SetHash							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Any%29_method_pairup
SetHash.perl	A			Perl 6 SetHash							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_routine_perl
SetHash.pick	A			Perl 6 SetHash							<section class="prog__container"><pre><code>multi method pick($count = 1)</code></pre><p>Returns $count elements chosen at random (without repetition) from the set.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Setty%29_method_pick
SetHash.print	A			Perl 6 SetHash							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_method_print
SetHash.push	A			Perl 6 SetHash							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Any%29_method_push
SetHash.put	A			Perl 6 SetHash							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_method_put
SetHash.return	A			Perl 6 SetHash							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_method_return
SetHash.return-rw	A			Perl 6 SetHash							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_method_return-rw
SetHash.reverse	A			Perl 6 SetHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Any%29_routine_reverse
SetHash.roll	A			Perl 6 SetHash							<section class="prog__container"><pre><code>multi method roll($count = 1)</code></pre><p>Returns a lazy list of $count elements, each randomly selected from the set.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Setty%29_method_roll
SetHash.say	A			Perl 6 SetHash							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_method_say
SetHash.so	A			Perl 6 SetHash							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_method_so
SetHash.sort	A			Perl 6 SetHash							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Any%29_method_sort
SetHash.take	A			Perl 6 SetHash							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_method_take
SetHash.take	A			Perl 6 SetHash							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_routine_take
SetHash.take-rw	A			Perl 6 SetHash							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Mu%29_routine_take-rw
SetHash.total	A			Perl 6 SetHash							<section class="prog__container"><pre><code>method total(--&gt; Int)</code></pre><p>The total of all the values of the QuantHash object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Setty%29_method_total
SetHash.values	A			Perl 6 SetHash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/SetHash.html#%28Setty%29_method_values
Setty.ACCEPTS	A			Perl 6 Setty							<section class="prog__container"><pre><code>method ACCEPTS($other)</code></pre><p>Returns True if $other and self contain all the same elements, and no others.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Setty.html#method_ACCEPTS
Setty.Bag	A			Perl 6 Setty							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Setty.html#method_Bag
Setty.BagHash	A			Perl 6 Setty							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Setty.html#method_BagHash
Setty.Bool	A			Perl 6 Setty							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Setty.html#method_Bool
Setty.Mix	A			Perl 6 Setty							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Setty.html#method_Mix
Setty.MixHash	A			Perl 6 Setty							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Setty.html#method_MixHash
Setty.default	A			Perl 6 Setty							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Setty.html#method_default
Setty.elems	A			Perl 6 Setty							<section class="prog__container"><pre><code>method elems(--&gt; Int)</code></pre><p>The number of elements of the set.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Setty.html#method_elems
Setty.grab	A			Perl 6 Setty							<section class="prog__container"><pre><code>method grab($count = 1)</code></pre><p>Removes and returns $count elements chosen at random (without repetition) from the set.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Setty.html#method_grab
Setty.grabpairs	A			Perl 6 Setty							<section class="prog__container"><pre><code>method grabpairs($count = 1)</code></pre><p>Removes $count elements chosen at random (without repetition) from the set, and returns a list of Pair objects whose keys are the grabbed elements and whose values are True.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Setty.html#method_grabpairs
Setty.keys	A			Perl 6 Setty							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Setty.html#method_keys
Setty.kv	A			Perl 6 Setty							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Setty.html#method_kv
Setty.new-from-pairs	A			Perl 6 Setty							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Setty.html#method_new-from-pairs
Setty.pick	A			Perl 6 Setty							<section class="prog__container"><pre><code>multi method pick($count = 1)</code></pre><p>Returns $count elements chosen at random (without repetition) from the set.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Setty.html#method_pick
Setty.roll	A			Perl 6 Setty							<section class="prog__container"><pre><code>multi method roll($count = 1)</code></pre><p>Returns a lazy list of $count elements, each randomly selected from the set.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Setty.html#method_roll
Setty.total	A			Perl 6 Setty							<section class="prog__container"><pre><code>method total(--&gt; Int)</code></pre><p>The total of all the values of the QuantHash object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Setty.html#method_total
Setty.values	A			Perl 6 Setty							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Setty.html#method_values
Signature.ACCEPTS	A			Perl 6 Signature							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Any%29_method_ACCEPTS
Signature.ACCEPTS	A			Perl 6 Signature							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_method_ACCEPTS
Signature.ACCEPTS	A			Perl 6 Signature							<section class="prog__container"><pre><code>multi method ACCEPTS(Signature:D: Capture $topic)multi method ACCEPTS(Signature:D: @topic)multi method ACCEPTS(Signature:D: %topic)multi method ACCEPTS(Signature:D: Signature $topic)</code></pre><p>The first three see if the argument could be bound to the capture, i.e., if a function with that Signature would be able to be called with the $topic:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#method_ACCEPTS
Signature.Bool	A			Perl 6 Signature							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_routine_Bool
Signature.CREATE	A			Perl 6 Signature							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_method_CREATE
Signature.Named	A			Perl 6 Signature							<section class="prog__container"><p>A parameter can be positional or named.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#Positional_vs._Named
Signature.Names	A			Perl 6 Signature							<section class="prog__container"><p>To exclude certain parameters from being considered in multiple dispatch, separate them with a double semi-colon.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#Long_Names
Signature.Parameters	A			Perl 6 Signature							<section class="prog__container"><p>Parameters can be followed by a sub-signature in brackets, which will destructure the argument given.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#Destructuring_Parameters
Signature.Parameters	A			Perl 6 Signature							<section class="prog__container"><p>Positional parameters are mandatory by default, and can be made optional with a default value or a trailing question mark:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#Optional_and_Mandatory_Parameters
Signature.Parameters	A			Perl 6 Signature							<section class="prog__container"><p>There are three variations to slurpy array parameters.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#Types_of_Slurpy_Array_Parameters
Signature.Separators	A			Perl 6 Signature							<section class="prog__container"><p>A signature consists of zero or more parameters, separated by commas.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#Parameter_Separators
Signature.Str	A			Perl 6 Signature							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_method_Str
Signature.Sub-signatures	A			Perl 6 Signature							<section class="prog__container"><p>To match against a compound parameter use a sub-signature following the argument name in parentheses.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#Sub-signatures
Signature.WHERE	A			Perl 6 Signature							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_method_WHERE
Signature.WHICH	A			Perl 6 Signature							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_method_WHICH
Signature.WHY	A			Perl 6 Signature							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_method_WHY
Signature.all	A			Perl 6 Signature							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Any%29_method_all
Signature.any	A			Perl 6 Signature							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Any%29_method_any
Signature.arity	A			Perl 6 Signature							<section class="prog__container"><pre><code>method arity(Signature:D: --&gt; Int:D)</code></pre><p>Returns the minimal number of positional arguments required to satisfy the signature.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#method_arity
Signature.bless	A			Perl 6 Signature							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_method_bless
Signature.clone	A			Perl 6 Signature							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_method_clone
Signature.count	A			Perl 6 Signature							<section class="prog__container"><pre><code>method count(Signature:D: --&gt; Real:D)</code></pre><p>Returns the maximal number of positional arguments which can be bound to the signature.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#method_count
Signature.deepmap	A			Perl 6 Signature							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Any%29_method_deepmap
Signature.defined	A			Perl 6 Signature							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_routine_defined
Signature.does	A			Perl 6 Signature							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_routine_does
Signature.duckmap	A			Perl 6 Signature							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Any%29_method_duckmap
Signature.eager	A			Perl 6 Signature							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Any%29_method_eager
Signature.elems	A			Perl 6 Signature							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Any%29_method_elems
Signature.emit	A			Perl 6 Signature							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_method_emit
Signature.end	A			Perl 6 Signature							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Any%29_method_end
Signature.exit	A			Perl 6 Signature							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Any%29_sub_exit
Signature.export	A			Perl 6 Signature							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_trait_is_export
Signature.flat	A			Perl 6 Signature							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Any%29_method_flat
Signature.gist	A			Perl 6 Signature							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_routine_gist
Signature.isa	A			Perl 6 Signature							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_routine_isa
Signature.item	A			Perl 6 Signature							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_method_item
Signature.list	A			Perl 6 Signature							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Any%29_method_list
Signature.map	A			Perl 6 Signature							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Any%29_method_map
Signature.new	A			Perl 6 Signature							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_method_new
Signature.none	A			Perl 6 Signature							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Any%29_method_none
Signature.not	A			Perl 6 Signature							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_method_not
Signature.one	A			Perl 6 Signature							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Any%29_method_one
Signature.pairup	A			Perl 6 Signature							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Any%29_method_pairup
Signature.params	A			Perl 6 Signature							<section class="prog__container"><pre><code>method params(Signature:D: --&gt; Positional)</code></pre><p>Returns the list of Parameter objects that make up the signature.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#method_params
Signature.perl	A			Perl 6 Signature							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_routine_perl
Signature.print	A			Perl 6 Signature							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_method_print
Signature.push	A			Perl 6 Signature							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Any%29_method_push
Signature.put	A			Perl 6 Signature							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_method_put
Signature.return	A			Perl 6 Signature							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_method_return
Signature.return-rw	A			Perl 6 Signature							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_method_return-rw
Signature.returns	A			Perl 6 Signature							<section class="prog__container"><p>Whatever the Signature's return constraint is:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#method_returns
Signature.reverse	A			Perl 6 Signature							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Any%29_routine_reverse
Signature.say	A			Perl 6 Signature							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_method_say
Signature.so	A			Perl 6 Signature							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_method_so
Signature.sort	A			Perl 6 Signature							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Any%29_method_sort
Signature.take	A			Perl 6 Signature							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_method_take
Signature.take	A			Perl 6 Signature							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_routine_take
Signature.take-rw	A			Perl 6 Signature							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Signature.html#%28Mu%29_routine_take-rw
Slices	R	Hash.Slices										
Slip.ACCEPTS	R	Iterable.ACCEPTS										
Slip.ACCEPTS	R	Iterable.ACCEPTS										
Slip.Bool	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_method_Bool
Slip.Bool	R	Iterable.Bool										
Slip.CREATE	R	Iterable.CREATE										
Slip.Capture	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_method_Capture
Slip.EVAL	R	Iterable.EVAL										
Slip.EVALFILE	R	Iterable.EVALFILE										
Slip.IO	R	Iterable.IO										
Slip.Int	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_method_Int
Slip.Numeric	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_method_Numeric
Slip.Str	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_method_Str
Slip.Str	R	Iterable.Str										
Slip.WHERE	R	Iterable.WHERE										
Slip.WHICH	R	Iterable.WHICH										
Slip.WHY	R	Iterable.WHY										
Slip.abs	R	Iterable.abs										
Slip.acos	R	Iterable.acos										
Slip.acosec	R	Iterable.acosec										
Slip.acosech	R	Iterable.acosech										
Slip.acosh	R	Iterable.acosh										
Slip.acotan	R	Iterable.acotan										
Slip.acotanh	R	Iterable.acotanh										
Slip.all	R	Iterable.all										
Slip.antipairs	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_antipairs
Slip.any	R	Iterable.any										
Slip.asec	R	Iterable.asec										
Slip.asech	R	Iterable.asech										
Slip.asin	R	Iterable.asin										
Slip.asinh	R	Iterable.asinh										
Slip.atan	R	Iterable.atan										
Slip.atan2	R	Iterable.atan2										
Slip.atanh	R	Iterable.atanh										
Slip.bless	R	Iterable.bless										
Slip.categorize	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_categorize
Slip.ceiling	R	Iterable.ceiling										
Slip.chars	R	Iterable.chars										
Slip.chomp	R	Iterable.chomp										
Slip.chop	R	Iterable.chop										
Slip.chr	R	Iterable.chr										
Slip.chrs	R	Iterable.chrs										
Slip.cis	R	Iterable.cis										
Slip.classify	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_classify
Slip.clone	R	Iterable.clone										
Slip.codes	R	Iterable.codes										
Slip.comb	R	Iterable.comb										
Slip.combinations	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_combinations
Slip.conj	R	Iterable.conj										
Slip.contains	R	Iterable.contains										
Slip.cos	R	Iterable.cos										
Slip.cosec	R	Iterable.cosec										
Slip.cosech	R	Iterable.cosech										
Slip.cosh	R	Iterable.cosh										
Slip.cotan	R	Iterable.cotan										
Slip.cotanh	R	Iterable.cotanh										
Slip.cross	A			Perl 6 Slip							<section class="prog__container"><pre><code>sub cross(+@e, :&amp;with --&gt; Seq:D)</code></pre><p>Computes the cross-product of two or more lists or iterables.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_cross
Slip.deepmap	R	Iterable.deepmap										
Slip.defined	R	Iterable.defined										
Slip.does	R	Iterable.does										
Slip.duckmap	R	Iterable.duckmap										
Slip.eager	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_eager
Slip.eager	R	Iterable.eager										
Slip.elems	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_elems
Slip.elems	R	Iterable.elems										
Slip.emit	R	Iterable.emit										
Slip.end	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_end
Slip.end	R	Iterable.end										
Slip.exit	R	Iterable.exit										
Slip.exp	R	Iterable.exp										
Slip.export	R	Iterable.export										
Slip.fc	R	Iterable.fc										
Slip.first	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_first
Slip.flat	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_sub_flat
Slip.flat	R	Iterable.flat										
Slip.flat	R	Iterable.flat										
Slip.flatmap	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_method_flatmap
Slip.flip	R	Iterable.flip										
Slip.floor	R	Iterable.floor										
Slip.fmt	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_method_fmt
Slip.fmt	R	Iterable.fmt										
Slip.from	A			Perl 6 Slip							<section class="prog__container"><p>Assumes the list contains Match objects and returns the value of .from called on the first element of the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_method_from
Slip.gist	R	Iterable.gist										
Slip.grep	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_grep
Slip.head	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_method_head
Slip.hyper	R	Iterable.hyper										
Slip.index	R	Iterable.index										
Slip.isa	R	Iterable.isa										
Slip.item	R	Iterable.item										
Slip.iterator	R	Iterable.iterator										
Slip.join	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_join
Slip.keys	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_keys
Slip.kv	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_kv
Slip.lazy	R	Iterable.lazy										
Slip.lc	R	Iterable.lc										
Slip.lines	R	Iterable.lines										
Slip.list	R	Iterable.list										
Slip.log	R	Iterable.log										
Slip.log10	R	Iterable.log10										
Slip.map	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_map
Slip.map	R	Iterable.map										
Slip.match	R	Iterable.match										
Slip.new	R	Iterable.new										
Slip.none	R	Iterable.none										
Slip.not	R	Iterable.not										
Slip.of	R	Positional.of										
Slip.one	R	Iterable.one										
Slip.ord	R	Iterable.ord										
Slip.ords	R	Iterable.ords										
Slip.pairs	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_pairs
Slip.pairup	R	Iterable.pairup										
Slip.perl	R	Iterable.perl										
Slip.permutations	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_permutations
Slip.pick	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_pick
Slip.print	R	Iterable.print										
Slip.produce	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_produce
Slip.push	R	Iterable.push										
Slip.put	R	Iterable.put										
Slip.race	R	Iterable.race										
Slip.rand	R	Iterable.rand										
Slip.reduce	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_reduce
Slip.repeated	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_repeated
Slip.return	R	Iterable.return										
Slip.return-rw	R	Iterable.return-rw										
Slip.reverse	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_reverse
Slip.reverse	R	Iterable.reverse										
Slip.rindex	R	Iterable.rindex										
Slip.roll	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_roll
Slip.roots	R	Iterable.roots										
Slip.rotate	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_rotate
Slip.rotor	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_method_rotor
Slip.round	R	Iterable.round										
Slip.roundrobin	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_sub_roundrobin
Slip.samecase	R	Iterable.samecase										
Slip.say	R	Iterable.say										
Slip.sec	R	Iterable.sec										
Slip.sech	R	Iterable.sech										
Slip.sign	R	Iterable.sign										
Slip.sin	R	Iterable.sin										
Slip.sinh	R	Iterable.sinh										
Slip.slip	A			Perl 6 Slip							<section class="prog__container"><pre><code>sub slip(*@ --&gt; Slip:D)</code></pre><p>Creates a Slip from its arguments.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#sub_slip
Slip.so	R	Iterable.so										
Slip.sort	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_sort
Slip.sort	R	Iterable.sort										
Slip.split	R	Iterable.split										
Slip.sqrt	R	Iterable.sqrt										
Slip.squish	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_squish
Slip.substr	R	Iterable.substr										
Slip.sum	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_sum
Slip.tail	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_method_tail
Slip.take	R	Iterable.take										
Slip.take	R	Iterable.take										
Slip.take-rw	R	Iterable.take-rw										
Slip.tan	R	Iterable.tan										
Slip.tanh	R	Iterable.tanh										
Slip.tc	R	Iterable.tc										
Slip.tclc	R	Iterable.tclc										
Slip.to	A			Perl 6 Slip							<section class="prog__container"><pre><code>"abc123def" ~~ m:g/&#92;d/;say $/.to; # 6 </code></pre><p>Assumes the List contains Match objects, such as the $/ variable being a List, when using :g modifier in regexes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_method_to
Slip.trim	R	Iterable.trim										
Slip.trim-leading	R	Iterable.trim-leading										
Slip.trim-trailing	R	Iterable.trim-trailing										
Slip.truncate	R	Iterable.truncate										
Slip.uc	R	Iterable.uc										
Slip.unimatch	R	Iterable.unimatch										
Slip.uniname	R	Iterable.uniname										
Slip.uninames	R	Iterable.uninames										
Slip.uniprop	R	Iterable.uniprop										
Slip.uniprops	R	Iterable.uniprops										
Slip.unique	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_unique
Slip.unpolar	R	Iterable.unpolar										
Slip.values	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_values
Slip.wordcase	R	Iterable.wordcase										
Slip.words	R	Iterable.words										
Slip.zip	A			Perl 6 Slip							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Slip.html#%28List%29_routine_zip
Stash.ACCEPTS	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Any%29_method_ACCEPTS
Stash.ACCEPTS	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Map%29_method_ACCEPTS
Stash.ACCEPTS	A			Perl 6 Stash							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_method_ACCEPTS
Stash.Bool	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Map%29_method_Bool
Stash.Bool	A			Perl 6 Stash							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_routine_Bool
Stash.CREATE	A			Perl 6 Stash							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_method_CREATE
Stash.Capture	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Map%29_method_Capture
Stash.EVAL	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_EVAL
Stash.EVALFILE	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_EVALFILE
Stash.IO	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_method_IO
Stash.Int	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Map%29_method_Int
Stash.Numeric	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Map%29_method_Numeric
Stash.Str	A			Perl 6 Stash							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_method_Str
Stash.WHERE	A			Perl 6 Stash							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_method_WHERE
Stash.WHICH	A			Perl 6 Stash							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_method_WHICH
Stash.WHY	A			Perl 6 Stash							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_method_WHY
Stash.abs	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_abs
Stash.acos	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_acos
Stash.acosec	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_acosec
Stash.acosech	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_acosech
Stash.acosh	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_acosh
Stash.acotan	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_acotan
Stash.acotanh	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_acotanh
Stash.all	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Any%29_method_all
Stash.antipairs	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Map%29_method_antipairs
Stash.any	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Any%29_method_any
Stash.append	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Hash%29_method_append
Stash.asec	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_asec
Stash.asech	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_asech
Stash.asin	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_asin
Stash.asinh	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_asinh
Stash.atan	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_atan
Stash.atan2	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_atan2
Stash.atanh	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_atanh
Stash.bless	A			Perl 6 Stash							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_method_bless
Stash.categorize-list	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Hash%29_method_categorize-list
Stash.ceiling	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_ceiling
Stash.chars	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_chars
Stash.chomp	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_chomp
Stash.chop	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_chop
Stash.chr	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_chr
Stash.chrs	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_chrs
Stash.cis	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_cis
Stash.classify-list	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Hash%29_method_classify-list
Stash.clone	A			Perl 6 Stash							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_method_clone
Stash.codes	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_codes
Stash.comb	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_comb
Stash.conj	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_method_conj
Stash.contains	A			Perl 6 Stash							<section class="prog__container"><pre><code>multi method contains(Cool:D: Str(Cool) $needle, Cool $start? --&gt; Bool:D)</code></pre><p>Returns True if the invocant contains the $needle at any position within the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_method_contains
Stash.cos	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_cos
Stash.cosec	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_cosec
Stash.cosech	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_cosech
Stash.cosh	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_cosh
Stash.cotan	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_cotan
Stash.cotanh	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_cotanh
Stash.deepmap	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Any%29_method_deepmap
Stash.default	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Hash%29_method_default
Stash.defined	A			Perl 6 Stash							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_routine_defined
Stash.does	A			Perl 6 Stash							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_routine_does
Stash.duckmap	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Any%29_method_duckmap
Stash.eager	A			Perl 6 Stash							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Any%29_method_eager
Stash.elems	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Map%29_method_elems
Stash.elems	A			Perl 6 Stash							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Any%29_method_elems
Stash.emit	A			Perl 6 Stash							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_method_emit
Stash.end	A			Perl 6 Stash							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Any%29_method_end
Stash.exit	A			Perl 6 Stash							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Any%29_sub_exit
Stash.exp	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_method_exp
Stash.export	A			Perl 6 Stash							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_trait_is_export
Stash.fc	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_fc
Stash.flat	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Iterable%29_method_flat
Stash.flat	A			Perl 6 Stash							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Any%29_method_flat
Stash.flip	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_flip
Stash.floor	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_floor
Stash.fmt	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_method_fmt
Stash.gist	A			Perl 6 Stash							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_routine_gist
Stash.hyper	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Iterable%29_method_hyper
Stash.index	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_index
Stash.invert	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Map%29_method_invert
Stash.isa	A			Perl 6 Stash							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_routine_isa
Stash.item	A			Perl 6 Stash							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_method_item
Stash.iterator	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Iterable%29_method_iterator
Stash.keyof	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Hash%29_method_keyof
Stash.keys	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Map%29_method_keys
Stash.kv	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Map%29_method_kv
Stash.lazy	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Iterable%29_method_lazy
Stash.lc	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_lc
Stash.lines	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_lines
Stash.list	A			Perl 6 Stash							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Any%29_method_list
Stash.log	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_log
Stash.log10	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_log10
Stash.map	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Any%29_method_map
Stash.match	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_match
Stash.new	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Map%29_method_new
Stash.new	A			Perl 6 Stash							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_method_new
Stash.none	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Any%29_method_none
Stash.not	A			Perl 6 Stash							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_method_not
Stash.of	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Hash%29_method_of
Stash.one	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Any%29_method_one
Stash.ord	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_ord
Stash.ords	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_ords
Stash.pairs	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Map%29_method_pairs
Stash.pairup	A			Perl 6 Stash							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Any%29_method_pairup
Stash.perl	A			Perl 6 Stash							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_routine_perl
Stash.print	A			Perl 6 Stash							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_method_print
Stash.push	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Hash%29_method_push
Stash.push	A			Perl 6 Stash							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Any%29_method_push
Stash.put	A			Perl 6 Stash							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_method_put
Stash.race	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Iterable%29_method_race
Stash.rand	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_method_rand
Stash.return	A			Perl 6 Stash							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_method_return
Stash.return-rw	A			Perl 6 Stash							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_method_return-rw
Stash.reverse	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Any%29_routine_reverse
Stash.rindex	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_rindex
Stash.roots	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_roots
Stash.round	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_round
Stash.samecase	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_samecase
Stash.say	A			Perl 6 Stash							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_method_say
Stash.sec	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_method_sec
Stash.sech	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_sech
Stash.sign	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_method_sign
Stash.sin	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_sin
Stash.sinh	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_sinh
Stash.so	A			Perl 6 Stash							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_method_so
Stash.sort	A			Perl 6 Stash							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Any%29_method_sort
Stash.split	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_split
Stash.sqrt	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_sqrt
Stash.substr	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_substr
Stash.take	A			Perl 6 Stash							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_method_take
Stash.take	A			Perl 6 Stash							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_routine_take
Stash.take-rw	A			Perl 6 Stash							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Mu%29_routine_take-rw
Stash.tan	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_tan
Stash.tanh	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_tanh
Stash.tc	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_tc
Stash.tclc	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_tclc
Stash.trim	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_trim
Stash.trim-leading	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_trim-leading
Stash.trim-trailing	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_trim-trailing
Stash.truncate	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_truncate
Stash.uc	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_uc
Stash.unimatch	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_method_unimatch
Stash.uniname	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_method_uniname
Stash.uninames	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_method_uninames
Stash.uniprop	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_method_uniprop
Stash.uniprops	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_method_uniprops
Stash.unpolar	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_method_unpolar
Stash.values	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Map%29_method_values
Stash.wordcase	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_routine_wordcase
Stash.words	A			Perl 6 Stash							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Stash.html#%28Cool%29_method_words
Str.ACCEPTS	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Any%29_method_ACCEPTS
Str.ACCEPTS	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_method_ACCEPTS
Str.ACCEPTS	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method ACCEPTS(Str:D: $other)</code></pre><p>Returns True if the string is the same as $other.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_ACCEPTS
Str.Bool	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_routine_Bool
Str.CREATE	A			Perl 6 Str							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_method_CREATE
Str.EVAL	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_EVAL
Str.EVALFILE	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_EVALFILE
Str.IO	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_method_IO
Str.NFC	A			Perl 6 Str							<section class="prog__container"><pre><code>method NFC(Str:D: --&gt; NFC:D)</code></pre><p>Returns a codepoint string in NFC format (Unicode Normalization Form C / Composed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_NFC
Str.NFD	A			Perl 6 Str							<section class="prog__container"><pre><code>method NFD(Str:D: --&gt; NFD:D)</code></pre><p>Returns a codepoint string in NFC format (Unicode Normalization Form D / Decomposed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_NFD
Str.NFKC	A			Perl 6 Str							<section class="prog__container"><pre><code>method NFKC(Str:D: --&gt; NFKC:D)</code></pre><p>Returns a codepoint string in NFKC format (Unicode Normalization Form KC / Compatibility Composed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_NFKC
Str.NFKD	A			Perl 6 Str							<section class="prog__container"><pre><code>method NFKD(Str:D: --&gt; NFKD:D)</code></pre><p>Returns a codepoint string in NFC format (Unicode Normalization Form KD / Compatibility Decomposed).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_NFKD
Str.Str	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_method_Str
Str.WHERE	A			Perl 6 Str							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_method_WHERE
Str.WHICH	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_method_WHICH
Str.WHY	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_method_WHY
Str.abs	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_abs
Str.acos	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_acos
Str.acosec	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_acosec
Str.acosech	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_acosech
Str.acosh	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_acosh
Str.acotan	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_acotan
Str.acotanh	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_acotanh
Str.all	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Any%29_method_all
Str.any	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Any%29_method_any
Str.asec	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_asec
Str.asech	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_asech
Str.asin	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_asin
Str.asinh	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_asinh
Str.atan	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_atan
Str.atan2	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_atan2
Str.atanh	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_atanh
Str.bless	A			Perl 6 Str							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_method_bless
Str.ceiling	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_ceiling
Str.chars	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_chars
Str.chars	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    chars(Cool  $x --&gt; Int:D)multi sub    chars(Str:D $x --&gt; Int:D)multi sub    chars(str   $x --&gt; int)multi method chars(Str:D:   --&gt; Int:D)</code></pre><p>Returns the number of characters in the string in graphemes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_chars
Str.chomp	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_chomp
Str.chomp	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_chomp
Str.chop	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_chop
Str.chop	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    chop(Str:D --&gt; Str:D)multi method chop(Str:D: $chars = 1 --&gt; Str:D)</code></pre><p>Returns the string with $chars characters removed from the end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_chop
Str.chr	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_chr
Str.chrs	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_chrs
Str.cis	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_cis
Str.clone	A			Perl 6 Str							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_method_clone
Str.codes	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_codes
Str.comb	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_comb
Str.comb	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    comb(Str:D   $matcher, Str:D $input, $limit = Inf)multi sub    comb(Regex:D $matcher, Str:D $input, $limit = Inf, Bool :$match)multi sub    comb(Int:D $size, Str:D $input, $limit = Inf)multi method comb(Str:D $input:)multi method comb(Str:D $input: Str:D   $matcher, $limit = Inf)multi method comb(Str:D $input: Regex:D $matcher, $limit = Inf, Bool :$match)multi method comb(Str:D $input: Int:D $size, $limit = Inf)</code></pre><p>Searches for $matcher in $input and returns a list of all matches (as Str by default, or as Match if $match is True), limited to at most $limit matches.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_comb
Str.conj	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_method_conj
Str.contains	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method contains(Cool:D: Str(Cool) $needle, Cool $start? --&gt; Bool:D)</code></pre><p>Returns True if the invocant contains the $needle at any position within the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_method_contains
Str.cos	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_cos
Str.cosec	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_cosec
Str.cosech	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_cosech
Str.cosh	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_cosh
Str.cotan	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_cotan
Str.cotanh	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_cotanh
Str.deepmap	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Any%29_method_deepmap
Str.defined	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_routine_defined
Str.does	A			Perl 6 Str							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_routine_does
Str.duckmap	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Any%29_method_duckmap
Str.eager	A			Perl 6 Str							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Any%29_method_eager
Str.elems	A			Perl 6 Str							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Any%29_method_elems
Str.emit	A			Perl 6 Str							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_method_emit
Str.encode	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method encode(Str:D: $encoding, $nf --&gt; Blob)</code></pre><p>Returns a Blob which represents the original string in the given encoding and normal form.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_encode
Str.end	A			Perl 6 Str							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Any%29_method_end
Str.ends-with	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method ends-with(Str:D: Str(Cool) $needle --&gt; True:D)</code></pre><p>Returns True if the invocant is identical to or ends with $needle.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_ends-with
Str.exit	A			Perl 6 Str							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Any%29_sub_exit
Str.exp	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_method_exp
Str.export	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_trait_is_export
Str.fc	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_fc
Str.fc	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    fc(Str:D  --&gt; Str:D)multi method fc(Str:D: --&gt; Str:D)</code></pre><p>Does a Unicode "fold case" operation suitable for doing caseless string comparisons.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_fc
Str.flat	A			Perl 6 Str							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Any%29_method_flat
Str.flip	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_flip
Str.flip	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    flip(Str:D  --&gt; Str:D)multi method flip(Str:D: --&gt; Str:D)</code></pre><p>Returns the string reversed character by character.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_flip
Str.floor	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_floor
Str.fmt	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_method_fmt
Str.gist	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_routine_gist
Str.indent	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method indent(Int $steps where { $_ == 0 } )multi method indent(Int $steps where { $_ &gt; 0  } )multi method indent($steps where { .isa(Whatever) || .isa(Int) &amp;&amp; $_ &lt; 0 } )</code></pre><p>Indents each line of the string by $steps.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_indent
Str.index	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_index
Str.index	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    index(Cool $s, Str:D $needle, Cool $startpos = 0 --&gt; Int)multi method index(Cool $needle, Cool $startpos = 0 --&gt; Int)</code></pre><p>Searches for $needle in the string starting from $startpos.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_index
Str.isa	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_routine_isa
Str.item	A			Perl 6 Str							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_method_item
Str.lc	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_lc
Str.lc	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_lc
Str.lines	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_lines
Str.lines	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    lines(Str:D $input, $limit = Inf --&gt; Positional)multi method lines(Str:D $input: $limit = Inf --&gt; Positional)</code></pre><p>Returns a list of lines (without trailing newline characters), i.e. the same as a call to $input.comb( / ^^ &#92;N* /, $limit ) would.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_lines
Str.list	A			Perl 6 Str							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Any%29_method_list
Str.log	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_log
Str.log10	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_log10
Str.map	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Any%29_method_map
Str.match	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_match
Str.match	A			Perl 6 Str							<section class="prog__container"><pre><code>method match($pat, :continue(:$c), :pos(:$p), :global(:$g), :overlap(:$ov), :exhaustive(:$ex), :st(:$nd), :rd(:$th), :$nth, :$x --&gt; Match)</code></pre><p>Performs a match of the string against $pat and returns a Match object if there is a successful match, and (Any) otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_match
Str.new	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_method_new
Str.none	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Any%29_method_none
Str.not	A			Perl 6 Str							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_method_not
Str.one	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Any%29_method_one
Str.ord	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_ord
Str.ord	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    ord(Str:D  --&gt; Int:D)multi method ord(Str:D: --&gt; Int:D)</code></pre><p>Returns the codepoint number of the base characters of the first grapheme in the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_ord
Str.ords	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_ords
Str.ords	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method ords(Str:D: --&gt; Positional)</code></pre><p>Returns a list of Unicode codepoint numbers that describe the codepoints making up the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_ords
Str.pairup	A			Perl 6 Str							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Any%29_method_pairup
Str.parse-base	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    parse-base(Str:D $num, Int:D $radix --&gt; Numeric)multi method parse-base(Str:D $num: Int:D $radix --&gt; Numeric)</code></pre><p>Performs the reverse of base by converting a string with a base-$radix number to its base-10 Numeric equivalent.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_parse-base
Str.perl	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_routine_perl
Str.pred	A			Perl 6 Str							<section class="prog__container"><pre><code>method pred(Str:D: --&gt; Str:D)</code></pre><p>Returns the string decremented by one.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_pred
Str.print	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_method_print
Str.push	A			Perl 6 Str							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Any%29_method_push
Str.put	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_method_put
Str.rand	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_method_rand
Str.return	A			Perl 6 Str							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_method_return
Str.return-rw	A			Perl 6 Str							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_method_return-rw
Str.reverse	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Any%29_routine_reverse
Str.rindex	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_rindex
Str.rindex	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    rindex(Str:D $haystack, Str:D $needle, Int $startpos = $haystack.chars --&gt; Int)multi method rindex(Str:D $haystack: Str:D $needle, Int $startpos = $haystack.chars --&gt; Int)</code></pre><p>Returns the last position of $needle in $haystack not after $startpos.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_rindex
Str.roots	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_roots
Str.round	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_round
Str.samecase	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_samecase
Str.samemark	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub samemark(Str:D $string, Str:D $pattern --&gt; Str:D)method    samemark(Str:D: Str:D $pattern --&gt; Str:D)</code></pre><p>Returns a copy of $string with the mark/accent information for each character changed such that it matches the mark/accent of the corresponding character in $pattern.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_samemark
Str.say	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_method_say
Str.sec	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_method_sec
Str.sech	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_sech
Str.sign	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_method_sign
Str.sin	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_sin
Str.sinh	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_sinh
Str.so	A			Perl 6 Str							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_method_so
Str.sort	A			Perl 6 Str							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Any%29_method_sort
Str.split	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_split
Str.split	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    split(  Str:D $delimiter, Str:D $input, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi sub    split(Regex:D $delimiter, Str:D $input, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi sub    split(List:D $delimiters, Str:D $input, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi method split(Str:D:   Str:D $delimiter, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi method split(Str:D: Regex:D $delimiter, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)multi method split(Str:D: List:D $delimiters, $limit = Inf,  :$skip-empty, :$v, :$k, :$kv, :$p --&gt; Positional)</code></pre><p>Splits a string up into pieces based on delimiters found in the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_split
Str.sprintf	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub sprintf( Str:D $format, *@args --&gt; Str:D)</code></pre><p>This function is mostly identical to the C library sprintf and printf functions.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#sub_sprintf
Str.sqrt	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_sqrt
Str.starts-with	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method starts-with(Str:D: Str(Cool) $needle --&gt; True:D)</code></pre><p>Returns True if the invocant is identical to or starts with $needle.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_starts-with
Str.subst	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method subst(Str:D: $matcher, $replacement, *%opts)</code></pre><p>Returns the invocant string where $matcher is replaced by $replacement (or the original string, if no match was found).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_subst
Str.subst-mutate	A			Perl 6 Str							<section class="prog__container"><p>Where subst returns the modified string and leaves the original unchanged, it is possible to mutate the original string by using subst-mutate.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_subst-mutate
Str.substr	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_substr
Str.substr	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    substr(Str:D $s, Int:D $from, Int:D $chars = $s.chars - $from --&gt; Str:D)multi sub    substr(Str:D $s, Range $from-to --&gt; Str:D)multi method substr(Str:D $s: Int:D $from, Int:D $chars = $s.chars - $from --&gt; Str:D)multi method substr(Str:D $s: Range $from-to --&gt; Str:D)</code></pre><p>Returns a part of the string, starting from the character with index $from (where the first character has index 0) and with length $chars.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_substr
Str.substr-eq	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method substr-eq(Str:D:  Str(Cool) $test-string, Int(Cool) $from --&gt; Bool)multi method substr-eq(Cool:D: Str(Cool) $test-string, Int(Cool) $from --&gt; Bool)</code></pre><p>Returns True if the $test-string exactly matches the String object, starting from the given initial index $from.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_substr-eq
Str.substr-rw	A			Perl 6 Str							<section class="prog__container"><pre><code>method substr-rw($from, $length?)</code></pre><p>A version of substr that returns a Proxy functioning as a writable reference to a part of a string variable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_substr-rw
Str.succ	A			Perl 6 Str							<section class="prog__container"><pre><code>method succ(Str:D --&gt; Str:D)</code></pre><p>Returns the string incremented by one.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_succ
Str.take	A			Perl 6 Str							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_method_take
Str.take	A			Perl 6 Str							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_routine_take
Str.take-rw	A			Perl 6 Str							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Mu%29_routine_take-rw
Str.tan	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_tan
Str.tanh	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_tanh
Str.tc	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_tc
Str.tc	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    tc(Str:D  --&gt; Str:D)multi method tc(Str:D: --&gt; Str:D)</code></pre><p>Does a Unicode "titlecase" operation, that is changes the first character in the string to title case, or to upper case if the character has no title case mapping&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_tc
Str.tclc	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_tclc
Str.tclc	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    tclc(Str:D  --&gt; Str:D)multi method tclc(Str:D: --&gt; Str:D)</code></pre><p>Turns the first character to title case, and all other characters to lower case&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_tclc
Str.trans	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method trans(Str:D: Pair:D &#92;what, *%n --&gt; Str)multi method trans(Str:D: *@changes, :complement(:$c), :squash(:$s), :delete(:$d) --&gt; Str)</code></pre><p>Replaces one or many characters with one or many characters.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_trans
Str.trim	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_trim
Str.trim	A			Perl 6 Str							<section class="prog__container"><pre><code>method trim(Str:D: --&gt; Str)</code></pre><p>Remove leading and trailing whitespace.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_trim
Str.trim-leading	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_trim-leading
Str.trim-leading	A			Perl 6 Str							<section class="prog__container"><pre><code>method trim-leading(Str:D: --&gt; Str)</code></pre><p>Remove the whitespace characters from the beginning of a string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_trim-leading
Str.trim-trailing	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_trim-trailing
Str.trim-trailing	A			Perl 6 Str							<section class="prog__container"><pre><code>method trim-trailing(Str:D: --&gt; Str)</code></pre><p>Remove the whitespace characters from the end of a string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_trim-trailing
Str.truncate	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_truncate
Str.uc	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_uc
Str.uc	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    uc(Str:D  --&gt; Str:D)multi method uc(Str:D: --&gt; Str:D)</code></pre><p>Returns an uppercase version of the string.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_uc
Str.unimatch	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_method_unimatch
Str.uniname	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_method_uniname
Str.uninames	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_method_uninames
Str.uniprop	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_method_uniprop
Str.uniprops	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_method_uniprops
Str.unival	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method unival(Str:D --&gt; Numeric)</code></pre><p>Returns the numeric value that the first codepoint in the invocant represents, or NaN if it's not numeric.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_unival
Str.univals	A			Perl 6 Str							<section class="prog__container"><pre><code>multi method univals(Str:D --&gt; List)</code></pre><p>Returns a list of numeric values represented by each codepoint in the invocant string, and NaN for non-numeric characters.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#method_univals
Str.unpolar	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_method_unpolar
Str.val	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub val(Str:D $MAYBEVAL, :$val-or-fail)</code></pre><p>Given a Str that may be parsable as a numeric value, it will attempt to construct the appropriate allomorph, returning one of IntStr, NumStr, RatStr or ComplexStr or a plain Str if a numeric value cannot be parsed.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#sub_val
Str.wordcase	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_routine_wordcase
Str.wordcase	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    wordcase(Cool $x  --&gt; Str)multi sub    wordcase(Str:D $x --&gt; Str)multi method wordcase(Str:D: :&amp;filter = &amp;tclc, Mu :$where = True --&gt; Str)</code></pre><p>Returns a string in which &amp;filter has been applied to all the words that match $where.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_wordcase
Str.words	A			Perl 6 Str							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#%28Cool%29_method_words
Str.words	A			Perl 6 Str							<section class="prog__container"><pre><code>multi sub    words(Str:D $input, $limit = Inf --&gt; Positional)multi method words(Str:D $input: $limit = Inf --&gt; Positional)</code></pre><p>Returns a list of non-whitespace bits, i.e. the same as a call to $input.comb( / &#92;S+ /, $limit ) would.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Str.html#routine_words
Sub-signatures	R	Signature.Sub-signatures										
Sub.ACCEPTS	A			Perl 6 Sub							<section class="prog__container"><pre><code>multi method ACCEPTS(Code:D: Mu $topic)</code></pre><p>Usually calls the code object and passes $topic as an argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Code%29_method_ACCEPTS
Sub.ACCEPTS	R	Callable.ACCEPTS										
Sub.ACCEPTS	R	Callable.ACCEPTS										
Sub.Bool	R	Callable.Bool										
Sub.CALL-ME	R	Callable.CALL-ME										
Sub.CREATE	R	Callable.CREATE										
Sub.DEPRECATED	A			Perl 6 Sub							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine:D $r, :$DEPRECATED!)</code></pre><p>Marks a routine as deprecated, optionally with a message what to use instead.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Routine%29_trait_is_DEPRECATED
Sub.Str	A			Perl 6 Sub							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Code%29_method_Str
Sub.Str	R	Callable.Str										
Sub.WHERE	R	Callable.WHERE										
Sub.WHICH	R	Callable.WHICH										
Sub.WHY	R	Callable.WHY										
Sub.all	R	Callable.all										
Sub.any	R	Callable.any										
Sub.arity	A			Perl 6 Sub							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Code%29_method_arity
Sub.assuming	R	Callable.assuming										
Sub.bless	R	Callable.bless										
Sub.cached	A			Perl 6 Sub							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$cached!)</code></pre><p>NOTE: this feature is currently EXPERIMENTAL.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Routine%29_trait_is_cached
Sub.candidates	A			Perl 6 Sub							<section class="prog__container"><pre><code>method candidates(Routine:D: --&gt; Positional:D)</code></pre><p>Returns a list of multi candidates, or a one-element list with itself if it's not a multi&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Routine%29_method_candidates
Sub.cando	A			Perl 6 Sub							<section class="prog__container"><pre><code>method cando(Capture $c)</code></pre><p>Returns a possibly-empty list of candidates that can be called with the given Capture, ordered by narrowest candidate first.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Routine%29_method_cando
Sub.class)	A			Perl 6 Sub							<section class="prog__container"><p>There is a special trait for Subs called is default.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#trait_is_default_%28Sub_class%29
Sub.clone	R	Callable.clone										
Sub.count	A			Perl 6 Sub							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Code%29_method_count
Sub.deepmap	R	Callable.deepmap										
Sub.defined	R	Callable.defined										
Sub.does	R	Callable.does										
Sub.duckmap	R	Callable.duckmap										
Sub.eager	R	Callable.eager										
Sub.elems	R	Callable.elems										
Sub.emit	R	Callable.emit										
Sub.end	R	Callable.end										
Sub.exit	R	Callable.exit										
Sub.export	A			Perl 6 Sub							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$export!)</code></pre><p>Marks a routine as exported to the rest of the world&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Routine%29_trait_is_export
Sub.export	R	Callable.export										
Sub.file	A			Perl 6 Sub							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Code%29_method_file
Sub.flat	R	Callable.flat										
Sub.gist	R	Callable.gist										
Sub.hidden-from-backtrace	A			Perl 6 Sub							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine:D, :$hidden-from-backtrace!)</code></pre><p>Hides a routine from showing up in a default backtrace.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Routine%29_trait_is_hidden-from-backtrace
Sub.isa	R	Callable.isa										
Sub.item	R	Callable.item										
Sub.line	A			Perl 6 Sub							<section class="prog__container"><p>Defined as&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Code%29_method_line
Sub.list	R	Callable.list										
Sub.map	R	Callable.map										
Sub.multi	A			Perl 6 Sub							<section class="prog__container"><pre><code>method multi(Routine:D: --&gt; Bool:D)</code></pre><p>Returns True if the routine is a multi sub or method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Routine%29_method_multi
Sub.name	A			Perl 6 Sub							<section class="prog__container"><pre><code>method name(Routine:D: --&gt; Str:D)</code></pre><p>Returns the name of the sub or method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Routine%29_method_name
Sub.new	R	Callable.new										
Sub.none	R	Callable.none										
Sub.not	R	Callable.not										
Sub.one	R	Callable.one										
Sub.package	A			Perl 6 Sub							<section class="prog__container"><pre><code>method package(Routine:D:)</code></pre><p>Returns the package in which the routine is defined.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Routine%29_method_package
Sub.pairup	R	Callable.pairup										
Sub.perl	R	Callable.perl										
Sub.print	R	Callable.print										
Sub.pure	A			Perl 6 Sub							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$pure!)</code></pre><p>Marks a subroutine as pure, that is, it asserts that for the same input, it will always produce the same output without any additional side effects.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Routine%29_trait_is_pure
Sub.push	R	Callable.push										
Sub.put	R	Callable.put										
Sub.return	R	Callable.return										
Sub.return-rw	R	Callable.return-rw										
Sub.reverse	R	Callable.reverse										
Sub.rw	A			Perl 6 Sub							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$rw!)</code></pre><p>When a routine is modified with this trait, its return value will be writable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Routine%29_trait_is_rw
Sub.say	R	Callable.say										
Sub.signature	A			Perl 6 Sub							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Code%29_method_signature
Sub.so	R	Callable.so										
Sub.sort	R	Callable.sort										
Sub.take	R	Callable.take										
Sub.take	R	Callable.take										
Sub.take-rw	R	Callable.take-rw										
Sub.unwrap	A			Perl 6 Sub							<section class="prog__container"><pre><code>method unwrap(Routine:D: $wraphandler)</code></pre><p>Restores the original routine after it has been wrapped with wrap.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Routine%29_method_unwrap
Sub.wrap	A			Perl 6 Sub							<section class="prog__container"><pre><code>method wrap(Routine:D: &amp;wrapper)</code></pre><p>Wraps (i.e. in-place modifies) the routine.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Routine%29_method_wrap
Sub.yada	A			Perl 6 Sub							<section class="prog__container"><pre><code>method yada(Routine:D: --&gt; Bool:D)</code></pre><p>Returns True if the routine is a stub&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Sub.html#%28Routine%29_method_yada
Submethod.ACCEPTS	A			Perl 6 Submethod							<section class="prog__container"><pre><code>multi method ACCEPTS(Code:D: Mu $topic)</code></pre><p>Usually calls the code object and passes $topic as an argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Code%29_method_ACCEPTS
Submethod.ACCEPTS	R	Callable.ACCEPTS										
Submethod.ACCEPTS	R	Callable.ACCEPTS										
Submethod.Bool	R	Callable.Bool										
Submethod.CALL-ME	R	Callable.CALL-ME										
Submethod.CREATE	R	Callable.CREATE										
Submethod.DEPRECATED	A			Perl 6 Submethod							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine:D $r, :$DEPRECATED!)</code></pre><p>Marks a routine as deprecated, optionally with a message what to use instead.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Routine%29_trait_is_DEPRECATED
Submethod.Str	A			Perl 6 Submethod							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Code%29_method_Str
Submethod.Str	R	Callable.Str										
Submethod.WHERE	R	Callable.WHERE										
Submethod.WHICH	R	Callable.WHICH										
Submethod.WHY	R	Callable.WHY										
Submethod.all	R	Callable.all										
Submethod.any	R	Callable.any										
Submethod.arity	A			Perl 6 Submethod							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Code%29_method_arity
Submethod.assuming	R	Callable.assuming										
Submethod.bless	R	Callable.bless										
Submethod.cached	A			Perl 6 Submethod							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$cached!)</code></pre><p>NOTE: this feature is currently EXPERIMENTAL.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Routine%29_trait_is_cached
Submethod.candidates	A			Perl 6 Submethod							<section class="prog__container"><pre><code>method candidates(Routine:D: --&gt; Positional:D)</code></pre><p>Returns a list of multi candidates, or a one-element list with itself if it's not a multi&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Routine%29_method_candidates
Submethod.cando	A			Perl 6 Submethod							<section class="prog__container"><pre><code>method cando(Capture $c)</code></pre><p>Returns a possibly-empty list of candidates that can be called with the given Capture, ordered by narrowest candidate first.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Routine%29_method_cando
Submethod.clone	R	Callable.clone										
Submethod.count	A			Perl 6 Submethod							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Code%29_method_count
Submethod.deepmap	R	Callable.deepmap										
Submethod.defined	R	Callable.defined										
Submethod.does	R	Callable.does										
Submethod.duckmap	R	Callable.duckmap										
Submethod.eager	R	Callable.eager										
Submethod.elems	R	Callable.elems										
Submethod.emit	R	Callable.emit										
Submethod.end	R	Callable.end										
Submethod.exit	R	Callable.exit										
Submethod.export	A			Perl 6 Submethod							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$export!)</code></pre><p>Marks a routine as exported to the rest of the world&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Routine%29_trait_is_export
Submethod.export	R	Callable.export										
Submethod.file	A			Perl 6 Submethod							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Code%29_method_file
Submethod.flat	R	Callable.flat										
Submethod.gist	R	Callable.gist										
Submethod.hidden-from-backtrace	A			Perl 6 Submethod							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine:D, :$hidden-from-backtrace!)</code></pre><p>Hides a routine from showing up in a default backtrace.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Routine%29_trait_is_hidden-from-backtrace
Submethod.isa	R	Callable.isa										
Submethod.item	R	Callable.item										
Submethod.line	A			Perl 6 Submethod							<section class="prog__container"><p>Defined as&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Code%29_method_line
Submethod.list	R	Callable.list										
Submethod.map	R	Callable.map										
Submethod.multi	A			Perl 6 Submethod							<section class="prog__container"><pre><code>method multi(Routine:D: --&gt; Bool:D)</code></pre><p>Returns True if the routine is a multi sub or method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Routine%29_method_multi
Submethod.name	A			Perl 6 Submethod							<section class="prog__container"><pre><code>method name(Routine:D: --&gt; Str:D)</code></pre><p>Returns the name of the sub or method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Routine%29_method_name
Submethod.new	R	Callable.new										
Submethod.none	R	Callable.none										
Submethod.not	R	Callable.not										
Submethod.one	R	Callable.one										
Submethod.package	A			Perl 6 Submethod							<section class="prog__container"><pre><code>method package(Routine:D:)</code></pre><p>Returns the package in which the routine is defined.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Routine%29_method_package
Submethod.pairup	R	Callable.pairup										
Submethod.perl	R	Callable.perl										
Submethod.print	R	Callable.print										
Submethod.pure	A			Perl 6 Submethod							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$pure!)</code></pre><p>Marks a subroutine as pure, that is, it asserts that for the same input, it will always produce the same output without any additional side effects.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Routine%29_trait_is_pure
Submethod.push	R	Callable.push										
Submethod.put	R	Callable.put										
Submethod.return	R	Callable.return										
Submethod.return-rw	R	Callable.return-rw										
Submethod.reverse	R	Callable.reverse										
Submethod.rw	A			Perl 6 Submethod							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Routine $r, :$rw!)</code></pre><p>When a routine is modified with this trait, its return value will be writable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Routine%29_trait_is_rw
Submethod.say	R	Callable.say										
Submethod.signature	A			Perl 6 Submethod							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Code%29_method_signature
Submethod.so	R	Callable.so										
Submethod.sort	R	Callable.sort										
Submethod.take	R	Callable.take										
Submethod.take	R	Callable.take										
Submethod.take-rw	R	Callable.take-rw										
Submethod.unwrap	A			Perl 6 Submethod							<section class="prog__container"><pre><code>method unwrap(Routine:D: $wraphandler)</code></pre><p>Restores the original routine after it has been wrapped with wrap.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Routine%29_method_unwrap
Submethod.wrap	A			Perl 6 Submethod							<section class="prog__container"><pre><code>method wrap(Routine:D: &amp;wrapper)</code></pre><p>Wraps (i.e. in-place modifies) the routine.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Routine%29_method_wrap
Submethod.yada	A			Perl 6 Submethod							<section class="prog__container"><pre><code>method yada(Routine:D: --&gt; Bool:D)</code></pre><p>Returns True if the routine is a stub&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Submethod.html#%28Routine%29_method_yada
Supplier.ACCEPTS	A			Perl 6 Supplier							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Any%29_method_ACCEPTS
Supplier.ACCEPTS	A			Perl 6 Supplier							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_method_ACCEPTS
Supplier.Bool	A			Perl 6 Supplier							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_routine_Bool
Supplier.CREATE	A			Perl 6 Supplier							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_method_CREATE
Supplier.Str	A			Perl 6 Supplier							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_method_Str
Supplier.Supply	A			Perl 6 Supplier							<section class="prog__container"><pre><code>method Supply(Supplier:D: --&gt; Supply)</code></pre><p>This creates a new Supply object to which any values which are emitted on this supplier are passed.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#method_Supply
Supplier.WHERE	A			Perl 6 Supplier							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_method_WHERE
Supplier.WHICH	A			Perl 6 Supplier							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_method_WHICH
Supplier.WHY	A			Perl 6 Supplier							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_method_WHY
Supplier.all	A			Perl 6 Supplier							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Any%29_method_all
Supplier.any	A			Perl 6 Supplier							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Any%29_method_any
Supplier.bless	A			Perl 6 Supplier							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_method_bless
Supplier.clone	A			Perl 6 Supplier							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_method_clone
Supplier.deepmap	A			Perl 6 Supplier							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Any%29_method_deepmap
Supplier.defined	A			Perl 6 Supplier							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_routine_defined
Supplier.does	A			Perl 6 Supplier							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_routine_does
Supplier.done	A			Perl 6 Supplier							<section class="prog__container"><pre><code>method done(Supplier:D:)</code></pre><p>Calls the done callback on all the taps that have one.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#method_done
Supplier.duckmap	A			Perl 6 Supplier							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Any%29_method_duckmap
Supplier.eager	A			Perl 6 Supplier							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Any%29_method_eager
Supplier.elems	A			Perl 6 Supplier							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Any%29_method_elems
Supplier.emit	A			Perl 6 Supplier							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_method_emit
Supplier.emit	A			Perl 6 Supplier							<section class="prog__container"><pre><code>method emit(Supplier:D: Mu &#92;value)</code></pre><p>Sends the given value to all of the taps on all of the supplies created by Supply on this Supplier.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#method_emit
Supplier.end	A			Perl 6 Supplier							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Any%29_method_end
Supplier.exit	A			Perl 6 Supplier							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Any%29_sub_exit
Supplier.export	A			Perl 6 Supplier							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_trait_is_export
Supplier.flat	A			Perl 6 Supplier							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Any%29_method_flat
Supplier.gist	A			Perl 6 Supplier							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_routine_gist
Supplier.isa	A			Perl 6 Supplier							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_routine_isa
Supplier.item	A			Perl 6 Supplier							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_method_item
Supplier.list	A			Perl 6 Supplier							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Any%29_method_list
Supplier.map	A			Perl 6 Supplier							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Any%29_method_map
Supplier.new	A			Perl 6 Supplier							<section class="prog__container"><pre><code>method new()</code></pre><p>The Supplier constructor.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#method_new
Supplier.new	A			Perl 6 Supplier							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_method_new
Supplier.none	A			Perl 6 Supplier							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Any%29_method_none
Supplier.not	A			Perl 6 Supplier							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_method_not
Supplier.one	A			Perl 6 Supplier							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Any%29_method_one
Supplier.pairup	A			Perl 6 Supplier							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Any%29_method_pairup
Supplier.perl	A			Perl 6 Supplier							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_routine_perl
Supplier.print	A			Perl 6 Supplier							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_method_print
Supplier.push	A			Perl 6 Supplier							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Any%29_method_push
Supplier.put	A			Perl 6 Supplier							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_method_put
Supplier.quit	A			Perl 6 Supplier							<section class="prog__container"><pre><code>multi method quit(Supplier:D: Exception $ex)multi method quit(Supplier:D: Str() $message)</code></pre><p>Calls the quit callback on all the taps that have one, passing the exception to them.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#method_quit
Supplier.return	A			Perl 6 Supplier							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_method_return
Supplier.return-rw	A			Perl 6 Supplier							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_method_return-rw
Supplier.reverse	A			Perl 6 Supplier							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Any%29_routine_reverse
Supplier.say	A			Perl 6 Supplier							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_method_say
Supplier.so	A			Perl 6 Supplier							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_method_so
Supplier.sort	A			Perl 6 Supplier							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Any%29_method_sort
Supplier.take	A			Perl 6 Supplier							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_method_take
Supplier.take	A			Perl 6 Supplier							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_routine_take
Supplier.take-rw	A			Perl 6 Supplier							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supplier.html#%28Mu%29_routine_take-rw
Supply	A			Perl 6 Supply							<section class="prog__container"><p>Methods that return another Supply&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html
Supply.ACCEPTS	R	supplies.ACCEPTS										
Supply.ACCEPTS	R	supplies.ACCEPTS										
Supply.Bool	R	supplies.Bool										
Supply.CREATE	R	supplies.CREATE										
Supply.Channel	R	Taps.Channel										
Supply.IO::Notification.watch-path	R	supplies.IO::Notification.watch-path										
Supply.Promise	R	Taps.Promise										
Supply.Str	R	supplies.Str										
Supply.WHERE	R	supplies.WHERE										
Supply.WHICH	R	supplies.WHICH										
Supply.WHY	R	supplies.WHY										
Supply.act	R	Taps.act										
Supply.all	R	supplies.all										
Supply.any	R	supplies.any										
Supply.batch	A			Perl 6 Supply							<section class="prog__container"><pre><code>method batch(Supply:D: :$elems, :$seconds --&gt; Supply:D)</code></pre><p>Creates a new supply that batches the values of the given supply by either the number of elements in the batch (using :elems) or the maximum number of seconds (using the :seconds) or both.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_batch
Supply.bless	R	supplies.bless										
Supply.clone	R	supplies.clone										
Supply.deepmap	R	supplies.deepmap										
Supply.defined	R	supplies.defined										
Supply.delayed	A			Perl 6 Supply							<section class="prog__container"><pre><code>method delayed(Supply:D: $seconds --&gt; Supply:D)</code></pre><p>Creates a new supply in which all values flowing through the given supply are emitted, but with the given delay in seconds.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_delayed
Supply.do	A			Perl 6 Supply							<section class="prog__container"><pre><code>method do(Supply:D: &amp;do --&gt; Supply:D)</code></pre><p>Creates a supply to which all values seen in the given supply, are emitted again.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_do
Supply.does	R	supplies.does										
Supply.duckmap	R	supplies.duckmap										
Supply.eager	R	supplies.eager										
Supply.elems	A			Perl 6 Supply							<section class="prog__container"><pre><code>method elems(Supply:D: $seconds? --&gt; Supply:D)</code></pre><p>Creates a new supply in which changes to the number of values seen are emitted.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_elems
Supply.elems	R	supplies.elems										
Supply.emit	R	supplies.emit										
Supply.end	R	supplies.end										
Supply.exit	R	supplies.exit										
Supply.export	R	supplies.export										
Supply.flat	A			Perl 6 Supply							<section class="prog__container"><pre><code>method flat(Supply:D: --&gt; Supply:D)</code></pre><p>Creates a supply on which all of the values seen in the given supply are flattened before being emitted again.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_flat
Supply.flat	R	supplies.flat										
Supply.from-list	A			Perl 6 Supply							<section class="prog__container"><pre><code>method from-list(Supply:U: *@values --&gt; Supply:D)</code></pre><p>Creates an on-demand supply from the values passed to this method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_from-list
Supply.gist	R	supplies.gist										
Supply.grab	R	done.grab										
Supply.grep	A			Perl 6 Supply							<section class="prog__container"><pre><code>method grep(Supply:D: Mu $test --&gt; Supply:D)</code></pre><p>Creates a new supply that only emits those values from the original supply that smart-match against $test.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_grep
Supply.head	A			Perl 6 Supply							<section class="prog__container"><pre><code>method head(Supply:D: Int(Cool) $number = 1 --&gt; Supply:D)</code></pre><p>Creates a "head" supply with the same semantics as List.head.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_head
Supply.interval	A			Perl 6 Supply							<section class="prog__container"><pre><code>method interval(Supply:U: $interval, $delay = 0 --&gt; Supply:D)</code></pre><p>Creates a supply that emits a value every $interval seconds, starting $delay seconds from the call.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_interval
Supply.isa	R	supplies.isa										
Supply.item	R	supplies.item										
Supply.lines	A			Perl 6 Supply							<section class="prog__container"><pre><code>method lines(Supply:D: :$chomp = True --&gt; Supply:D)</code></pre><p>Creates a supply that will emit the characters coming in line by line from a supply that's usually created by some asynchronous I/O operation.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_lines
Supply.list	R	done.list										
Supply.list	R	supplies.list										
Supply.live	R	Taps.live										
Supply.map	A			Perl 6 Supply							<section class="prog__container"><pre><code>method map(Supply:D: &amp;mapper --&gt; Supply:D)</code></pre><p>Returns a new supply that maps each value of the given supply through &amp;mapper and emits it to the new supply.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_map
Supply.map	R	supplies.map										
Supply.max	A			Perl 6 Supply							<section class="prog__container"><pre><code>method max(Supply:D: &amp;by = &amp;infix:&lt;cmp&gt; --&gt; Supply:D)</code></pre><p>Creates a supply that only emits values from the given supply if they are larger than any value seen before.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_max
Supply.merge	R	supplies.merge										
Supply.migrate	A			Perl 6 Supply							<section class="prog__container"><pre><code>method migrate(Supply:D: --&gt; Supply:D)</code></pre><p>Creates a supply that acts like the last supply emitted to the given supply of supplies (usually created with start.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_migrate
Supply.min	A			Perl 6 Supply							<section class="prog__container"><pre><code>method min(Supply:D: &amp;by = &amp;infix:&lt;cmp&gt; --&gt; Supply:D)</code></pre><p>Creates a supply that only emits values from the given supply if they are smaller than any value seen before.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_min
Supply.minmax	A			Perl 6 Supply							<section class="prog__container"><pre><code>method minmax(Supply:D: &amp;by = &amp;infix:&lt;cmp&gt; --&gt; Supply:D)</code></pre><p>Creates a supply that emits a Range every time a new minimum or maximum values is seen from the given supply.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_minmax
Supply.new	R	supplies.new										
Supply.none	R	supplies.none										
Supply.not	R	supplies.not										
Supply.one	R	supplies.one										
Supply.pairup	R	supplies.pairup										
Supply.perl	R	supplies.perl										
Supply.print	R	supplies.print										
Supply.push	R	supplies.push										
Supply.put	R	supplies.put										
Supply.reduce	A			Perl 6 Supply							<section class="prog__container"><pre><code>method reduce(Supply:D: &amp;with --&gt; Supply:D)</code></pre><p>Creates a "reducing" supply with the same semantics as List.reduce.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_reduce
Supply.return	R	supplies.return										
Supply.return-rw	R	supplies.return-rw										
Supply.reverse	R	done.reverse										
Supply.reverse	R	supplies.reverse										
Supply.rotor	A			Perl 6 Supply							<section class="prog__container"><pre><code>method rotor(Supply:D: @cycle --&gt; Supply:D)</code></pre><p>Creates a "rotoring" supply with the same semantics as List.rotor.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_rotor
Supply.say	R	supplies.say										
Supply.schedule-on	R	Taps.schedule-on										
Supply.share	A			Perl 6 Supply							<section class="prog__container"><pre><code>method share(Supply:D: --&gt; Supply:D)</code></pre><p>Creates a live supply from an on-demand supply, thus making it possible to share the values of the on-demand supply on multiple taps, instead of each tap seeing its own copy of all values from the on-demand supply.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_share
Supply.signal	R	supplies.signal										
Supply.so	R	supplies.so										
Supply.sort	R	done.sort										
Supply.sort	R	supplies.sort										
Supply.squish	A			Perl 6 Supply							<section class="prog__container"><pre><code>method squish(Supply:D: :$as, :$with, :$expires --&gt; Supply:D)</code></pre><p>Creates a supply that only provides unique values, as defined by the optional :as and :with parameters (same as with List.squish).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_squish
Supply.stable	A			Perl 6 Supply							<section class="prog__container"><pre><code>method stable(Supply:D: $seconds, :$scheduler --&gt; Supply:D)</code></pre><p>Creates a new supply that only passes on a value flowing through the given supply if it wasn't superseded by another value in the given time (in seconds).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_stable
Supply.start	A			Perl 6 Supply							<section class="prog__container"><pre><code>method start(Supply:D: &amp;startee --&gt; Supply:D)</code></pre><p>Creates a supply of supplies.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_start
Supply.tail	A			Perl 6 Supply							<section class="prog__container"><pre><code>method tail(Supply:D: Int(Cool) $number = 1 --&gt; Supply:D)</code></pre><p>Creates a "tail" supply with the same semantics as List.tail.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_tail
Supply.take	R	supplies.take										
Supply.take	R	supplies.take										
Supply.take-rw	R	supplies.take-rw										
Supply.tap	R	Taps.tap										
Supply.throttle	A			Perl 6 Supply							<section class="prog__container"><pre><code>method throttle(Supply:D:  $limit,                 # values / time or simultaneous processing   $seconds or $callable,  # time-unit / code to process simultaneously   $delay = 0,             # initial delay before starting, in seconds   :$control,              # supply to emit control messages on (optional)   :$status,               # supply to tap status messages from (optional)   :$bleed,                # supply to bleed messages to (optional)   :$vent-at,              # bleed when so many buffered (optional)   :$scheduler,            # scheduler to use, default $*SCHEDULER   --&gt; Supply:D)</code></pre><p>Produces a Supply from a given Supply, but makes sure the number of messages passed through, is limited.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_throttle
Supply.unique	A			Perl 6 Supply							<section class="prog__container"><pre><code>method unique(Supply:D: :$as, :$with, :$expires --&gt; Supply:D)</code></pre><p>Creates a supply that only provides unique values, as defined by the optional :as and :with parameters (same as with List.unique).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_unique
Supply.wait	R	done.wait										
Supply.words	A			Perl 6 Supply							<section class="prog__container"><pre><code>method words(Supply:D: --&gt; Supply:D)</code></pre><p>Creates a supply that will emit the characters coming in word for word from a supply that's usually created by some asynchronous I/O operation.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Supply.html#method_words
Supply.zip	R	supplies.zip										
Supply.zip-latest	R	supplies.zip-latest										
Tap.ACCEPTS	A			Perl 6 Tap							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Any%29_method_ACCEPTS
Tap.ACCEPTS	A			Perl 6 Tap							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_method_ACCEPTS
Tap.Bool	A			Perl 6 Tap							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_routine_Bool
Tap.CREATE	A			Perl 6 Tap							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_method_CREATE
Tap.Str	A			Perl 6 Tap							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_method_Str
Tap.WHERE	A			Perl 6 Tap							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_method_WHERE
Tap.WHICH	A			Perl 6 Tap							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_method_WHICH
Tap.WHY	A			Perl 6 Tap							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_method_WHY
Tap.all	A			Perl 6 Tap							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Any%29_method_all
Tap.any	A			Perl 6 Tap							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Any%29_method_any
Tap.bless	A			Perl 6 Tap							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_method_bless
Tap.clone	A			Perl 6 Tap							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_method_clone
Tap.close	A			Perl 6 Tap							<section class="prog__container"><pre><code>method close(Tap:D:)</code></pre><p>Closes the tap.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#method_close
Tap.closing	A			Perl 6 Tap							<section class="prog__container"><pre><code>method closing(Tap:D:)</code></pre><p>Returns the callback that is called on closing the tap.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#method_closing
Tap.deepmap	A			Perl 6 Tap							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Any%29_method_deepmap
Tap.defined	A			Perl 6 Tap							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_routine_defined
Tap.does	A			Perl 6 Tap							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_routine_does
Tap.done	A			Perl 6 Tap							<section class="prog__container"><pre><code>method done(Tap:D:)</code></pre><p>Returns the callback that is called on successfully shutting down a channel, if any.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#method_done
Tap.duckmap	A			Perl 6 Tap							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Any%29_method_duckmap
Tap.eager	A			Perl 6 Tap							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Any%29_method_eager
Tap.elems	A			Perl 6 Tap							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Any%29_method_elems
Tap.emit	A			Perl 6 Tap							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_method_emit
Tap.emit	A			Perl 6 Tap							<section class="prog__container"><pre><code>method emit(Tap:D: --&gt; Callable:D)</code></pre><p>Returns the callback that is called for emitted events.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#method_emit
Tap.end	A			Perl 6 Tap							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Any%29_method_end
Tap.exit	A			Perl 6 Tap							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Any%29_sub_exit
Tap.export	A			Perl 6 Tap							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_trait_is_export
Tap.flat	A			Perl 6 Tap							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Any%29_method_flat
Tap.gist	A			Perl 6 Tap							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_routine_gist
Tap.isa	A			Perl 6 Tap							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_routine_isa
Tap.item	A			Perl 6 Tap							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_method_item
Tap.list	A			Perl 6 Tap							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Any%29_method_list
Tap.map	A			Perl 6 Tap							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Any%29_method_map
Tap.new	A			Perl 6 Tap							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_method_new
Tap.none	A			Perl 6 Tap							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Any%29_method_none
Tap.not	A			Perl 6 Tap							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_method_not
Tap.one	A			Perl 6 Tap							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Any%29_method_one
Tap.pairup	A			Perl 6 Tap							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Any%29_method_pairup
Tap.perl	A			Perl 6 Tap							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_routine_perl
Tap.print	A			Perl 6 Tap							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_method_print
Tap.push	A			Perl 6 Tap							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Any%29_method_push
Tap.put	A			Perl 6 Tap							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_method_put
Tap.quit	A			Perl 6 Tap							<section class="prog__container"><pre><code>method quit(Tap:D:)</code></pre><p>Returns the callback that is called on shutting down a channel with error, if any.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#method_quit
Tap.return	A			Perl 6 Tap							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_method_return
Tap.return-rw	A			Perl 6 Tap							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_method_return-rw
Tap.reverse	A			Perl 6 Tap							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Any%29_routine_reverse
Tap.say	A			Perl 6 Tap							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_method_say
Tap.so	A			Perl 6 Tap							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_method_so
Tap.sort	A			Perl 6 Tap							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Any%29_method_sort
Tap.supply	A			Perl 6 Tap							<section class="prog__container"><pre><code>method supply(Tap:D:)</code></pre><p>Returns the supply to which the tap belongs.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#method_supply
Tap.take	A			Perl 6 Tap							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_method_take
Tap.take	A			Perl 6 Tap							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_routine_take
Tap.take-rw	A			Perl 6 Tap							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Tap.html#%28Mu%29_routine_take-rw
Thread.ACCEPTS	A			Perl 6 Thread							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Any%29_method_ACCEPTS
Thread.ACCEPTS	A			Perl 6 Thread							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_method_ACCEPTS
Thread.Bool	A			Perl 6 Thread							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_routine_Bool
Thread.CREATE	A			Perl 6 Thread							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_method_CREATE
Thread.Str	A			Perl 6 Thread							<section class="prog__container"><pre><code>method Str(Thread:D: --&gt; Str:D)</code></pre><p>Returns a string which contains the invocants thread id and name.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#method_Str
Thread.Str	A			Perl 6 Thread							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_method_Str
Thread.WHERE	A			Perl 6 Thread							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_method_WHERE
Thread.WHICH	A			Perl 6 Thread							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_method_WHICH
Thread.WHY	A			Perl 6 Thread							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_method_WHY
Thread.all	A			Perl 6 Thread							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Any%29_method_all
Thread.any	A			Perl 6 Thread							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Any%29_method_any
Thread.app_lifetime	A			Perl 6 Thread							<section class="prog__container"><pre><code>method app_lifetime(Thread:D: --&gt; Bool:D)</code></pre><p>Returns False unless the named parameter :app_lifetime is specifically set to True during object creation.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#method_app_lifetime
Thread.bless	A			Perl 6 Thread							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_method_bless
Thread.clone	A			Perl 6 Thread							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_method_clone
Thread.deepmap	A			Perl 6 Thread							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Any%29_method_deepmap
Thread.defined	A			Perl 6 Thread							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_routine_defined
Thread.does	A			Perl 6 Thread							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_routine_does
Thread.duckmap	A			Perl 6 Thread							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Any%29_method_duckmap
Thread.eager	A			Perl 6 Thread							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Any%29_method_eager
Thread.elems	A			Perl 6 Thread							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Any%29_method_elems
Thread.emit	A			Perl 6 Thread							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_method_emit
Thread.end	A			Perl 6 Thread							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Any%29_method_end
Thread.exit	A			Perl 6 Thread							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Any%29_sub_exit
Thread.export	A			Perl 6 Thread							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_trait_is_export
Thread.finish	A			Perl 6 Thread							<section class="prog__container"><pre><code>method finish(Thread:D)</code></pre><p>Waits for the thread to finish.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#method_finish
Thread.flat	A			Perl 6 Thread							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Any%29_method_flat
Thread.gist	A			Perl 6 Thread							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_routine_gist
Thread.id	A			Perl 6 Thread							<section class="prog__container"><pre><code>method id(Thread:D: --&gt; Int:D)</code></pre><p>Returns a numeric, unique thread identifier.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#method_id
Thread.isa	A			Perl 6 Thread							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_routine_isa
Thread.item	A			Perl 6 Thread							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_method_item
Thread.join	A			Perl 6 Thread							<section class="prog__container"><pre><code>method join(Thread:D)</code></pre><p>Waits for the thread to finish.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#method_join
Thread.list	A			Perl 6 Thread							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Any%29_method_list
Thread.map	A			Perl 6 Thread							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Any%29_method_map
Thread.name	A			Perl 6 Thread							<section class="prog__container"><pre><code>method name(Thread:D: --&gt; Str:D)</code></pre><p>Returns the user defined string, which can optionally be set during object creation in order to identify the Thread, or '&lt;anon&gt;' if no such string was specified.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#method_name
Thread.new	A			Perl 6 Thread							<section class="prog__container"><pre><code>method new(:&amp;code!, Bool :$app_lifetime = False, Str :$name = '&lt;anon&gt;' --&gt; Thread:D)</code></pre><p>Creates and returns a new Thread, without starting it yet.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#method_new
Thread.new	A			Perl 6 Thread							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_method_new
Thread.none	A			Perl 6 Thread							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Any%29_method_none
Thread.not	A			Perl 6 Thread							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_method_not
Thread.one	A			Perl 6 Thread							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Any%29_method_one
Thread.pairup	A			Perl 6 Thread							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Any%29_method_pairup
Thread.perl	A			Perl 6 Thread							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_routine_perl
Thread.print	A			Perl 6 Thread							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_method_print
Thread.push	A			Perl 6 Thread							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Any%29_method_push
Thread.put	A			Perl 6 Thread							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_method_put
Thread.return	A			Perl 6 Thread							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_method_return
Thread.return-rw	A			Perl 6 Thread							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_method_return-rw
Thread.reverse	A			Perl 6 Thread							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Any%29_routine_reverse
Thread.run	A			Perl 6 Thread							<section class="prog__container"><pre><code>method run(Thread:D:)</code></pre><p>Runs the thread, and returns the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#method_run
Thread.say	A			Perl 6 Thread							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_method_say
Thread.so	A			Perl 6 Thread							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_method_so
Thread.sort	A			Perl 6 Thread							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Any%29_method_sort
Thread.start	A			Perl 6 Thread							<section class="prog__container"><pre><code>method start(Thread:U: &amp;code, Bool :$app_lifetime = False, Str :$name = '&lt;anon&gt;' --&gt; Thread:D)</code></pre><p>Creates, runs and returns a new Thread.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#method_start
Thread.take	A			Perl 6 Thread							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_method_take
Thread.take	A			Perl 6 Thread							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_routine_take
Thread.take-rw	A			Perl 6 Thread							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#%28Mu%29_routine_take-rw
Thread.yield	A			Perl 6 Thread							<section class="prog__container"><pre><code>method yield(Thread:U)</code></pre><p>Tells the scheduler to prefer another thread for now.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Thread.html#method_yield
ThreadPoolScheduler.ACCEPTS	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Any%29_method_ACCEPTS
ThreadPoolScheduler.ACCEPTS	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_method_ACCEPTS
ThreadPoolScheduler.Bool	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_routine_Bool
ThreadPoolScheduler.CREATE	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_method_CREATE
ThreadPoolScheduler.Str	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_method_Str
ThreadPoolScheduler.WHERE	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_method_WHERE
ThreadPoolScheduler.WHICH	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_method_WHICH
ThreadPoolScheduler.WHY	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_method_WHY
ThreadPoolScheduler.all	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Any%29_method_all
ThreadPoolScheduler.any	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Any%29_method_any
ThreadPoolScheduler.bless	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_method_bless
ThreadPoolScheduler.clone	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_method_clone
ThreadPoolScheduler.cue	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>method cue(:&amp;code, Instant :$at, :$in, :$every, :$times = 1; :&amp;catch)</code></pre><p>Schedules a callable (&amp;code) for execution.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Scheduler%29_method_cue
ThreadPoolScheduler.deepmap	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Any%29_method_deepmap
ThreadPoolScheduler.defined	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_routine_defined
ThreadPoolScheduler.does	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_routine_does
ThreadPoolScheduler.duckmap	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Any%29_method_duckmap
ThreadPoolScheduler.eager	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Any%29_method_eager
ThreadPoolScheduler.elems	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Any%29_method_elems
ThreadPoolScheduler.emit	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_method_emit
ThreadPoolScheduler.end	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Any%29_method_end
ThreadPoolScheduler.exit	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Any%29_sub_exit
ThreadPoolScheduler.export	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_trait_is_export
ThreadPoolScheduler.flat	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Any%29_method_flat
ThreadPoolScheduler.gist	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_routine_gist
ThreadPoolScheduler.isa	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_routine_isa
ThreadPoolScheduler.item	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_method_item
ThreadPoolScheduler.list	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Any%29_method_list
ThreadPoolScheduler.map	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Any%29_method_map
ThreadPoolScheduler.new	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>method new(Int :$initial_threads = 0, Int :$max_threads=16)</code></pre><p>Creates a new ThreadPoolScheduler object with the given range of threads to maintain.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#new
ThreadPoolScheduler.new	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_method_new
ThreadPoolScheduler.none	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Any%29_method_none
ThreadPoolScheduler.not	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_method_not
ThreadPoolScheduler.one	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Any%29_method_one
ThreadPoolScheduler.pairup	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Any%29_method_pairup
ThreadPoolScheduler.perl	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_routine_perl
ThreadPoolScheduler.print	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_method_print
ThreadPoolScheduler.push	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Any%29_method_push
ThreadPoolScheduler.put	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_method_put
ThreadPoolScheduler.return	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_method_return
ThreadPoolScheduler.return-rw	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_method_return-rw
ThreadPoolScheduler.reverse	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Any%29_routine_reverse
ThreadPoolScheduler.say	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_method_say
ThreadPoolScheduler.so	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_method_so
ThreadPoolScheduler.sort	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Any%29_method_sort
ThreadPoolScheduler.take	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_method_take
ThreadPoolScheduler.take	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_routine_take
ThreadPoolScheduler.take-rw	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Mu%29_routine_take-rw
ThreadPoolScheduler.uncaught_handler	A			Perl 6 ThreadPoolScheduler							<section class="prog__container"><pre><code>method uncaught_handler() is rw</code></pre><p>RW-Accessor for the handler that is caught for uncaught exceptions from the code that is being scheduled and run.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/ThreadPoolScheduler.html#%28Scheduler%29_method_uncaught_handler
Uni.ACCEPTS	A			Perl 6 Uni							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Any%29_method_ACCEPTS
Uni.ACCEPTS	A			Perl 6 Uni							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_method_ACCEPTS
Uni.Bool	A			Perl 6 Uni							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_routine_Bool
Uni.CREATE	A			Perl 6 Uni							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_method_CREATE
Uni.NFC	A			Perl 6 Uni							<section class="prog__container"><pre><code>method NFC(Uni:D: --&gt; NFC:D)</code></pre><p>Returns a NFC (Normal Form Composed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#method_NFC
Uni.NFD	A			Perl 6 Uni							<section class="prog__container"><pre><code>method NFD(Uni:D: --&gt; NFD:D)</code></pre><p>Returns a NFD (Normal Form Decomposed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#method_NFD
Uni.NFKC	A			Perl 6 Uni							<section class="prog__container"><pre><code>method NFKC(Uni:D: --&gt; NFKC:D)</code></pre><p>Returns a NFKC (Normal Form Compatibility Composed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#method_NFKC
Uni.NFKD	A			Perl 6 Uni							<section class="prog__container"><pre><code>method NFKD(Uni:D: --&gt; NFKD:D)</code></pre><p>Returns a NFD (Normal Form Compatibility Decomposed)-converted version of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#method_NFKD
Uni.Str	A			Perl 6 Uni							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_method_Str
Uni.WHERE	A			Perl 6 Uni							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_method_WHERE
Uni.WHICH	A			Perl 6 Uni							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_method_WHICH
Uni.WHY	A			Perl 6 Uni							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_method_WHY
Uni.all	A			Perl 6 Uni							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Any%29_method_all
Uni.any	A			Perl 6 Uni							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Any%29_method_any
Uni.bless	A			Perl 6 Uni							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_method_bless
Uni.clone	A			Perl 6 Uni							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_method_clone
Uni.codes	A			Perl 6 Uni							<section class="prog__container"><pre><code>method codes(Uni:D: --&gt; Int:D)</code></pre><p>Returns the number of codepoints in the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#method_codes
Uni.deepmap	A			Perl 6 Uni							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Any%29_method_deepmap
Uni.defined	A			Perl 6 Uni							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_routine_defined
Uni.does	A			Perl 6 Uni							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_routine_does
Uni.duckmap	A			Perl 6 Uni							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Any%29_method_duckmap
Uni.eager	A			Perl 6 Uni							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Any%29_method_eager
Uni.elems	A			Perl 6 Uni							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Any%29_method_elems
Uni.elems	A			Perl 6 Uni							<section class="prog__container"><pre><code>method elems(Uni:D: --&gt; Int:D)</code></pre><p>Returns the number of codepoints in the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#method_elems
Uni.emit	A			Perl 6 Uni							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_method_emit
Uni.end	A			Perl 6 Uni							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Any%29_method_end
Uni.exit	A			Perl 6 Uni							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Any%29_sub_exit
Uni.export	A			Perl 6 Uni							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_trait_is_export
Uni.flat	A			Perl 6 Uni							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Any%29_method_flat
Uni.gist	A			Perl 6 Uni							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_routine_gist
Uni.isa	A			Perl 6 Uni							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_routine_isa
Uni.item	A			Perl 6 Uni							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_method_item
Uni.list	A			Perl 6 Uni							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Any%29_method_list
Uni.map	A			Perl 6 Uni							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Any%29_method_map
Uni.new	A			Perl 6 Uni							<section class="prog__container"><pre><code>method new(*@codes --&gt; Uni:D)</code></pre><p>Creates a new Uni instance from the given codepoint numbers.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#method_new
Uni.new	A			Perl 6 Uni							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_method_new
Uni.none	A			Perl 6 Uni							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Any%29_method_none
Uni.not	A			Perl 6 Uni							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_method_not
Uni.of	A			Perl 6 Uni							<section class="prog__container"><pre><code>method of()</code></pre><p>Returns the type constraint for elements of the positional container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Positional%29_method_of
Uni.one	A			Perl 6 Uni							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Any%29_method_one
Uni.pairup	A			Perl 6 Uni							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Any%29_method_pairup
Uni.perl	A			Perl 6 Uni							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_routine_perl
Uni.print	A			Perl 6 Uni							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_method_print
Uni.push	A			Perl 6 Uni							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Any%29_method_push
Uni.put	A			Perl 6 Uni							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_method_put
Uni.return	A			Perl 6 Uni							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_method_return
Uni.return-rw	A			Perl 6 Uni							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_method_return-rw
Uni.reverse	A			Perl 6 Uni							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Any%29_routine_reverse
Uni.say	A			Perl 6 Uni							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_method_say
Uni.so	A			Perl 6 Uni							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_method_so
Uni.sort	A			Perl 6 Uni							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Any%29_method_sort
Uni.take	A			Perl 6 Uni							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_method_take
Uni.take	A			Perl 6 Uni							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_routine_take
Uni.take-rw	A			Perl 6 Uni							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Uni.html#%28Mu%29_routine_take-rw
Variable.(Variables)	A			Perl 6 Variable							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Variable:D, :$default!)</code></pre><p>Sets the default value with which a variable is initialized, and to which it is reset when Nil is assigned to it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#trait_is_default_%28Variables%29
Variable.ACCEPTS	A			Perl 6 Variable							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Any%29_method_ACCEPTS
Variable.ACCEPTS	A			Perl 6 Variable							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_method_ACCEPTS
Variable.Bool	A			Perl 6 Variable							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_routine_Bool
Variable.CREATE	A			Perl 6 Variable							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_method_CREATE
Variable.Str	A			Perl 6 Variable							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_method_Str
Variable.WHERE	A			Perl 6 Variable							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_method_WHERE
Variable.WHICH	A			Perl 6 Variable							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_method_WHICH
Variable.WHY	A			Perl 6 Variable							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_method_WHY
Variable.all	A			Perl 6 Variable							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Any%29_method_all
Variable.any	A			Perl 6 Variable							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Any%29_method_any
Variable.bless	A			Perl 6 Variable							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_method_bless
Variable.clone	A			Perl 6 Variable							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_method_clone
Variable.deepmap	A			Perl 6 Variable							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Any%29_method_deepmap
Variable.defined	A			Perl 6 Variable							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_routine_defined
Variable.does	A			Perl 6 Variable							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_routine_does
Variable.duckmap	A			Perl 6 Variable							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Any%29_method_duckmap
Variable.dynamic	A			Perl 6 Variable							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Variable:D, :$dynamic)</code></pre><p>Marks a variable as dynamic, that is, accessible from inner dynamic scopes without being in an inner lexical scope.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#trait_is_dynamic
Variable.eager	A			Perl 6 Variable							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Any%29_method_eager
Variable.elems	A			Perl 6 Variable							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Any%29_method_elems
Variable.emit	A			Perl 6 Variable							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_method_emit
Variable.end	A			Perl 6 Variable							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Any%29_method_end
Variable.exit	A			Perl 6 Variable							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Any%29_sub_exit
Variable.export	A			Perl 6 Variable							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_trait_is_export
Variable.flat	A			Perl 6 Variable							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Any%29_method_flat
Variable.gist	A			Perl 6 Variable							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_routine_gist
Variable.isa	A			Perl 6 Variable							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_routine_isa
Variable.item	A			Perl 6 Variable							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_method_item
Variable.list	A			Perl 6 Variable							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Any%29_method_list
Variable.map	A			Perl 6 Variable							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Any%29_method_map
Variable.name	A			Perl 6 Variable							<section class="prog__container"><pre><code>method name(Variable:D: str)</code></pre><p>Returns the name of the variable, including the sigil.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#method_name
Variable.new	A			Perl 6 Variable							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_method_new
Variable.none	A			Perl 6 Variable							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Any%29_method_none
Variable.not	A			Perl 6 Variable							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_method_not
Variable.of	A			Perl 6 Variable							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;of&gt;(Mu:U $target, Mu:U $type)</code></pre><p>Sets the type constraint of a container bound to a variable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#trait_of
Variable.one	A			Perl 6 Variable							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Any%29_method_one
Variable.pairup	A			Perl 6 Variable							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Any%29_method_pairup
Variable.perl	A			Perl 6 Variable							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_routine_perl
Variable.print	A			Perl 6 Variable							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_method_print
Variable.push	A			Perl 6 Variable							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Any%29_method_push
Variable.put	A			Perl 6 Variable							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_method_put
Variable.return	A			Perl 6 Variable							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_method_return
Variable.return-rw	A			Perl 6 Variable							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_method_return-rw
Variable.reverse	A			Perl 6 Variable							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Any%29_routine_reverse
Variable.say	A			Perl 6 Variable							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_method_say
Variable.so	A			Perl 6 Variable							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_method_so
Variable.sort	A			Perl 6 Variable							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Any%29_method_sort
Variable.take	A			Perl 6 Variable							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_method_take
Variable.take	A			Perl 6 Variable							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_routine_take
Variable.take-rw	A			Perl 6 Variable							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Variable.html#%28Mu%29_routine_take-rw
Version.ACCEPTS	A			Perl 6 Version							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Any%29_method_ACCEPTS
Version.ACCEPTS	A			Perl 6 Version							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_method_ACCEPTS
Version.Bool	A			Perl 6 Version							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_routine_Bool
Version.CREATE	A			Perl 6 Version							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_method_CREATE
Version.Str	A			Perl 6 Version							<section class="prog__container"><pre><code>method Str(Version:D: --&gt; Str:D)</code></pre><p>Returns a string representation of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#method_Str
Version.Str	A			Perl 6 Version							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_method_Str
Version.WHERE	A			Perl 6 Version							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_method_WHERE
Version.WHICH	A			Perl 6 Version							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_method_WHICH
Version.WHY	A			Perl 6 Version							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_method_WHY
Version.all	A			Perl 6 Version							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Any%29_method_all
Version.any	A			Perl 6 Version							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Any%29_method_any
Version.bless	A			Perl 6 Version							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_method_bless
Version.clone	A			Perl 6 Version							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_method_clone
Version.deepmap	A			Perl 6 Version							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Any%29_method_deepmap
Version.defined	A			Perl 6 Version							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_routine_defined
Version.does	A			Perl 6 Version							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_routine_does
Version.duckmap	A			Perl 6 Version							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Any%29_method_duckmap
Version.eager	A			Perl 6 Version							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Any%29_method_eager
Version.elems	A			Perl 6 Version							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Any%29_method_elems
Version.emit	A			Perl 6 Version							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_method_emit
Version.end	A			Perl 6 Version							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Any%29_method_end
Version.exit	A			Perl 6 Version							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Any%29_sub_exit
Version.export	A			Perl 6 Version							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_trait_is_export
Version.flat	A			Perl 6 Version							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Any%29_method_flat
Version.gist	A			Perl 6 Version							<section class="prog__container"><pre><code>method gist(Version:D: --&gt; Str:D)</code></pre><p>Returns a string representation of the invocant, just like Str, prepended with a lower-case v.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#method_gist
Version.gist	A			Perl 6 Version							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_routine_gist
Version.isa	A			Perl 6 Version							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_routine_isa
Version.item	A			Perl 6 Version							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_method_item
Version.list	A			Perl 6 Version							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Any%29_method_list
Version.map	A			Perl 6 Version							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Any%29_method_map
Version.new	A			Perl 6 Version							<section class="prog__container"><pre><code>method new(Str:D $s)</code></pre><p>Creates a Version from a string $s.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#method_new
Version.new	A			Perl 6 Version							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_method_new
Version.none	A			Perl 6 Version							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Any%29_method_none
Version.not	A			Perl 6 Version							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_method_not
Version.one	A			Perl 6 Version							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Any%29_method_one
Version.pairup	A			Perl 6 Version							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Any%29_method_pairup
Version.parts	A			Perl 6 Version							<section class="prog__container"><pre><code>method parts(Version:D: --&gt; List:D)</code></pre><p>Returns the list of parts that make up this Version object&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#method_parts
Version.perl	A			Perl 6 Version							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_routine_perl
Version.plus	A			Perl 6 Version							<section class="prog__container"><pre><code>method plus(Version:D: --&gt; Bool:D)</code></pre><p>Returns True if comparisons against this version allow larger versions too.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#method_plus
Version.print	A			Perl 6 Version							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_method_print
Version.push	A			Perl 6 Version							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Any%29_method_push
Version.put	A			Perl 6 Version							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_method_put
Version.return	A			Perl 6 Version							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_method_return
Version.return-rw	A			Perl 6 Version							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_method_return-rw
Version.reverse	A			Perl 6 Version							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Any%29_routine_reverse
Version.say	A			Perl 6 Version							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_method_say
Version.so	A			Perl 6 Version							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_method_so
Version.sort	A			Perl 6 Version							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Any%29_method_sort
Version.take	A			Perl 6 Version							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_method_take
Version.take	A			Perl 6 Version							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_routine_take
Version.take-rw	A			Perl 6 Version							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Version.html#%28Mu%29_routine_take-rw
WHERE	D								*[[AST.WHERE]], returns an Int representing the memory address of the object.\n*[[Any.WHERE]], returns an Int representing the memory address of the object.\n*[[Attribute.WHERE]], returns an Int representing the memory address of the object.\n*[[Bag.WHERE]], returns an Int representing the memory address of the object.\n*[[BagHash.WHERE]], returns an Int representing the memory address of the object.\n*[[CallFrame.WHERE]], returns an Int representing the memory address of the object.\n*[[Callable.WHERE]], returns an Int representing the memory address of the object.\n*[[Cancellation.WHERE]], returns an Int representing the memory address of the object.\n*[[Capture.WHERE]], returns an Int representing the memory address of the object.\n*[[Channel.WHERE]], returns an Int representing the memory address of the object.\n*[[Code.WHERE]], returns an Int representing the memory address of the object.\n*[[Complex.WHERE]], returns an Int representing the memory address of the object.\n*[[Cool.WHERE]], returns an Int representing the memory address of the object.\n*[[CurrentThreadScheduler.WHERE]], returns an Int representing the memory address of the object.\n*[[Cursor.WHERE]], returns an Int representing the memory address of the object.\n*[[Date.WHERE]], returns an Int representing the memory address of the object.\n*[[DateTime.WHERE]], returns an Int representing the memory address of the object.\n*[[Duration.WHERE]], returns an Int representing the memory address of the object.\n*[[Exception.WHERE]], returns an Int representing the memory address of the object.\n*[[Failure.WHERE]], returns an Int representing the memory address of the object.\n*[[FatRat.WHERE]], returns an Int representing the memory address of the object.\n*[[Grammar.WHERE]], returns an Int representing the memory address of the object.\n*[[Hash.WHERE]], returns an Int representing the memory address of the object.\n*[[Instant.WHERE]], returns an Int representing the memory address of the object.\n*[[Int.WHERE]], returns an Int representing the memory address of the object.\n*[[Iterable.WHERE]], returns an Int representing the memory address of the object.\n*[[Junction.WHERE]], returns an Int representing the memory address of the object.\n*[[Label.WHERE]], returns an Int representing the memory address of the object.\n*[[List.WHERE]], returns an Int representing the memory address of the object.\n*[[Lock.WHERE]], returns an Int representing the memory address of the object.\n*[[Map.WHERE]], returns an Int representing the memory address of the object.\n*[[Match.WHERE]], returns an Int representing the memory address of the object.\n*[[Mix.WHERE]], returns an Int representing the memory address of the object.\n*[[MixHash.WHERE]], returns an Int representing the memory address of the object.\n*[[Mu.WHERE]], returns an Int representing the memory address of the object.\n*[[Nil.WHERE]], returns an Int representing the memory address of the object.\n*[[Num.WHERE]], returns an Int representing the memory address of the object.\n*[[Numeric.WHERE]], returns an Int representing the memory address of the object.\n*[[ObjAt.WHERE]], returns an Int representing the memory address of the object.\n*[[Pair.WHERE]], returns an Int representing the memory address of the object.\n*[[Parameter.WHERE]], returns an Int representing the memory address of the object.\n*[[Positional.WHERE]], returns an Int representing the memory address of the object.\n*[[Proc.WHERE]], returns an Int representing the memory address of the object.\n*[[Promise.WHERE]], returns an Int representing the memory address of the object.\n*[[Proxy.WHERE]], returns an Int representing the memory address of the object.\n*[[Range.WHERE]], returns an Int representing the memory address of the object.\n*[[Rat.WHERE]], returns an Int representing the memory address of the object.\n*[[Rational.WHERE]], returns an Int representing the memory address of the object.\n*[[Real.WHERE]], returns an Int representing the memory address of the object.\n*[[Scalar.WHERE]], returns an Int representing the memory address of the object.\n*[[Semaphore.WHERE]], returns an Int representing the memory address of the object.\n*[[Seq.WHERE]], returns an Int representing the memory address of the object.\n*[[Set.WHERE]], returns an Int representing the memory address of the object.\n*[[SetHash.WHERE]], returns an Int representing the memory address of the object.\n*[[Signature.WHERE]], returns an Int representing the memory address of the object.\n*[[Stash.WHERE]], returns an Int representing the memory address of the object.\n*[[Str.WHERE]], returns an Int representing the memory address of the object.\n*[[Supplier.WHERE]], returns an Int representing the memory address of the object.\n*[[Tap.WHERE]], returns an Int representing the memory address of the object.\n*[[Thread.WHERE]], returns an Int representing the memory address of the object.\n*[[ThreadPoolScheduler.WHERE]], returns an Int representing the memory address of the object.\n*[[Uni.WHERE]], returns an Int representing the memory address of the object.\n*[[Variable.WHERE]], returns an Int representing the memory address of the object.\n*[[Version.WHERE]], returns an Int representing the memory address of the object.\n*[[Whatever.WHERE]], returns an Int representing the memory address of the object.\n*[[supplies.WHERE]], returns an Int representing the memory address of the object.			
WHICH	D								*[[AST.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Any.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Attribute.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Bag.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[BagHash.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[CallFrame.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Callable.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Cancellation.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Capture.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Channel.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Code.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Complex.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Cool.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[CurrentThreadScheduler.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Cursor.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Date.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[DateTime.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Duration.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Exception.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Failure.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[FatRat.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Grammar.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Hash.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Instant.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Int.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Iterable.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Junction.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Label.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[List.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Lock.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Map.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Match.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Mix.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[MixHash.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Mu.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Nil.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Num.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Numeric.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[ObjAt.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Pair.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Parameter.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Positional.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Proc.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Promise.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Proxy.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Range.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Rat.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Rational.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Real.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Scalar.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Semaphore.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Seq.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Set.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[SetHash.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Signature.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Stash.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Str.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Supplier.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Tap.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Thread.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[ThreadPoolScheduler.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Uni.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Variable.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Version.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[Whatever.WHICH]], returns an object of type ObjAt which uniquely identifies the object.\n*[[supplies.WHICH]], returns an object of type ObjAt which uniquely identifies the object.			
WHY	D								*[[AST.WHY]], returns the attached Pod value.\n*[[Any.WHY]], returns the attached Pod value.\n*[[Attribute.WHY]], returns the attached Pod value.\n*[[Bag.WHY]], returns the attached Pod value.\n*[[BagHash.WHY]], returns the attached Pod value.\n*[[CallFrame.WHY]], returns the attached Pod value.\n*[[Callable.WHY]], returns the attached Pod value.\n*[[Cancellation.WHY]], returns the attached Pod value.\n*[[Capture.WHY]], returns the attached Pod value.\n*[[Channel.WHY]], returns the attached Pod value.\n*[[Code.WHY]], returns the attached Pod value.\n*[[Complex.WHY]], returns the attached Pod value.\n*[[Cool.WHY]], returns the attached Pod value.\n*[[CurrentThreadScheduler.WHY]], returns the attached Pod value.\n*[[Cursor.WHY]], returns the attached Pod value.\n*[[Date.WHY]], returns the attached Pod value.\n*[[DateTime.WHY]], returns the attached Pod value.\n*[[Duration.WHY]], returns the attached Pod value.\n*[[Exception.WHY]], returns the attached Pod value.\n*[[Failure.WHY]], returns the attached Pod value.\n*[[FatRat.WHY]], returns the attached Pod value.\n*[[Grammar.WHY]], returns the attached Pod value.\n*[[Hash.WHY]], returns the attached Pod value.\n*[[Instant.WHY]], returns the attached Pod value.\n*[[Int.WHY]], returns the attached Pod value.\n*[[Iterable.WHY]], returns the attached Pod value.\n*[[Junction.WHY]], returns the attached Pod value.\n*[[Label.WHY]], returns the attached Pod value.\n*[[List.WHY]], returns the attached Pod value.\n*[[Lock.WHY]], returns the attached Pod value.\n*[[Map.WHY]], returns the attached Pod value.\n*[[Match.WHY]], returns the attached Pod value.\n*[[Mix.WHY]], returns the attached Pod value.\n*[[MixHash.WHY]], returns the attached Pod value.\n*[[Mu.WHY]], returns the attached Pod value.\n*[[Nil.WHY]], returns the attached Pod value.\n*[[Num.WHY]], returns the attached Pod value.\n*[[Numeric.WHY]], returns the attached Pod value.\n*[[ObjAt.WHY]], returns the attached Pod value.\n*[[Pair.WHY]], returns the attached Pod value.\n*[[Parameter.WHY]], returns the attached Pod value.\n*[[Positional.WHY]], returns the attached Pod value.\n*[[Proc.WHY]], returns the attached Pod value.\n*[[Promise.WHY]], returns the attached Pod value.\n*[[Proxy.WHY]], returns the attached Pod value.\n*[[Range.WHY]], returns the attached Pod value.\n*[[Rat.WHY]], returns the attached Pod value.\n*[[Rational.WHY]], returns the attached Pod value.\n*[[Real.WHY]], returns the attached Pod value.\n*[[Scalar.WHY]], returns the attached Pod value.\n*[[Semaphore.WHY]], returns the attached Pod value.\n*[[Seq.WHY]], returns the attached Pod value.\n*[[Set.WHY]], returns the attached Pod value.\n*[[SetHash.WHY]], returns the attached Pod value.\n*[[Signature.WHY]], returns the attached Pod value.\n*[[Stash.WHY]], returns the attached Pod value.\n*[[Str.WHY]], returns the attached Pod value.\n*[[Supplier.WHY]], returns the attached Pod value.\n*[[Tap.WHY]], returns the attached Pod value.\n*[[Thread.WHY]], returns the attached Pod value.\n*[[ThreadPoolScheduler.WHY]], returns the attached Pod value.\n*[[Uni.WHY]], returns the attached Pod value.\n*[[Variable.WHY]], returns the attached Pod value.\n*[[Version.WHY]], returns the attached Pod value.\n*[[Whatever.WHY]], returns the attached Pod value.\n*[[supplies.WHY]], returns the attached Pod value.			
Whatever.ACCEPTS	A			Perl 6 Whatever							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Any%29_method_ACCEPTS
Whatever.ACCEPTS	A			Perl 6 Whatever							<section class="prog__container"><pre><code>multi method ACCEPTS(Mu:U: $other)</code></pre><p>ACCEPTS is the method that smart matching with the infix ~~ operator and given/when invokes on the right-hand side (the matcher).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_method_ACCEPTS
Whatever.ACCEPTS	A			Perl 6 Whatever							<section class="prog__container"><pre><code>multi method ACCEPTS(Whatever:D: Mu $other)</code></pre><p>Returns True.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#method_ACCEPTS
Whatever.Bool	A			Perl 6 Whatever							<section class="prog__container"><pre><code>multi sub    Bool(Mu --&gt; Bool:D)multi method Bool(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_routine_Bool
Whatever.CREATE	A			Perl 6 Whatever							<section class="prog__container"><pre><code>method CREATE(--&gt; Mu:D)</code></pre><p>Allocates a new object of the same type as the invocant, without initializing any attributes.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_method_CREATE
Whatever.Str	A			Perl 6 Whatever							<section class="prog__container"><pre><code>multi method Str(--&gt; Str)</code></pre><p>Returns a string representation of the invocant, intended to be machine readable.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_method_Str
Whatever.WHERE	A			Perl 6 Whatever							<section class="prog__container"><pre><code>method WHERE(--&gt; Int)</code></pre><p>Returns an Int representing the memory address of the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_method_WHERE
Whatever.WHICH	A			Perl 6 Whatever							<section class="prog__container"><pre><code>multi method WHICH(--&gt; ObjAt:D)</code></pre><p>Returns an object of type ObjAt which uniquely identifies the object.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_method_WHICH
Whatever.WHY	A			Perl 6 Whatever							<section class="prog__container"><pre><code>multi method WHY()</code></pre><p>Returns the attached Pod value.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_method_WHY
Whatever.all	A			Perl 6 Whatever							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Any%29_method_all
Whatever.any	A			Perl 6 Whatever							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Any%29_method_any
Whatever.bless	A			Perl 6 Whatever							<section class="prog__container"><pre><code>method bless(*%attrinit --&gt; Mu:D)</code></pre><p>Lower-level object construction method than new.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_method_bless
Whatever.clone	A			Perl 6 Whatever							<section class="prog__container"><pre><code>method clone(*%twiddles)</code></pre><p>Creates a shallow clone of the invocant.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_method_clone
Whatever.deepmap	A			Perl 6 Whatever							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Any%29_method_deepmap
Whatever.defined	A			Perl 6 Whatever							<section class="prog__container"><pre><code>multi sub    defined(Mu --&gt; Bool:D)multi method defined(   --&gt; Bool:D)</code></pre><p>Returns False on the type object, and True otherwise.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_routine_defined
Whatever.does	A			Perl 6 Whatever							<section class="prog__container"><pre><code>method does(Mu $type --&gt; Bool:D)</code></pre><p>Returns True if and only if the invocant conforms to type $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_routine_does
Whatever.duckmap	A			Perl 6 Whatever							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Any%29_method_duckmap
Whatever.eager	A			Perl 6 Whatever							<section class="prog__container"><p>Interprets the invocant as a list, evaluates it eagerly, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Any%29_method_eager
Whatever.elems	A			Perl 6 Whatever							<section class="prog__container"><p>Interprets the invocant as a list, and returns the number of elements in the list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Any%29_method_elems
Whatever.emit	A			Perl 6 Whatever							<section class="prog__container"><pre><code>method emit()</code></pre><p>Emits the invocant into the enclosing supply or react block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_method_emit
Whatever.end	A			Perl 6 Whatever							<section class="prog__container"><p>Interprets the invocant as a list, and returns the last index of that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Any%29_method_end
Whatever.exit	A			Perl 6 Whatever							<section class="prog__container"><pre><code>sub exit(Int() $status = 0)</code></pre><p>Exits the current process with return code $status.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Any%29_sub_exit
Whatever.export	A			Perl 6 Whatever							<section class="prog__container"><pre><code>multi sub trait_mod:&lt;is&gt;(Mu:U &#92;type, :$export!)</code></pre><p>Marks a type as being exported, that is, available to external users.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_trait_is_export
Whatever.flat	A			Perl 6 Whatever							<section class="prog__container"><p>Interprets the invocant as a list, flattens it, and returns that list.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Any%29_method_flat
Whatever.gist	A			Perl 6 Whatever							<section class="prog__container"><pre><code>multi sub    gist(Mu --&gt; Str)multi method gist(   --&gt; Str)</code></pre><p>Returns a string representation of the invocant, optimized for fast recognition by humans.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_routine_gist
Whatever.isa	A			Perl 6 Whatever							<section class="prog__container"><pre><code>multi method isa(Mu $type     --&gt; Bool:D)multi method isa(Str:D $type  --&gt; Bool:D)</code></pre><p>Returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_routine_isa
Whatever.item	A			Perl 6 Whatever							<section class="prog__container"><pre><code>method item(Mu &#92;item:) is raw</code></pre><p>Forces the invocant to be evaluated in item context and returns the value of it.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_method_item
Whatever.list	A			Perl 6 Whatever							<section class="prog__container"><p>Interprets the invocant as a list, and returns that List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Any%29_method_list
Whatever.map	A			Perl 6 Whatever							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Any%29_method_map
Whatever.new	A			Perl 6 Whatever							<section class="prog__container"><pre><code>multi method new(*%attrinit)</code></pre><p>Default method for constructing (create + initialize) new objects of a class.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_method_new
Whatever.none	A			Perl 6 Whatever							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Any%29_method_none
Whatever.not	A			Perl 6 Whatever							<section class="prog__container"><pre><code>method not()</code></pre><p>Returns a Bool value representing the logical negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_method_not
Whatever.one	A			Perl 6 Whatever							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Any%29_method_one
Whatever.pairup	A			Perl 6 Whatever							<section class="prog__container"><pre><code>method pairup(--&gt; List)</code></pre><p>Interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Any%29_method_pairup
Whatever.perl	A			Perl 6 Whatever							<section class="prog__container"><pre><code>multi sub    perl(Mu --&gt; Str)multi method perl(   --&gt; Str)</code></pre><p>Returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_routine_perl
Whatever.print	A			Perl 6 Whatever							<section class="prog__container"><pre><code>multi method print(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .Str method without adding a newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_method_print
Whatever.push	A			Perl 6 Whatever							<section class="prog__container"><p>The method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Any%29_method_push
Whatever.put	A			Perl 6 Whatever							<section class="prog__container"><pre><code>multi method put(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_method_put
Whatever.return	A			Perl 6 Whatever							<section class="prog__container"><pre><code>method return()</code></pre><p>The method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_method_return
Whatever.return-rw	A			Perl 6 Whatever							<section class="prog__container"><p>Same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_method_return-rw
Whatever.reverse	A			Perl 6 Whatever							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Any%29_routine_reverse
Whatever.say	A			Perl 6 Whatever							<section class="prog__container"><pre><code>multi method say(--&gt; Bool:D)</code></pre><p>Prints value to $*OUT after stringification using .gist method with newline at end.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_method_say
Whatever.so	A			Perl 6 Whatever							<section class="prog__container"><pre><code>method so()</code></pre><p>Returns a Bool value representing the logical non-negation of an expression.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_method_so
Whatever.sort	A			Perl 6 Whatever							<section class="prog__container"><p>Sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Any%29_method_sort
Whatever.take	A			Perl 6 Whatever							<section class="prog__container"><pre><code>method take()</code></pre><p>Returns the invocant in the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_method_take
Whatever.take	A			Perl 6 Whatever							<section class="prog__container"><pre><code>sub take(&#92;item)</code></pre><p>Takes the given item and passes it to the enclosing gather block.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_routine_take
Whatever.take-rw	A			Perl 6 Whatever							<section class="prog__container"><pre><code>sub take-rw(&#92;item)</code></pre><p>Returns the given item to the enclosing gather block, without introducing a new container.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/Whatever.html#%28Mu%29_routine_take-rw
WhateverCode.ACCEPTS	A			Perl 6 WhateverCode							<section class="prog__container"><pre><code>multi method ACCEPTS(Code:D: Mu $topic)</code></pre><p>Usually calls the code object and passes $topic as an argument.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/WhateverCode.html#%28Code%29_method_ACCEPTS
WhateverCode.ACCEPTS	R	Callable.ACCEPTS										
WhateverCode.ACCEPTS	R	Callable.ACCEPTS										
WhateverCode.Bool	R	Callable.Bool										
WhateverCode.CALL-ME	R	Callable.CALL-ME										
WhateverCode.CREATE	R	Callable.CREATE										
WhateverCode.Str	A			Perl 6 WhateverCode							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/WhateverCode.html#%28Code%29_method_Str
WhateverCode.Str	R	Callable.Str										
WhateverCode.WHERE	R	Callable.WHERE										
WhateverCode.WHICH	R	Callable.WHICH										
WhateverCode.WHY	R	Callable.WHY										
WhateverCode.all	R	Callable.all										
WhateverCode.any	R	Callable.any										
WhateverCode.arity	A			Perl 6 WhateverCode							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/WhateverCode.html#%28Code%29_method_arity
WhateverCode.assuming	R	Callable.assuming										
WhateverCode.bless	R	Callable.bless										
WhateverCode.clone	R	Callable.clone										
WhateverCode.count	A			Perl 6 WhateverCode							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/WhateverCode.html#%28Code%29_method_count
WhateverCode.deepmap	R	Callable.deepmap										
WhateverCode.defined	R	Callable.defined										
WhateverCode.does	R	Callable.does										
WhateverCode.duckmap	R	Callable.duckmap										
WhateverCode.eager	R	Callable.eager										
WhateverCode.elems	R	Callable.elems										
WhateverCode.emit	R	Callable.emit										
WhateverCode.end	R	Callable.end										
WhateverCode.exit	R	Callable.exit										
WhateverCode.export	R	Callable.export										
WhateverCode.file	A			Perl 6 WhateverCode							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/WhateverCode.html#%28Code%29_method_file
WhateverCode.flat	R	Callable.flat										
WhateverCode.gist	R	Callable.gist										
WhateverCode.isa	R	Callable.isa										
WhateverCode.item	R	Callable.item										
WhateverCode.line	A			Perl 6 WhateverCode							<section class="prog__container"><p>Defined as&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/WhateverCode.html#%28Code%29_method_line
WhateverCode.list	R	Callable.list										
WhateverCode.map	R	Callable.map										
WhateverCode.new	R	Callable.new										
WhateverCode.none	R	Callable.none										
WhateverCode.not	R	Callable.not										
WhateverCode.one	R	Callable.one										
WhateverCode.pairup	R	Callable.pairup										
WhateverCode.perl	R	Callable.perl										
WhateverCode.print	R	Callable.print										
WhateverCode.push	R	Callable.push										
WhateverCode.put	R	Callable.put										
WhateverCode.return	R	Callable.return										
WhateverCode.return-rw	R	Callable.return-rw										
WhateverCode.reverse	R	Callable.reverse										
WhateverCode.say	R	Callable.say										
WhateverCode.signature	A			Perl 6 WhateverCode							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/WhateverCode.html#%28Code%29_method_signature
WhateverCode.so	R	Callable.so										
WhateverCode.sort	R	Callable.sort										
WhateverCode.take	R	Callable.take										
WhateverCode.take	R	Callable.take										
WhateverCode.take-rw	R	Callable.take-rw										
WrapHandle.restore	A			Perl 6 WrapHandle							<section class="prog__container"><pre><code>method restore(--&gt; Bool:D)</code></pre><p>Unwraps a wrapped routine and returns Bool::True on success.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/WrapHandle.html#method_restore
abs	D								*[[Complex.abs]], defined as:\n*[[ComplexStr.abs]], defined as:\n*[[Cool.abs]], defined as:\n*[[Duration.abs]], defined as:\n*[[FatRat.abs]], defined as:\n*[[Hash.abs]], defined as:\n*[[Instant.abs]], defined as:\n*[[Int.abs]], defined as:\n*[[Iterable.abs]], defined as:\n*[[List.abs]], defined as:\n*[[Map.abs]], defined as:\n*[[Match.abs]], defined as:\n*[[Nil.abs]], defined as:\n*[[Num.abs]], defined as:\n*[[Numeric.abs]], returns the absolute value of the number.\n*[[Range.abs]], defined as:\n*[[Rat.abs]], defined as:\n*[[Rational.abs]], defined as:\n*[[Real.abs]], defined as:\n*[[Seq.abs]], defined as:\n*[[Stash.abs]], defined as:\n*[[Str.abs]], defined as:			
acos	D								*[[Complex.acos]], defined as:\n*[[Cool.acos]], defined as:\n*[[Duration.acos]], defined as:\n*[[FatRat.acos]], defined as:\n*[[Hash.acos]], defined as:\n*[[Instant.acos]], defined as:\n*[[Int.acos]], defined as:\n*[[Iterable.acos]], defined as:\n*[[List.acos]], defined as:\n*[[Map.acos]], defined as:\n*[[Match.acos]], defined as:\n*[[Nil.acos]], defined as:\n*[[Num.acos]], defined as:\n*[[Numeric.acos]], defined as:\n*[[Range.acos]], defined as:\n*[[Rat.acos]], defined as:\n*[[Rational.acos]], defined as:\n*[[Real.acos]], defined as:\n*[[Seq.acos]], defined as:\n*[[Stash.acos]], defined as:\n*[[Str.acos]], defined as:			
acosec	D								*[[Complex.acosec]], defined as:\n*[[Cool.acosec]], defined as:\n*[[Duration.acosec]], defined as:\n*[[FatRat.acosec]], defined as:\n*[[Hash.acosec]], defined as:\n*[[Instant.acosec]], defined as:\n*[[Int.acosec]], defined as:\n*[[Iterable.acosec]], defined as:\n*[[List.acosec]], defined as:\n*[[Map.acosec]], defined as:\n*[[Match.acosec]], defined as:\n*[[Nil.acosec]], defined as:\n*[[Num.acosec]], defined as:\n*[[Numeric.acosec]], defined as:\n*[[Range.acosec]], defined as:\n*[[Rat.acosec]], defined as:\n*[[Rational.acosec]], defined as:\n*[[Real.acosec]], defined as:\n*[[Seq.acosec]], defined as:\n*[[Stash.acosec]], defined as:\n*[[Str.acosec]], defined as:			
acosech	D								*[[Complex.acosech]], defined as:\n*[[Cool.acosech]], defined as:\n*[[Duration.acosech]], defined as:\n*[[FatRat.acosech]], defined as:\n*[[Hash.acosech]], defined as:\n*[[Instant.acosech]], defined as:\n*[[Int.acosech]], defined as:\n*[[Iterable.acosech]], defined as:\n*[[List.acosech]], defined as:\n*[[Map.acosech]], defined as:\n*[[Match.acosech]], defined as:\n*[[Nil.acosech]], defined as:\n*[[Num.acosech]], defined as:\n*[[Numeric.acosech]], defined as:\n*[[Range.acosech]], defined as:\n*[[Rat.acosech]], defined as:\n*[[Rational.acosech]], defined as:\n*[[Real.acosech]], defined as:\n*[[Seq.acosech]], defined as:\n*[[Stash.acosech]], defined as:\n*[[Str.acosech]], defined as:			
acosh	D								*[[Complex.acosh]], defined as:\n*[[Cool.acosh]], defined as:\n*[[Duration.acosh]], defined as:\n*[[FatRat.acosh]], defined as:\n*[[Hash.acosh]], defined as:\n*[[Instant.acosh]], defined as:\n*[[Int.acosh]], defined as:\n*[[Iterable.acosh]], defined as:\n*[[List.acosh]], defined as:\n*[[Map.acosh]], defined as:\n*[[Match.acosh]], defined as:\n*[[Nil.acosh]], defined as:\n*[[Num.acosh]], defined as:\n*[[Numeric.acosh]], defined as:\n*[[Range.acosh]], defined as:\n*[[Rat.acosh]], defined as:\n*[[Rational.acosh]], defined as:\n*[[Real.acosh]], defined as:\n*[[Seq.acosh]], defined as:\n*[[Stash.acosh]], defined as:\n*[[Str.acosh]], defined as:			
acotan	D								*[[Complex.acotan]], defined as:\n*[[Cool.acotan]], defined as:\n*[[Duration.acotan]], defined as:\n*[[FatRat.acotan]], defined as:\n*[[Hash.acotan]], defined as:\n*[[Instant.acotan]], defined as:\n*[[Int.acotan]], defined as:\n*[[Iterable.acotan]], defined as:\n*[[List.acotan]], defined as:\n*[[Map.acotan]], defined as:\n*[[Match.acotan]], defined as:\n*[[Nil.acotan]], defined as:\n*[[Num.acotan]], defined as:\n*[[Numeric.acotan]], defined as:\n*[[Range.acotan]], defined as:\n*[[Rat.acotan]], defined as:\n*[[Rational.acotan]], defined as:\n*[[Real.acotan]], defined as:\n*[[Seq.acotan]], defined as:\n*[[Stash.acotan]], defined as:\n*[[Str.acotan]], defined as:			
acotanh	D								*[[Complex.acotanh]], defined as:\n*[[Cool.acotanh]], defined as:\n*[[Duration.acotanh]], defined as:\n*[[FatRat.acotanh]], defined as:\n*[[Hash.acotanh]], defined as:\n*[[Instant.acotanh]], defined as:\n*[[Int.acotanh]], defined as:\n*[[Iterable.acotanh]], defined as:\n*[[List.acotanh]], defined as:\n*[[Map.acotanh]], defined as:\n*[[Match.acotanh]], defined as:\n*[[Nil.acotanh]], defined as:\n*[[Num.acotanh]], defined as:\n*[[Numeric.acotanh]], defined as:\n*[[Range.acotanh]], defined as:\n*[[Rat.acotanh]], defined as:\n*[[Rational.acotanh]], defined as:\n*[[Real.acotanh]], defined as:\n*[[Seq.acotanh]], defined as:\n*[[Stash.acotanh]], defined as:\n*[[Str.acotanh]], defined as:			
acquire	R	Semaphore.acquire										
all	D								*[[AST.all]], defined as:\n*[[Any.all]], defined as:\n*[[Attribute.all]], defined as:\n*[[Bag.all]], defined as:\n*[[BagHash.all]], defined as:\n*[[CallFrame.all]], defined as:\n*[[Callable.all]], defined as:\n*[[Cancellation.all]], defined as:\n*[[Capture.all]], defined as:\n*[[Channel.all]], defined as:\n*[[Code.all]], defined as:\n*[[Complex.all]], defined as:\n*[[Cool.all]], defined as:\n*[[CurrentThreadScheduler.all]], defined as:\n*[[Cursor.all]], defined as:\n*[[Date.all]], defined as:\n*[[DateTime.all]], defined as:\n*[[Duration.all]], defined as:\n*[[Exception.all]], defined as:\n*[[Failure.all]], defined as:\n*[[FatRat.all]], defined as:\n*[[Grammar.all]], defined as:\n*[[Hash.all]], defined as:\n*[[Instant.all]], defined as:\n*[[Int.all]], defined as:\n*[[Iterable.all]], defined as:\n*[[Label.all]], defined as:\n*[[List.all]], defined as:\n*[[Lock.all]], defined as:\n*[[Map.all]], defined as:\n*[[Match.all]], defined as:\n*[[Mix.all]], defined as:\n*[[MixHash.all]], defined as:\n*[[Nil.all]], defined as:\n*[[Num.all]], defined as:\n*[[Numeric.all]], defined as:\n*[[ObjAt.all]], defined as:\n*[[Pair.all]], defined as:\n*[[Parameter.all]], defined as:\n*[[Positional.all]], defined as:\n*[[Proc.all]], defined as:\n*[[Promise.all]], defined as:\n*[[Proxy.all]], defined as:\n*[[Range.all]], defined as:\n*[[Rat.all]], defined as:\n*[[Rational.all]], defined as:\n*[[Real.all]], defined as:\n*[[Scalar.all]], defined as:\n*[[Semaphore.all]], defined as:\n*[[Seq.all]], defined as:\n*[[Set.all]], defined as:\n*[[SetHash.all]], defined as:\n*[[Signature.all]], defined as:\n*[[Stash.all]], defined as:\n*[[Str.all]], defined as:\n*[[Supplier.all]], defined as:\n*[[Tap.all]], defined as:\n*[[Thread.all]], defined as:\n*[[ThreadPoolScheduler.all]], defined as:\n*[[Uni.all]], defined as:\n*[[Variable.all]], defined as:\n*[[Version.all]], defined as:\n*[[Whatever.all]], defined as:\n*[[supplies.all]], defined as:			
allof	R	Promise.allof										
antipair	R	Pair.antipair										
antipairs	D								*[[Array.antipairs]], defined as:\n*[[Backtrace.antipairs]], defined as:\n*[[Bag.antipairs]], defined as:\n*[[BagHash.antipairs]], defined as:\n*[[Baggy.antipairs]], defined as:\n*[[Capture.antipairs]], defined as:\n*[[Hash.antipairs]], defined as:\n*[[List.antipairs]], defined as:\n*[[Map.antipairs]], defined as:\n*[[Match.antipairs]], defined as:\n*[[Mix.antipairs]], defined as:\n*[[MixHash.antipairs]], defined as:\n*[[Mixy.antipairs]], defined as:\n*[[Pair.antipairs]], defined as:\n*[[Slip.antipairs]], defined as:\n*[[Stash.antipairs]], defined as:			
any	D								*[[AST.any]], defined as:\n*[[Any.any]], defined as:\n*[[Attribute.any]], defined as:\n*[[Bag.any]], defined as:\n*[[BagHash.any]], defined as:\n*[[CallFrame.any]], defined as:\n*[[Callable.any]], defined as:\n*[[Cancellation.any]], defined as:\n*[[Capture.any]], defined as:\n*[[Channel.any]], defined as:\n*[[Code.any]], defined as:\n*[[Complex.any]], defined as:\n*[[Cool.any]], defined as:\n*[[CurrentThreadScheduler.any]], defined as:\n*[[Cursor.any]], defined as:\n*[[Date.any]], defined as:\n*[[DateTime.any]], defined as:\n*[[Duration.any]], defined as:\n*[[Exception.any]], defined as:\n*[[Failure.any]], defined as:\n*[[FatRat.any]], defined as:\n*[[Grammar.any]], defined as:\n*[[Hash.any]], defined as:\n*[[Instant.any]], defined as:\n*[[Int.any]], defined as:\n*[[Iterable.any]], defined as:\n*[[Label.any]], defined as:\n*[[List.any]], defined as:\n*[[Lock.any]], defined as:\n*[[Map.any]], defined as:\n*[[Match.any]], defined as:\n*[[Mix.any]], defined as:\n*[[MixHash.any]], defined as:\n*[[Nil.any]], defined as:\n*[[Num.any]], defined as:\n*[[Numeric.any]], defined as:\n*[[ObjAt.any]], defined as:\n*[[Pair.any]], defined as:\n*[[Parameter.any]], defined as:\n*[[Positional.any]], defined as:\n*[[Proc.any]], defined as:\n*[[Promise.any]], defined as:\n*[[Proxy.any]], defined as:\n*[[Range.any]], defined as:\n*[[Rat.any]], defined as:\n*[[Rational.any]], defined as:\n*[[Real.any]], defined as:\n*[[Scalar.any]], defined as:\n*[[Semaphore.any]], defined as:\n*[[Seq.any]], defined as:\n*[[Set.any]], defined as:\n*[[SetHash.any]], defined as:\n*[[Signature.any]], defined as:\n*[[Stash.any]], defined as:\n*[[Str.any]], defined as:\n*[[Supplier.any]], defined as:\n*[[Tap.any]], defined as:\n*[[Thread.any]], defined as:\n*[[ThreadPoolScheduler.any]], defined as:\n*[[Uni.any]], defined as:\n*[[Variable.any]], defined as:\n*[[Version.any]], defined as:\n*[[Whatever.any]], defined as:\n*[[supplies.any]], defined as:			
anyof	R	Promise.anyof										
app_lifetime	R	Thread.app_lifetime										
append	D								*[[Array.append]], defined as\n*[[Hash.append]], defined as:\n*[[Nil.append]], warns the user that they tried to append onto a Nil.\n*[[Stash.append]], defined as:			
arity	D								*[[Block.arity]], defined as:\n*[[Code.arity]], defined as:\n*[[Macro.arity]], defined as:\n*[[Method.arity]], defined as:\n*[[Regex.arity]], defined as:\n*[[Routine.arity]], defined as:\n*[[Signature.arity]], returns the minimal number of positional arguments required to satisfy the signature.\n*[[Sub.arity]], defined as:\n*[[Submethod.arity]], defined as:\n*[[WhateverCode.arity]], defined as:			
asec	D								*[[Complex.asec]], defined as:\n*[[Cool.asec]], defined as:\n*[[Duration.asec]], defined as:\n*[[FatRat.asec]], defined as:\n*[[Hash.asec]], defined as:\n*[[Instant.asec]], defined as:\n*[[Int.asec]], defined as:\n*[[Iterable.asec]], defined as:\n*[[List.asec]], defined as:\n*[[Map.asec]], defined as:\n*[[Match.asec]], defined as:\n*[[Nil.asec]], defined as:\n*[[Num.asec]], defined as:\n*[[Numeric.asec]], defined as:\n*[[Range.asec]], defined as:\n*[[Rat.asec]], defined as:\n*[[Rational.asec]], defined as:\n*[[Real.asec]], defined as:\n*[[Seq.asec]], defined as:\n*[[Stash.asec]], defined as:\n*[[Str.asec]], defined as:			
asech	D								*[[Complex.asech]], defined as:\n*[[Cool.asech]], defined as:\n*[[Duration.asech]], defined as:\n*[[FatRat.asech]], defined as:\n*[[Hash.asech]], defined as:\n*[[Instant.asech]], defined as:\n*[[Int.asech]], defined as:\n*[[Iterable.asech]], defined as:\n*[[List.asech]], defined as:\n*[[Map.asech]], defined as:\n*[[Match.asech]], defined as:\n*[[Nil.asech]], defined as:\n*[[Num.asech]], defined as:\n*[[Numeric.asech]], defined as:\n*[[Range.asech]], defined as:\n*[[Rat.asech]], defined as:\n*[[Rational.asech]], defined as:\n*[[Real.asech]], defined as:\n*[[Seq.asech]], defined as:\n*[[Stash.asech]], defined as:\n*[[Str.asech]], defined as:			
asin	D								*[[Complex.asin]], defined as:\n*[[Cool.asin]], defined as:\n*[[Duration.asin]], defined as:\n*[[FatRat.asin]], defined as:\n*[[Hash.asin]], defined as:\n*[[Instant.asin]], defined as:\n*[[Int.asin]], defined as:\n*[[Iterable.asin]], defined as:\n*[[List.asin]], defined as:\n*[[Map.asin]], defined as:\n*[[Match.asin]], defined as:\n*[[Nil.asin]], defined as:\n*[[Num.asin]], defined as:\n*[[Numeric.asin]], defined as:\n*[[Range.asin]], defined as:\n*[[Rat.asin]], defined as:\n*[[Rational.asin]], defined as:\n*[[Real.asin]], defined as:\n*[[Seq.asin]], defined as:\n*[[Stash.asin]], defined as:\n*[[Str.asin]], defined as:			
asinh	D								*[[Complex.asinh]], defined as:\n*[[Cool.asinh]], defined as:\n*[[Duration.asinh]], defined as:\n*[[FatRat.asinh]], defined as:\n*[[Hash.asinh]], defined as:\n*[[Instant.asinh]], defined as:\n*[[Int.asinh]], defined as:\n*[[Iterable.asinh]], defined as:\n*[[List.asinh]], defined as:\n*[[Map.asinh]], defined as:\n*[[Match.asinh]], defined as:\n*[[Nil.asinh]], defined as:\n*[[Num.asinh]], defined as:\n*[[Numeric.asinh]], defined as:\n*[[Range.asinh]], defined as:\n*[[Rat.asinh]], defined as:\n*[[Rational.asinh]], defined as:\n*[[Real.asinh]], defined as:\n*[[Seq.asinh]], defined as:\n*[[Stash.asinh]], defined as:\n*[[Str.asinh]], defined as:			
assuming	D								*[[Callable.assuming]], returns a Callable that implements the same behaviour as the original, but has the values passed to .assuming already bound to the corresponding parameters.\n*[[Code.assuming]], returns a Callable that implements the same behaviour as the original, but has the values passed to .assuming already bound to the corresponding parameters.			
ast	R	Match.ast										
at	R	Promise.at										
atan	D								*[[Complex.atan]], defined as:\n*[[Cool.atan]], defined as:\n*[[Duration.atan]], defined as:\n*[[FatRat.atan]], defined as:\n*[[Hash.atan]], defined as:\n*[[Instant.atan]], defined as:\n*[[Int.atan]], defined as:\n*[[Iterable.atan]], defined as:\n*[[List.atan]], defined as:\n*[[Map.atan]], defined as:\n*[[Match.atan]], defined as:\n*[[Nil.atan]], defined as:\n*[[Num.atan]], defined as:\n*[[Numeric.atan]], defined as:\n*[[Range.atan]], defined as:\n*[[Rat.atan]], defined as:\n*[[Rational.atan]], defined as:\n*[[Real.atan]], defined as:\n*[[Seq.atan]], defined as:\n*[[Stash.atan]], defined as:\n*[[Str.atan]], defined as:			
atan2	D								*[[Complex.atan2]], defined as:\n*[[Cool.atan2]], defined as:\n*[[Duration.atan2]], defined as:\n*[[FatRat.atan2]], defined as:\n*[[Hash.atan2]], defined as:\n*[[Instant.atan2]], defined as:\n*[[Int.atan2]], defined as:\n*[[Iterable.atan2]], defined as:\n*[[List.atan2]], defined as:\n*[[Map.atan2]], defined as:\n*[[Match.atan2]], defined as:\n*[[Nil.atan2]], defined as:\n*[[Num.atan2]], defined as:\n*[[Numeric.atan2]], defined as:\n*[[Range.atan2]], defined as:\n*[[Rat.atan2]], defined as:\n*[[Rational.atan2]], defined as:\n*[[Real.atan2]], defined as:\n*[[Seq.atan2]], defined as:\n*[[Stash.atan2]], defined as:\n*[[Str.atan2]], defined as:			
atanh	D								*[[Complex.atanh]], defined as:\n*[[Cool.atanh]], defined as:\n*[[Duration.atanh]], defined as:\n*[[FatRat.atanh]], defined as:\n*[[Hash.atanh]], defined as:\n*[[Instant.atanh]], defined as:\n*[[Int.atanh]], defined as:\n*[[Iterable.atanh]], defined as:\n*[[List.atanh]], defined as:\n*[[Map.atanh]], defined as:\n*[[Match.atanh]], defined as:\n*[[Nil.atanh]], defined as:\n*[[Num.atanh]], defined as:\n*[[Numeric.atanh]], defined as:\n*[[Range.atanh]], defined as:\n*[[Rat.atanh]], defined as:\n*[[Rational.atanh]], defined as:\n*[[Real.atanh]], defined as:\n*[[Seq.atanh]], defined as:\n*[[Stash.atanh]], defined as:\n*[[Str.atanh]], defined as:			
await	D								*[[Channel.await]], defined as:\n*[[Promise.await]], waits until one or more promises are all fulfilled, and then returns their values.			
backtrace	R	Exception.backtrace										
bag	R	Bag.bag										
base	D								*[[Duration.base]], converts the number to a string, using $base as base.\n*[[FatRat.base]], converts the number to a string, using $base as base.\n*[[Instant.base]], converts the number to a string, using $base as base.\n*[[Int.base]], converts the number to a string, using $base as base.\n*[[Num.base]], converts the number to a string, using $base as base.\n*[[Rat.base]], converts the number to a string, using $base as base.\n*[[Rational.base]], converts the number to a string, using $base as base.\n*[[Real.base]], converts the number to a string, using $base as base.			
base-repeating	D								*[[FatRat.base-repeating]], returns a list of two strings that, when concatenated, represent the number in base $base.\n*[[Rat.base-repeating]], returns a list of two strings that, when concatenated, represent the number in base $base.\n*[[Rational.base-repeating]], returns a list of two strings that, when concatenated, represent the number in base $base.			
batch	R	Supply.batch										
bless	D								*[[AST.bless]], lower-level object construction method than new.\n*[[Any.bless]], lower-level object construction method than new.\n*[[Attribute.bless]], lower-level object construction method than new.\n*[[Bag.bless]], lower-level object construction method than new.\n*[[BagHash.bless]], lower-level object construction method than new.\n*[[CallFrame.bless]], lower-level object construction method than new.\n*[[Callable.bless]], lower-level object construction method than new.\n*[[Cancellation.bless]], lower-level object construction method than new.\n*[[Capture.bless]], lower-level object construction method than new.\n*[[Channel.bless]], lower-level object construction method than new.\n*[[Code.bless]], lower-level object construction method than new.\n*[[Complex.bless]], lower-level object construction method than new.\n*[[Cool.bless]], lower-level object construction method than new.\n*[[CurrentThreadScheduler.bless]], lower-level object construction method than new.\n*[[Cursor.bless]], lower-level object construction method than new.\n*[[Date.bless]], lower-level object construction method than new.\n*[[DateTime.bless]], lower-level object construction method than new.\n*[[Duration.bless]], lower-level object construction method than new.\n*[[Exception.bless]], lower-level object construction method than new.\n*[[Failure.bless]], lower-level object construction method than new.\n*[[FatRat.bless]], lower-level object construction method than new.\n*[[Grammar.bless]], lower-level object construction method than new.\n*[[Hash.bless]], lower-level object construction method than new.\n*[[Instant.bless]], lower-level object construction method than new.\n*[[Int.bless]], lower-level object construction method than new.\n*[[Iterable.bless]], lower-level object construction method than new.\n*[[Junction.bless]], lower-level object construction method than new.\n*[[Label.bless]], lower-level object construction method than new.\n*[[List.bless]], lower-level object construction method than new.\n*[[Lock.bless]], lower-level object construction method than new.\n*[[Map.bless]], lower-level object construction method than new.\n*[[Match.bless]], lower-level object construction method than new.\n*[[Mix.bless]], lower-level object construction method than new.\n*[[MixHash.bless]], lower-level object construction method than new.\n*[[Mu.bless]], lower-level object construction method than new.\n*[[Nil.bless]], lower-level object construction method than new.\n*[[Num.bless]], lower-level object construction method than new.\n*[[Numeric.bless]], lower-level object construction method than new.\n*[[ObjAt.bless]], lower-level object construction method than new.\n*[[Pair.bless]], lower-level object construction method than new.\n*[[Parameter.bless]], lower-level object construction method than new.\n*[[Positional.bless]], lower-level object construction method than new.\n*[[Proc.bless]], lower-level object construction method than new.\n*[[Promise.bless]], lower-level object construction method than new.\n*[[Proxy.bless]], lower-level object construction method than new.\n*[[Range.bless]], lower-level object construction method than new.\n*[[Rat.bless]], lower-level object construction method than new.\n*[[Rational.bless]], lower-level object construction method than new.\n*[[Real.bless]], lower-level object construction method than new.\n*[[Scalar.bless]], lower-level object construction method than new.\n*[[Semaphore.bless]], lower-level object construction method than new.\n*[[Seq.bless]], lower-level object construction method than new.\n*[[Set.bless]], lower-level object construction method than new.\n*[[SetHash.bless]], lower-level object construction method than new.\n*[[Signature.bless]], lower-level object construction method than new.\n*[[Stash.bless]], lower-level object construction method than new.\n*[[Str.bless]], lower-level object construction method than new.\n*[[Supplier.bless]], lower-level object construction method than new.\n*[[Tap.bless]], lower-level object construction method than new.\n*[[Thread.bless]], lower-level object construction method than new.\n*[[ThreadPoolScheduler.bless]], lower-level object construction method than new.\n*[[Uni.bless]], lower-level object construction method than new.\n*[[Variable.bless]], lower-level object construction method than new.\n*[[Version.bless]], lower-level object construction method than new.\n*[[Whatever.bless]], lower-level object construction method than new.\n*[[supplies.bless]], lower-level object construction method than new.			
bounds	R	Range.bounds										
break	R	Promise.break										
bytes	D								*[[Blob.bytes]], defined as:\n*[[Buf.bytes]], defined as:			
cache	D								*[[PositionalBindFailover.cache]], returns a List based on the iterator method, and caches it.\n*[[Seq.cache]], returns a List based on the iterator method, and caches it.			
cached	D								*[[Macro.cached]], nOTE: this feature is currently EXPERIMENTAL.\n*[[Method.cached]], nOTE: this feature is currently EXPERIMENTAL.\n*[[Regex.cached]], nOTE: this feature is currently EXPERIMENTAL.\n*[[Routine.cached]], nOTE: this feature is currently EXPERIMENTAL.\n*[[Sub.cached]], nOTE: this feature is currently EXPERIMENTAL.\n*[[Submethod.cached]], nOTE: this feature is currently EXPERIMENTAL.			
callframe	R	CallFrame.callframe										
cancel	R	Cancellation.cancel										
candidates	D								*[[Macro.candidates]], returns a list of multi candidates, or a one-element list with itself if it's not a multi\n*[[Method.candidates]], returns a list of multi candidates, or a one-element list with itself if it's not a multi\n*[[Regex.candidates]], returns a list of multi candidates, or a one-element list with itself if it's not a multi\n*[[Routine.candidates]], returns a list of multi candidates, or a one-element list with itself if it's not a multi\n*[[Sub.candidates]], returns a list of multi candidates, or a one-element list with itself if it's not a multi\n*[[Submethod.candidates]], returns a list of multi candidates, or a one-element list with itself if it's not a multi			
cando	D								*[[Macro.cando]], returns a possibly-empty list of candidates that can be called with the given Capture, ordered by narrowest candidate first.\n*[[Method.cando]], returns a possibly-empty list of candidates that can be called with the given Capture, ordered by narrowest candidate first.\n*[[Regex.cando]], returns a possibly-empty list of candidates that can be called with the given Capture, ordered by narrowest candidate first.\n*[[Routine.cando]], returns a possibly-empty list of candidates that can be called with the given Capture, ordered by narrowest candidate first.\n*[[Sub.cando]], returns a possibly-empty list of candidates that can be called with the given Capture, ordered by narrowest candidate first.\n*[[Submethod.cando]], returns a possibly-empty list of candidates that can be called with the given Capture, ordered by narrowest candidate first.			
caps	R	Match.caps										
capture	R	Parameter.capture										
categorize	D								*[[Array.categorize]], defined as:\n*[[Backtrace.categorize]], defined as:\n*[[List.categorize]], defined as:\n*[[Slip.categorize]], defined as:			
categorize-list	D								*[[Bag.categorize-list]], defined as:\n*[[BagHash.categorize-list]], defined as:\n*[[Baggy.categorize-list]], defined as:\n*[[Hash.categorize-list]], defined as:\n*[[Mix.categorize-list]], defined as:\n*[[MixHash.categorize-list]], defined as:\n*[[Mixy.categorize-list]], defined as:\n*[[Stash.categorize-list]], defined as:			
cause	R	Promise.cause										
ceiling	D								*[[Complex.ceiling]], defined as:\n*[[ComplexStr.ceiling]], defined as:\n*[[Cool.ceiling]], defined as:\n*[[Duration.ceiling]], defined as:\n*[[FatRat.ceiling]], defined as:\n*[[Hash.ceiling]], defined as:\n*[[Instant.ceiling]], defined as:\n*[[Int.ceiling]], defined as:\n*[[Iterable.ceiling]], defined as:\n*[[List.ceiling]], defined as:\n*[[Map.ceiling]], defined as:\n*[[Match.ceiling]], defined as:\n*[[Nil.ceiling]], defined as:\n*[[Num.ceiling]], defined as:\n*[[Numeric.ceiling]], defined as:\n*[[Range.ceiling]], defined as:\n*[[Rat.ceiling]], defined as:\n*[[Rational.ceiling]], defined as:\n*[[Real.ceiling]], defined as:\n*[[Seq.ceiling]], defined as:\n*[[Stash.ceiling]], defined as:\n*[[Str.ceiling]], defined as:			
chars	D								*[[Complex.chars]], defined as:\n*[[ComplexStr.chars]], returns the number of characters in the string in graphemes.\n*[[Cool.chars]], defined as:\n*[[Duration.chars]], defined as:\n*[[FatRat.chars]], defined as:\n*[[Hash.chars]], defined as:\n*[[Instant.chars]], defined as:\n*[[Int.chars]], defined as:\n*[[IntStr.chars]], returns the number of characters in the string in graphemes.\n*[[Iterable.chars]], defined as:\n*[[List.chars]], defined as:\n*[[Map.chars]], defined as:\n*[[Match.chars]], defined as:\n*[[Nil.chars]], defined as:\n*[[Num.chars]], defined as:\n*[[NumStr.chars]], returns the number of characters in the string in graphemes.\n*[[Numeric.chars]], defined as:\n*[[Range.chars]], defined as:\n*[[Rat.chars]], defined as:\n*[[RatStr.chars]], returns the number of characters in the string in graphemes.\n*[[Rational.chars]], defined as:\n*[[Real.chars]], defined as:\n*[[Seq.chars]], defined as:\n*[[Stash.chars]], defined as:\n*[[Str.chars]], defined as:			
chomp	D								*[[Complex.chomp]], defined as:\n*[[ComplexStr.chomp]], defined as:\n*[[Cool.chomp]], defined as:\n*[[Duration.chomp]], defined as:\n*[[FatRat.chomp]], defined as:\n*[[Hash.chomp]], defined as:\n*[[Instant.chomp]], defined as:\n*[[Int.chomp]], defined as:\n*[[IntStr.chomp]], defined as:\n*[[Iterable.chomp]], defined as:\n*[[List.chomp]], defined as:\n*[[Map.chomp]], defined as:\n*[[Match.chomp]], defined as:\n*[[Nil.chomp]], defined as:\n*[[Num.chomp]], defined as:\n*[[NumStr.chomp]], defined as:\n*[[Numeric.chomp]], defined as:\n*[[Range.chomp]], defined as:\n*[[Rat.chomp]], defined as:\n*[[RatStr.chomp]], defined as:\n*[[Rational.chomp]], defined as:\n*[[Real.chomp]], defined as:\n*[[Seq.chomp]], defined as:\n*[[Stash.chomp]], defined as:\n*[[Str.chomp]], defined as:			
chop	D								*[[Complex.chop]], defined as:\n*[[ComplexStr.chop]], returns the string with $chars characters removed from the end.\n*[[Cool.chop]], defined as:\n*[[Duration.chop]], defined as:\n*[[FatRat.chop]], defined as:\n*[[Hash.chop]], defined as:\n*[[Instant.chop]], defined as:\n*[[Int.chop]], defined as:\n*[[IntStr.chop]], returns the string with $chars characters removed from the end.\n*[[Iterable.chop]], defined as:\n*[[List.chop]], defined as:\n*[[Map.chop]], defined as:\n*[[Match.chop]], defined as:\n*[[Nil.chop]], defined as:\n*[[Num.chop]], defined as:\n*[[NumStr.chop]], returns the string with $chars characters removed from the end.\n*[[Numeric.chop]], defined as:\n*[[Range.chop]], defined as:\n*[[Rat.chop]], defined as:\n*[[RatStr.chop]], returns the string with $chars characters removed from the end.\n*[[Rational.chop]], defined as:\n*[[Real.chop]], defined as:\n*[[Seq.chop]], defined as:\n*[[Stash.chop]], defined as:\n*[[Str.chop]], defined as:			
chr	D								*[[Bool.chr]], defined as:\n*[[Complex.chr]], defined as:\n*[[Cool.chr]], defined as:\n*[[Duration.chr]], defined as:\n*[[FatRat.chr]], defined as:\n*[[Hash.chr]], defined as:\n*[[Instant.chr]], defined as:\n*[[Int.chr]], defined as:\n*[[IntStr.chr]], defined as:\n*[[Iterable.chr]], defined as:\n*[[List.chr]], defined as:\n*[[Map.chr]], defined as:\n*[[Match.chr]], defined as:\n*[[Nil.chr]], defined as:\n*[[Num.chr]], defined as:\n*[[Numeric.chr]], defined as:\n*[[Order.chr]], defined as:\n*[[Range.chr]], defined as:\n*[[Rat.chr]], defined as:\n*[[Rational.chr]], defined as:\n*[[Real.chr]], defined as:\n*[[Seq.chr]], defined as:\n*[[Stash.chr]], defined as:\n*[[Str.chr]], defined as:\n*[[nativeInt.chr]], defined as:			
chrs	D								*[[Complex.chrs]], defined as:\n*[[Cool.chrs]], defined as:\n*[[Duration.chrs]], defined as:\n*[[FatRat.chrs]], defined as:\n*[[Hash.chrs]], defined as:\n*[[Instant.chrs]], defined as:\n*[[Int.chrs]], defined as:\n*[[Iterable.chrs]], defined as:\n*[[List.chrs]], defined as:\n*[[Map.chrs]], defined as:\n*[[Match.chrs]], defined as:\n*[[Nil.chrs]], defined as:\n*[[Num.chrs]], defined as:\n*[[Numeric.chrs]], defined as:\n*[[Range.chrs]], defined as:\n*[[Rat.chrs]], defined as:\n*[[Rational.chrs]], defined as:\n*[[Real.chrs]], defined as:\n*[[Seq.chrs]], defined as:\n*[[Stash.chrs]], defined as:\n*[[Str.chrs]], defined as:			
chunks	R	Match.chunks										
cis	D								*[[Complex.cis]], defined as:\n*[[Cool.cis]], defined as:\n*[[Duration.cis]], defined as:\n*[[FatRat.cis]], defined as:\n*[[Hash.cis]], defined as:\n*[[Instant.cis]], defined as:\n*[[Int.cis]], defined as:\n*[[Iterable.cis]], defined as:\n*[[List.cis]], defined as:\n*[[Map.cis]], defined as:\n*[[Match.cis]], defined as:\n*[[Nil.cis]], defined as:\n*[[Num.cis]], defined as:\n*[[Numeric.cis]], defined as:\n*[[Range.cis]], defined as:\n*[[Rat.cis]], defined as:\n*[[Rational.cis]], defined as:\n*[[Real.cis]], defined as:\n*[[Seq.cis]], defined as:\n*[[Stash.cis]], defined as:\n*[[Str.cis]], defined as:			
class)	R	Sub.class)										
classify	D								*[[Array.classify]], defined as:\n*[[Backtrace.classify]], defined as:\n*[[List.classify]], defined as:\n*[[Slip.classify]], defined as:			
classify-list	D								*[[Bag.classify-list]], defined as:\n*[[BagHash.classify-list]], defined as:\n*[[Baggy.classify-list]], defined as:\n*[[Hash.classify-list]], defined as:\n*[[Mix.classify-list]], defined as:\n*[[MixHash.classify-list]], defined as:\n*[[Mixy.classify-list]], defined as:\n*[[Stash.classify-list]], defined as:			
clone	D								*[[AST.clone]], creates a shallow clone of the invocant.\n*[[Any.clone]], creates a shallow clone of the invocant.\n*[[Attribute.clone]], creates a shallow clone of the invocant.\n*[[Bag.clone]], creates a shallow clone of the invocant.\n*[[BagHash.clone]], creates a shallow clone of the invocant.\n*[[CallFrame.clone]], creates a shallow clone of the invocant.\n*[[Callable.clone]], creates a shallow clone of the invocant.\n*[[Cancellation.clone]], creates a shallow clone of the invocant.\n*[[Capture.clone]], creates a shallow clone of the invocant.\n*[[Channel.clone]], creates a shallow clone of the invocant.\n*[[Code.clone]], creates a shallow clone of the invocant.\n*[[Complex.clone]], creates a shallow clone of the invocant.\n*[[Cool.clone]], creates a shallow clone of the invocant.\n*[[CurrentThreadScheduler.clone]], creates a shallow clone of the invocant.\n*[[Cursor.clone]], creates a shallow clone of the invocant.\n*[[Date.clone]], creates a shallow clone of the invocant.\n*[[DateTime.clone]], creates a shallow clone of the invocant.\n*[[Duration.clone]], creates a shallow clone of the invocant.\n*[[Exception.clone]], creates a shallow clone of the invocant.\n*[[Failure.clone]], creates a shallow clone of the invocant.\n*[[FatRat.clone]], creates a shallow clone of the invocant.\n*[[Grammar.clone]], creates a shallow clone of the invocant.\n*[[Hash.clone]], creates a shallow clone of the invocant.\n*[[Instant.clone]], creates a shallow clone of the invocant.\n*[[Int.clone]], creates a shallow clone of the invocant.\n*[[Iterable.clone]], creates a shallow clone of the invocant.\n*[[Junction.clone]], creates a shallow clone of the invocant.\n*[[Label.clone]], creates a shallow clone of the invocant.\n*[[List.clone]], creates a shallow clone of the invocant.\n*[[Lock.clone]], creates a shallow clone of the invocant.\n*[[Map.clone]], creates a shallow clone of the invocant.\n*[[Match.clone]], creates a shallow clone of the invocant.\n*[[Mix.clone]], creates a shallow clone of the invocant.\n*[[MixHash.clone]], creates a shallow clone of the invocant.\n*[[Mu.clone]], creates a shallow clone of the invocant.\n*[[Nil.clone]], creates a shallow clone of the invocant.\n*[[Num.clone]], creates a shallow clone of the invocant.\n*[[Numeric.clone]], creates a shallow clone of the invocant.\n*[[ObjAt.clone]], creates a shallow clone of the invocant.\n*[[Pair.clone]], creates a shallow clone of the invocant.\n*[[Parameter.clone]], creates a shallow clone of the invocant.\n*[[Positional.clone]], creates a shallow clone of the invocant.\n*[[Proc.clone]], creates a shallow clone of the invocant.\n*[[Promise.clone]], creates a shallow clone of the invocant.\n*[[Proxy.clone]], creates a shallow clone of the invocant.\n*[[Range.clone]], creates a shallow clone of the invocant.\n*[[Rat.clone]], creates a shallow clone of the invocant.\n*[[Rational.clone]], creates a shallow clone of the invocant.\n*[[Real.clone]], creates a shallow clone of the invocant.\n*[[Scalar.clone]], creates a shallow clone of the invocant.\n*[[Semaphore.clone]], creates a shallow clone of the invocant.\n*[[Seq.clone]], creates a shallow clone of the invocant.\n*[[Set.clone]], creates a shallow clone of the invocant.\n*[[SetHash.clone]], creates a shallow clone of the invocant.\n*[[Signature.clone]], creates a shallow clone of the invocant.\n*[[Stash.clone]], creates a shallow clone of the invocant.\n*[[Str.clone]], creates a shallow clone of the invocant.\n*[[Supplier.clone]], creates a shallow clone of the invocant.\n*[[Tap.clone]], creates a shallow clone of the invocant.\n*[[Thread.clone]], creates a shallow clone of the invocant.\n*[[ThreadPoolScheduler.clone]], creates a shallow clone of the invocant.\n*[[Uni.clone]], creates a shallow clone of the invocant.\n*[[Variable.clone]], creates a shallow clone of the invocant.\n*[[Version.clone]], creates a shallow clone of the invocant.\n*[[Whatever.clone]], creates a shallow clone of the invocant.\n*[[supplies.clone]], creates a shallow clone of the invocant.			
close	D								*[[Channel.close]], defined as:\n*[[IO.close]], to close an open file handle, simply call its close method:\n*[[Tap.close]], closes the tap.			
closed	R	Channel.closed										
closing	R	Tap.closing										
cmp	D								*[[ComplexStr.cmp]], compare two ComplexStr objects.\n*[[IntStr.cmp]], compare two IntStr objects.\n*[[NumStr.cmp]], compare two NumStr objects.\n*[[Order.cmp]], coerces its arguments to Stringy.\n*[[Pair.cmp]], defined as:\n*[[RatStr.cmp]], compare two RatStr objects.			
code	R	CallFrame.code										
codes	D								*[[Complex.codes]], defined as:\n*[[Cool.codes]], defined as:\n*[[Duration.codes]], defined as:\n*[[FatRat.codes]], defined as:\n*[[Hash.codes]], defined as:\n*[[Instant.codes]], defined as:\n*[[Int.codes]], defined as:\n*[[Iterable.codes]], defined as:\n*[[List.codes]], defined as:\n*[[Map.codes]], defined as:\n*[[Match.codes]], defined as:\n*[[NFC.codes]], returns the number of codepoints in the invocant.\n*[[NFD.codes]], returns the number of codepoints in the invocant.\n*[[NFKC.codes]], returns the number of codepoints in the invocant.\n*[[NFKD.codes]], returns the number of codepoints in the invocant.\n*[[Nil.codes]], defined as:\n*[[Num.codes]], defined as:\n*[[Numeric.codes]], defined as:\n*[[Range.codes]], defined as:\n*[[Rat.codes]], defined as:\n*[[Rational.codes]], defined as:\n*[[Real.codes]], defined as:\n*[[Seq.codes]], defined as:\n*[[Stash.codes]], defined as:\n*[[Str.codes]], defined as:\n*[[Uni.codes]], returns the number of codepoints in the invocant.			
comb	D								*[[Complex.comb]], defined as:\n*[[ComplexStr.comb]], searches for $matcher in $input and returns a list of all matches (as Str by default, or as Match if $match is True), limited to at most $limit matches.\n*[[Cool.comb]], defined as:\n*[[Duration.comb]], defined as:\n*[[FatRat.comb]], defined as:\n*[[Hash.comb]], defined as:\n*[[Instant.comb]], defined as:\n*[[Int.comb]], defined as:\n*[[IntStr.comb]], searches for $matcher in $input and returns a list of all matches (as Str by default, or as Match if $match is True), limited to at most $limit matches.\n*[[Iterable.comb]], defined as:\n*[[List.comb]], defined as:\n*[[Map.comb]], defined as:\n*[[Match.comb]], defined as:\n*[[Nil.comb]], defined as:\n*[[Num.comb]], defined as:\n*[[NumStr.comb]], searches for $matcher in $input and returns a list of all matches (as Str by default, or as Match if $match is True), limited to at most $limit matches.\n*[[Numeric.comb]], defined as:\n*[[Range.comb]], defined as:\n*[[Rat.comb]], defined as:\n*[[RatStr.comb]], searches for $matcher in $input and returns a list of all matches (as Str by default, or as Match if $match is True), limited to at most $limit matches.\n*[[Rational.comb]], defined as:\n*[[Real.comb]], defined as:\n*[[Seq.comb]], defined as:\n*[[Stash.comb]], defined as:\n*[[Str.comb]], defined as:			
combinations	D								*[[Array.combinations]], defined as:\n*[[Backtrace.combinations]], defined as:\n*[[List.combinations]], defined as:\n*[[Slip.combinations]], defined as:			
command	R	Proc.command										
condition	R	Lock.condition										
conj	D								*[[Complex.conj]], defined as:\n*[[ComplexStr.conj]], defined as:\n*[[Cool.conj]], defined as:\n*[[Duration.conj]], defined as:\n*[[FatRat.conj]], defined as:\n*[[Hash.conj]], defined as:\n*[[Instant.conj]], defined as:\n*[[Int.conj]], defined as:\n*[[Iterable.conj]], defined as:\n*[[List.conj]], defined as:\n*[[Map.conj]], defined as:\n*[[Match.conj]], defined as:\n*[[Nil.conj]], defined as:\n*[[Num.conj]], defined as:\n*[[Numeric.conj]], returns the complex conjugate of the number.\n*[[Range.conj]], defined as:\n*[[Rat.conj]], defined as:\n*[[Rational.conj]], defined as:\n*[[Real.conj]], defined as:\n*[[Seq.conj]], defined as:\n*[[Stash.conj]], defined as:\n*[[Str.conj]], defined as:			
constraints	R	Parameter.constraints										
contains	D								*[[Complex.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[Cool.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[Duration.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[FatRat.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[Hash.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[Instant.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[Int.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[Iterable.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[List.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[Map.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[Match.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[Nil.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[Num.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[Numeric.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[Range.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[Rat.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[Rational.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[Real.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[Seq.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[Stash.contains]], returns True if the invocant contains the $needle at any position within the string.\n*[[Str.contains]], returns True if the invocant contains the $needle at any position within the string.			
copy	R	Parameter.copy										
cos	D								*[[Complex.cos]], defined as:\n*[[Cool.cos]], defined as:\n*[[Duration.cos]], defined as:\n*[[FatRat.cos]], defined as:\n*[[Hash.cos]], defined as:\n*[[Instant.cos]], defined as:\n*[[Int.cos]], defined as:\n*[[Iterable.cos]], defined as:\n*[[List.cos]], defined as:\n*[[Map.cos]], defined as:\n*[[Match.cos]], defined as:\n*[[Nil.cos]], defined as:\n*[[Num.cos]], defined as:\n*[[Numeric.cos]], defined as:\n*[[Range.cos]], defined as:\n*[[Rat.cos]], defined as:\n*[[Rational.cos]], defined as:\n*[[Real.cos]], defined as:\n*[[Seq.cos]], defined as:\n*[[Stash.cos]], defined as:\n*[[Str.cos]], defined as:			
cosec	D								*[[Complex.cosec]], defined as:\n*[[Cool.cosec]], defined as:\n*[[Duration.cosec]], defined as:\n*[[FatRat.cosec]], defined as:\n*[[Hash.cosec]], defined as:\n*[[Instant.cosec]], defined as:\n*[[Int.cosec]], defined as:\n*[[Iterable.cosec]], defined as:\n*[[List.cosec]], defined as:\n*[[Map.cosec]], defined as:\n*[[Match.cosec]], defined as:\n*[[Nil.cosec]], defined as:\n*[[Num.cosec]], defined as:\n*[[Numeric.cosec]], defined as:\n*[[Range.cosec]], defined as:\n*[[Rat.cosec]], defined as:\n*[[Rational.cosec]], defined as:\n*[[Real.cosec]], defined as:\n*[[Seq.cosec]], defined as:\n*[[Stash.cosec]], defined as:\n*[[Str.cosec]], defined as:			
cosech	D								*[[Complex.cosech]], defined as:\n*[[Cool.cosech]], defined as:\n*[[Duration.cosech]], defined as:\n*[[FatRat.cosech]], defined as:\n*[[Hash.cosech]], defined as:\n*[[Instant.cosech]], defined as:\n*[[Int.cosech]], defined as:\n*[[Iterable.cosech]], defined as:\n*[[List.cosech]], defined as:\n*[[Map.cosech]], defined as:\n*[[Match.cosech]], defined as:\n*[[Nil.cosech]], defined as:\n*[[Num.cosech]], defined as:\n*[[Numeric.cosech]], defined as:\n*[[Range.cosech]], defined as:\n*[[Rat.cosech]], defined as:\n*[[Rational.cosech]], defined as:\n*[[Real.cosech]], defined as:\n*[[Seq.cosech]], defined as:\n*[[Stash.cosech]], defined as:\n*[[Str.cosech]], defined as:			
cosh	D								*[[Complex.cosh]], defined as:\n*[[Cool.cosh]], defined as:\n*[[Duration.cosh]], defined as:\n*[[FatRat.cosh]], defined as:\n*[[Hash.cosh]], defined as:\n*[[Instant.cosh]], defined as:\n*[[Int.cosh]], defined as:\n*[[Iterable.cosh]], defined as:\n*[[List.cosh]], defined as:\n*[[Map.cosh]], defined as:\n*[[Match.cosh]], defined as:\n*[[Nil.cosh]], defined as:\n*[[Num.cosh]], defined as:\n*[[Numeric.cosh]], defined as:\n*[[Range.cosh]], defined as:\n*[[Rat.cosh]], defined as:\n*[[Rational.cosh]], defined as:\n*[[Real.cosh]], defined as:\n*[[Seq.cosh]], defined as:\n*[[Stash.cosh]], defined as:\n*[[Str.cosh]], defined as:			
cotan	D								*[[Complex.cotan]], defined as:\n*[[Cool.cotan]], defined as:\n*[[Duration.cotan]], defined as:\n*[[FatRat.cotan]], defined as:\n*[[Hash.cotan]], defined as:\n*[[Instant.cotan]], defined as:\n*[[Int.cotan]], defined as:\n*[[Iterable.cotan]], defined as:\n*[[List.cotan]], defined as:\n*[[Map.cotan]], defined as:\n*[[Match.cotan]], defined as:\n*[[Nil.cotan]], defined as:\n*[[Num.cotan]], defined as:\n*[[Numeric.cotan]], defined as:\n*[[Range.cotan]], defined as:\n*[[Rat.cotan]], defined as:\n*[[Rational.cotan]], defined as:\n*[[Real.cotan]], defined as:\n*[[Seq.cotan]], defined as:\n*[[Stash.cotan]], defined as:\n*[[Str.cotan]], defined as:			
cotanh	D								*[[Complex.cotanh]], defined as:\n*[[Cool.cotanh]], defined as:\n*[[Duration.cotanh]], defined as:\n*[[FatRat.cotanh]], defined as:\n*[[Hash.cotanh]], defined as:\n*[[Instant.cotanh]], defined as:\n*[[Int.cotanh]], defined as:\n*[[Iterable.cotanh]], defined as:\n*[[List.cotanh]], defined as:\n*[[Map.cotanh]], defined as:\n*[[Match.cotanh]], defined as:\n*[[Nil.cotanh]], defined as:\n*[[Num.cotanh]], defined as:\n*[[Numeric.cotanh]], defined as:\n*[[Range.cotanh]], defined as:\n*[[Rat.cotanh]], defined as:\n*[[Rational.cotanh]], defined as:\n*[[Real.cotanh]], defined as:\n*[[Seq.cotanh]], defined as:\n*[[Stash.cotanh]], defined as:\n*[[Str.cotanh]], defined as:			
count	D								*[[Block.count]], defined as:\n*[[Code.count]], defined as:\n*[[Macro.count]], defined as:\n*[[Method.count]], defined as:\n*[[Regex.count]], defined as:\n*[[Routine.count]], defined as:\n*[[Signature.count]], returns the maximal number of positional arguments which can be bound to the signature.\n*[[Sub.count]], defined as:\n*[[Submethod.count]], defined as:\n*[[WhateverCode.count]], defined as:			
cross	D								*[[Array.cross]], computes the cross-product of two or more lists or iterables.\n*[[Backtrace.cross]], computes the cross-product of two or more lists or iterables.\n*[[List.cross]], computes the cross-product of two or more lists or iterables.\n*[[Slip.cross]], computes the cross-product of two or more lists or iterables.			
cue	D								*[[CurrentThreadScheduler.cue]], schedules a callable (&amp;code) for execution.\n*[[Scheduler.cue]], schedules a callable (&amp;code) for execution.\n*[[ThreadPoolScheduler.cue]], schedules a callable (&amp;code) for execution.			
day	D								*[[Date.day]], defined as:\n*[[DateTime.day]], defined as:\n*[[Dateish.day]], defined as:			
day-of-month	D								*[[Date.day-of-month]], defined as:\n*[[DateTime.day-of-month]], defined as:\n*[[Dateish.day-of-month]], defined as:			
day-of-week	D								*[[Date.day-of-week]], defined as:\n*[[DateTime.day-of-week]], defined as:\n*[[Dateish.day-of-week]], defined as:			
day-of-year	D								*[[Date.day-of-year]], defined as:\n*[[DateTime.day-of-year]], defined as:\n*[[Dateish.day-of-year]], defined as:			
daycount	D								*[[Date.daycount]], defined as:\n*[[DateTime.daycount]], defined as:\n*[[Dateish.daycount]], defined as:			
days-in-month	D								*[[Date.days-in-month]], defined as:\n*[[DateTime.days-in-month]], defined as:\n*[[Dateish.days-in-month]], defined as:			
decode	D								*[[Blob.decode]], defined as:\n*[[Buf.decode]], defined as:			
deepmap	D								*[[AST.deepmap]], defined as:\n*[[Any.deepmap]], defined as:\n*[[Attribute.deepmap]], defined as:\n*[[Bag.deepmap]], defined as:\n*[[BagHash.deepmap]], defined as:\n*[[CallFrame.deepmap]], defined as:\n*[[Callable.deepmap]], defined as:\n*[[Cancellation.deepmap]], defined as:\n*[[Capture.deepmap]], defined as:\n*[[Channel.deepmap]], defined as:\n*[[Code.deepmap]], defined as:\n*[[Complex.deepmap]], defined as:\n*[[Cool.deepmap]], defined as:\n*[[CurrentThreadScheduler.deepmap]], defined as:\n*[[Cursor.deepmap]], defined as:\n*[[Date.deepmap]], defined as:\n*[[DateTime.deepmap]], defined as:\n*[[Duration.deepmap]], defined as:\n*[[Exception.deepmap]], defined as:\n*[[Failure.deepmap]], defined as:\n*[[FatRat.deepmap]], defined as:\n*[[Grammar.deepmap]], defined as:\n*[[Hash.deepmap]], defined as:\n*[[Instant.deepmap]], defined as:\n*[[Int.deepmap]], defined as:\n*[[Iterable.deepmap]], defined as:\n*[[Label.deepmap]], defined as:\n*[[List.deepmap]], defined as:\n*[[Lock.deepmap]], defined as:\n*[[Map.deepmap]], defined as:\n*[[Match.deepmap]], defined as:\n*[[Mix.deepmap]], defined as:\n*[[MixHash.deepmap]], defined as:\n*[[Nil.deepmap]], defined as:\n*[[Num.deepmap]], defined as:\n*[[Numeric.deepmap]], defined as:\n*[[ObjAt.deepmap]], defined as:\n*[[Pair.deepmap]], defined as:\n*[[Parameter.deepmap]], defined as:\n*[[Positional.deepmap]], defined as:\n*[[Proc.deepmap]], defined as:\n*[[Promise.deepmap]], defined as:\n*[[Proxy.deepmap]], defined as:\n*[[Range.deepmap]], defined as:\n*[[Rat.deepmap]], defined as:\n*[[Rational.deepmap]], defined as:\n*[[Real.deepmap]], defined as:\n*[[Scalar.deepmap]], defined as:\n*[[Semaphore.deepmap]], defined as:\n*[[Seq.deepmap]], defined as:\n*[[Set.deepmap]], defined as:\n*[[SetHash.deepmap]], defined as:\n*[[Signature.deepmap]], defined as:\n*[[Stash.deepmap]], defined as:\n*[[Str.deepmap]], defined as:\n*[[Supplier.deepmap]], defined as:\n*[[Tap.deepmap]], defined as:\n*[[Thread.deepmap]], defined as:\n*[[ThreadPoolScheduler.deepmap]], defined as:\n*[[Uni.deepmap]], defined as:\n*[[Variable.deepmap]], defined as:\n*[[Version.deepmap]], defined as:\n*[[Whatever.deepmap]], defined as:\n*[[supplies.deepmap]], defined as:			
default	D								*[[Array.default]], defined as:\n*[[Bag.default]], defined as:\n*[[BagHash.default]], defined as:\n*[[Baggy.default]], defined as:\n*[[Hash.default]], defined as:\n*[[Mix.default]], defined as:\n*[[MixHash.default]], defined as:\n*[[Mixy.default]], defined as:\n*[[Parameter.default]], returns a closure that upon invocation returns the default value for this parameter, or Any if no default was provided.\n*[[Set.default]], defined as:\n*[[SetHash.default]], defined as:\n*[[Setty.default]], defined as:\n*[[Stash.default]], defined as:			
defined	D								*[[AST.defined]], returns False on the type object, and True otherwise.\n*[[Any.defined]], returns False on the type object, and True otherwise.\n*[[Attribute.defined]], returns False on the type object, and True otherwise.\n*[[Bag.defined]], returns False on the type object, and True otherwise.\n*[[BagHash.defined]], returns False on the type object, and True otherwise.\n*[[CallFrame.defined]], returns False on the type object, and True otherwise.\n*[[Callable.defined]], returns False on the type object, and True otherwise.\n*[[Cancellation.defined]], returns False on the type object, and True otherwise.\n*[[Capture.defined]], returns False on the type object, and True otherwise.\n*[[Channel.defined]], returns False on the type object, and True otherwise.\n*[[Code.defined]], returns False on the type object, and True otherwise.\n*[[Complex.defined]], returns False on the type object, and True otherwise.\n*[[Cool.defined]], returns False on the type object, and True otherwise.\n*[[CurrentThreadScheduler.defined]], returns False on the type object, and True otherwise.\n*[[Cursor.defined]], returns False on the type object, and True otherwise.\n*[[Date.defined]], returns False on the type object, and True otherwise.\n*[[DateTime.defined]], returns False on the type object, and True otherwise.\n*[[Duration.defined]], returns False on the type object, and True otherwise.\n*[[Exception.defined]], returns False on the type object, and True otherwise.\n*[[Failure.defined]], returns False on the type object, and True otherwise.\n*[[FatRat.defined]], returns False on the type object, and True otherwise.\n*[[Grammar.defined]], returns False on the type object, and True otherwise.\n*[[Hash.defined]], returns False on the type object, and True otherwise.\n*[[Instant.defined]], returns False on the type object, and True otherwise.\n*[[Int.defined]], returns False on the type object, and True otherwise.\n*[[Iterable.defined]], returns False on the type object, and True otherwise.\n*[[Junction.defined]], returns False on the type object, and True otherwise.\n*[[Label.defined]], returns False on the type object, and True otherwise.\n*[[List.defined]], returns False on the type object, and True otherwise.\n*[[Lock.defined]], returns False on the type object, and True otherwise.\n*[[Map.defined]], returns False on the type object, and True otherwise.\n*[[Match.defined]], returns False on the type object, and True otherwise.\n*[[Mix.defined]], returns False on the type object, and True otherwise.\n*[[MixHash.defined]], returns False on the type object, and True otherwise.\n*[[Mu.defined]], returns False on the type object, and True otherwise.\n*[[Nil.defined]], returns False on the type object, and True otherwise.\n*[[Num.defined]], returns False on the type object, and True otherwise.\n*[[Numeric.defined]], returns False on the type object, and True otherwise.\n*[[ObjAt.defined]], returns False on the type object, and True otherwise.\n*[[Pair.defined]], returns False on the type object, and True otherwise.\n*[[Parameter.defined]], returns False on the type object, and True otherwise.\n*[[Positional.defined]], returns False on the type object, and True otherwise.\n*[[Proc.defined]], returns False on the type object, and True otherwise.\n*[[Promise.defined]], returns False on the type object, and True otherwise.\n*[[Proxy.defined]], returns False on the type object, and True otherwise.\n*[[Range.defined]], returns False on the type object, and True otherwise.\n*[[Rat.defined]], returns False on the type object, and True otherwise.\n*[[Rational.defined]], returns False on the type object, and True otherwise.\n*[[Real.defined]], returns False on the type object, and True otherwise.\n*[[Scalar.defined]], returns False on the type object, and True otherwise.\n*[[Semaphore.defined]], returns False on the type object, and True otherwise.\n*[[Seq.defined]], returns False on the type object, and True otherwise.\n*[[Set.defined]], returns False on the type object, and True otherwise.\n*[[SetHash.defined]], returns False on the type object, and True otherwise.\n*[[Signature.defined]], returns False on the type object, and True otherwise.\n*[[Stash.defined]], returns False on the type object, and True otherwise.\n*[[Str.defined]], returns False on the type object, and True otherwise.\n*[[Supplier.defined]], returns False on the type object, and True otherwise.\n*[[Tap.defined]], returns False on the type object, and True otherwise.\n*[[Thread.defined]], returns False on the type object, and True otherwise.\n*[[ThreadPoolScheduler.defined]], returns False on the type object, and True otherwise.\n*[[Uni.defined]], returns False on the type object, and True otherwise.\n*[[Variable.defined]], returns False on the type object, and True otherwise.\n*[[Version.defined]], returns False on the type object, and True otherwise.\n*[[Whatever.defined]], returns False on the type object, and True otherwise.\n*[[supplies.defined]], returns False on the type object, and True otherwise.			
delayed	R	Supply.delayed										
denominator	D								*[[FatRat.denominator]], returns the denominator.\n*[[Rat.denominator]], returns the denominator.\n*[[Rational.denominator]], returns the denominator.			
die	R	Exception.die										
div	D								*[[Bool.div]], does an integer division, rounded down.\n*[[Int.div]], does an integer division, rounded down.\n*[[IntStr.div]], does an integer division, rounded down.\n*[[Order.div]], does an integer division, rounded down.\n*[[nativeInt.div]], does an integer division, rounded down.			
do	R	Supply.do										
does	D								*[[AST.does]], returns True if and only if the invocant conforms to type $type.\n*[[Any.does]], returns True if and only if the invocant conforms to type $type.\n*[[Attribute.does]], returns True if and only if the invocant conforms to type $type.\n*[[Bag.does]], returns True if and only if the invocant conforms to type $type.\n*[[BagHash.does]], returns True if and only if the invocant conforms to type $type.\n*[[CallFrame.does]], returns True if and only if the invocant conforms to type $type.\n*[[Callable.does]], returns True if and only if the invocant conforms to type $type.\n*[[Cancellation.does]], returns True if and only if the invocant conforms to type $type.\n*[[Capture.does]], returns True if and only if the invocant conforms to type $type.\n*[[Channel.does]], returns True if and only if the invocant conforms to type $type.\n*[[Code.does]], returns True if and only if the invocant conforms to type $type.\n*[[Complex.does]], returns True if and only if the invocant conforms to type $type.\n*[[Cool.does]], returns True if and only if the invocant conforms to type $type.\n*[[CurrentThreadScheduler.does]], returns True if and only if the invocant conforms to type $type.\n*[[Cursor.does]], returns True if and only if the invocant conforms to type $type.\n*[[Date.does]], returns True if and only if the invocant conforms to type $type.\n*[[DateTime.does]], returns True if and only if the invocant conforms to type $type.\n*[[Duration.does]], returns True if and only if the invocant conforms to type $type.\n*[[Exception.does]], returns True if and only if the invocant conforms to type $type.\n*[[Failure.does]], returns True if and only if the invocant conforms to type $type.\n*[[FatRat.does]], returns True if and only if the invocant conforms to type $type.\n*[[Grammar.does]], returns True if and only if the invocant conforms to type $type.\n*[[Hash.does]], returns True if and only if the invocant conforms to type $type.\n*[[Instant.does]], returns True if and only if the invocant conforms to type $type.\n*[[Int.does]], returns True if and only if the invocant conforms to type $type.\n*[[Iterable.does]], returns True if and only if the invocant conforms to type $type.\n*[[Junction.does]], returns True if and only if the invocant conforms to type $type.\n*[[Label.does]], returns True if and only if the invocant conforms to type $type.\n*[[List.does]], returns True if and only if the invocant conforms to type $type.\n*[[Lock.does]], returns True if and only if the invocant conforms to type $type.\n*[[Map.does]], returns True if and only if the invocant conforms to type $type.\n*[[Match.does]], returns True if and only if the invocant conforms to type $type.\n*[[Mix.does]], returns True if and only if the invocant conforms to type $type.\n*[[MixHash.does]], returns True if and only if the invocant conforms to type $type.\n*[[Mu.does]], returns True if and only if the invocant conforms to type $type.\n*[[Nil.does]], returns True if and only if the invocant conforms to type $type.\n*[[Num.does]], returns True if and only if the invocant conforms to type $type.\n*[[Numeric.does]], returns True if and only if the invocant conforms to type $type.\n*[[ObjAt.does]], returns True if and only if the invocant conforms to type $type.\n*[[Pair.does]], returns True if and only if the invocant conforms to type $type.\n*[[Parameter.does]], returns True if and only if the invocant conforms to type $type.\n*[[Positional.does]], returns True if and only if the invocant conforms to type $type.\n*[[Proc.does]], returns True if and only if the invocant conforms to type $type.\n*[[Promise.does]], returns True if and only if the invocant conforms to type $type.\n*[[Proxy.does]], returns True if and only if the invocant conforms to type $type.\n*[[Range.does]], returns True if and only if the invocant conforms to type $type.\n*[[Rat.does]], returns True if and only if the invocant conforms to type $type.\n*[[Rational.does]], returns True if and only if the invocant conforms to type $type.\n*[[Real.does]], returns True if and only if the invocant conforms to type $type.\n*[[Scalar.does]], returns True if and only if the invocant conforms to type $type.\n*[[Semaphore.does]], returns True if and only if the invocant conforms to type $type.\n*[[Seq.does]], returns True if and only if the invocant conforms to type $type.\n*[[Set.does]], returns True if and only if the invocant conforms to type $type.\n*[[SetHash.does]], returns True if and only if the invocant conforms to type $type.\n*[[Signature.does]], returns True if and only if the invocant conforms to type $type.\n*[[Stash.does]], returns True if and only if the invocant conforms to type $type.\n*[[Str.does]], returns True if and only if the invocant conforms to type $type.\n*[[Supplier.does]], returns True if and only if the invocant conforms to type $type.\n*[[Tap.does]], returns True if and only if the invocant conforms to type $type.\n*[[Thread.does]], returns True if and only if the invocant conforms to type $type.\n*[[ThreadPoolScheduler.does]], returns True if and only if the invocant conforms to type $type.\n*[[Uni.does]], returns True if and only if the invocant conforms to type $type.\n*[[Variable.does]], returns True if and only if the invocant conforms to type $type.\n*[[Version.does]], returns True if and only if the invocant conforms to type $type.\n*[[Whatever.does]], returns True if and only if the invocant conforms to type $type.\n*[[supplies.does]], returns True if and only if the invocant conforms to type $type.			
done	D								*[[Supplier.done]], calls the done callback on all the taps that have one.\n*[[Tap.done]], returns the callback that is called on successfully shutting down a channel, if any.			
duckmap	D								*[[AST.duckmap]], defined as:\n*[[Any.duckmap]], defined as:\n*[[Attribute.duckmap]], defined as:\n*[[Bag.duckmap]], defined as:\n*[[BagHash.duckmap]], defined as:\n*[[CallFrame.duckmap]], defined as:\n*[[Callable.duckmap]], defined as:\n*[[Cancellation.duckmap]], defined as:\n*[[Capture.duckmap]], defined as:\n*[[Channel.duckmap]], defined as:\n*[[Code.duckmap]], defined as:\n*[[Complex.duckmap]], defined as:\n*[[Cool.duckmap]], defined as:\n*[[CurrentThreadScheduler.duckmap]], defined as:\n*[[Cursor.duckmap]], defined as:\n*[[Date.duckmap]], defined as:\n*[[DateTime.duckmap]], defined as:\n*[[Duration.duckmap]], defined as:\n*[[Exception.duckmap]], defined as:\n*[[Failure.duckmap]], defined as:\n*[[FatRat.duckmap]], defined as:\n*[[Grammar.duckmap]], defined as:\n*[[Hash.duckmap]], defined as:\n*[[Instant.duckmap]], defined as:\n*[[Int.duckmap]], defined as:\n*[[Iterable.duckmap]], defined as:\n*[[Label.duckmap]], defined as:\n*[[List.duckmap]], defined as:\n*[[Lock.duckmap]], defined as:\n*[[Map.duckmap]], defined as:\n*[[Match.duckmap]], defined as:\n*[[Mix.duckmap]], defined as:\n*[[MixHash.duckmap]], defined as:\n*[[Nil.duckmap]], defined as:\n*[[Num.duckmap]], defined as:\n*[[Numeric.duckmap]], defined as:\n*[[ObjAt.duckmap]], defined as:\n*[[Pair.duckmap]], defined as:\n*[[Parameter.duckmap]], defined as:\n*[[Positional.duckmap]], defined as:\n*[[Proc.duckmap]], defined as:\n*[[Promise.duckmap]], defined as:\n*[[Proxy.duckmap]], defined as:\n*[[Range.duckmap]], defined as:\n*[[Rat.duckmap]], defined as:\n*[[Rational.duckmap]], defined as:\n*[[Real.duckmap]], defined as:\n*[[Scalar.duckmap]], defined as:\n*[[Semaphore.duckmap]], defined as:\n*[[Seq.duckmap]], defined as:\n*[[Set.duckmap]], defined as:\n*[[SetHash.duckmap]], defined as:\n*[[Signature.duckmap]], defined as:\n*[[Stash.duckmap]], defined as:\n*[[Str.duckmap]], defined as:\n*[[Supplier.duckmap]], defined as:\n*[[Tap.duckmap]], defined as:\n*[[Thread.duckmap]], defined as:\n*[[ThreadPoolScheduler.duckmap]], defined as:\n*[[Uni.duckmap]], defined as:\n*[[Variable.duckmap]], defined as:\n*[[Version.duckmap]], defined as:\n*[[Whatever.duckmap]], defined as:\n*[[supplies.duckmap]], defined as:			
dynamic	R	Variable.dynamic										
eager	D								*[[AST.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Any.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Array.eager]], defined as:\n*[[Attribute.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Backtrace.eager]], defined as:\n*[[Bag.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[BagHash.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[CallFrame.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Callable.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Cancellation.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Capture.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Channel.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Code.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Complex.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Cool.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[CurrentThreadScheduler.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Cursor.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Date.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[DateTime.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Duration.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Exception.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Failure.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[FatRat.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Grammar.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Hash.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Instant.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Int.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Iterable.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Label.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[List.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Lock.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Map.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Match.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Mix.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[MixHash.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Nil.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Num.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Numeric.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[ObjAt.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Pair.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Parameter.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Positional.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Proc.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Promise.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Proxy.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Range.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Rat.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Rational.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Real.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Scalar.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Semaphore.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Seq.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Set.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[SetHash.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Signature.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Slip.eager]], defined as:\n*[[Stash.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Str.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Supplier.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Tap.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Thread.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[ThreadPoolScheduler.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Uni.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Variable.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Version.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[Whatever.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.\n*[[supplies.eager]], interprets the invocant as a list, evaluates it eagerly, and returns that list.			
earlier	D								*[[Date.earlier]], defined as:\n*[[DateTime.earlier]], defined as:			
elems	D								*[[AST.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Any.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Array.elems]], defined as:\n*[[Attribute.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Backtrace.elems]], defined as:\n*[[Bag.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[BagHash.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Baggy.elems]], defined as:\n*[[Blob.elems]], defined as:\n*[[Buf.elems]], defined as:\n*[[CallFrame.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Callable.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Cancellation.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Capture.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Channel.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Code.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Complex.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Cool.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[CurrentThreadScheduler.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Cursor.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Date.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[DateTime.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Duration.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Exception.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Failure.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[FatRat.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Grammar.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Hash.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Instant.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Int.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Iterable.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Label.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[List.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Lock.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Map.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Match.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Mix.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[MixHash.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Mixy.elems]], defined as:\n*[[NFC.elems]], returns the number of codepoints in the invocant.\n*[[NFD.elems]], returns the number of codepoints in the invocant.\n*[[NFKC.elems]], returns the number of codepoints in the invocant.\n*[[NFKD.elems]], returns the number of codepoints in the invocant.\n*[[Nil.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Num.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Numeric.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[ObjAt.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Pair.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Parameter.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Positional.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Proc.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Promise.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Proxy.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Range.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Rat.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Rational.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Real.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Scalar.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Semaphore.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Seq.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Set.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[SetHash.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Setty.elems]], the number of elements of the set.\n*[[Signature.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Slip.elems]], defined as:\n*[[Stash.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Str.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Supplier.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Supply.elems]], creates a new supply in which changes to the number of values seen are emitted.\n*[[Tap.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Thread.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[ThreadPoolScheduler.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Uni.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Variable.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Version.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[Whatever.elems]], interprets the invocant as a list, and returns the number of elements in the list.\n*[[supplies.elems]], interprets the invocant as a list, and returns the number of elements in the list.			
emit	D								*[[AST.emit]], emits the invocant into the enclosing supply or react block.\n*[[Any.emit]], emits the invocant into the enclosing supply or react block.\n*[[Attribute.emit]], emits the invocant into the enclosing supply or react block.\n*[[Bag.emit]], emits the invocant into the enclosing supply or react block.\n*[[BagHash.emit]], emits the invocant into the enclosing supply or react block.\n*[[CallFrame.emit]], emits the invocant into the enclosing supply or react block.\n*[[Callable.emit]], emits the invocant into the enclosing supply or react block.\n*[[Cancellation.emit]], emits the invocant into the enclosing supply or react block.\n*[[Capture.emit]], emits the invocant into the enclosing supply or react block.\n*[[Channel.emit]], emits the invocant into the enclosing supply or react block.\n*[[Code.emit]], emits the invocant into the enclosing supply or react block.\n*[[Complex.emit]], emits the invocant into the enclosing supply or react block.\n*[[Cool.emit]], emits the invocant into the enclosing supply or react block.\n*[[CurrentThreadScheduler.emit]], emits the invocant into the enclosing supply or react block.\n*[[Cursor.emit]], emits the invocant into the enclosing supply or react block.\n*[[Date.emit]], emits the invocant into the enclosing supply or react block.\n*[[DateTime.emit]], emits the invocant into the enclosing supply or react block.\n*[[Duration.emit]], emits the invocant into the enclosing supply or react block.\n*[[Exception.emit]], emits the invocant into the enclosing supply or react block.\n*[[Failure.emit]], emits the invocant into the enclosing supply or react block.\n*[[FatRat.emit]], emits the invocant into the enclosing supply or react block.\n*[[Grammar.emit]], emits the invocant into the enclosing supply or react block.\n*[[Hash.emit]], emits the invocant into the enclosing supply or react block.\n*[[Instant.emit]], emits the invocant into the enclosing supply or react block.\n*[[Int.emit]], emits the invocant into the enclosing supply or react block.\n*[[Iterable.emit]], emits the invocant into the enclosing supply or react block.\n*[[Junction.emit]], emits the invocant into the enclosing supply or react block.\n*[[Label.emit]], emits the invocant into the enclosing supply or react block.\n*[[List.emit]], emits the invocant into the enclosing supply or react block.\n*[[Lock.emit]], emits the invocant into the enclosing supply or react block.\n*[[Map.emit]], emits the invocant into the enclosing supply or react block.\n*[[Match.emit]], emits the invocant into the enclosing supply or react block.\n*[[Mix.emit]], emits the invocant into the enclosing supply or react block.\n*[[MixHash.emit]], emits the invocant into the enclosing supply or react block.\n*[[Mu.emit]], emits the invocant into the enclosing supply or react block.\n*[[Nil.emit]], emits the invocant into the enclosing supply or react block.\n*[[Num.emit]], emits the invocant into the enclosing supply or react block.\n*[[Numeric.emit]], emits the invocant into the enclosing supply or react block.\n*[[ObjAt.emit]], emits the invocant into the enclosing supply or react block.\n*[[Pair.emit]], emits the invocant into the enclosing supply or react block.\n*[[Parameter.emit]], emits the invocant into the enclosing supply or react block.\n*[[Positional.emit]], emits the invocant into the enclosing supply or react block.\n*[[Proc.emit]], emits the invocant into the enclosing supply or react block.\n*[[Promise.emit]], emits the invocant into the enclosing supply or react block.\n*[[Proxy.emit]], emits the invocant into the enclosing supply or react block.\n*[[Range.emit]], emits the invocant into the enclosing supply or react block.\n*[[Rat.emit]], emits the invocant into the enclosing supply or react block.\n*[[Rational.emit]], emits the invocant into the enclosing supply or react block.\n*[[Real.emit]], emits the invocant into the enclosing supply or react block.\n*[[Scalar.emit]], emits the invocant into the enclosing supply or react block.\n*[[Semaphore.emit]], emits the invocant into the enclosing supply or react block.\n*[[Seq.emit]], emits the invocant into the enclosing supply or react block.\n*[[Set.emit]], emits the invocant into the enclosing supply or react block.\n*[[SetHash.emit]], emits the invocant into the enclosing supply or react block.\n*[[Signature.emit]], emits the invocant into the enclosing supply or react block.\n*[[Stash.emit]], emits the invocant into the enclosing supply or react block.\n*[[Str.emit]], emits the invocant into the enclosing supply or react block.\n*[[Supplier.emit]], emits the invocant into the enclosing supply or react block.\n*[[Tap.emit]], emits the invocant into the enclosing supply or react block.\n*[[Thread.emit]], emits the invocant into the enclosing supply or react block.\n*[[ThreadPoolScheduler.emit]], emits the invocant into the enclosing supply or react block.\n*[[Uni.emit]], emits the invocant into the enclosing supply or react block.\n*[[Variable.emit]], emits the invocant into the enclosing supply or react block.\n*[[Version.emit]], emits the invocant into the enclosing supply or react block.\n*[[Whatever.emit]], emits the invocant into the enclosing supply or react block.\n*[[supplies.emit]], emits the invocant into the enclosing supply or react block.			
encode	D								*[[ComplexStr.encode]], returns a Blob which represents the original string in the given encoding and normal form.\n*[[IntStr.encode]], returns a Blob which represents the original string in the given encoding and normal form.\n*[[NumStr.encode]], returns a Blob which represents the original string in the given encoding and normal form.\n*[[RatStr.encode]], returns a Blob which represents the original string in the given encoding and normal form.\n*[[Str.encode]], returns a Blob which represents the original string in the given encoding and normal form.			
end	D								*[[AST.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Any.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Array.end]], defined as:\n*[[Attribute.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Backtrace.end]], defined as:\n*[[Bag.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[BagHash.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[CallFrame.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Callable.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Cancellation.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Capture.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Channel.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Code.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Complex.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Cool.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[CurrentThreadScheduler.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Cursor.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Date.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[DateTime.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Duration.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Exception.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Failure.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[FatRat.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Grammar.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Hash.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Instant.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Int.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Iterable.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Label.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[List.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Lock.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Map.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Match.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Mix.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[MixHash.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Nil.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Num.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Numeric.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[ObjAt.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Pair.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Parameter.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Positional.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Proc.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Promise.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Proxy.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Range.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Rat.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Rational.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Real.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Scalar.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Semaphore.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Seq.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Set.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[SetHash.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Signature.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Slip.end]], defined as:\n*[[Stash.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Str.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Supplier.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Tap.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Thread.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[ThreadPoolScheduler.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Uni.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Variable.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Version.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[Whatever.end]], interprets the invocant as a list, and returns the last index of that list.\n*[[supplies.end]], interprets the invocant as a list, and returns the last index of that list.			
ends-with	D								*[[ComplexStr.ends-with]], returns True if the invocant is identical to or ends with $needle.\n*[[IntStr.ends-with]], returns True if the invocant is identical to or ends with $needle.\n*[[NumStr.ends-with]], returns True if the invocant is identical to or ends with $needle.\n*[[RatStr.ends-with]], returns True if the invocant is identical to or ends with $needle.\n*[[Str.ends-with]], returns True if the invocant is identical to or ends with $needle.			
enums	R	Bool.enums										
exception	R	Failure.exception										
excludes-max	R	Range.excludes-max										
excludes-min	R	Range.excludes-min										
exit	D								*[[AST.exit]], exits the current process with return code $status.\n*[[Any.exit]], exits the current process with return code $status.\n*[[Attribute.exit]], exits the current process with return code $status.\n*[[Bag.exit]], exits the current process with return code $status.\n*[[BagHash.exit]], exits the current process with return code $status.\n*[[CallFrame.exit]], exits the current process with return code $status.\n*[[Callable.exit]], exits the current process with return code $status.\n*[[Cancellation.exit]], exits the current process with return code $status.\n*[[Capture.exit]], exits the current process with return code $status.\n*[[Channel.exit]], exits the current process with return code $status.\n*[[Code.exit]], exits the current process with return code $status.\n*[[Complex.exit]], exits the current process with return code $status.\n*[[Cool.exit]], exits the current process with return code $status.\n*[[CurrentThreadScheduler.exit]], exits the current process with return code $status.\n*[[Cursor.exit]], exits the current process with return code $status.\n*[[Date.exit]], exits the current process with return code $status.\n*[[DateTime.exit]], exits the current process with return code $status.\n*[[Duration.exit]], exits the current process with return code $status.\n*[[Exception.exit]], exits the current process with return code $status.\n*[[Failure.exit]], exits the current process with return code $status.\n*[[FatRat.exit]], exits the current process with return code $status.\n*[[Grammar.exit]], exits the current process with return code $status.\n*[[Hash.exit]], exits the current process with return code $status.\n*[[Instant.exit]], exits the current process with return code $status.\n*[[Int.exit]], exits the current process with return code $status.\n*[[Iterable.exit]], exits the current process with return code $status.\n*[[Label.exit]], exits the current process with return code $status.\n*[[List.exit]], exits the current process with return code $status.\n*[[Lock.exit]], exits the current process with return code $status.\n*[[Map.exit]], exits the current process with return code $status.\n*[[Match.exit]], exits the current process with return code $status.\n*[[Mix.exit]], exits the current process with return code $status.\n*[[MixHash.exit]], exits the current process with return code $status.\n*[[Nil.exit]], exits the current process with return code $status.\n*[[Num.exit]], exits the current process with return code $status.\n*[[Numeric.exit]], exits the current process with return code $status.\n*[[ObjAt.exit]], exits the current process with return code $status.\n*[[Pair.exit]], exits the current process with return code $status.\n*[[Parameter.exit]], exits the current process with return code $status.\n*[[Positional.exit]], exits the current process with return code $status.\n*[[Proc.exit]], exits the current process with return code $status.\n*[[Promise.exit]], exits the current process with return code $status.\n*[[Proxy.exit]], exits the current process with return code $status.\n*[[Range.exit]], exits the current process with return code $status.\n*[[Rat.exit]], exits the current process with return code $status.\n*[[Rational.exit]], exits the current process with return code $status.\n*[[Real.exit]], exits the current process with return code $status.\n*[[Scalar.exit]], exits the current process with return code $status.\n*[[Semaphore.exit]], exits the current process with return code $status.\n*[[Seq.exit]], exits the current process with return code $status.\n*[[Set.exit]], exits the current process with return code $status.\n*[[SetHash.exit]], exits the current process with return code $status.\n*[[Signature.exit]], exits the current process with return code $status.\n*[[Stash.exit]], exits the current process with return code $status.\n*[[Str.exit]], exits the current process with return code $status.\n*[[Supplier.exit]], exits the current process with return code $status.\n*[[Tap.exit]], exits the current process with return code $status.\n*[[Thread.exit]], exits the current process with return code $status.\n*[[ThreadPoolScheduler.exit]], exits the current process with return code $status.\n*[[Uni.exit]], exits the current process with return code $status.\n*[[Variable.exit]], exits the current process with return code $status.\n*[[Version.exit]], exits the current process with return code $status.\n*[[Whatever.exit]], exits the current process with return code $status.\n*[[supplies.exit]], exits the current process with return code $status.			
exitcode	R	Proc.exitcode										
exp	D								*[[Complex.exp]], defined as:\n*[[Cool.exp]], defined as:\n*[[Duration.exp]], defined as:\n*[[FatRat.exp]], defined as:\n*[[Hash.exp]], defined as:\n*[[Instant.exp]], defined as:\n*[[Int.exp]], defined as:\n*[[Iterable.exp]], defined as:\n*[[List.exp]], defined as:\n*[[Map.exp]], defined as:\n*[[Match.exp]], defined as:\n*[[Nil.exp]], defined as:\n*[[Num.exp]], defined as:\n*[[Numeric.exp]], returns $base to the power of the number, or e to the power of the number if called without a second argument.\n*[[Range.exp]], defined as:\n*[[Rat.exp]], defined as:\n*[[Rational.exp]], defined as:\n*[[Real.exp]], defined as:\n*[[Seq.exp]], defined as:\n*[[Stash.exp]], defined as:\n*[[Str.exp]], defined as:			
expmod	D								*[[Bool.expmod]], defined as:\n*[[Int.expmod]], defined as:\n*[[IntStr.expmod]], defined as:\n*[[Order.expmod]], defined as:\n*[[nativeInt.expmod]], defined as:			
export	D								*[[AST.export]], marks a type as being exported, that is, available to external users.\n*[[Any.export]], marks a type as being exported, that is, available to external users.\n*[[Attribute.export]], marks a type as being exported, that is, available to external users.\n*[[Bag.export]], marks a type as being exported, that is, available to external users.\n*[[BagHash.export]], marks a type as being exported, that is, available to external users.\n*[[CallFrame.export]], marks a type as being exported, that is, available to external users.\n*[[Callable.export]], marks a type as being exported, that is, available to external users.\n*[[Cancellation.export]], marks a type as being exported, that is, available to external users.\n*[[Capture.export]], marks a type as being exported, that is, available to external users.\n*[[Channel.export]], marks a type as being exported, that is, available to external users.\n*[[Code.export]], marks a type as being exported, that is, available to external users.\n*[[Complex.export]], marks a type as being exported, that is, available to external users.\n*[[Cool.export]], marks a type as being exported, that is, available to external users.\n*[[CurrentThreadScheduler.export]], marks a type as being exported, that is, available to external users.\n*[[Cursor.export]], marks a type as being exported, that is, available to external users.\n*[[Date.export]], marks a type as being exported, that is, available to external users.\n*[[DateTime.export]], marks a type as being exported, that is, available to external users.\n*[[Duration.export]], marks a type as being exported, that is, available to external users.\n*[[Exception.export]], marks a type as being exported, that is, available to external users.\n*[[Failure.export]], marks a type as being exported, that is, available to external users.\n*[[FatRat.export]], marks a type as being exported, that is, available to external users.\n*[[Grammar.export]], marks a type as being exported, that is, available to external users.\n*[[Hash.export]], marks a type as being exported, that is, available to external users.\n*[[Instant.export]], marks a type as being exported, that is, available to external users.\n*[[Int.export]], marks a type as being exported, that is, available to external users.\n*[[Iterable.export]], marks a type as being exported, that is, available to external users.\n*[[Junction.export]], marks a type as being exported, that is, available to external users.\n*[[Label.export]], marks a type as being exported, that is, available to external users.\n*[[List.export]], marks a type as being exported, that is, available to external users.\n*[[Lock.export]], marks a type as being exported, that is, available to external users.\n*[[Macro.export]], marks a routine as exported to the rest of the world\n*[[Map.export]], marks a type as being exported, that is, available to external users.\n*[[Match.export]], marks a type as being exported, that is, available to external users.\n*[[Method.export]], marks a routine as exported to the rest of the world\n*[[Mix.export]], marks a type as being exported, that is, available to external users.\n*[[MixHash.export]], marks a type as being exported, that is, available to external users.\n*[[Mu.export]], marks a type as being exported, that is, available to external users.\n*[[Nil.export]], marks a type as being exported, that is, available to external users.\n*[[Num.export]], marks a type as being exported, that is, available to external users.\n*[[Numeric.export]], marks a type as being exported, that is, available to external users.\n*[[ObjAt.export]], marks a type as being exported, that is, available to external users.\n*[[Pair.export]], marks a type as being exported, that is, available to external users.\n*[[Parameter.export]], marks a type as being exported, that is, available to external users.\n*[[Positional.export]], marks a type as being exported, that is, available to external users.\n*[[Proc.export]], marks a type as being exported, that is, available to external users.\n*[[Promise.export]], marks a type as being exported, that is, available to external users.\n*[[Proxy.export]], marks a type as being exported, that is, available to external users.\n*[[Range.export]], marks a type as being exported, that is, available to external users.\n*[[Rat.export]], marks a type as being exported, that is, available to external users.\n*[[Rational.export]], marks a type as being exported, that is, available to external users.\n*[[Real.export]], marks a type as being exported, that is, available to external users.\n*[[Regex.export]], marks a routine as exported to the rest of the world\n*[[Routine.export]], marks a routine as exported to the rest of the world\n*[[Scalar.export]], marks a type as being exported, that is, available to external users.\n*[[Semaphore.export]], marks a type as being exported, that is, available to external users.\n*[[Seq.export]], marks a type as being exported, that is, available to external users.\n*[[Set.export]], marks a type as being exported, that is, available to external users.\n*[[SetHash.export]], marks a type as being exported, that is, available to external users.\n*[[Signature.export]], marks a type as being exported, that is, available to external users.\n*[[Stash.export]], marks a type as being exported, that is, available to external users.\n*[[Str.export]], marks a type as being exported, that is, available to external users.\n*[[Sub.export]], marks a routine as exported to the rest of the world\n*[[Submethod.export]], marks a routine as exported to the rest of the world\n*[[Supplier.export]], marks a type as being exported, that is, available to external users.\n*[[Tap.export]], marks a type as being exported, that is, available to external users.\n*[[Thread.export]], marks a type as being exported, that is, available to external users.\n*[[ThreadPoolScheduler.export]], marks a type as being exported, that is, available to external users.\n*[[Uni.export]], marks a type as being exported, that is, available to external users.\n*[[Variable.export]], marks a type as being exported, that is, available to external users.\n*[[Version.export]], marks a type as being exported, that is, available to external users.\n*[[Whatever.export]], marks a type as being exported, that is, available to external users.\n*[[supplies.export]], marks a type as being exported, that is, available to external users.			
fail	D								*[[Channel.fail]], defined as:\n*[[Exception.fail]], defined as:			
fc	D								*[[Complex.fc]], defined as:\n*[[ComplexStr.fc]], does a Unicode "fold case" operation suitable for doing caseless string comparisons.\n*[[Cool.fc]], defined as:\n*[[Duration.fc]], defined as:\n*[[FatRat.fc]], defined as:\n*[[Hash.fc]], defined as:\n*[[Instant.fc]], defined as:\n*[[Int.fc]], defined as:\n*[[IntStr.fc]], does a Unicode "fold case" operation suitable for doing caseless string comparisons.\n*[[Iterable.fc]], defined as:\n*[[List.fc]], defined as:\n*[[Map.fc]], defined as:\n*[[Match.fc]], defined as:\n*[[Nil.fc]], defined as:\n*[[Num.fc]], defined as:\n*[[NumStr.fc]], does a Unicode "fold case" operation suitable for doing caseless string comparisons.\n*[[Numeric.fc]], defined as:\n*[[Range.fc]], defined as:\n*[[Rat.fc]], defined as:\n*[[RatStr.fc]], does a Unicode "fold case" operation suitable for doing caseless string comparisons.\n*[[Rational.fc]], defined as:\n*[[Real.fc]], defined as:\n*[[Seq.fc]], defined as:\n*[[Stash.fc]], defined as:\n*[[Str.fc]], defined as:			
file	D								*[[Block.file]], defined as:\n*[[CallFrame.file]], this is a shortcut for looking up the file annotation.\n*[[Code.file]], defined as:\n*[[Macro.file]], defined as:\n*[[Method.file]], defined as:\n*[[Regex.file]], defined as:\n*[[Routine.file]], defined as:\n*[[Sub.file]], defined as:\n*[[Submethod.file]], defined as:\n*[[WhateverCode.file]], defined as:			
finish	R	Thread.finish										
first	D								*[[Array.first]], defined as:\n*[[Backtrace.first]], defined as:\n*[[List.first]], defined as:\n*[[Slip.first]], defined as:			
flat	D								*[[AST.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Any.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Array.flat]], defined as:\n*[[Attribute.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Backtrace.flat]], defined as:\n*[[Bag.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[BagHash.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[CallFrame.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Callable.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Cancellation.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Capture.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Channel.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Code.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Complex.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Cool.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[CurrentThreadScheduler.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Cursor.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Date.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[DateTime.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Duration.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Exception.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Failure.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[FatRat.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Grammar.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Hash.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Instant.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Int.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Iterable.flat]], defined as:\n*[[Label.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[List.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Lock.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Map.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Match.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Mix.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[MixHash.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Nil.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Num.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Numeric.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[ObjAt.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Pair.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Parameter.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Positional.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Proc.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Promise.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Proxy.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Range.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Rat.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Rational.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Real.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Scalar.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Semaphore.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Seq.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Set.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[SetHash.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Signature.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Slip.flat]], defined as:\n*[[Stash.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Str.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Supplier.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Supply.flat]], creates a supply on which all of the values seen in the given supply are flattened before being emitted again.\n*[[Tap.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Thread.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[ThreadPoolScheduler.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Uni.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Variable.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Version.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[Whatever.flat]], interprets the invocant as a list, flattens it, and returns that list.\n*[[supplies.flat]], interprets the invocant as a list, flattens it, and returns that list.			
flatmap	D								*[[Array.flatmap]], defined as:\n*[[Backtrace.flatmap]], defined as:\n*[[List.flatmap]], defined as:\n*[[Slip.flatmap]], defined as:			
flip	D								*[[Complex.flip]], defined as:\n*[[ComplexStr.flip]], returns the string reversed character by character.\n*[[Cool.flip]], defined as:\n*[[Duration.flip]], defined as:\n*[[FatRat.flip]], defined as:\n*[[Hash.flip]], defined as:\n*[[Instant.flip]], defined as:\n*[[Int.flip]], defined as:\n*[[IntStr.flip]], returns the string reversed character by character.\n*[[Iterable.flip]], defined as:\n*[[List.flip]], defined as:\n*[[Map.flip]], defined as:\n*[[Match.flip]], defined as:\n*[[Nil.flip]], defined as:\n*[[Num.flip]], defined as:\n*[[NumStr.flip]], returns the string reversed character by character.\n*[[Numeric.flip]], defined as:\n*[[Range.flip]], defined as:\n*[[Rat.flip]], defined as:\n*[[RatStr.flip]], returns the string reversed character by character.\n*[[Rational.flip]], defined as:\n*[[Real.flip]], defined as:\n*[[Seq.flip]], defined as:\n*[[Stash.flip]], defined as:\n*[[Str.flip]], defined as:			
floor	D								*[[Complex.floor]], defined as:\n*[[ComplexStr.floor]], defined as:\n*[[Cool.floor]], defined as:\n*[[Duration.floor]], defined as:\n*[[FatRat.floor]], defined as:\n*[[Hash.floor]], defined as:\n*[[Instant.floor]], defined as:\n*[[Int.floor]], defined as:\n*[[Iterable.floor]], defined as:\n*[[List.floor]], defined as:\n*[[Map.floor]], defined as:\n*[[Match.floor]], defined as:\n*[[Nil.floor]], defined as:\n*[[Num.floor]], defined as:\n*[[Numeric.floor]], defined as:\n*[[Range.floor]], defined as:\n*[[Rat.floor]], defined as:\n*[[Rational.floor]], defined as:\n*[[Real.floor]], defined as:\n*[[Seq.floor]], defined as:\n*[[Stash.floor]], defined as:\n*[[Str.floor]], defined as:			
fmt	D								*[[Array.fmt]], defined as:\n*[[Backtrace.fmt]], defined as:\n*[[Complex.fmt]], defined as:\n*[[Cool.fmt]], defined as:\n*[[Duration.fmt]], defined as:\n*[[FatRat.fmt]], defined as:\n*[[Hash.fmt]], defined as:\n*[[Instant.fmt]], defined as:\n*[[Int.fmt]], defined as:\n*[[Iterable.fmt]], defined as:\n*[[List.fmt]], defined as:\n*[[Map.fmt]], defined as:\n*[[Match.fmt]], defined as:\n*[[Nil.fmt]], defined as:\n*[[Num.fmt]], defined as:\n*[[Numeric.fmt]], defined as:\n*[[Pair.fmt]], defined as:\n*[[Range.fmt]], defined as:\n*[[Rat.fmt]], defined as:\n*[[Rational.fmt]], defined as:\n*[[Real.fmt]], defined as:\n*[[Seq.fmt]], defined as:\n*[[Slip.fmt]], defined as:\n*[[Stash.fmt]], defined as:\n*[[Str.fmt]], defined as:			
formatter	D								*[[Date.formatter]], defined as:\n*[[DateTime.formatter]], defined as:\n*[[Dateish.formatter]], defined as:			
freeze	R	Pair.freeze										
from	D								*[[Array.from]], assumes the list contains Match objects and returns the value of .from called on the first element of the list.\n*[[Backtrace.from]], assumes the list contains Match objects and returns the value of .from called on the first element of the list.\n*[[List.from]], assumes the list contains Match objects and returns the value of .from called on the first element of the list.\n*[[Match.from]], returns the index of the starting position of the match.\n*[[Slip.from]], assumes the list contains Match objects and returns the value of .from called on the first element of the list.			
from-list	R	Supply.from-list										
from-loop	R	Seq.from-loop										
from-posix	R	Instant.from-posix										
full	R	Backtrace.full										
get_value	R	Attribute.get_value										
gist	D								*[[AST.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Any.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Attribute.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Bag.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[BagHash.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[CallFrame.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Callable.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Cancellation.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Capture.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Channel.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Code.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Complex.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[ComplexStr.gist]], defined as:\n*[[Cool.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[CurrentThreadScheduler.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Cursor.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Date.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[DateTime.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Duration.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Exception.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Failure.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[FatRat.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Grammar.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Hash.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Instant.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Int.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Iterable.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Junction.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Label.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[List.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Lock.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Map.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Match.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Mix.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[MixHash.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Mu.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Nil.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Num.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Numeric.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[ObjAt.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Pair.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Parameter.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Positional.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Proc.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Promise.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Proxy.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Range.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Rat.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Rational.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Real.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Scalar.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Semaphore.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Seq.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Set.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[SetHash.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Signature.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Stash.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Str.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Supplier.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Tap.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Thread.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[ThreadPoolScheduler.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Uni.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Variable.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Version.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[Whatever.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.\n*[[supplies.gist]], returns a string representation of the invocant, optimized for fast recognition by humans.			
grab	D								*[[Bag.grab]], defined as:\n*[[BagHash.grab]], defined as:\n*[[Baggy.grab]], defined as:\n*[[Mix.grab]], defined as:\n*[[MixHash.grab]], defined as:\n*[[Mixy.grab]], defined as:\n*[[Set.grab]], removes and returns $count elements chosen at random (without repetition) from the set.\n*[[SetHash.grab]], removes and returns $count elements chosen at random (without repetition) from the set.\n*[[Setty.grab]], removes and returns $count elements chosen at random (without repetition) from the set.\n*[[done.grab]], waits until the given supply is done.			
grabpairs	D								*[[Bag.grabpairs]], defined as:\n*[[BagHash.grabpairs]], defined as:\n*[[Baggy.grabpairs]], defined as:\n*[[Mix.grabpairs]], defined as:\n*[[MixHash.grabpairs]], defined as:\n*[[Mixy.grabpairs]], defined as:\n*[[Set.grabpairs]], removes $count elements chosen at random (without repetition) from the set, and returns a list of Pair objects whose keys are the grabbed elements and whose values are True.\n*[[SetHash.grabpairs]], removes $count elements chosen at random (without repetition) from the set, and returns a list of Pair objects whose keys are the grabbed elements and whose values are True.\n*[[Setty.grabpairs]], removes $count elements chosen at random (without repetition) from the set, and returns a list of Pair objects whose keys are the grabbed elements and whose values are True.			
grep	D								*[[Array.grep]], defined as:\n*[[Backtrace.grep]], defined as:\n*[[List.grep]], defined as:\n*[[Slip.grep]], defined as:\n*[[Supply.grep]], creates a new supply that only emits those values from the original supply that smart-match against $test.			
handled	R	Failure.handled										
has_accessor	R	Attribute.has_accessor										
hash	D								*[[Bag.hash]], defined as:\n*[[BagHash.hash]], defined as:\n*[[Baggy.hash]], defined as:\n*[[Capture.hash]], defined as:\n*[[Match.hash]], defined as:\n*[[Mix.hash]], defined as:\n*[[MixHash.hash]], defined as:\n*[[Mixy.hash]], defined as:			
head	D								*[[Array.head]], defined as:\n*[[Backtrace.head]], defined as:\n*[[List.head]], defined as:\n*[[Slip.head]], defined as:\n*[[Supply.head]], creates a "head" supply with the same semantics as List.head.			
hh-mm-ss	R	DateTime.hh-mm-ss										
hidden-from-backtrace	D								*[[Macro.hidden-from-backtrace]], hides a routine from showing up in a default backtrace.\n*[[Method.hidden-from-backtrace]], hides a routine from showing up in a default backtrace.\n*[[Regex.hidden-from-backtrace]], hides a routine from showing up in a default backtrace.\n*[[Routine.hidden-from-backtrace]], hides a routine from showing up in a default backtrace.\n*[[Sub.hidden-from-backtrace]], hides a routine from showing up in a default backtrace.\n*[[Submethod.hidden-from-backtrace]], hides a routine from showing up in a default backtrace.			
hour	R	DateTime.hour										
hyper	D								*[[Hash.hyper]], defined as:\n*[[Iterable.hyper]], defined as:\n*[[List.hyper]], defined as:\n*[[Map.hyper]], defined as:\n*[[Range.hyper]], defined as:\n*[[Seq.hyper]], defined as:\n*[[Stash.hyper]], defined as:			
i	D								*[[Complex.i]], adding a trailing i to a number literal makes it a Complex, for example:\n*[[ComplexStr.i]], adding a trailing i to a number literal makes it a Complex, for example:			
id	R	Thread.id										
im	D								*[[Complex.im]], defined as:\n*[[ComplexStr.im]], defined as:			
in	R	Promise.in										
in-timezone	R	DateTime.in-timezone										
indent	D								*[[ComplexStr.indent]], indents each line of the string by $steps.\n*[[IntStr.indent]], indents each line of the string by $steps.\n*[[NumStr.indent]], indents each line of the string by $steps.\n*[[RatStr.indent]], indents each line of the string by $steps.\n*[[Str.indent]], indents each line of the string by $steps.			
index	D								*[[Complex.index]], defined as:\n*[[ComplexStr.index]], searches for $needle in the string starting from $startpos.\n*[[Cool.index]], defined as:\n*[[Duration.index]], defined as:\n*[[FatRat.index]], defined as:\n*[[Hash.index]], defined as:\n*[[Instant.index]], defined as:\n*[[Int.index]], defined as:\n*[[IntStr.index]], searches for $needle in the string starting from $startpos.\n*[[Iterable.index]], defined as:\n*[[List.index]], defined as:\n*[[Map.index]], defined as:\n*[[Match.index]], defined as:\n*[[Nil.index]], defined as:\n*[[Num.index]], defined as:\n*[[NumStr.index]], searches for $needle in the string starting from $startpos.\n*[[Numeric.index]], defined as:\n*[[Range.index]], defined as:\n*[[Rat.index]], defined as:\n*[[RatStr.index]], searches for $needle in the string starting from $startpos.\n*[[Rational.index]], defined as:\n*[[Real.index]], defined as:\n*[[Seq.index]], defined as:\n*[[Stash.index]], defined as:\n*[[Str.index]], defined as:			
infinite	R	Range.infinite										
infix:&lt;+&gt;	D								*[[Date.infix:&lt;+&gt;]], takes an Int and adds that many days to the given Date object.\n*[[DateTime.infix:&lt;+&gt;]], takes a DateTime and increases it by the given Duration, preserving the timezone.			
infix:&lt;-&gt;	D								*[[Date.infix:&lt;-&gt;]], takes a date to subtract from and either an Int, representing the number of days to subtract, or another Date object.\n*[[DateTime.infix:&lt;-&gt;]], takes a DateTime to subtract from and either a Duration or another DateTime object.			
int-bounds	R	Range.int-bounds										
interval	R	Supply.interval										
invert	D								*[[Bag.invert]], defined as:\n*[[BagHash.invert]], defined as:\n*[[Baggy.invert]], defined as:\n*[[Hash.invert]], defined as:\n*[[Map.invert]], defined as:\n*[[Mix.invert]], defined as:\n*[[MixHash.invert]], defined as:\n*[[Mixy.invert]], defined as:\n*[[Pair.invert]], defined as:\n*[[Stash.invert]], defined as:			
invocant	R	Parameter.invocant										
is-int	R	Range.is-int										
is-lazy	D								*[[Iterator.is-lazy]], defined as:\n*[[Seq.is-lazy]], returns True if the sequence is lazy and potentially infinite, and False otherwise.			
is-leap-year	D								*[[Date.is-leap-year]], defined as:\n*[[DateTime.is-leap-year]], defined as:\n*[[Dateish.is-leap-year]], defined as:			
is-prime	D								*[[Bool.is-prime]], defined as:\n*[[Int.is-prime]], defined as:\n*[[IntStr.is-prime]], defined as:\n*[[Order.is-prime]], defined as:\n*[[nativeInt.is-prime]], defined as:			
isNaN	D								*[[Complex.isNaN]], defined as:\n*[[ComplexStr.isNaN]], defined as:\n*[[FatRat.isNaN]], tests whether the invocant's Num value is a NaN.\n*[[Rat.isNaN]], tests whether the invocant's Num value is a NaN.\n*[[Rational.isNaN]], tests whether the invocant's Num value is a NaN.			
isa	D								*[[AST.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Any.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Attribute.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Bag.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[BagHash.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[CallFrame.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Callable.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Cancellation.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Capture.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Channel.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Code.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Complex.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Cool.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[CurrentThreadScheduler.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Cursor.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Date.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[DateTime.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Duration.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Exception.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Failure.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[FatRat.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Grammar.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Hash.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Instant.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Int.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Iterable.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Junction.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Label.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[List.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Lock.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Map.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Match.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Mix.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[MixHash.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Mu.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Nil.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Num.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Numeric.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[ObjAt.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Pair.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Parameter.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Positional.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Proc.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Promise.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Proxy.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Range.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Rat.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Rational.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Real.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Scalar.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Semaphore.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Seq.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Set.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[SetHash.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Signature.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Stash.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Str.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Supplier.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Tap.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Thread.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[ThreadPoolScheduler.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Uni.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Variable.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Version.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[Whatever.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.\n*[[supplies.isa]], returns True if the invocant is an instance of class $type, a subset type or a derived class (through inheritance) of $type.			
item	D								*[[AST.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Any.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Attribute.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Bag.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[BagHash.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[CallFrame.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Callable.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Cancellation.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Capture.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Channel.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Code.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Complex.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Cool.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[CurrentThreadScheduler.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Cursor.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Date.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[DateTime.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Duration.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Exception.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Failure.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[FatRat.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Grammar.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Hash.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Instant.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Int.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Iterable.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Junction.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Label.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[List.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Lock.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Map.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Match.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Mix.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[MixHash.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Mu.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Nil.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Num.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Numeric.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[ObjAt.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Pair.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Parameter.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Positional.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Proc.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Promise.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Proxy.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Range.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Rat.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Rational.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Real.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Scalar.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Semaphore.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Seq.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Set.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[SetHash.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Signature.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Stash.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Str.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Supplier.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Tap.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Thread.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[ThreadPoolScheduler.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Uni.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Variable.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Version.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[Whatever.item]], forces the invocant to be evaluated in item context and returns the value of it.\n*[[supplies.item]], forces the invocant to be evaluated in item context and returns the value of it.			
iterator	D								*[[Hash.iterator]], defined as:\n*[[Iterable.iterator]], defined as:\n*[[List.iterator]], defined as:\n*[[Map.iterator]], defined as:\n*[[PositionalBindFailover.iterator]], this method stub ensure that a class implementing role PositionalBindFailover provides an iterator method.\n*[[Range.iterator]], defined as:\n*[[Seq.iterator]], this method stub ensure that a class implementing role PositionalBindFailover provides an iterator method.\n*[[Stash.iterator]], defined as:			
join	D								*[[Array.join]], defined as:\n*[[Backtrace.join]], defined as:\n*[[List.join]], defined as:\n*[[Slip.join]], defined as:\n*[[Thread.join]], waits for the thread to finish.			
keep	R	Promise.keep										
key	R	Pair.key										
keyof	D								*[[Hash.keyof]], defined as:\n*[[Stash.keyof]], defined as:			
keys	D								*[[Array.keys]], defined as:\n*[[Backtrace.keys]], defined as:\n*[[Bag.keys]], defined as:\n*[[BagHash.keys]], defined as:\n*[[Baggy.keys]], defined as:\n*[[Capture.keys]], defined as:\n*[[Hash.keys]], defined as:\n*[[List.keys]], defined as:\n*[[Map.keys]], defined as:\n*[[Match.keys]], defined as:\n*[[Mix.keys]], defined as:\n*[[MixHash.keys]], defined as:\n*[[Mixy.keys]], defined as:\n*[[Pair.keys]], defined as:\n*[[Set.keys]], defined as:\n*[[SetHash.keys]], defined as:\n*[[Setty.keys]], defined as:\n*[[Slip.keys]], defined as:\n*[[Stash.keys]], defined as:			
kv	D								*[[Array.kv]], defined as:\n*[[Backtrace.kv]], defined as:\n*[[Bag.kv]], defined as:\n*[[BagHash.kv]], defined as:\n*[[Baggy.kv]], defined as:\n*[[Capture.kv]], defined as:\n*[[Hash.kv]], defined as:\n*[[List.kv]], defined as:\n*[[Map.kv]], defined as:\n*[[Match.kv]], defined as:\n*[[Mix.kv]], defined as:\n*[[MixHash.kv]], defined as:\n*[[Mixy.kv]], defined as:\n*[[Pair.kv]], defined as:\n*[[Set.kv]], defined as:\n*[[SetHash.kv]], defined as:\n*[[Setty.kv]], defined as:\n*[[Slip.kv]], defined as:\n*[[Stash.kv]], defined as:			
kxxv	D								*[[Bag.kxxv]], defined as:\n*[[BagHash.kxxv]], defined as:\n*[[Baggy.kxxv]], defined as:\n*[[Mix.kxxv]], defined as:\n*[[MixHash.kxxv]], defined as:\n*[[Mixy.kxxv]], defined as:			
last	R	Label.last										
later	D								*[[Date.later]], defined as:\n*[[DateTime.later]], defined as:			
lazy	D								*[[Hash.lazy]], defined as:\n*[[Iterable.lazy]], defined as:\n*[[List.lazy]], defined as:\n*[[Map.lazy]], defined as:\n*[[Range.lazy]], defined as:\n*[[Seq.lazy]], defined as:\n*[[Stash.lazy]], defined as:			
lc	D								*[[Complex.lc]], defined as:\n*[[ComplexStr.lc]], defined as:\n*[[Cool.lc]], defined as:\n*[[Duration.lc]], defined as:\n*[[FatRat.lc]], defined as:\n*[[Hash.lc]], defined as:\n*[[Instant.lc]], defined as:\n*[[Int.lc]], defined as:\n*[[IntStr.lc]], defined as:\n*[[Iterable.lc]], defined as:\n*[[List.lc]], defined as:\n*[[Map.lc]], defined as:\n*[[Match.lc]], defined as:\n*[[Nil.lc]], defined as:\n*[[Num.lc]], defined as:\n*[[NumStr.lc]], defined as:\n*[[Numeric.lc]], defined as:\n*[[Range.lc]], defined as:\n*[[Rat.lc]], defined as:\n*[[RatStr.lc]], defined as:\n*[[Rational.lc]], defined as:\n*[[Real.lc]], defined as:\n*[[Seq.lc]], defined as:\n*[[Stash.lc]], defined as:\n*[[Str.lc]], defined as:			
level	R	CallFrame.level										
line	D								*[[Block.line]], defined as\n*[[CallFrame.line]], this is a shortcut for looking up the line annotation.\n*[[Code.line]], defined as\n*[[Macro.line]], defined as\n*[[Method.line]], defined as\n*[[Regex.line]], defined as\n*[[Routine.line]], defined as\n*[[Sub.line]], defined as\n*[[Submethod.line]], defined as\n*[[WhateverCode.line]], defined as			
lines	D								*[[Complex.lines]], defined as:\n*[[ComplexStr.lines]], returns a list of lines (without trailing newline characters), i.e. \n*[[Cool.lines]], defined as:\n*[[Duration.lines]], defined as:\n*[[FatRat.lines]], defined as:\n*[[Hash.lines]], defined as:\n*[[Instant.lines]], defined as:\n*[[Int.lines]], defined as:\n*[[IntStr.lines]], returns a list of lines (without trailing newline characters), i.e. \n*[[Iterable.lines]], defined as:\n*[[List.lines]], defined as:\n*[[Map.lines]], defined as:\n*[[Match.lines]], defined as:\n*[[Nil.lines]], defined as:\n*[[Num.lines]], defined as:\n*[[NumStr.lines]], returns a list of lines (without trailing newline characters), i.e. \n*[[Numeric.lines]], defined as:\n*[[Range.lines]], defined as:\n*[[Rat.lines]], defined as:\n*[[RatStr.lines]], returns a list of lines (without trailing newline characters), i.e. \n*[[Rational.lines]], defined as:\n*[[Real.lines]], defined as:\n*[[Seq.lines]], defined as:\n*[[Stash.lines]], defined as:\n*[[Str.lines]], defined as:\n*[[Supply.lines]], creates a supply that will emit the characters coming in line by line from a supply that's usually created by some asynchronous I/O operation.			
list	D								*[[AST.list]], interprets the invocant as a list, and returns that List.\n*[[Any.list]], interprets the invocant as a list, and returns that List.\n*[[Attribute.list]], interprets the invocant as a list, and returns that List.\n*[[Bag.list]], interprets the invocant as a list, and returns that List.\n*[[BagHash.list]], interprets the invocant as a list, and returns that List.\n*[[CallFrame.list]], interprets the invocant as a list, and returns that List.\n*[[Callable.list]], interprets the invocant as a list, and returns that List.\n*[[Cancellation.list]], interprets the invocant as a list, and returns that List.\n*[[Capture.list]], interprets the invocant as a list, and returns that List.\n*[[Channel.list]], interprets the invocant as a list, and returns that List.\n*[[Code.list]], interprets the invocant as a list, and returns that List.\n*[[Complex.list]], interprets the invocant as a list, and returns that List.\n*[[Cool.list]], interprets the invocant as a list, and returns that List.\n*[[CurrentThreadScheduler.list]], interprets the invocant as a list, and returns that List.\n*[[Cursor.list]], interprets the invocant as a list, and returns that List.\n*[[Date.list]], interprets the invocant as a list, and returns that List.\n*[[DateTime.list]], interprets the invocant as a list, and returns that List.\n*[[Duration.list]], interprets the invocant as a list, and returns that List.\n*[[Exception.list]], interprets the invocant as a list, and returns that List.\n*[[Failure.list]], interprets the invocant as a list, and returns that List.\n*[[FatRat.list]], interprets the invocant as a list, and returns that List.\n*[[Grammar.list]], interprets the invocant as a list, and returns that List.\n*[[Hash.list]], interprets the invocant as a list, and returns that List.\n*[[Instant.list]], interprets the invocant as a list, and returns that List.\n*[[Int.list]], interprets the invocant as a list, and returns that List.\n*[[Iterable.list]], interprets the invocant as a list, and returns that List.\n*[[Label.list]], interprets the invocant as a list, and returns that List.\n*[[List.list]], interprets the invocant as a list, and returns that List.\n*[[Lock.list]], interprets the invocant as a list, and returns that List.\n*[[Map.list]], interprets the invocant as a list, and returns that List.\n*[[Match.list]], interprets the invocant as a list, and returns that List.\n*[[Mix.list]], interprets the invocant as a list, and returns that List.\n*[[MixHash.list]], interprets the invocant as a list, and returns that List.\n*[[Nil.list]], interprets the invocant as a list, and returns that List.\n*[[Num.list]], interprets the invocant as a list, and returns that List.\n*[[Numeric.list]], interprets the invocant as a list, and returns that List.\n*[[ObjAt.list]], interprets the invocant as a list, and returns that List.\n*[[Pair.list]], interprets the invocant as a list, and returns that List.\n*[[Parameter.list]], interprets the invocant as a list, and returns that List.\n*[[Positional.list]], interprets the invocant as a list, and returns that List.\n*[[PositionalBindFailover.list]], returns a List based on the iterator method without caching it.\n*[[Proc.list]], interprets the invocant as a list, and returns that List.\n*[[Promise.list]], interprets the invocant as a list, and returns that List.\n*[[Proxy.list]], interprets the invocant as a list, and returns that List.\n*[[Range.list]], interprets the invocant as a list, and returns that List.\n*[[Rat.list]], interprets the invocant as a list, and returns that List.\n*[[Rational.list]], interprets the invocant as a list, and returns that List.\n*[[Real.list]], interprets the invocant as a list, and returns that List.\n*[[Scalar.list]], interprets the invocant as a list, and returns that List.\n*[[Semaphore.list]], interprets the invocant as a list, and returns that List.\n*[[Seq.list]], interprets the invocant as a list, and returns that List.\n*[[Set.list]], interprets the invocant as a list, and returns that List.\n*[[SetHash.list]], interprets the invocant as a list, and returns that List.\n*[[Signature.list]], interprets the invocant as a list, and returns that List.\n*[[Stash.list]], interprets the invocant as a list, and returns that List.\n*[[Str.list]], interprets the invocant as a list, and returns that List.\n*[[Supplier.list]], interprets the invocant as a list, and returns that List.\n*[[Tap.list]], interprets the invocant as a list, and returns that List.\n*[[Thread.list]], interprets the invocant as a list, and returns that List.\n*[[ThreadPoolScheduler.list]], interprets the invocant as a list, and returns that List.\n*[[Uni.list]], interprets the invocant as a list, and returns that List.\n*[[Variable.list]], interprets the invocant as a list, and returns that List.\n*[[Version.list]], interprets the invocant as a list, and returns that List.\n*[[Whatever.list]], interprets the invocant as a list, and returns that List.\n*[[done.list]], waits until the supply is done, then returns a list of all values emitted since the list call.\n*[[supplies.list]], interprets the invocant as a list, and returns that List.			
local	R	DateTime.local										
lock	R	Lock.lock										
log	D								*[[Complex.log]], defined as:\n*[[Cool.log]], defined as:\n*[[Duration.log]], defined as:\n*[[FatRat.log]], defined as:\n*[[Hash.log]], defined as:\n*[[Instant.log]], defined as:\n*[[Int.log]], defined as:\n*[[Iterable.log]], defined as:\n*[[List.log]], defined as:\n*[[Map.log]], defined as:\n*[[Match.log]], defined as:\n*[[Nil.log]], defined as:\n*[[Num.log]], defined as:\n*[[Numeric.log]], calculates the logarithm to base $base.\n*[[Range.log]], defined as:\n*[[Rat.log]], defined as:\n*[[Rational.log]], defined as:\n*[[Real.log]], defined as:\n*[[Seq.log]], defined as:\n*[[Stash.log]], defined as:\n*[[Str.log]], defined as:			
log10	D								*[[Complex.log10]], defined as:\n*[[Cool.log10]], defined as:\n*[[Duration.log10]], defined as:\n*[[FatRat.log10]], defined as:\n*[[Hash.log10]], defined as:\n*[[Instant.log10]], defined as:\n*[[Int.log10]], defined as:\n*[[Iterable.log10]], defined as:\n*[[List.log10]], defined as:\n*[[Map.log10]], defined as:\n*[[Match.log10]], defined as:\n*[[Nil.log10]], defined as:\n*[[Num.log10]], defined as:\n*[[Numeric.log10]], calculates the logarithm to base 10.\n*[[Range.log10]], defined as:\n*[[Rat.log10]], defined as:\n*[[Rational.log10]], defined as:\n*[[Real.log10]], defined as:\n*[[Seq.log10]], defined as:\n*[[Stash.log10]], defined as:\n*[[Str.log10]], defined as:			
lsb	D								*[[Bool.lsb]], defined as:\n*[[Int.lsb]], defined as:\n*[[IntStr.lsb]], defined as:\n*[[Order.lsb]], defined as:\n*[[nativeInt.lsb]], defined as:			
made	R	Match.made										
make	R	Match.make										
map	D								*[[AST.map]], defined as:\n*[[Any.map]], defined as:\n*[[Array.map]], defined as:\n*[[Attribute.map]], defined as:\n*[[Backtrace.map]], defined as:\n*[[Bag.map]], defined as:\n*[[BagHash.map]], defined as:\n*[[CallFrame.map]], defined as:\n*[[Callable.map]], defined as:\n*[[Cancellation.map]], defined as:\n*[[Capture.map]], defined as:\n*[[Channel.map]], defined as:\n*[[Code.map]], defined as:\n*[[Complex.map]], defined as:\n*[[Cool.map]], defined as:\n*[[CurrentThreadScheduler.map]], defined as:\n*[[Cursor.map]], defined as:\n*[[Date.map]], defined as:\n*[[DateTime.map]], defined as:\n*[[Duration.map]], defined as:\n*[[Exception.map]], defined as:\n*[[Failure.map]], defined as:\n*[[FatRat.map]], defined as:\n*[[Grammar.map]], defined as:\n*[[Hash.map]], defined as:\n*[[Instant.map]], defined as:\n*[[Int.map]], defined as:\n*[[Iterable.map]], defined as:\n*[[Label.map]], defined as:\n*[[List.map]], defined as:\n*[[Lock.map]], defined as:\n*[[Map.map]], defined as:\n*[[Match.map]], defined as:\n*[[Mix.map]], defined as:\n*[[MixHash.map]], defined as:\n*[[Nil.map]], defined as:\n*[[Num.map]], defined as:\n*[[Numeric.map]], defined as:\n*[[ObjAt.map]], defined as:\n*[[Pair.map]], defined as:\n*[[Parameter.map]], defined as:\n*[[Positional.map]], defined as:\n*[[Proc.map]], defined as:\n*[[Promise.map]], defined as:\n*[[Proxy.map]], defined as:\n*[[Range.map]], defined as:\n*[[Rat.map]], defined as:\n*[[Rational.map]], defined as:\n*[[Real.map]], defined as:\n*[[Scalar.map]], defined as:\n*[[Semaphore.map]], defined as:\n*[[Seq.map]], defined as:\n*[[Set.map]], defined as:\n*[[SetHash.map]], defined as:\n*[[Signature.map]], defined as:\n*[[Slip.map]], defined as:\n*[[Stash.map]], defined as:\n*[[Str.map]], defined as:\n*[[Supplier.map]], defined as:\n*[[Supply.map]], returns a new supply that maps each value of the given supply through &amp;mapper and emits it to the new supply.\n*[[Tap.map]], defined as:\n*[[Thread.map]], defined as:\n*[[ThreadPoolScheduler.map]], defined as:\n*[[Uni.map]], defined as:\n*[[Variable.map]], defined as:\n*[[Version.map]], defined as:\n*[[Whatever.map]], defined as:\n*[[supplies.map]], defined as:			
match	D								*[[Complex.match]], defined as:\n*[[ComplexStr.match]], performs a match of the string against $pat and returns a Match object if there is a successful match, and (Any) otherwise.\n*[[Cool.match]], defined as:\n*[[Duration.match]], defined as:\n*[[FatRat.match]], defined as:\n*[[Hash.match]], defined as:\n*[[Instant.match]], defined as:\n*[[Int.match]], defined as:\n*[[IntStr.match]], performs a match of the string against $pat and returns a Match object if there is a successful match, and (Any) otherwise.\n*[[Iterable.match]], defined as:\n*[[List.match]], defined as:\n*[[Map.match]], defined as:\n*[[Match.match]], defined as:\n*[[Nil.match]], defined as:\n*[[Num.match]], defined as:\n*[[NumStr.match]], performs a match of the string against $pat and returns a Match object if there is a successful match, and (Any) otherwise.\n*[[Numeric.match]], defined as:\n*[[Range.match]], defined as:\n*[[Rat.match]], defined as:\n*[[RatStr.match]], performs a match of the string against $pat and returns a Match object if there is a successful match, and (Any) otherwise.\n*[[Rational.match]], defined as:\n*[[Real.match]], defined as:\n*[[Seq.match]], defined as:\n*[[Stash.match]], defined as:\n*[[Str.match]], defined as:			
max	D								*[[Range.max]], returns the end point of the range.\n*[[Supply.max]], creates a supply that only emits values from the given supply if they are larger than any value seen before.			
message	R	Exception.message										
migrate	R	Supply.migrate										
min	D								*[[Range.min]], returns the start point of the range.\n*[[Supply.min]], creates a supply that only emits values from the given supply if they are smaller than any value seen before.			
minmax	D								*[[Range.minmax]], defined as:\n*[[Supply.minmax]], creates a supply that emits a Range every time a new minimum or maximum values is seen from the given supply.			
minute	R	DateTime.minute										
mix	R	Mix.mix										
month	D								*[[Date.month]], defined as:\n*[[DateTime.month]], defined as:\n*[[Dateish.month]], defined as:			
msb	D								*[[Bool.msb]], defined as:\n*[[Int.msb]], defined as:\n*[[IntStr.msb]], defined as:\n*[[Order.msb]], defined as:\n*[[nativeInt.msb]], defined as:			
multi	D								*[[Macro.multi]], returns True if the routine is a multi sub or method.\n*[[Method.multi]], returns True if the routine is a multi sub or method.\n*[[Regex.multi]], returns True if the routine is a multi sub or method.\n*[[Routine.multi]], returns True if the routine is a multi sub or method.\n*[[Sub.multi]], returns True if the routine is a multi sub or method.\n*[[Submethod.multi]], returns True if the routine is a multi sub or method.			
my	R	CallFrame.my										
name	D								*[[Attribute.name]], defined as:\n*[[Macro.name]], returns the name of the sub or method.\n*[[Method.name]], returns the name of the sub or method.\n*[[Parameter.name]], returns the variable name, which includes all sigils and twigils.\n*[[Regex.name]], returns the name of the sub or method.\n*[[Routine.name]], returns the name of the sub or method.\n*[[Sub.name]], returns the name of the sub or method.\n*[[Submethod.name]], returns the name of the sub or method.\n*[[Thread.name]], returns the user defined string, which can optionally be set during object creation in order to identify the Thread, or '&lt;anon&gt;' if no such string was specified.\n*[[Variable.name]], returns the name of the variable, including the sigil.			
named	R	Parameter.named										
named_names	R	Parameter.named_names										
narrow	D								*[[Complex.narrow]], returns the number converted to the narrowest type that can hold it without loss of precision.\n*[[Duration.narrow]], returns the number converted to the narrowest type that can hold it without loss of precision.\n*[[FatRat.narrow]], returns the number converted to the narrowest type that can hold it without loss of precision.\n*[[Instant.narrow]], returns the number converted to the narrowest type that can hold it without loss of precision.\n*[[Int.narrow]], returns the number converted to the narrowest type that can hold it without loss of precision.\n*[[Num.narrow]], returns the number converted to the narrowest type that can hold it without loss of precision.\n*[[Numeric.narrow]], returns the number converted to the narrowest type that can hold it without loss of precision.\n*[[Rat.narrow]], returns the number converted to the narrowest type that can hold it without loss of precision.\n*[[Rational.narrow]], returns the number converted to the narrowest type that can hold it without loss of precision.\n*[[Real.narrow]], returns the number converted to the narrowest type that can hold it without loss of precision.			
nativeInt.ACCEPTS	R	Real.ACCEPTS										
nativeInt.ACCEPTS	R	Real.ACCEPTS										
nativeInt.Bool	R	Real.Bool										
nativeInt.CREATE	R	Real.CREATE										
nativeInt.EVAL	R	Real.EVAL										
nativeInt.EVALFILE	R	Real.EVALFILE										
nativeInt.IO	R	Real.IO										
nativeInt.Rat	R	Real.Rat										
nativeInt.Str	R	Real.Str										
nativeInt.WHERE	R	Real.WHERE										
nativeInt.WHICH	R	Real.WHICH										
nativeInt.WHY	R	Real.WHY										
nativeInt.abs	R	Real.abs										
nativeInt.acos	R	Real.acos										
nativeInt.acosec	R	Real.acosec										
nativeInt.acosech	R	Real.acosech										
nativeInt.acosh	R	Real.acosh										
nativeInt.acotan	R	Real.acotan										
nativeInt.acotanh	R	Real.acotanh										
nativeInt.all	R	Real.all										
nativeInt.any	R	Real.any										
nativeInt.asec	R	Real.asec										
nativeInt.asech	R	Real.asech										
nativeInt.asin	R	Real.asin										
nativeInt.asinh	R	Real.asinh										
nativeInt.atan	R	Real.atan										
nativeInt.atan2	R	Real.atan2										
nativeInt.atanh	R	Real.atanh										
nativeInt.base	R	Real.base										
nativeInt.bless	R	Real.bless										
nativeInt.ceiling	R	Real.ceiling										
nativeInt.ceiling	R	Real.ceiling										
nativeInt.chars	R	Real.chars										
nativeInt.chomp	R	Real.chomp										
nativeInt.chop	R	Real.chop										
nativeInt.chr	A			Perl 6 nativeInt							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/nativeInt.html#%28Int%29_routine_chr
nativeInt.chr	R	Real.chr										
nativeInt.chrs	R	Real.chrs										
nativeInt.cis	R	Real.cis										
nativeInt.clone	R	Real.clone										
nativeInt.codes	R	Real.codes										
nativeInt.comb	R	Real.comb										
nativeInt.conj	R	Real.conj										
nativeInt.contains	R	Real.contains										
nativeInt.cos	R	Real.cos										
nativeInt.cosec	R	Real.cosec										
nativeInt.cosech	R	Real.cosech										
nativeInt.cosh	R	Real.cosh										
nativeInt.cotan	R	Real.cotan										
nativeInt.cotanh	R	Real.cotanh										
nativeInt.deepmap	R	Real.deepmap										
nativeInt.defined	R	Real.defined										
nativeInt.div	A			Perl 6 nativeInt							<section class="prog__container"><pre><code>multi sub infix:&lt;div&gt;(Int:D, Int:D --&gt; Int:D)</code></pre><p>Does an integer division, rounded down.&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/nativeInt.html#%28Int%29_infix_div
nativeInt.does	R	Real.does										
nativeInt.duckmap	R	Real.duckmap										
nativeInt.eager	R	Real.eager										
nativeInt.elems	R	Real.elems										
nativeInt.emit	R	Real.emit										
nativeInt.end	R	Real.end										
nativeInt.exit	R	Real.exit										
nativeInt.exp	R	Real.exp										
nativeInt.expmod	A			Perl 6 nativeInt							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/nativeInt.html#%28Int%29_routine_expmod
nativeInt.export	R	Real.export										
nativeInt.fc	R	Real.fc										
nativeInt.flat	R	Real.flat										
nativeInt.flip	R	Real.flip										
nativeInt.floor	R	Real.floor										
nativeInt.floor	R	Real.floor										
nativeInt.fmt	R	Real.fmt										
nativeInt.gist	R	Real.gist										
nativeInt.index	R	Real.index										
nativeInt.is-prime	A			Perl 6 nativeInt							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/nativeInt.html#%28Int%29_routine_is-prime
nativeInt.isa	R	Real.isa										
nativeInt.item	R	Real.item										
nativeInt.lc	R	Real.lc										
nativeInt.lines	R	Real.lines										
nativeInt.list	R	Real.list										
nativeInt.log	R	Real.log										
nativeInt.log10	R	Real.log10										
nativeInt.lsb	A			Perl 6 nativeInt							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/nativeInt.html#%28Int%29_routine_lsb
nativeInt.map	R	Real.map										
nativeInt.match	R	Real.match										
nativeInt.msb	A			Perl 6 nativeInt							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/nativeInt.html#%28Int%29_routine_msb
nativeInt.new	R	Real.new										
nativeInt.none	R	Real.none										
nativeInt.not	R	Real.not										
nativeInt.one	R	Real.one										
nativeInt.ord	R	Real.ord										
nativeInt.ords	R	Real.ords										
nativeInt.pairup	R	Real.pairup										
nativeInt.perl	R	Real.perl										
nativeInt.polymod	A			Perl 6 nativeInt							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/nativeInt.html#%28Int%29_method_polymod
nativeInt.print	R	Real.print										
nativeInt.push	R	Real.push										
nativeInt.put	R	Real.put										
nativeInt.rand	R	Real.rand										
nativeInt.rand	R	Real.rand										
nativeInt.return	R	Real.return										
nativeInt.return-rw	R	Real.return-rw										
nativeInt.reverse	R	Real.reverse										
nativeInt.rindex	R	Real.rindex										
nativeInt.roots	R	Real.roots										
nativeInt.round	R	Real.round										
nativeInt.round	R	Real.round										
nativeInt.samecase	R	Real.samecase										
nativeInt.say	R	Real.say										
nativeInt.sec	R	Real.sec										
nativeInt.sech	R	Real.sech										
nativeInt.sign	R	Real.sign										
nativeInt.sign	R	Real.sign										
nativeInt.sin	R	Real.sin										
nativeInt.sinh	R	Real.sinh										
nativeInt.so	R	Real.so										
nativeInt.sort	R	Real.sort										
nativeInt.split	R	Real.split										
nativeInt.sqrt	R	Real.sqrt										
nativeInt.substr	R	Real.substr										
nativeInt.take	R	Real.take										
nativeInt.take	R	Real.take										
nativeInt.take-rw	R	Real.take-rw										
nativeInt.tan	R	Real.tan										
nativeInt.tanh	R	Real.tanh										
nativeInt.tc	R	Real.tc										
nativeInt.tclc	R	Real.tclc										
nativeInt.trim	R	Real.trim										
nativeInt.trim-leading	R	Real.trim-leading										
nativeInt.trim-trailing	R	Real.trim-trailing										
nativeInt.truncate	R	Real.truncate										
nativeInt.truncate	R	Real.truncate										
nativeInt.uc	R	Real.uc										
nativeInt.unimatch	R	Real.unimatch										
nativeInt.uniname	R	Real.uniname										
nativeInt.uninames	R	Real.uninames										
nativeInt.uniprop	R	Real.uniprop										
nativeInt.uniprops	R	Real.uniprops										
nativeInt.unival	A			Perl 6 nativeInt							<section class="prog__container"><p>Defined as:&lt;/p&gt;&lt;/section&gt;	https://docs.perl6.org/type/nativeInt.html#%28Int%29_routine_unival
nativeInt.unpolar	R	Real.unpolar										
nativeInt.wordcase	R	Real.wordcase										
nativeInt.words	R	Real.words										
new	D								*[[AST.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Any.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Attribute.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Backtrace.new]], defined as:\n*[[Bag.new]], default method for constructing (create + initialize) new objects of a class.\n*[[BagHash.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Blob.new]], defined as:\n*[[Buf.new]], defined as:\n*[[CallFrame.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Callable.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Cancellation.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Capture.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Channel.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Code.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Complex.new]], default method for constructing (create + initialize) new objects of a class.\n*[[ComplexStr.new]], defined as:\n*[[Cool.new]], default method for constructing (create + initialize) new objects of a class.\n*[[CurrentThreadScheduler.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Cursor.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Date.new]], default method for constructing (create + initialize) new objects of a class.\n*[[DateTime.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Duration.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Exception.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Failure.new]], default method for constructing (create + initialize) new objects of a class.\n*[[FatRat.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Grammar.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Hash.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Instant.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Int.new]], default method for constructing (create + initialize) new objects of a class.\n*[[IntStr.new]], the constructor requires both the Int and the Str value, when constructing one directly the values can be whatever is required:\n*[[Iterable.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Junction.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Label.new]], default method for constructing (create + initialize) new objects of a class.\n*[[List.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Lock.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Map.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Match.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Mix.new]], default method for constructing (create + initialize) new objects of a class.\n*[[MixHash.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Mu.new]], default method for constructing (create + initialize) new objects of a class.\n*[[NFC.new]], creates a new Uni instance from the given codepoint numbers.\n*[[NFD.new]], creates a new Uni instance from the given codepoint numbers.\n*[[NFKC.new]], creates a new Uni instance from the given codepoint numbers.\n*[[NFKD.new]], creates a new Uni instance from the given codepoint numbers.\n*[[Nil.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Num.new]], default method for constructing (create + initialize) new objects of a class.\n*[[NumStr.new]], the constructor requires both the Num and the Str value, when constructing one directly the values can be whatever is required:\n*[[Numeric.new]], default method for constructing (create + initialize) new objects of a class.\n*[[ObjAt.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Pair.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Parameter.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Positional.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Proc.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Promise.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Proxy.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Range.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Rat.new]], default method for constructing (create + initialize) new objects of a class.\n*[[RatStr.new]], the constructor requires both the Rat and the Str value, when constructing one directly the values can be whatever is required:\n*[[Rational.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Real.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Scalar.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Semaphore.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Seq.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Set.new]], default method for constructing (create + initialize) new objects of a class.\n*[[SetHash.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Signature.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Stash.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Str.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Supplier.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Tap.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Thread.new]], default method for constructing (create + initialize) new objects of a class.\n*[[ThreadPoolScheduler.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Uni.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Variable.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Version.new]], default method for constructing (create + initialize) new objects of a class.\n*[[Whatever.new]], default method for constructing (create + initialize) new objects of a class.\n*[[supplies.new]], default method for constructing (create + initialize) new objects of a class.			
new-from-daycount	R	Date.new-from-daycount										
new-from-pairs	D								*[[Bag.new-from-pairs]], defined as:\n*[[BagHash.new-from-pairs]], defined as:\n*[[Baggy.new-from-pairs]], defined as:\n*[[Mix.new-from-pairs]], defined as:\n*[[MixHash.new-from-pairs]], defined as:\n*[[Mixy.new-from-pairs]], defined as:\n*[[Set.new-from-pairs]], defined as:\n*[[SetHash.new-from-pairs]], defined as:\n*[[Setty.new-from-pairs]], defined as:			
next	R	Label.next										
none	D								*[[AST.none]], defined as:\n*[[Any.none]], defined as:\n*[[Attribute.none]], defined as:\n*[[Bag.none]], defined as:\n*[[BagHash.none]], defined as:\n*[[CallFrame.none]], defined as:\n*[[Callable.none]], defined as:\n*[[Cancellation.none]], defined as:\n*[[Capture.none]], defined as:\n*[[Channel.none]], defined as:\n*[[Code.none]], defined as:\n*[[Complex.none]], defined as:\n*[[Cool.none]], defined as:\n*[[CurrentThreadScheduler.none]], defined as:\n*[[Cursor.none]], defined as:\n*[[Date.none]], defined as:\n*[[DateTime.none]], defined as:\n*[[Duration.none]], defined as:\n*[[Exception.none]], defined as:\n*[[Failure.none]], defined as:\n*[[FatRat.none]], defined as:\n*[[Grammar.none]], defined as:\n*[[Hash.none]], defined as:\n*[[Instant.none]], defined as:\n*[[Int.none]], defined as:\n*[[Iterable.none]], defined as:\n*[[Label.none]], defined as:\n*[[List.none]], defined as:\n*[[Lock.none]], defined as:\n*[[Map.none]], defined as:\n*[[Match.none]], defined as:\n*[[Mix.none]], defined as:\n*[[MixHash.none]], defined as:\n*[[Nil.none]], defined as:\n*[[Num.none]], defined as:\n*[[Numeric.none]], defined as:\n*[[ObjAt.none]], defined as:\n*[[Pair.none]], defined as:\n*[[Parameter.none]], defined as:\n*[[Positional.none]], defined as:\n*[[Proc.none]], defined as:\n*[[Promise.none]], defined as:\n*[[Proxy.none]], defined as:\n*[[Range.none]], defined as:\n*[[Rat.none]], defined as:\n*[[Rational.none]], defined as:\n*[[Real.none]], defined as:\n*[[Scalar.none]], defined as:\n*[[Semaphore.none]], defined as:\n*[[Seq.none]], defined as:\n*[[Set.none]], defined as:\n*[[SetHash.none]], defined as:\n*[[Signature.none]], defined as:\n*[[Stash.none]], defined as:\n*[[Str.none]], defined as:\n*[[Supplier.none]], defined as:\n*[[Tap.none]], defined as:\n*[[Thread.none]], defined as:\n*[[ThreadPoolScheduler.none]], defined as:\n*[[Uni.none]], defined as:\n*[[Variable.none]], defined as:\n*[[Version.none]], defined as:\n*[[Whatever.none]], defined as:\n*[[supplies.none]], defined as:			
norm	D								*[[FatRat.norm]], returns a normalized Rational object, i.e. \n*[[Rat.norm]], returns a normalized Rational object, i.e. \n*[[Rational.norm]], returns a normalized Rational object, i.e. 			
not	D								*[[AST.not]], returns a Bool value representing the logical negation of an expression.\n*[[Any.not]], returns a Bool value representing the logical negation of an expression.\n*[[Attribute.not]], returns a Bool value representing the logical negation of an expression.\n*[[Bag.not]], returns a Bool value representing the logical negation of an expression.\n*[[BagHash.not]], returns a Bool value representing the logical negation of an expression.\n*[[CallFrame.not]], returns a Bool value representing the logical negation of an expression.\n*[[Callable.not]], returns a Bool value representing the logical negation of an expression.\n*[[Cancellation.not]], returns a Bool value representing the logical negation of an expression.\n*[[Capture.not]], returns a Bool value representing the logical negation of an expression.\n*[[Channel.not]], returns a Bool value representing the logical negation of an expression.\n*[[Code.not]], returns a Bool value representing the logical negation of an expression.\n*[[Complex.not]], returns a Bool value representing the logical negation of an expression.\n*[[Cool.not]], returns a Bool value representing the logical negation of an expression.\n*[[CurrentThreadScheduler.not]], returns a Bool value representing the logical negation of an expression.\n*[[Cursor.not]], returns a Bool value representing the logical negation of an expression.\n*[[Date.not]], returns a Bool value representing the logical negation of an expression.\n*[[DateTime.not]], returns a Bool value representing the logical negation of an expression.\n*[[Duration.not]], returns a Bool value representing the logical negation of an expression.\n*[[Exception.not]], returns a Bool value representing the logical negation of an expression.\n*[[Failure.not]], returns a Bool value representing the logical negation of an expression.\n*[[FatRat.not]], returns a Bool value representing the logical negation of an expression.\n*[[Grammar.not]], returns a Bool value representing the logical negation of an expression.\n*[[Hash.not]], returns a Bool value representing the logical negation of an expression.\n*[[Instant.not]], returns a Bool value representing the logical negation of an expression.\n*[[Int.not]], returns a Bool value representing the logical negation of an expression.\n*[[Iterable.not]], returns a Bool value representing the logical negation of an expression.\n*[[Junction.not]], returns a Bool value representing the logical negation of an expression.\n*[[Label.not]], returns a Bool value representing the logical negation of an expression.\n*[[List.not]], returns a Bool value representing the logical negation of an expression.\n*[[Lock.not]], returns a Bool value representing the logical negation of an expression.\n*[[Map.not]], returns a Bool value representing the logical negation of an expression.\n*[[Match.not]], returns a Bool value representing the logical negation of an expression.\n*[[Mix.not]], returns a Bool value representing the logical negation of an expression.\n*[[MixHash.not]], returns a Bool value representing the logical negation of an expression.\n*[[Mu.not]], returns a Bool value representing the logical negation of an expression.\n*[[Nil.not]], returns a Bool value representing the logical negation of an expression.\n*[[Num.not]], returns a Bool value representing the logical negation of an expression.\n*[[Numeric.not]], returns a Bool value representing the logical negation of an expression.\n*[[ObjAt.not]], returns a Bool value representing the logical negation of an expression.\n*[[Pair.not]], returns a Bool value representing the logical negation of an expression.\n*[[Parameter.not]], returns a Bool value representing the logical negation of an expression.\n*[[Positional.not]], returns a Bool value representing the logical negation of an expression.\n*[[Proc.not]], returns a Bool value representing the logical negation of an expression.\n*[[Promise.not]], returns a Bool value representing the logical negation of an expression.\n*[[Proxy.not]], returns a Bool value representing the logical negation of an expression.\n*[[Range.not]], returns a Bool value representing the logical negation of an expression.\n*[[Rat.not]], returns a Bool value representing the logical negation of an expression.\n*[[Rational.not]], returns a Bool value representing the logical negation of an expression.\n*[[Real.not]], returns a Bool value representing the logical negation of an expression.\n*[[Scalar.not]], returns a Bool value representing the logical negation of an expression.\n*[[Semaphore.not]], returns a Bool value representing the logical negation of an expression.\n*[[Seq.not]], returns a Bool value representing the logical negation of an expression.\n*[[Set.not]], returns a Bool value representing the logical negation of an expression.\n*[[SetHash.not]], returns a Bool value representing the logical negation of an expression.\n*[[Signature.not]], returns a Bool value representing the logical negation of an expression.\n*[[Stash.not]], returns a Bool value representing the logical negation of an expression.\n*[[Str.not]], returns a Bool value representing the logical negation of an expression.\n*[[Supplier.not]], returns a Bool value representing the logical negation of an expression.\n*[[Tap.not]], returns a Bool value representing the logical negation of an expression.\n*[[Thread.not]], returns a Bool value representing the logical negation of an expression.\n*[[ThreadPoolScheduler.not]], returns a Bool value representing the logical negation of an expression.\n*[[Uni.not]], returns a Bool value representing the logical negation of an expression.\n*[[Variable.not]], returns a Bool value representing the logical negation of an expression.\n*[[Version.not]], returns a Bool value representing the logical negation of an expression.\n*[[Whatever.not]], returns a Bool value representing the logical negation of an expression.\n*[[supplies.not]], returns a Bool value representing the logical negation of an expression.			
note	R	IO.note										
now	R	DateTime.now										
nude	D								*[[FatRat.nude]], returns a list of the numerator and denominator.\n*[[Rat.nude]], returns a list of the numerator and denominator.\n*[[Rational.nude]], returns a list of the numerator and denominator.			
numerator	D								*[[FatRat.numerator]], returns the numerator.\n*[[Rat.numerator]], returns the numerator.\n*[[Rational.numerator]], returns the numerator.			
of	D								*[[Array.of]], defined as:\n*[[Blob.of]], returns the type constraint for elements of the positional container.\n*[[Buf.of]], returns the type constraint for elements of the positional container.\n*[[Code.of]], defined as:\n*[[Hash.of]], defined as:\n*[[List.of]], returns the type constraint for elements of the positional container.\n*[[Positional.of]], returns the type constraint for elements of the positional container.\n*[[Range.of]], returns the type constraint for elements of the positional container.\n*[[Stash.of]], defined as:\n*[[Uni.of]], returns the type constraint for elements of the positional container.\n*[[Variable.of]], sets the type constraint of a container bound to a variable.			
offset	R	DateTime.offset										
offset-in-hours	R	DateTime.offset-in-hours										
offset-in-minutes	R	DateTime.offset-in-minutes										
one	D								*[[AST.one]], defined as:\n*[[Any.one]], defined as:\n*[[Attribute.one]], defined as:\n*[[Bag.one]], defined as:\n*[[BagHash.one]], defined as:\n*[[CallFrame.one]], defined as:\n*[[Callable.one]], defined as:\n*[[Cancellation.one]], defined as:\n*[[Capture.one]], defined as:\n*[[Channel.one]], defined as:\n*[[Code.one]], defined as:\n*[[Complex.one]], defined as:\n*[[Cool.one]], defined as:\n*[[CurrentThreadScheduler.one]], defined as:\n*[[Cursor.one]], defined as:\n*[[Date.one]], defined as:\n*[[DateTime.one]], defined as:\n*[[Duration.one]], defined as:\n*[[Exception.one]], defined as:\n*[[Failure.one]], defined as:\n*[[FatRat.one]], defined as:\n*[[Grammar.one]], defined as:\n*[[Hash.one]], defined as:\n*[[Instant.one]], defined as:\n*[[Int.one]], defined as:\n*[[Iterable.one]], defined as:\n*[[Label.one]], defined as:\n*[[List.one]], defined as:\n*[[Lock.one]], defined as:\n*[[Map.one]], defined as:\n*[[Match.one]], defined as:\n*[[Mix.one]], defined as:\n*[[MixHash.one]], defined as:\n*[[Nil.one]], defined as:\n*[[Num.one]], defined as:\n*[[Numeric.one]], defined as:\n*[[ObjAt.one]], defined as:\n*[[Pair.one]], defined as:\n*[[Parameter.one]], defined as:\n*[[Positional.one]], defined as:\n*[[Proc.one]], defined as:\n*[[Promise.one]], defined as:\n*[[Proxy.one]], defined as:\n*[[Range.one]], defined as:\n*[[Rat.one]], defined as:\n*[[Rational.one]], defined as:\n*[[Real.one]], defined as:\n*[[Scalar.one]], defined as:\n*[[Semaphore.one]], defined as:\n*[[Seq.one]], defined as:\n*[[Set.one]], defined as:\n*[[SetHash.one]], defined as:\n*[[Signature.one]], defined as:\n*[[Stash.one]], defined as:\n*[[Str.one]], defined as:\n*[[Supplier.one]], defined as:\n*[[Tap.one]], defined as:\n*[[Thread.one]], defined as:\n*[[ThreadPoolScheduler.one]], defined as:\n*[[Uni.one]], defined as:\n*[[Variable.one]], defined as:\n*[[Version.one]], defined as:\n*[[Whatever.one]], defined as:\n*[[supplies.one]], defined as:			
open	R	IO.open										
optional	R	Parameter.optional										
ord	D								*[[Complex.ord]], defined as:\n*[[ComplexStr.ord]], returns the codepoint number of the base characters of the first grapheme in the string.\n*[[Cool.ord]], defined as:\n*[[Duration.ord]], defined as:\n*[[FatRat.ord]], defined as:\n*[[Hash.ord]], defined as:\n*[[Instant.ord]], defined as:\n*[[Int.ord]], defined as:\n*[[IntStr.ord]], returns the codepoint number of the base characters of the first grapheme in the string.\n*[[Iterable.ord]], defined as:\n*[[List.ord]], defined as:\n*[[Map.ord]], defined as:\n*[[Match.ord]], defined as:\n*[[Nil.ord]], defined as:\n*[[Num.ord]], defined as:\n*[[NumStr.ord]], returns the codepoint number of the base characters of the first grapheme in the string.\n*[[Numeric.ord]], defined as:\n*[[Range.ord]], defined as:\n*[[Rat.ord]], defined as:\n*[[RatStr.ord]], returns the codepoint number of the base characters of the first grapheme in the string.\n*[[Rational.ord]], defined as:\n*[[Real.ord]], defined as:\n*[[Seq.ord]], defined as:\n*[[Stash.ord]], defined as:\n*[[Str.ord]], defined as:			
ords	D								*[[Complex.ords]], defined as:\n*[[ComplexStr.ords]], returns a list of Unicode codepoint numbers that describe the codepoints making up the string.\n*[[Cool.ords]], defined as:\n*[[Duration.ords]], defined as:\n*[[FatRat.ords]], defined as:\n*[[Hash.ords]], defined as:\n*[[Instant.ords]], defined as:\n*[[Int.ords]], defined as:\n*[[IntStr.ords]], returns a list of Unicode codepoint numbers that describe the codepoints making up the string.\n*[[Iterable.ords]], defined as:\n*[[List.ords]], defined as:\n*[[Map.ords]], defined as:\n*[[Match.ords]], defined as:\n*[[Nil.ords]], defined as:\n*[[Num.ords]], defined as:\n*[[NumStr.ords]], returns a list of Unicode codepoint numbers that describe the codepoints making up the string.\n*[[Numeric.ords]], defined as:\n*[[Range.ords]], defined as:\n*[[Rat.ords]], defined as:\n*[[RatStr.ords]], returns a list of Unicode codepoint numbers that describe the codepoints making up the string.\n*[[Rational.ords]], defined as:\n*[[Real.ords]], defined as:\n*[[Seq.ords]], defined as:\n*[[Stash.ords]], defined as:\n*[[Str.ords]], defined as:			
orig	R	Match.orig										
pack	D								*[[Blob.pack]], this subroutine is considered experimental, in order to use it you will need to do:\n*[[Buf.pack]], this subroutine is considered experimental, in order to use it you will need to do:			
package	D								*[[Attribute.package]], defined as:\n*[[Macro.package]], returns the package in which the routine is defined.\n*[[Method.package]], returns the package in which the routine is defined.\n*[[Regex.package]], returns the package in which the routine is defined.\n*[[Routine.package]], returns the package in which the routine is defined.\n*[[Sub.package]], returns the package in which the routine is defined.\n*[[Submethod.package]], returns the package in which the routine is defined.			
pairs	D								*[[Array.pairs]], defined as:\n*[[Backtrace.pairs]], defined as:\n*[[Bag.pairs]], defined as:\n*[[BagHash.pairs]], defined as:\n*[[Baggy.pairs]], defined as:\n*[[Capture.pairs]], defined as:\n*[[Hash.pairs]], defined as:\n*[[List.pairs]], defined as:\n*[[Map.pairs]], defined as:\n*[[Match.pairs]], defined as:\n*[[Mix.pairs]], defined as:\n*[[MixHash.pairs]], defined as:\n*[[Mixy.pairs]], defined as:\n*[[Pair.pairs]], defined as:\n*[[Slip.pairs]], defined as:\n*[[Stash.pairs]], defined as:			
pairup	D								*[[AST.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Any.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Attribute.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Bag.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[BagHash.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[CallFrame.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Callable.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Cancellation.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Capture.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Channel.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Code.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Complex.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Cool.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[CurrentThreadScheduler.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Cursor.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Date.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[DateTime.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Duration.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Exception.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Failure.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[FatRat.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Grammar.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Hash.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Instant.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Int.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Iterable.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Label.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[List.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Lock.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Map.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Match.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Mix.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[MixHash.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Nil.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Num.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Numeric.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[ObjAt.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Pair.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Parameter.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Positional.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Proc.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Promise.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Proxy.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Range.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Rat.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Rational.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Real.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Scalar.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Semaphore.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Seq.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Set.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[SetHash.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Signature.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Stash.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Str.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Supplier.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Tap.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Thread.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[ThreadPoolScheduler.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Uni.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Variable.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Version.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[Whatever.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.\n*[[supplies.pairup]], interprets the invocant as a list, and constructs a list of pairs from it, in the same way that assignment to a Hash does.			
params	R	Signature.params										
parse	R	Grammar.parse										
parse-base	D								*[[ComplexStr.parse-base]], performs the reverse of base by converting a string with a base-$radix number to its base-10 Numeric equivalent.\n*[[IntStr.parse-base]], performs the reverse of base by converting a string with a base-$radix number to its base-10 Numeric equivalent.\n*[[NumStr.parse-base]], performs the reverse of base by converting a string with a base-$radix number to its base-10 Numeric equivalent.\n*[[RatStr.parse-base]], performs the reverse of base by converting a string with a base-$radix number to its base-10 Numeric equivalent.\n*[[Str.parse-base]], performs the reverse of base by converting a string with a base-$radix number to its base-10 Numeric equivalent.			
parsefile	R	Grammar.parsefile										
parts	R	Version.parts										
perl	D								*[[AST.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Any.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Attribute.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Bag.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[BagHash.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[CallFrame.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Callable.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Cancellation.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Capture.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Channel.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Code.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Complex.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[ComplexStr.perl]], defined as:\n*[[Cool.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[CurrentThreadScheduler.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Cursor.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Date.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[DateTime.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Duration.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Exception.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Failure.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[FatRat.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Grammar.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Hash.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Instant.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Int.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Iterable.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Junction.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Label.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[List.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Lock.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Map.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Match.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Mix.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[MixHash.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Mu.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Nil.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Num.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Numeric.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[ObjAt.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Pair.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Parameter.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Positional.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Proc.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Promise.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Proxy.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Range.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Rat.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[RatStr.perl]], returns a string representation corresponding to the unambiguous val()-based representation of rational literals.\n*[[Rational.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Real.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Scalar.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Semaphore.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Seq.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Set.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[SetHash.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Signature.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Stash.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Str.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Supplier.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Tap.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Thread.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[ThreadPoolScheduler.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Uni.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Variable.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Version.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[Whatever.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).\n*[[supplies.perl]], returns a Perlish representation of the object (i.e., can usually be re-evaluated with EVAL to regenerate the object).			
permutations	D								*[[Array.permutations]], defined as:\n*[[Backtrace.permutations]], defined as:\n*[[List.permutations]], defined as:\n*[[Slip.permutations]], defined as:			
pick	D								*[[Array.pick]], defined as:\n*[[Backtrace.pick]], defined as:\n*[[Bag.pick]], defined as:\n*[[BagHash.pick]], defined as:\n*[[Baggy.pick]], defined as:\n*[[Bool.pick]], returns True or False if called without any argument.\n*[[List.pick]], defined as:\n*[[Mix.pick]], defined as:\n*[[MixHash.pick]], defined as:\n*[[Mixy.pick]], defined as:\n*[[Range.pick]], performs the same function as Range.list.pick, but attempts to optimize by not actually generating the list if it is not necessary.\n*[[Set.pick]], returns $count elements chosen at random (without repetition) from the set.\n*[[SetHash.pick]], returns $count elements chosen at random (without repetition) from the set.\n*[[Setty.pick]], returns $count elements chosen at random (without repetition) from the set.\n*[[Slip.pick]], defined as:			
pickpairs	D								*[[Bag.pickpairs]], defined as:\n*[[BagHash.pickpairs]], defined as:\n*[[Baggy.pickpairs]], defined as:\n*[[Mix.pickpairs]], defined as:\n*[[MixHash.pickpairs]], defined as:\n*[[Mixy.pickpairs]], defined as:			
pid	R	Proc.pid										
plus	R	Version.plus										
polar	D								*[[Complex.polar]], defined as:\n*[[ComplexStr.polar]], defined as:			
poll	R	Channel.poll										
polymod	D								*[[Bool.polymod]], defined as:\n*[[Int.polymod]], defined as:\n*[[IntStr.polymod]], defined as:\n*[[Order.polymod]], defined as:\n*[[nativeInt.polymod]], defined as:			
pop	R	Array.pop										
positional	R	Parameter.positional										
posix	R	DateTime.posix										
postmatch	R	Match.postmatch										
pred	D								*[[Bool.pred]], returns False.\n*[[Complex.pred]], returns the number decremented by one (predecessor).\n*[[ComplexStr.pred]], returns the string decremented by one.\n*[[Date.pred]], defined as:\n*[[Duration.pred]], returns the number decremented by one (predecessor).\n*[[FatRat.pred]], returns the number decremented by one (predecessor).\n*[[Instant.pred]], returns the number decremented by one (predecessor).\n*[[Int.pred]], returns the number decremented by one (predecessor).\n*[[IntStr.pred]], returns the string decremented by one.\n*[[Num.pred]], returns the number decremented by one (predecessor).\n*[[NumStr.pred]], returns the string decremented by one.\n*[[Numeric.pred]], returns the number decremented by one (predecessor).\n*[[Rat.pred]], returns the number decremented by one (predecessor).\n*[[RatStr.pred]], returns the string decremented by one.\n*[[Rational.pred]], returns the number decremented by one (predecessor).\n*[[Real.pred]], returns the number decremented by one (predecessor).\n*[[Str.pred]], returns the string decremented by one.			
prematch	R	Match.prematch										
prepend	D								*[[Array.prepend]], defined as\n*[[Nil.prepend]], warns the user that they tried to prepend onto a Nil.			
print	D								*[[AST.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Any.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Attribute.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Bag.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[BagHash.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[CallFrame.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Callable.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Cancellation.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Capture.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Channel.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Code.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Complex.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Cool.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[CurrentThreadScheduler.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Cursor.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Date.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[DateTime.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Duration.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Exception.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Failure.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[FatRat.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Grammar.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Hash.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[IO.print]], print the given text on $*OUT (standard output), e.g.:\n*[[Instant.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Int.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Iterable.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Junction.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Label.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[List.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Lock.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Map.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Match.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Mix.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[MixHash.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Mu.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Nil.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Num.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Numeric.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[ObjAt.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Pair.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Parameter.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Positional.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Proc.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Promise.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Proxy.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Range.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Rat.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Rational.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Real.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Scalar.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Semaphore.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Seq.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Set.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[SetHash.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Signature.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Stash.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Str.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Supplier.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Tap.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Thread.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[ThreadPoolScheduler.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Uni.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Variable.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Version.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[Whatever.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.\n*[[supplies.print]], prints value to $*OUT after stringification using .Str method without adding a newline at end.			
produce	D								*[[Array.produce]], defined as:\n*[[Backtrace.produce]], defined as:\n*[[List.produce]], defined as:\n*[[Slip.produce]], defined as:			
prompt	R	IO.prompt										
protect	R	Lock.protect										
pull-one	R	Iterator.pull-one										
pure	D								*[[Macro.pure]], marks a subroutine as pure, that is, it asserts that for the same input, it will always produce the same output without any additional side effects.\n*[[Method.pure]], marks a subroutine as pure, that is, it asserts that for the same input, it will always produce the same output without any additional side effects.\n*[[Regex.pure]], marks a subroutine as pure, that is, it asserts that for the same input, it will always produce the same output without any additional side effects.\n*[[Routine.pure]], marks a subroutine as pure, that is, it asserts that for the same input, it will always produce the same output without any additional side effects.\n*[[Sub.pure]], marks a subroutine as pure, that is, it asserts that for the same input, it will always produce the same output without any additional side effects.\n*[[Submethod.pure]], marks a subroutine as pure, that is, it asserts that for the same input, it will always produce the same output without any additional side effects.			
push	D								*[[AST.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Any.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Array.push]], defined as:\n*[[Attribute.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Bag.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[BagHash.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[CallFrame.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Callable.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Cancellation.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Capture.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Channel.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Code.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Complex.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Cool.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[CurrentThreadScheduler.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Cursor.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Date.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[DateTime.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Duration.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Exception.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Failure.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[FatRat.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Grammar.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Hash.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Instant.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Int.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Iterable.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Label.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[List.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Lock.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Map.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Match.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Mix.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[MixHash.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Nil.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Num.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Numeric.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[ObjAt.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Pair.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Parameter.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Positional.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Proc.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Promise.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Proxy.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Range.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Rat.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Rational.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Real.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Scalar.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Semaphore.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Seq.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Set.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[SetHash.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Signature.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Stash.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Str.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Supplier.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Tap.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Thread.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[ThreadPoolScheduler.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Uni.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Variable.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Version.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[Whatever.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.\n*[[supplies.push]], the method push is defined for undefined invocants and allows for autovivifying undefined to an empty Array, unless the undefined value implements Positional already.			
push-all	R	Iterator.push-all										
push-at-least	R	Iterator.push-at-least										
push-exactly	R	Iterator.push-exactly										
push-until-lazy	R	Iterator.push-until-lazy										
put	D								*[[AST.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Any.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Attribute.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Bag.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[BagHash.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[CallFrame.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Callable.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Cancellation.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Capture.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Channel.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Code.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Complex.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Cool.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[CurrentThreadScheduler.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Cursor.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Date.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[DateTime.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Duration.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Exception.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Failure.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[FatRat.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Grammar.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Hash.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[IO.put]], print the given text on $*OUT (standard output) with appended $*OUT.nl-out.\n*[[Instant.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Int.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Iterable.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Junction.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Label.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[List.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Lock.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Map.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Match.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Mix.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[MixHash.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Mu.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Nil.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Num.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Numeric.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[ObjAt.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Pair.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Parameter.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Positional.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Proc.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Promise.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Proxy.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Range.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Rat.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Rational.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Real.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Scalar.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Semaphore.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Seq.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Set.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[SetHash.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Signature.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Stash.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Str.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Supplier.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Tap.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Thread.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[ThreadPoolScheduler.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Uni.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Variable.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Version.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[Whatever.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.\n*[[supplies.put]], prints value to $*OUT, adding a newline at end, and if necessary, stringifying non-Str object using the .Str method.			
quit	D								*[[Supplier.quit]], calls the quit callback on all the taps that have one, passing the exception to them.\n*[[Tap.quit]], returns the callback that is called on shutting down a channel with error, if any.			
race	D								*[[Hash.race]], defined as:\n*[[Iterable.race]], defined as:\n*[[List.race]], defined as:\n*[[Map.race]], defined as:\n*[[Range.race]], defined as:\n*[[Seq.race]], defined as:\n*[[Stash.race]], defined as:			
rand	D								*[[Complex.rand]], defined as:\n*[[Cool.rand]], defined as:\n*[[Duration.rand]], defined as:\n*[[FatRat.rand]], defined as:\n*[[Hash.rand]], defined as:\n*[[Instant.rand]], defined as:\n*[[Int.rand]], defined as:\n*[[Iterable.rand]], defined as:\n*[[List.rand]], defined as:\n*[[Map.rand]], defined as:\n*[[Match.rand]], defined as:\n*[[Nil.rand]], defined as:\n*[[Num.rand]], defined as:\n*[[NumStr.rand]], returns a pseudo random number between 0 and the invocant.\n*[[Numeric.rand]], defined as:\n*[[Range.rand]], defined as:\n*[[Rat.rand]], defined as:\n*[[Rational.rand]], defined as:\n*[[Real.rand]], defined as:\n*[[Seq.rand]], defined as:\n*[[Stash.rand]], defined as:\n*[[Str.rand]], defined as:			
raw	R	Parameter.raw										
re	D								*[[Complex.re]], defined as:\n*[[ComplexStr.re]], defined as:			
readonly	D								*[[Attribute.readonly]], defined as:\n*[[Parameter.readonly]], defined as:			
reals	D								*[[Complex.reals]], defined as:\n*[[ComplexStr.reals]], defined as:			
receive	R	Channel.receive										
reduce	D								*[[Array.reduce]], defined as:\n*[[Backtrace.reduce]], defined as:\n*[[List.reduce]], defined as:\n*[[Slip.reduce]], defined as:\n*[[Supply.reduce]], creates a "reducing" supply with the same semantics as List.reduce.			
release	R	Semaphore.release										
repeated	D								*[[Array.repeated]], defined as:\n*[[Backtrace.repeated]], defined as:\n*[[List.repeated]], defined as:\n*[[Slip.repeated]], defined as:			
required	R	Attribute.required										
restore	R	WrapHandle.restore										
result	R	Promise.result										
resume	R	Exception.resume										
rethrow	R	Exception.rethrow										
return	D								*[[AST.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Any.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Attribute.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Bag.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[BagHash.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[CallFrame.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Callable.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Cancellation.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Capture.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Channel.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Code.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Complex.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Cool.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[CurrentThreadScheduler.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Cursor.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Date.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[DateTime.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Duration.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Exception.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Failure.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[FatRat.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Grammar.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Hash.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Instant.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Int.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Iterable.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Junction.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Label.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[List.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Lock.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Map.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Match.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Mix.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[MixHash.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Mu.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Nil.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Num.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Numeric.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[ObjAt.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Pair.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Parameter.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Positional.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Proc.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Promise.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Proxy.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Range.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Rat.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Rational.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Real.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Scalar.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Semaphore.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Seq.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Set.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[SetHash.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Signature.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Stash.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Str.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Supplier.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Tap.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Thread.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[ThreadPoolScheduler.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Uni.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Variable.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Version.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[Whatever.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.\n*[[supplies.return]], the method return will stop execution of a subroutine or method, run all relevant phasers and provide invocant as a return value to the caller.			
return-rw	D								*[[AST.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Any.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Attribute.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Bag.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[BagHash.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[CallFrame.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Callable.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Cancellation.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Capture.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Channel.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Code.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Complex.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Cool.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[CurrentThreadScheduler.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Cursor.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Date.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[DateTime.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Duration.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Exception.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Failure.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[FatRat.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Grammar.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Hash.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Instant.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Int.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Iterable.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Junction.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Label.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[List.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Lock.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Map.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Match.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Mix.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[MixHash.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Mu.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Nil.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Num.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Numeric.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[ObjAt.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Pair.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Parameter.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Positional.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Proc.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Promise.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Proxy.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Range.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Rat.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Rational.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Real.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Scalar.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Semaphore.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Seq.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Set.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[SetHash.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Signature.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Stash.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Str.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Supplier.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Tap.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Thread.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[ThreadPoolScheduler.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Uni.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Variable.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Version.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[Whatever.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).\n*[[supplies.return-rw]], same as method return except that return-rw returns a writable container to the invocant (see more details here: return-rw).			
returns	R	Signature.returns										
reverse	D								*[[AST.reverse]], defined as:\n*[[Any.reverse]], defined as:\n*[[Array.reverse]], defined as:\n*[[Attribute.reverse]], defined as:\n*[[Backtrace.reverse]], defined as:\n*[[Bag.reverse]], defined as:\n*[[BagHash.reverse]], defined as:\n*[[CallFrame.reverse]], defined as:\n*[[Callable.reverse]], defined as:\n*[[Cancellation.reverse]], defined as:\n*[[Capture.reverse]], defined as:\n*[[Channel.reverse]], defined as:\n*[[Code.reverse]], defined as:\n*[[Complex.reverse]], defined as:\n*[[Cool.reverse]], defined as:\n*[[CurrentThreadScheduler.reverse]], defined as:\n*[[Cursor.reverse]], defined as:\n*[[Date.reverse]], defined as:\n*[[DateTime.reverse]], defined as:\n*[[Duration.reverse]], defined as:\n*[[Exception.reverse]], defined as:\n*[[Failure.reverse]], defined as:\n*[[FatRat.reverse]], defined as:\n*[[Grammar.reverse]], defined as:\n*[[Hash.reverse]], defined as:\n*[[Instant.reverse]], defined as:\n*[[Int.reverse]], defined as:\n*[[Iterable.reverse]], defined as:\n*[[Label.reverse]], defined as:\n*[[List.reverse]], defined as:\n*[[Lock.reverse]], defined as:\n*[[Map.reverse]], defined as:\n*[[Match.reverse]], defined as:\n*[[Mix.reverse]], defined as:\n*[[MixHash.reverse]], defined as:\n*[[Nil.reverse]], defined as:\n*[[Num.reverse]], defined as:\n*[[Numeric.reverse]], defined as:\n*[[ObjAt.reverse]], defined as:\n*[[Pair.reverse]], defined as:\n*[[Parameter.reverse]], defined as:\n*[[Positional.reverse]], defined as:\n*[[Proc.reverse]], defined as:\n*[[Promise.reverse]], defined as:\n*[[Proxy.reverse]], defined as:\n*[[Range.reverse]], defined as:\n*[[Rat.reverse]], defined as:\n*[[Rational.reverse]], defined as:\n*[[Real.reverse]], defined as:\n*[[Scalar.reverse]], defined as:\n*[[Semaphore.reverse]], defined as:\n*[[Seq.reverse]], defined as:\n*[[Set.reverse]], defined as:\n*[[SetHash.reverse]], defined as:\n*[[Signature.reverse]], defined as:\n*[[Slip.reverse]], defined as:\n*[[Stash.reverse]], defined as:\n*[[Str.reverse]], defined as:\n*[[Supplier.reverse]], defined as:\n*[[Tap.reverse]], defined as:\n*[[Thread.reverse]], defined as:\n*[[ThreadPoolScheduler.reverse]], defined as:\n*[[Uni.reverse]], defined as:\n*[[Variable.reverse]], defined as:\n*[[Version.reverse]], defined as:\n*[[Whatever.reverse]], defined as:\n*[[done.reverse]], waits until the given supply is done, then creates a supply to which all values seen are emitted in reverse order.\n*[[supplies.reverse]], defined as:			
rindex	D								*[[Complex.rindex]], defined as:\n*[[ComplexStr.rindex]], returns the last position of $needle in $haystack not after $startpos.\n*[[Cool.rindex]], defined as:\n*[[Duration.rindex]], defined as:\n*[[FatRat.rindex]], defined as:\n*[[Hash.rindex]], defined as:\n*[[Instant.rindex]], defined as:\n*[[Int.rindex]], defined as:\n*[[IntStr.rindex]], returns the last position of $needle in $haystack not after $startpos.\n*[[Iterable.rindex]], defined as:\n*[[List.rindex]], defined as:\n*[[Map.rindex]], defined as:\n*[[Match.rindex]], defined as:\n*[[Nil.rindex]], defined as:\n*[[Num.rindex]], defined as:\n*[[NumStr.rindex]], returns the last position of $needle in $haystack not after $startpos.\n*[[Numeric.rindex]], defined as:\n*[[Range.rindex]], defined as:\n*[[Rat.rindex]], defined as:\n*[[RatStr.rindex]], returns the last position of $needle in $haystack not after $startpos.\n*[[Rational.rindex]], defined as:\n*[[Real.rindex]], defined as:\n*[[Seq.rindex]], defined as:\n*[[Stash.rindex]], defined as:\n*[[Str.rindex]], defined as:			
roll	D								*[[Array.roll]], defined as:\n*[[Backtrace.roll]], defined as:\n*[[Bag.roll]], defined as:\n*[[BagHash.roll]], defined as:\n*[[Baggy.roll]], defined as:\n*[[Bool.roll]], returns True or False if called without any argument.\n*[[List.roll]], defined as:\n*[[Mix.roll]], defined as:\n*[[MixHash.roll]], defined as:\n*[[Mixy.roll]], defined as:\n*[[Range.roll]], performs the same function as Range.list.roll, but attempts to optimize by not actually generating the list if it is not necessary.\n*[[Set.roll]], returns a lazy list of $count elements, each randomly selected from the set.\n*[[SetHash.roll]], returns a lazy list of $count elements, each randomly selected from the set.\n*[[Setty.roll]], returns a lazy list of $count elements, each randomly selected from the set.\n*[[Slip.roll]], defined as:			
roots	D								*[[Complex.roots]], defined as:\n*[[Cool.roots]], defined as:\n*[[Duration.roots]], defined as:\n*[[FatRat.roots]], defined as:\n*[[Hash.roots]], defined as:\n*[[Instant.roots]], defined as:\n*[[Int.roots]], defined as:\n*[[Iterable.roots]], defined as:\n*[[List.roots]], defined as:\n*[[Map.roots]], defined as:\n*[[Match.roots]], defined as:\n*[[Nil.roots]], defined as:\n*[[Num.roots]], defined as:\n*[[Numeric.roots]], returns a list of the $n complex roots, which evaluate to the original number when raised to the $nth power.\n*[[Range.roots]], defined as:\n*[[Rat.roots]], defined as:\n*[[Rational.roots]], defined as:\n*[[Real.roots]], defined as:\n*[[Seq.roots]], defined as:\n*[[Stash.roots]], defined as:\n*[[Str.roots]], defined as:			
rotate	D								*[[Array.rotate]], defined as:\n*[[Backtrace.rotate]], defined as:\n*[[List.rotate]], defined as:\n*[[Slip.rotate]], defined as:			
rotor	D								*[[Array.rotor]], defined as:\n*[[Backtrace.rotor]], defined as:\n*[[List.rotor]], defined as:\n*[[Slip.rotor]], defined as:\n*[[Supply.rotor]], creates a "rotoring" supply with the same semantics as List.rotor.			
round	D								*[[Complex.round]], defined as:\n*[[ComplexStr.round]], defined as:\n*[[Cool.round]], defined as:\n*[[Duration.round]], defined as:\n*[[FatRat.round]], defined as:\n*[[Hash.round]], defined as:\n*[[Instant.round]], defined as:\n*[[Int.round]], defined as:\n*[[Iterable.round]], defined as:\n*[[List.round]], defined as:\n*[[Map.round]], defined as:\n*[[Match.round]], defined as:\n*[[Nil.round]], defined as:\n*[[Num.round]], defined as:\n*[[Numeric.round]], defined as:\n*[[Range.round]], defined as:\n*[[Rat.round]], defined as:\n*[[Rational.round]], defined as:\n*[[Real.round]], defined as:\n*[[Seq.round]], defined as:\n*[[Stash.round]], defined as:\n*[[Str.round]], defined as:			
roundrobin	D								*[[Array.roundrobin]], defined as:\n*[[Backtrace.roundrobin]], defined as:\n*[[List.roundrobin]], defined as:\n*[[Slip.roundrobin]], defined as:			
run	D								*[[IO.run]], runs an external command without involving a shell (if possible).\n*[[Thread.run]], runs the thread, and returns the invocant.			
rw	D								*[[Attribute.rw]], marks an attribute as read/write as opposed to the default readonly.\n*[[Macro.rw]], when a routine is modified with this trait, its return value will be writable.\n*[[Method.rw]], when a routine is modified with this trait, its return value will be writable.\n*[[Parameter.rw]], defined as:\n*[[Regex.rw]], when a routine is modified with this trait, its return value will be writable.\n*[[Routine.rw]], when a routine is modified with this trait, its return value will be writable.\n*[[Sub.rw]], when a routine is modified with this trait, its return value will be writable.\n*[[Submethod.rw]], when a routine is modified with this trait, its return value will be writable.			
samecase	D								*[[Complex.samecase]], defined as:\n*[[Cool.samecase]], defined as:\n*[[Duration.samecase]], defined as:\n*[[FatRat.samecase]], defined as:\n*[[Hash.samecase]], defined as:\n*[[Instant.samecase]], defined as:\n*[[Int.samecase]], defined as:\n*[[Iterable.samecase]], defined as:\n*[[List.samecase]], defined as:\n*[[Map.samecase]], defined as:\n*[[Match.samecase]], defined as:\n*[[Nil.samecase]], defined as:\n*[[Num.samecase]], defined as:\n*[[Numeric.samecase]], defined as:\n*[[Range.samecase]], defined as:\n*[[Rat.samecase]], defined as:\n*[[Rational.samecase]], defined as:\n*[[Real.samecase]], defined as:\n*[[Seq.samecase]], defined as:\n*[[Stash.samecase]], defined as:\n*[[Str.samecase]], defined as:			
samemark	D								*[[ComplexStr.samemark]], returns a copy of $string with the mark/accent information for each character changed such that it matches the mark/accent of the corresponding character in $pattern.\n*[[IntStr.samemark]], returns a copy of $string with the mark/accent information for each character changed such that it matches the mark/accent of the corresponding character in $pattern.\n*[[NumStr.samemark]], returns a copy of $string with the mark/accent information for each character changed such that it matches the mark/accent of the corresponding character in $pattern.\n*[[RatStr.samemark]], returns a copy of $string with the mark/accent information for each character changed such that it matches the mark/accent of the corresponding character in $pattern.\n*[[Str.samemark]], returns a copy of $string with the mark/accent information for each character changed such that it matches the mark/accent of the corresponding character in $pattern.			
say	D								*[[AST.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Any.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Attribute.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Bag.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[BagHash.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[CallFrame.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Callable.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Cancellation.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Capture.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Channel.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Code.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Complex.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Cool.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[CurrentThreadScheduler.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Cursor.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Date.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[DateTime.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Duration.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Exception.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Failure.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[FatRat.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Grammar.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Hash.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[IO.say]], print the given text in human readable form, followed by a $*OUT.nl-out (platform dependent newline) on $*OUT (standard output).\n*[[Instant.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Int.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Iterable.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Junction.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Label.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[List.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Lock.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Map.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Match.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Mix.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[MixHash.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Mu.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Nil.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Num.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Numeric.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[ObjAt.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Pair.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Parameter.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Positional.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Proc.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Promise.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Proxy.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Range.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Rat.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Rational.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Real.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Scalar.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Semaphore.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Seq.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Set.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[SetHash.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Signature.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Stash.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Str.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Supplier.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Tap.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Thread.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[ThreadPoolScheduler.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Uni.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Variable.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Version.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[Whatever.say]], prints value to $*OUT after stringification using .gist method with newline at end.\n*[[supplies.say]], prints value to $*OUT after stringification using .gist method with newline at end.			
scheduler	R	Promise.scheduler										
sec	D								*[[Complex.sec]], defined as:\n*[[Cool.sec]], defined as:\n*[[Duration.sec]], defined as:\n*[[FatRat.sec]], defined as:\n*[[Hash.sec]], defined as:\n*[[Instant.sec]], defined as:\n*[[Int.sec]], defined as:\n*[[Iterable.sec]], defined as:\n*[[List.sec]], defined as:\n*[[Map.sec]], defined as:\n*[[Match.sec]], defined as:\n*[[Nil.sec]], defined as:\n*[[Num.sec]], defined as:\n*[[Numeric.sec]], defined as:\n*[[Range.sec]], defined as:\n*[[Rat.sec]], defined as:\n*[[Rational.sec]], defined as:\n*[[Real.sec]], defined as:\n*[[Seq.sec]], defined as:\n*[[Stash.sec]], defined as:\n*[[Str.sec]], defined as:			
sech	D								*[[Complex.sech]], defined as:\n*[[Cool.sech]], defined as:\n*[[Duration.sech]], defined as:\n*[[FatRat.sech]], defined as:\n*[[Hash.sech]], defined as:\n*[[Instant.sech]], defined as:\n*[[Int.sech]], defined as:\n*[[Iterable.sech]], defined as:\n*[[List.sech]], defined as:\n*[[Map.sech]], defined as:\n*[[Match.sech]], defined as:\n*[[Nil.sech]], defined as:\n*[[Num.sech]], defined as:\n*[[Numeric.sech]], defined as:\n*[[Range.sech]], defined as:\n*[[Rat.sech]], defined as:\n*[[Rational.sech]], defined as:\n*[[Real.sech]], defined as:\n*[[Seq.sech]], defined as:\n*[[Stash.sech]], defined as:\n*[[Str.sech]], defined as:			
second	R	DateTime.second										
send	R	Channel.send										
set	R	Set.set										
set_value	R	Attribute.set_value										
shape	R	Array.shape										
share	R	Supply.share										
shell	D								*[[IO.shell]], runs a command through the system shell.\n*[[Proc.shell]], runs the Proc object with the given command, which is passed through to the shell for parsing and execution.			
shift	R	Array.shift										
sigil	R	Parameter.sigil										
sign	D								*[[Complex.sign]], defined as:\n*[[Cool.sign]], defined as:\n*[[Duration.sign]], defined as:\n*[[FatRat.sign]], defined as:\n*[[Hash.sign]], defined as:\n*[[Instant.sign]], defined as:\n*[[Int.sign]], defined as:\n*[[Iterable.sign]], defined as:\n*[[List.sign]], defined as:\n*[[Map.sign]], defined as:\n*[[Match.sign]], defined as:\n*[[Nil.sign]], defined as:\n*[[Num.sign]], defined as:\n*[[Numeric.sign]], defined as:\n*[[Range.sign]], defined as:\n*[[Rat.sign]], defined as:\n*[[Rational.sign]], defined as:\n*[[Real.sign]], defined as:\n*[[Seq.sign]], defined as:\n*[[Stash.sign]], defined as:\n*[[Str.sign]], defined as:			
signal	D								*[[Proc.signal]], returns the signal number with which the external process was killed, or 0 or an undefined value otherwise.\n*[[supplies.signal]], creates a supply for the Signal enums (such as SIGINT) specified, and an optional :scheduler parameter.			
signature	D								*[[Block.signature]], defined as:\n*[[Code.signature]], defined as:\n*[[Macro.signature]], defined as:\n*[[Method.signature]], defined as:\n*[[Regex.signature]], defined as:\n*[[Routine.signature]], defined as:\n*[[Sub.signature]], defined as:\n*[[Submethod.signature]], defined as:\n*[[WhateverCode.signature]], defined as:			
sin	D								*[[Complex.sin]], defined as:\n*[[Cool.sin]], defined as:\n*[[Duration.sin]], defined as:\n*[[FatRat.sin]], defined as:\n*[[Hash.sin]], defined as:\n*[[Instant.sin]], defined as:\n*[[Int.sin]], defined as:\n*[[Iterable.sin]], defined as:\n*[[List.sin]], defined as:\n*[[Map.sin]], defined as:\n*[[Match.sin]], defined as:\n*[[Nil.sin]], defined as:\n*[[Num.sin]], defined as:\n*[[Numeric.sin]], defined as:\n*[[Range.sin]], defined as:\n*[[Rat.sin]], defined as:\n*[[Rational.sin]], defined as:\n*[[Real.sin]], defined as:\n*[[Seq.sin]], defined as:\n*[[Stash.sin]], defined as:\n*[[Str.sin]], defined as:			
sinh	D								*[[Complex.sinh]], defined as:\n*[[Cool.sinh]], defined as:\n*[[Duration.sinh]], defined as:\n*[[FatRat.sinh]], defined as:\n*[[Hash.sinh]], defined as:\n*[[Instant.sinh]], defined as:\n*[[Int.sinh]], defined as:\n*[[Iterable.sinh]], defined as:\n*[[List.sinh]], defined as:\n*[[Map.sinh]], defined as:\n*[[Match.sinh]], defined as:\n*[[Nil.sinh]], defined as:\n*[[Num.sinh]], defined as:\n*[[Numeric.sinh]], defined as:\n*[[Range.sinh]], defined as:\n*[[Rat.sinh]], defined as:\n*[[Rational.sinh]], defined as:\n*[[Real.sinh]], defined as:\n*[[Seq.sinh]], defined as:\n*[[Stash.sinh]], defined as:\n*[[Str.sinh]], defined as:			
sink	R	Proc.sink										
sink-all	R	Iterator.sink-all										
skip-at-least	R	Iterator.skip-at-least										
skip-at-least-pull-one	R	Iterator.skip-at-least-pull-one										
skip-one	R	Iterator.skip-one										
sleep	R	Date.sleep										
sleep-timer	R	Date.sleep-timer										
sleep-until	R	Date.sleep-until										
slip	R	Slip.slip										
slurp	R	IO.slurp										
slurpy	R	Parameter.slurpy										
so	D								*[[AST.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Any.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Attribute.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Bag.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[BagHash.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Bool.so]], coerces its argument to Bool, has looser precedence than prefix:&lt;?&gt; .\n*[[CallFrame.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Callable.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Cancellation.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Capture.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Channel.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Code.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Complex.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Cool.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[CurrentThreadScheduler.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Cursor.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Date.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[DateTime.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Duration.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Exception.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Failure.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[FatRat.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Grammar.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Hash.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Instant.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Int.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Iterable.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Junction.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Label.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[List.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Lock.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Map.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Match.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Mix.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[MixHash.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Mu.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Nil.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Num.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Numeric.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[ObjAt.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Pair.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Parameter.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Positional.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Proc.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Promise.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Proxy.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Range.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Rat.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Rational.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Real.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Scalar.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Semaphore.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Seq.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Set.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[SetHash.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Signature.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Stash.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Str.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Supplier.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Tap.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Thread.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[ThreadPoolScheduler.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Uni.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Variable.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Version.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[Whatever.so]], returns a Bool value representing the logical non-negation of an expression.\n*[[supplies.so]], returns a Bool value representing the logical non-negation of an expression.			
sort	D								*[[AST.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Any.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Array.sort]], defined as:\n*[[Attribute.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Backtrace.sort]], defined as:\n*[[Bag.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[BagHash.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[CallFrame.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Callable.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Cancellation.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Capture.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Channel.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Code.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Complex.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Cool.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[CurrentThreadScheduler.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Cursor.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Date.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[DateTime.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Duration.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Exception.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Failure.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[FatRat.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Grammar.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Hash.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Instant.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Int.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Iterable.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Label.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[List.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Lock.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Map.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Match.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Mix.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[MixHash.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Nil.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Num.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Numeric.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[ObjAt.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Pair.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Parameter.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Positional.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Proc.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Promise.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Proxy.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Range.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Rat.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Rational.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Real.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Scalar.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Semaphore.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Seq.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Set.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[SetHash.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Signature.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Slip.sort]], defined as:\n*[[Stash.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Str.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Supplier.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Tap.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Thread.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[ThreadPoolScheduler.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Uni.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Variable.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Version.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[Whatever.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.\n*[[done.sort]], waits until the given supply is done, then creates a supply to which all values seen are emitted in sorted order.\n*[[supplies.sort]], sorts iterables with infix:&lt;cmp&gt; or given code object and returns a new List.			
spawn	R	Proc.spawn										
splice	R	Array.splice										
split	D								*[[Complex.split]], defined as:\n*[[ComplexStr.split]], splits a string up into pieces based on delimiters found in the string.\n*[[Cool.split]], defined as:\n*[[Duration.split]], defined as:\n*[[FatRat.split]], defined as:\n*[[Hash.split]], defined as:\n*[[Instant.split]], defined as:\n*[[Int.split]], defined as:\n*[[IntStr.split]], splits a string up into pieces based on delimiters found in the string.\n*[[Iterable.split]], defined as:\n*[[List.split]], defined as:\n*[[Map.split]], defined as:\n*[[Match.split]], defined as:\n*[[Nil.split]], defined as:\n*[[Num.split]], defined as:\n*[[NumStr.split]], splits a string up into pieces based on delimiters found in the string.\n*[[Numeric.split]], defined as:\n*[[Range.split]], defined as:\n*[[Rat.split]], defined as:\n*[[RatStr.split]], splits a string up into pieces based on delimiters found in the string.\n*[[Rational.split]], defined as:\n*[[Real.split]], defined as:\n*[[Seq.split]], defined as:\n*[[Stash.split]], defined as:\n*[[Str.split]], defined as:			
sprintf	D								*[[ComplexStr.sprintf]], this function is mostly identical to the C library sprintf and printf functions.\n*[[IntStr.sprintf]], this function is mostly identical to the C library sprintf and printf functions.\n*[[NumStr.sprintf]], this function is mostly identical to the C library sprintf and printf functions.\n*[[RatStr.sprintf]], this function is mostly identical to the C library sprintf and printf functions.\n*[[Str.sprintf]], this function is mostly identical to the C library sprintf and printf functions.			
spurt	R	IO.spurt										
sqrt	D								*[[Complex.sqrt]], defined as:\n*[[Cool.sqrt]], defined as:\n*[[Duration.sqrt]], defined as:\n*[[FatRat.sqrt]], defined as:\n*[[Hash.sqrt]], defined as:\n*[[Instant.sqrt]], defined as:\n*[[Int.sqrt]], defined as:\n*[[Iterable.sqrt]], defined as:\n*[[List.sqrt]], defined as:\n*[[Map.sqrt]], defined as:\n*[[Match.sqrt]], defined as:\n*[[Nil.sqrt]], defined as:\n*[[Num.sqrt]], defined as:\n*[[Numeric.sqrt]], returns a square root of the number.\n*[[Range.sqrt]], defined as:\n*[[Rat.sqrt]], defined as:\n*[[Rational.sqrt]], defined as:\n*[[Real.sqrt]], defined as:\n*[[Seq.sqrt]], defined as:\n*[[Stash.sqrt]], defined as:\n*[[Str.sqrt]], defined as:			
squish	D								*[[Array.squish]], defined as:\n*[[Backtrace.squish]], defined as:\n*[[List.squish]], defined as:\n*[[Slip.squish]], defined as:\n*[[Supply.squish]], creates a supply that only provides unique values, as defined by the optional :as and :with parameters (same as with List.squish).			
srand	D								*[[Num.srand]], seeds the pseudo random number generator used by Num.rand with the provided value.\n*[[NumStr.srand]], seeds the pseudo random number generator used by Num.rand with the provided value.			
stable	R	Supply.stable										
start	D								*[[Promise.start]], creates a new Promise that runs the given code object.\n*[[Supply.start]], creates a supply of supplies.\n*[[Thread.start]], creates, runs and returns a new Thread.			
starts-with	D								*[[ComplexStr.starts-with]], returns True if the invocant is identical to or starts with $needle.\n*[[IntStr.starts-with]], returns True if the invocant is identical to or starts with $needle.\n*[[NumStr.starts-with]], returns True if the invocant is identical to or starts with $needle.\n*[[RatStr.starts-with]], returns True if the invocant is identical to or starts with $needle.\n*[[Str.starts-with]], returns True if the invocant is identical to or starts with $needle.			
status	R	Promise.status										
sub_signature	R	Parameter.sub_signature										
subbuf	D								*[[Blob.subbuf]], defined as:\n*[[Buf.subbuf]], defined as:			
subparse	R	Grammar.subparse										
subscripts	R	Range.subscripts										
subst	D								*[[ComplexStr.subst]], returns the invocant string where $matcher is replaced by $replacement (or the original string, if no match was found).\n*[[IntStr.subst]], returns the invocant string where $matcher is replaced by $replacement (or the original string, if no match was found).\n*[[NumStr.subst]], returns the invocant string where $matcher is replaced by $replacement (or the original string, if no match was found).\n*[[RatStr.subst]], returns the invocant string where $matcher is replaced by $replacement (or the original string, if no match was found).\n*[[Str.subst]], returns the invocant string where $matcher is replaced by $replacement (or the original string, if no match was found).			
subst-mutate	D								*[[ComplexStr.subst-mutate]], where subst returns the modified string and leaves the original unchanged, it is possible to mutate the original string by using subst-mutate.\n*[[IntStr.subst-mutate]], where subst returns the modified string and leaves the original unchanged, it is possible to mutate the original string by using subst-mutate.\n*[[NumStr.subst-mutate]], where subst returns the modified string and leaves the original unchanged, it is possible to mutate the original string by using subst-mutate.\n*[[RatStr.subst-mutate]], where subst returns the modified string and leaves the original unchanged, it is possible to mutate the original string by using subst-mutate.\n*[[Str.subst-mutate]], where subst returns the modified string and leaves the original unchanged, it is possible to mutate the original string by using subst-mutate.			
substr	D								*[[Complex.substr]], defined as:\n*[[ComplexStr.substr]], returns a part of the string, starting from the character with index $from (where the first character has index 0) and with length $chars.\n*[[Cool.substr]], defined as:\n*[[Duration.substr]], defined as:\n*[[FatRat.substr]], defined as:\n*[[Hash.substr]], defined as:\n*[[Instant.substr]], defined as:\n*[[Int.substr]], defined as:\n*[[IntStr.substr]], returns a part of the string, starting from the character with index $from (where the first character has index 0) and with length $chars.\n*[[Iterable.substr]], defined as:\n*[[List.substr]], defined as:\n*[[Map.substr]], defined as:\n*[[Match.substr]], defined as:\n*[[Nil.substr]], defined as:\n*[[Num.substr]], defined as:\n*[[NumStr.substr]], returns a part of the string, starting from the character with index $from (where the first character has index 0) and with length $chars.\n*[[Numeric.substr]], defined as:\n*[[Range.substr]], defined as:\n*[[Rat.substr]], defined as:\n*[[RatStr.substr]], returns a part of the string, starting from the character with index $from (where the first character has index 0) and with length $chars.\n*[[Rational.substr]], defined as:\n*[[Real.substr]], defined as:\n*[[Seq.substr]], defined as:\n*[[Stash.substr]], defined as:\n*[[Str.substr]], defined as:			
substr-eq	D								*[[ComplexStr.substr-eq]], returns True if the $test-string exactly matches the String object, starting from the given initial index $from.\n*[[IntStr.substr-eq]], returns True if the $test-string exactly matches the String object, starting from the given initial index $from.\n*[[NumStr.substr-eq]], returns True if the $test-string exactly matches the String object, starting from the given initial index $from.\n*[[RatStr.substr-eq]], returns True if the $test-string exactly matches the String object, starting from the given initial index $from.\n*[[Str.substr-eq]], returns True if the $test-string exactly matches the String object, starting from the given initial index $from.			
substr-rw	D								*[[ComplexStr.substr-rw]], a version of substr that returns a Proxy functioning as a writable reference to a part of a string variable.\n*[[IntStr.substr-rw]], a version of substr that returns a Proxy functioning as a writable reference to a part of a string variable.\n*[[NumStr.substr-rw]], a version of substr that returns a Proxy functioning as a writable reference to a part of a string variable.\n*[[RatStr.substr-rw]], a version of substr that returns a Proxy functioning as a writable reference to a part of a string variable.\n*[[Str.substr-rw]], a version of substr that returns a Proxy functioning as a writable reference to a part of a string variable.			
succ	D								*[[Bool.succ]], returns True.\n*[[Complex.succ]], returns the number incremented by one (successor).\n*[[ComplexStr.succ]], returns the string incremented by one.\n*[[Date.succ]], defined as:\n*[[Duration.succ]], returns the number incremented by one (successor).\n*[[FatRat.succ]], returns the number incremented by one (successor).\n*[[Instant.succ]], returns the number incremented by one (successor).\n*[[Int.succ]], returns the number incremented by one (successor).\n*[[IntStr.succ]], returns the string incremented by one.\n*[[Num.succ]], returns the number incremented by one (successor).\n*[[NumStr.succ]], returns the string incremented by one.\n*[[Numeric.succ]], returns the number incremented by one (successor).\n*[[Rat.succ]], returns the number incremented by one (successor).\n*[[RatStr.succ]], returns the string incremented by one.\n*[[Rational.succ]], returns the number incremented by one (successor).\n*[[Real.succ]], returns the number incremented by one (successor).\n*[[Str.succ]], returns the string incremented by one.			
sum	D								*[[Array.sum]], defined as:\n*[[Backtrace.sum]], defined as:\n*[[List.sum]], defined as:\n*[[Range.sum]], returns the sum of all elements in the Range.\n*[[Slip.sum]], defined as:			
supply	R	Tap.supply										
tail	D								*[[Array.tail]], defined as:\n*[[Backtrace.tail]], defined as:\n*[[List.tail]], defined as:\n*[[Slip.tail]], defined as:\n*[[Supply.tail]], creates a "tail" supply with the same semantics as List.tail.			
take	D								*[[AST.take]], takes the given item and passes it to the enclosing gather block.\n*[[Any.take]], takes the given item and passes it to the enclosing gather block.\n*[[Attribute.take]], takes the given item and passes it to the enclosing gather block.\n*[[Bag.take]], takes the given item and passes it to the enclosing gather block.\n*[[BagHash.take]], takes the given item and passes it to the enclosing gather block.\n*[[CallFrame.take]], takes the given item and passes it to the enclosing gather block.\n*[[Callable.take]], takes the given item and passes it to the enclosing gather block.\n*[[Cancellation.take]], takes the given item and passes it to the enclosing gather block.\n*[[Capture.take]], takes the given item and passes it to the enclosing gather block.\n*[[Channel.take]], takes the given item and passes it to the enclosing gather block.\n*[[Code.take]], takes the given item and passes it to the enclosing gather block.\n*[[Complex.take]], takes the given item and passes it to the enclosing gather block.\n*[[Cool.take]], takes the given item and passes it to the enclosing gather block.\n*[[CurrentThreadScheduler.take]], takes the given item and passes it to the enclosing gather block.\n*[[Cursor.take]], takes the given item and passes it to the enclosing gather block.\n*[[Date.take]], takes the given item and passes it to the enclosing gather block.\n*[[DateTime.take]], takes the given item and passes it to the enclosing gather block.\n*[[Duration.take]], takes the given item and passes it to the enclosing gather block.\n*[[Exception.take]], takes the given item and passes it to the enclosing gather block.\n*[[Failure.take]], takes the given item and passes it to the enclosing gather block.\n*[[FatRat.take]], takes the given item and passes it to the enclosing gather block.\n*[[Grammar.take]], takes the given item and passes it to the enclosing gather block.\n*[[Hash.take]], takes the given item and passes it to the enclosing gather block.\n*[[Instant.take]], takes the given item and passes it to the enclosing gather block.\n*[[Int.take]], takes the given item and passes it to the enclosing gather block.\n*[[Iterable.take]], takes the given item and passes it to the enclosing gather block.\n*[[Junction.take]], takes the given item and passes it to the enclosing gather block.\n*[[Label.take]], takes the given item and passes it to the enclosing gather block.\n*[[List.take]], takes the given item and passes it to the enclosing gather block.\n*[[Lock.take]], takes the given item and passes it to the enclosing gather block.\n*[[Map.take]], takes the given item and passes it to the enclosing gather block.\n*[[Match.take]], takes the given item and passes it to the enclosing gather block.\n*[[Mix.take]], takes the given item and passes it to the enclosing gather block.\n*[[MixHash.take]], takes the given item and passes it to the enclosing gather block.\n*[[Mu.take]], takes the given item and passes it to the enclosing gather block.\n*[[Nil.take]], takes the given item and passes it to the enclosing gather block.\n*[[Num.take]], takes the given item and passes it to the enclosing gather block.\n*[[Numeric.take]], takes the given item and passes it to the enclosing gather block.\n*[[ObjAt.take]], takes the given item and passes it to the enclosing gather block.\n*[[Pair.take]], takes the given item and passes it to the enclosing gather block.\n*[[Parameter.take]], takes the given item and passes it to the enclosing gather block.\n*[[Positional.take]], takes the given item and passes it to the enclosing gather block.\n*[[Proc.take]], takes the given item and passes it to the enclosing gather block.\n*[[Promise.take]], takes the given item and passes it to the enclosing gather block.\n*[[Proxy.take]], takes the given item and passes it to the enclosing gather block.\n*[[Range.take]], takes the given item and passes it to the enclosing gather block.\n*[[Rat.take]], takes the given item and passes it to the enclosing gather block.\n*[[Rational.take]], takes the given item and passes it to the enclosing gather block.\n*[[Real.take]], takes the given item and passes it to the enclosing gather block.\n*[[Scalar.take]], takes the given item and passes it to the enclosing gather block.\n*[[Semaphore.take]], takes the given item and passes it to the enclosing gather block.\n*[[Seq.take]], takes the given item and passes it to the enclosing gather block.\n*[[Set.take]], takes the given item and passes it to the enclosing gather block.\n*[[SetHash.take]], takes the given item and passes it to the enclosing gather block.\n*[[Signature.take]], takes the given item and passes it to the enclosing gather block.\n*[[Stash.take]], takes the given item and passes it to the enclosing gather block.\n*[[Str.take]], takes the given item and passes it to the enclosing gather block.\n*[[Supplier.take]], takes the given item and passes it to the enclosing gather block.\n*[[Tap.take]], takes the given item and passes it to the enclosing gather block.\n*[[Thread.take]], takes the given item and passes it to the enclosing gather block.\n*[[ThreadPoolScheduler.take]], takes the given item and passes it to the enclosing gather block.\n*[[Uni.take]], takes the given item and passes it to the enclosing gather block.\n*[[Variable.take]], takes the given item and passes it to the enclosing gather block.\n*[[Version.take]], takes the given item and passes it to the enclosing gather block.\n*[[Whatever.take]], takes the given item and passes it to the enclosing gather block.\n*[[supplies.take]], takes the given item and passes it to the enclosing gather block.			
take-rw	D								*[[AST.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Any.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Attribute.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Bag.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[BagHash.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[CallFrame.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Callable.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Cancellation.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Capture.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Channel.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Code.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Complex.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Cool.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[CurrentThreadScheduler.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Cursor.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Date.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[DateTime.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Duration.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Exception.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Failure.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[FatRat.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Grammar.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Hash.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Instant.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Int.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Iterable.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Junction.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Label.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[List.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Lock.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Map.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Match.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Mix.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[MixHash.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Mu.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Nil.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Num.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Numeric.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[ObjAt.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Pair.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Parameter.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Positional.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Proc.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Promise.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Proxy.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Range.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Rat.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Rational.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Real.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Scalar.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Semaphore.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Seq.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Set.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[SetHash.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Signature.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Stash.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Str.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Supplier.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Tap.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Thread.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[ThreadPoolScheduler.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Uni.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Variable.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Version.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[Whatever.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.\n*[[supplies.take-rw]], returns the given item to the enclosing gather block, without introducing a new container.			
tan	D								*[[Complex.tan]], defined as:\n*[[Cool.tan]], defined as:\n*[[Duration.tan]], defined as:\n*[[FatRat.tan]], defined as:\n*[[Hash.tan]], defined as:\n*[[Instant.tan]], defined as:\n*[[Int.tan]], defined as:\n*[[Iterable.tan]], defined as:\n*[[List.tan]], defined as:\n*[[Map.tan]], defined as:\n*[[Match.tan]], defined as:\n*[[Nil.tan]], defined as:\n*[[Num.tan]], defined as:\n*[[Numeric.tan]], defined as:\n*[[Range.tan]], defined as:\n*[[Rat.tan]], defined as:\n*[[Rational.tan]], defined as:\n*[[Real.tan]], defined as:\n*[[Seq.tan]], defined as:\n*[[Stash.tan]], defined as:\n*[[Str.tan]], defined as:			
tanh	D								*[[Complex.tanh]], defined as:\n*[[Cool.tanh]], defined as:\n*[[Duration.tanh]], defined as:\n*[[FatRat.tanh]], defined as:\n*[[Hash.tanh]], defined as:\n*[[Instant.tanh]], defined as:\n*[[Int.tanh]], defined as:\n*[[Iterable.tanh]], defined as:\n*[[List.tanh]], defined as:\n*[[Map.tanh]], defined as:\n*[[Match.tanh]], defined as:\n*[[Nil.tanh]], defined as:\n*[[Num.tanh]], defined as:\n*[[Numeric.tanh]], defined as:\n*[[Range.tanh]], defined as:\n*[[Rat.tanh]], defined as:\n*[[Rational.tanh]], defined as:\n*[[Real.tanh]], defined as:\n*[[Seq.tanh]], defined as:\n*[[Stash.tanh]], defined as:\n*[[Str.tanh]], defined as:			
tc	D								*[[Complex.tc]], defined as:\n*[[ComplexStr.tc]], does a Unicode "titlecase" operation, that is changes the first character in the string to title case, or to upper case if the character has no title case mapping\n*[[Cool.tc]], defined as:\n*[[Duration.tc]], defined as:\n*[[FatRat.tc]], defined as:\n*[[Hash.tc]], defined as:\n*[[Instant.tc]], defined as:\n*[[Int.tc]], defined as:\n*[[IntStr.tc]], does a Unicode "titlecase" operation, that is changes the first character in the string to title case, or to upper case if the character has no title case mapping\n*[[Iterable.tc]], defined as:\n*[[List.tc]], defined as:\n*[[Map.tc]], defined as:\n*[[Match.tc]], defined as:\n*[[Nil.tc]], defined as:\n*[[Num.tc]], defined as:\n*[[NumStr.tc]], does a Unicode "titlecase" operation, that is changes the first character in the string to title case, or to upper case if the character has no title case mapping\n*[[Numeric.tc]], defined as:\n*[[Range.tc]], defined as:\n*[[Rat.tc]], defined as:\n*[[RatStr.tc]], does a Unicode "titlecase" operation, that is changes the first character in the string to title case, or to upper case if the character has no title case mapping\n*[[Rational.tc]], defined as:\n*[[Real.tc]], defined as:\n*[[Seq.tc]], defined as:\n*[[Stash.tc]], defined as:\n*[[Str.tc]], defined as:			
tclc	D								*[[Complex.tclc]], defined as:\n*[[ComplexStr.tclc]], turns the first character to title case, and all other characters to lower case\n*[[Cool.tclc]], defined as:\n*[[Duration.tclc]], defined as:\n*[[FatRat.tclc]], defined as:\n*[[Hash.tclc]], defined as:\n*[[Instant.tclc]], defined as:\n*[[Int.tclc]], defined as:\n*[[IntStr.tclc]], turns the first character to title case, and all other characters to lower case\n*[[Iterable.tclc]], defined as:\n*[[List.tclc]], defined as:\n*[[Map.tclc]], defined as:\n*[[Match.tclc]], defined as:\n*[[Nil.tclc]], defined as:\n*[[Num.tclc]], defined as:\n*[[NumStr.tclc]], turns the first character to title case, and all other characters to lower case\n*[[Numeric.tclc]], defined as:\n*[[Range.tclc]], defined as:\n*[[Rat.tclc]], defined as:\n*[[RatStr.tclc]], turns the first character to title case, and all other characters to lower case\n*[[Rational.tclc]], defined as:\n*[[Real.tclc]], defined as:\n*[[Seq.tclc]], defined as:\n*[[Stash.tclc]], defined as:\n*[[Str.tclc]], defined as:			
then	R	Promise.then										
throttle	R	Supply.throttle										
throw	R	Exception.throw										
timezone	R	DateTime.timezone										
to	D								*[[Array.to]], assumes the List contains Match objects, such as the $/ variable being a List, when using :g modifier in regexes.\n*[[Backtrace.to]], assumes the List contains Match objects, such as the $/ variable being a List, when using :g modifier in regexes.\n*[[List.to]], assumes the List contains Match objects, such as the $/ variable being a List, when using :g modifier in regexes.\n*[[Match.to]], returns the index of the end position of the match.\n*[[Slip.to]], assumes the List contains Match objects, such as the $/ variable being a List, when using :g modifier in regexes.			
to-posix	R	Instant.to-posix										
today	R	Date.today										
total	D								*[[Bag.total]], defined as:\n*[[BagHash.total]], defined as:\n*[[Baggy.total]], defined as:\n*[[Mix.total]], defined as:\n*[[MixHash.total]], defined as:\n*[[Mixy.total]], defined as:\n*[[Set.total]], the total of all the values of the QuantHash object.\n*[[SetHash.total]], the total of all the values of the QuantHash object.\n*[[Setty.total]], the total of all the values of the QuantHash object.			
trans	D								*[[ComplexStr.trans]], replaces one or many characters with one or many characters.\n*[[IntStr.trans]], replaces one or many characters with one or many characters.\n*[[NumStr.trans]], replaces one or many characters with one or many characters.\n*[[RatStr.trans]], replaces one or many characters with one or many characters.\n*[[Str.trans]], replaces one or many characters with one or many characters.			
trim	D								*[[Complex.trim]], defined as:\n*[[ComplexStr.trim]], remove leading and trailing whitespace.\n*[[Cool.trim]], defined as:\n*[[Duration.trim]], defined as:\n*[[FatRat.trim]], defined as:\n*[[Hash.trim]], defined as:\n*[[Instant.trim]], defined as:\n*[[Int.trim]], defined as:\n*[[IntStr.trim]], remove leading and trailing whitespace.\n*[[Iterable.trim]], defined as:\n*[[List.trim]], defined as:\n*[[Map.trim]], defined as:\n*[[Match.trim]], defined as:\n*[[Nil.trim]], defined as:\n*[[Num.trim]], defined as:\n*[[NumStr.trim]], remove leading and trailing whitespace.\n*[[Numeric.trim]], defined as:\n*[[Range.trim]], defined as:\n*[[Rat.trim]], defined as:\n*[[RatStr.trim]], remove leading and trailing whitespace.\n*[[Rational.trim]], defined as:\n*[[Real.trim]], defined as:\n*[[Seq.trim]], defined as:\n*[[Stash.trim]], defined as:\n*[[Str.trim]], defined as:			
trim-leading	D								*[[Complex.trim-leading]], defined as:\n*[[ComplexStr.trim-leading]], remove the whitespace characters from the beginning of a string.\n*[[Cool.trim-leading]], defined as:\n*[[Duration.trim-leading]], defined as:\n*[[FatRat.trim-leading]], defined as:\n*[[Hash.trim-leading]], defined as:\n*[[Instant.trim-leading]], defined as:\n*[[Int.trim-leading]], defined as:\n*[[IntStr.trim-leading]], remove the whitespace characters from the beginning of a string.\n*[[Iterable.trim-leading]], defined as:\n*[[List.trim-leading]], defined as:\n*[[Map.trim-leading]], defined as:\n*[[Match.trim-leading]], defined as:\n*[[Nil.trim-leading]], defined as:\n*[[Num.trim-leading]], defined as:\n*[[NumStr.trim-leading]], remove the whitespace characters from the beginning of a string.\n*[[Numeric.trim-leading]], defined as:\n*[[Range.trim-leading]], defined as:\n*[[Rat.trim-leading]], defined as:\n*[[RatStr.trim-leading]], remove the whitespace characters from the beginning of a string.\n*[[Rational.trim-leading]], defined as:\n*[[Real.trim-leading]], defined as:\n*[[Seq.trim-leading]], defined as:\n*[[Stash.trim-leading]], defined as:\n*[[Str.trim-leading]], defined as:			
trim-trailing	D								*[[Complex.trim-trailing]], defined as:\n*[[ComplexStr.trim-trailing]], remove the whitespace characters from the end of a string.\n*[[Cool.trim-trailing]], defined as:\n*[[Duration.trim-trailing]], defined as:\n*[[FatRat.trim-trailing]], defined as:\n*[[Hash.trim-trailing]], defined as:\n*[[Instant.trim-trailing]], defined as:\n*[[Int.trim-trailing]], defined as:\n*[[IntStr.trim-trailing]], remove the whitespace characters from the end of a string.\n*[[Iterable.trim-trailing]], defined as:\n*[[List.trim-trailing]], defined as:\n*[[Map.trim-trailing]], defined as:\n*[[Match.trim-trailing]], defined as:\n*[[Nil.trim-trailing]], defined as:\n*[[Num.trim-trailing]], defined as:\n*[[NumStr.trim-trailing]], remove the whitespace characters from the end of a string.\n*[[Numeric.trim-trailing]], defined as:\n*[[Range.trim-trailing]], defined as:\n*[[Rat.trim-trailing]], defined as:\n*[[RatStr.trim-trailing]], remove the whitespace characters from the end of a string.\n*[[Rational.trim-trailing]], defined as:\n*[[Real.trim-trailing]], defined as:\n*[[Seq.trim-trailing]], defined as:\n*[[Stash.trim-trailing]], defined as:\n*[[Str.trim-trailing]], defined as:			
truncate	D								*[[Complex.truncate]], defined as:\n*[[ComplexStr.truncate]], defined as:\n*[[Cool.truncate]], defined as:\n*[[Duration.truncate]], defined as:\n*[[FatRat.truncate]], defined as:\n*[[Hash.truncate]], defined as:\n*[[Instant.truncate]], defined as:\n*[[Int.truncate]], defined as:\n*[[Iterable.truncate]], defined as:\n*[[List.truncate]], defined as:\n*[[Map.truncate]], defined as:\n*[[Match.truncate]], defined as:\n*[[Nil.truncate]], defined as:\n*[[Num.truncate]], defined as:\n*[[Numeric.truncate]], defined as:\n*[[Range.truncate]], defined as:\n*[[Rat.truncate]], defined as:\n*[[Rational.truncate]], defined as:\n*[[Real.truncate]], defined as:\n*[[Seq.truncate]], defined as:\n*[[Stash.truncate]], defined as:\n*[[Str.truncate]], defined as:			
truncated-to	D								*[[Date.truncated-to]], defined as:\n*[[DateTime.truncated-to]], defined as:			
try_acquire	R	Semaphore.try_acquire										
twigil	R	Parameter.twigil										
type	D								*[[Attribute.type]], defined as:\n*[[Parameter.type]], returns the nominal type constraint of the parameter.			
type_captures	R	Parameter.type_captures										
types	R	Hash.types										
uc	D								*[[Complex.uc]], defined as:\n*[[ComplexStr.uc]], returns an uppercase version of the string.\n*[[Cool.uc]], defined as:\n*[[Duration.uc]], defined as:\n*[[FatRat.uc]], defined as:\n*[[Hash.uc]], defined as:\n*[[Instant.uc]], defined as:\n*[[Int.uc]], defined as:\n*[[IntStr.uc]], returns an uppercase version of the string.\n*[[Iterable.uc]], defined as:\n*[[List.uc]], defined as:\n*[[Map.uc]], defined as:\n*[[Match.uc]], defined as:\n*[[Nil.uc]], defined as:\n*[[Num.uc]], defined as:\n*[[NumStr.uc]], returns an uppercase version of the string.\n*[[Numeric.uc]], defined as:\n*[[Range.uc]], defined as:\n*[[Rat.uc]], defined as:\n*[[RatStr.uc]], returns an uppercase version of the string.\n*[[Rational.uc]], defined as:\n*[[Real.uc]], defined as:\n*[[Seq.uc]], defined as:\n*[[Stash.uc]], defined as:\n*[[Str.uc]], defined as:			
uncaught_handler	D								*[[CurrentThreadScheduler.uncaught_handler]], rW-Accessor for the handler that is caught for uncaught exceptions from the code that is being scheduled and run.\n*[[Scheduler.uncaught_handler]], rW-Accessor for the handler that is caught for uncaught exceptions from the code that is being scheduled and run.\n*[[ThreadPoolScheduler.uncaught_handler]], rW-Accessor for the handler that is caught for uncaught exceptions from the code that is being scheduled and run.			
unimatch	D								*[[Complex.unimatch]], defined as:\n*[[Cool.unimatch]], defined as:\n*[[Duration.unimatch]], defined as:\n*[[FatRat.unimatch]], defined as:\n*[[Hash.unimatch]], defined as:\n*[[Instant.unimatch]], defined as:\n*[[Int.unimatch]], defined as:\n*[[Iterable.unimatch]], defined as:\n*[[List.unimatch]], defined as:\n*[[Map.unimatch]], defined as:\n*[[Match.unimatch]], defined as:\n*[[Nil.unimatch]], defined as:\n*[[Num.unimatch]], defined as:\n*[[Numeric.unimatch]], defined as:\n*[[Range.unimatch]], defined as:\n*[[Rat.unimatch]], defined as:\n*[[Rational.unimatch]], defined as:\n*[[Real.unimatch]], defined as:\n*[[Seq.unimatch]], defined as:\n*[[Stash.unimatch]], defined as:\n*[[Str.unimatch]], defined as:			
uniname	D								*[[Complex.uniname]], defined as:\n*[[Cool.uniname]], defined as:\n*[[Duration.uniname]], defined as:\n*[[FatRat.uniname]], defined as:\n*[[Hash.uniname]], defined as:\n*[[Instant.uniname]], defined as:\n*[[Int.uniname]], defined as:\n*[[Iterable.uniname]], defined as:\n*[[List.uniname]], defined as:\n*[[Map.uniname]], defined as:\n*[[Match.uniname]], defined as:\n*[[Nil.uniname]], defined as:\n*[[Num.uniname]], defined as:\n*[[Numeric.uniname]], defined as:\n*[[Range.uniname]], defined as:\n*[[Rat.uniname]], defined as:\n*[[Rational.uniname]], defined as:\n*[[Real.uniname]], defined as:\n*[[Seq.uniname]], defined as:\n*[[Stash.uniname]], defined as:\n*[[Str.uniname]], defined as:			
uninames	D								*[[Complex.uninames]], defined as:\n*[[Cool.uninames]], defined as:\n*[[Duration.uninames]], defined as:\n*[[FatRat.uninames]], defined as:\n*[[Hash.uninames]], defined as:\n*[[Instant.uninames]], defined as:\n*[[Int.uninames]], defined as:\n*[[Iterable.uninames]], defined as:\n*[[List.uninames]], defined as:\n*[[Map.uninames]], defined as:\n*[[Match.uninames]], defined as:\n*[[Nil.uninames]], defined as:\n*[[Num.uninames]], defined as:\n*[[Numeric.uninames]], defined as:\n*[[Range.uninames]], defined as:\n*[[Rat.uninames]], defined as:\n*[[Rational.uninames]], defined as:\n*[[Real.uninames]], defined as:\n*[[Seq.uninames]], defined as:\n*[[Stash.uninames]], defined as:\n*[[Str.uninames]], defined as:			
uniprop	D								*[[Complex.uniprop]], defined as:\n*[[Cool.uniprop]], defined as:\n*[[Duration.uniprop]], defined as:\n*[[FatRat.uniprop]], defined as:\n*[[Hash.uniprop]], defined as:\n*[[Instant.uniprop]], defined as:\n*[[Int.uniprop]], defined as:\n*[[Iterable.uniprop]], defined as:\n*[[List.uniprop]], defined as:\n*[[Map.uniprop]], defined as:\n*[[Match.uniprop]], defined as:\n*[[Nil.uniprop]], defined as:\n*[[Num.uniprop]], defined as:\n*[[Numeric.uniprop]], defined as:\n*[[Range.uniprop]], defined as:\n*[[Rat.uniprop]], defined as:\n*[[Rational.uniprop]], defined as:\n*[[Real.uniprop]], defined as:\n*[[Seq.uniprop]], defined as:\n*[[Stash.uniprop]], defined as:\n*[[Str.uniprop]], defined as:			
uniprops	D								*[[Complex.uniprops]], defined as:\n*[[Cool.uniprops]], defined as:\n*[[Duration.uniprops]], defined as:\n*[[FatRat.uniprops]], defined as:\n*[[Hash.uniprops]], defined as:\n*[[Instant.uniprops]], defined as:\n*[[Int.uniprops]], defined as:\n*[[Iterable.uniprops]], defined as:\n*[[List.uniprops]], defined as:\n*[[Map.uniprops]], defined as:\n*[[Match.uniprops]], defined as:\n*[[Nil.uniprops]], defined as:\n*[[Num.uniprops]], defined as:\n*[[Numeric.uniprops]], defined as:\n*[[Range.uniprops]], defined as:\n*[[Rat.uniprops]], defined as:\n*[[Rational.uniprops]], defined as:\n*[[Real.uniprops]], defined as:\n*[[Seq.uniprops]], defined as:\n*[[Stash.uniprops]], defined as:\n*[[Str.uniprops]], defined as:			
unique	D								*[[Array.unique]], defined as:\n*[[Backtrace.unique]], defined as:\n*[[List.unique]], defined as:\n*[[Slip.unique]], defined as:\n*[[Supply.unique]], creates a supply that only provides unique values, as defined by the optional :as and :with parameters (same as with List.unique).			
unival	D								*[[Bool.unival]], defined as:\n*[[ComplexStr.unival]], returns the numeric value that the first codepoint in the invocant represents, or NaN if it's not numeric.\n*[[Int.unival]], defined as:\n*[[IntStr.unival]], defined as:\n*[[NumStr.unival]], returns the numeric value that the first codepoint in the invocant represents, or NaN if it's not numeric.\n*[[Order.unival]], defined as:\n*[[RatStr.unival]], returns the numeric value that the first codepoint in the invocant represents, or NaN if it's not numeric.\n*[[Str.unival]], returns the numeric value that the first codepoint in the invocant represents, or NaN if it's not numeric.\n*[[nativeInt.unival]], defined as:			
univals	D								*[[ComplexStr.univals]], returns a list of numeric values represented by each codepoint in the invocant string, and NaN for non-numeric characters.\n*[[IntStr.univals]], returns a list of numeric values represented by each codepoint in the invocant string, and NaN for non-numeric characters.\n*[[NumStr.univals]], returns a list of numeric values represented by each codepoint in the invocant string, and NaN for non-numeric characters.\n*[[RatStr.univals]], returns a list of numeric values represented by each codepoint in the invocant string, and NaN for non-numeric characters.\n*[[Str.univals]], returns a list of numeric values represented by each codepoint in the invocant string, and NaN for non-numeric characters.			
unlock	R	Lock.unlock										
unpack	D								*[[Blob.unpack]], this method is considered experimental, in order to use it you will need to do:\n*[[Buf.unpack]], this method is considered experimental, in order to use it you will need to do:			
unpolar	D								*[[Complex.unpolar]], defined as:\n*[[Cool.unpolar]], defined as:\n*[[Duration.unpolar]], defined as:\n*[[FatRat.unpolar]], defined as:\n*[[Hash.unpolar]], defined as:\n*[[Instant.unpolar]], defined as:\n*[[Int.unpolar]], defined as:\n*[[Iterable.unpolar]], defined as:\n*[[List.unpolar]], defined as:\n*[[Map.unpolar]], defined as:\n*[[Match.unpolar]], defined as:\n*[[Nil.unpolar]], defined as:\n*[[Num.unpolar]], defined as:\n*[[Numeric.unpolar]], defined as:\n*[[Range.unpolar]], defined as:\n*[[Rat.unpolar]], defined as:\n*[[Rational.unpolar]], defined as:\n*[[Real.unpolar]], defined as:\n*[[Seq.unpolar]], defined as:\n*[[Stash.unpolar]], defined as:\n*[[Str.unpolar]], defined as:			
unshift	D								*[[Array.unshift]], defined as:\n*[[Nil.unshift]], warns the user that they tried to unshift onto a Nil.			
unwrap	D								*[[Macro.unwrap]], restores the original routine after it has been wrapped with wrap.\n*[[Method.unwrap]], restores the original routine after it has been wrapped with wrap.\n*[[Regex.unwrap]], restores the original routine after it has been wrapped with wrap.\n*[[Routine.unwrap]], restores the original routine after it has been wrapped with wrap.\n*[[Sub.unwrap]], restores the original routine after it has been wrapped with wrap.\n*[[Submethod.unwrap]], restores the original routine after it has been wrapped with wrap.			
utc	R	DateTime.utc										
val	D								*[[ComplexStr.val]], given a Str that may be parsable as a numeric value, it will attempt to construct the appropriate allomorph, returning one of IntStr, NumStr, RatStr or ComplexStr or a plain Str if a numeric value cannot be parsed.\n*[[IntStr.val]], given a Str that may be parsable as a numeric value, it will attempt to construct the appropriate allomorph, returning one of IntStr, NumStr, RatStr or ComplexStr or a plain Str if a numeric value cannot be parsed.\n*[[NumStr.val]], given a Str that may be parsable as a numeric value, it will attempt to construct the appropriate allomorph, returning one of IntStr, NumStr, RatStr or ComplexStr or a plain Str if a numeric value cannot be parsed.\n*[[RatStr.val]], given a Str that may be parsable as a numeric value, it will attempt to construct the appropriate allomorph, returning one of IntStr, NumStr, RatStr or ComplexStr or a plain Str if a numeric value cannot be parsed.\n*[[Str.val]], given a Str that may be parsable as a numeric value, it will attempt to construct the appropriate allomorph, returning one of IntStr, NumStr, RatStr or ComplexStr or a plain Str if a numeric value cannot be parsed.			
value	R	Pair.value										
values	D								*[[Array.values]], defined as:\n*[[Backtrace.values]], defined as:\n*[[Bag.values]], defined as:\n*[[BagHash.values]], defined as:\n*[[Baggy.values]], defined as:\n*[[Capture.values]], defined as:\n*[[Hash.values]], defined as:\n*[[List.values]], defined as:\n*[[Map.values]], defined as:\n*[[Match.values]], defined as:\n*[[Mix.values]], defined as:\n*[[MixHash.values]], defined as:\n*[[Mixy.values]], defined as:\n*[[Pair.values]], defined as:\n*[[Set.values]], defined as:\n*[[SetHash.values]], defined as:\n*[[Setty.values]], defined as:\n*[[Slip.values]], defined as:\n*[[Stash.values]], defined as:			
vow	R	Promise.vow										
warn	R	Exception.warn										
week	D								*[[Date.week]], defined as:\n*[[DateTime.week]], defined as:\n*[[Dateish.week]], defined as:			
week-number	D								*[[Date.week-number]], defined as:\n*[[DateTime.week-number]], defined as:\n*[[Dateish.week-number]], defined as:			
week-year	D								*[[Date.week-year]], defined as:\n*[[DateTime.week-year]], defined as:\n*[[Dateish.week-year]], defined as:			
weekday-of-month	D								*[[Date.weekday-of-month]], defined as:\n*[[DateTime.weekday-of-month]], defined as:\n*[[Dateish.weekday-of-month]], defined as:			
whole-second	R	DateTime.whole-second										
wordcase	D								*[[Complex.wordcase]], defined as:\n*[[ComplexStr.wordcase]], returns a string in which &amp;filter has been applied to all the words that match $where.\n*[[Cool.wordcase]], defined as:\n*[[Duration.wordcase]], defined as:\n*[[FatRat.wordcase]], defined as:\n*[[Hash.wordcase]], defined as:\n*[[Instant.wordcase]], defined as:\n*[[Int.wordcase]], defined as:\n*[[IntStr.wordcase]], returns a string in which &amp;filter has been applied to all the words that match $where.\n*[[Iterable.wordcase]], defined as:\n*[[List.wordcase]], defined as:\n*[[Map.wordcase]], defined as:\n*[[Match.wordcase]], defined as:\n*[[Nil.wordcase]], defined as:\n*[[Num.wordcase]], defined as:\n*[[NumStr.wordcase]], returns a string in which &amp;filter has been applied to all the words that match $where.\n*[[Numeric.wordcase]], defined as:\n*[[Range.wordcase]], defined as:\n*[[Rat.wordcase]], defined as:\n*[[RatStr.wordcase]], returns a string in which &amp;filter has been applied to all the words that match $where.\n*[[Rational.wordcase]], defined as:\n*[[Real.wordcase]], defined as:\n*[[Seq.wordcase]], defined as:\n*[[Stash.wordcase]], defined as:\n*[[Str.wordcase]], defined as:			
words	D								*[[Complex.words]], defined as:\n*[[ComplexStr.words]], returns a list of non-whitespace bits, i.e. \n*[[Cool.words]], defined as:\n*[[Duration.words]], defined as:\n*[[FatRat.words]], defined as:\n*[[Hash.words]], defined as:\n*[[Instant.words]], defined as:\n*[[Int.words]], defined as:\n*[[IntStr.words]], returns a list of non-whitespace bits, i.e. \n*[[Iterable.words]], defined as:\n*[[List.words]], defined as:\n*[[Map.words]], defined as:\n*[[Match.words]], defined as:\n*[[Nil.words]], defined as:\n*[[Num.words]], defined as:\n*[[NumStr.words]], returns a list of non-whitespace bits, i.e. \n*[[Numeric.words]], defined as:\n*[[Range.words]], defined as:\n*[[Rat.words]], defined as:\n*[[RatStr.words]], returns a list of non-whitespace bits, i.e. \n*[[Rational.words]], defined as:\n*[[Real.words]], defined as:\n*[[Seq.words]], defined as:\n*[[Stash.words]], defined as:\n*[[Str.words]], defined as:\n*[[Supply.words]], creates a supply that will emit the characters coming in word for word from a supply that's usually created by some asynchronous I/O operation.			
wrap	D								*[[Macro.wrap]], wraps (i.e. \n*[[Method.wrap]], wraps (i.e. \n*[[Regex.wrap]], wraps (i.e. \n*[[Routine.wrap]], wraps (i.e. \n*[[Sub.wrap]], wraps (i.e. \n*[[Submethod.wrap]], wraps (i.e. 			
yada	D								*[[Macro.yada]], returns True if the routine is a stub\n*[[Method.yada]], returns True if the routine is a stub\n*[[Regex.yada]], returns True if the routine is a stub\n*[[Routine.yada]], returns True if the routine is a stub\n*[[Sub.yada]], returns True if the routine is a stub\n*[[Submethod.yada]], returns True if the routine is a stub			
year	D								*[[Date.year]], defined as:\n*[[DateTime.year]], defined as:\n*[[Dateish.year]], defined as:			
yield	R	Thread.yield										
yyyy-mm-dd	D								*[[Date.yyyy-mm-dd]], defined as:\n*[[DateTime.yyyy-mm-dd]], defined as:\n*[[Dateish.yyyy-mm-dd]], defined as:			
zip	D								*[[Array.zip]], defined as:\n*[[Backtrace.zip]], defined as:\n*[[List.zip]], defined as:\n*[[Slip.zip]], defined as:\n*[[supplies.zip]], creates a supply that emits combined values as soon as there is a new value seen on all of the supplies.			
