$anchor scroll	R	$anchorScroll										
$anchor scroll provider	R	$anchorScrollProvider										
$anchorScroll	A			service in module ng							<section class="prog__container"><p>When called, it scrolls to the element related to the specified <code>hash</code> or (if omitted) to the current value of $location.hash(), according to the rules specified in the HTML5 spec.</p><h2>Usage</h2><pre><code>$anchorScroll([hash]);</code></pre></section>	https://docs.angularjs.org/api/ng/service/$anchorScroll
$anchorScrollProvider	A			provider in module ng							<section class="prog__container"><p>Use <code>$anchorScrollProvider</code> to disable automatic scrolling whenever $location.hash() changes.</p></section>	https://docs.angularjs.org/api/ng/provider/$anchorScrollProvider
$animate	A			service in module ng							<section class="prog__container"><p>The $animate service exposes a series of DOM utility methods that provide support for animation hooks. The default behavior is the application of DOM operations, however, when an animation is detected (and animations are enabled), $animate will do the heavy lifting to ensure that animation runs with the triggered DOM operation.</p></section>	https://docs.angularjs.org/api/ng/service/$animate
$animate css	R	$animateCss										
$animate provider	R	$animateProvider										
$animateCss	A			service in module ng							<section class="prog__container"><p>This is the core version of <code>$animateCss</code>. By default, only when the <code>ngAnimate</code> is included, then the <code>$animateCss</code> service will actually perform animations.</p></section>	https://docs.angularjs.org/api/ng/service/$animateCss
$animateProvider	A			provider in module ng							<section class="prog__container"><p>Default implementation of $animate that doesn&apos;t perform any animations, instead just synchronously performs DOM updates and resolves the returned runner promise.</p></section>	https://docs.angularjs.org/api/ng/provider/$animateProvider
$aria provider	R	$ariaProvider										
$ariaProvider	A			provider in module ngAria							<section class="prog__container"><p>Used for configuring the ARIA attributes injected and managed by ngAria.</p></section>	https://docs.angularjs.org/api/ngAria/provider/$ariaProvider
$cache factory	R	$cacheFactory										
$cache factory Cache	R	$cacheFactory.Cache										
$cacheFactory	A			service in module ng							<section class="prog__container"><p>Factory that constructs Cache objects and gives access to them.</p><h2>Usage</h2><pre><code>$cacheFactory(cacheId, [options]);</code></pre></section>	https://docs.angularjs.org/api/ng/service/$cacheFactory
$cacheFactory Cache	R	$cacheFactory.Cache										
$cacheFactory.Cache	A			type in module ng							<section class="prog__container"><p>A cache object used to store and retrieve data, primarily used by $http and the script directive to cache templates and other data.</p></section>	https://docs.angularjs.org/api/ng/type/$cacheFactory.Cache
$compile	A			service in module ng							<section class="prog__container"><p>Compiles an HTML string or DOM into a template and produces a template function, which can then be used to link scope and the template together.</p><h2>Usage</h2><pre><code>$compile(element, transclude, maxPriority);</code></pre></section>	https://docs.angularjs.org/api/ng/service/$compile
$compile directive Attributes	R	$compile.directive.Attributes										
$compile provider	R	$compileProvider										
$compile.directive.Attributes	A			type in module ng							<section class="prog__container"><p>A shared object between directive compile / linking functions which contains normalized DOM element attributes. The values reflect current binding state <code>{{ }}</code>. The normalization is needed since all of these are treated as equivalent in AngularJS:</p></section>	https://docs.angularjs.org/api/ng/type/$compile.directive.Attributes
$component controller	R	$componentController										
$componentController	A			service in module ngMock							<section class="prog__container"><p>A service that can be used to create instances of component controllers. Useful for unit-testing.</p><h2>Usage</h2><pre><code>$componentController(componentName, locals, [bindings], [ident]);</code></pre></section>	https://docs.angularjs.org/api/ngMock/service/$componentController
$controller	A			service in module ng							<section class="prog__container"><p><code>$controller</code> service is responsible for instantiating controllers.</p><h2>Usage</h2><pre><code>$controller(constructor, locals);</code></pre></section>	https://docs.angularjs.org/api/ng/service/$controller
$controller provider	R	$controllerProvider										
$controllerProvider	A			provider in module ng							<section class="prog__container"><p>The $controller service is used by AngularJS to create new controllers.</p></section>	https://docs.angularjs.org/api/ng/provider/$controllerProvider
$cookie store	R	$cookieStore										
$cookieStore	A			service in module ngCookies							<section class="prog__container"><p>Provides a key-value (string-object) storage, that is backed by session cookies. Objects put or retrieved from this storage are automatically serialized or deserialized by AngularJS&apos;s <code>toJson</code>/<code>fromJson</code>.</p></section>	https://docs.angularjs.org/api/ngCookies/service/$cookieStore
$cookies	A			service in module ngCookies							<section class="prog__container"><p>Provides read/write access to browser&apos;s cookies.</p></section>	https://docs.angularjs.org/api/ngCookies/service/$cookies
$cookies provider	R	$cookiesProvider										
$cookiesProvider	A			provider in module ngCookies							<section class="prog__container"><p>Use <code>$cookiesProvider</code> to change the default behavior of the $cookies service.</p></section>	https://docs.angularjs.org/api/ngCookies/provider/$cookiesProvider
$document	A			service in module ng							<section class="prog__container"><p>A jQuery or jqLite wrapper for the browser&apos;s <code>window.document</code> object.</p></section>	https://docs.angularjs.org/api/ng/service/$document
$exception handler	R	$exceptionHandler										
$exception handler provider	R	$exceptionHandlerProvider										
$exceptionHandler	A			service in module ng							<section class="prog__container"><p>Any uncaught exception in AngularJS expressions is delegated to this service. The default implementation simply delegates to <code>$log.error</code> which logs it into the browser console.</p><h2>Usage</h2><pre><code>$exceptionHandler(exception, [cause]);</code></pre></section>	https://docs.angularjs.org/api/ng/service/$exceptionHandler
$exceptionHandlerProvider	A			provider in module ngMock							<section class="prog__container"><p>Configures the mock implementation of $exceptionHandler to rethrow or to log errors passed to the <code>$exceptionHandler</code>.</p></section>	https://docs.angularjs.org/api/ngMock/provider/$exceptionHandlerProvider
$filter	A			service in module ng							<section class="prog__container"><p>Filters are used for formatting data displayed to the user.</p><h2>Usage</h2><pre><code>$filter(name);</code></pre></section>	https://docs.angularjs.org/api/ng/service/$filter
$filter provider	R	$filterProvider										
$filterProvider	A			provider in module ng							<section class="prog__container"><p>Filters are just functions which transform input to an output. However filters need to be Dependency Injected. To achieve this a filter definition consists of a factory function which is annotated with dependencies and is responsible for creating a filter function.</p></section>	https://docs.angularjs.org/api/ng/provider/$filterProvider
$http	A			service in module ng							<section class="prog__container"><p>The <code>$http</code> service is a core AngularJS service that facilitates communication with the remote HTTP servers via the browser&apos;s XMLHttpRequest object or via JSONP.</p><h2>Usage</h2><pre><code>$http(config);</code></pre></section>	https://docs.angularjs.org/api/ng/service/$http
$http backend	R	$httpBackend										
$http param serializer	R	$httpParamSerializer										
$http param serializer jqlike	R	$httpParamSerializerJQLike										
$http provider	R	$httpProvider										
$httpBackend	A			service in module ng							<section class="prog__container"><p>HTTP backend used by the service that delegates to XMLHttpRequest object or JSONP and deals with browser incompatibilities.</p></section>	https://docs.angularjs.org/api/ng/service/$httpBackend
$httpParamSerializer	A			service in module ng							<section class="prog__container"><p>Default $http params serializer that converts objects to strings according to the following rules:</p></section>	https://docs.angularjs.org/api/ng/service/$httpParamSerializer
$httpParamSerializerJQLike	A			service in module ng							<section class="prog__container"><p>Alternative $http params serializer that follows jQuery&apos;s param() method logic. The serializer will also sort the params alphabetically.</p></section>	https://docs.angularjs.org/api/ng/service/$httpParamSerializerJQLike
$httpProvider	A			provider in module ng							<section class="prog__container"><p>Use <code>$httpProvider</code> to change the default behavior of the $http service.</p></section>	https://docs.angularjs.org/api/ng/provider/$httpProvider
$injector	A			service in module auto							<section class="prog__container"><p><code>$injector</code> is used to retrieve object instances as defined by provider, instantiate types, invoke methods, and load modules.</p></section>	https://docs.angularjs.org/api/auto/service/$injector
$interpolate	A			service in module ng							<section class="prog__container"><p>Compiles a string with markup into an interpolation function. This service is used by the HTML $compile service for data binding. See $interpolateProvider for configuring the interpolation markup.</p><h2>Usage</h2><pre><code>$interpolate(text, [mustHaveExpression], [trustedContext], [allOrNothing]);</code></pre></section>	https://docs.angularjs.org/api/ng/service/$interpolate
$interpolate provider	R	$interpolateProvider										
$interpolateProvider	A			provider in module ng							<section class="prog__container"><p>Used for configuring the interpolation markup. Defaults to <code>{{</code> and <code>}}</code>.</p></section>	https://docs.angularjs.org/api/ng/provider/$interpolateProvider
$interval	A			service in module ng							<section class="prog__container"><p>AngularJS&apos;s wrapper for <code>window.setInterval</code>. The <code>fn</code> function is executed every <code>delay</code> milliseconds.</p><h2>Usage</h2><pre><code>$interval(fn, delay, [count], [invokeApply], [Pass]);</code></pre></section>	https://docs.angularjs.org/api/ng/service/$interval
$jsonp callbacks	R	$jsonpCallbacks										
$jsonpCallbacks	A			service in module ng							<section class="prog__container"><p>This service handles the lifecycle of callbacks to handle JSONP requests. Override this service if you wish to customise where the callbacks are stored and how they vary compared to the requested url.</p></section>	https://docs.angularjs.org/api/ng/service/$jsonpCallbacks
$locale	A			service in module ng							<section class="prog__container"><p>$locale service provides localization rules for various AngularJS components. As of right now the only public api is:</p></section>	https://docs.angularjs.org/api/ng/service/$locale
$location	A			service in module ng							<section class="prog__container"><p>The $location service parses the URL in the browser address bar (based on the window.location) and makes the URL available to your application. Changes to the URL in the address bar are reflected into $location service and changes to $location are reflected into the browser address bar.</p></section>	https://docs.angularjs.org/api/ng/service/$location
$location provider	R	$locationProvider										
$locationProvider	A			provider in module ng							<section class="prog__container"><p>Use the <code>$locationProvider</code> to configure how the application deep linking paths are stored.</p></section>	https://docs.angularjs.org/api/ng/provider/$locationProvider
$log	A			service in module ng							<section class="prog__container"><p>Simple service for logging. Default implementation safely writes the message into the browser&apos;s console (if present).</p></section>	https://docs.angularjs.org/api/ng/service/$log
$log provider	R	$logProvider										
$logProvider	A			provider in module ng							<section class="prog__container"><p>Use the <code>$logProvider</code> to configure how the application logs messages</p></section>	https://docs.angularjs.org/api/ng/provider/$logProvider
$parse	A			service in module ng							<section class="prog__container"><p>Converts AngularJS expression into a function.</p><h2>Usage</h2><pre><code>$parse(expression);</code></pre></section>	https://docs.angularjs.org/api/ng/service/$parse
$parse provider	R	$parseProvider										
$parseProvider	A			provider in module ng							<section class="prog__container"><p><code>$parseProvider</code> can be used for configuring the default behavior of the $parse service.</p></section>	https://docs.angularjs.org/api/ng/provider/$parseProvider
$provide	A			service in module auto							<section class="prog__container"><p>The $provide service has a number of methods for registering components with the $injector. Many of these functions are also exposed on angular.Module.</p></section>	https://docs.angularjs.org/api/auto/service/$provide
$q	A			service in module ng							<section class="prog__container"><p>A service that helps you run functions asynchronously, and use their return values (or exceptions) when they are done processing.</p><h2>Usage</h2><pre><code>$q(resolver);</code></pre></section>	https://docs.angularjs.org/api/ng/service/$q
$q provider	R	$qProvider										
$resource	A			service in module ngResource							<section class="prog__container"><p>A factory which creates a resource object that lets you interact with RESTful server-side data sources.</p><h2>Usage</h2><pre><code>$resource(url, [paramDefaults], [actions], options);</code></pre></section>	https://docs.angularjs.org/api/ngResource/service/$resource
$resource provider	R	$resourceProvider										
$resourceProvider	A			provider in module ngResource							<section class="prog__container"><p>Use <code>$resourceProvider</code> to change the default behavior of the $resource service.</p></section>	https://docs.angularjs.org/api/ngResource/provider/$resourceProvider
$root element	R	$rootElement										
$root router	R	$rootRouter										
$root scope	R	$rootScope										
$root scope Scope	R	$rootScope.Scope										
$root scope provider	R	$rootScopeProvider										
$rootElement	A			service in module ng							<section class="prog__container"><p>The root element of AngularJS application. This is either the element where ngApp was declared or the element passed into angular.bootstrap. The element represents the root element of application. It is also the location where the application&apos;s $injector service gets published, and can be retrieved using <code>$rootElement.injector()</code>.</p></section>	https://docs.angularjs.org/api/ng/service/$rootElement
$rootRouter	A			service in module ngComponentRouter							<section class="prog__container"><p>The singleton instance of the RootRouter type, which is associated with the top level $routerRootComponent.</p></section>	https://docs.angularjs.org/api/ngComponentRouter/service/$rootRouter
$rootScope	A			service in module ng							<section class="prog__container"><p>Every application has a single root scope. All other scopes are descendant scopes of the root scope. Scopes provide separation between the model and the view, via a mechanism for watching the model for changes. They also provide event emission/broadcast and subscription facility. See the developer guide on scopes.</p></section>	https://docs.angularjs.org/api/ng/service/$rootScope
$rootScope Scope	R	$rootScope.Scope										
$rootScope.Scope	A			type in module ng							<section class="prog__container"><p>A root scope can be retrieved using the $rootScope key from the $injector. Child scopes are created using the $new() method. (Most scopes are created automatically when compiled HTML template is executed.) See also the Scopes guide for an in-depth introduction and usage examples.</p><h2>Usage</h2><pre><code>$rootScope.Scope([providers], [instanceCache]);</code></pre></section>	https://docs.angularjs.org/api/ng/type/$rootScope.Scope
$rootScopeProvider	A			provider in module ng							<section class="prog__container"><p>Provider for the $rootScope service.</p></section>	https://docs.angularjs.org/api/ng/provider/$rootScopeProvider
$route	A			service in module ngRoute							<section class="prog__container"><p><code>$route</code> is used for deep-linking URLs to controllers and views (HTML partials). It watches <code>$location.url()</code> and tries to map the path to an existing route definition.</p></section>	https://docs.angularjs.org/api/ngRoute/service/$route
$route params	R	$routeParams										
$route provider	R	$routeProvider										
$routeParams	A			service in module ngRoute							<section class="prog__container"><p>The <code>$routeParams</code> service allows you to retrieve the current set of route parameters.</p></section>	https://docs.angularjs.org/api/ngRoute/service/$routeParams
$routeProvider	A			provider in module ngRoute							<section class="prog__container"><p>Used for configuring routes.</p></section>	https://docs.angularjs.org/api/ngRoute/provider/$routeProvider
$router root component	R	$routerRootComponent										
$routerRootComponent	A			service in module ngComponentRouter							<section class="prog__container"><p>The top level <strong>Routing Component</strong> associated with the $rootRouter.</p></section>	https://docs.angularjs.org/api/ngComponentRouter/service/$routerRootComponent
$sanitize	A			service in module ngSanitize							<section class="prog__container"><p>Sanitizes an html string by stripping all potentially dangerous tokens.</p><h2>Usage</h2><pre><code>$sanitize(html);</code></pre></section>	https://docs.angularjs.org/api/ngSanitize/service/$sanitize
$sanitize provider	R	$sanitizeProvider										
$sanitizeProvider	A			provider in module ngSanitize							<section class="prog__container"><p>Creates and configures $sanitize instance.</p></section>	https://docs.angularjs.org/api/ngSanitize/provider/$sanitizeProvider
$sce	A			service in module ng							<section class="prog__container"><p><code>$sce</code> is a service that provides Strict Contextual Escaping services to AngularJS.</p><h2>Usage</h2><pre><code>$sce();</code></pre></section>	https://docs.angularjs.org/api/ng/service/$sce
$sce delegate	R	$sceDelegate										
$sce delegate provider	R	$sceDelegateProvider										
$sce provider	R	$sceProvider										
$sceDelegate	A			service in module ng							<section class="prog__container"><p><code>$sceDelegate</code> is a service that is used by the <code>$sce</code> service to provide Strict Contextual Escaping (SCE) services to AngularJS.</p><h2>Usage</h2><pre><code>$sceDelegate();</code></pre></section>	https://docs.angularjs.org/api/ng/service/$sceDelegate
$sceDelegateProvider	A			provider in module ng							<section class="prog__container"><p>The <code>$sceDelegateProvider</code> provider allows developers to configure the $sceDelegate service. This allows one to get/set the whitelists and blacklists used to ensure that the URLs used for sourcing AngularJS templates are safe. Refer $sceDelegateProvider.resourceUrlWhitelist and $sceDelegateProvider.resourceUrlBlacklist</p></section>	https://docs.angularjs.org/api/ng/provider/$sceDelegateProvider
$sceProvider	A			provider in module ng							<section class="prog__container"><p>The $sceProvider provider allows developers to configure the $sce service.</p></section>	https://docs.angularjs.org/api/ng/provider/$sceProvider
$swipe	A			service in module ngTouch							<section class="prog__container"><p>The <code>$swipe</code> service is a service that abstracts the messier details of hold-and-drag swipe behavior, to make implementing swipe-related directives more convenient.</p><h2>Usage</h2><pre><code>$swipe</code></pre></section>	https://docs.angularjs.org/api/ngTouch/service/$swipe
$template cache	R	$templateCache										
$template request	R	$templateRequest										
$template request provider	R	$templateRequestProvider										
$templateCache	A			service in module ng							<section class="prog__container"><p>The first time a template is used, it is loaded in the template cache for quick retrieval. You can load templates directly into the cache in a <code>script</code> tag, or by consuming the <code>$templateCache</code> service directly.</p></section>	https://docs.angularjs.org/api/ng/service/$templateCache
$templateRequest	A			service in module ng							<section class="prog__container"><p>The <code>$templateRequest</code> service runs security checks then downloads the provided template using <code>$http</code> and, upon success, stores the contents inside of <code>$templateCache</code>. If the HTTP request fails or the response data of the HTTP request is empty, a <code>$compile</code> error will be thrown (the exception can be thwarted by setting the 2nd parameter of the function to true). Note that the contents of <code>$templateCache</code> are trusted, so the call to <code>$sce.getTrustedUrl(tpl)</code> is omitted when <code>tpl</code> is of type string and <code>$templateCache</code> has the matching entry.</p><h2>Usage</h2><pre><code>$templateRequest(tpl, [ignoreRequestError]);</code></pre></section>	https://docs.angularjs.org/api/ng/service/$templateRequest
$templateRequestProvider	A			provider in module ng							<section class="prog__container"><p>Used to configure the options passed to the $http service when making a template request.</p></section>	https://docs.angularjs.org/api/ng/provider/$templateRequestProvider
$timeout	A			service in module ng							<section class="prog__container"><p>AngularJS&apos;s wrapper for <code>window.setTimeout</code>. The <code>fn</code> function is wrapped into a try/catch block and delegates any exceptions to $exceptionHandler service.</p><h2>Usage</h2><pre><code>$timeout([fn], [delay], [invokeApply], [Pass]);</code></pre></section>	https://docs.angularjs.org/api/ng/service/$timeout
$touch	A			service in module ngTouch							<section class="prog__container"><p>Provides the ngClickOverrideEnabled method.</p></section>	https://docs.angularjs.org/api/ngTouch/service/$touch
$touch provider	R	$touchProvider										
$touchProvider	A			provider in module ngTouch							<section class="prog__container"><p>The <code>$touchProvider</code> allows enabling / disabling ngTouch&apos;s ngClick directive.</p></section>	https://docs.angularjs.org/api/ngTouch/provider/$touchProvider
$window	A			service in module ng							<section class="prog__container"><p>A reference to the browser&apos;s <code>window</code> object. While <code>window</code> is globally available in JavaScript, it causes testability problems, because it is a global variable. In AngularJS we always refer to it through the <code>$window</code> service, so it may be overridden, removed or mocked for testing.</p></section>	https://docs.angularjs.org/api/ng/service/$window
$xhr factory	R	$xhrFactory										
$xhrFactory	A			service in module ng							<section class="prog__container"><p>Factory function used to create XMLHttpRequest objects.</p><h2>Usage</h2><pre><code>$xhrFactory(method, url);</code></pre></section>	https://docs.angularjs.org/api/ng/service/$xhrFactory
Child router	R	ChildRouter										
ChildRouter	A			type in module ngComponentRouter							<section class="prog__container"><p>This type extends the Router.</p></section>	https://docs.angularjs.org/api/ngComponentRouter/type/ChildRouter
Component instruction	R	ComponentInstruction										
ComponentInstruction	A			type in module ngComponentRouter							<section class="prog__container"><p>A <code>ComponentInstruction</code> represents the route state for a single component. An <code>Instruction</code> is composed of a tree of these <code>ComponentInstruction</code>s.</p></section>	https://docs.angularjs.org/api/ngComponentRouter/type/ComponentInstruction
Model options	R	ModelOptions										
ModelOptions	A			type in module ng							<section class="prog__container"><p>A container for the options set by the ngModelOptions directive</p></section>	https://docs.angularjs.org/api/ng/type/ModelOptions
Module	R	angular.Module										
Root router	R	RootRouter										
RootRouter	A			type in module ngComponentRouter							<section class="prog__container"><p>This type extends the Router.</p></section>	https://docs.angularjs.org/api/ngComponentRouter/type/RootRouter
Route definition	R	RouteDefinition										
Route params	R	RouteParams										
RouteDefinition	A			type in module ngComponentRouter							<section class="prog__container"><p>Each item in the <strong>RouteConfig</strong> for a <strong>Routing Component</strong> is an instance of this type. It can have the following properties:</p></section>	https://docs.angularjs.org/api/ngComponentRouter/type/RouteDefinition
RouteParams	A			type in module ngComponentRouter							<section class="prog__container"><p>A map of parameters for a given route, passed as part of the ComponentInstruction to the Lifecycle Hooks, such as <code>$routerOnActivate</code> and <code>$routerOnDeactivate</code>.</p></section>	https://docs.angularjs.org/api/ngComponentRouter/type/RouteParams
Router	A			type in module ngComponentRouter							<section class="prog__container"><p>A <code>Router</code> is responsible for mapping URLs to components.</p></section>	https://docs.angularjs.org/api/ngComponentRouter/type/Router
a	A			directive in module ng							<section class="prog__container"><p>Modifies the default behavior of the html a tag so that the default action is prevented when the href attribute is empty.</p><h2>Usage</h2><ul><li>as element:<pre><code>&lt;a&gt;\n...\n&lt;/a&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/a
anchor scroll	R	$anchorScroll										
anchor scroll provider	R	$anchorScrollProvider										
anchorScroll	R	$anchorScroll										
anchorScrollProvider	R	$anchorScrollProvider										
angular.Module	A			type in module ng							<section class="prog__container"><p>Interface for configuring AngularJS modules.</p></section>	https://docs.angularjs.org/api/ng/type/angular.Module
angular.bind	A			function in module ng							<section class="prog__container"><p>Returns a function which calls function <code>fn</code> bound to <code>self</code> (<code>self</code> becomes the <code>this</code> for <code>fn</code>). You can supply optional <code>args</code> that are prebound to the function. This feature is also known as partial application, as distinguished from function currying.</p><h2>Usage</h2><pre><code>angular.bind(self, fn, args);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.bind
angular.bootstrap	A			function in module ng							<section class="prog__container"><p>Use this function to manually start up AngularJS application.</p><h2>Usage</h2><pre><code>angular.bootstrap(element, [modules], [config]);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.bootstrap
angular.copy	A			function in module ng							<section class="prog__container"><p>Creates a deep copy of <code>source</code>, which should be an object or an array.</p><h2>Usage</h2><pre><code>angular.copy(source, [destination]);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.copy
angular.element	A			function in module ng							<section class="prog__container"><p>Wraps a raw DOM element or HTML string as a jQuery element.</p><h2>Usage</h2><pre><code>angular.element(element);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.element
angular.equals	A			function in module ng							<section class="prog__container"><p>Determines if two objects or two values are equivalent. Supports value types, regular expressions, arrays and objects.</p><h2>Usage</h2><pre><code>angular.equals(o1, o2);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.equals
angular.extend	A			function in module ng							<section class="prog__container"><p>Extends the destination object <code>dst</code> by copying own enumerable properties from the <code>src</code> object(s) to <code>dst</code>. You can specify multiple <code>src</code> objects. If you want to preserve original objects, you can do so by passing an empty object as the target: <code>var object = angular.extend({}, object1, object2)</code>.</p><h2>Usage</h2><pre><code>angular.extend(dst, src);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.extend
angular.forEach	A			function in module ng							<section class="prog__container"><p>Invokes the <code>iterator</code> function once for each item in <code>obj</code> collection, which can be either an object or an array. The <code>iterator</code> function is invoked with <code>iterator(value, key, obj)</code>, where <code>value</code> is the value of an object property or an array element, <code>key</code> is the object property key or array element index and obj is the <code>obj</code> itself. Specifying a <code>context</code> for the function is optional.</p><h2>Usage</h2><pre><code>angular.forEach(obj, iterator, [context]);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.forEach
angular.fromJson	A			function in module ng							<section class="prog__container"><p>Deserializes a JSON string.</p><h2>Usage</h2><pre><code>angular.fromJson(json);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.fromJson
angular.identity	A			function in module ng							<section class="prog__container"><p>A function that returns its first argument. This function is useful when writing code in the functional style.</p><h2>Usage</h2><pre><code>angular.identity(value);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.identity
angular.injector	A			function in module ng							<section class="prog__container"><p>Creates an injector object that can be used for retrieving services as well as for dependency injection (see dependency injection).</p><h2>Usage</h2><pre><code>angular.injector(modules, [strictDi]);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.injector
angular.isArray	A			function in module ng							<section class="prog__container"><p>Determines if a reference is an <code>Array</code>. Alias of Array.isArray.</p><h2>Usage</h2><pre><code>angular.isArray(value);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.isArray
angular.isDate	A			function in module ng							<section class="prog__container"><p>Determines if a value is a date.</p><h2>Usage</h2><pre><code>angular.isDate(value);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.isDate
angular.isDefined	A			function in module ng							<section class="prog__container"><p>Determines if a reference is defined.</p><h2>Usage</h2><pre><code>angular.isDefined(value);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.isDefined
angular.isElement	A			function in module ng							<section class="prog__container"><p>Determines if a reference is a DOM element (or wrapped jQuery element).</p><h2>Usage</h2><pre><code>angular.isElement(value);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.isElement
angular.isFunction	A			function in module ng							<section class="prog__container"><p>Determines if a reference is a <code>Function</code>.</p><h2>Usage</h2><pre><code>angular.isFunction(value);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.isFunction
angular.isNumber	A			function in module ng							<section class="prog__container"><p>Determines if a reference is a <code>Number</code>.</p><h2>Usage</h2><pre><code>angular.isNumber(value);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.isNumber
angular.isObject	A			function in module ng							<section class="prog__container"><p>Determines if a reference is an <code>Object</code>. Unlike <code>typeof</code> in JavaScript, <code>null</code>s are not considered to be objects. Note that JavaScript arrays are objects.</p><h2>Usage</h2><pre><code>angular.isObject(value);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.isObject
angular.isString	A			function in module ng							<section class="prog__container"><p>Determines if a reference is a <code>String</code>.</p><h2>Usage</h2><pre><code>angular.isString(value);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.isString
angular.isUndefined	A			function in module ng							<section class="prog__container"><p>Determines if a reference is undefined.</p><h2>Usage</h2><pre><code>angular.isUndefined(value);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.isUndefined
angular.lowercase	A			function in module ng							<section class="prog__container"><p>Converts the specified string to lowercase.</p><h2>Usage</h2><pre><code>angular.lowercase(string);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.lowercase
angular.merge	A			function in module ng							<section class="prog__container"><p>Deeply extends the destination object <code>dst</code> by copying own enumerable properties from the <code>src</code> object(s) to <code>dst</code>. You can specify multiple <code>src</code> objects. If you want to preserve original objects, you can do so by passing an empty object as the target: <code>var object = angular.merge({}, object1, object2)</code>.</p><h2>Usage</h2><pre><code>angular.merge(dst, src);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.merge
angular.mock	A			object in module ngMock							<section class="prog__container"><p>Namespace from &apos;angular-mocks.js&apos; which contains testing related code.</p></section>	https://docs.angularjs.org/api/ngMock/object/angular.mock
angular.mock.TzDate	A			type in module ngMock							<section class="prog__container"><p><em>NOTE</em>: this is not an injectable instance, just a globally available mock class of <code>Date</code>.</p><h2>Usage</h2><pre><code>angular.mock.TzDate(offset, timestamp);</code></pre></section>	https://docs.angularjs.org/api/ngMock/type/angular.mock.TzDate
angular.mock.dump	A			function in module ngMock							<section class="prog__container"><p><em>NOTE</em>: This is not an injectable instance, just a globally available function.</p><h2>Usage</h2><pre><code>angular.mock.dump(object);</code></pre></section>	https://docs.angularjs.org/api/ngMock/function/angular.mock.dump
angular.mock.inject	A			function in module ngMock							<section class="prog__container"><p><em>NOTE</em>: This function is also published on window for easy access.<br> <em>NOTE</em>: This function is declared ONLY WHEN running tests with jasmine or mocha</p><h2>Usage</h2><pre><code>angular.mock.inject(fns);</code></pre></section>	https://docs.angularjs.org/api/ngMock/function/angular.mock.inject
angular.mock.module	A			function in module ngMock							<section class="prog__container"><p><em>NOTE</em>: This function is also published on window for easy access.<br> <em>NOTE</em>: This function is declared ONLY WHEN running tests with jasmine or mocha</p><h2>Usage</h2><pre><code>angular.mock.module(fns);</code></pre></section>	https://docs.angularjs.org/api/ngMock/function/angular.mock.module
angular.mock.module.sharedInjector	A			function in module ngMock							<section class="prog__container"><p><em>NOTE</em>: This function is declared ONLY WHEN running tests with jasmine or mocha</p></section>	https://docs.angularjs.org/api/ngMock/function/angular.mock.module.sharedInjector
angular.module	A			function in module ng							<section class="prog__container"><p>The <code>angular.module</code> is a global place for creating, registering and retrieving AngularJS modules. All modules (AngularJS core or 3rd party) that should be available to an application must be registered using this mechanism.</p><h2>Usage</h2><pre><code>angular.module(name, [requires], [configFn]);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.module
angular.noop	A			function in module ng							<section class="prog__container"><p>A function that performs no operations. This function can be useful when writing code in the functional style.</p><h2>Usage</h2><pre><code>angular.noop();</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.noop
angular.reloadWithDebugInfo	A			function in module ng							<section class="prog__container"><p>Use this function to reload the current application with debug information turned on. This takes precedence over a call to <code>$compileProvider.debugInfoEnabled(false)</code>.</p></section>	https://docs.angularjs.org/api/ng/function/angular.reloadWithDebugInfo
angular.toJson	A			function in module ng							<section class="prog__container"><p>Serializes input into a JSON-formatted string. Properties with leading $$ characters will be stripped since AngularJS uses this notation internally.</p><h2>Usage</h2><pre><code>angular.toJson(obj, pretty);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.toJson
angular.uppercase	A			function in module ng							<section class="prog__container"><p>Converts the specified string to uppercase.</p><h2>Usage</h2><pre><code>angular.uppercase(string);</code></pre></section>	https://docs.angularjs.org/api/ng/function/angular.uppercase
angular.version	A			object in module ng							<section class="prog__container"><p>An object that contains information about the current AngularJS version.</p></section>	https://docs.angularjs.org/api/ng/object/angular.version
animate	R	$animate										
animate css	R	$animateCss										
animate provider	R	$animateProvider										
animateCss	R	$animateCss										
animateProvider	R	$animateProvider										
aria	R	$aria										
aria provider	R	$ariaProvider										
ariaProvider	R	$ariaProvider										
bind	R	angular.bind										
bootstrap	R	angular.bootstrap										
cache factory	R	$cacheFactory										
cache factory Cache	R	$cacheFactory.Cache										
cacheFactory	R	$cacheFactory										
cacheFactory.Cache	R	$cacheFactory.Cache										
compile	R	$compile										
compile directive Attributes	R	$compile.directive.Attributes										
compile provider	R	$compileProvider										
compile.directive.Attributes	R	$compile.directive.Attributes										
compileProvider	R	$compileProvider										
component controller	R	$componentController										
componentController	R	$componentController										
controller	R	$controller										
controller provider	R	$controllerProvider										
controllerProvider	R	$controllerProvider										
cookie store	R	$cookieStore										
cookieStore	R	$cookieStore										
cookies	R	$cookies										
cookies provider	R	$cookiesProvider										
cookiesProvider	R	$cookiesProvider										
copy	R	angular.copy										
currency	A			filter in module ng							<section class="prog__container"><p>Formats a number as a currency (ie $1,234.56). When no currency symbol is provided, default symbol for current locale is used.</p><h2>Usage</h2><h3>In HTML Template Binding</h3><pre><code>{{ currency_expression | currency : symbol : fractionSize}}</code></pre><h3>In JavaScript</h3><pre><code>$filter(&apos;currency&apos;)(amount, symbol, fractionSize)</code></pre></section>	https://docs.angularjs.org/api/ng/filter/currency
date	A			filter in module ng							<section class="prog__container"><p>Formats <code>date</code> to a string based on the requested <code>format</code>.</p><h2>Usage</h2><h3>In HTML Template Binding</h3><pre><code>{{ date_expression | date : format : timezone}}</code></pre><h3>In JavaScript</h3><pre><code>$filter(&apos;date&apos;)(date, format, timezone)</code></pre></section>	https://docs.angularjs.org/api/ng/filter/date
document	R	$document										
element	R	angular.element										
equals	R	angular.equals										
exception handler	R	$exceptionHandler										
exception handler provider	R	$exceptionHandlerProvider										
exceptionHandler	R	$exceptionHandler										
exceptionHandlerProvider	R	$exceptionHandlerProvider										
extend	R	angular.extend										
filter	A			filter in module ng							<section class="prog__container"><p>Selects a subset of items from <code>array</code> and returns it as a new array.</p><h2>Usage</h2><h3>In HTML Template Binding</h3><pre><code>{{ filter_expression | filter : expression : comparator : anyPropertyKey}}</code></pre><h3>In JavaScript</h3><pre><code>$filter(&apos;filter&apos;)(array, expression, comparator, anyPropertyKey)</code></pre></section>	https://docs.angularjs.org/api/ng/filter/filter
filter provider	R	$filterProvider										
filterProvider	R	$filterProvider										
for each	R	angular.forEach										
forEach	R	angular.forEach										
form	A			directive in module ng							<section class="prog__container"><p>Directive that instantiates FormController.</p><h2>Usage</h2><ul><li>as element:<pre><code>&lt;form\n  [name=&quot;string&quot;]&gt;\n...\n&lt;/form&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/form
form Form controller	R	form.FormController										
form FormController	R	form.FormController										
form.FormController	A			type in module ng							<section class="prog__container"><p><code>FormController</code> keeps track of all its controls and nested forms as well as the state of them, such as being valid/invalid or dirty/pristine.</p></section>	https://docs.angularjs.org/api/ng/type/form.FormController
from json	R	angular.fromJson										
fromJson	R	angular.fromJson										
http	R	$http										
http backend	R	$httpBackend										
http param serializer	R	$httpParamSerializer										
http param serializer jqlike	R	$httpParamSerializerJQLike										
http provider	R	$httpProvider										
httpBackend	R	$httpBackend										
httpParamSerializer	R	$httpParamSerializer										
httpParamSerializerJQLike	R	$httpParamSerializerJQLike										
httpProvider	R	$httpProvider										
identity	R	angular.identity										
injector	R	angular.injector										
input	A			directive in module ng							<section class="prog__container"><p>HTML input element control. When used together with ngModel, it provides data-binding, input state control, and validation. Input control follows HTML5 input types and polyfills the HTML5 validation behavior for older browsers.</p><h2>Usage</h2><ul><li>as element:<pre><code>&lt;input\n  ng-model=&quot;string&quot;\n  [name=&quot;string&quot;]\n  [required=&quot;string&quot;]\n  [ng-required=&quot;boolean&quot;]\n  [ng-minlength=&quot;number&quot;]\n  [ng-maxlength=&quot;number&quot;]\n  [ng-pattern=&quot;string&quot;]\n  [ng-change=&quot;string&quot;]\n  [ng-trim=&quot;boolean&quot;]&gt;\n...\n&lt;/input&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/input
interpolate	R	$interpolate										
interpolate provider	R	$interpolateProvider										
interpolateProvider	R	$interpolateProvider										
interval	R	$interval										
is array	R	angular.isArray										
is date	R	angular.isDate										
is defined	R	angular.isDefined										
is element	R	angular.isElement										
is function	R	angular.isFunction										
is number	R	angular.isNumber										
is object	R	angular.isObject										
is string	R	angular.isString										
is undefined	R	angular.isUndefined										
isArray	R	angular.isArray										
isDate	R	angular.isDate										
isDefined	R	angular.isDefined										
isElement	R	angular.isElement										
isFunction	R	angular.isFunction										
isNumber	R	angular.isNumber										
isObject	R	angular.isObject										
isString	R	angular.isString										
isUndefined	R	angular.isUndefined										
json	A			filter in module ng							<section class="prog__container"><p>Allows you to convert a JavaScript object into JSON string.</p><h2>Usage</h2><h3>In HTML Template Binding</h3><pre><code>{{ json_expression | json : spacing}}</code></pre><h3>In JavaScript</h3><pre><code>$filter(&apos;json&apos;)(object, spacing)</code></pre></section>	https://docs.angularjs.org/api/ng/filter/json
jsonp callbacks	R	$jsonpCallbacks										
jsonpCallbacks	R	$jsonpCallbacks										
limit to	R	limitTo										
limitTo	A			filter in module ng							<section class="prog__container"><p>Creates a new array or string containing only a specified number of elements. The elements are taken from either the beginning or the end of the source array, string or number, as specified by the value and sign (positive or negative) of <code>limit</code>. Other array-like objects are also supported (e.g. array subclasses, NodeLists, jqLite/jQuery collections etc). If a number is used as input, it is converted to a string.</p><h2>Usage</h2><h3>In HTML Template Binding</h3><pre><code>{{ limitTo_expression | limitTo : limit : begin}}</code></pre><h3>In JavaScript</h3><pre><code>$filter(&apos;limitTo&apos;)(input, limit, begin)</code></pre></section>	https://docs.angularjs.org/api/ng/filter/limitTo
linky	A			filter in module ngSanitize							<section class="prog__container"><p>Finds links in text input and turns them into html links. Supports <code>http/https/ftp/mailto</code> and plain email address links.</p><h2>Usage</h2><h3>In HTML Template Binding</h3><code>&lt;span ng-bind-html=&quot;linky_expression | linky&quot;&gt;&lt;/span&gt;</code><h3>In JavaScript</h3><pre><code>$filter(&apos;linky&apos;)(text, target, attributes)</code></pre></section>	https://docs.angularjs.org/api/ngSanitize/filter/linky
locale	R	$locale										
location	R	$location										
location provider	R	$locationProvider										
locationProvider	R	$locationProvider										
log	R	$log										
log provider	R	$logProvider										
logProvider	R	$logProvider										
lowercase	R	angular.lowercase										
merge	R	angular.merge										
mock	R	angular.mock										
mock Tz date	R	angular.mock.TzDate										
mock TzDate	R	angular.mock.TzDate										
mock dump	R	angular.mock.dump										
mock inject	R	angular.mock.inject										
mock module	R	angular.mock.module										
mock module shared injector	R	angular.mock.module.sharedInjector										
mock module sharedInjector	R	angular.mock.module.sharedInjector										
module	R	angular.module										
ng animate	R	ngAnimate										
ng animate children	R	ngAnimateChildren										
ng animate swap	R	ngAnimateSwap										
ng app	R	ngApp										
ng aria	R	ngAria										
ng bind	R	ngBind										
ng bind html	R	ngBindHtml										
ng bind template	R	ngBindTemplate										
ng blur	R	ngBlur										
ng change	R	ngChange										
ng checked	R	ngChecked										
ng class	R	ngClass										
ng class even	R	ngClassEven										
ng class odd	R	ngClassOdd										
ng click	R	ngClick										
ng cloak	R	ngCloak										
ng component router	R	ngComponentRouter										
ng controller	R	ngController										
ng cookies	R	ngCookies										
ng copy	R	ngCopy										
ng csp	R	ngCsp										
ng cut	R	ngCut										
ng dblclick	R	ngDblclick										
ng disabled	R	ngDisabled										
ng focus	R	ngFocus										
ng form	R	ngForm										
ng hide	R	ngHide										
ng href	R	ngHref										
ng if	R	ngIf										
ng include	R	ngInclude										
ng init	R	ngInit										
ng jq	R	ngJq										
ng keydown	R	ngKeydown										
ng keypress	R	ngKeypress										
ng keyup	R	ngKeyup										
ng list	R	ngList										
ng lowercase	A			filter in module ng							<section class="prog__container"><p>Converts string to lowercase.</p><h2>Usage</h2><h3>In HTML Template Binding</h3><pre><code>{{ lowercase_expression | lowercase}}</code></pre><h3>In JavaScript</h3><pre><code>$filter(&apos;lowercase&apos;)()</code></pre></section>	https://docs.angularjs.org/api/ng/filter/lowercase
ng maxlength	R	ngMaxlength										
ng message	R	ngMessage										
ng message exp	R	ngMessageExp										
ng message format	R	ngMessageFormat										
ng messages	R	ngMessages										
ng messages include	R	ngMessagesInclude										
ng minlength	R	ngMinlength										
ng mock	R	ngMock										
ng mock e2 e	R	ngMockE2E										
ng model	R	ngModel										
ng model Ng model controller	R	ngModel.NgModelController										
ng model options	R	ngModelOptions										
ng mousedown	R	ngMousedown										
ng mouseenter	R	ngMouseenter										
ng mouseleave	R	ngMouseleave										
ng mousemove	R	ngMousemove										
ng mouseover	R	ngMouseover										
ng mouseup	R	ngMouseup										
ng non bindable	R	ngNonBindable										
ng open	R	ngOpen										
ng options	R	ngOptions										
ng outlet	R	ngOutlet										
ng parse ext	R	ngParseExt										
ng paste	R	ngPaste										
ng pattern	R	ngPattern										
ng pluralize	R	ngPluralize										
ng readonly	R	ngReadonly										
ng repeat	R	ngRepeat										
ng required	R	ngRequired										
ng resource	R	ngResource										
ng route	R	ngRoute										
ng sanitize	R	ngSanitize										
ng selected	R	ngSelected										
ng show	R	ngShow										
ng src	R	ngSrc										
ng srcset	R	ngSrcset										
ng style	R	ngStyle										
ng submit	R	ngSubmit										
ng swipe left	R	ngSwipeLeft										
ng swipe right	R	ngSwipeRight										
ng switch	R	ngSwitch										
ng touch	R	ngTouch										
ng transclude	R	ngTransclude										
ng uppercase	A			filter in module ng							<section class="prog__container"><p>Converts string to uppercase.</p><h2>Usage</h2><h3>In HTML Template Binding</h3><pre><code>{{ uppercase_expression | uppercase}}</code></pre><h3>In JavaScript</h3><pre><code>$filter(&apos;uppercase&apos;)()</code></pre></section>	https://docs.angularjs.org/api/ng/filter/uppercase
ng value	R	ngValue										
ng view	R	ngView										
ng-animate-children	R	ngAnimateChildren										
ng-animate-swap	R	ngAnimateSwap										
ng-app	R	ngApp										
ng-bind	R	ngBind										
ng-bind-html	R	ngBindHtml										
ng-bind-template	R	ngBindTemplate										
ng-blur	R	ngBlur										
ng-change	R	ngChange										
ng-checked	R	ngChecked										
ng-class	R	ngClass										
ng-class-even	R	ngClassEven										
ng-class-odd	R	ngClassOdd										
ng-click	R	ngClick										
ng-cloak	R	ngCloak										
ng-controller	R	ngController										
ng-copy	R	ngCopy										
ng-csp	R	ngCsp										
ng-cut	R	ngCut										
ng-dblclick	R	ngDblclick										
ng-disabled	R	ngDisabled										
ng-focus	R	ngFocus										
ng-form	R	ngForm										
ng-hide	R	ngHide										
ng-href	R	ngHref										
ng-if	R	ngIf										
ng-include	R	ngInclude										
ng-init	R	ngInit										
ng-jq	R	ngJq										
ng-keydown	R	ngKeydown										
ng-keypress	R	ngKeypress										
ng-keyup	R	ngKeyup										
ng-list	R	ngList										
ng-maxlength	R	ngMaxlength										
ng-message	R	ngMessage										
ng-message-exp	R	ngMessageExp										
ng-messages-include	R	ngMessagesInclude										
ng-minlength	R	ngMinlength										
ng-model	R	ngModel										
ng-model-options	R	ngModelOptions										
ng-mousedown	R	ngMousedown										
ng-mouseenter	R	ngMouseenter										
ng-mouseleave	R	ngMouseleave										
ng-mousemove	R	ngMousemove										
ng-mouseover	R	ngMouseover										
ng-mouseup	R	ngMouseup										
ng-non-bindable	R	ngNonBindable										
ng-open	R	ngOpen										
ng-options	R	ngOptions										
ng-outlet	R	ngOutlet										
ng-paste	R	ngPaste										
ng-pattern	R	ngPattern										
ng-pluralize	R	ngPluralize										
ng-readonly	R	ngReadonly										
ng-repeat	R	ngRepeat										
ng-required	R	ngRequired										
ng-selected	R	ngSelected										
ng-show	R	ngShow										
ng-src	R	ngSrc										
ng-srcset	R	ngSrcset										
ng-style	R	ngStyle										
ng-submit	R	ngSubmit										
ng-swipe-left	R	ngSwipeLeft										
ng-swipe-right	R	ngSwipeRight										
ng-switch	R	ngSwitch										
ng-transclude	R	ngTransclude										
ng-value	R	ngValue										
ng-view	R	ngView										
ngAnimateChildren	A			directive in module ngAnimate							<section class="prog__container"><p>ngAnimateChildren allows you to specify that children of this element should animate even if any of the children&apos;s parents are currently animating. By default, when an element has an active <code>enter</code>, <code>leave</code>, or <code>move</code> (structural) animation, child elements that also have an active structural animation are not animated.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-animate-children\n  ng-animate-children=&quot;string&quot;&gt;\n...\n&lt;/ng-animate-children&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-animate-children=&quot;string&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ngAnimate/directive/ngAnimateChildren
ngAnimateSwap	A			directive in module ngAnimate							<section class="prog__container"><p>ngAnimateSwap is a animation-oriented directive that allows for the container to be removed and entered in whenever the associated expression changes. A common usecase for this directive is a rotating banner or slider component which contains one image being present at a time. When the active image changes then the old image will perform a <code>leave</code> animation and the new element will be inserted via an <code>enter</code> animation.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;ANY&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ngAnimate/directive/ngAnimateSwap
ngApp	A			directive in module ng							<section class="prog__container"><p>Use this directive to <strong>auto-bootstrap</strong> an AngularJS application. The <code>ngApp</code> directive designates the <strong>root element</strong> of the application and is typically placed near the root element of the page - e.g. on the <code>&lt;body&gt;</code> or <code>&lt;html&gt;</code> tags.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-app\n  ng-app=&quot;angular.Module&quot;\n  [ng-strict-di=&quot;boolean&quot;]&gt;\n...\n&lt;/ng-app&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-app=&quot;angular.Module&quot;\n  [ng-strict-di=&quot;boolean&quot;]&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngApp
ngBind	A			directive in module ng							<section class="prog__container"><p>The <code>ngBind</code> attribute tells AngularJS to replace the text content of the specified HTML element with the value of a given expression, and to update the text content when the value of that expression changes.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;ANY\n  ng-bind=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li><li>as CSS class:<pre><code>&lt;ANY class=&quot;ng-bind: expression;&quot;&gt; ... &lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngBind
ngBindHtml	A			directive in module ng							<section class="prog__container"><p>Evaluates the expression and inserts the resulting HTML into the element in a secure way. By default, the resulting HTML content will be sanitized using the $sanitize service. To utilize this functionality, ensure that <code>$sanitize</code> is available, for example, by including ngSanitize in your module&apos;s dependencies (not in core AngularJS). In order to use ngSanitize in your module&apos;s dependencies, you need to include &quot;angular-sanitize.js&quot; in your application.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-bind-html\n  ng-bind-html=&quot;expression&quot;&gt;\n...\n&lt;/ng-bind-html&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-bind-html=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngBindHtml
ngBindTemplate	A			directive in module ng							<section class="prog__container"><p>The <code>ngBindTemplate</code> directive specifies that the element text content should be replaced with the interpolation of the template in the <code>ngBindTemplate</code> attribute. Unlike <code>ngBind</code>, the <code>ngBindTemplate</code> can contain multiple <code>{{</code> <code>}}</code> expressions. This directive is needed since some HTML elements (such as TITLE and OPTION) cannot contain SPAN elements.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-bind-template\n  ng-bind-template=&quot;string&quot;&gt;\n...\n&lt;/ng-bind-template&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-bind-template=&quot;string&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngBindTemplate
ngBlur	A			directive in module ng							<section class="prog__container"><p>Specify custom behavior on blur event.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-blur\n  ng-blur=&quot;expression&quot;&gt;\n...\n&lt;/ng-blur&gt;</code></pre></li><li>as attribute:<pre><code>&lt;window, input, select, textarea, a\n  ng-blur=&quot;expression&quot;&gt;\n...\n&lt;/window, input, select, textarea, a&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngBlur
ngChange	A			directive in module ng							<section class="prog__container"><p>Evaluate the given expression when the user changes the input. The expression is evaluated immediately, unlike the JavaScript onchange event which only triggers at the end of a change (usually, when the user leaves the form element or presses the return key).</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-change\n  ng-change=&quot;expression&quot;&gt;\n...\n&lt;/ng-change&gt;</code></pre></li><li>as attribute:<pre><code>&lt;input\n  ng-change=&quot;expression&quot;&gt;\n...\n&lt;/input&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngChange
ngChecked	A			directive in module ng							<section class="prog__container"><p>Sets the <code>checked</code> attribute on the element, if the expression inside <code>ngChecked</code> is truthy.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;INPUT\n  ng-checked=&quot;expression&quot;&gt;\n...\n&lt;/INPUT&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngChecked
ngClass	A			directive in module ng							<section class="prog__container"><p>The <code>ngClass</code> directive allows you to dynamically set CSS classes on an HTML element by databinding an expression that represents all classes to be added.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;ANY\n  ng-class=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li><li>as CSS class:<pre><code>&lt;ANY class=&quot;ng-class: expression;&quot;&gt; ... &lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngClass
ngClassEven	A			directive in module ng							<section class="prog__container"><p>The <code>ngClassOdd</code> and <code>ngClassEven</code> directives work exactly as ngClass, except they work in conjunction with <code>ngRepeat</code> and take effect only on odd (even) rows.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;ANY\n  ng-class-even=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li><li>as CSS class:<pre><code>&lt;ANY class=&quot;ng-class-even: expression;&quot;&gt; ... &lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngClassEven
ngClassOdd	A			directive in module ng							<section class="prog__container"><p>The <code>ngClassOdd</code> and <code>ngClassEven</code> directives work exactly as ngClass, except they work in conjunction with <code>ngRepeat</code> and take effect only on odd (even) rows.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;ANY\n  ng-class-odd=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li><li>as CSS class:<pre><code>&lt;ANY class=&quot;ng-class-odd: expression;&quot;&gt; ... &lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngClassOdd
ngClick	A			directive in module ng							<section class="prog__container"><p>The ngClick directive allows you to specify custom behavior when an element is clicked.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-click\n  ng-click=&quot;expression&quot;&gt;\n...\n&lt;/ng-click&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-click=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngClick
ngCloak	A			directive in module ng							<section class="prog__container"><p>The <code>ngCloak</code> directive is used to prevent the AngularJS html template from being briefly displayed by the browser in its raw (uncompiled) form while your application is loading. Use this directive to avoid the undesirable flicker effect caused by the html template display.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;ANY&gt;\n...\n&lt;/ANY&gt;</code></pre></li><li>as CSS class:<pre><code>&lt;ANY class=&quot;&quot;&gt; ... &lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngCloak
ngController	A			directive in module ng							<section class="prog__container"><p>The <code>ngController</code> directive attaches a controller class to the view. This is a key aspect of how angular supports the principles behind the Model-View-Controller design pattern.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-controller\n  ng-controller=&quot;expression&quot;&gt;\n...\n&lt;/ng-controller&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-controller=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngController
ngCopy	A			directive in module ng							<section class="prog__container"><p>Specify custom behavior on copy event.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-copy\n  ng-copy=&quot;expression&quot;&gt;\n...\n&lt;/ng-copy&gt;</code></pre></li><li>as attribute:<pre><code>&lt;window, input, select, textarea, a\n  ng-copy=&quot;expression&quot;&gt;\n...\n&lt;/window, input, select, textarea, a&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngCopy
ngCsp	A			directive in module ng							<section class="prog__container"><p>AngularJS has some features that can conflict with certain restrictions that are applied when using CSP (Content Security Policy) rules.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;ANY&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngCsp
ngCut	A			directive in module ng							<section class="prog__container"><p>Specify custom behavior on cut event.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-cut\n  ng-cut=&quot;expression&quot;&gt;\n...\n&lt;/ng-cut&gt;</code></pre></li><li>as attribute:<pre><code>&lt;window, input, select, textarea, a\n  ng-cut=&quot;expression&quot;&gt;\n...\n&lt;/window, input, select, textarea, a&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngCut
ngDblclick	A			directive in module ng							<section class="prog__container"><p>The <code>ngDblclick</code> directive allows you to specify custom behavior on a dblclick event.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-dblclick\n  ng-dblclick=&quot;expression&quot;&gt;\n...\n&lt;/ng-dblclick&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-dblclick=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngDblclick
ngDisabled	A			directive in module ng							<section class="prog__container"><p>This directive sets the <code>disabled</code> attribute on the element (typically a form control, e.g. <code>input</code>, <code>button</code>, <code>select</code> etc.) if the expression inside <code>ngDisabled</code> evaluates to truthy.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;INPUT\n  ng-disabled=&quot;expression&quot;&gt;\n...\n&lt;/INPUT&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngDisabled
ngFocus	A			directive in module ng							<section class="prog__container"><p>Specify custom behavior on focus event.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-focus\n  ng-focus=&quot;expression&quot;&gt;\n...\n&lt;/ng-focus&gt;</code></pre></li><li>as attribute:<pre><code>&lt;window, input, select, textarea, a\n  ng-focus=&quot;expression&quot;&gt;\n...\n&lt;/window, input, select, textarea, a&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngFocus
ngForm	A			directive in module ng							<section class="prog__container"><p>Nestable alias of form directive. HTML does not allow nesting of form elements. It is useful to nest forms, for example if the validity of a sub-group of controls needs to be determined.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-form\n  [name=&quot;string&quot;]&gt;\n...\n&lt;/ng-form&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  [ng-form=&quot;string&quot;]&gt;\n...\n&lt;/ANY&gt;</code></pre></li><li>as CSS class:<pre><code>&lt;ANY class=&quot;[ng-form: string;]&quot;&gt; ... &lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngForm
ngHide	A			directive in module ng							<section class="prog__container"><p>The <code>ngHide</code> directive shows or hides the given HTML element based on the expression provided to the <code>ngHide</code> attribute.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-hide\n  ng-hide=&quot;expression&quot;&gt;\n...\n&lt;/ng-hide&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-hide=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngHide
ngHref	A			directive in module ng							<section class="prog__container"><p>Using AngularJS markup like <code>{{hash}}</code> in an href attribute will make the link go to the wrong URL if the user clicks it before AngularJS has a chance to replace the <code>{{hash}}</code> markup with its value. Until AngularJS replaces the markup the link will be broken and will most likely return a 404 error. The <code>ngHref</code> directive solves this problem.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;A\n  ng-href=&quot;template&quot;&gt;\n...\n&lt;/A&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngHref
ngIf	A			directive in module ng							<section class="prog__container"><p>The <code>ngIf</code> directive removes or recreates a portion of the DOM tree based on an {expression}. If the expression assigned to <code>ngIf</code> evaluates to a false value then the element is removed from the DOM, otherwise a clone of the element is reinserted into the DOM.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;ANY\n  ng-if=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngIf
ngInclude	A			directive in module ng							<section class="prog__container"><p>Fetches, compiles and includes an external HTML fragment.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-include\n  src=&quot;string&quot;\n  [onload=&quot;string&quot;]\n  [autoscroll=&quot;string&quot;]&gt;\n...\n&lt;/ng-include&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-include=&quot;string&quot;\n  [onload=&quot;string&quot;]\n  [autoscroll=&quot;string&quot;]&gt;\n...\n&lt;/ANY&gt;</code></pre></li><li>as CSS class:<pre><code>&lt;ANY class=&quot;ng-include: string; [onload: string;] [autoscroll: string;]&quot;&gt; ... &lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngInclude
ngInit	A			directive in module ng							<section class="prog__container"><p>The <code>ngInit</code> directive allows you to evaluate an expression in the current scope.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;ANY\n  ng-init=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li><li>as CSS class:<pre><code>&lt;ANY class=&quot;ng-init: expression;&quot;&gt; ... &lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngInit
ngJq	A			directive in module ng							<section class="prog__container"><p>Use this directive to force the angular.element library. This should be used to force either jqLite by leaving ng-jq blank or setting the name of the jquery variable under window (eg. jQuery).</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-jq\n  [ng-jq=&quot;string&quot;]&gt;\n...\n&lt;/ng-jq&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  [ng-jq=&quot;string&quot;]&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngJq
ngKeydown	A			directive in module ng							<section class="prog__container"><p>Specify custom behavior on keydown event.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-keydown\n  ng-keydown=&quot;expression&quot;&gt;\n...\n&lt;/ng-keydown&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-keydown=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngKeydown
ngKeypress	A			directive in module ng							<section class="prog__container"><p>Specify custom behavior on keypress event.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-keypress\n  ng-keypress=&quot;expression&quot;&gt;\n...\n&lt;/ng-keypress&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-keypress=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngKeypress
ngKeyup	A			directive in module ng							<section class="prog__container"><p>Specify custom behavior on keyup event.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-keyup\n  ng-keyup=&quot;expression&quot;&gt;\n...\n&lt;/ng-keyup&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-keyup=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngKeyup
ngList	A			directive in module ng							<section class="prog__container"><p>Text input that converts between a delimited string and an array of strings. The default delimiter is a comma followed by a space - equivalent to <code>ng-list=&quot;, &quot;</code>. You can specify a custom delimiter as the value of the <code>ngList</code> attribute - for example, <code>ng-list=&quot; | &quot;</code>.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-list\n  [ng-list=&quot;string&quot;]&gt;\n...\n&lt;/ng-list&gt;</code></pre></li><li>as attribute:<pre><code>&lt;input\n  [ng-list=&quot;string&quot;]&gt;\n...\n&lt;/input&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngList
ngMaxlength	A			directive in module ng							<section class="prog__container"><p>ngMaxlength adds the maxlength validator to ngModel. It is most often used for text-based input controls, but can also be applied to custom text-based controls.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-maxlength&gt;\n...\n&lt;/ng-maxlength&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngMaxlength
ngMessage	A			directive in module ngMessages							<section class="prog__container"><p><code>ngMessage</code> is a directive with the purpose to show and hide a particular message. For <code>ngMessage</code> to operate, a parent <code>ngMessages</code> directive on a parent DOM element must be situated since it determines which messages are visible based on the state of the provided key/value map that <code>ngMessages</code> listens on.</p><h2>Usage</h2><pre><code class="lang-html">&lt;!-- using attribute directives --&gt;\n&lt;ANY ng-messages=&quot;expression&quot; role=&quot;alert&quot;&gt;\n  &lt;ANY ng-message=&quot;stringValue&quot;&gt;...&lt;/ANY&gt;\n  &lt;ANY ng-message=&quot;stringValue1, stringValue2, ...&quot;&gt;...&lt;/ANY&gt;\n&lt;/ANY&gt;\n&lt;!-- or by using element directives --&gt;\n&lt;ng-messages for=&quot;expression&quot; role=&quot;alert&quot;&gt;\n  &lt;ng-message when=&quot;stringValue&quot;&gt;...&lt;/ng-message&gt;\n  &lt;ng-message when=&quot;stringValue1, stringValue2, ...&quot;&gt;...&lt;/ng-message&gt;\n&lt;/ng-messages&gt;\n</code></pre></section>	https://docs.angularjs.org/api/ngMessages/directive/ngMessage
ngMessageExp	A			directive in module ngMessages							<section class="prog__container"><p><code>ngMessageExp</code> is the same as ngMessage, but instead of a static value, it accepts an expression to be evaluated for the message key.</p><h2>Usage</h2><pre><code class="lang-html">&lt;!-- using attribute directives --&gt;\n&lt;ANY ng-messages=&quot;expression&quot;&gt;\n  &lt;ANY ng-message-exp=&quot;expressionValue&quot;&gt;...&lt;/ANY&gt;\n&lt;/ANY&gt;\n&lt;!-- or by using element directives --&gt;\n&lt;ng-messages for=&quot;expression&quot;&gt;\n  &lt;ng-message when-exp=&quot;expressionValue&quot;&gt;...&lt;/ng-message&gt;\n&lt;/ng-messages&gt;\n</code></pre><p>Click here to learn more about <code>ngMessages</code> and <code>ngMessage</code>.</p></section>	https://docs.angularjs.org/api/ngMessages/directive/ngMessageExp
ngMessagesInclude	A			directive in module ngMessages							<section class="prog__container"><p><code>ngMessagesInclude</code> is a directive with the purpose to import existing ngMessage template code from a remote template and place the downloaded template code into the exact spot that the ngMessagesInclude directive is placed within the ngMessages container. This allows for a series of pre-defined messages to be reused and also allows for the developer to determine what messages are overridden due to the placement of the ngMessagesInclude directive.</p><h2>Usage</h2><pre><code class="lang-html">&lt;!-- using attribute directives --&gt;\n&lt;ANY ng-messages=&quot;expression&quot; role=&quot;alert&quot;&gt;\n  &lt;ANY ng-messages-include=&quot;remoteTplString&quot;&gt;...&lt;/ANY&gt;\n&lt;/ANY&gt;\n&lt;!-- or by using element directives --&gt;\n&lt;ng-messages for=&quot;expression&quot; role=&quot;alert&quot;&gt;\n  &lt;ng-messages-include src=&quot;expressionValue1&quot;&gt;...&lt;/ng-messages-include&gt;\n&lt;/ng-messages&gt;\n</code></pre><p>Click here to learn more about <code>ngMessages</code> and <code>ngMessage</code>.</p></section>	https://docs.angularjs.org/api/ngMessages/directive/ngMessagesInclude
ngMinlength	A			directive in module ng							<section class="prog__container"><p>ngMinlength adds the minlength validator to ngModel. It is most often used for text-based input controls, but can also be applied to custom text-based controls.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-minlength&gt;\n...\n&lt;/ng-minlength&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngMinlength
ngModel	A			directive in module ng							<section class="prog__container"><p>The <code>ngModel</code> directive binds an <code>input</code>,<code>select</code>, <code>textarea</code> (or custom form control) to a property on the scope using NgModelController, which is created and exposed by this directive.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-model&gt;\n...\n&lt;/ng-model&gt;</code></pre></li><li>as attribute:<pre><code>&lt;input&gt;\n...\n&lt;/input&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngModel
ngModel NgModelController	R	ngModel.NgModelController										
ngModel.NgModelController	A			type in module ng							<section class="prog__container"><p><code>NgModelController</code> provides API for the ngModel directive. The controller contains services for data-binding, validation, CSS updates, and value formatting and parsing. It purposefully does not contain any logic which deals with DOM rendering or listening to DOM events. Such DOM related logic should be provided by other directives which make use of <code>NgModelController</code> for data-binding to control elements. AngularJS provides this DOM logic for most input elements. At the end of this page you can find a custom control example that uses <code>ngModelController</code> to bind to <code>contenteditable</code> elements.</p></section>	https://docs.angularjs.org/api/ng/type/ngModel.NgModelController
ngModelOptions	A			directive in module ng							<section class="prog__container"><p>This directive allows you to modify the behaviour of ngModel directives within your application. You can specify an <code>ngModelOptions</code> directive on any element. All ngModel directives will use the options of their nearest <code>ngModelOptions</code> ancestor.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-model-options\n  ng-model-options=&quot;Object&quot;&gt;\n...\n&lt;/ng-model-options&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-model-options=&quot;Object&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngModelOptions
ngMousedown	A			directive in module ng							<section class="prog__container"><p>The ngMousedown directive allows you to specify custom behavior on mousedown event.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-mousedown\n  ng-mousedown=&quot;expression&quot;&gt;\n...\n&lt;/ng-mousedown&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-mousedown=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngMousedown
ngMouseenter	A			directive in module ng							<section class="prog__container"><p>Specify custom behavior on mouseenter event.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-mouseenter\n  ng-mouseenter=&quot;expression&quot;&gt;\n...\n&lt;/ng-mouseenter&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-mouseenter=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngMouseenter
ngMouseleave	A			directive in module ng							<section class="prog__container"><p>Specify custom behavior on mouseleave event.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-mouseleave\n  ng-mouseleave=&quot;expression&quot;&gt;\n...\n&lt;/ng-mouseleave&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-mouseleave=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngMouseleave
ngMousemove	A			directive in module ng							<section class="prog__container"><p>Specify custom behavior on mousemove event.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-mousemove\n  ng-mousemove=&quot;expression&quot;&gt;\n...\n&lt;/ng-mousemove&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-mousemove=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngMousemove
ngMouseover	A			directive in module ng							<section class="prog__container"><p>Specify custom behavior on mouseover event.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-mouseover\n  ng-mouseover=&quot;expression&quot;&gt;\n...\n&lt;/ng-mouseover&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-mouseover=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngMouseover
ngMouseup	A			directive in module ng							<section class="prog__container"><p>Specify custom behavior on mouseup event.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-mouseup\n  ng-mouseup=&quot;expression&quot;&gt;\n...\n&lt;/ng-mouseup&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-mouseup=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngMouseup
ngNonBindable	A			directive in module ng							<section class="prog__container"><p>The <code>ngNonBindable</code> directive tells AngularJS not to compile or bind the contents of the current DOM element. This is useful if the element contains what appears to be AngularJS directives and bindings but which should be ignored by AngularJS. This could be the case if you have a site that displays snippets of code, for instance.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;ANY&gt;\n...\n&lt;/ANY&gt;</code></pre></li><li>as CSS class:<pre><code>&lt;ANY class=&quot;&quot;&gt; ... &lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngNonBindable
ngOpen	A			directive in module ng							<section class="prog__container"><p>Sets the <code>open</code> attribute on the element, if the expression inside <code>ngOpen</code> is truthy.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;DETAILS\n  ng-open=&quot;expression&quot;&gt;\n...\n&lt;/DETAILS&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngOpen
ngOptions	A			directive in module ng							<section class="prog__container"><p>The <code>ngOptions</code> attribute can be used to dynamically generate a list of <code>&lt;option&gt;</code> elements for the <code>&lt;select&gt;</code> element using the array or object obtained by evaluating the <code>ngOptions</code> comprehension expression.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;ANY\n  ng-model=&quot;string&quot;\n  [name=&quot;string&quot;]\n  [required=&quot;string&quot;]\n  [ng-required=&quot;string&quot;]\n  [ng-options=&quot;comprehension_expression&quot;]&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngOptions
ngOutlet	A			directive in module ngComponentRouter							<section class="prog__container"><p>The directive that identifies where the Router should render its <strong>Components</strong>.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-outlet&gt;\n...\n&lt;/ng-outlet&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ngComponentRouter/directive/ngOutlet
ngPaste	A			directive in module ng							<section class="prog__container"><p>Specify custom behavior on paste event.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-paste\n  ng-paste=&quot;expression&quot;&gt;\n...\n&lt;/ng-paste&gt;</code></pre></li><li>as attribute:<pre><code>&lt;window, input, select, textarea, a\n  ng-paste=&quot;expression&quot;&gt;\n...\n&lt;/window, input, select, textarea, a&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngPaste
ngPattern	A			directive in module ng							<section class="prog__container"><p>ngPattern adds the pattern validator to ngModel. It is most often used for text-based input controls, but can also be applied to custom text-based controls.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-pattern&gt;\n...\n&lt;/ng-pattern&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngPattern
ngPluralize	A			directive in module ng							<section class="prog__container"><p><code>ngPluralize</code> is a directive that displays messages according to en-US localization rules. These rules are bundled with angular.js, but can be overridden (see AngularJS i18n dev guide). You configure ngPluralize directive by specifying the mappings between plural categories and the strings to be displayed.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-pluralize\n  count=&quot;&quot;\n  when=&quot;string&quot;\n  [offset=&quot;number&quot;]&gt;\n...\n&lt;/ng-pluralize&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  count=&quot;&quot;\n  when=&quot;string&quot;\n  [offset=&quot;number&quot;]&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngPluralize
ngReadonly	A			directive in module ng							<section class="prog__container"><p>Sets the <code>readonly</code> attribute on the element, if the expression inside <code>ngReadonly</code> is truthy. Note that <code>readonly</code> applies only to <code>input</code> elements with specific types. See the input docs on MDN for more information.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;INPUT\n  ng-readonly=&quot;expression&quot;&gt;\n...\n&lt;/INPUT&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngReadonly
ngRepeat	A			directive in module ng							<section class="prog__container"><p>The <code>ngRepeat</code> directive instantiates a template once per item from a collection. Each template instance gets its own scope, where the given loop variable is set to the current collection item, and <code>$index</code> is set to the item index or key.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-repeat\n  ng-repeat=&quot;repeat_expression&quot;&gt;\n...\n&lt;/ng-repeat&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-repeat=&quot;repeat_expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngRepeat
ngRequired	A			directive in module ng							<section class="prog__container"><p>ngRequired adds the required validator to ngModel. It is most often used for input and select controls, but can also be applied to custom controls.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;ANY&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngRequired
ngSelected	A			directive in module ng							<section class="prog__container"><p>Sets the <code>selected</code> attribute on the element, if the expression inside <code>ngSelected</code> is truthy.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;OPTION\n  ng-selected=&quot;expression&quot;&gt;\n...\n&lt;/OPTION&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngSelected
ngShow	A			directive in module ng							<section class="prog__container"><p>The <code>ngShow</code> directive shows or hides the given HTML element based on the expression provided to the <code>ngShow</code> attribute.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-show\n  ng-show=&quot;expression&quot;&gt;\n...\n&lt;/ng-show&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-show=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngShow
ngSrc	A			directive in module ng							<section class="prog__container"><p>Using AngularJS markup like <code>{{hash}}</code> in a <code>src</code> attribute doesn&apos;t work right: The browser will fetch from the URL with the literal text <code>{{hash}}</code> until AngularJS replaces the expression inside <code>{{hash}}</code>. The <code>ngSrc</code> directive solves this problem.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;IMG\n  ng-src=&quot;template&quot;&gt;\n...\n&lt;/IMG&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngSrc
ngSrcset	A			directive in module ng							<section class="prog__container"><p>Using AngularJS markup like <code>{{hash}}</code> in a <code>srcset</code> attribute doesn&apos;t work right: The browser will fetch from the URL with the literal text <code>{{hash}}</code> until AngularJS replaces the expression inside <code>{{hash}}</code>. The <code>ngSrcset</code> directive solves this problem.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;IMG\n  ng-srcset=&quot;template&quot;&gt;\n...\n&lt;/IMG&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngSrcset
ngStyle	A			directive in module ng							<section class="prog__container"><p>The <code>ngStyle</code> directive allows you to set CSS style on an HTML element conditionally.</p><h2>Usage</h2><ul><li>as attribute:<pre><code>&lt;ANY\n  ng-style=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li><li>as CSS class:<pre><code>&lt;ANY class=&quot;ng-style: expression;&quot;&gt; ... &lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngStyle
ngSubmit	A			directive in module ng							<section class="prog__container"><p>Enables binding AngularJS expressions to onsubmit events.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-submit\n  ng-submit=&quot;expression&quot;&gt;\n...\n&lt;/ng-submit&gt;</code></pre></li><li>as attribute:<pre><code>&lt;form\n  ng-submit=&quot;expression&quot;&gt;\n...\n&lt;/form&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngSubmit
ngSwipeLeft	A			directive in module ngTouch							<section class="prog__container"><p>Specify custom behavior when an element is swiped to the left on a touchscreen device. A leftward swipe is a quick, right-to-left slide of the finger. Though ngSwipeLeft is designed for touch-based devices, it will work with a mouse click and drag too.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-swipe-left\n  ng-swipe-left=&quot;expression&quot;&gt;\n...\n&lt;/ng-swipe-left&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-swipe-left=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ngTouch/directive/ngSwipeLeft
ngSwipeRight	A			directive in module ngTouch							<section class="prog__container"><p>Specify custom behavior when an element is swiped to the right on a touchscreen device. A rightward swipe is a quick, left-to-right slide of the finger. Though ngSwipeRight is designed for touch-based devices, it will work with a mouse click and drag too.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-swipe-right\n  ng-swipe-right=&quot;expression&quot;&gt;\n...\n&lt;/ng-swipe-right&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-swipe-right=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ngTouch/directive/ngSwipeRight
ngSwitch	A			directive in module ng							<section class="prog__container"><p>The <code>ngSwitch</code> directive is used to conditionally swap DOM structure on your template based on a scope expression. Elements within <code>ngSwitch</code> but without <code>ngSwitchWhen</code> or <code>ngSwitchDefault</code> directives will be preserved at the location as specified in the template.</p><h2>Usage</h2><pre><code>&lt;ANY ng-switch=&quot;expression&quot;&gt;\n  &lt;ANY ng-switch-when=&quot;matchValue1&quot;&gt;...&lt;/ANY&gt;\n  &lt;ANY ng-switch-when=&quot;matchValue2&quot;&gt;...&lt;/ANY&gt;\n  &lt;ANY ng-switch-default&gt;...&lt;/ANY&gt;\n&lt;/ANY&gt;\n</code></pre></section>	https://docs.angularjs.org/api/ng/directive/ngSwitch
ngTransclude	A			directive in module ng							<section class="prog__container"><p>Directive that marks the insertion point for the transcluded DOM of the nearest parent directive that uses transclusion.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-transclude\n  ng-transclude-slot=&quot;string&quot;&gt;\n...\n&lt;/ng-transclude&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-transclude=&quot;string&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li><li>as CSS class:<pre><code>&lt;ANY class=&quot;ng-transclude: string;&quot;&gt; ... &lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngTransclude
ngValue	A			directive in module ng							<section class="prog__container"><p>Binds the given expression to the value of the element.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-value\n  [ng-value=&quot;string&quot;]&gt;\n...\n&lt;/ng-value&gt;</code></pre></li><li>as attribute:<pre><code>&lt;input\n  [ng-value=&quot;string&quot;]&gt;\n...\n&lt;/input&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/ngValue
ngView	A			directive in module ngRoute							<section class="prog__container"><p><code>ngView</code> is a directive that complements the $route service by including the rendered template of the current route into the main layout (<code>index.html</code>) file. Every time the current route changes, the included view changes with it according to the configuration of the <code>$route</code> service.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-view\n  [onload=&quot;string&quot;]\n  [autoscroll=&quot;string&quot;]&gt;\n...\n&lt;/ng-view&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  [onload=&quot;string&quot;]\n  [autoscroll=&quot;string&quot;]&gt;\n...\n&lt;/ANY&gt;</code></pre></li><li>as CSS class:<pre><code>&lt;ANY class=&quot;[onload: string;] [autoscroll: string;]&quot;&gt; ... &lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ngRoute/directive/ngView
nganimate $animate	A			service in module ngAnimate							<section class="prog__container"><p>The ngAnimate <code>$animate</code> service documentation is the same for the core <code>$animate</code> service.</p></section>	https://docs.angularjs.org/api/ngAnimate/service/$animate
nganimate $animate css	R	nganimate $animateCss										
nganimate $animateCss	A			service in module ngAnimate							<section class="prog__container"><p>The <code>$animateCss</code> service is a useful utility to trigger customized CSS-based transitions/keyframes from a JavaScript-based animation or directly from a directive. The purpose of <code>$animateCss</code> is NOT to side-step how <code>$animate</code> and ngAnimate work, but the goal is to allow pre-existing animations or directives to create more complex animations that can be purely driven using CSS code.</p><h2>Usage</h2><pre><code>$animateCss</code></pre></section>	https://docs.angularjs.org/api/ngAnimate/service/$animateCss
nganimate animate	R	nganimate $animate										
nganimate animate css	R	nganimate $animateCss										
nganimate animateCss	R	nganimate $animateCss										
ngmessages ng messages	R	ngmessages ngMessages										
ngmessages ng-messages	R	ngmessages ngMessages										
ngmessages ngMessages	A			directive in module ngMessages							<section class="prog__container"><p><code>ngMessages</code> is a directive that is designed to show and hide messages based on the state of a key/value object that it listens on. The directive itself complements error message reporting with the <code>ngModel</code> $error object (which stores a key/value state of validation errors).</p><h2>Usage</h2><pre><code class="lang-html">&lt;!-- using attribute directives --&gt;\n&lt;ANY ng-messages=&quot;expression&quot; role=&quot;alert&quot;&gt;\n  &lt;ANY ng-message=&quot;stringValue&quot;&gt;...&lt;/ANY&gt;\n  &lt;ANY ng-message=&quot;stringValue1, stringValue2, ...&quot;&gt;...&lt;/ANY&gt;\n  &lt;ANY ng-message-exp=&quot;expressionValue&quot;&gt;...&lt;/ANY&gt;\n&lt;/ANY&gt;\n&lt;!-- or by using element directives --&gt;\n&lt;ng-messages for=&quot;expression&quot; role=&quot;alert&quot;&gt;\n  &lt;ng-message when=&quot;stringValue&quot;&gt;...&lt;/ng-message&gt;\n  &lt;ng-message when=&quot;stringValue1, stringValue2, ...&quot;&gt;...&lt;/ng-message&gt;\n  &lt;ng-message when-exp=&quot;expressionValue&quot;&gt;...&lt;/ng-message&gt;\n&lt;/ng-messages&gt;\n</code></pre></section>	https://docs.angularjs.org/api/ngMessages/directive/ngMessages
ngmock $animate	A			service in module ngMock							<section class="prog__container"><p>Mock implementation of the $animate service. Exposes two additional methods for testing animations.</p></section>	https://docs.angularjs.org/api/ngMock/service/$animate
ngmock $controller	A			service in module ngMock							<section class="prog__container"><p>A decorator for $controller with additional <code>bindings</code> parameter, useful when testing controllers of directives that use bindToController.</p><h2>Usage</h2><pre><code>$controller(constructor, locals, [bindings]);</code></pre></section>	https://docs.angularjs.org/api/ngMock/service/$controller
ngmock $exception handler	R	ngmock $exceptionHandler										
ngmock $exceptionHandler	A			service in module ngMock							<section class="prog__container"><p>Mock implementation of $exceptionHandler that rethrows or logs errors passed to it. See $exceptionHandlerProvider for configuration information.</p></section>	https://docs.angularjs.org/api/ngMock/service/$exceptionHandler
ngmock $http backend	R	ngmock $httpBackend										
ngmock $httpBackend	A			service in module ngMock							<section class="prog__container"><p>Fake HTTP backend implementation suitable for unit testing applications that use the $http service.</p></section>	https://docs.angularjs.org/api/ngMock/service/$httpBackend
ngmock $interval	A			service in module ngMock							<section class="prog__container"><p>Mock implementation of the $interval service.</p><h2>Usage</h2><pre><code>$interval(fn, delay, [count], [invokeApply], [Pass]);</code></pre></section>	https://docs.angularjs.org/api/ngMock/service/$interval
ngmock $log	A			service in module ngMock							<section class="prog__container"><p>Mock implementation of $log that gathers all logged messages in arrays (one array per logging level). These arrays are exposed as <code>logs</code> property of each of the level-specific log function, e.g. for level <code>error</code> the array is exposed as <code>$log.error.logs</code>.</p></section>	https://docs.angularjs.org/api/ngMock/service/$log
ngmock $root scope Scope	R	ngmock $rootScope.Scope										
ngmock $rootScope Scope	R	ngmock $rootScope.Scope										
ngmock $rootScope.Scope	A			type in module ngMock							<section class="prog__container"><p>Scope type decorated with helper methods useful for testing. These methods are automatically available on any Scope instance when <code>ngMock</code> module is loaded.</p></section>	https://docs.angularjs.org/api/ngMock/type/$rootScope.Scope
ngmock $timeout	A			service in module ngMock							<section class="prog__container"><p>This service is just a simple decorator for $timeout service that adds a &quot;flush&quot; and &quot;verifyNoPendingTasks&quot; methods.</p></section>	https://docs.angularjs.org/api/ngMock/service/$timeout
ngmock animate	R	ngmock $animate										
ngmock controller	R	ngmock $controller										
ngmock exception handler	R	ngmock $exceptionHandler										
ngmock exceptionHandler	R	ngmock $exceptionHandler										
ngmock http backend	R	ngmock $httpBackend										
ngmock httpBackend	R	ngmock $httpBackend										
ngmock interval	R	ngmock $interval										
ngmock log	R	ngmock $log										
ngmock root scope Scope	R	ngmock $rootScope.Scope										
ngmock rootScope.Scope	R	ngmock $rootScope.Scope										
ngmock timeout	R	ngmock $timeout										
ngmocke2e $http backend	R	ngmocke2e $httpBackend										
ngmocke2e $httpBackend	A			service in module ngMockE2E							<section class="prog__container"><p>Fake HTTP backend implementation suitable for end-to-end testing or backend-less development of applications that use the $http service.</p></section>	https://docs.angularjs.org/api/ngMockE2E/service/$httpBackend
ngmocke2e http backend	R	ngmocke2e $httpBackend										
ngmocke2e httpBackend	R	ngmocke2e $httpBackend										
ngtouch ng click	R	ngtouch ngClick										
ngtouch ng-click	R	ngtouch ngClick										
ngtouch ngClick	A			directive in module ngTouch							<section class="prog__container"><p>A more powerful replacement for the default ngClick designed to be used on touchscreen devices. Most mobile browsers wait about 300ms after a tap-and-release before sending the click event. This version handles them immediately, and then prevents the following click event from propagating.</p><h2>Usage</h2><ul><li>as element: (This directive can be used as custom element, but be aware of IE restrictions).<pre><code>&lt;ng-click\n  ng-click=&quot;expression&quot;&gt;\n...\n&lt;/ng-click&gt;</code></pre></li><li>as attribute:<pre><code>&lt;ANY\n  ng-click=&quot;expression&quot;&gt;\n...\n&lt;/ANY&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ngTouch/directive/ngClick
noop	R	angular.noop										
number	A			filter in module ng							<section class="prog__container"><p>Formats a number as text.</p><h2>Usage</h2><h3>In HTML Template Binding</h3><pre><code>{{ number_expression | number : fractionSize}}</code></pre><h3>In JavaScript</h3><pre><code>$filter(&apos;number&apos;)(number, fractionSize)</code></pre></section>	https://docs.angularjs.org/api/ng/filter/number
order by	R	orderBy										
orderBy	A			filter in module ng							<section class="prog__container"><p>Returns an array containing the items from the specified <code>collection</code>, ordered by a <code>comparator</code> function based on the values computed using the <code>expression</code> predicate.</p><h2>Usage</h2><h3>In HTML Template Binding</h3><pre><code>{{ orderBy_expression | orderBy : expression : reverse : comparator}}</code></pre><h3>In JavaScript</h3><pre><code>$filter(&apos;orderBy&apos;)(collection, expression, reverse, comparator)</code></pre></section>	https://docs.angularjs.org/api/ng/filter/orderBy
parse	R	$parse										
parse provider	R	$parseProvider										
parseProvider	R	$parseProvider										
provide	R	$provide										
q	R	$q										
q provider	R	$qProvider										
qProvider	R	$qProvider										
reload with debug info	R	angular.reloadWithDebugInfo										
reloadWithDebugInfo	R	angular.reloadWithDebugInfo										
resource	R	$resource										
resource provider	R	$resourceProvider										
resourceProvider	R	$resourceProvider										
root element	R	$rootElement										
root router	R	$rootRouter										
root scope	R	$rootScope										
root scope Scope	R	$rootScope.Scope										
root scope provider	R	$rootScopeProvider										
rootElement	R	$rootElement										
rootRouter	R	$rootRouter										
rootScope	R	$rootScope										
rootScope.Scope	R	$rootScope.Scope										
rootScopeProvider	R	$rootScopeProvider										
route	R	$route										
route params	R	$routeParams										
route provider	R	$routeProvider										
routeParams	R	$routeParams										
routeProvider	R	$routeProvider										
router root component	R	$routerRootComponent										
routerRootComponent	R	$routerRootComponent										
sanitize	R	$sanitize										
sanitize provider	R	$sanitizeProvider										
sanitizeProvider	R	$sanitizeProvider										
sce	R	$sce										
sce delegate	R	$sceDelegate										
sce delegate provider	R	$sceDelegateProvider										
sce provider	R	$sceProvider										
sceDelegate	R	$sceDelegate										
sceDelegateProvider	R	$sceDelegateProvider										
sceProvider	R	$sceProvider										
script	A			directive in module ng							<section class="prog__container"><p>Load the content of a <code>&lt;script&gt;</code> element into $templateCache, so that the template can be used by ngInclude, ngView, or directives. The type of the <code>&lt;script&gt;</code> element must be specified as <code>text/ng-template</code>, and a cache name for the template must be assigned through the element&apos;s <code>id</code>, which can then be used as a directive&apos;s <code>templateUrl</code>.</p><h2>Usage</h2><ul><li>as element:<pre><code>&lt;script\n  type=&quot;string&quot;\n  id=&quot;string&quot;&gt;\n...\n&lt;/script&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/script
select	A			directive in module ng							<section class="prog__container"><p>HTML <code>select</code> element with AngularJS data-binding.</p><h2>Usage</h2><ul><li>as element:<pre><code>&lt;select\n  ng-model=&quot;string&quot;\n  [name=&quot;string&quot;]\n  [multiple=&quot;string&quot;]\n  [required=&quot;string&quot;]\n  [ng-required=&quot;string&quot;]\n  [ng-change=&quot;string&quot;]\n  [ng-options=&quot;string&quot;]&gt;\n...\n&lt;/select&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/select
select Select controller	R	select.SelectController										
select SelectController	R	select.SelectController										
select.SelectController	A			type in module ng							<section class="prog__container"><p>The controller for the <code>&lt;select&gt;</code> directive. This provides support for reading and writing the selected value(s) of the control and also coordinates dynamically added <code>&lt;option&gt;</code> elements, perhaps by an <code>ngRepeat</code> directive.</p></section>	https://docs.angularjs.org/api/ng/type/select.SelectController
swipe	R	$swipe										
template cache	R	$templateCache										
template request	R	$templateRequest										
template request provider	R	$templateRequestProvider										
templateCache	R	$templateCache										
templateRequest	R	$templateRequest										
templateRequestProvider	R	$templateRequestProvider										
textarea	A			directive in module ng							<section class="prog__container"><p>HTML textarea element control with AngularJS data-binding. The data-binding and validation properties of this element are exactly the same as those of the input element.</p><h2>Usage</h2><ul><li>as element:<pre><code>&lt;textarea\n  ng-model=&quot;string&quot;\n  [name=&quot;string&quot;]\n  [required=&quot;string&quot;]\n  [ng-required=&quot;string&quot;]\n  [ng-minlength=&quot;number&quot;]\n  [ng-maxlength=&quot;number&quot;]\n  [ng-pattern=&quot;string&quot;]\n  [ng-change=&quot;string&quot;]\n  [ng-trim=&quot;boolean&quot;]&gt;\n...\n&lt;/textarea&gt;</code></pre></li></ul></section>	https://docs.angularjs.org/api/ng/directive/textarea
timeout	R	$timeout										
to json	R	angular.toJson										
toJson	R	angular.toJson										
touch	R	$touch										
touch provider	R	$touchProvider										
touchProvider	R	$touchProvider										
uppercase	R	angular.uppercase										
version	R	angular.version										
window	R	$window										
xhr factory	R	$xhrFactory										
xhrFactory	R	$xhrFactory										
