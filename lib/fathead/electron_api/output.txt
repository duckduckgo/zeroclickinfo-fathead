<webview>.canGoBack	A										<section class="prog__container">Returns Boolean - Whether the guest page can go back.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.canGoBack	A										<section class="prog__container">Returns Boolean - Whether the guest page can go back.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.canGoForward	A										<section class="prog__container">Returns Boolean - Whether the guest page can go forward.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.canGoForward	A										<section class="prog__container">Returns Boolean - Whether the guest page can go forward.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.canGoToOffset	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">offset</code> Integer</li>\n</ul>Returns Boolean - Whether the guest page can go to offset.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.canGoToOffset	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">offset</code> Integer</li>\n</ul>Returns Boolean - Whether the guest page can go to offset.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.capturePage	A										<section class="prog__container">Captures a snapshot of the webview s page. Same as webContents.capturePage([rect, ]callback).\n\n</section>	http://electron.atom.io/docs/api/
<webview>.capturePage	A										<section class="prog__container">Captures a snapshot of the webview s page. Same as webContents.capturePage([rect, ]callback).\n\n</section>	http://electron.atom.io/docs/api/
<webview>.clearHistory	A										<section class="prog__container">Clears the navigation history.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.clearHistory	A										<section class="prog__container">Clears the navigation history.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.closeDevTools	A										<section class="prog__container">Closes the DevTools window of guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.closeDevTools	A										<section class="prog__container">Closes the DevTools window of guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.copy	A										<section class="prog__container">Executes editing command copy in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.copy	A										<section class="prog__container">Executes editing command copy in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.cut	A										<section class="prog__container">Executes editing command cut in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.cut	A										<section class="prog__container">Executes editing command cut in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.delete	A										<section class="prog__container">Executes editing command delete in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.delete	A										<section class="prog__container">Executes editing command delete in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.executeJavaScript	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">code</code> String</li>\n<li><code class="highlighter-rouge">userGesture</code> Boolean - Default <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional) - Called after script has been executed.\n    <ul>\n<li><code class="highlighter-rouge">result</code> Any</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">result</code> Any</li>\n</ul>Evaluates code in page. If userGesture is set, it will create the user gesture context in the page. HTML APIs like requestFullScreen, which require user action, can take advantage of this option for automation.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.executeJavaScript	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">code</code> String</li>\n<li><code class="highlighter-rouge">userGesture</code> Boolean - Default <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional) - Called after script has been executed.\n    <ul>\n<li><code class="highlighter-rouge">result</code> Any</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">result</code> Any</li>\n</ul>Evaluates code in page. If userGesture is set, it will create the user gesture context in the page. HTML APIs like requestFullScreen, which require user action, can take advantage of this option for automation.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.findInPage	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">text</code> String - Content to be searched, must not be empty.</li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul>\n<li><code class="highlighter-rouge">forward</code> Boolean - Whether to search forward or backward, defaults to <code class="highlighter-rouge">true</code>.</li>\n<li><code class="highlighter-rouge">findNext</code> Boolean - Whether the operation is first request or a follow up, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">matchCase</code> Boolean - Whether search should be case-sensitive, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">wordStart</code> Boolean - Whether to look only at the start of words. defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">medialCapitalAsWordStart</code> Boolean - When combined with <code class="highlighter-rouge">wordStart</code>, accepts a match in the middle of a word if the match begins with an uppercase letter followed by a lowercase or non-letter. Accepts several other intra-word matches, defaults to <code class="highlighter-rouge">false</code>.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">forward</code> Boolean - Whether to search forward or backward, defaults to <code class="highlighter-rouge">true</code>.</li>\n<li><code class="highlighter-rouge">findNext</code> Boolean - Whether the operation is first request or a follow up, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">matchCase</code> Boolean - Whether search should be case-sensitive, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">wordStart</code> Boolean - Whether to look only at the start of words. defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">medialCapitalAsWordStart</code> Boolean - When combined with <code class="highlighter-rouge">wordStart</code>, accepts a match in the middle of a word if the match begins with an uppercase letter followed by a lowercase or non-letter. Accepts several other intra-word matches, defaults to <code class="highlighter-rouge">false</code>.</li>\n</ul>Starts a request to find all matches for the text in the web page and returns an Integer representing the request id used for the request. The result of the request can be obtained by subscribing to found-in-page event.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.findInPage	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">text</code> String - Content to be searched, must not be empty.</li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul>\n<li><code class="highlighter-rouge">forward</code> Boolean - Whether to search forward or backward, defaults to <code class="highlighter-rouge">true</code>.</li>\n<li><code class="highlighter-rouge">findNext</code> Boolean - Whether the operation is first request or a follow up, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">matchCase</code> Boolean - Whether search should be case-sensitive, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">wordStart</code> Boolean - Whether to look only at the start of words. defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">medialCapitalAsWordStart</code> Boolean - When combined with <code class="highlighter-rouge">wordStart</code>, accepts a match in the middle of a word if the match begins with an uppercase letter followed by a lowercase or non-letter. Accepts several other intra-word matches, defaults to <code class="highlighter-rouge">false</code>.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">forward</code> Boolean - Whether to search forward or backward, defaults to <code class="highlighter-rouge">true</code>.</li>\n<li><code class="highlighter-rouge">findNext</code> Boolean - Whether the operation is first request or a follow up, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">matchCase</code> Boolean - Whether search should be case-sensitive, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">wordStart</code> Boolean - Whether to look only at the start of words. defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">medialCapitalAsWordStart</code> Boolean - When combined with <code class="highlighter-rouge">wordStart</code>, accepts a match in the middle of a word if the match begins with an uppercase letter followed by a lowercase or non-letter. Accepts several other intra-word matches, defaults to <code class="highlighter-rouge">false</code>.</li>\n</ul>Starts a request to find all matches for the text in the web page and returns an Integer representing the request id used for the request. The result of the request can be obtained by subscribing to found-in-page event.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.getTitle	A										<section class="prog__container">Returns String - The title of guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.getTitle	A										<section class="prog__container">Returns String - The title of guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.getURL	A										<section class="prog__container">Returns String - The URL of guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.getURL	A										<section class="prog__container">Returns String - The URL of guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.getUserAgent	A										<section class="prog__container">Returns String - The user agent for guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.getUserAgent	A										<section class="prog__container">Returns String - The user agent for guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.getWebContents	A										<section class="prog__container">Returns WebContents - The web contents associated with this webview.\n\nThe following DOM events are available to the webview tag:\n\n</section>	http://electron.atom.io/docs/api/
<webview>.getWebContents	A										<section class="prog__container">Returns WebContents - The web contents associated with this webview.\n\nThe following DOM events are available to the webview tag:\n\n</section>	http://electron.atom.io/docs/api/
<webview>.goBack	A										<section class="prog__container">Makes the guest page go back.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.goBack	A										<section class="prog__container">Makes the guest page go back.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.goForward	A										<section class="prog__container">Makes the guest page go forward.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.goForward	A										<section class="prog__container">Makes the guest page go forward.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.goToIndex	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">index</code> Integer</li>\n</ul>Navigates to the specified absolute index.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.goToIndex	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">index</code> Integer</li>\n</ul>Navigates to the specified absolute index.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.goToOffset	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">offset</code> Integer</li>\n</ul>Navigates to the specified offset from the  current entry .\n\n</section>	http://electron.atom.io/docs/api/
<webview>.goToOffset	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">offset</code> Integer</li>\n</ul>Navigates to the specified offset from the  current entry .\n\n</section>	http://electron.atom.io/docs/api/
<webview>.insertCSS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">css</code> String</li>\n</ul>Injects CSS into the guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.insertCSS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">css</code> String</li>\n</ul>Injects CSS into the guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.insertText	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul>Inserts text to the focused element.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.insertText	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul>Inserts text to the focused element.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.inspectElement	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n</ul>Starts inspecting element at position (x, y) of guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.inspectElement	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n</ul>Starts inspecting element at position (x, y) of guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.inspectServiceWorker	A										<section class="prog__container">Opens the DevTools for the service worker context present in the guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.inspectServiceWorker	A										<section class="prog__container">Opens the DevTools for the service worker context present in the guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.isAudioMuted	A										<section class="prog__container">Returns Boolean - Whether guest page has been muted.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.isAudioMuted	A										<section class="prog__container">Returns Boolean - Whether guest page has been muted.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.isCrashed	A										<section class="prog__container">Returns Boolean - Whether the renderer process has crashed.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.isCrashed	A										<section class="prog__container">Returns Boolean - Whether the renderer process has crashed.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.isDevToolsFocused	A										<section class="prog__container">Returns Boolean - Whether DevTools window of guest page is focused.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.isDevToolsFocused	A										<section class="prog__container">Returns Boolean - Whether DevTools window of guest page is focused.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.isDevToolsOpened	A										<section class="prog__container">Returns Boolean - Whether guest page has a DevTools window attached.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.isDevToolsOpened	A										<section class="prog__container">Returns Boolean - Whether guest page has a DevTools window attached.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.isLoading	A										<section class="prog__container">Returns Boolean - Whether guest page is still loading resources.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.isLoading	A										<section class="prog__container">Returns Boolean - Whether guest page is still loading resources.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.isWaitingForResponse	A										<section class="prog__container">Returns Boolean - Whether the guest page is waiting for a first-response for the main resource of the page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.isWaitingForResponse	A										<section class="prog__container">Returns Boolean - Whether the guest page is waiting for a first-response for the main resource of the page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.loadURL	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">url</code> URL</li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul>\n<li><code class="highlighter-rouge">httpReferrer</code> String (optional) - A HTTP Referrer url.</li>\n<li><code class="highlighter-rouge">userAgent</code> String (optional) - A user agent originating the request.</li>\n<li><code class="highlighter-rouge">extraHeaders</code> String (optional) - Extra headers separated by  \n </li>\n<li><code class="highlighter-rouge">postData</code> (<a href="/docs/api/structures/upload-raw-data">UploadRawData</a> | <a href="/docs/api/structures/upload-file">UploadFile</a> | <a href="/docs/api/structures/upload-file-system">UploadFileSystem</a> | <a href="/docs/api/structures/upload-blob">UploadBlob</a>)[] - (optional)</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">httpReferrer</code> String (optional) - A HTTP Referrer url.</li>\n<li><code class="highlighter-rouge">userAgent</code> String (optional) - A user agent originating the request.</li>\n<li><code class="highlighter-rouge">extraHeaders</code> String (optional) - Extra headers separated by  \n </li>\n<li><code class="highlighter-rouge">postData</code> (<a href="/docs/api/structures/upload-raw-data">UploadRawData</a> | <a href="/docs/api/structures/upload-file">UploadFile</a> | <a href="/docs/api/structures/upload-file-system">UploadFileSystem</a> | <a href="/docs/api/structures/upload-blob">UploadBlob</a>)[] - (optional)</li>\n</ul>Loads the url in the webview, the url must contain the protocol prefix, e.g. the http:// or file://.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.loadURL	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">url</code> URL</li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul>\n<li><code class="highlighter-rouge">httpReferrer</code> String (optional) - A HTTP Referrer url.</li>\n<li><code class="highlighter-rouge">userAgent</code> String (optional) - A user agent originating the request.</li>\n<li><code class="highlighter-rouge">extraHeaders</code> String (optional) - Extra headers separated by  \n </li>\n<li><code class="highlighter-rouge">postData</code> (<a href="/docs/api/structures/upload-raw-data">UploadRawData</a> | <a href="/docs/api/structures/upload-file">UploadFile</a> | <a href="/docs/api/structures/upload-file-system">UploadFileSystem</a> | <a href="/docs/api/structures/upload-blob">UploadBlob</a>)[] - (optional)</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">httpReferrer</code> String (optional) - A HTTP Referrer url.</li>\n<li><code class="highlighter-rouge">userAgent</code> String (optional) - A user agent originating the request.</li>\n<li><code class="highlighter-rouge">extraHeaders</code> String (optional) - Extra headers separated by  \n </li>\n<li><code class="highlighter-rouge">postData</code> (<a href="/docs/api/structures/upload-raw-data">UploadRawData</a> | <a href="/docs/api/structures/upload-file">UploadFile</a> | <a href="/docs/api/structures/upload-file-system">UploadFileSystem</a> | <a href="/docs/api/structures/upload-blob">UploadBlob</a>)[] - (optional)</li>\n</ul>Loads the url in the webview, the url must contain the protocol prefix, e.g. the http:// or file://.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.openDevTools	A										<section class="prog__container">Opens a DevTools window for guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.openDevTools	A										<section class="prog__container">Opens a DevTools window for guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.paste	A										<section class="prog__container">Executes editing command paste in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.paste	A										<section class="prog__container">Executes editing command paste in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.pasteAndMatchStyle	A										<section class="prog__container">Executes editing command pasteAndMatchStyle in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.pasteAndMatchStyle	A										<section class="prog__container">Executes editing command pasteAndMatchStyle in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.print	A										<section class="prog__container">Prints webview s web page. Same as webContents.print([options]).\n\n</section>	http://electron.atom.io/docs/api/
<webview>.print	A										<section class="prog__container">Prints webview s web page. Same as webContents.print([options]).\n\n</section>	http://electron.atom.io/docs/api/
<webview>.printToPDF	A										<section class="prog__container">Prints webview s web page as PDF, Same as webContents.printToPDF(options, callback).\n\n</section>	http://electron.atom.io/docs/api/
<webview>.printToPDF	A										<section class="prog__container">Prints webview s web page as PDF, Same as webContents.printToPDF(options, callback).\n\n</section>	http://electron.atom.io/docs/api/
<webview>.redo	A										<section class="prog__container">Executes editing command redo in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.redo	A										<section class="prog__container">Executes editing command redo in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.reload	A										<section class="prog__container">Reloads the guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.reload	A										<section class="prog__container">Reloads the guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.reloadIgnoringCache	A										<section class="prog__container">Reloads the guest page and ignores cache.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.reloadIgnoringCache	A										<section class="prog__container">Reloads the guest page and ignores cache.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.replace	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul>Executes editing command replace in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.replace	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul>Executes editing command replace in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.replaceMisspelling	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul>Executes editing command replaceMisspelling in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.replaceMisspelling	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul>Executes editing command replaceMisspelling in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.selectAll	A										<section class="prog__container">Executes editing command selectAll in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.selectAll	A										<section class="prog__container">Executes editing command selectAll in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.send	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">arg</code> (optional)</li>\n</ul>Send an asynchronous message to renderer process via channel, you can also send arbitrary arguments. The renderer process can handle the message by listening to the channel event with the ipcRenderer module.\n\nSee webContents.send for examples.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.send	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">arg</code> (optional)</li>\n</ul>Send an asynchronous message to renderer process via channel, you can also send arbitrary arguments. The renderer process can handle the message by listening to the channel event with the ipcRenderer module.\n\nSee webContents.send for examples.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.sendInputEvent	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">event</code> Object</li>\n</ul>Sends an input event to the page.\n\nSee webContents.sendInputEvent for detailed description of event object.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.sendInputEvent	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">event</code> Object</li>\n</ul>Sends an input event to the page.\n\nSee webContents.sendInputEvent for detailed description of event object.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.setAudioMuted	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">muted</code> Boolean</li>\n</ul>Set guest page muted.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.setAudioMuted	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">muted</code> Boolean</li>\n</ul>Set guest page muted.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.setUserAgent	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">userAgent</code> String</li>\n</ul>Overrides the user agent for the guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.setUserAgent	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">userAgent</code> String</li>\n</ul>Overrides the user agent for the guest page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.setZoomFactor	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">factor</code> Number - Zoom factor.</li>\n</ul>Changes the zoom factor to the specified factor. Zoom factor is zoom percent divided by 100, so 300% = 3.0.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.setZoomFactor	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">factor</code> Number - Zoom factor.</li>\n</ul>Changes the zoom factor to the specified factor. Zoom factor is zoom percent divided by 100, so 300% = 3.0.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.setZoomLevel	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">level</code> Number - Zoom level</li>\n</ul>Changes the zoom level to the specified level. The original size is 0 and each increment above or below represents zooming 20% larger or smaller to default limits of 300% and 50% of original size, respectively.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.setZoomLevel	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">level</code> Number - Zoom level</li>\n</ul>Changes the zoom level to the specified level. The original size is 0 and each increment above or below represents zooming 20% larger or smaller to default limits of 300% and 50% of original size, respectively.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.showDefinitionForSelection macOS	A										<section class="prog__container">Shows pop-up dictionary that searches the selected word on the page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.showDefinitionForSelection macOS	A										<section class="prog__container">Shows pop-up dictionary that searches the selected word on the page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.stop	A										<section class="prog__container">Stops any pending navigation.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.stop	A										<section class="prog__container">Stops any pending navigation.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.stopFindInPage	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">action</code> String - Specifies the action to take place when ending <a href="/docs/api/web-view-tag#webviewtagfindinpage"><code class="highlighter-rouge">&lt;webview&gt;.findInPage</code></a> request.\n    <ul>\n<li><code class="highlighter-rouge">clearSelection</code> - Clear the selection.</li>\n<li><code class="highlighter-rouge">keepSelection</code> - Translate the selection into a normal selection.</li>\n<li><code class="highlighter-rouge">activateSelection</code> - Focus and click the selection node.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">clearSelection</code> - Clear the selection.</li>\n<li><code class="highlighter-rouge">keepSelection</code> - Translate the selection into a normal selection.</li>\n<li><code class="highlighter-rouge">activateSelection</code> - Focus and click the selection node.</li>\n</ul>Stops any findInPage request for the webview with the provided action.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.stopFindInPage	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">action</code> String - Specifies the action to take place when ending <a href="/docs/api/webview-tag#webviewtagfindinpage"><code class="highlighter-rouge">&lt;webview&gt;.findInPage</code></a> request.\n    <ul>\n<li><code class="highlighter-rouge">clearSelection</code> - Clear the selection.</li>\n<li><code class="highlighter-rouge">keepSelection</code> - Translate the selection into a normal selection.</li>\n<li><code class="highlighter-rouge">activateSelection</code> - Focus and click the selection node.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">clearSelection</code> - Clear the selection.</li>\n<li><code class="highlighter-rouge">keepSelection</code> - Translate the selection into a normal selection.</li>\n<li><code class="highlighter-rouge">activateSelection</code> - Focus and click the selection node.</li>\n</ul>Stops any findInPage request for the webview with the provided action.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.undo	A										<section class="prog__container">Executes editing command undo in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.undo	A										<section class="prog__container">Executes editing command undo in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.unselect	A										<section class="prog__container">Executes editing command unselect in page.\n\n</section>	http://electron.atom.io/docs/api/
<webview>.unselect	A										<section class="prog__container">Executes editing command unselect in page.\n\n</section>	http://electron.atom.io/docs/api/
BrowserWindow.addDevToolsExtension	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">path</code> String</li>\n</ul>Adds DevTools extension located at path, and returns extension s name.\n\nThe extension will be remembered so you only need to call this API once, this API is not for programming use. If you try to add an extension that has already been loaded, this method will not return and instead log a warning to the console.\n\nThe method will also not return if the extension s manifest is missing or incomplete.\n\nNote: This API cannot be called before the ready event of the app module is emitted.\n\n</section>	http://electron.atom.io/docs/api/
BrowserWindow.fromId	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">id</code> Integer</li>\n</ul>Returns BrowserWindow - The window with the given id.\n\n</section>	http://electron.atom.io/docs/api/
BrowserWindow.fromWebContents	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">webContents</code> <a href="/docs/api/web-contents">WebContents</a></li>\n</ul>Returns BrowserWindow - The window that owns the given webContents.\n\n</section>	http://electron.atom.io/docs/api/
BrowserWindow.getAllWindows	A										<section class="prog__container">Returns BrowserWindow[] - An array of all opened browser windows.\n\n</section>	http://electron.atom.io/docs/api/
BrowserWindow.getDevToolsExtensions	A										<section class="prog__container">Returns Object - The keys are the extension names and each value is an Object containing name and version properties.\n\nTo check if a DevTools extension is installed you can run the following:\n\n<pre><code>const {BrowserWindow} = require('electron')\n\nlet installed = BrowserWindow.getDevToolsExtensions().hasOwnProperty('devtron')\nconsole.log(installed)\n\n</code></pre>Note: This API cannot be called before the ready event of the app module is emitted.\n\n</section>	http://electron.atom.io/docs/api/
BrowserWindow.getFocusedWindow	A										<section class="prog__container">Returns BrowserWindow - The window that is focused in this application, otherwise returns null.\n\n</section>	http://electron.atom.io/docs/api/
BrowserWindow.removeDevToolsExtension	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">name</code> String</li>\n</ul>Remove a DevTools extension by name.\n\nNote: This API cannot be called before the ready event of the app module is emitted.\n\n</section>	http://electron.atom.io/docs/api/
Menu.buildFromTemplate	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">template</code> MenuItemConstructorOptions[]</li>\n</ul>Returns Menu\n\nGenerally, the template is just an array of options for constructing a MenuItem. The usage can be referenced above.\n\nYou can also attach other fields to the element of the template and they will become properties of the constructed menu items.\n\n</section>	http://electron.atom.io/docs/api/
Menu.getApplicationMenu	A										<section class="prog__container">Returns Menu - The application menu, if set, or null, if not set.\n\n</section>	http://electron.atom.io/docs/api/
Menu.sendActionToFirstResponder macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">action</code> String</li>\n</ul>Sends the action to the first responder of application. This is used for emulating default Cocoa menu behaviors, usually you would just use the role property of MenuItem.\n\nSee the macOS Cocoa Event Handling Guide for more information on macOS  native actions.\n\n</section>	http://electron.atom.io/docs/api/
Menu.setApplicationMenu	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">menu</code> Menu</li>\n</ul>Sets menu as the application menu on macOS. On Windows and Linux, the menu will be set as each window s top menu.\n\nNote: This API has to be called after the ready event of app module.\n\n</section>	http://electron.atom.io/docs/api/
accelerator	A										<section class="prog__container">Define keyboard shortcuts.\n\nAccelerators are Strings that can contain multiple modifiers and key codes, combined by the + character, and are used to define keyboard shortcuts throughout your application.\n\nExamples:\n\n<ul>\n<li><code class="highlighter-rouge">CommandOrControl+A</code></li>\n<li><code class="highlighter-rouge">CommandOrControl+Shift+Z</code></li>\n</ul>Shortcuts are registered with the globalShortcut module using the register method, i.e.\n\n<pre><code>const {app, globalShortcut} = require('electron')\n\napp.on('ready', () => {\n  // Register a 'CommandOrControl+Y' shortcut listener.\n  globalShortcut.register('CommandOrControl+Y', () => {\n    // Do stuff when Y and either Command/Control is pressed.\n  })\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/
app	A										<section class="prog__container">Control your application s event lifecycle.\n\nProcess: Main\n\nThe following example shows how to quit the application when the last window is closed:\n\n<pre><code>const {app} = require('electron')\napp.on('window-all-closed', () => {\n  app.quit()\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/
app.addRecentDocument macOS Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">path</code> String</li>\n</ul>Adds path to the recent documents list.\n\nThis list is managed by the OS. On Windows you can visit the list from the task bar, and on macOS you can visit it from dock menu.\n\n</section>	http://electron.atom.io/docs/api/
app.clearRecentDocuments macOS Windows	A										<section class="prog__container">Clears the recent documents list.\n\n</section>	http://electron.atom.io/docs/api/
app.commandLine.appendArgument	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">value</code> String - The argument to append to the command line</li>\n</ul>Append an argument to Chromium s command line. The argument will be quoted correctly.\n\nNote: This will not affect process.argv.\n\n</section>	http://electron.atom.io/docs/api/
app.commandLine.appendSwitch	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">switch</code> String - A command-line switch</li>\n<li><code class="highlighter-rouge">value</code> String (optional) - A value for the given switch</li>\n</ul>Append a switch (with optional value) to Chromium s command line.\n\nNote: This will not affect process.argv, and is mainly used by developers to control some low-level Chromium behaviors.\n\n</section>	http://electron.atom.io/docs/api/
app.disableHardwareAcceleration	A										<section class="prog__container">Disables hardware acceleration for current app.\n\nThis method can only be called before app is ready.\n\n</section>	http://electron.atom.io/docs/api/
app.dock.bounce macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">type</code> String (optional) - Can be <code class="highlighter-rouge">critical</code> or <code class="highlighter-rouge">informational</code>. The default is <code class="highlighter-rouge">informational</code></li>\n</ul>When critical is passed, the dock icon will bounce until either the application becomes active or the request is canceled.\n\nWhen informational is passed, the dock icon will bounce for one second. However, the request remains active until either the application becomes active or the request is canceled.\n\nReturns Integer an ID representing the request.\n\n</section>	http://electron.atom.io/docs/api/
app.dock.cancelBounce macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">id</code> Integer</li>\n</ul>Cancel the bounce of id.\n\n</section>	http://electron.atom.io/docs/api/
app.dock.downloadFinished macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">filePath</code> String</li>\n</ul>Bounces the Downloads stack if the filePath is inside the Downloads folder.\n\n</section>	http://electron.atom.io/docs/api/
app.dock.getBadge macOS	A										<section class="prog__container">Returns String - The badge string of the dock.\n\n</section>	http://electron.atom.io/docs/api/
app.dock.hide macOS	A										<section class="prog__container">Hides the dock icon.\n\n</section>	http://electron.atom.io/docs/api/
app.dock.isVisible macOS	A										<section class="prog__container">Returns Boolean - Whether the dock icon is visible. The app.dock.show() call is asynchronous so this method might not return true immediately after that call.\n\n</section>	http://electron.atom.io/docs/api/
app.dock.setBadge macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul>Sets the string to be displayed in the dock s badging area.\n\n</section>	http://electron.atom.io/docs/api/
app.dock.setMenu macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">menu</code> <a href="/docs/api/menu">Menu</a></li>\n</ul>Sets the application s dock menu.\n\n</section>	http://electron.atom.io/docs/api/
app.dock.show macOS	A										<section class="prog__container">Shows the dock icon.\n\n</section>	http://electron.atom.io/docs/api/
app.exit	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">exitCode</code> Integer (optional)</li>\n</ul>Exits immediately with exitCode. exitCode defaults to 0.\n\nAll windows will be closed immediately without asking user and the before-quit and will-quit events will not be emitted.\n\n</section>	http://electron.atom.io/docs/api/
app.focus	A										<section class="prog__container">On Linux, focuses on the first visible window. On macOS, makes the application the active app. On Windows, focuses on the application s first window.\n\n</section>	http://electron.atom.io/docs/api/
app.getAppPath	A										<section class="prog__container">Returns String - The current application directory.\n\n</section>	http://electron.atom.io/docs/api/
app.getBadgeCount Linux macOS	A										<section class="prog__container">Returns Integer - The current value displayed in the counter badge.\n\n</section>	http://electron.atom.io/docs/api/
app.getCurrentActivityType macOS	A										<section class="prog__container">Returns String - The type of the currently running activity.\n\n</section>	http://electron.atom.io/docs/api/
app.getJumpListSettings Windows	A										<section class="prog__container">Returns Object:\n\n<ul>\n<li><code class="highlighter-rouge">minItems</code> Integer - The minimum number of items that will be shown in the Jump List (for a more detailed description of this value see the <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd378398(v=vs.85).aspx">MSDN docs</a>).</li>\n<li><code class="highlighter-rouge">removedItems</code> <a href="/docs/api/structures/jump-list-item">JumpListItem[]</a> - Array of <code class="highlighter-rouge">JumpListItem</code> objects that correspond to items that the user has explicitly removed from custom categories in the Jump List. These items must not be re-added to the Jump List in the <strong>next</strong> call to <code class="highlighter-rouge">app.setJumpList()</code>, Windows will not display any custom category that contains any of the removed items.</li>\n</ul></section>	http://electron.atom.io/docs/api/
app.getLocale	A										<section class="prog__container">Returns String - The current application locale. Possible return values are documented here.\n\nNote: When distributing your packaged app, you have to also ship the locales folder.\n\nNote: On Windows you have to call it after the ready events gets emitted.\n\n</section>	http://electron.atom.io/docs/api/
app.getLoginItemSettings macOS Windows	A										<section class="prog__container">Returns Object:\n\n<ul>\n<li><code class="highlighter-rouge">openAtLogin</code> Boolean - <code class="highlighter-rouge">true</code> if the app is set to open at login.</li>\n<li><code class="highlighter-rouge">openAsHidden</code> Boolean - <code class="highlighter-rouge">true</code> if the app is set to open as hidden at login. This setting is only supported on macOS.</li>\n<li><code class="highlighter-rouge">wasOpenedAtLogin</code> Boolean - <code class="highlighter-rouge">true</code> if the app was opened at login automatically. This setting is only supported on macOS.</li>\n<li><code class="highlighter-rouge">wasOpenedAsHidden</code> Boolean - <code class="highlighter-rouge">true</code> if the app was opened as a hidden login item. This indicates that the app should not open any windows at startup. This setting is only supported on macOS.</li>\n<li><code class="highlighter-rouge">restoreState</code> Boolean - <code class="highlighter-rouge">true</code> if the app was opened as a login item that should restore the state from the previous session. This indicates that the app should restore the windows that were open the last time the app was closed. This setting is only supported on macOS.</li>\n</ul>Note: This API has no effect on MAS builds.\n\n</section>	http://electron.atom.io/docs/api/
app.getName	A										<section class="prog__container">Returns String - The current application s name, which is the name in the application s package.json file.\n\nUsually the name field of package.json is a short lowercased name, according to the npm modules spec. You should usually also specify a productName field, which is your application s full capitalized name, and which will be preferred over name by Electron.\n\n</section>	http://electron.atom.io/docs/api/
app.getPath	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">name</code> String</li>\n</ul>Returns String - A path to a special directory or file associated with name. On failure an Error is thrown.\n\nYou can request the following paths by the name:\n\n<ul>\n<li><code class="highlighter-rouge">home</code> User s home directory.</li>\n<li><code class="highlighter-rouge">appData</code> Per-user application data directory, which by default points to:\n    <ul>\n<li><code class="highlighter-rouge">%APPDATA%</code> on Windows</li>\n<li><code class="highlighter-rouge">$XDG_CONFIG_HOME</code> or <code class="highlighter-rouge">~/.config</code> on Linux</li>\n<li><code class="highlighter-rouge">~/Library/Application Support</code> on macOS</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">userData</code> The directory for storing your app s configuration files, which by default it is the <code class="highlighter-rouge">appData</code> directory appended with your app s name.</li>\n<li><code class="highlighter-rouge">temp</code> Temporary directory.</li>\n<li><code class="highlighter-rouge">exe</code> The current executable file.</li>\n<li><code class="highlighter-rouge">module</code> The <code class="highlighter-rouge">libchromiumcontent</code> library.</li>\n<li><code class="highlighter-rouge">desktop</code> The current user s Desktop directory.</li>\n<li><code class="highlighter-rouge">documents</code> Directory for a user s  My Documents .</li>\n<li><code class="highlighter-rouge">downloads</code> Directory for a user s downloads.</li>\n<li><code class="highlighter-rouge">music</code> Directory for a user s music.</li>\n<li><code class="highlighter-rouge">pictures</code> Directory for a user s pictures.</li>\n<li><code class="highlighter-rouge">videos</code> Directory for a user s videos.</li>\n<li><code class="highlighter-rouge">pepperFlashSystemPlugin</code> Full path to the system version of the Pepper Flash plugin.</li>\n</ul><ul>\n<li><code class="highlighter-rouge">%APPDATA%</code> on Windows</li>\n<li><code class="highlighter-rouge">$XDG_CONFIG_HOME</code> or <code class="highlighter-rouge">~/.config</code> on Linux</li>\n<li><code class="highlighter-rouge">~/Library/Application Support</code> on macOS</li>\n</ul></section>	http://electron.atom.io/docs/api/
app.getVersion	A										<section class="prog__container">Returns String - The version of the loaded application. If no version is found in the application s package.json file, the version of the current bundle or executable is returned.\n\n</section>	http://electron.atom.io/docs/api/
app.hide macOS	A										<section class="prog__container">Hides all application windows without minimizing them.\n\n</section>	http://electron.atom.io/docs/api/
app.importCertificate LINUX	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul>\n<li><code class="highlighter-rouge">certificate</code> String - Path for the pkcs12 file.</li>\n<li><code class="highlighter-rouge">password</code> String - Passphrase for the certificate.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">result</code> Integer - Result of import.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">certificate</code> String - Path for the pkcs12 file.</li>\n<li><code class="highlighter-rouge">password</code> String - Passphrase for the certificate.</li>\n</ul><ul>\n<li><code class="highlighter-rouge">result</code> Integer - Result of import.</li>\n</ul>Imports the certificate in pkcs12 format into the platform certificate store. callback is called with the result of import operation, a value of 0 indicates success while any other value indicates failure according to chromium net_error_list.\n\n</section>	http://electron.atom.io/docs/api/
app.isAccessibilitySupportEnabled macOS Windows	A										<section class="prog__container">Returns Boolean - true if Chrome s accessibility support is enabled, false otherwise. This API will return true if the use of assistive technologies, such as screen readers, has been detected. See https://www.chromium.org/developers/design-documents/accessibility for more details.\n\n</section>	http://electron.atom.io/docs/api/
app.isDefaultProtocolClient macOS Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">protocol</code> String - The name of your protocol, without <code class="highlighter-rouge">://</code>.</li>\n<li><code class="highlighter-rouge">path</code> String (optional) <em>Windows</em> - Defaults to <code class="highlighter-rouge">process.execPath</code></li>\n<li><code class="highlighter-rouge">args</code> String[] (optional) <em>Windows</em> - Defaults to an empty array</li>\n</ul>Returns Boolean\n\nThis method checks if the current executable is the default handler for a protocol (aka URI scheme). If so, it will return true. Otherwise, it will return false.\n\nNote: On macOS, you can use this method to check if the app has been registered as the default protocol handler for a protocol. You can also verify this by checking ~/Library/Preferences/com.apple.LaunchServices.plist on the macOS machine. Please refer to Apple s documentation for details.\n\nThe API uses the Windows Registry and LSCopyDefaultHandlerForURLScheme internally.\n\n</section>	http://electron.atom.io/docs/api/
app.isReady	A										<section class="prog__container">Returns Boolean - true if Electron has finished initializing, false otherwise.\n\n</section>	http://electron.atom.io/docs/api/
app.isUnityRunning Linux	A										<section class="prog__container">Returns Boolean - Whether the current desktop environment is Unity launcher.\n\n</section>	http://electron.atom.io/docs/api/
app.makeSingleInstance	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">argv</code> String[] - An array of the second instance s command line arguments</li>\n<li><code class="highlighter-rouge">workingDirectory</code> String - The second instance s working directory</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">argv</code> String[] - An array of the second instance s command line arguments</li>\n<li><code class="highlighter-rouge">workingDirectory</code> String - The second instance s working directory</li>\n</ul>This method makes your application a Single Instance Application - instead of allowing multiple instances of your app to run, this will ensure that only a single instance of your app is running, and other instances signal this instance and exit.\n\ncallback will be called with callback(argv, workingDirectory) when a second instance has been executed. argv is an Array of the second instance s command line arguments, and workingDirectory is its current working directory. Usually applications respond to this by making their primary window focused and non-minimized.\n\nThe callback is guaranteed to be executed after the ready event of app gets emitted.\n\nThis method returns false if your process is the primary instance of the application and your app should continue loading. And returns true if your process has sent its parameters to another instance, and you should immediately quit.\n\nOn macOS the system enforces single instance automatically when users try to open a second instance of your app in Finder, and the open-file and open-url events will be emitted for that. However when users start your app in command line the system s single instance mechanism will be bypassed and you have to use this method to ensure single instance.\n\nAn example of activating the window of primary instance when a second instance starts:\n\n<pre><code>const {app} = require('electron')\nlet myWindow = null\n\nconst shouldQuit = app.makeSingleInstance((commandLine, workingDirectory) => {\n  // Someone tried to run a second instance, we should focus our window.\n  if (myWindow) {\n    if (myWindow.isMinimized()) myWindow.restore()\n    myWindow.focus()\n  }\n})\n\nif (shouldQuit) {\n  app.quit()\n}\n\n// Create myWindow, load the rest of the app, etc...\napp.on('ready', () => {\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/
app.quit	A										<section class="prog__container">Try to close all windows. The before-quit event will be emitted first. If all windows are successfully closed, the will-quit event will be emitted and by default the application will terminate.\n\nThis method guarantees that all beforeunload and unload event handlers are correctly executed. It is possible that a window cancels the quitting by returning false in the beforeunload event handler.\n\n</section>	http://electron.atom.io/docs/api/
app.relaunch	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul>\n<li><code class="highlighter-rouge">args</code> String[] - (optional)</li>\n<li><code class="highlighter-rouge">execPath</code> String (optional)</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">args</code> String[] - (optional)</li>\n<li><code class="highlighter-rouge">execPath</code> String (optional)</li>\n</ul>Relaunches the app when current instance exits.\n\nBy default the new instance will use the same working directory and command line arguments with current instance. When args is specified, the args will be passed as command line arguments instead. When execPath is specified, the execPath will be executed for relaunch instead of current app.\n\nNote that this method does not quit the app when executed, you have to call app.quit or app.exit after calling app.relaunch to make the app restart.\n\nWhen app.relaunch is called for multiple times, multiple instances will be started after current instance exited.\n\nAn example of restarting current instance immediately and adding a new command line argument to the new instance:\n\n<pre><code>const {app} = require('electron')\n\napp.relaunch({args: process.argv.slice(1).concat(['--relaunch'])})\napp.exit(0)\n\n</code></pre></section>	http://electron.atom.io/docs/api/
app.releaseSingleInstance	A										<section class="prog__container">Releases all locks that were created by makeSingleInstance. This will allow multiple instances of the application to once again run side by side.\n\n</section>	http://electron.atom.io/docs/api/
app.removeAsDefaultProtocolClient macOS Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">protocol</code> String - The name of your protocol, without <code class="highlighter-rouge">://</code>.</li>\n<li><code class="highlighter-rouge">path</code> String (optional) <em>Windows</em> - Defaults to <code class="highlighter-rouge">process.execPath</code></li>\n<li><code class="highlighter-rouge">args</code> String[] (optional) <em>Windows</em> - Defaults to an empty array</li>\n</ul>Returns Boolean - Whether the call succeeded.\n\nThis method checks if the current executable as the default handler for a protocol (aka URI scheme). If so, it will remove the app as the default handler.\n\n</section>	http://electron.atom.io/docs/api/
app.setAboutPanelOptions macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul>\n<li><code class="highlighter-rouge">applicationName</code> String (optional) - The app s name.</li>\n<li><code class="highlighter-rouge">applicationVersion</code> String (optional) - The app s version.</li>\n<li><code class="highlighter-rouge">copyright</code> String (optional) - Copyright information.</li>\n<li><code class="highlighter-rouge">credits</code> String (optional) - Credit information.</li>\n<li><code class="highlighter-rouge">version</code> String (optional) - The app s build version number.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">applicationName</code> String (optional) - The app s name.</li>\n<li><code class="highlighter-rouge">applicationVersion</code> String (optional) - The app s version.</li>\n<li><code class="highlighter-rouge">copyright</code> String (optional) - Copyright information.</li>\n<li><code class="highlighter-rouge">credits</code> String (optional) - Credit information.</li>\n<li><code class="highlighter-rouge">version</code> String (optional) - The app s build version number.</li>\n</ul>Set the about panel options. This will override the values defined in the app s .plist file. See the Apple docs for more details.\n\n</section>	http://electron.atom.io/docs/api/
app.setAppUserModelId Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">id</code> String</li>\n</ul>Changes the Application User Model ID to id.\n\n</section>	http://electron.atom.io/docs/api/
app.setAsDefaultProtocolClient macOS Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">protocol</code> String - The name of your protocol, without <code class="highlighter-rouge">://</code>. If you want your app to handle <code class="highlighter-rouge">electron://</code> links, call this method with <code class="highlighter-rouge">electron</code> as the parameter.</li>\n<li><code class="highlighter-rouge">path</code> String (optional) <em>Windows</em> - Defaults to <code class="highlighter-rouge">process.execPath</code></li>\n<li><code class="highlighter-rouge">args</code> String[] (optional) <em>Windows</em> - Defaults to an empty array</li>\n</ul>Returns Boolean - Whether the call succeeded.\n\nThis method sets the current executable as the default handler for a protocol (aka URI scheme). It allows you to integrate your app deeper into the operating system. Once registered, all links with your-protocol:// will be opened with the current executable. The whole link, including protocol, will be passed to your application as a parameter.\n\nOn Windows you can provide optional parameters path, the path to your executable, and args, an array of arguments to be passed to your executable when it launches.\n\nNote: On macOS, you can only register protocols that have been added to your app s info.plist, which can not be modified at runtime. You can however change the file with a simple text editor or script during build time. Please refer to Apple s documentation for details.\n\nThe API uses the Windows Registry and LSSetDefaultHandlerForURLScheme internally.\n\n</section>	http://electron.atom.io/docs/api/
app.setBadgeCount Linux macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">count</code> Integer</li>\n</ul>Returns Boolean - Whether the call succeeded.\n\nSets the counter badge for current app. Setting the count to 0 will hide the badge.\n\nOn macOS it shows on the dock icon. On Linux it only works for Unity launcher,\n\nNote: Unity launcher requires the exsistence of a .desktop file to work, for more information please read Desktop Environment Integration.\n\n</section>	http://electron.atom.io/docs/api/
app.setJumpList Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">categories</code> <a href="/docs/api/structures/jump-list-category">JumpListCategory[]</a> or <code class="highlighter-rouge">null</code> - Array of <code class="highlighter-rouge">JumpListCategory</code> objects.</li>\n</ul>Sets or removes a custom Jump List for the application, and returns one of the following strings:\n\n<ul>\n<li><code class="highlighter-rouge">ok</code> - Nothing went wrong.</li>\n<li><code class="highlighter-rouge">error</code> - One or more errors occurred, enable runtime logging to figure out the likely cause.</li>\n<li><code class="highlighter-rouge">invalidSeparatorError</code> - An attempt was made to add a separator to a custom category in the Jump List. Separators are only allowed in the standard <code class="highlighter-rouge">Tasks</code> category.</li>\n<li><code class="highlighter-rouge">fileTypeRegistrationError</code> - An attempt was made to add a file link to the Jump List for a file type the app isn t registered to handle.</li>\n<li><code class="highlighter-rouge">customCategoryAccessDeniedError</code> - Custom categories can t be added to the Jump List due to user privacy or group policy settings.</li>\n</ul>If categories is null the previously set custom Jump List (if any) will be replaced by the standard Jump List for the app (managed by Windows).\n\nNote: If a JumpListCategory object has neither the type nor the name property set then its type is assumed to be tasks. If the name property is set but the type property is omitted then the type is assumed to be custom.\n\nNote: Users can remove items from custom categories, and Windows will not allow a removed item to be added back into a custom category until after the next successful call to app.setJumpList(categories). Any attempt to re-add a removed item to a custom category earlier than that will result in the entire custom category being omitted from the Jump List. The list of removed items can be obtained using app.getJumpListSettings().\n\nHere s a very simple example of creating a custom Jump List:\n\n<pre><code>const {app} = require('electron')\n\napp.setJumpList([\n  {\n    type: 'custom',\n    name: 'Recent Projects',\n    items: [\n      { type: 'file', path: 'C:\\Projects\\project1.proj' },\n      { type: 'file', path: 'C:\\Projects\\project2.proj' }\n    ]\n  },\n  { // has a name so `type` is assumed to be "custom"\n    name: 'Tools',\n    items: [\n      {\n        type: 'task',\n        title: 'Tool A',\n        program: process.execPath,\n        args: '--run-tool-a',\n        icon: process.execPath,\n        iconIndex: 0,\n        description: 'Runs Tool A'\n      },\n      {\n        type: 'task',\n        title: 'Tool B',\n        program: process.execPath,\n        args: '--run-tool-b',\n        icon: process.execPath,\n        iconIndex: 0,\n        description: 'Runs Tool B'\n      }\n    ]\n  },\n  { type: 'frequent' },\n  { // has no name and no type so `type` is assumed to be "tasks"\n    items: [\n      {\n        type: 'task',\n        title: 'New Project',\n        program: process.execPath,\n        args: '--new-project',\n        description: 'Create a new project.'\n      },\n      { type: 'separator' },\n      {\n        type: 'task',\n        title: 'Recover Project',\n        program: process.execPath,\n        args: '--recover-project',\n        description: 'Recover Project'\n      }\n    ]\n  }\n])\n\n</code></pre></section>	http://electron.atom.io/docs/api/
app.setLoginItemSettings macOS Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">settings</code> Object\n    <ul>\n<li><code class="highlighter-rouge">openAtLogin</code> Boolean (optional) - <code class="highlighter-rouge">true</code> to open the app at login, <code class="highlighter-rouge">false</code> to remove the app as a login item. Defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">openAsHidden</code> Boolean (optional) - <code class="highlighter-rouge">true</code> to open the app as hidden. Defaults to <code class="highlighter-rouge">false</code>. The user can edit this setting from the System Preferences so <code class="highlighter-rouge">app.getLoginItemStatus().wasOpenedAsHidden</code> should be checked when the app is opened to know the current value. This setting is only supported on macOS.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">openAtLogin</code> Boolean (optional) - <code class="highlighter-rouge">true</code> to open the app at login, <code class="highlighter-rouge">false</code> to remove the app as a login item. Defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">openAsHidden</code> Boolean (optional) - <code class="highlighter-rouge">true</code> to open the app as hidden. Defaults to <code class="highlighter-rouge">false</code>. The user can edit this setting from the System Preferences so <code class="highlighter-rouge">app.getLoginItemStatus().wasOpenedAsHidden</code> should be checked when the app is opened to know the current value. This setting is only supported on macOS.</li>\n</ul>Set the app s login item settings.\n\nNote: This API has no effect on MAS builds.\n\n</section>	http://electron.atom.io/docs/api/
app.setName	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">name</code> String</li>\n</ul>Overrides the current application s name.\n\n</section>	http://electron.atom.io/docs/api/
app.setPath	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">name</code> String</li>\n<li><code class="highlighter-rouge">path</code> String</li>\n</ul>Overrides the path to a special directory or file associated with name. If the path specifies a directory that does not exist, the directory will be created by this method. On failure an Error is thrown.\n\nYou can only override paths of a name defined in app.getPath.\n\nBy default, web pages  cookies and caches will be stored under the userData directory. If you want to change this location, you have to override the userData path before the ready event of the app module is emitted.\n\n</section>	http://electron.atom.io/docs/api/
app.setUserActivity macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">type</code> String - Uniquely identifies the activity. Maps to <a href="https://developer.apple.com/library/ios/documentation/Foundation/Reference/NSUserActivity_Class/index.html#//apple_ref/occ/instp/NSUserActivity/activityType"><code class="highlighter-rouge">NSUserActivity.activityType</code></a>.</li>\n<li><code class="highlighter-rouge">userInfo</code> Object - App-specific state to store for use by another device.</li>\n<li><code class="highlighter-rouge">webpageURL</code> String (optional) - The webpage to load in a browser if no suitable app is installed on the resuming device. The scheme must be <code class="highlighter-rouge">http</code> or <code class="highlighter-rouge">https</code>.</li>\n</ul>Creates an NSUserActivity and sets it as the current activity. The activity is eligible for Handoff to another device afterward.\n\n</section>	http://electron.atom.io/docs/api/
app.setUserTasks Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">tasks</code> <a href="/docs/api/structures/task">Task[]</a> - Array of <code class="highlighter-rouge">Task</code> objects</li>\n</ul>Adds tasks to the Tasks category of the JumpList on Windows.\n\ntasks is an array of Task objects.\n\nReturns Boolean - Whether the call succeeded.\n\nNote: If you d like to customize the Jump List even more use app.setJumpList(categories) instead.\n\n</section>	http://electron.atom.io/docs/api/
app.show macOS	A										<section class="prog__container">Shows application windows after they were hidden. Does not automatically focus them.\n\n</section>	http://electron.atom.io/docs/api/
auto updater	A										<section class="prog__container">Enable apps to automatically update themselves.\n\nProcess: Main\n\nThe autoUpdater module provides an interface for the Squirrel framework.\n\nYou can quickly launch a multi-platform release server for distributing your application by using one of these projects:\n\n<ul>\n<li><a href="https://github.com/GitbookIO/nuts">nuts</a>: <em>A smart release server for your applications, using GitHub as a backend. Auto-updates with Squirrel (Mac &amp; Windows)</em></li>\n<li><a href="https://github.com/ArekSredzki/electron-release-server">electron-release-server</a>: <em>A fully featured, self-hosted release server for electron applications, compatible with auto-updater</em></li>\n<li><a href="https://github.com/Aluxian/squirrel-updates-server">squirrel-updates-server</a>: <em>A simple node.js server for Squirrel.Mac and Squirrel.Windows which uses GitHub releases</em></li>\n<li><a href="https://github.com/Arcath/squirrel-release-server">squirrel-release-server</a>: <em>A simple PHP application for Squirrel.Windows which reads updates from a folder. Supports delta updates.</em></li>\n</ul></section>	http://electron.atom.io/docs/api/
autoUpdater.checkForUpdates	A										<section class="prog__container">Asks the server whether there is an update. You must call setFeedURL before using this API.\n\n</section>	http://electron.atom.io/docs/api/
autoUpdater.getFeedURL	A										<section class="prog__container">Returns String - The current update feed URL.\n\n</section>	http://electron.atom.io/docs/api/
autoUpdater.setFeedURL	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">requestHeaders</code> Object <em>macOS</em> (optional) - HTTP request headers.</li>\n</ul>Sets the url and initialize the auto updater.\n\n</section>	http://electron.atom.io/docs/api/
browser window	A										<section class="prog__container">Create and control browser windows.\n\nProcess: Main\n\n<pre><code>// In the main process.\nconst {BrowserWindow} = require('electron')\n\n// Or use `remote` from the renderer process.\n// const {BrowserWindow} = require('electron').remote\n\nlet win = new BrowserWindow({width: 800, height: 600})\nwin.on('closed', () => {\n  win = null\n})\n\n// Load a remote URL\nwin.loadURL('https://github.com')\n\n// Or load a local HTML file\nwin.loadURL(`file://${__dirname}/app/index.html`)\n\n</code></pre></section>	http://electron.atom.io/docs/api/
browser window proxy	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/
chrome command line switches	A										<section class="prog__container">Command line switches supported by Electron.\n\nYou can use app.commandLine.appendSwitch to append them in your app s main script before the ready event of the app module is emitted:\n\n<pre><code>const {app} = require('electron')\napp.commandLine.appendSwitch('remote-debugging-port', '8315')\napp.commandLine.appendSwitch('host-rules', 'MAP * 127.0.0.1')\n\napp.on('ready', () => {\n  // Your code here\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/
client request	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/
clipboard	A										<section class="prog__container">Perform copy and paste operations on the system clipboard.\n\nProcess: Main, Renderer\n\nThe following example shows how to write a string to the clipboard:\n\n<pre><code>const {clipboard} = require('electron')\nclipboard.writeText('Example String')\n\n</code></pre>On X Window systems, there is also a selection clipboard. To manipulate it you need to pass selection to each method:\n\n<pre><code>const {clipboard} = require('electron')\nclipboard.writeText('Example String', 'selection')\nconsole.log(clipboard.readText('selection'))\n\n</code></pre></section>	http://electron.atom.io/docs/api/
clipboard.availableFormats	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul>Returns String[] - An array of supported formats for the clipboard type.\n\n</section>	http://electron.atom.io/docs/api/
clipboard.clear	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul>Clears the clipboard content.\n\n</section>	http://electron.atom.io/docs/api/
clipboard.has Experimental	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">data</code> String</li>\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul>Returns Boolean - Whether the clipboard supports the format of specified data.\n\n<pre><code>const {clipboard} = require('electron')\nconsole.log(clipboard.has('<p>selection</p>'))\n\n</code></pre></section>	http://electron.atom.io/docs/api/
clipboard.read Experimental	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">data</code> String</li>\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul>Returns String - Reads data from the clipboard.\n\n</section>	http://electron.atom.io/docs/api/
clipboard.readBookmark macOS Windows	A										<section class="prog__container">Returns Object:\n\n<ul>\n<li><code class="highlighter-rouge">title</code> String</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n</ul>Returns an Object containing title and url keys representing the bookmark in the clipboard. The title and url values will be empty strings when the bookmark is unavailable.\n\n</section>	http://electron.atom.io/docs/api/
clipboard.readFindText macOS	A										<section class="prog__container">Returns String - The text on the find pasteboard. This method uses synchronous IPC when called from the renderer process. The cached value is reread from the find pasteboard whenever the application is activated.\n\n</section>	http://electron.atom.io/docs/api/
clipboard.readHTML	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul>Returns String - The content in the clipboard as markup.\n\n</section>	http://electron.atom.io/docs/api/
clipboard.readImage	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul>Returns NativeImage - The image content in the clipboard.\n\n</section>	http://electron.atom.io/docs/api/
clipboard.readRTF	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul>Returns String - The content in the clipboard as RTF.\n\n</section>	http://electron.atom.io/docs/api/
clipboard.readText	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul>Returns String - The content in the clipboard as plain text.\n\n</section>	http://electron.atom.io/docs/api/
clipboard.writeBookmark macOS Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">title</code> String</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul>Writes the title and url into the clipboard as a bookmark.\n\nNote: Most apps on Windows don t support pasting bookmarks into them so you can use clipboard.write to write both a bookmark and fallback text to the clipboard.\n\n<pre><code>clipboard.write({\n  text: 'http://electron.atom.io',\n  bookmark: 'Electron Homepage'\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/
clipboard.writeFindText macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul>Writes the text into the find pasteboard as plain text. This method uses synchronous IPC when called from the renderer process.\n\n</section>	http://electron.atom.io/docs/api/
clipboard.writeHTML	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">markup</code> String</li>\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul>Writes markup to the clipboard.\n\n</section>	http://electron.atom.io/docs/api/
clipboard.writeImage	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">image</code> <a href="/docs/api/native-image">NativeImage</a></li>\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul>Writes image to the clipboard.\n\n</section>	http://electron.atom.io/docs/api/
clipboard.writeRTF	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">text</code> String</li>\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul>Writes the text into the clipboard in RTF.\n\n</section>	http://electron.atom.io/docs/api/
clipboard.writeText	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">text</code> String</li>\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul>Writes the text into the clipboard as plain text.\n\n</section>	http://electron.atom.io/docs/api/
content tracing	A										<section class="prog__container">Collect tracing data from Chromium s content module for finding performance bottlenecks and slow operations.\n\nProcess: Main\n\nThis module does not include a web interface so you need to open chrome://tracing/ in a Chrome browser and load the generated file to view the result.\n\n<pre><code>const {contentTracing} = require('electron')\n\nconst options = {\n  categoryFilter: '*',\n  traceOptions: 'record-until-full,enable-sampling'\n}\n\ncontentTracing.startRecording(options, () => {\n  console.log('Tracing started')\n\n  setTimeout(() => {\n    contentTracing.stopRecording('', (path) => {\n      console.log('Tracing data recorded to ' + path)\n    })\n  }, 5000)\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/
contentTracing.captureMonitoringSnapshot	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">resultFilePath</code> String</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">resultFilePath</code> String</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">resultFilePath</code> String</li>\n</ul>Get the current monitoring traced data.\n\nChild processes typically cache trace data and only rarely flush and send trace data back to the main process. This is because it may be an expensive operation to send the trace data over IPC and we would like to avoid unneeded runtime overhead from tracing. So, to end tracing, we must asynchronously ask all child processes to flush any pending trace data.\n\nOnce all child processes have acknowledged the captureMonitoringSnapshot request the callback will be called with a file that contains the traced data.\n\n</section>	http://electron.atom.io/docs/api/
contentTracing.getCategories	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">categories</code> String[]</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">categories</code> String[]</li>\n</ul>Get a set of category groups. The category groups can change as new code paths are reached.\n\nOnce all child processes have acknowledged the getCategories request the callback is invoked with an array of category groups.\n\n</section>	http://electron.atom.io/docs/api/
contentTracing.getTraceBufferUsage	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">value</code> Number</li>\n<li><code class="highlighter-rouge">percentage</code> Number</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">value</code> Number</li>\n<li><code class="highlighter-rouge">percentage</code> Number</li>\n</ul>Get the maximum usage across processes of trace buffer as a percentage of the full state. When the TraceBufferUsage value is determined the callback is called.\n\n</section>	http://electron.atom.io/docs/api/
contentTracing.setWatchEvent	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">categoryName</code> String</li>\n<li><code class="highlighter-rouge">eventName</code> String</li>\n<li><code class="highlighter-rouge">callback</code> Function</li>\n</ul>callback will be called every time the given event occurs on any process.\n\n</section>	http://electron.atom.io/docs/api/
contentTracing.startMonitoring	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul>\n<li><code class="highlighter-rouge">categoryFilter</code> String</li>\n<li><code class="highlighter-rouge">traceOptions</code> String</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function</li>\n</ul><ul>\n<li><code class="highlighter-rouge">categoryFilter</code> String</li>\n<li><code class="highlighter-rouge">traceOptions</code> String</li>\n</ul>Start monitoring on all processes.\n\nMonitoring begins immediately locally and asynchronously on child processes as soon as they receive the startMonitoring request.\n\nOnce all child processes have acknowledged the startMonitoring request the callback will be called.\n\n</section>	http://electron.atom.io/docs/api/
contentTracing.startRecording	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul>\n<li><code class="highlighter-rouge">categoryFilter</code> String</li>\n<li><code class="highlighter-rouge">traceOptions</code> String</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function</li>\n</ul><ul>\n<li><code class="highlighter-rouge">categoryFilter</code> String</li>\n<li><code class="highlighter-rouge">traceOptions</code> String</li>\n</ul>Start recording on all processes.\n\nRecording begins immediately locally and asynchronously on child processes as soon as they receive the EnableRecording request. The callback will be called once all child processes have acknowledged the startRecording request.\n\ncategoryFilter is a filter to control what category groups should be traced. A filter can have an optional - prefix to exclude category groups that contain a matching category. Having both included and excluded category patterns in the same list is not supported.\n\nExamples:\n\n<ul>\n<li><code class="highlighter-rouge">test_MyTest*</code>,</li>\n<li><code class="highlighter-rouge">test_MyTest*,test_OtherStuff</code>,</li>\n<li><code class="highlighter-rouge">"-excluded_category1,-excluded_category2</code></li>\n</ul>traceOptions controls what kind of tracing is enabled, it is a comma-delimited list. Possible options are:\n\n<ul>\n<li><code class="highlighter-rouge">record-until-full</code></li>\n<li><code class="highlighter-rouge">record-continuously</code></li>\n<li><code class="highlighter-rouge">trace-to-console</code></li>\n<li><code class="highlighter-rouge">enable-sampling</code></li>\n<li><code class="highlighter-rouge">enable-systrace</code></li>\n</ul>The first 3 options are trace recoding modes and hence mutually exclusive. If more than one trace recording modes appear in the traceOptions string, the last one takes precedence. If none of the trace recording modes are specified, recording mode is record-until-full.\n\nThe trace option will first be reset to the default option (record_mode set to record-until-full, enable_sampling and enable_systrace set to false) before options parsed from traceOptions are applied on it.\n\n</section>	http://electron.atom.io/docs/api/
contentTracing.stopMonitoring	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">callback</code> Function</li>\n</ul>Stop monitoring on all processes.\n\nOnce all child processes have acknowledged the stopMonitoring request the callback is called.\n\n</section>	http://electron.atom.io/docs/api/
contentTracing.stopRecording	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">resultFilePath</code> String</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">resultFilePath</code> String</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">resultFilePath</code> String</li>\n</ul>Stop recording on all processes.\n\nChild processes typically cache trace data and only rarely flush and send trace data back to the main process. This helps to minimize the runtime overhead of tracing since sending trace data over IPC can be an expensive operation. So, to end tracing, we must asynchronously ask all child processes to flush any pending trace data.\n\nOnce all child processes have acknowledged the stopRecording request, callback will be called with a file that contains the traced data.\n\nTrace data will be written into resultFilePath if it is not empty or into a temporary file. The actual file path will be passed to callback if it s not null.\n\n</section>	http://electron.atom.io/docs/api/
contents.addWorkSpace	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">path</code> String</li>\n</ul>Adds the specified path to DevTools workspace. Must be used after DevTools creation:\n\n<pre><code>const {BrowserWindow} = require('electron')\nlet win = new BrowserWindow()\nwin.webContents.on('devtools-opened', () => {\n  win.webContents.addWorkSpace(__dirname)\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/
contents.beginFrameSubscription	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">onlyDirty</code> Boolean (optional) - Defaults to <code class="highlighter-rouge">false</code></li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">frameBuffer</code> Buffer</li>\n<li><code class="highlighter-rouge">dirtyRect</code> <a href="/docs/api/structures/rectangle">Rectangle</a></li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">frameBuffer</code> Buffer</li>\n<li><code class="highlighter-rouge">dirtyRect</code> <a href="/docs/api/structures/rectangle">Rectangle</a></li>\n</ul>Begin subscribing for presentation events and captured frames, the callback will be called with callback(frameBuffer, dirtyRect) when there is a presentation event.\n\nThe frameBuffer is a Buffer that contains raw pixel data. On most machines, the pixel data is effectively stored in 32bit BGRA format, but the actual representation depends on the endianness of the processor (most modern processors are little-endian, on machines with big-endian processors the data is in 32bit ARGB format).\n\nThe dirtyRect is an object with x, y, width, height properties that describes which part of the page was repainted. If onlyDirty is set to true, frameBuffer will only contain the repainted area. onlyDirty defaults to false.\n\n</section>	http://electron.atom.io/docs/api/
contents.canGoBack	A										<section class="prog__container">Returns Boolean - Whether the browser can go back to previous web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.canGoForward	A										<section class="prog__container">Returns Boolean - Whether the browser can go forward to next web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.canGoToOffset	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">offset</code> Integer</li>\n</ul>Returns Boolean - Whether the web page can go to offset.\n\n</section>	http://electron.atom.io/docs/api/
contents.capturePage	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">rect</code> <a href="/docs/api/structures/rectangle">Rectangle</a> (optional) - The area of the page to be captured</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">image</code> <a href="/docs/api/native-image">NativeImage</a></li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">image</code> <a href="/docs/api/native-image">NativeImage</a></li>\n</ul>Captures a snapshot of the page within rect. Upon completion callback will be called with callback(image). The image is an instance of NativeImage that stores data of the snapshot. Omitting rect will capture the whole visible page.\n\n</section>	http://electron.atom.io/docs/api/
contents.clearHistory	A										<section class="prog__container">Clears the navigation history.\n\n</section>	http://electron.atom.io/docs/api/
contents.closeDevTools	A										<section class="prog__container">Closes the devtools.\n\n</section>	http://electron.atom.io/docs/api/
contents.copy	A										<section class="prog__container">Executes the editing command copy in web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.copyImageAt	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n</ul>Copy the image at the given position to the clipboard.\n\n</section>	http://electron.atom.io/docs/api/
contents.cut	A										<section class="prog__container">Executes the editing command cut in web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.delete	A										<section class="prog__container">Executes the editing command delete in web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.devToolsWebContents	A										<section class="prog__container">A WebContents of DevTools for this WebContents.\n\nNote: Users should never store this object because it may become null when the DevTools has been closed.\n\n</section>	http://electron.atom.io/docs/api/
contents.disableDeviceEmulation	A										<section class="prog__container">Disable device emulation enabled by webContents.enableDeviceEmulation.\n\n</section>	http://electron.atom.io/docs/api/
contents.downloadURL	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n</ul>Initiates a download of the resource at url without navigating. The will-download event of session will be triggered.\n\n</section>	http://electron.atom.io/docs/api/
contents.enableDeviceEmulation	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">parameters</code> Object\n    <ul>\n<li><code class="highlighter-rouge">screenPosition</code> String - Specify the screen type to emulate (default: <code class="highlighter-rouge">desktop</code>)\n        <ul>\n<li><code class="highlighter-rouge">desktop</code> - Desktop screen type</li>\n<li><code class="highlighter-rouge">mobile</code> - Mobile screen type</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">screenSize</code> Object - Set the emulated screen size (screenPosition == mobile)\n        <ul>\n<li><code class="highlighter-rouge">width</code> Integer - Set the emulated screen width</li>\n<li><code class="highlighter-rouge">height</code> Integer - Set the emulated screen height</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">viewPosition</code> Object - Position the view on the screen (screenPosition == mobile) (default: <code class="highlighter-rouge"><span class="p">{</span><span class="err">x:</span><span class="w"> </span><span class="err">0,</span><span class="w"> </span><span class="err">y:</span><span class="w"> </span><span class="err">0</span><span class="p">}</span></code>)\n        <ul>\n<li><code class="highlighter-rouge">x</code> Integer - Set the x axis offset from top left corner</li>\n<li><code class="highlighter-rouge">y</code> Integer - Set the y axis offset from top left corner</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">deviceScaleFactor</code> Integer - Set the device scale factor (if zero defaults to original device scale factor) (default: <code class="highlighter-rouge">0</code>)</li>\n<li><code class="highlighter-rouge">viewSize</code> Object - Set the emulated view size (empty means no override)\n        <ul>\n<li><code class="highlighter-rouge">width</code> Integer - Set the emulated view width</li>\n<li><code class="highlighter-rouge">height</code> Integer - Set the emulated view height</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">fitToView</code> Boolean - Whether emulated view should be scaled down if necessary to fit into available space (default: <code class="highlighter-rouge">false</code>)</li>\n<li><code class="highlighter-rouge">offset</code> Object - Offset of the emulated view inside available space (not in fit to view mode) (default: <code class="highlighter-rouge"><span class="p">{</span><span class="err">x:</span><span class="w"> </span><span class="err">0,</span><span class="w"> </span><span class="err">y:</span><span class="w"> </span><span class="err">0</span><span class="p">}</span></code>)\n        <ul>\n<li><code class="highlighter-rouge">x</code> Float - Set the x axis offset from top left corner</li>\n<li><code class="highlighter-rouge">y</code> Float - Set the y axis offset from top left corner</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">scale</code> Float - Scale of emulated view inside available space (not in fit to view mode) (default: <code class="highlighter-rouge">1</code>)</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">screenPosition</code> String - Specify the screen type to emulate (default: <code class="highlighter-rouge">desktop</code>)\n        <ul>\n<li><code class="highlighter-rouge">desktop</code> - Desktop screen type</li>\n<li><code class="highlighter-rouge">mobile</code> - Mobile screen type</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">screenSize</code> Object - Set the emulated screen size (screenPosition == mobile)\n        <ul>\n<li><code class="highlighter-rouge">width</code> Integer - Set the emulated screen width</li>\n<li><code class="highlighter-rouge">height</code> Integer - Set the emulated screen height</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">viewPosition</code> Object - Position the view on the screen (screenPosition == mobile) (default: <code class="highlighter-rouge"><span class="p">{</span><span class="err">x:</span><span class="w"> </span><span class="err">0,</span><span class="w"> </span><span class="err">y:</span><span class="w"> </span><span class="err">0</span><span class="p">}</span></code>)\n        <ul>\n<li><code class="highlighter-rouge">x</code> Integer - Set the x axis offset from top left corner</li>\n<li><code class="highlighter-rouge">y</code> Integer - Set the y axis offset from top left corner</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">deviceScaleFactor</code> Integer - Set the device scale factor (if zero defaults to original device scale factor) (default: <code class="highlighter-rouge">0</code>)</li>\n<li><code class="highlighter-rouge">viewSize</code> Object - Set the emulated view size (empty means no override)\n        <ul>\n<li><code class="highlighter-rouge">width</code> Integer - Set the emulated view width</li>\n<li><code class="highlighter-rouge">height</code> Integer - Set the emulated view height</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">fitToView</code> Boolean - Whether emulated view should be scaled down if necessary to fit into available space (default: <code class="highlighter-rouge">false</code>)</li>\n<li><code class="highlighter-rouge">offset</code> Object - Offset of the emulated view inside available space (not in fit to view mode) (default: <code class="highlighter-rouge"><span class="p">{</span><span class="err">x:</span><span class="w"> </span><span class="err">0,</span><span class="w"> </span><span class="err">y:</span><span class="w"> </span><span class="err">0</span><span class="p">}</span></code>)\n        <ul>\n<li><code class="highlighter-rouge">x</code> Float - Set the x axis offset from top left corner</li>\n<li><code class="highlighter-rouge">y</code> Float - Set the y axis offset from top left corner</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">scale</code> Float - Scale of emulated view inside available space (not in fit to view mode) (default: <code class="highlighter-rouge">1</code>)</li>\n</ul><ul>\n<li><code class="highlighter-rouge">desktop</code> - Desktop screen type</li>\n<li><code class="highlighter-rouge">mobile</code> - Mobile screen type</li>\n</ul><ul>\n<li><code class="highlighter-rouge">width</code> Integer - Set the emulated screen width</li>\n<li><code class="highlighter-rouge">height</code> Integer - Set the emulated screen height</li>\n</ul><ul>\n<li><code class="highlighter-rouge">x</code> Integer - Set the x axis offset from top left corner</li>\n<li><code class="highlighter-rouge">y</code> Integer - Set the y axis offset from top left corner</li>\n</ul><ul>\n<li><code class="highlighter-rouge">width</code> Integer - Set the emulated view width</li>\n<li><code class="highlighter-rouge">height</code> Integer - Set the emulated view height</li>\n</ul><ul>\n<li><code class="highlighter-rouge">x</code> Float - Set the x axis offset from top left corner</li>\n<li><code class="highlighter-rouge">y</code> Float - Set the y axis offset from top left corner</li>\n</ul>Enable device emulation with the given parameters.\n\n</section>	http://electron.atom.io/docs/api/
contents.endFrameSubscription	A										<section class="prog__container">End subscribing for frame presentation events.\n\n</section>	http://electron.atom.io/docs/api/
contents.executeJavaScript	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">code</code> String</li>\n<li><code class="highlighter-rouge">userGesture</code> Boolean (optional)</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional) - Called after script has been executed.\n    <ul>\n<li><code class="highlighter-rouge">result</code> Any</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">result</code> Any</li>\n</ul>Returns Promise - A promise that resolves with the result of the executed code or is rejected if the result of the code is a rejected promise.\n\nEvaluates code in page.\n\nIn the browser window some HTML APIs like requestFullScreen can only be invoked by a gesture from the user. Setting userGesture to true will remove this limitation.\n\nIf the result of the executed code is a promise the callback result will be the resolved value of the promise. We recommend that you use the returned Promise to handle code that results in a Promise.\n\n<pre><code>contents.executeJavaScript('fetch("https://jsonplaceholder.typicode.com/users/1").then(resp => resp.json())', true)\n  .then((result) => {\n    console.log(result) // Will be the JSON object from the fetch call\n  })\n\n</code></pre></section>	http://electron.atom.io/docs/api/
contents.findInPage	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">text</code> String - Content to be searched, must not be empty.</li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul>\n<li><code class="highlighter-rouge">forward</code> Boolean - (optional) Whether to search forward or backward, defaults to <code class="highlighter-rouge">true</code>.</li>\n<li><code class="highlighter-rouge">findNext</code> Boolean - (optional) Whether the operation is first request or a follow up, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">matchCase</code> Boolean - (optional) Whether search should be case-sensitive, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">wordStart</code> Boolean - (optional) Whether to look only at the start of words. defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">medialCapitalAsWordStart</code> Boolean - (optional) When combined with <code class="highlighter-rouge">wordStart</code>, accepts a match in the middle of a word if the match begins with an uppercase letter followed by a lowercase or non-letter. Accepts several other intra-word matches, defaults to <code class="highlighter-rouge">false</code>.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">forward</code> Boolean - (optional) Whether to search forward or backward, defaults to <code class="highlighter-rouge">true</code>.</li>\n<li><code class="highlighter-rouge">findNext</code> Boolean - (optional) Whether the operation is first request or a follow up, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">matchCase</code> Boolean - (optional) Whether search should be case-sensitive, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">wordStart</code> Boolean - (optional) Whether to look only at the start of words. defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">medialCapitalAsWordStart</code> Boolean - (optional) When combined with <code class="highlighter-rouge">wordStart</code>, accepts a match in the middle of a word if the match begins with an uppercase letter followed by a lowercase or non-letter. Accepts several other intra-word matches, defaults to <code class="highlighter-rouge">false</code>.</li>\n</ul>Starts a request to find all matches for the text in the web page and returns an Integer representing the request id used for the request. The result of the request can be obtained by subscribing to found-in-page event.\n\n</section>	http://electron.atom.io/docs/api/
contents.getFrameRate	A										<section class="prog__container">Returns Integer - If offscreen rendering is enabled returns the current frame rate.\n\n</section>	http://electron.atom.io/docs/api/
contents.getTitle	A										<section class="prog__container">Returns String - The title of the current web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.getURL	A										<section class="prog__container">Returns String - The URL of the current web page.\n\n<pre><code>const {BrowserWindow} = require('electron')\nlet win = new BrowserWindow({width: 800, height: 600})\nwin.loadURL('http://github.com')\n\nlet currentURL = win.webContents.getURL()\nconsole.log(currentURL)\n\n</code></pre></section>	http://electron.atom.io/docs/api/
contents.getUserAgent	A										<section class="prog__container">Returns String - The user agent for this web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.getZoomFactor	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">zoomFactor</code> Number</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">zoomFactor</code> Number</li>\n</ul>Sends a request to get current zoom factor, the callback will be called with callback(zoomFactor).\n\n</section>	http://electron.atom.io/docs/api/
contents.getZoomLevel	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">zoomLevel</code> Number</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">zoomLevel</code> Number</li>\n</ul>Sends a request to get current zoom level, the callback will be called with callback(zoomLevel).\n\n</section>	http://electron.atom.io/docs/api/
contents.goBack	A										<section class="prog__container">Makes the browser go back a web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.goForward	A										<section class="prog__container">Makes the browser go forward a web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.goToIndex	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">index</code> Integer</li>\n</ul>Navigates browser to the specified absolute web page index.\n\n</section>	http://electron.atom.io/docs/api/
contents.goToOffset	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">offset</code> Integer</li>\n</ul>Navigates to the specified offset from the  current entry .\n\n</section>	http://electron.atom.io/docs/api/
contents.hasServiceWorker	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">hasWorker</code> Boolean</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">hasWorker</code> Boolean</li>\n</ul>Checks if any ServiceWorker is registered and returns a boolean as response to callback.\n\n</section>	http://electron.atom.io/docs/api/
contents.hostWebContents	A										<section class="prog__container">A WebContents instance that might own this WebContents.\n\n</section>	http://electron.atom.io/docs/api/
contents.id	A										<section class="prog__container">A Integer representing the unique ID of this WebContents.\n\n</section>	http://electron.atom.io/docs/api/
contents.insertCSS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">css</code> String</li>\n</ul>Injects CSS into the current web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.insertText	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul>Inserts text to the focused element.\n\n</section>	http://electron.atom.io/docs/api/
contents.inspectElement	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n</ul>Starts inspecting element at position (x, y).\n\n</section>	http://electron.atom.io/docs/api/
contents.inspectServiceWorker	A										<section class="prog__container">Opens the developer tools for the service worker context.\n\n</section>	http://electron.atom.io/docs/api/
contents.invalidate	A										<section class="prog__container">If offscreen rendering is enabled invalidates the frame and generates a new one through the 'paint' event.\n\n</section>	http://electron.atom.io/docs/api/
contents.isAudioMuted	A										<section class="prog__container">Returns Boolean - Whether this page has been muted.\n\n</section>	http://electron.atom.io/docs/api/
contents.isCrashed	A										<section class="prog__container">Returns Boolean - Whether the renderer process has crashed.\n\n</section>	http://electron.atom.io/docs/api/
contents.isDestroyed	A										<section class="prog__container">Returns Boolean - Whether the web page is destroyed.\n\n</section>	http://electron.atom.io/docs/api/
contents.isDevToolsFocused	A										<section class="prog__container">Returns Boolean - Whether the devtools view is focused .\n\n</section>	http://electron.atom.io/docs/api/
contents.isDevToolsOpened	A										<section class="prog__container">Returns Boolean - Whether the devtools is opened.\n\n</section>	http://electron.atom.io/docs/api/
contents.isFocused	A										<section class="prog__container">Returns Boolean - Whether the web page is focused.\n\n</section>	http://electron.atom.io/docs/api/
contents.isLoading	A										<section class="prog__container">Returns Boolean - Whether web page is still loading resources.\n\n</section>	http://electron.atom.io/docs/api/
contents.isLoadingMainFrame	A										<section class="prog__container">Returns Boolean - Whether the main frame (and not just iframes or frames within it) is still loading.\n\n</section>	http://electron.atom.io/docs/api/
contents.isOffscreen	A										<section class="prog__container">Returns Boolean - Indicates whether offscreen rendering is enabled.\n\n</section>	http://electron.atom.io/docs/api/
contents.isPainting	A										<section class="prog__container">Returns Boolean - If offscreen rendering is enabled returns whether it is currently painting.\n\n</section>	http://electron.atom.io/docs/api/
contents.isWaitingForResponse	A										<section class="prog__container">Returns Boolean - Whether the web page is waiting for a first-response from the main resource of the page.\n\n</section>	http://electron.atom.io/docs/api/
contents.loadURL	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul>\n<li><code class="highlighter-rouge">httpReferrer</code> String (optional) - A HTTP Referrer url.</li>\n<li><code class="highlighter-rouge">userAgent</code> String (optional) - A user agent originating the request.</li>\n<li><code class="highlighter-rouge">extraHeaders</code> String (optional) - Extra headers separated by  \n </li>\n<li><code class="highlighter-rouge">postData</code> (<a href="/docs/api/structures/upload-raw-data">UploadRawData</a> | <a href="/docs/api/structures/upload-file">UploadFile</a> | <a href="/docs/api/structures/upload-file-system">UploadFileSystem</a> | <a href="/docs/api/structures/upload-blob">UploadBlob</a>)[] - (optional)</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">httpReferrer</code> String (optional) - A HTTP Referrer url.</li>\n<li><code class="highlighter-rouge">userAgent</code> String (optional) - A user agent originating the request.</li>\n<li><code class="highlighter-rouge">extraHeaders</code> String (optional) - Extra headers separated by  \n </li>\n<li><code class="highlighter-rouge">postData</code> (<a href="/docs/api/structures/upload-raw-data">UploadRawData</a> | <a href="/docs/api/structures/upload-file">UploadFile</a> | <a href="/docs/api/structures/upload-file-system">UploadFileSystem</a> | <a href="/docs/api/structures/upload-blob">UploadBlob</a>)[] - (optional)</li>\n</ul>Loads the url in the window. The url must contain the protocol prefix, e.g. the http:// or file://. If the load should bypass http cache then use the pragma header to achieve it.\n\n<pre><code>const {webContents} = require('electron')\nconst options = {extraHeaders: 'pragma: no-cache\n'}\nwebContents.loadURL('https://github.com', options)\n\n</code></pre></section>	http://electron.atom.io/docs/api/
contents.openDevTools	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul>\n<li><code class="highlighter-rouge">mode</code> String - Opens the devtools with specified dock state, can be <code class="highlighter-rouge">right</code>, <code class="highlighter-rouge">bottom</code>, <code class="highlighter-rouge">undocked</code>, <code class="highlighter-rouge">detach</code>. Defaults to last used dock state. In <code class="highlighter-rouge">undocked</code> mode it s possible to dock back. In <code class="highlighter-rouge">detach</code> mode it s not.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">mode</code> String - Opens the devtools with specified dock state, can be <code class="highlighter-rouge">right</code>, <code class="highlighter-rouge">bottom</code>, <code class="highlighter-rouge">undocked</code>, <code class="highlighter-rouge">detach</code>. Defaults to last used dock state. In <code class="highlighter-rouge">undocked</code> mode it s possible to dock back. In <code class="highlighter-rouge">detach</code> mode it s not.</li>\n</ul>Opens the devtools.\n\n</section>	http://electron.atom.io/docs/api/
contents.paste	A										<section class="prog__container">Executes the editing command paste in web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.pasteAndMatchStyle	A										<section class="prog__container">Executes the editing command pasteAndMatchStyle in web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.print	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul>\n<li><code class="highlighter-rouge">silent</code> Boolean - Don t ask user for print settings. Default is <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">printBackground</code> Boolean - Also prints the background color and image of the web page. Default is <code class="highlighter-rouge">false</code>.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">silent</code> Boolean - Don t ask user for print settings. Default is <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">printBackground</code> Boolean - Also prints the background color and image of the web page. Default is <code class="highlighter-rouge">false</code>.</li>\n</ul>Prints window s web page. When silent is set to true, Electron will pick up system s default printer and default settings for printing.\n\nCalling window.print() in web page is equivalent to calling webContents.print({silent: false, printBackground: false}).\n\nUse page-break-before: always; CSS style to force to print to a new page.\n\n</section>	http://electron.atom.io/docs/api/
contents.printToPDF	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul>\n<li><code class="highlighter-rouge">marginsType</code> Integer - (optional) Specifies the type of margins to use. Uses 0 for default margin, 1 for no margin, and 2 for minimum margin.</li>\n<li><code class="highlighter-rouge">pageSize</code> String - (optional) Specify page size of the generated PDF. Can be <code class="highlighter-rouge">A3</code>, <code class="highlighter-rouge">A4</code>, <code class="highlighter-rouge">A5</code>, <code class="highlighter-rouge">Legal</code>, <code class="highlighter-rouge">Letter</code>, <code class="highlighter-rouge">Tabloid</code> or an Object containing <code class="highlighter-rouge">height</code> and <code class="highlighter-rouge">width</code> in microns.</li>\n<li><code class="highlighter-rouge">printBackground</code> Boolean - (optional) Whether to print CSS backgrounds.</li>\n<li><code class="highlighter-rouge">printSelectionOnly</code> Boolean - (optional) Whether to print selection only.</li>\n<li><code class="highlighter-rouge">landscape</code> Boolean - (optional) <code class="highlighter-rouge">true</code> for landscape, <code class="highlighter-rouge">false</code> for portrait.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n<li><code class="highlighter-rouge">data</code> Buffer</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">marginsType</code> Integer - (optional) Specifies the type of margins to use. Uses 0 for default margin, 1 for no margin, and 2 for minimum margin.</li>\n<li><code class="highlighter-rouge">pageSize</code> String - (optional) Specify page size of the generated PDF. Can be <code class="highlighter-rouge">A3</code>, <code class="highlighter-rouge">A4</code>, <code class="highlighter-rouge">A5</code>, <code class="highlighter-rouge">Legal</code>, <code class="highlighter-rouge">Letter</code>, <code class="highlighter-rouge">Tabloid</code> or an Object containing <code class="highlighter-rouge">height</code> and <code class="highlighter-rouge">width</code> in microns.</li>\n<li><code class="highlighter-rouge">printBackground</code> Boolean - (optional) Whether to print CSS backgrounds.</li>\n<li><code class="highlighter-rouge">printSelectionOnly</code> Boolean - (optional) Whether to print selection only.</li>\n<li><code class="highlighter-rouge">landscape</code> Boolean - (optional) <code class="highlighter-rouge">true</code> for landscape, <code class="highlighter-rouge">false</code> for portrait.</li>\n</ul><ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n<li><code class="highlighter-rouge">data</code> Buffer</li>\n</ul>Prints window s web page as PDF with Chromium s preview printing custom settings.\n\nThe callback will be called with callback(error, data) on completion. The data is a Buffer that contains the generated PDF data.\n\nThe landscape will be ignored if @page CSS at-rule is used in the web page.\n\nBy default, an empty options will be regarded as:\n\n<pre><code>{\n  marginsType: 0,\n  printBackground: false,\n  printSelectionOnly: false,\n  landscape: false\n}\n\n</code></pre>Use page-break-before: always; CSS style to force to print to a new page.\n\nAn example of webContents.printToPDF:\n\n<pre><code>const {BrowserWindow} = require('electron')\nconst fs = require('fs')\n\nlet win = new BrowserWindow({width: 800, height: 600})\nwin.loadURL('http://github.com')\n\nwin.webContents.on('did-finish-load', () => {\n  // Use default printing options\n  win.webContents.printToPDF({}, (error, data) => {\n    if (error) throw error\n    fs.writeFile('/tmp/print.pdf', data, (error) => {\n      if (error) throw error\n      console.log('Write PDF successfully.')\n    })\n  })\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/
contents.redo	A										<section class="prog__container">Executes the editing command redo in web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.reload	A										<section class="prog__container">Reloads the current web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.reloadIgnoringCache	A										<section class="prog__container">Reloads current page and ignores cache.\n\n</section>	http://electron.atom.io/docs/api/
contents.removeWorkSpace	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">path</code> String</li>\n</ul>Removes the specified path from DevTools workspace.\n\n</section>	http://electron.atom.io/docs/api/
contents.replace	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul>Executes the editing command replace in web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.replaceMisspelling	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul>Executes the editing command replaceMisspelling in web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.savePage	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">fullPath</code> String - The full file path.</li>\n<li><code class="highlighter-rouge">saveType</code> String - Specify the save type.\n    <ul>\n<li><code class="highlighter-rouge">HTMLOnly</code> - Save only the HTML of the page.</li>\n<li><code class="highlighter-rouge">HTMLComplete</code> - Save complete-html page.</li>\n<li><code class="highlighter-rouge">MHTML</code> - Save complete-html page as MHTML.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function - <code class="highlighter-rouge">(error) =&gt; {}</code>.\n    <ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">HTMLOnly</code> - Save only the HTML of the page.</li>\n<li><code class="highlighter-rouge">HTMLComplete</code> - Save complete-html page.</li>\n<li><code class="highlighter-rouge">MHTML</code> - Save complete-html page as MHTML.</li>\n</ul><ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>Returns true if the process of saving page has been initiated successfully.\n\n<pre><code>const {BrowserWindow} = require('electron')\nlet win = new BrowserWindow()\n\nwin.loadURL('https://github.com')\n\nwin.webContents.on('did-finish-load', () => {\n  win.webContents.savePage('/tmp/test.html', 'HTMLComplete', (error) => {\n    if (!error) console.log('Save page successfully')\n  })\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/
contents.selectAll	A										<section class="prog__container">Executes the editing command selectAll in web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.send	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">...args</code> any[]</li>\n</ul>Send an asynchronous message to renderer process via channel, you can also send arbitrary arguments. Arguments will be serialized in JSON internally and hence no functions or prototype chain will be included.\n\nThe renderer process can handle the message by listening to channel with the ipcRenderer module.\n\nAn example of sending messages from the main process to the renderer process:\n\n<pre><code>// In the main process.\nconst {app, BrowserWindow} = require('electron')\nlet win = null\n\napp.on('ready', () => {\n  win = new BrowserWindow({width: 800, height: 600})\n  win.loadURL(`file://${__dirname}/index.html`)\n  win.webContents.on('did-finish-load', () => {\n    win.webContents.send('ping', 'whoooooooh!')\n  })\n})\n\n</code></pre><pre><code><!-- index.html -->\n<html>\n<body>\n  <script>\n    require('electron').ipcRenderer.on('ping', (event, message) => {\n      console.log(message)  // Prints 'whoooooooh!'\n    })\n  </script>\n</body>\n</html>\n\n</code></pre></section>	http://electron.atom.io/docs/api/
contents.sendInputEvent	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">event</code> Object\n    <ul>\n<li><code class="highlighter-rouge">type</code> String (<strong>required</strong>) - The type of the event, can be <code class="highlighter-rouge">mouseDown</code>, <code class="highlighter-rouge">mouseUp</code>, <code class="highlighter-rouge">mouseEnter</code>, <code class="highlighter-rouge">mouseLeave</code>, <code class="highlighter-rouge">contextMenu</code>, <code class="highlighter-rouge">mouseWheel</code>, <code class="highlighter-rouge">mouseMove</code>, <code class="highlighter-rouge">keyDown</code>, <code class="highlighter-rouge">keyUp</code>, <code class="highlighter-rouge">char</code>.</li>\n<li><code class="highlighter-rouge">modifiers</code> String[] - An array of modifiers of the event, can include <code class="highlighter-rouge">shift</code>, <code class="highlighter-rouge">control</code>, <code class="highlighter-rouge">alt</code>, <code class="highlighter-rouge">meta</code>, <code class="highlighter-rouge">isKeypad</code>, <code class="highlighter-rouge">isAutoRepeat</code>, <code class="highlighter-rouge">leftButtonDown</code>, <code class="highlighter-rouge">middleButtonDown</code>, <code class="highlighter-rouge">rightButtonDown</code>, <code class="highlighter-rouge">capsLock</code>, <code class="highlighter-rouge">numLock</code>, <code class="highlighter-rouge">left</code>, <code class="highlighter-rouge">right</code>.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">type</code> String (<strong>required</strong>) - The type of the event, can be <code class="highlighter-rouge">mouseDown</code>, <code class="highlighter-rouge">mouseUp</code>, <code class="highlighter-rouge">mouseEnter</code>, <code class="highlighter-rouge">mouseLeave</code>, <code class="highlighter-rouge">contextMenu</code>, <code class="highlighter-rouge">mouseWheel</code>, <code class="highlighter-rouge">mouseMove</code>, <code class="highlighter-rouge">keyDown</code>, <code class="highlighter-rouge">keyUp</code>, <code class="highlighter-rouge">char</code>.</li>\n<li><code class="highlighter-rouge">modifiers</code> String[] - An array of modifiers of the event, can include <code class="highlighter-rouge">shift</code>, <code class="highlighter-rouge">control</code>, <code class="highlighter-rouge">alt</code>, <code class="highlighter-rouge">meta</code>, <code class="highlighter-rouge">isKeypad</code>, <code class="highlighter-rouge">isAutoRepeat</code>, <code class="highlighter-rouge">leftButtonDown</code>, <code class="highlighter-rouge">middleButtonDown</code>, <code class="highlighter-rouge">rightButtonDown</code>, <code class="highlighter-rouge">capsLock</code>, <code class="highlighter-rouge">numLock</code>, <code class="highlighter-rouge">left</code>, <code class="highlighter-rouge">right</code>.</li>\n</ul>Sends an input event to the page.\n\nFor keyboard events, the event object also have following properties:\n\n<ul>\n<li><code class="highlighter-rouge">keyCode</code> String (<strong>required</strong>) - The character that will be sent as the keyboard event. Should only use the valid key codes in <a href="/docs/api/accelerator">Accelerator</a>.</li>\n</ul>For mouse events, the event object also have following properties:\n\n<ul>\n<li><code class="highlighter-rouge">x</code> Integer (<strong>required</strong>)</li>\n<li><code class="highlighter-rouge">y</code> Integer (<strong>required</strong>)</li>\n<li><code class="highlighter-rouge">button</code> String - The button pressed, can be <code class="highlighter-rouge">left</code>, <code class="highlighter-rouge">middle</code>, <code class="highlighter-rouge">right</code></li>\n<li><code class="highlighter-rouge">globalX</code> Integer</li>\n<li><code class="highlighter-rouge">globalY</code> Integer</li>\n<li><code class="highlighter-rouge">movementX</code> Integer</li>\n<li><code class="highlighter-rouge">movementY</code> Integer</li>\n<li><code class="highlighter-rouge">clickCount</code> Integer</li>\n</ul>For the mouseWheel event, the event object also have following properties:\n\n<ul>\n<li><code class="highlighter-rouge">deltaX</code> Integer</li>\n<li><code class="highlighter-rouge">deltaY</code> Integer</li>\n<li><code class="highlighter-rouge">wheelTicksX</code> Integer</li>\n<li><code class="highlighter-rouge">wheelTicksY</code> Integer</li>\n<li><code class="highlighter-rouge">accelerationRatioX</code> Integer</li>\n<li><code class="highlighter-rouge">accelerationRatioY</code> Integer</li>\n<li><code class="highlighter-rouge">hasPreciseScrollingDeltas</code> Boolean</li>\n<li><code class="highlighter-rouge">canScroll</code> Boolean</li>\n</ul></section>	http://electron.atom.io/docs/api/
contents.session	A										<section class="prog__container">A Session object (session) used by this webContents.\n\n</section>	http://electron.atom.io/docs/api/
contents.setAudioMuted	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">muted</code> Boolean</li>\n</ul>Mute the audio on the current web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.setFrameRate	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">fps</code> Integer</li>\n</ul>If offscreen rendering is enabled sets the frame rate to the specified number. Only values between 1 and 60 are accepted.\n\n</section>	http://electron.atom.io/docs/api/
contents.setLayoutZoomLevelLimits	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">minimumLevel</code> Number</li>\n<li><code class="highlighter-rouge">maximumLevel</code> Number</li>\n</ul>Sets the maximum and minimum layout-based (i.e. non-visual) zoom level.\n\n</section>	http://electron.atom.io/docs/api/
contents.setSize	A										<section class="prog__container">Set the size of the page. This is only supported for <webview> guest contents.\n\n<ul>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul>\n<li><code class="highlighter-rouge">normal</code> Object (optional) - Normal size of the page. This can be used in combination with the <a href="/docs/api/web-view-tag#disableguestresize"><code class="highlighter-rouge">disableguestresize</code></a> attribute to manually resize the webview guest contents.\n        <ul>\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">normal</code> Object (optional) - Normal size of the page. This can be used in combination with the <a href="/docs/api/web-view-tag#disableguestresize"><code class="highlighter-rouge">disableguestresize</code></a> attribute to manually resize the webview guest contents.\n        <ul>\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul></section>	http://electron.atom.io/docs/api/
contents.setUserAgent	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">userAgent</code> String</li>\n</ul>Overrides the user agent for this web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.setVisualZoomLevelLimits	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">minimumLevel</code> Number</li>\n<li><code class="highlighter-rouge">maximumLevel</code> Number</li>\n</ul>Sets the maximum and minimum pinch-to-zoom level.\n\n</section>	http://electron.atom.io/docs/api/
contents.setZoomFactor	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">factor</code> Number - Zoom factor.</li>\n</ul>Changes the zoom factor to the specified factor. Zoom factor is zoom percent divided by 100, so 300% = 3.0.\n\n</section>	http://electron.atom.io/docs/api/
contents.setZoomLevel	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">level</code> Number - Zoom level</li>\n</ul>Changes the zoom level to the specified level. The original size is 0 and each increment above or below represents zooming 20% larger or smaller to default limits of 300% and 50% of original size, respectively.\n\n</section>	http://electron.atom.io/docs/api/
contents.setZoomLevelLimits	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">minimumLevel</code> Number</li>\n<li><code class="highlighter-rouge">maximumLevel</code> Number</li>\n</ul>Deprecated: Call setVisualZoomLevelLimits instead to set the visual zoom level limits. This method will be removed in Electron 2.0.\n\n</section>	http://electron.atom.io/docs/api/
contents.showDefinitionForSelection macOS	A										<section class="prog__container">Shows pop-up dictionary that searches the selected word on the page.\n\n</section>	http://electron.atom.io/docs/api/
contents.startDrag	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">item</code> Object\n    <ul>\n<li><code class="highlighter-rouge">file</code> String</li>\n<li><code class="highlighter-rouge">icon</code> <a href="/docs/api/native-image">NativeImage</a></li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">file</code> String</li>\n<li><code class="highlighter-rouge">icon</code> <a href="/docs/api/native-image">NativeImage</a></li>\n</ul>Sets the item as dragging item for current drag-drop operation, file is the absolute path of the file to be dragged, and icon is the image showing under the cursor when dragging.\n\n</section>	http://electron.atom.io/docs/api/
contents.startPainting	A										<section class="prog__container">If offscreen rendering is enabled and not painting, start painting.\n\n</section>	http://electron.atom.io/docs/api/
contents.stop	A										<section class="prog__container">Stops any pending navigation.\n\n</section>	http://electron.atom.io/docs/api/
contents.stopFindInPage	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">action</code> String - Specifies the action to take place when ending [<code class="highlighter-rouge">webContents.findInPage</code>] request.\n    <ul>\n<li><code class="highlighter-rouge">clearSelection</code> - Clear the selection.</li>\n<li><code class="highlighter-rouge">keepSelection</code> - Translate the selection into a normal selection.</li>\n<li><code class="highlighter-rouge">activateSelection</code> - Focus and click the selection node.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">clearSelection</code> - Clear the selection.</li>\n<li><code class="highlighter-rouge">keepSelection</code> - Translate the selection into a normal selection.</li>\n<li><code class="highlighter-rouge">activateSelection</code> - Focus and click the selection node.</li>\n</ul>Stops any findInPage request for the webContents with the provided action.\n\n<pre><code>const {webContents} = require('electron')\nwebContents.on('found-in-page', (event, result) => {\n  if (result.finalUpdate) webContents.stopFindInPage('clearSelection')\n})\n\nconst requestId = webContents.findInPage('api')\nconsole.log(requestId)\n\n</code></pre></section>	http://electron.atom.io/docs/api/
contents.stopPainting	A										<section class="prog__container">If offscreen rendering is enabled and painting, stop painting.\n\n</section>	http://electron.atom.io/docs/api/
contents.toggleDevTools	A										<section class="prog__container">Toggles the developer tools.\n\n</section>	http://electron.atom.io/docs/api/
contents.undo	A										<section class="prog__container">Executes the editing command undo in web page.\n\n</section>	http://electron.atom.io/docs/api/
contents.unregisterServiceWorker	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">success</code> Boolean</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">success</code> Boolean</li>\n</ul>Unregisters any ServiceWorker if present and returns a boolean as response to callback when the JS promise is fulfilled or false when the JS promise is rejected.\n\n</section>	http://electron.atom.io/docs/api/
contents.unselect	A										<section class="prog__container">Executes the editing command unselect in web page.\n\n</section>	http://electron.atom.io/docs/api/
cookies	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/
cookies.get	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">filter</code> Object\n    <ul>\n<li><code class="highlighter-rouge">url</code> String (optional) - Retrieves cookies which are associated with <code class="highlighter-rouge">url</code>. Empty implies retrieving cookies of all urls.</li>\n<li><code class="highlighter-rouge">name</code> String (optional) - Filters cookies by name.</li>\n<li><code class="highlighter-rouge">domain</code> String (optional) - Retrieves cookies whose domains match or are subdomains of <code class="highlighter-rouge">domains</code></li>\n<li><code class="highlighter-rouge">path</code> String (optional) - Retrieves cookies whose path matches <code class="highlighter-rouge">path</code>.</li>\n<li><code class="highlighter-rouge">secure</code> Boolean (optional) - Filters cookies by their Secure property.</li>\n<li><code class="highlighter-rouge">session</code> Boolean (optional) - Filters out session or persistent cookies.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n<li><code class="highlighter-rouge">cookies</code> Cookies[]</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">url</code> String (optional) - Retrieves cookies which are associated with <code class="highlighter-rouge">url</code>. Empty implies retrieving cookies of all urls.</li>\n<li><code class="highlighter-rouge">name</code> String (optional) - Filters cookies by name.</li>\n<li><code class="highlighter-rouge">domain</code> String (optional) - Retrieves cookies whose domains match or are subdomains of <code class="highlighter-rouge">domains</code></li>\n<li><code class="highlighter-rouge">path</code> String (optional) - Retrieves cookies whose path matches <code class="highlighter-rouge">path</code>.</li>\n<li><code class="highlighter-rouge">secure</code> Boolean (optional) - Filters cookies by their Secure property.</li>\n<li><code class="highlighter-rouge">session</code> Boolean (optional) - Filters out session or persistent cookies.</li>\n</ul><ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n<li><code class="highlighter-rouge">cookies</code> Cookies[]</li>\n</ul>Sends a request to get all cookies matching details, callback will be called with callback(error, cookies) on complete.\n\ncookies is an Array of cookie objects.\n\n</section>	http://electron.atom.io/docs/api/
cookies.set	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">details</code> Object\n    <ul>\n<li><code class="highlighter-rouge">url</code> String - The url to associate the cookie with.</li>\n<li><code class="highlighter-rouge">name</code> String (optional) - The name of the cookie. Empty by default if omitted.</li>\n<li><code class="highlighter-rouge">value</code> String (optional) - The value of the cookie. Empty by default if omitted.</li>\n<li><code class="highlighter-rouge">domain</code> String (optional) - The domain of the cookie. Empty by default if omitted.</li>\n<li><code class="highlighter-rouge">path</code> String (optional) - The path of the cookie. Empty by default if omitted.</li>\n<li><code class="highlighter-rouge">secure</code> Boolean (optional) - Whether the cookie should be marked as Secure. Defaults to false.</li>\n<li><code class="highlighter-rouge">httpOnly</code> Boolean (optional) - Whether the cookie should be marked as HTTP only. Defaults to false.</li>\n<li><code class="highlighter-rouge">expirationDate</code> Double (optional) - The expiration date of the cookie as the number of seconds since the UNIX epoch. If omitted then the cookie becomes a session cookie and will not be retained between sessions.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">url</code> String - The url to associate the cookie with.</li>\n<li><code class="highlighter-rouge">name</code> String (optional) - The name of the cookie. Empty by default if omitted.</li>\n<li><code class="highlighter-rouge">value</code> String (optional) - The value of the cookie. Empty by default if omitted.</li>\n<li><code class="highlighter-rouge">domain</code> String (optional) - The domain of the cookie. Empty by default if omitted.</li>\n<li><code class="highlighter-rouge">path</code> String (optional) - The path of the cookie. Empty by default if omitted.</li>\n<li><code class="highlighter-rouge">secure</code> Boolean (optional) - Whether the cookie should be marked as Secure. Defaults to false.</li>\n<li><code class="highlighter-rouge">httpOnly</code> Boolean (optional) - Whether the cookie should be marked as HTTP only. Defaults to false.</li>\n<li><code class="highlighter-rouge">expirationDate</code> Double (optional) - The expiration date of the cookie as the number of seconds since the UNIX epoch. If omitted then the cookie becomes a session cookie and will not be retained between sessions.</li>\n</ul><ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>Sets a cookie with details, callback will be called with callback(error) on complete.\n\n</section>	http://electron.atom.io/docs/api/
crash reporter	A										<section class="prog__container">Submit crash reports to a remote server.\n\nProcess: Main, Renderer\n\nThe following is an example of automatically submitting a crash report to a remote server:\n\n<pre><code>const {crashReporter} = require('electron')\n\ncrashReporter.start({\n  productName: 'YourName',\n  companyName: 'YourCompany',\n  submitURL: 'https://your-domain.com/url-to-submit',\n  uploadToServer: true\n})\n\n</code></pre>For setting up a server to accept and process crash reports, you can use following projects:\n\n<ul>\n<li><a href="https://github.com/mozilla/socorro">socorro</a></li>\n<li><a href="https://github.com/electron/mini-breakpad-server">mini-breakpad-server</a></li>\n</ul>Crash reports are saved locally in an application-specific temp directory folder. For a productName of YourName, crash reports will be stored in a folder named YourName Crashes inside the temp directory. You can customize this temp directory location for your app by calling the app.setPath('temp', '/my/custom/temp') API before starting the crash reporter.\n\n</section>	http://electron.atom.io/docs/api/
crashReporter.getLastCrashReport	A										<section class="prog__container">Returns CrashReport:\n\nReturns the date and ID of the last crash report. If no crash reports have been sent or the crash reporter has not been started, null is returned.\n\n</section>	http://electron.atom.io/docs/api/
crashReporter.getUploadToServer macOS	A										<section class="prog__container">Returns Boolean - Whether reports should be submitted to the server. Set through the start method or setUploadToServer.\n\nNote: This API can only be called from the main process.\n\n</section>	http://electron.atom.io/docs/api/
crashReporter.getUploadedReports	A										<section class="prog__container">Returns CrashReport[]:\n\nReturns all uploaded crash reports. Each report contains the date and uploaded ID.\n\n</section>	http://electron.atom.io/docs/api/
crashReporter.start	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul>\n<li><code class="highlighter-rouge">companyName</code> String (optional)</li>\n<li><code class="highlighter-rouge">submitURL</code> String - URL that crash reports will be sent to as POST.</li>\n<li><code class="highlighter-rouge">productName</code> String (optional) - Defaults to <code class="highlighter-rouge">app.getName()</code>.</li>\n<li><code class="highlighter-rouge">uploadToServer</code> Boolean (optional) <em>macOS</em> - Whether crash reports should be sent to the server Default is <code class="highlighter-rouge">true</code>.</li>\n<li><code class="highlighter-rouge">ignoreSystemCrashHandler</code> Boolean (optional) - Default is <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">extra</code> Object (optional) - An object you can define that will be sent along with the report. Only string properties are sent correctly, Nested objects are not supported.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">companyName</code> String (optional)</li>\n<li><code class="highlighter-rouge">submitURL</code> String - URL that crash reports will be sent to as POST.</li>\n<li><code class="highlighter-rouge">productName</code> String (optional) - Defaults to <code class="highlighter-rouge">app.getName()</code>.</li>\n<li><code class="highlighter-rouge">uploadToServer</code> Boolean (optional) <em>macOS</em> - Whether crash reports should be sent to the server Default is <code class="highlighter-rouge">true</code>.</li>\n<li><code class="highlighter-rouge">ignoreSystemCrashHandler</code> Boolean (optional) - Default is <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">extra</code> Object (optional) - An object you can define that will be sent along with the report. Only string properties are sent correctly, Nested objects are not supported.</li>\n</ul>You are required to call this method before using any other crashReporter APIs and in each process (main/renderer) from which you want to collect crash reports. You can pass different options to crashReporter.start when calling from different processes.\n\nNote: On Windows and Linux, Electron uses breakpad for crash collection and reporting. Crashes can be collected from the main and renderer process, but not from the child processes created via the child_process module.\n\nNote: On macOS, Electron uses a new crashpad client for crash collection and reporting. Crashes can be collected from the main, renderer and any of the child processes created via the child_process module. If you want to enable crash reporting, initializing crashpad from the main process using crashReporter.start is required regardless of which process you want to collect crashes from. Once initialized this way, the crashpad handler collects crashes from all processes. You still have to call crashReporter.start from the renderer process, otherwise crashes from renderer processes will get reported without companyName, productName or any of the extra information.\n\n</section>	http://electron.atom.io/docs/api/
debugger	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/
debugger.detach	A										<section class="prog__container">Detaches the debugger from the webContents.\n\n</section>	http://electron.atom.io/docs/api/
debugger.isAttached	A										<section class="prog__container">Returns Boolean - Whether a debugger is attached to the webContents.\n\n</section>	http://electron.atom.io/docs/api/
debugger.sendCommand	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">method</code> String - Method name, should be one of the methods defined by the remote debugging protocol.</li>\n<li><code class="highlighter-rouge">commandParams</code> Object (optional) - JSON object with request parameters.</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional) - Response\n    <ul>\n<li><code class="highlighter-rouge">error</code> Object - Error message indicating the failure of the command.</li>\n<li><code class="highlighter-rouge">result</code> Any - Response defined by the  returns  attribute of the command description in the remote debugging protocol.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">error</code> Object - Error message indicating the failure of the command.</li>\n<li><code class="highlighter-rouge">result</code> Any - Response defined by the  returns  attribute of the command description in the remote debugging protocol.</li>\n</ul>Send given command to the debugging target.\n\n</section>	http://electron.atom.io/docs/api/
desktop capturer	A										<section class="prog__container">Access information about media sources that can be used to capture audio and video from the desktop using the navigator.webkitGetUserMedia API.\n\nProcess: Renderer\n\nThe following example shows how to capture video from a desktop window whose title is Electron:\n\n<pre><code>// In the renderer process.\nconst {desktopCapturer} = require('electron')\n\ndesktopCapturer.getSources({types: ['window', 'screen']}, (error, sources) => {\n  if (error) throw error\n  for (let i = 0; i < sources.length; ++i) {\n    if (sources[i].name === 'Electron') {\n      navigator.webkitGetUserMedia({\n        audio: false,\n        video: {\n          mandatory: {\n            chromeMediaSource: 'desktop',\n            chromeMediaSourceId: sources[i].id,\n            minWidth: 1280,\n            maxWidth: 1280,\n            minHeight: 720,\n            maxHeight: 720\n          }\n        }\n      }, handleStream, handleError)\n      return\n    }\n  }\n})\n\nfunction handleStream (stream) {\n  document.querySelector('video').src = URL.createObjectURL(stream)\n}\n\nfunction handleError (e) {\n  console.log(e)\n}\n\n</code></pre>To capture video from a source provided by desktopCapturer the constraints passed to navigator.webkitGetUserMedia must include chromeMediaSource: 'desktop', and audio: false.\n\nTo capture both audio and video from the entire desktop the constraints passed to navigator.webkitGetUserMedia must include chromeMediaSource: 'screen', and audio: true, but should not include a chromeMediaSourceId constraint.\n\n</section>	http://electron.atom.io/docs/api/
dialog	A										<section class="prog__container">Display native system dialogs for opening and saving files, alerting, etc.\n\nProcess: Main\n\nAn example of showing a dialog to select multiple files and directories:\n\n<pre><code>const {dialog} = require('electron')\nconsole.log(dialog.showOpenDialog({properties: ['openFile', 'openDirectory', 'multiSelections']}))\n\n</code></pre>The Dialog is opened from Electron s main thread. If you want to use the dialog object from a renderer process, remember to access it using the remote:\n\n<pre><code>const {dialog} = require('electron').remote\nconsole.log(dialog)\n\n</code></pre></section>	http://electron.atom.io/docs/api/
dialog.showMessageBox	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">browserWindow</code> BrowserWindow (optional)</li>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul>\n<li><code class="highlighter-rouge">type</code> String (optional) - Can be <code class="highlighter-rouge">"none"</code>, <code class="highlighter-rouge">"info"</code>, <code class="highlighter-rouge">"error"</code>, <code class="highlighter-rouge">"question"</code> or <code class="highlighter-rouge">"warning"</code>. On Windows,  question  displays the same icon as  info , unless you set an icon using the  icon  option.</li>\n<li><code class="highlighter-rouge">buttons</code> String[] (optional) - Array of texts for buttons. On Windows, an empty array will result in one button labeled  OK .</li>\n<li><code class="highlighter-rouge">defaultId</code> Integer (optional) - Index of the button in the buttons array which will be selected by default when the message box opens.</li>\n<li><code class="highlighter-rouge">title</code> String (optional) - Title of the message box, some platforms will not show it.</li>\n<li><code class="highlighter-rouge">message</code> String - Content of the message box.</li>\n<li><code class="highlighter-rouge">detail</code> String (optional) - Extra information of the message.</li>\n<li><code class="highlighter-rouge">icon</code> <a href="/docs/api/native-image">NativeImage</a> (optional)</li>\n<li><code class="highlighter-rouge">cancelId</code> Integer (optional) - The value will be returned when user cancels the dialog instead of clicking the buttons of the dialog. By default it is the index of the buttons that have  cancel  or  no  as label, or 0 if there is no such buttons. On macOS and Windows the index of the  Cancel  button will always be used as <code class="highlighter-rouge">cancelId</code> even if it is specified.</li>\n<li><code class="highlighter-rouge">noLink</code> Boolean (optional) - On Windows Electron will try to figure out which one of the <code class="highlighter-rouge">buttons</code> are common buttons (like  Cancel  or  Yes ), and show the others as command links in the dialog. This can make the dialog appear in the style of modern Windows apps. If you don t like this behavior, you can set <code class="highlighter-rouge">noLink</code> to <code class="highlighter-rouge">true</code>.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional)\n    <ul>\n<li><code class="highlighter-rouge">response</code> Number - The index of the button that was clicked</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">type</code> String (optional) - Can be <code class="highlighter-rouge">"none"</code>, <code class="highlighter-rouge">"info"</code>, <code class="highlighter-rouge">"error"</code>, <code class="highlighter-rouge">"question"</code> or <code class="highlighter-rouge">"warning"</code>. On Windows,  question  displays the same icon as  info , unless you set an icon using the  icon  option.</li>\n<li><code class="highlighter-rouge">buttons</code> String[] (optional) - Array of texts for buttons. On Windows, an empty array will result in one button labeled  OK .</li>\n<li><code class="highlighter-rouge">defaultId</code> Integer (optional) - Index of the button in the buttons array which will be selected by default when the message box opens.</li>\n<li><code class="highlighter-rouge">title</code> String (optional) - Title of the message box, some platforms will not show it.</li>\n<li><code class="highlighter-rouge">message</code> String - Content of the message box.</li>\n<li><code class="highlighter-rouge">detail</code> String (optional) - Extra information of the message.</li>\n<li><code class="highlighter-rouge">icon</code> <a href="/docs/api/native-image">NativeImage</a> (optional)</li>\n<li><code class="highlighter-rouge">cancelId</code> Integer (optional) - The value will be returned when user cancels the dialog instead of clicking the buttons of the dialog. By default it is the index of the buttons that have  cancel  or  no  as label, or 0 if there is no such buttons. On macOS and Windows the index of the  Cancel  button will always be used as <code class="highlighter-rouge">cancelId</code> even if it is specified.</li>\n<li><code class="highlighter-rouge">noLink</code> Boolean (optional) - On Windows Electron will try to figure out which one of the <code class="highlighter-rouge">buttons</code> are common buttons (like  Cancel  or  Yes ), and show the others as command links in the dialog. This can make the dialog appear in the style of modern Windows apps. If you don t like this behavior, you can set <code class="highlighter-rouge">noLink</code> to <code class="highlighter-rouge">true</code>.</li>\n</ul><ul>\n<li><code class="highlighter-rouge">response</code> Number - The index of the button that was clicked</li>\n</ul>Returns Integer, the index of the clicked button, if a callback is provided it returns undefined.\n\nShows a message box, it will block the process until the message box is closed. It returns the index of the clicked button.\n\nThe browserWindow argument allows the dialog to attach itself to a parent window, making it modal.\n\nIf a callback is passed, the API call will be asynchronous and the result will be passed via callback(response).\n\n</section>	http://electron.atom.io/docs/api/
dialog.showOpenDialog	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">browserWindow</code> BrowserWindow (optional)</li>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul>\n<li><code class="highlighter-rouge">title</code> String (optional)</li>\n<li><code class="highlighter-rouge">defaultPath</code> String (optional)</li>\n<li><code class="highlighter-rouge">buttonLabel</code> String (optional) - Custom label for the confirmation button, when left empty the default label will be used.</li>\n<li><code class="highlighter-rouge">filters</code> <a href="/docs/api/structures/file-filter">FileFilter[]</a> (optional)</li>\n<li><code class="highlighter-rouge">properties</code> String[] (optional) - Contains which features the dialog should use, can contain <code class="highlighter-rouge">openFile</code>, <code class="highlighter-rouge">openDirectory</code>, <code class="highlighter-rouge">multiSelections</code>, <code class="highlighter-rouge">createDirectory</code> and <code class="highlighter-rouge">showHiddenFiles</code>.</li>\n<li><code class="highlighter-rouge">normalizeAccessKeys</code> Boolean (optional) - Normalize the keyboard access keys across platforms. Default is <code class="highlighter-rouge">false</code>. Enabling this assumes <code class="highlighter-rouge">&amp;</code> is used in the button labels for the placement of the keyboard shortcut access key and labels will be converted so they work correctly on each platform, <code class="highlighter-rouge">&amp;</code> characters are removed on macOS, converted to <code class="highlighter-rouge">_</code> on Linux, and left untouched on Windows. For example, a button label of <code class="highlighter-rouge">Vie&amp;w</code> will be converted to <code class="highlighter-rouge">Vie_w</code> on Linux and <code class="highlighter-rouge">View</code> on macOS and can be selected via <code class="highlighter-rouge">Alt-W</code> on Windows and Linux.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional)\n    <ul>\n<li><code class="highlighter-rouge">filePaths</code> String[] - An array of file paths chosen by the user</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">title</code> String (optional)</li>\n<li><code class="highlighter-rouge">defaultPath</code> String (optional)</li>\n<li><code class="highlighter-rouge">buttonLabel</code> String (optional) - Custom label for the confirmation button, when left empty the default label will be used.</li>\n<li><code class="highlighter-rouge">filters</code> <a href="/docs/api/structures/file-filter">FileFilter[]</a> (optional)</li>\n<li><code class="highlighter-rouge">properties</code> String[] (optional) - Contains which features the dialog should use, can contain <code class="highlighter-rouge">openFile</code>, <code class="highlighter-rouge">openDirectory</code>, <code class="highlighter-rouge">multiSelections</code>, <code class="highlighter-rouge">createDirectory</code> and <code class="highlighter-rouge">showHiddenFiles</code>.</li>\n<li><code class="highlighter-rouge">normalizeAccessKeys</code> Boolean (optional) - Normalize the keyboard access keys across platforms. Default is <code class="highlighter-rouge">false</code>. Enabling this assumes <code class="highlighter-rouge">&amp;</code> is used in the button labels for the placement of the keyboard shortcut access key and labels will be converted so they work correctly on each platform, <code class="highlighter-rouge">&amp;</code> characters are removed on macOS, converted to <code class="highlighter-rouge">_</code> on Linux, and left untouched on Windows. For example, a button label of <code class="highlighter-rouge">Vie&amp;w</code> will be converted to <code class="highlighter-rouge">Vie_w</code> on Linux and <code class="highlighter-rouge">View</code> on macOS and can be selected via <code class="highlighter-rouge">Alt-W</code> on Windows and Linux.</li>\n</ul><ul>\n<li><code class="highlighter-rouge">filePaths</code> String[] - An array of file paths chosen by the user</li>\n</ul>Returns String[], an array of file paths chosen by the user, if the callback is provided it returns undefined.\n\nThe browserWindow argument allows the dialog to attach itself to a parent window, making it modal.\n\nThe filters specifies an array of file types that can be displayed or selected when you want to limit the user to a specific type. For example:\n\n<pre><code>{\n  filters: [\n    {name: 'Images', extensions: ['jpg', 'png', 'gif']},\n    {name: 'Movies', extensions: ['mkv', 'avi', 'mp4']},\n    {name: 'Custom File Type', extensions: ['as']},\n    {name: 'All Files', extensions: ['*']}\n  ]\n}\n\n</code></pre>The extensions array should contain extensions without wildcards or dots (e.g. 'png' is good but '.png' and '*.png' are bad). To show all files, use the '*' wildcard (no other wildcard is supported).\n\nIf a callback is passed, the API call will be asynchronous and the result will be passed via callback(filenames)\n\nNote: On Windows and Linux an open dialog can not be both a file selector and a directory selector, so if you set properties to ['openFile', 'openDirectory'] on these platforms, a directory selector will be shown.\n\n</section>	http://electron.atom.io/docs/api/
dialog.showSaveDialog	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">browserWindow</code> BrowserWindow (optional)</li>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul>\n<li><code class="highlighter-rouge">title</code> String (optional)</li>\n<li><code class="highlighter-rouge">defaultPath</code> String (optional)</li>\n<li><code class="highlighter-rouge">buttonLabel</code> String (optional) - Custom label for the confirmation button, when left empty the default label will be used.</li>\n<li><code class="highlighter-rouge">filters</code> <a href="/docs/api/structures/file-filter">FileFilter[]</a> (optional)</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional)\n    <ul>\n<li><code class="highlighter-rouge">filename</code> String</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">title</code> String (optional)</li>\n<li><code class="highlighter-rouge">defaultPath</code> String (optional)</li>\n<li><code class="highlighter-rouge">buttonLabel</code> String (optional) - Custom label for the confirmation button, when left empty the default label will be used.</li>\n<li><code class="highlighter-rouge">filters</code> <a href="/docs/api/structures/file-filter">FileFilter[]</a> (optional)</li>\n</ul><ul>\n<li><code class="highlighter-rouge">filename</code> String</li>\n</ul>Returns String, the path of the file chosen by the user, if a callback is provided it returns undefined.\n\nThe browserWindow argument allows the dialog to attach itself to a parent window, making it modal.\n\nThe filters specifies an array of file types that can be displayed, see dialog.showOpenDialog for an example.\n\nIf a callback is passed, the API call will be asynchronous and the result will be passed via callback(filename)\n\n</section>	http://electron.atom.io/docs/api/
download item	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/
downloadItem.canResume	A										<section class="prog__container">Resumes Boolean - Whether the download can resume.\n\n</section>	http://electron.atom.io/docs/api/
downloadItem.cancel	A										<section class="prog__container">Cancels the download operation.\n\n</section>	http://electron.atom.io/docs/api/
downloadItem.getContentDisposition	A										<section class="prog__container">Returns String - The Content-Disposition field from the response header.\n\n</section>	http://electron.atom.io/docs/api/
downloadItem.getETag	A										<section class="prog__container">Returns String - ETag header value.\n\n</section>	http://electron.atom.io/docs/api/
downloadItem.getFilename	A										<section class="prog__container">Returns String - The file name of the download item.\n\nNote: The file name is not always the same as the actual one saved in local disk. If user changes the file name in a prompted download saving dialog, the actual name of saved file will be different.\n\n</section>	http://electron.atom.io/docs/api/
downloadItem.getLastModifiedTime	A										<section class="prog__container">Returns String - Last-Modified header value.\n\n</section>	http://electron.atom.io/docs/api/
downloadItem.getMimeType	A										<section class="prog__container">Returns String - The files mime type.\n\n</section>	http://electron.atom.io/docs/api/
downloadItem.getReceivedBytes	A										<section class="prog__container">Returns Integer - The received bytes of the download item.\n\n</section>	http://electron.atom.io/docs/api/
downloadItem.getSavePath	A										<section class="prog__container">Returns String - The save path of the download item. This will be either the path set via downloadItem.setSavePath(path) or the path selected from the shown save dialog.\n\n</section>	http://electron.atom.io/docs/api/
downloadItem.getState	A										<section class="prog__container">Returns String - The current state. Can be progressing, completed, cancelled or interrupted.\n\nNote: The following methods are useful specifically to resume a cancelled item when session is restarted.\n\n</section>	http://electron.atom.io/docs/api/
downloadItem.getTotalBytes	A										<section class="prog__container">Returns Integer - The total size in bytes of the download item.\n\nIf the size is unknown, it returns 0.\n\n</section>	http://electron.atom.io/docs/api/
downloadItem.getURL	A										<section class="prog__container">Returns String - The origin url where the item is downloaded from.\n\n</section>	http://electron.atom.io/docs/api/
downloadItem.getURLChain	A										<section class="prog__container">Returns String[] - The complete url chain of the item including any redirects.\n\n</section>	http://electron.atom.io/docs/api/
downloadItem.hasUserGesture	A										<section class="prog__container">Returns Boolean - Whether the download has user gesture.\n\n</section>	http://electron.atom.io/docs/api/
downloadItem.isPaused	A										<section class="prog__container">Returns Boolean - Whether the download is paused.\n\n</section>	http://electron.atom.io/docs/api/
downloadItem.pause	A										<section class="prog__container">Pauses the download.\n\n</section>	http://electron.atom.io/docs/api/
downloadItem.resume	A										<section class="prog__container">Resumes the download that has been paused.\n\n</section>	http://electron.atom.io/docs/api/
downloadItem.setSavePath	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">path</code> String - Set the save file path of the download item.</li>\n</ul>The API is only available in session s will-download callback function. If user doesn t set the save path via the API, Electron will use the original routine to determine the save path(Usually prompts a save dialog).\n\n</section>	http://electron.atom.io/docs/api/
environment variables	A										<section class="prog__container">Control application configuration and behavior without changing code.\n\nCertain Electron behaviors are controlled by environment variables because they are initialized earlier than the command line flags and the app s code.\n\nPOSIX shell example:\n\n<pre><code>$ export ELECTRON_ENABLE_LOGGING=true\n$ electron\n\n</code></pre>Windows console example:\n\n<pre><code>> set ELECTRON_ENABLE_LOGGING=true\n> electron\n\n</code></pre></section>	http://electron.atom.io/docs/api/
event.returnValue	A										<section class="prog__container">Set this to the value to be returned in a synchronous message.\n\n</section>	http://electron.atom.io/docs/api/
file object	A										<section class="prog__container">Use the HTML5 File API to work natively with files on the filesystem.\n\nThe DOM s File interface provides abstraction around native files in order to let users work on native files directly with the HTML5 file API. Electron has added a path attribute to the File interface which exposes the file s real path on filesystem.\n\nExample of getting a real path from a dragged-onto-the-app file:\n\n<pre><code><div id="holder">\n  Drag your file here\n</div>\n\n<script>\n  const holder = document.getElementById('holder')\n  holder.ondragover = () => {\n    return false;\n  }\n  holder.ondragleave = holder.ondragend = () => {\n    return false;\n  }\n  holder.ondrop = (e) => {\n    e.preventDefault()\n    for (let f of e.dataTransfer.files) {\n      console.log('File(s) you dragged here: ', f.path)\n    }\n    return false;\n  }\n</script>\n\n</code></pre></section>	http://electron.atom.io/docs/api/
frameless window	A										<section class="prog__container">Open a window without toolbars, borders, or other graphical  chrome .\n\nA frameless window is a window that has no chrome, the parts of the window, like toolbars, that are not a part of the web page. These are options on the BrowserWindow class.\n\n</section>	http://electron.atom.io/docs/api/
global shortcut	A										<section class="prog__container">Detect keyboard events when the application does not have keyboard focus.\n\nProcess: Main\n\nThe globalShortcut module can register/unregister a global keyboard shortcut with the operating system so that you can customize the operations for various shortcuts.\n\nNote: The shortcut is global; it will work even if the app does not have the keyboard focus. You should not use this module until the ready event of the app module is emitted.\n\n<pre><code>const {app, globalShortcut} = require('electron')\n\napp.on('ready', () => {\n  // Register a 'CommandOrControl+X' shortcut listener.\n  const ret = globalShortcut.register('CommandOrControl+X', () => {\n    console.log('CommandOrControl+X is pressed')\n  })\n\n  if (!ret) {\n    console.log('registration failed')\n  }\n\n  // Check whether a shortcut is registered.\n  console.log(globalShortcut.isRegistered('CommandOrControl+X'))\n})\n\napp.on('will-quit', () => {\n  // Unregister a shortcut.\n  globalShortcut.unregister('CommandOrControl+X')\n\n  // Unregister all shortcuts.\n  globalShortcut.unregisterAll()\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/
globalShortcut.isRegistered	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">accelerator</code> <a href="/docs/api/accelerator">Accelerator</a></li>\n</ul>Returns Boolean - Whether this application has registered accelerator.\n\nWhen the accelerator is already taken by other applications, this call will still return false. This behavior is intended by operating systems, since they don t want applications to fight for global shortcuts.\n\n</section>	http://electron.atom.io/docs/api/
globalShortcut.register	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">accelerator</code> <a href="/docs/api/accelerator">Accelerator</a></li>\n<li><code class="highlighter-rouge">callback</code> Function</li>\n</ul>Registers a global shortcut of accelerator. The callback is called when the registered shortcut is pressed by the user.\n\nWhen the accelerator is already taken by other applications, this call will silently fail. This behavior is intended by operating systems, since they don t want applications to fight for global shortcuts.\n\n</section>	http://electron.atom.io/docs/api/
globalShortcut.unregister	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">accelerator</code> <a href="/docs/api/accelerator">Accelerator</a></li>\n</ul>Unregisters the global shortcut of accelerator.\n\n</section>	http://electron.atom.io/docs/api/
image.crop	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">rect</code> Object - The area of the image to crop\n    <ul>\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul>Returns NativeImage - The cropped image.\n\n</section>	http://electron.atom.io/docs/api/
image.getBitmap	A										<section class="prog__container">Returns Buffer - A Buffer that contains the image s raw bitmap pixel data.\n\nThe difference between getBitmap() and toBitmap() is, getBitmap() does not copy the bitmap data, so you have to use the returned Buffer immediately in current event loop tick, otherwise the data might be changed or destroyed.\n\n</section>	http://electron.atom.io/docs/api/
image.getNativeHandle macOS	A										<section class="prog__container">Returns Buffer - A Buffer that stores C pointer to underlying native handle of the image. On macOS, a pointer to NSImage instance would be returned.\n\nNotice that the returned pointer is a weak pointer to the underlying native image instead of a copy, so you must ensure that the associated nativeImage instance is kept around.\n\n</section>	http://electron.atom.io/docs/api/
image.getSize	A										<section class="prog__container">Returns Object:\n\n<ul>\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul></section>	http://electron.atom.io/docs/api/
image.isEmpty	A										<section class="prog__container">Returns Boolean - Whether the image is empty.\n\n</section>	http://electron.atom.io/docs/api/
image.isTemplateImage	A										<section class="prog__container">Returns Boolean - Whether the image is a template image.\n\n</section>	http://electron.atom.io/docs/api/
image.resize	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul>\n<li><code class="highlighter-rouge">width</code> Integer (optional)</li>\n<li><code class="highlighter-rouge">height</code> Integer (optional)</li>\n<li><code class="highlighter-rouge">quality</code> String (optional) - The desired quality of the resize image. Possible values are <code class="highlighter-rouge">good</code>, <code class="highlighter-rouge">better</code> or <code class="highlighter-rouge">best</code>. The default is <code class="highlighter-rouge">best</code>. These values express a desired quality/speed tradeoff. They are translated into an algorithm-specific method that depends on the capabilities (CPU, GPU) of the underlying platform. It is possible for all three methods to be mapped to the same algorithm on a given platform.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">width</code> Integer (optional)</li>\n<li><code class="highlighter-rouge">height</code> Integer (optional)</li>\n<li><code class="highlighter-rouge">quality</code> String (optional) - The desired quality of the resize image. Possible values are <code class="highlighter-rouge">good</code>, <code class="highlighter-rouge">better</code> or <code class="highlighter-rouge">best</code>. The default is <code class="highlighter-rouge">best</code>. These values express a desired quality/speed tradeoff. They are translated into an algorithm-specific method that depends on the capabilities (CPU, GPU) of the underlying platform. It is possible for all three methods to be mapped to the same algorithm on a given platform.</li>\n</ul>Returns NativeImage - The resized image.\n\nIf only the height or the width are specified then the current aspect ratio will be preserved in the resized image.\n\n</section>	http://electron.atom.io/docs/api/
image.setTemplateImage	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">option</code> Boolean</li>\n</ul>Marks the image as a template image.\n\n</section>	http://electron.atom.io/docs/api/
image.toBitmap	A										<section class="prog__container">Returns Buffer - A Buffer that contains a copy of the image s raw bitmap pixel data.\n\n</section>	http://electron.atom.io/docs/api/
image.toDataURL	A										<section class="prog__container">Returns String - The data URL of the image.\n\n</section>	http://electron.atom.io/docs/api/
image.toJPEG	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">quality</code> Integer (<strong>required</strong>) - Between 0 - 100.</li>\n</ul>Returns Buffer - A Buffer that contains the image s JPEG encoded data.\n\n</section>	http://electron.atom.io/docs/api/
image.toPNG	A										<section class="prog__container">Returns Buffer - A Buffer that contains the image s PNG encoded data.\n\n</section>	http://electron.atom.io/docs/api/
incoming message	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/
ipc main	A										<section class="prog__container">Communicate asynchronously from the main process to renderer processes.\n\nProcess: Main\n\nThe ipcMain module is an instance of the EventEmitter class. When used in the main process, it handles asynchronous and synchronous messages sent from a renderer process (web page). Messages sent from a renderer will be emitted to this module.\n\n</section>	http://electron.atom.io/docs/api/
ipc renderer	A										<section class="prog__container">Communicate asynchronously from a renderer process to the main process.\n\nProcess: Renderer\n\nThe ipcRenderer module is an instance of the EventEmitter class. It provides a few methods so you can send synchronous and asynchronous messages from the render process (web page) to the main process. You can also receive replies from the main process.\n\nSee ipcMain for code examples.\n\n</section>	http://electron.atom.io/docs/api/
ipcMain.on	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">listener</code> Function</li>\n</ul>Listens to channel, when a new message arrives listener would be called with listener(event, args...).\n\n</section>	http://electron.atom.io/docs/api/
ipcMain.once	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">listener</code> Function</li>\n</ul>Adds a one time listener function for the event. This listener is invoked only the next time a message is sent to channel, after which it is removed.\n\n</section>	http://electron.atom.io/docs/api/
ipcMain.removeAllListeners	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">channel</code> String (optional)</li>\n</ul>Removes all listeners, or those of the specified channel.\n\nThe event object passed to the callback has the following methods:\n\n</section>	http://electron.atom.io/docs/api/
ipcMain.removeListener	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">listener</code> Function</li>\n</ul>Removes the specified listener from the listener array for the specified channel.\n\n</section>	http://electron.atom.io/docs/api/
ipcRenderer.on	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">listener</code> Function</li>\n</ul>Listens to channel, when a new message arrives listener would be called with listener(event, args...).\n\n</section>	http://electron.atom.io/docs/api/
ipcRenderer.once	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">listener</code> Function</li>\n</ul>Adds a one time listener function for the event. This listener is invoked only the next time a message is sent to channel, after which it is removed.\n\n</section>	http://electron.atom.io/docs/api/
ipcRenderer.removeAllListeners	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">channel</code> String (optional)</li>\n</ul>Removes all listeners, or those of the specified channel.\n\n</section>	http://electron.atom.io/docs/api/
ipcRenderer.removeListener	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">listener</code> Function</li>\n</ul>Removes the specified listener from the listener array for the specified channel.\n\n</section>	http://electron.atom.io/docs/api/
ipcRenderer.send	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">...args</code> any[]</li>\n</ul>Send a message to the main process asynchronously via channel, you can also send arbitrary arguments. Arguments will be serialized in JSON internally and hence no functions or prototype chain will be included.\n\nThe main process handles it by listening for channel with ipcMain module.\n\n</section>	http://electron.atom.io/docs/api/
ipcRenderer.sendSync	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">...args</code> any[]</li>\n</ul>Send a message to the main process synchronously via channel, you can also send arbitrary arguments. Arguments will be serialized in JSON internally and hence no functions or prototype chain will be included.\n\nThe main process handles it by listening for channel with ipcMain module, and replies by setting event.returnValue.\n\nNote: Sending a synchronous message will block the whole renderer process, unless you know what you are doing you should never use it.\n\n</section>	http://electron.atom.io/docs/api/
locales	A										<section class="prog__container">Locale values returned by app.getLocale().\n\nElectron uses Chromium s l10n_util library to fetch the locale. Possible values are listed below:\n\n</section>	http://electron.atom.io/docs/api/
menu	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/
menu item	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/
menu.append	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">menuItem</code> MenuItem</li>\n</ul>Appends the menuItem to the menu.\n\n</section>	http://electron.atom.io/docs/api/
menu.insert	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">pos</code> Integer</li>\n<li><code class="highlighter-rouge">menuItem</code> MenuItem</li>\n</ul>Inserts the menuItem to the pos position of the menu.\n\n</section>	http://electron.atom.io/docs/api/
menu.items	A										<section class="prog__container">A MenuItem[] array containing the menu s items.\n\nEach Menu consists of multiple MenuItems and each MenuItem can have a submenu.\n\nThe Menu class is only available in the main process, but you can also use it in the render process via the remote module.\n\n</section>	http://electron.atom.io/docs/api/
menu.popup	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">browserWindow</code> BrowserWindow (optional) - Default is <code class="highlighter-rouge">BrowserWindow.getFocusedWindow()</code>.</li>\n<li><code class="highlighter-rouge">x</code> Number (optional) - Default is the current mouse cursor position.</li>\n<li><code class="highlighter-rouge">y</code> Number (<strong>required</strong> if <code class="highlighter-rouge">x</code> is used) - Default is the current mouse cursor position.</li>\n<li><code class="highlighter-rouge">positioningItem</code> Number (optional) <em>macOS</em> - The index of the menu item to be positioned under the mouse cursor at the specified coordinates. Default is -1.</li>\n</ul>Pops up this menu as a context menu in the browserWindow.\n\n</section>	http://electron.atom.io/docs/api/
native image	A										<section class="prog__container">Create tray, dock, and application icons using PNG or JPG files.\n\nProcess: Main, Renderer\n\nIn Electron, for the APIs that take images, you can pass either file paths or NativeImage instances. An empty image will be used when null is passed.\n\nFor example, when creating a tray or setting a window s icon, you can pass an image file path as a String:\n\n<pre><code>const {BrowserWindow, Tray} = require('electron')\n\nconst appIcon = new Tray('/Users/somebody/images/icon.png')\nlet win = new BrowserWindow({icon: '/Users/somebody/images/window.png'})\nconsole.log(appIcon, win)\n\n</code></pre>Or read the image from the clipboard which returns a NativeImage:\n\n<pre><code>const {clipboard, Tray} = require('electron')\nconst image = clipboard.readImage()\nconst appIcon = new Tray(image)\nconsole.log(appIcon)\n\n</code></pre></section>	http://electron.atom.io/docs/api/
nativeImage.createEmpty	A										<section class="prog__container">Returns NativeImage\n\nCreates an empty NativeImage instance.\n\n</section>	http://electron.atom.io/docs/api/
nativeImage.createFromBuffer	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">buffer</code> <a href="https://nodejs.org/api/buffer.html#buffer_class_buffer">Buffer</a></li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul>\n<li><code class="highlighter-rouge">width</code> Integer (optional) - Required for bitmap buffers.</li>\n<li><code class="highlighter-rouge">height</code> Integer (optional) - Required for bitmap buffers.</li>\n<li><code class="highlighter-rouge">scaleFactor</code> Double (optional) - Defaults to 1.0.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">width</code> Integer (optional) - Required for bitmap buffers.</li>\n<li><code class="highlighter-rouge">height</code> Integer (optional) - Required for bitmap buffers.</li>\n<li><code class="highlighter-rouge">scaleFactor</code> Double (optional) - Defaults to 1.0.</li>\n</ul>Returns NativeImage\n\nCreates a new NativeImage instance from buffer.\n\n</section>	http://electron.atom.io/docs/api/
nativeImage.createFromDataURL	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">dataURL</code> String</li>\n</ul>Creates a new NativeImage instance from dataURL.\n\nNatively wrap images such as tray, dock, and application icons.\n\nProcess: Main, Renderer\n\n</section>	http://electron.atom.io/docs/api/
nativeImage.createFromPath	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">path</code> String</li>\n</ul>Returns NativeImage\n\nCreates a new NativeImage instance from a file located at path. This method returns an empty image if the path does not exist, cannot be read, or is not a valid image.\n\n<pre><code>const nativeImage = require('electron').nativeImage\n\nlet image = nativeImage.createFromPath('/Users/somebody/images/icon.png')\nconsole.log(image)\n\n</code></pre></section>	http://electron.atom.io/docs/api/
navigator	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/
net	A										<section class="prog__container">Issue HTTP/HTTPS requests using Chromium s native networking library\n\nProcess: Main\n\nThe net module is a client-side API for issuing HTTP(S) requests. It is similar to the HTTP and HTTPS modules of Node.js but uses Chromium s native networking library instead of the Node.js implementation, offering better support for web proxies.\n\nThe following is a non-exhaustive list of why you may consider using the net module instead of the native Node.js modules:\n\n<ul>\n<li>Automatic management of system proxy configuration, support of the wpad protocol and proxy pac configuration files.</li>\n<li>Automatic tunneling of HTTPS requests.</li>\n<li>Support for authenticating proxies using basic, digest, NTLM, Kerberos or negotiate authentication schemes.</li>\n<li>Support for traffic monitoring proxies: Fiddler-like proxies used for access control and monitoring.</li>\n</ul>The net module API has been specifically designed to mimic, as closely as possible, the familiar Node.js API. The API components including classes, methods, properties and event names are similar to those commonly used in Node.js.\n\nFor instance, the following example quickly shows how the net API might be used:\n\n<pre><code>const {app} = require('electron')\napp.on('ready', () => {\n  const {net} = require('electron')\n  const request = net.request('https://github.com')\n  request.on('response', (response) => {\n    console.log(`STATUS: ${response.statusCode}`)\n    console.log(`HEADERS: ${JSON.stringify(response.headers)}`)\n    response.on('data', (chunk) => {\n      console.log(`BODY: ${chunk}`)\n    })\n    response.on('end', () => {\n      console.log('No more data in response.')\n    })\n  })\n  request.end()\n})\n\n</code></pre>By the way, it is almost identical to how you would normally use the HTTP/HTTPS modules of Node.js\n\nThe net API can be used only after the application emits the ready event. Trying to use the module before the ready event will throw an error.\n\n</section>	http://electron.atom.io/docs/api/
power monitor	A										<section class="prog__container">Monitor power state changes.\n\nProcess: Main\n\nYou cannot require or use this module until the ready event of the app module is emitted.\n\nFor example:\n\n<pre><code>const electron = require('electron')\nconst {app} = electron\n\napp.on('ready', () => {\n  electron.powerMonitor.on('suspend', () => {\n    console.log('The system is going to sleep')\n  })\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/
power save blocker	A										<section class="prog__container">Block the system from entering low-power (sleep) mode.\n\nProcess: Main\n\nFor example:\n\n<pre><code>const {powerSaveBlocker} = require('electron')\n\nconst id = powerSaveBlocker.start('prevent-display-sleep')\nconsole.log(powerSaveBlocker.isStarted(id))\n\npowerSaveBlocker.stop(id)\n\n</code></pre></section>	http://electron.atom.io/docs/api/
powerSaveBlocker.start	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">type</code> String - Power save blocker type.\n    <ul>\n<li><code class="highlighter-rouge">prevent-app-suspension</code> - Prevent the application from being suspended. Keeps system active but allows screen to be turned off. Example use cases: downloading a file or playing audio.</li>\n<li><code class="highlighter-rouge">prevent-display-sleep</code> - Prevent the display from going to sleep. Keeps system and screen active. Example use case: playing video.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">prevent-app-suspension</code> - Prevent the application from being suspended. Keeps system active but allows screen to be turned off. Example use cases: downloading a file or playing audio.</li>\n<li><code class="highlighter-rouge">prevent-display-sleep</code> - Prevent the display from going to sleep. Keeps system and screen active. Example use case: playing video.</li>\n</ul>Returns Integer - The blocker ID that is assigned to this power blocker\n\nStarts preventing the system from entering lower-power mode. Returns an integer identifying the power save blocker.\n\nNote: prevent-display-sleep has higher precedence over prevent-app-suspension. Only the highest precedence type takes effect. In other words, prevent-display-sleep always takes precedence over prevent-app-suspension.\n\nFor example, an API calling A requests for prevent-app-suspension, and another calling B requests for prevent-display-sleep. prevent-display-sleep will be used until B stops its request. After that, prevent-app-suspension is used.\n\n</section>	http://electron.atom.io/docs/api/
powerSaveBlocker.stop	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">id</code> Integer - The power save blocker id returned by <code class="highlighter-rouge">powerSaveBlocker.start</code>.</li>\n</ul>Stops the specified power save blocker.\n\n</section>	http://electron.atom.io/docs/api/
process	A										<section class="prog__container">Extensions to process object.\n\nProcess: Main, Renderer\n\nElectron s process object is extended from the Node.js process object. It adds the following events, properties, and methods:\n\n</section>	http://electron.atom.io/docs/api/
process.crash	A										<section class="prog__container">Causes the main thread of the current process crash.\n\n</section>	http://electron.atom.io/docs/api/
process.getProcessMemoryInfo	A										<section class="prog__container">Returns Object:\n\n<ul>\n<li><code class="highlighter-rouge">workingSetSize</code> Integer - The amount of memory currently pinned to actual physical RAM.</li>\n<li><code class="highlighter-rouge">peakWorkingSetSize</code> Integer - The maximum amount of memory that has ever been pinned to actual physical RAM.</li>\n<li><code class="highlighter-rouge">privateBytes</code> Integer - The amount of memory not shared by other processes, such as JS heap or HTML content.</li>\n<li><code class="highlighter-rouge">sharedBytes</code> Integer - The amount of memory shared between processes, typically memory consumed by the Electron code itself</li>\n</ul>Returns an object giving memory usage statistics about the current process. Note that all statistics are reported in Kilobytes.\n\n</section>	http://electron.atom.io/docs/api/
process.hang	A										<section class="prog__container">Causes the main thread of the current process hang.\n\n</section>	http://electron.atom.io/docs/api/
process.setFdLimit macOS Linux	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">maxDescriptors</code> Integer</li>\n</ul>Sets the file descriptor soft limit to maxDescriptors or the OS hard limit, whichever is lower for the current process.\n\n</section>	http://electron.atom.io/docs/api/
protocol	A										<section class="prog__container">Register a custom protocol and intercept existing protocol requests.\n\nProcess: Main\n\nAn example of implementing a protocol that has the same effect as the file:// protocol:\n\n<pre><code>const {app, protocol} = require('electron')\nconst path = require('path')\n\napp.on('ready', () => {\n  protocol.registerFileProtocol('atom', (request, callback) => {\n    const url = request.url.substr(7)\n    callback({path: path.normalize(`${__dirname}/${url}`)})\n  }, (error) => {\n    if (error) console.error('Failed to register protocol')\n  })\n})\n\n</code></pre>Note: All methods unless specified can only be used after the ready event of the app module gets emitted.\n\n</section>	http://electron.atom.io/docs/api/
protocol.interceptBufferProtocol	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">handler</code> Function\n    <ul>\n<li><code class="highlighter-rouge">request</code> Object\n        <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">buffer</code> Buffer (optional)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">completion</code> Function (optional)\n    <ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">request</code> Object\n        <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">buffer</code> Buffer (optional)</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul><ul>\n<li><code class="highlighter-rouge">buffer</code> Buffer (optional)</li>\n</ul><ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>Intercepts scheme protocol and uses handler as the protocol s new handler which sends a Buffer as a response.\n\n</section>	http://electron.atom.io/docs/api/
protocol.interceptFileProtocol	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">handler</code> Function\n    <ul>\n<li><code class="highlighter-rouge">request</code> Object\n        <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">filePath</code> String</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">completion</code> Function (optional)\n    <ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">request</code> Object\n        <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">filePath</code> String</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul><ul>\n<li><code class="highlighter-rouge">filePath</code> String</li>\n</ul><ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>Intercepts scheme protocol and uses handler as the protocol s new handler which sends a file as a response.\n\n</section>	http://electron.atom.io/docs/api/
protocol.interceptHttpProtocol	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">handler</code> Function\n    <ul>\n<li><code class="highlighter-rouge">request</code> Object\n        <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">redirectRequest</code> Object\n            <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">session</code> Object (optional)</li>\n<li><code class="highlighter-rouge">uploadData</code> Object (optional)\n                <ul>\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">completion</code> Function (optional)\n    <ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">request</code> Object\n        <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">redirectRequest</code> Object\n            <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">session</code> Object (optional)</li>\n<li><code class="highlighter-rouge">uploadData</code> Object (optional)\n                <ul>\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul><ul>\n<li><code class="highlighter-rouge">redirectRequest</code> Object\n            <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">session</code> Object (optional)</li>\n<li><code class="highlighter-rouge">uploadData</code> Object (optional)\n                <ul>\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">session</code> Object (optional)</li>\n<li><code class="highlighter-rouge">uploadData</code> Object (optional)\n                <ul>\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul><ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>Intercepts scheme protocol and uses handler as the protocol s new handler which sends a new HTTP request as a response.\n\n</section>	http://electron.atom.io/docs/api/
protocol.interceptStringProtocol	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">handler</code> Function\n    <ul>\n<li><code class="highlighter-rouge">request</code> Object\n        <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">data</code> String (optional)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">completion</code> Function (optional)\n    <ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">request</code> Object\n        <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">data</code> String (optional)</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul><ul>\n<li><code class="highlighter-rouge">data</code> String (optional)</li>\n</ul><ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>Intercepts scheme protocol and uses handler as the protocol s new handler which sends a String as a response.\n\n</section>	http://electron.atom.io/docs/api/
protocol.isProtocolHandled	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>The callback will be called with a boolean that indicates whether there is already a handler for scheme.\n\n</section>	http://electron.atom.io/docs/api/
protocol.registerBufferProtocol	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">handler</code> Function\n    <ul>\n<li><code class="highlighter-rouge">request</code> Object\n        <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">buffer</code> (Buffer | <a href="/docs/api/structures/mime-typed-buffer">MimeTypedBuffer</a>) (optional)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">completion</code> Function (optional)\n    <ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">request</code> Object\n        <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">buffer</code> (Buffer | <a href="/docs/api/structures/mime-typed-buffer">MimeTypedBuffer</a>) (optional)</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul><ul>\n<li><code class="highlighter-rouge">buffer</code> (Buffer | <a href="/docs/api/structures/mime-typed-buffer">MimeTypedBuffer</a>) (optional)</li>\n</ul><ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>Registers a protocol of scheme that will send a Buffer as a response.\n\nThe usage is the same with registerFileProtocol, except that the callback should be called with either a Buffer object or an object that has the data, mimeType, and charset properties.\n\nExample:\n\n<pre><code>const {protocol} = require('electron')\n\nprotocol.registerBufferProtocol('atom', (request, callback) => {\n  callback({mimeType: 'text/html', data: new Buffer('<h5>Response</h5>')})\n}, (error) => {\n  if (error) console.error('Failed to register protocol')\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/
protocol.registerFileProtocol	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">handler</code> Function\n    <ul>\n<li><code class="highlighter-rouge">request</code> Object\n        <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">filePath</code> String (optional)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">completion</code> Function (optional)\n    <ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">request</code> Object\n        <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">filePath</code> String (optional)</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul><ul>\n<li><code class="highlighter-rouge">filePath</code> String (optional)</li>\n</ul><ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>Registers a protocol of scheme that will send the file as a response. The handler will be called with handler(request, callback) when a request is going to be created with scheme. completion will be called with completion(null) when scheme is successfully registered or completion(error) when failed.\n\nTo handle the request, the callback should be called with either the file s path or an object that has a path property, e.g. callback(filePath) or callback({path: filePath}).\n\nWhen callback is called with nothing, a number, or an object that has an error property, the request will fail with the error number you specified. For the available error numbers you can use, please see the net error list.\n\nBy default the scheme is treated like http:, which is parsed differently than protocols that follow the  generic URI syntax  like file:, so you probably want to call protocol.registerStandardSchemes to have your scheme treated as a standard scheme.\n\n</section>	http://electron.atom.io/docs/api/
protocol.registerHttpProtocol	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">handler</code> Function\n    <ul>\n<li><code class="highlighter-rouge">request</code> Object\n        <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">redirectRequest</code> Object\n            <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">session</code> Object (optional)</li>\n<li><code class="highlighter-rouge">uploadData</code> Object (optional)\n                <ul>\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">completion</code> Function (optional)\n    <ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">request</code> Object\n        <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">redirectRequest</code> Object\n            <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">session</code> Object (optional)</li>\n<li><code class="highlighter-rouge">uploadData</code> Object (optional)\n                <ul>\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul><ul>\n<li><code class="highlighter-rouge">redirectRequest</code> Object\n            <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">session</code> Object (optional)</li>\n<li><code class="highlighter-rouge">uploadData</code> Object (optional)\n                <ul>\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">session</code> Object (optional)</li>\n<li><code class="highlighter-rouge">uploadData</code> Object (optional)\n                <ul>\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul><ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>Registers a protocol of scheme that will send an HTTP request as a response.\n\nThe usage is the same with registerFileProtocol, except that the callback should be called with a redirectRequest object that has the url, method, referrer, uploadData and session properties.\n\nBy default the HTTP request will reuse the current session. If you want the request to have a different session you should set session to null.\n\nFor POST requests the uploadData object must be provided.\n\n</section>	http://electron.atom.io/docs/api/
protocol.registerServiceWorkerSchemes	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">schemes</code> String[] - Custom schemes to be registered to handle service workers.</li>\n</ul></section>	http://electron.atom.io/docs/api/
protocol.registerStandardSchemes	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">schemes</code> String[] - Custom schemes to be registered as standard schemes.</li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul>\n<li><code class="highlighter-rouge">secure</code> Boolean (optional) - <code class="highlighter-rouge">true</code> to register the scheme as secure. Default <code class="highlighter-rouge">false</code>.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">secure</code> Boolean (optional) - <code class="highlighter-rouge">true</code> to register the scheme as secure. Default <code class="highlighter-rouge">false</code>.</li>\n</ul>A standard scheme adheres to what RFC 3986 calls generic URI syntax. For example http and https are standard schemes, while file is not.\n\nRegistering a scheme as standard, will allow relative and absolute resources to be resolved correctly when served. Otherwise the scheme will behave like the file protocol, but without the ability to resolve relative URLs.\n\nFor example when you load following page with custom protocol without registering it as standard scheme, the image will not be loaded because non-standard schemes can not recognize relative URLs:\n\n<pre><code><body>\n  <img src='test.png'>\n</body>\n\n</code></pre>Registering a scheme as standard will allow access to files through the FileSystem API. Otherwise the renderer will throw a security error for the scheme.\n\nBy default web storage apis (localStorage, sessionStorage, webSQL, indexedDB, cookies) are disabled for non standard schemes. So in general if you want to register a custom protocol to replace the http protocol, you have to register it as a standard scheme:\n\n<pre><code>const {app, protocol} = require('electron')\n\nprotocol.registerStandardSchemes(['atom'])\napp.on('ready', () => {\n  protocol.registerHttpProtocol('atom', '...')\n})\n\n</code></pre>Note: This method can only be used before the ready event of the app module gets emitted.\n\n</section>	http://electron.atom.io/docs/api/
protocol.registerStringProtocol	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">handler</code> Function\n    <ul>\n<li><code class="highlighter-rouge">request</code> Object\n        <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">data</code> String (optional)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">completion</code> Function (optional)\n    <ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">request</code> Object\n        <ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">data</code> String (optional)</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul><ul>\n<li><code class="highlighter-rouge">data</code> String (optional)</li>\n</ul><ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>Registers a protocol of scheme that will send a String as a response.\n\nThe usage is the same with registerFileProtocol, except that the callback should be called with either a String or an object that has the data, mimeType, and charset properties.\n\n</section>	http://electron.atom.io/docs/api/
protocol.unregisterProtocol	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">completion</code> Function (optional)\n    <ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>Unregisters the custom protocol of scheme.\n\n</section>	http://electron.atom.io/docs/api/
remote	A										<section class="prog__container">Use main process modules from the renderer process.\n\nProcess: Renderer\n\nThe remote module provides a simple way to do inter-process communication (IPC) between the renderer process (web page) and the main process.\n\nIn Electron, GUI-related modules (such as dialog, menu etc.) are only available in the main process, not in the renderer process. In order to use them from the renderer process, the ipc module is necessary to send inter-process messages to the main process. With the remote module, you can invoke methods of the main process object without explicitly sending inter-process messages, similar to Java s RMI. An example of creating a browser window from a renderer process:\n\n<pre><code>const {BrowserWindow} = require('electron').remote\nlet win = new BrowserWindow({width: 800, height: 600})\nwin.loadURL('https://github.com')\n\n</code></pre>Note: For the reverse (access the renderer process from the main process), you can use webContents.executeJavascript.\n\n</section>	http://electron.atom.io/docs/api/
remote.getCurrentWebContents	A										<section class="prog__container">Returns WebContents - The web contents of this web page.\n\n</section>	http://electron.atom.io/docs/api/
remote.getCurrentWindow	A										<section class="prog__container">Returns BrowserWindow - The window to which this web page belongs.\n\n</section>	http://electron.atom.io/docs/api/
remote.getGlobal	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">name</code> String</li>\n</ul>Returns any - The global variable of name (e.g. global[name]) in the main process.\n\n</section>	http://electron.atom.io/docs/api/
remote.require	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">module</code> String</li>\n</ul>Returns any - The object returned by require(module) in the main process.\n\n</section>	http://electron.atom.io/docs/api/
request.end	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">chunk</code> (String | Buffer) (optional)</li>\n<li><code class="highlighter-rouge">encoding</code> String (optional)</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional)</li>\n</ul>Sends the last chunk of the request data. Subsequent write or end operations will not be allowed. The finish event is emitted just after the end operation.\n\n</section>	http://electron.atom.io/docs/api/
request.getHeader	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">name</code> String - Specify an extra header name.</li>\n</ul>Returns String - The value of a previously set extra header name.\n\n</section>	http://electron.atom.io/docs/api/
request.removeHeader	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">name</code> String - Specify an extra header name.</li>\n</ul>Removes a previously set extra header name. This method can be called only before first write. Trying to call it after the first write will throw an error.\n\n</section>	http://electron.atom.io/docs/api/
request.write	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">chunk</code> (String | Buffer) - A chunk of the request body s data. If it is a string, it is converted into a Buffer using the specified encoding.</li>\n<li><code class="highlighter-rouge">encoding</code> String (optional) - Used to convert string chunks into Buffer objects. Defaults to  utf-8 .</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional) - Called after the write operation ends.</li>\n</ul>callback is essentially a dummy function introduced in the purpose of keeping similarity with the Node.js API. It is called asynchronously in the next tick after chunk content have been delivered to the Chromium networking layer. Contrary to the Node.js implementation, it is not guaranteed that chunk content have been flushed on the wire before callback is called.\n\nAdds a chunk of data to the request body. The first write operation may cause the request headers to be issued on the wire. After the first write operation, it is not allowed to add or remove a custom header.\n\n</section>	http://electron.atom.io/docs/api/
screen	A										<section class="prog__container">Retrieve information about screen size, displays, cursor position, etc.\n\nProcess: Main, Renderer\n\nYou cannot require or use this module until the ready event of the app module is emitted.\n\nscreen is an EventEmitter.\n\nNote: In the renderer / DevTools, window.screen is a reserved DOM property, so writing let {screen} = require('electron') will not work.\n\nAn example of creating a window that fills the whole screen:\n\n<pre><code>const electron = require('electron')\nconst {app, BrowserWindow} = electron\n\nlet win\n\napp.on('ready', () => {\n  const {width, height} = electron.screen.getPrimaryDisplay().workAreaSize\n  win = new BrowserWindow({width, height})\n  win.loadURL('https://github.com')\n})\n\n</code></pre>Another example of creating a window in the external display:\n\n<pre><code>const electron = require('electron')\nconst {app, BrowserWindow} = require('electron')\n\nlet win\n\napp.on('ready', () => {\n  let displays = electron.screen.getAllDisplays()\n  let externalDisplay = displays.find((display) => {\n    return display.bounds.x !== 0 || display.bounds.y !== 0\n  })\n\n  if (externalDisplay) {\n    win = new BrowserWindow({\n      x: externalDisplay.bounds.x + 50,\n      y: externalDisplay.bounds.y + 50\n    })\n    win.loadURL('https://github.com')\n  }\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/
screen.getAllDisplays	A										<section class="prog__container">Returns Display[] - An array of displays that are currently available.\n\n</section>	http://electron.atom.io/docs/api/
screen.getCursorScreenPoint	A										<section class="prog__container">Returns Object:\n\n<ul>\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n</ul>The current absolute position of the mouse pointer.\n\n</section>	http://electron.atom.io/docs/api/
screen.getDisplayNearestPoint	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">point</code> Object\n    <ul>\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n</ul>Returns Display - The display nearest the specified point.\n\n</section>	http://electron.atom.io/docs/api/
screen.getPrimaryDisplay	A										<section class="prog__container">Returns Display - The primary display.\n\n</section>	http://electron.atom.io/docs/api/
ses.allowNTLMCredentialsForDomains	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">domains</code> String - A comma-seperated list of servers for which integrated authentication is enabled.</li>\n</ul>Dynamically sets whether to always send credentials for HTTP NTLM or Negotiate authentication.\n\n<pre><code>const {session} = require('electron')\n// consider any url ending with `example.com`, `foobar.com`, `baz`\n// for integrated authentication.\nsession.defaultSession.allowNTLMCredentialsForDomains('*example.com, *foobar.com, *baz')\n\n// consider all urls for integrated authentication.\nsession.defaultSession.allowNTLMCredentialsForDomains('*')\n\n</code></pre></section>	http://electron.atom.io/docs/api/
ses.clearAuthCache	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">options</code> (<a href="/docs/api/structures/remove-password">RemovePassword</a> | <a href="/docs/api/structures/remove-client-certificate">RemoveClientCertificate</a>)</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional) - Called when operation is done</li>\n</ul>Clears the session s HTTP authentication cache.\n\n</section>	http://electron.atom.io/docs/api/
ses.clearCache	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">callback</code> Function - Called when operation is done</li>\n</ul>Clears the session s HTTP cache.\n\n</section>	http://electron.atom.io/docs/api/
ses.clearHostResolverCache	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">callback</code> Function (optional) - Called when operation is done.</li>\n</ul>Clears the host resolver cache.\n\n</section>	http://electron.atom.io/docs/api/
ses.clearStorageData	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul>\n<li><code class="highlighter-rouge">origin</code> String - Should follow <code class="highlighter-rouge">window.location.origin</code> s representation <code class="highlighter-rouge">scheme://host:port</code>.</li>\n<li><code class="highlighter-rouge">storages</code> String[] - The types of storages to clear, can contain: <code class="highlighter-rouge">appcache</code>, <code class="highlighter-rouge">cookies</code>, <code class="highlighter-rouge">filesystem</code>, <code class="highlighter-rouge">indexdb</code>, <code class="highlighter-rouge">localstorage</code>, <code class="highlighter-rouge">shadercache</code>, <code class="highlighter-rouge">websql</code>, <code class="highlighter-rouge">serviceworkers</code></li>\n<li><code class="highlighter-rouge">quotas</code> String[] - The types of quotas to clear, can contain: <code class="highlighter-rouge">temporary</code>, <code class="highlighter-rouge">persistent</code>, <code class="highlighter-rouge">syncable</code>.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional) - Called when operation is done.</li>\n</ul><ul>\n<li><code class="highlighter-rouge">origin</code> String - Should follow <code class="highlighter-rouge">window.location.origin</code> s representation <code class="highlighter-rouge">scheme://host:port</code>.</li>\n<li><code class="highlighter-rouge">storages</code> String[] - The types of storages to clear, can contain: <code class="highlighter-rouge">appcache</code>, <code class="highlighter-rouge">cookies</code>, <code class="highlighter-rouge">filesystem</code>, <code class="highlighter-rouge">indexdb</code>, <code class="highlighter-rouge">localstorage</code>, <code class="highlighter-rouge">shadercache</code>, <code class="highlighter-rouge">websql</code>, <code class="highlighter-rouge">serviceworkers</code></li>\n<li><code class="highlighter-rouge">quotas</code> String[] - The types of quotas to clear, can contain: <code class="highlighter-rouge">temporary</code>, <code class="highlighter-rouge">persistent</code>, <code class="highlighter-rouge">syncable</code>.</li>\n</ul>Clears the data of web storages.\n\n</section>	http://electron.atom.io/docs/api/
ses.cookies	A										<section class="prog__container">A Cookies object for this session.\n\n</section>	http://electron.atom.io/docs/api/
ses.createInterruptedDownload	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul>\n<li><code class="highlighter-rouge">path</code> String - Absolute path of the download.</li>\n<li><code class="highlighter-rouge">urlChain</code> String[] - Complete URL chain for the download.</li>\n<li><code class="highlighter-rouge">mimeType</code> String (optional)</li>\n<li><code class="highlighter-rouge">offset</code> Integer - Start range for the download.</li>\n<li><code class="highlighter-rouge">length</code> Integer - Total length of the download.</li>\n<li><code class="highlighter-rouge">lastModified</code> String - Last-Modified header value.</li>\n<li><code class="highlighter-rouge">eTag</code> String - ETag header value.</li>\n<li><code class="highlighter-rouge">startTime</code> Double (optional) - Time when download was started in number of seconds since UNIX epoch.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">path</code> String - Absolute path of the download.</li>\n<li><code class="highlighter-rouge">urlChain</code> String[] - Complete URL chain for the download.</li>\n<li><code class="highlighter-rouge">mimeType</code> String (optional)</li>\n<li><code class="highlighter-rouge">offset</code> Integer - Start range for the download.</li>\n<li><code class="highlighter-rouge">length</code> Integer - Total length of the download.</li>\n<li><code class="highlighter-rouge">lastModified</code> String - Last-Modified header value.</li>\n<li><code class="highlighter-rouge">eTag</code> String - ETag header value.</li>\n<li><code class="highlighter-rouge">startTime</code> Double (optional) - Time when download was started in number of seconds since UNIX epoch.</li>\n</ul>Allows resuming cancelled or interrupted downloads from previous Session. The API will generate a DownloadItem that can be accessed with the will-download event. The DownloadItem will not have any WebContents associated with it and the initial state will be interrupted. The download will start only when the resume API is called on the DownloadItem.\n\n</section>	http://electron.atom.io/docs/api/
ses.disableNetworkEmulation	A										<section class="prog__container">Disables any network emulation already active for the session. Resets to the original network configuration.\n\n</section>	http://electron.atom.io/docs/api/
ses.enableNetworkEmulation	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul>\n<li><code class="highlighter-rouge">offline</code> Boolean (optional) - Whether to emulate network outage. Defaults to false.</li>\n<li><code class="highlighter-rouge">latency</code> Double (optional) - RTT in ms. Defaults to 0 which will disable latency throttling.</li>\n<li><code class="highlighter-rouge">downloadThroughput</code> Double (optional) - Download rate in Bps. Defaults to 0 which will disable download throttling.</li>\n<li><code class="highlighter-rouge">uploadThroughput</code> Double (optional) - Upload rate in Bps. Defaults to 0 which will disable upload throttling.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">offline</code> Boolean (optional) - Whether to emulate network outage. Defaults to false.</li>\n<li><code class="highlighter-rouge">latency</code> Double (optional) - RTT in ms. Defaults to 0 which will disable latency throttling.</li>\n<li><code class="highlighter-rouge">downloadThroughput</code> Double (optional) - Download rate in Bps. Defaults to 0 which will disable download throttling.</li>\n<li><code class="highlighter-rouge">uploadThroughput</code> Double (optional) - Upload rate in Bps. Defaults to 0 which will disable upload throttling.</li>\n</ul>Emulates network with the given configuration for the session.\n\n<pre><code>// To emulate a GPRS connection with 50kbps throughput and 500 ms latency.\nwindow.webContents.session.enableNetworkEmulation({\n  latency: 500,\n  downloadThroughput: 6400,\n  uploadThroughput: 6400\n})\n\n// To emulate a network outage.\nwindow.webContents.session.enableNetworkEmulation({offline: true})\n\n</code></pre></section>	http://electron.atom.io/docs/api/
ses.flushStorageData	A										<section class="prog__container">Writes any unwritten DOMStorage data to disk.\n\n</section>	http://electron.atom.io/docs/api/
ses.getBlobData	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">identifier</code> String - Valid UUID.</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">result</code> Buffer - Blob data.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">result</code> Buffer - Blob data.</li>\n</ul>Returns Blob - The blob data associated with the identifier.\n\n</section>	http://electron.atom.io/docs/api/
ses.getCacheSize	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">size</code> Integer - Cache size used in bytes.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">size</code> Integer - Cache size used in bytes.</li>\n</ul>Returns the session s current cache size.\n\n</section>	http://electron.atom.io/docs/api/
ses.getUserAgent	A										<section class="prog__container">Returns String - The user agent for this session.\n\n</section>	http://electron.atom.io/docs/api/
ses.resolveProxy	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">url</code> URL</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">proxy</code> Object</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">proxy</code> Object</li>\n</ul>Resolves the proxy information for url. The callback will be called with callback(proxy) when the request is performed.\n\n</section>	http://electron.atom.io/docs/api/
ses.setCertificateVerifyProc	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">proc</code> Function\n    <ul>\n<li><code class="highlighter-rouge">hostname</code> String</li>\n<li><code class="highlighter-rouge">certificate</code> <a href="/docs/api/structures/certificate">Certificate</a></li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">isTrusted</code> Boolean - Determines if the certificate should be trusted</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">hostname</code> String</li>\n<li><code class="highlighter-rouge">certificate</code> <a href="/docs/api/structures/certificate">Certificate</a></li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">isTrusted</code> Boolean - Determines if the certificate should be trusted</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">isTrusted</code> Boolean - Determines if the certificate should be trusted</li>\n</ul>Sets the certificate verify proc for session, the proc will be called with proc(hostname, certificate, callback) whenever a server certificate verification is requested. Calling callback(true) accepts the certificate, calling callback(false) rejects it.\n\nCalling setCertificateVerifyProc(null) will revert back to default certificate verify proc.\n\n<pre><code>const {BrowserWindow} = require('electron')\nlet win = new BrowserWindow()\n\nwin.webContents.session.setCertificateVerifyProc((hostname, cert, callback) => {\n  callback(hostname === 'github.com')\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/
ses.setDownloadPath	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">path</code> String - The download location</li>\n</ul>Sets download saving directory. By default, the download directory will be the Downloads under the respective app folder.\n\n</section>	http://electron.atom.io/docs/api/
ses.setPermissionRequestHandler	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">handler</code> Function\n    <ul>\n<li><code class="highlighter-rouge">webContents</code> Object - <a href="/docs/api/web-contents">WebContents</a> requesting the permission.</li>\n<li><code class="highlighter-rouge">permission</code> String - Enum of  media ,  geolocation ,  notifications ,  midiSysex ,  pointerLock ,  fullscreen ,  openExternal .</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">permissionGranted</code> Boolean - Allow or deny the permission</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">webContents</code> Object - <a href="/docs/api/web-contents">WebContents</a> requesting the permission.</li>\n<li><code class="highlighter-rouge">permission</code> String - Enum of  media ,  geolocation ,  notifications ,  midiSysex ,  pointerLock ,  fullscreen ,  openExternal .</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">permissionGranted</code> Boolean - Allow or deny the permission</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">permissionGranted</code> Boolean - Allow or deny the permission</li>\n</ul>Sets the handler which can be used to respond to permission requests for the session. Calling callback(true) will allow the permission and callback(false) will reject it.\n\n<pre><code>const {session} = require('electron')\nsession.fromPartition('some-partition').setPermissionRequestHandler((webContents, permission, callback) => {\n  if (webContents.getURL() === 'some-host' && permission === 'notifications') {\n    return callback(false) // denied.\n  }\n\n  callback(true)\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/
ses.setProxy	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">config</code> Object\n    <ul>\n<li><code class="highlighter-rouge">pacScript</code> String - The URL associated with the PAC file.</li>\n<li><code class="highlighter-rouge">proxyRules</code> String - Rules indicating which proxies to use.</li>\n<li><code class="highlighter-rouge">proxyBypassRules</code> String - Rules indicating which URLs should bypass the proxy settings.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function - Called when operation is done.</li>\n</ul><ul>\n<li><code class="highlighter-rouge">pacScript</code> String - The URL associated with the PAC file.</li>\n<li><code class="highlighter-rouge">proxyRules</code> String - Rules indicating which proxies to use.</li>\n<li><code class="highlighter-rouge">proxyBypassRules</code> String - Rules indicating which URLs should bypass the proxy settings.</li>\n</ul>Sets the proxy settings.\n\nWhen pacScript and proxyRules are provided together, the proxyRules option is ignored and pacScript configuration is applied.\n\nThe proxyRules has to follow the rules below:\n\n<pre><code>proxyRules = schemeProxies[";"<schemeProxies>]\nschemeProxies = [<urlScheme>"="]<proxyURIList>\nurlScheme = "http" | "https" | "ftp" | "socks"\nproxyURIList = <proxyURL>[","<proxyURIList>]\nproxyURL = [<proxyScheme>"://"]<proxyHost>[":"<proxyPort>]\n\n\n</code></pre>For example:\n\n<ul>\n<li><code class="highlighter-rouge">http=foopy:80;ftp=foopy2</code> - Use HTTP proxy <code class="highlighter-rouge">foopy:80</code> for <code class="highlighter-rouge">http://</code> URLs, and HTTP proxy <code class="highlighter-rouge">foopy2:80</code> for <code class="highlighter-rouge">ftp://</code> URLs.</li>\n<li><code class="highlighter-rouge">foopy:80</code> - Use HTTP proxy <code class="highlighter-rouge">foopy:80</code> for all URLs.</li>\n<li><code class="highlighter-rouge">foopy:80,bar,direct://</code> - Use HTTP proxy <code class="highlighter-rouge">foopy:80</code> for all URLs, failing over to <code class="highlighter-rouge">bar</code> if <code class="highlighter-rouge">foopy:80</code> is unavailable, and after that using no proxy.</li>\n<li><code class="highlighter-rouge">socks4://foopy</code> - Use SOCKS v4 proxy <code class="highlighter-rouge">foopy:1080</code> for all URLs.</li>\n<li><code class="highlighter-rouge">http=foopy,socks5://bar.com</code> - Use HTTP proxy <code class="highlighter-rouge">foopy</code> for http URLs, and fail over to the SOCKS5 proxy <code class="highlighter-rouge">bar.com</code> if <code class="highlighter-rouge">foopy</code> is unavailable.</li>\n<li><code class="highlighter-rouge">http=foopy,direct://</code> - Use HTTP proxy <code class="highlighter-rouge">foopy</code> for http URLs, and use no proxy if <code class="highlighter-rouge">foopy</code> is unavailable.</li>\n<li><code class="highlighter-rouge">http=foopy;socks=foopy2</code> - Use HTTP proxy <code class="highlighter-rouge">foopy</code> for http URLs, and use <code class="highlighter-rouge">socks4://foopy2</code> for all other URLs.</li>\n</ul>The proxyBypassRules is a comma separated list of rules described below:\n\n<ul>\n<li>\n<p><code class="highlighter-rouge">[ URL_SCHEME "://" ] HOSTNAME_PATTERN [ ":" &lt;port&gt; ]</code></p>\n<p>Match all hostnames that match the pattern HOSTNAME_PATTERN.</p>\n<p>Examples:  foobar.com ,  <em>foobar.com ,  </em>.foobar.com ,  <em>foobar.com:99 ,  https://x.</em>.y.com:99 </p>\n</li>\n<li>\n<p><code class="highlighter-rouge">"." HOSTNAME_SUFFIX_PATTERN [ ":" PORT ]</code></p>\n<p>Match a particular domain suffix.</p>\n<p>Examples:  .google.com ,  .com ,  http://.google.com </p>\n</li>\n<li>\n<p><code class="highlighter-rouge">[ SCHEME "://" ] IP_LITERAL [ ":" PORT ]</code></p>\n<p>Match URLs which are IP address literals.</p>\n<p>Examples:  127.0.1 ,  [0:0::1] ,  [::1] ,  http://[::1]:99 </p>\n</li>\n<li>\n<p><code class="highlighter-rouge">IP_LITERAL "/" PREFIX_LENGHT_IN_BITS</code></p>\n<p>Match any URL that is to an IP literal that falls between the given range. IP range is specified using CIDR notation.</p>\n<p>Examples:  192.168.1.1/16 ,  fefe:13::abc/33 .</p>\n</li>\n<li>\n<p><code class="highlighter-rouge">&lt;local&gt;</code></p>\n<p>Match local addresses. The meaning of <code class="highlighter-rouge">&lt;local&gt;</code> is whether the host matches one of:  127.0.0.1 ,  ::1 ,  localhost .</p>\n</li>\n</ul>[ URL_SCHEME "://" ] HOSTNAME_PATTERN [ ":" <port> ]\n\nMatch all hostnames that match the pattern HOSTNAME_PATTERN.\n\nExamples:  foobar.com ,  foobar.com ,  .foobar.com ,  foobar.com:99 ,  https://x..y.com:99 \n\n"." HOSTNAME_SUFFIX_PATTERN [ ":" PORT ]\n\nMatch a particular domain suffix.\n\nExamples:  .google.com ,  .com ,  http://.google.com \n\n[ SCHEME "://" ] IP_LITERAL [ ":" PORT ]\n\nMatch URLs which are IP address literals.\n\nExamples:  127.0.1 ,  [0:0::1] ,  [::1] ,  http://[::1]:99 \n\nIP_LITERAL "/" PREFIX_LENGHT_IN_BITS\n\nMatch any URL that is to an IP literal that falls between the given range. IP range is specified using CIDR notation.\n\nExamples:  192.168.1.1/16 ,  fefe:13::abc/33 .\n\n<local>\n\nMatch local addresses. The meaning of <local> is whether the host matches one of:  127.0.0.1 ,  ::1 ,  localhost .\n\n</section>	http://electron.atom.io/docs/api/
ses.setUserAgent	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">userAgent</code> String</li>\n<li><code class="highlighter-rouge">acceptLanguages</code> String (optional)</li>\n</ul>Overrides the userAgent and acceptLanguages for this session.\n\nThe acceptLanguages must a comma separated ordered list of language codes, for example "en-US,fr,de,ko,zh-CN,ja".\n\nThis doesn t affect existing WebContents, and each WebContents can use webContents.setUserAgent to override the session-wide user agent.\n\n</section>	http://electron.atom.io/docs/api/
ses.webRequest	A										<section class="prog__container">A WebRequest object for this session.\n\n</section>	http://electron.atom.io/docs/api/
session	A										<section class="prog__container">Manage browser sessions, cookies, cache, proxy settings, etc.\n\nProcess: Main\n\nThe session module can be used to create new Session objects.\n\nYou can also access the session of existing pages by using the session property of WebContents, or from the session module.\n\n<pre><code>const {BrowserWindow} = require('electron')\n\nlet win = new BrowserWindow({width: 800, height: 600})\nwin.loadURL('http://github.com')\n\nconst ses = win.webContents.session\nconsole.log(ses.getUserAgent())\n\n</code></pre></section>	http://electron.atom.io/docs/api/
session.defaultSession	A										<section class="prog__container">A Session object, the default session object of the app.\n\nGet and set properties of a session.\n\nProcess: Main\n\nYou can create a Session object in the session module:\n\n<pre><code>const {session} = require('electron')\nconst ses = session.fromPartition('persist:name')\nconsole.log(ses.getUserAgent())\n\n</code></pre></section>	http://electron.atom.io/docs/api/
session.fromPartition	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">partition</code> String</li>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul>\n<li><code class="highlighter-rouge">cache</code> Boolean - Whether to enable cache.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">cache</code> Boolean - Whether to enable cache.</li>\n</ul>Returns Session - A session instance from partition string. When there is an existing Session with the same partition, it will be returned; othewise a new Session instance will be created with options.\n\nIf partition starts with persist:, the page will use a persistent session available to all pages in the app with the same partition. if there is no persist: prefix, the page will use an in-memory session. If the partition is empty then default session of the app will be returned.\n\nTo create a Session with options, you have to ensure the Session with the partition has never been used before. There is no way to change the options of an existing Session object.\n\nThe session module has the following properties:\n\n</section>	http://electron.atom.io/docs/api/
shell	A										<section class="prog__container">Manage files and URLs using their default applications.\n\nProcess: Main, Renderer\n\nThe shell module provides functions related to desktop integration.\n\nAn example of opening a URL in the user s default browser:\n\n<pre><code>const {shell} = require('electron')\n\nshell.openExternal('https://github.com')\n\n</code></pre></section>	http://electron.atom.io/docs/api/
shell.beep	A										<section class="prog__container">Play the beep sound.\n\n</section>	http://electron.atom.io/docs/api/
shell.moveItemToTrash	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">fullPath</code> String</li>\n</ul>Returns Boolean - Whether the item was successfully moved to the trash\n\nMove the given file to trash and returns a boolean status for the operation.\n\n</section>	http://electron.atom.io/docs/api/
shell.openExternal	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">options</code> Object (optional) <em>macOS</em>\n<ul>\n<li><code class="highlighter-rouge">activate</code> Boolean - <code class="highlighter-rouge">true</code> to bring the opened application to the foreground. The default is <code class="highlighter-rouge">true</code>.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional) - If specified will perform the open asynchronously. <em>macOS</em>\n<ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">activate</code> Boolean - <code class="highlighter-rouge">true</code> to bring the opened application to the foreground. The default is <code class="highlighter-rouge">true</code>.</li>\n</ul><ul>\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>Returns Boolean - Whether an application was available to open the URL. If callback is specified, always returns true.\n\nOpen the given external protocol URL in the desktop s default manner. (For example, mailto: URLs in the user s default mail agent).\n\n</section>	http://electron.atom.io/docs/api/
shell.openItem	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">fullPath</code> String</li>\n</ul>Returns Boolean - Whether the item was successfully opened.\n\nOpen the given file in the desktop s default manner.\n\n</section>	http://electron.atom.io/docs/api/
shell.showItemInFolder	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">fullPath</code> String</li>\n</ul>Returns Boolean - Whether the item was successfully shown\n\nShow the given file in a file manager. If possible, select the file.\n\n</section>	http://electron.atom.io/docs/api/
shell.writeShortcutLink Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">shortcutPath</code> String</li>\n<li><code class="highlighter-rouge">operation</code> String (optional) - Default is <code class="highlighter-rouge">create</code>, can be one of following:\n    <ul>\n<li><code class="highlighter-rouge">create</code> - Creates a new shortcut, overwriting if necessary.</li>\n<li><code class="highlighter-rouge">update</code> - Updates specified properties only on an existing shortcut.</li>\n<li><code class="highlighter-rouge">replace</code> - Overwrites an existing shortcut, fails if the shortcut doesn t exist.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">options</code> <a href="/docs/api/structures/shortcut-details">ShortcutDetails</a></li>\n</ul><ul>\n<li><code class="highlighter-rouge">create</code> - Creates a new shortcut, overwriting if necessary.</li>\n<li><code class="highlighter-rouge">update</code> - Updates specified properties only on an existing shortcut.</li>\n<li><code class="highlighter-rouge">replace</code> - Overwrites an existing shortcut, fails if the shortcut doesn t exist.</li>\n</ul>Returns Boolean - Whether the shortcut was created successfully\n\nCreates or updates a shortcut link at shortcutPath.\n\n</section>	http://electron.atom.io/docs/api/
synopsis	A										<section class="prog__container">How to use Node.js and Electron APIs.\n\nAll of Node.js s built-in modules are available in Electron and third-party node modules also fully supported as well (including the native modules).\n\nElectron also provides some extra built-in modules for developing native desktop applications. Some modules are only available in the main process, some are only available in the renderer process (web page), and some can be used in both processes.\n\nThe basic rule is: if a module is GUI or low-level system related, then it should be only available in the main process. You need to be familiar with the concept of main process vs. renderer process scripts to be able to use those modules.\n\nThe main process script is just like a normal Node.js script:\n\n<pre><code>const {app, BrowserWindow} = require('electron')\nlet win = null\n\napp.on('ready', () => {\n  win = new BrowserWindow({width: 800, height: 600})\n  win.loadURL('https://github.com')\n})\n\n</code></pre>The renderer process is no different than a normal web page, except for the extra ability to use node modules:\n\n<pre><code><!DOCTYPE html>\n<html>\n<body>\n<script>\n  const {app} = require('electron').remote\n  console.log(app.getVersion())\n</script>\n</body>\n</html>\n\n</code></pre>To run your app, read Run your app.\n\n</section>	http://electron.atom.io/docs/api/
system preferences	A										<section class="prog__container">Get system preferences.\n\nProcess: Main\n\n<pre><code>const {systemPreferences} = require('electron')\nconsole.log(systemPreferences.isDarkMode())\n\n</code></pre></section>	http://electron.atom.io/docs/api/
systemPreferences.getAccentColor Windows	A										<section class="prog__container">Returns String - The users current system wide accent color preference in RGBA hexadecimal form.\n\n<pre><code>const color = systemPreferences.getAccentColor() // `"aabbccdd"`\nconst red = color.substr(0, 2) // "aa"\nconst green = color.substr(2, 2) // "bb"\nconst blue = color.substr(4, 2) // "cc"\nconst alpha = color.substr(6, 2) // "dd"\n\n</code></pre></section>	http://electron.atom.io/docs/api/
systemPreferences.getColor Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">color</code> String - One of the following values:\n    <ul>\n<li><code class="highlighter-rouge">3d-dark-shadow</code> - Dark shadow for three-dimensional display elements.</li>\n<li><code class="highlighter-rouge">3d-face</code> - Face color for three-dimensional display elements and for dialog box backgrounds.</li>\n<li><code class="highlighter-rouge">3d-highlight</code> - Highlight color for three-dimensional display elements.</li>\n<li><code class="highlighter-rouge">3d-light</code> - Light color for three-dimensional display elements.</li>\n<li><code class="highlighter-rouge">3d-shadow</code> - Shadow color for three-dimensional display elements.</li>\n<li><code class="highlighter-rouge">active-border</code> - Active window border.</li>\n<li><code class="highlighter-rouge">active-caption</code> - Active window title bar. Specifies the left side color in the color gradient of an active window s title bar if the gradient effect is enabled.</li>\n<li><code class="highlighter-rouge">active-caption-gradient</code> - Right side color in the color gradient of an active window s title bar.</li>\n<li><code class="highlighter-rouge">app-workspace</code> - Background color of multiple document interface (MDI) applications.</li>\n<li><code class="highlighter-rouge">button-text</code> - Text on push buttons.</li>\n<li><code class="highlighter-rouge">caption-text</code> - Text in caption, size box, and scroll bar arrow box.</li>\n<li><code class="highlighter-rouge">desktop</code> - Desktop background color.</li>\n<li><code class="highlighter-rouge">disabled-text</code> - Grayed (disabled) text.</li>\n<li><code class="highlighter-rouge">highlight</code> - Item(s) selected in a control.</li>\n<li><code class="highlighter-rouge">highlight-text</code> - Text of item(s) selected in a control.</li>\n<li><code class="highlighter-rouge">hotlight</code> - Color for a hyperlink or hot-tracked item.</li>\n<li><code class="highlighter-rouge">inactive-border</code> - Inactive window border.</li>\n<li><code class="highlighter-rouge">inactive-caption</code> - Inactive window caption. Specifies the left side color in the color gradient of an inactive window s title bar if the gradient effect is enabled.</li>\n<li><code class="highlighter-rouge">inactive-caption-gradient</code> - Right side color in the color gradient of an inactive window s title bar.</li>\n<li><code class="highlighter-rouge">inactive-caption-text</code> - Color of text in an inactive caption.</li>\n<li><code class="highlighter-rouge">info-background</code> - Background color for tooltip controls.</li>\n<li><code class="highlighter-rouge">info-text</code> - Text color for tooltip controls.</li>\n<li><code class="highlighter-rouge">menu</code> - Menu background.</li>\n<li><code class="highlighter-rouge">menu-highlight</code> - The color used to highlight menu items when the menu appears as a flat menu.</li>\n<li><code class="highlighter-rouge">menubar</code> - The background color for the menu bar when menus appear as flat menus.</li>\n<li><code class="highlighter-rouge">menu-text</code> - Text in menus.</li>\n<li><code class="highlighter-rouge">scrollbar</code> - Scroll bar gray area.</li>\n<li><code class="highlighter-rouge">window</code> - Window background.</li>\n<li><code class="highlighter-rouge">window-frame</code> - Window frame.</li>\n<li><code class="highlighter-rouge">window-text</code> - Text in windows.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">3d-dark-shadow</code> - Dark shadow for three-dimensional display elements.</li>\n<li><code class="highlighter-rouge">3d-face</code> - Face color for three-dimensional display elements and for dialog box backgrounds.</li>\n<li><code class="highlighter-rouge">3d-highlight</code> - Highlight color for three-dimensional display elements.</li>\n<li><code class="highlighter-rouge">3d-light</code> - Light color for three-dimensional display elements.</li>\n<li><code class="highlighter-rouge">3d-shadow</code> - Shadow color for three-dimensional display elements.</li>\n<li><code class="highlighter-rouge">active-border</code> - Active window border.</li>\n<li><code class="highlighter-rouge">active-caption</code> - Active window title bar. Specifies the left side color in the color gradient of an active window s title bar if the gradient effect is enabled.</li>\n<li><code class="highlighter-rouge">active-caption-gradient</code> - Right side color in the color gradient of an active window s title bar.</li>\n<li><code class="highlighter-rouge">app-workspace</code> - Background color of multiple document interface (MDI) applications.</li>\n<li><code class="highlighter-rouge">button-text</code> - Text on push buttons.</li>\n<li><code class="highlighter-rouge">caption-text</code> - Text in caption, size box, and scroll bar arrow box.</li>\n<li><code class="highlighter-rouge">desktop</code> - Desktop background color.</li>\n<li><code class="highlighter-rouge">disabled-text</code> - Grayed (disabled) text.</li>\n<li><code class="highlighter-rouge">highlight</code> - Item(s) selected in a control.</li>\n<li><code class="highlighter-rouge">highlight-text</code> - Text of item(s) selected in a control.</li>\n<li><code class="highlighter-rouge">hotlight</code> - Color for a hyperlink or hot-tracked item.</li>\n<li><code class="highlighter-rouge">inactive-border</code> - Inactive window border.</li>\n<li><code class="highlighter-rouge">inactive-caption</code> - Inactive window caption. Specifies the left side color in the color gradient of an inactive window s title bar if the gradient effect is enabled.</li>\n<li><code class="highlighter-rouge">inactive-caption-gradient</code> - Right side color in the color gradient of an inactive window s title bar.</li>\n<li><code class="highlighter-rouge">inactive-caption-text</code> - Color of text in an inactive caption.</li>\n<li><code class="highlighter-rouge">info-background</code> - Background color for tooltip controls.</li>\n<li><code class="highlighter-rouge">info-text</code> - Text color for tooltip controls.</li>\n<li><code class="highlighter-rouge">menu</code> - Menu background.</li>\n<li><code class="highlighter-rouge">menu-highlight</code> - The color used to highlight menu items when the menu appears as a flat menu.</li>\n<li><code class="highlighter-rouge">menubar</code> - The background color for the menu bar when menus appear as flat menus.</li>\n<li><code class="highlighter-rouge">menu-text</code> - Text in menus.</li>\n<li><code class="highlighter-rouge">scrollbar</code> - Scroll bar gray area.</li>\n<li><code class="highlighter-rouge">window</code> - Window background.</li>\n<li><code class="highlighter-rouge">window-frame</code> - Window frame.</li>\n<li><code class="highlighter-rouge">window-text</code> - Text in windows.</li>\n</ul>Returns String - The system color setting in RGB hexadecimal form (#ABCDEF). See the Windows docs for more details.\n\n</section>	http://electron.atom.io/docs/api/
systemPreferences.getUserDefault macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">key</code> String</li>\n<li><code class="highlighter-rouge">type</code> String - Can be <code class="highlighter-rouge">string</code>, <code class="highlighter-rouge">boolean</code>, <code class="highlighter-rouge">integer</code>, <code class="highlighter-rouge">float</code>, <code class="highlighter-rouge">double</code>, <code class="highlighter-rouge">url</code>, <code class="highlighter-rouge">array</code>, <code class="highlighter-rouge">dictionary</code></li>\n</ul>Get the value of key in system preferences.\n\nThis API uses NSUserDefaults on macOS. Some popular key and types are:\n\n<ul>\n<li><code class="highlighter-rouge">AppleInterfaceStyle</code>: <code class="highlighter-rouge">string</code></li>\n<li><code class="highlighter-rouge">AppleAquaColorVariant</code>: <code class="highlighter-rouge">integer</code></li>\n<li><code class="highlighter-rouge">AppleHighlightColor</code>: <code class="highlighter-rouge">string</code></li>\n<li><code class="highlighter-rouge">AppleShowScrollBars</code>: <code class="highlighter-rouge">string</code></li>\n<li><code class="highlighter-rouge">NSNavRecentPlaces</code>: <code class="highlighter-rouge">array</code></li>\n<li><code class="highlighter-rouge">NSPreferredWebServices</code>: <code class="highlighter-rouge">dictionary</code></li>\n<li><code class="highlighter-rouge">NSUserDictionaryReplacementItems</code>: <code class="highlighter-rouge">array</code></li>\n</ul></section>	http://electron.atom.io/docs/api/
systemPreferences.isAeroGlassEnabled Windows	A										<section class="prog__container">This method returns true if DWM composition (Aero Glass) is enabled, and false otherwise.\n\nAn example of using it to determine if you should create a transparent window or not (transparent windows won t work correctly when DWM composition is disabled):\n\n<pre><code>const {BrowserWindow, systemPreferences} = require('electron')\nlet browserOptions = {width: 1000, height: 800}\n\n// Make the window transparent only if the platform supports it.\nif (process.platform !== 'win32' || systemPreferences.isAeroGlassEnabled()) {\n  browserOptions.transparent = true\n  browserOptions.frame = false\n}\n\n// Create the window.\nlet win = new BrowserWindow(browserOptions)\n\n// Navigate.\nif (browserOptions.transparent) {\n  win.loadURL(`file://${__dirname}/index.html`)\n} else {\n  // No transparency, so we load a fallback that uses basic styles.\n  win.loadURL(`file://${__dirname}/fallback.html`)\n}\n\n</code></pre></section>	http://electron.atom.io/docs/api/
systemPreferences.isSwipeTrackingFromScrollEventsEnabled macOS	A										<section class="prog__container">Returns Boolean - Whether the Swipe between pages setting is on.\n\n</section>	http://electron.atom.io/docs/api/
systemPreferences.postLocalNotification macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">event</code> String</li>\n<li><code class="highlighter-rouge">userInfo</code> Object</li>\n</ul>Posts event as native notifications of macOS. The userInfo is an Object that contains the user information dictionary sent along with the notification.\n\n</section>	http://electron.atom.io/docs/api/
systemPreferences.postNotification macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">event</code> String</li>\n<li><code class="highlighter-rouge">userInfo</code> Object</li>\n</ul>Posts event as native notifications of macOS. The userInfo is an Object that contains the user information dictionary sent along with the notification.\n\n</section>	http://electron.atom.io/docs/api/
systemPreferences.setUserDefault macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">key</code> String</li>\n<li><code class="highlighter-rouge">type</code> String - See [<code class="highlighter-rouge">getUserDefault</code>][#systempreferencesgetuserdefaultkey-type-macos]</li>\n<li><code class="highlighter-rouge">value</code> String</li>\n</ul>Set the value of key in system preferences.\n\nNote that type should match actual type of value. An exception is thrown if they don t.\n\nThis API uses NSUserDefaults on macOS. Some popular key and types are:\n\n<ul>\n<li><code class="highlighter-rouge">ApplePressAndHoldEnabled</code>: <code class="highlighter-rouge">boolean</code></li>\n</ul></section>	http://electron.atom.io/docs/api/
systemPreferences.subscribeLocalNotification macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">event</code> String</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">event</code> String</li>\n<li><code class="highlighter-rouge">userInfo</code> Object</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">event</code> String</li>\n<li><code class="highlighter-rouge">userInfo</code> Object</li>\n</ul>Same as subscribeNotification, but uses NSNotificationCenter for local defaults. This is necessary for events such as NSUserDefaultsDidChangeNotification\n\n</section>	http://electron.atom.io/docs/api/
systemPreferences.subscribeNotification macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">event</code> String</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">event</code> String</li>\n<li><code class="highlighter-rouge">userInfo</code> Object</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">event</code> String</li>\n<li><code class="highlighter-rouge">userInfo</code> Object</li>\n</ul>Subscribes to native notifications of macOS, callback will be called with callback(event, userInfo) when the corresponding event happens. The userInfo is an Object that contains the user information dictionary sent along with the notification.\n\nThe id of the subscriber is returned, which can be used to unsubscribe the event.\n\nUnder the hood this API subscribes to NSDistributedNotificationCenter, example values of event are:\n\n<ul>\n<li><code class="highlighter-rouge">AppleInterfaceThemeChangedNotification</code></li>\n<li><code class="highlighter-rouge">AppleAquaColorVariantChanged</code></li>\n<li><code class="highlighter-rouge">AppleColorPreferencesChangedNotification</code></li>\n<li><code class="highlighter-rouge">AppleShowScrollBarsSettingChanged</code></li>\n</ul></section>	http://electron.atom.io/docs/api/
systemPreferences.unsubscribeLocalNotification macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">id</code> Integer</li>\n</ul>Same as unsubscribeNotification, but removes the subscriber from NSNotificationCenter.\n\n</section>	http://electron.atom.io/docs/api/
systemPreferences.unsubscribeNotification macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">id</code> Integer</li>\n</ul>Removes the subscriber with id.\n\n</section>	http://electron.atom.io/docs/api/
tray	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/
tray.destroy	A										<section class="prog__container">Destroys the tray icon immediately.\n\n</section>	http://electron.atom.io/docs/api/
tray.displayBalloon Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul>\n<li><code class="highlighter-rouge">icon</code> (<a href="/docs/api/native-image">NativeImage</a> | String) - (optional)</li>\n<li><code class="highlighter-rouge">title</code> String - (optional)</li>\n<li><code class="highlighter-rouge">content</code> String - (optional)</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">icon</code> (<a href="/docs/api/native-image">NativeImage</a> | String) - (optional)</li>\n<li><code class="highlighter-rouge">title</code> String - (optional)</li>\n<li><code class="highlighter-rouge">content</code> String - (optional)</li>\n</ul>Displays a tray balloon.\n\n</section>	http://electron.atom.io/docs/api/
tray.getBounds macOS Windows	A										<section class="prog__container">Returns Rectangle\n\nThe bounds of this tray icon as Object.\n\n</section>	http://electron.atom.io/docs/api/
tray.popUpContextMenu macOS Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">menu</code> Menu (optional)</li>\n<li><code class="highlighter-rouge">position</code> Object (optional) - The pop up position.\n    <ul>\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n</ul>Pops up the context menu of the tray icon. When menu is passed, the menu will be shown instead of the tray icon s context menu.\n\nThe position is only available on Windows, and it is (0, 0) by default.\n\n</section>	http://electron.atom.io/docs/api/
tray.setContextMenu	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">menu</code> Menu</li>\n</ul>Sets the context menu for this icon.\n\n</section>	http://electron.atom.io/docs/api/
tray.setHighlightMode macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">mode</code> String - Highlight mode with one of the following values:\n    <ul>\n<li><code class="highlighter-rouge">selection</code> - Highlight the tray icon when it is clicked and also when its context menu is open. This is the default.</li>\n<li><code class="highlighter-rouge">always</code> - Always highlight the tray icon.</li>\n<li><code class="highlighter-rouge">never</code> - Never highlight the tray icon.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">selection</code> - Highlight the tray icon when it is clicked and also when its context menu is open. This is the default.</li>\n<li><code class="highlighter-rouge">always</code> - Always highlight the tray icon.</li>\n<li><code class="highlighter-rouge">never</code> - Never highlight the tray icon.</li>\n</ul>Sets when the tray s icon background becomes highlighted (in blue).\n\nNote: You can use highlightMode with a BrowserWindow by toggling between 'never' and 'always' modes when the window visibility changes.\n\n<pre><code>const {BrowserWindow, Tray} = require('electron')\n\nconst win = new BrowserWindow({width: 800, height: 600})\nconst tray = new Tray('/path/to/my/icon')\n\ntray.on('click', () => {\n  win.isVisible() ? win.hide() : win.show()\n})\nwin.on('show', () => {\n  tray.setHighlightMode('always')\n})\nwin.on('hide', () => {\n  tray.setHighlightMode('never')\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/
tray.setImage	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">image</code> (<a href="/docs/api/native-image">NativeImage</a> | String)</li>\n</ul>Sets the image associated with this tray icon.\n\n</section>	http://electron.atom.io/docs/api/
tray.setPressedImage macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">image</code> <a href="/docs/api/native-image">NativeImage</a></li>\n</ul>Sets the image associated with this tray icon when pressed on macOS.\n\n</section>	http://electron.atom.io/docs/api/
tray.setTitle macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">title</code> String</li>\n</ul>Sets the title displayed aside of the tray icon in the status bar.\n\n</section>	http://electron.atom.io/docs/api/
tray.setToolTip	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">toolTip</code> String</li>\n</ul>Sets the hover text for this tray icon.\n\n</section>	http://electron.atom.io/docs/api/
web contents	A										<section class="prog__container">Render and control web pages.\n\nProcess: Main\n\nwebContents is an EventEmitter. It is responsible for rendering and controlling a web page and is a property of the BrowserWindow object. An example of accessing the webContents object:\n\n<pre><code>const {BrowserWindow} = require('electron')\n\nlet win = new BrowserWindow({width: 800, height: 1500})\nwin.loadURL('http://github.com')\n\nlet contents = win.webContents\nconsole.log(contents)\n\n</code></pre></section>	http://electron.atom.io/docs/api/
web frame	A										<section class="prog__container">Customize the rendering of the current web page.\n\nProcess: Renderer\n\nAn example of zooming current page to 200%.\n\n<pre><code>const {webFrame} = require('electron')\n\nwebFrame.setZoomFactor(2)\n\n</code></pre></section>	http://electron.atom.io/docs/api/
web request	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/
web view tag	A										<section class="prog__container">Display external web content in an isolated frame and process.\n\nUse the webview tag to embed  guest  content (such as web pages) in your Electron app. The guest content is contained within the webview container. An embedded page within your app controls how the guest content is laid out and rendered.\n\nUnlike an iframe, the webview runs in a separate process than your app. It doesn t have the same permissions as your web page and all interactions between your app and embedded content will be asynchronous. This keeps your app safe from the embedded content.\n\nFor security purposes, webview can only be used in BrowserWindows that have nodeIntegration enabled.\n\n</section>	http://electron.atom.io/docs/api/
webContents.fromId	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">id</code> Integer</li>\n</ul>Returns WebContents - A WebContents instance with the given ID.\n\nRender and control the contents of a BrowserWindow instance.\n\nProcess: Main\n\n</section>	http://electron.atom.io/docs/api/
webContents.getAllWebContents	A										<section class="prog__container">Returns WebContents[] - An array of all WebContents instances. This will contain web contents for all windows, webviews, opened devtools, and devtools extension background pages.\n\n</section>	http://electron.atom.io/docs/api/
webContents.getFocusedWebContents	A										<section class="prog__container">Returns WebContents - The web contents that is focused in this application, otherwise returns null.\n\n</section>	http://electron.atom.io/docs/api/
webFrame.executeJavaScript	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">code</code> String</li>\n<li><code class="highlighter-rouge">userGesture</code> Boolean (optional) - Default is <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional) - Called after script has been executed.\n    <ul>\n<li><code class="highlighter-rouge">result</code> Any</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">result</code> Any</li>\n</ul>Evaluates code in page.\n\nIn the browser window some HTML APIs like requestFullScreen can only be invoked by a gesture from the user. Setting userGesture to true will remove this limitation.\n\n</section>	http://electron.atom.io/docs/api/
webFrame.getResourceUsage	A										<section class="prog__container">Returns Object:\n\n<ul>\n<li><code class="highlighter-rouge">images</code> <a href="/docs/api/structures/memory-usage-details">MemoryUsageDetails</a></li>\n<li><code class="highlighter-rouge">cssStyleSheets</code> <a href="/docs/api/structures/memory-usage-details">MemoryUsageDetails</a></li>\n<li><code class="highlighter-rouge">xslStyleSheets</code> <a href="/docs/api/structures/memory-usage-details">MemoryUsageDetails</a></li>\n<li><code class="highlighter-rouge">fonts</code> <a href="/docs/api/structures/memory-usage-details">MemoryUsageDetails</a></li>\n<li><code class="highlighter-rouge">other</code> <a href="/docs/api/structures/memory-usage-details">MemoryUsageDetails</a></li>\n</ul>Returns an object describing usage information of Blink s internal memory caches.\n\n<pre><code>const {webFrame} = require('electron')\nconsole.log(webFrame.getResourceUsage())\n\n</code></pre>This will generate:\n\n<pre><code>{\n  images: {\n    count: 22,\n    size: 2549,\n    liveSize: 2542,\n    decodedSize: 478,\n    purgedSize: 0,\n    purgeableSize: 0\n  },\n  cssStyleSheets: { /* same with "images" */ },\n  xslStyleSheets: { /* same with "images" */ },\n  fonts: { /* same with "images" */ },\n  other: { /* same with "images" */ }\n}\n\n</code></pre></section>	http://electron.atom.io/docs/api/
webFrame.getZoomFactor	A										<section class="prog__container">Returns Number - The current zoom factor.\n\n</section>	http://electron.atom.io/docs/api/
webFrame.getZoomLevel	A										<section class="prog__container">Returns Number - The current zoom level.\n\n</section>	http://electron.atom.io/docs/api/
webFrame.insertText	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul>Inserts text to the focused element.\n\n</section>	http://electron.atom.io/docs/api/
webFrame.registerURLSchemeAsBypassingCSP	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">scheme</code> String</li>\n</ul>Resources will be loaded from this scheme regardless of the current page s Content Security Policy.\n\n</section>	http://electron.atom.io/docs/api/
webFrame.registerURLSchemeAsPrivileged	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul>\n<li><code class="highlighter-rouge">secure</code> Boolean - (optional) Default true.</li>\n<li><code class="highlighter-rouge">bypassCSP</code> Boolean - (optional) Default true.</li>\n<li><code class="highlighter-rouge">allowServiceWorkers</code> Boolean - (optional) Default true.</li>\n<li><code class="highlighter-rouge">supportFetchAPI</code> Boolean - (optional) Default true.</li>\n<li><code class="highlighter-rouge">corsEnabled</code> Boolean - (optional) Default true.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">secure</code> Boolean - (optional) Default true.</li>\n<li><code class="highlighter-rouge">bypassCSP</code> Boolean - (optional) Default true.</li>\n<li><code class="highlighter-rouge">allowServiceWorkers</code> Boolean - (optional) Default true.</li>\n<li><code class="highlighter-rouge">supportFetchAPI</code> Boolean - (optional) Default true.</li>\n<li><code class="highlighter-rouge">corsEnabled</code> Boolean - (optional) Default true.</li>\n</ul>Registers the scheme as secure, bypasses content security policy for resources, allows registering ServiceWorker and supports fetch API.\n\nSpecify an option with the value of false to omit it from the registration. An example of registering a privileged scheme, without bypassing Content Security Policy:\n\n<pre><code>const {webFrame} = require('electron')\nwebFrame.registerURLSchemeAsPrivileged('foo', { bypassCSP: false })\n\n</code></pre></section>	http://electron.atom.io/docs/api/
webFrame.registerURLSchemeAsSecure	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">scheme</code> String</li>\n</ul>Registers the scheme as secure scheme.\n\nSecure schemes do not trigger mixed content warnings. For example, https and data are secure schemes because they cannot be corrupted by active network attackers.\n\n</section>	http://electron.atom.io/docs/api/
webFrame.setLayoutZoomLevelLimits	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">minimumLevel</code> Number</li>\n<li><code class="highlighter-rouge">maximumLevel</code> Number</li>\n</ul>Sets the maximum and minimum layout-based (i.e. non-visual) zoom level.\n\n</section>	http://electron.atom.io/docs/api/
webFrame.setSpellCheckProvider	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">language</code> String</li>\n<li><code class="highlighter-rouge">autoCorrectWord</code> Boolean</li>\n<li><code class="highlighter-rouge">provider</code> Object\n    <ul>\n<li><code class="highlighter-rouge">spellCheck</code> Function - Returns <code class="highlighter-rouge">Boolean</code>\n<ul>\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">spellCheck</code> Function - Returns <code class="highlighter-rouge">Boolean</code>\n<ul>\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul>Sets a provider for spell checking in input fields and text areas.\n\nThe provider must be an object that has a spellCheck method that returns whether the word passed is correctly spelled.\n\nAn example of using node-spellchecker as provider:\n\n<pre><code>const {webFrame} = require('electron')\nwebFrame.setSpellCheckProvider('en-US', true, {\n  spellCheck (text) {\n    return !(require('spellchecker').isMisspelled(text))\n  }\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/
webFrame.setVisualZoomLevelLimits	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">minimumLevel</code> Number</li>\n<li><code class="highlighter-rouge">maximumLevel</code> Number</li>\n</ul>Sets the maximum and minimum pinch-to-zoom level.\n\n</section>	http://electron.atom.io/docs/api/
webFrame.setZoomFactor	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">factor</code> Number - Zoom factor.</li>\n</ul>Changes the zoom factor to the specified factor. Zoom factor is zoom percent divided by 100, so 300% = 3.0.\n\n</section>	http://electron.atom.io/docs/api/
webFrame.setZoomLevel	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">level</code> Number - Zoom level</li>\n</ul>Changes the zoom level to the specified level. The original size is 0 and each increment above or below represents zooming 20% larger or smaller to default limits of 300% and 50% of original size, respectively.\n\n</section>	http://electron.atom.io/docs/api/
webFrame.setZoomLevelLimits	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">minimumLevel</code> Number</li>\n<li><code class="highlighter-rouge">maximumLevel</code> Number</li>\n</ul>Deprecated: Call setVisualZoomLevelLimits instead to set the visual zoom level limits. This method will be removed in Electron 2.0.\n\n</section>	http://electron.atom.io/docs/api/
webRequest.onBeforeRedirect	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">filter</code> Object</li>\n<li><code class="highlighter-rouge">listener</code> Function\n    <ul>\n<li><code class="highlighter-rouge">details</code> Object\n        <ul>\n<li><code class="highlighter-rouge">id</code> String</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">redirectURL</code> String</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">ip</code> String (optional) - The server IP address that the request was actually sent to.</li>\n<li><code class="highlighter-rouge">fromCache</code> Boolean</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">details</code> Object\n        <ul>\n<li><code class="highlighter-rouge">id</code> String</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">redirectURL</code> String</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">ip</code> String (optional) - The server IP address that the request was actually sent to.</li>\n<li><code class="highlighter-rouge">fromCache</code> Boolean</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">id</code> String</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">redirectURL</code> String</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">ip</code> String (optional) - The server IP address that the request was actually sent to.</li>\n<li><code class="highlighter-rouge">fromCache</code> Boolean</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n</ul>The listener will be called with listener(details) when a server initiated redirect is about to occur.\n\n</section>	http://electron.atom.io/docs/api/
webRequest.onBeforeRequest	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">filter</code> Object</li>\n<li><code class="highlighter-rouge">listener</code> Function\n    <ul>\n<li><code class="highlighter-rouge">details</code> Object\n        <ul>\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">response</code> Object\n            <ul>\n<li><code class="highlighter-rouge">cancel</code> Boolean (optional)</li>\n<li><code class="highlighter-rouge">redirectURL</code> String (optional) - The original request is prevented from being sent or completed and is instead redirected to the given URL.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">details</code> Object\n        <ul>\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul>\n<li><code class="highlighter-rouge">response</code> Object\n            <ul>\n<li><code class="highlighter-rouge">cancel</code> Boolean (optional)</li>\n<li><code class="highlighter-rouge">redirectURL</code> String (optional) - The original request is prevented from being sent or completed and is instead redirected to the given URL.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">uploadData</code> <a href="/docs/api/structures/upload-data">UploadData[]</a></li>\n</ul><ul>\n<li><code class="highlighter-rouge">response</code> Object\n            <ul>\n<li><code class="highlighter-rouge">cancel</code> Boolean (optional)</li>\n<li><code class="highlighter-rouge">redirectURL</code> String (optional) - The original request is prevented from being sent or completed and is instead redirected to the given URL.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">cancel</code> Boolean (optional)</li>\n<li><code class="highlighter-rouge">redirectURL</code> String (optional) - The original request is prevented from being sent or completed and is instead redirected to the given URL.</li>\n</ul>The listener will be called with listener(details, callback) when a request is about to occur.\n\nThe uploadData is an array of UploadData objects.\n\nThe callback has to be called with an response object.\n\n</section>	http://electron.atom.io/docs/api/
webRequest.onBeforeSendHeaders	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">filter</code> Object</li>\n<li><code class="highlighter-rouge">listener</code> Function</li>\n</ul>The listener will be called with listener(details, callback) before sending an HTTP request, once the request headers are available. This may occur after a TCP connection is made to the server, but before any http data is sent.\n\n<ul>\n<li><code class="highlighter-rouge">details</code> Object\n    <ul>\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">requestHeaders</code> Object</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">response</code> Object\n        <ul>\n<li><code class="highlighter-rouge">cancel</code> Boolean (optional)</li>\n<li><code class="highlighter-rouge">requestHeaders</code> Object (optional) - When provided, request will be made with these headers.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">requestHeaders</code> Object</li>\n</ul><ul>\n<li><code class="highlighter-rouge">response</code> Object\n        <ul>\n<li><code class="highlighter-rouge">cancel</code> Boolean (optional)</li>\n<li><code class="highlighter-rouge">requestHeaders</code> Object (optional) - When provided, request will be made with these headers.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">cancel</code> Boolean (optional)</li>\n<li><code class="highlighter-rouge">requestHeaders</code> Object (optional) - When provided, request will be made with these headers.</li>\n</ul>The callback has to be called with an response object.\n\n</section>	http://electron.atom.io/docs/api/
webRequest.onCompleted	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">filter</code> Object</li>\n<li><code class="highlighter-rouge">listener</code> Function\n    <ul>\n<li><code class="highlighter-rouge">details</code> Object\n        <ul>\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n<li><code class="highlighter-rouge">fromCache</code> Boolean</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">statusLine</code> String</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">details</code> Object\n        <ul>\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n<li><code class="highlighter-rouge">fromCache</code> Boolean</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">statusLine</code> String</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n<li><code class="highlighter-rouge">fromCache</code> Boolean</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">statusLine</code> String</li>\n</ul>The listener will be called with listener(details) when a request is completed.\n\n</section>	http://electron.atom.io/docs/api/
webRequest.onHeadersReceived	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">filter</code> Object</li>\n<li><code class="highlighter-rouge">listener</code> Function</li>\n</ul>The listener will be called with listener(details, callback) when HTTP response headers of a request have been received.\n\n<ul>\n<li><code class="highlighter-rouge">details</code> Object\n    <ul>\n<li><code class="highlighter-rouge">id</code> String</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">statusLine</code> String</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">response</code> Object\n        <ul>\n<li><code class="highlighter-rouge">cancel</code> Boolean</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object (optional) - When provided, the server is assumed to have responded with these headers.</li>\n<li><code class="highlighter-rouge">statusLine</code> String (optional) - Should be provided when overriding <code class="highlighter-rouge">responseHeaders</code> to change header status otherwise original response header s status will be used.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">id</code> String</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">statusLine</code> String</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n</ul><ul>\n<li><code class="highlighter-rouge">response</code> Object\n        <ul>\n<li><code class="highlighter-rouge">cancel</code> Boolean</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object (optional) - When provided, the server is assumed to have responded with these headers.</li>\n<li><code class="highlighter-rouge">statusLine</code> String (optional) - Should be provided when overriding <code class="highlighter-rouge">responseHeaders</code> to change header status otherwise original response header s status will be used.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">cancel</code> Boolean</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object (optional) - When provided, the server is assumed to have responded with these headers.</li>\n<li><code class="highlighter-rouge">statusLine</code> String (optional) - Should be provided when overriding <code class="highlighter-rouge">responseHeaders</code> to change header status otherwise original response header s status will be used.</li>\n</ul>The callback has to be called with an response object.\n\n</section>	http://electron.atom.io/docs/api/
webRequest.onResponseStarted	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">filter</code> Object</li>\n<li><code class="highlighter-rouge">listener</code> Function\n    <ul>\n<li><code class="highlighter-rouge">details</code> Object\n        <ul>\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n<li><code class="highlighter-rouge">fromCache</code> Boolean - Indicates whether the response was fetched from disk cache.</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">statusLine</code> String</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">details</code> Object\n        <ul>\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n<li><code class="highlighter-rouge">fromCache</code> Boolean - Indicates whether the response was fetched from disk cache.</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">statusLine</code> String</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n<li><code class="highlighter-rouge">fromCache</code> Boolean - Indicates whether the response was fetched from disk cache.</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">statusLine</code> String</li>\n</ul>The listener will be called with listener(details) when first byte of the response body is received. For HTTP requests, this means that the status line and response headers are available.\n\n</section>	http://electron.atom.io/docs/api/
webRequest.onSendHeaders	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">filter</code> Object</li>\n<li><code class="highlighter-rouge">listener</code> Function\n    <ul>\n<li><code class="highlighter-rouge">details</code> Object\n        <ul>\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">requestHeaders</code> Object</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">details</code> Object\n        <ul>\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">requestHeaders</code> Object</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">requestHeaders</code> Object</li>\n</ul>The listener will be called with listener(details) just before a request is going to be sent to the server, modifications of previous onBeforeSendHeaders response are visible by the time this listener is fired.\n\n</section>	http://electron.atom.io/docs/api/
webview tag	A										<section class="prog__container">Display external web content in an isolated frame and process.\n\nUse the webview tag to embed  guest  content (such as web pages) in your Electron app. The guest content is contained within the webview container. An embedded page within your app controls how the guest content is laid out and rendered.\n\nUnlike an iframe, the webview runs in a separate process than your app. It doesn t have the same permissions as your web page and all interactions between your app and embedded content will be asynchronous. This keeps your app safe from the embedded content.\n\nFor security purposes, webview can only be used in BrowserWindows that have nodeIntegration enabled.\n\n</section>	http://electron.atom.io/docs/api/
win.blur	A										<section class="prog__container">Removes focus from the child window.\n\n</section>	http://electron.atom.io/docs/api/
win.blur	A										<section class="prog__container">Removes focus from the window.\n\n</section>	http://electron.atom.io/docs/api/
win.blurWebView	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/
win.capturePage	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">rect</code> <a href="/docs/api/structures/rectangle">Rectangle</a> (optional) - The bounds to capture</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul>\n<li><code class="highlighter-rouge">image</code> <a href="/docs/api/native-image">NativeImage</a></li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">image</code> <a href="/docs/api/native-image">NativeImage</a></li>\n</ul>Same as webContents.capturePage([rect, ]callback).\n\n</section>	http://electron.atom.io/docs/api/
win.center	A										<section class="prog__container">Moves window to the center of the screen.\n\n</section>	http://electron.atom.io/docs/api/
win.close	A										<section class="prog__container">Forcefully closes the child window without calling its unload event.\n\n</section>	http://electron.atom.io/docs/api/
win.close	A										<section class="prog__container">Try to close the window. This has the same effect as a user manually clicking the close button of the window. The web page may cancel the close though. See the close event.\n\n</section>	http://electron.atom.io/docs/api/
win.closeFilePreview macOS	A										<section class="prog__container">Closes the currently open Quick Look panel.\n\n</section>	http://electron.atom.io/docs/api/
win.destroy	A										<section class="prog__container">Force closing the window, the unload and beforeunload event won t be emitted for the web page, and close event will also not be emitted for this window, but it guarantees the closed event will be emitted.\n\n</section>	http://electron.atom.io/docs/api/
win.eval	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">code</code> String</li>\n</ul>Evaluates the code in the child window.\n\n</section>	http://electron.atom.io/docs/api/
win.flashFrame	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">flag</code> Boolean</li>\n</ul>Starts or stops flashing the window to attract user s attention.\n\n</section>	http://electron.atom.io/docs/api/
win.focus	A										<section class="prog__container">Focuses on the window.\n\n</section>	http://electron.atom.io/docs/api/
win.focus	A										<section class="prog__container">Focuses the child window (brings the window to front).\n\n</section>	http://electron.atom.io/docs/api/
win.focusOnWebView	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/
win.getBounds	A										<section class="prog__container">Returns Rectangle\n\n</section>	http://electron.atom.io/docs/api/
win.getChildWindows	A										<section class="prog__container">Returns BrowserWindow[] - All child windows.\n\n</section>	http://electron.atom.io/docs/api/
win.getContentBounds	A										<section class="prog__container">Returns Rectangle\n\n</section>	http://electron.atom.io/docs/api/
win.getContentSize	A										<section class="prog__container">Returns Integer[] - Contains the window s client area s width and height.\n\n</section>	http://electron.atom.io/docs/api/
win.getMaximumSize	A										<section class="prog__container">Returns Integer[] - Contains the window s maximum width and height.\n\n</section>	http://electron.atom.io/docs/api/
win.getMinimumSize	A										<section class="prog__container">Returns Integer[] - Contains the window s minimum width and height.\n\n</section>	http://electron.atom.io/docs/api/
win.getNativeWindowHandle	A										<section class="prog__container">Returns Buffer - The platform-specific handle of the window.\n\nThe native type of the handle is HWND on Windows, NSView* on macOS, and Window (unsigned long) on Linux.\n\n</section>	http://electron.atom.io/docs/api/
win.getParentWindow	A										<section class="prog__container">Returns BrowserWindow - The parent window.\n\n</section>	http://electron.atom.io/docs/api/
win.getPosition	A										<section class="prog__container">Returns Integer[] - Contains the window s current position.\n\n</section>	http://electron.atom.io/docs/api/
win.getRepresentedFilename macOS	A										<section class="prog__container">Returns String - The pathname of the file the window represents.\n\n</section>	http://electron.atom.io/docs/api/
win.getSize	A										<section class="prog__container">Returns Integer[] - Contains the window s width and height.\n\n</section>	http://electron.atom.io/docs/api/
win.getTitle	A										<section class="prog__container">Returns String - The title of the native window.\n\nNote: The title of web page can be different from the title of the native window.\n\n</section>	http://electron.atom.io/docs/api/
win.hasShadow macOS	A										<section class="prog__container">Returns Boolean - Whether the window has a shadow.\n\nOn Windows and Linux always returns true.\n\n</section>	http://electron.atom.io/docs/api/
win.hide	A										<section class="prog__container">Hides the window.\n\n</section>	http://electron.atom.io/docs/api/
win.hookWindowMessage Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">message</code> Integer</li>\n<li><code class="highlighter-rouge">callback</code> Function</li>\n</ul>Hooks a windows message. The callback is called when the message is received in the WndProc.\n\n</section>	http://electron.atom.io/docs/api/
win.id	A										<section class="prog__container">A Integer representing the unique ID of the window.\n\n</section>	http://electron.atom.io/docs/api/
win.isAlwaysOnTop	A										<section class="prog__container">Returns Boolean - Whether the window is always on top of other windows.\n\n</section>	http://electron.atom.io/docs/api/
win.isClosable macOS Windows	A										<section class="prog__container">Returns Boolean - Whether the window can be manually closed by user.\n\nOn Linux always returns true.\n\n</section>	http://electron.atom.io/docs/api/
win.isDestroyed	A										<section class="prog__container">Returns Boolean - Whether the window is destroyed.\n\n</section>	http://electron.atom.io/docs/api/
win.isDocumentEdited macOS	A										<section class="prog__container">Returns Boolean - Whether the window s document has been edited.\n\n</section>	http://electron.atom.io/docs/api/
win.isFocused	A										<section class="prog__container">Returns Boolean - Whether the window is focused.\n\n</section>	http://electron.atom.io/docs/api/
win.isFullScreen	A										<section class="prog__container">Returns Boolean - Whether the window is in fullscreen mode.\n\n</section>	http://electron.atom.io/docs/api/
win.isFullScreenable	A										<section class="prog__container">Returns Boolean - Whether the maximize/zoom window button toggles fullscreen mode or maximizes the window.\n\n</section>	http://electron.atom.io/docs/api/
win.isKiosk	A										<section class="prog__container">Returns Boolean - Whether the window is in kiosk mode.\n\n</section>	http://electron.atom.io/docs/api/
win.isMaximizable macOS Windows	A										<section class="prog__container">Returns Boolean - Whether the window can be manually maximized by user.\n\nOn Linux always returns true.\n\n</section>	http://electron.atom.io/docs/api/
win.isMaximized	A										<section class="prog__container">Returns Boolean - Whether the window is maximized.\n\n</section>	http://electron.atom.io/docs/api/
win.isMenuBarAutoHide	A										<section class="prog__container">Returns Boolean - Whether menu bar automatically hides itself.\n\n</section>	http://electron.atom.io/docs/api/
win.isMenuBarVisible	A										<section class="prog__container">Returns Boolean - Whether the menu bar is visible.\n\n</section>	http://electron.atom.io/docs/api/
win.isMinimizable macOS Windows	A										<section class="prog__container">Returns Boolean - Whether the window can be manually minimized by user\n\nOn Linux always returns true.\n\n</section>	http://electron.atom.io/docs/api/
win.isMinimized	A										<section class="prog__container">Returns Boolean - Whether the window is minimized.\n\n</section>	http://electron.atom.io/docs/api/
win.isModal	A										<section class="prog__container">Returns Boolean - Whether current window is a modal window.\n\n</section>	http://electron.atom.io/docs/api/
win.isMovable macOS Windows	A										<section class="prog__container">Returns Boolean - Whether the window can be moved by user.\n\nOn Linux always returns true.\n\n</section>	http://electron.atom.io/docs/api/
win.isResizable	A										<section class="prog__container">Returns Boolean - Whether the window can be manually resized by user.\n\n</section>	http://electron.atom.io/docs/api/
win.isVisible	A										<section class="prog__container">Returns Boolean - Whether the window is visible to the user.\n\n</section>	http://electron.atom.io/docs/api/
win.isVisibleOnAllWorkspaces	A										<section class="prog__container">Returns Boolean - Whether the window is visible on all workspaces.\n\nNote: This API always returns false on Windows.\n\n</section>	http://electron.atom.io/docs/api/
win.isWindowMessageHooked Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">message</code> Integer</li>\n</ul>Returns Boolean - true or false depending on whether the message is hooked.\n\n</section>	http://electron.atom.io/docs/api/
win.loadURL	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul>\n<li><code class="highlighter-rouge">httpReferrer</code> String (optional) - A HTTP Referrer url.</li>\n<li><code class="highlighter-rouge">userAgent</code> String (optional) - A user agent originating the request.</li>\n<li><code class="highlighter-rouge">extraHeaders</code> String (optional) - Extra headers separated by  \n </li>\n<li><code class="highlighter-rouge">postData</code> (<a href="/docs/api/structures/upload-raw-data">UploadRawData</a> | <a href="/docs/api/structures/upload-file">UploadFile</a> | <a href="/docs/api/structures/upload-file-system">UploadFileSystem</a> | <a href="/docs/api/structures/upload-blob">UploadBlob</a>)[] - (optional)</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">httpReferrer</code> String (optional) - A HTTP Referrer url.</li>\n<li><code class="highlighter-rouge">userAgent</code> String (optional) - A user agent originating the request.</li>\n<li><code class="highlighter-rouge">extraHeaders</code> String (optional) - Extra headers separated by  \n </li>\n<li><code class="highlighter-rouge">postData</code> (<a href="/docs/api/structures/upload-raw-data">UploadRawData</a> | <a href="/docs/api/structures/upload-file">UploadFile</a> | <a href="/docs/api/structures/upload-file-system">UploadFileSystem</a> | <a href="/docs/api/structures/upload-blob">UploadBlob</a>)[] - (optional)</li>\n</ul>Same as webContents.loadURL(url[, options]).\n\nThe url can be a remote address (e.g. http://) or a path to a local HTML file using the file:// protocol.\n\nTo ensure that file URLs are properly formatted, it is recommended to use Node s url.format method:\n\n<pre><code>let url = require('url').format({\n  protocol: 'file',\n  slashes: true,\n  pathname: require('path').join(__dirname, 'index.html')\n})\n\nwin.loadURL(url)\n\n</code></pre>You can load a URL using a POST request with URL-encoded data by doing the following:\n\n<pre><code>win.loadURL('http://localhost:8000/post', {\n  postData: [{\n    type: 'rawData',\n    bytes: Buffer.from('hello=world')\n  }],\n  extraHeaders: 'Content-Type: application/x-www-form-urlencoded'\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/
win.maximize	A										<section class="prog__container">Maximizes the window.\n\n</section>	http://electron.atom.io/docs/api/
win.minimize	A										<section class="prog__container">Minimizes the window. On some platforms the minimized window will be shown in the Dock.\n\n</section>	http://electron.atom.io/docs/api/
win.postMessage	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">message</code> String</li>\n<li><code class="highlighter-rouge">targetOrigin</code> String</li>\n</ul>Sends a message to the child window with the specified origin or * for no origin preference.\n\nIn addition to these methods, the child window implements window.opener object with no properties and a single method.\n\n</section>	http://electron.atom.io/docs/api/
win.previewFile macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">path</code> String - The absolute path to the file to preview with QuickLook. This is important as Quick Look uses the file name and file extension on the path to determine the content type of the file to open.</li>\n<li><code class="highlighter-rouge">displayName</code> String (Optional) - The name of the file to display on the Quick Look modal view. This is purely visual and does not affect the content type of the file. Defaults to <code class="highlighter-rouge">path</code>.</li>\n</ul>Uses Quick Look to preview a file at a given path.\n\n</section>	http://electron.atom.io/docs/api/
win.print	A										<section class="prog__container">Invokes the print dialog on the child window.\n\n</section>	http://electron.atom.io/docs/api/
win.reload	A										<section class="prog__container">Same as webContents.reload.\n\n</section>	http://electron.atom.io/docs/api/
win.restore	A										<section class="prog__container">Restores the window from minimized state to its previous state.\n\n</section>	http://electron.atom.io/docs/api/
win.setAlwaysOnTop	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">flag</code> Boolean</li>\n<li><code class="highlighter-rouge">level</code> String (optional) <em>macOS</em> - Values include <code class="highlighter-rouge">normal</code>, <code class="highlighter-rouge">floating</code>, <code class="highlighter-rouge">torn-off-menu</code>, <code class="highlighter-rouge">modal-panel</code>, <code class="highlighter-rouge">main-menu</code>, <code class="highlighter-rouge">status</code>, <code class="highlighter-rouge">pop-up-menu</code>, <code class="highlighter-rouge">screen-saver</code>, and <del><code class="highlighter-rouge">dock</code></del> (Deprecated). The default is <code class="highlighter-rouge">floating</code>. See the <a href="https://developer.apple.com/reference/appkit/nswindow/1664726-window_levels">macOS docs</a> for more details.</li>\n</ul>Sets whether the window should show always on top of other windows. After setting this, the window is still a normal window, not a toolbox window which can not be focused on.\n\n</section>	http://electron.atom.io/docs/api/
win.setAppDetails Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul>\n<li><code class="highlighter-rouge">appId</code> String (optional) - Window s <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd391569(v=vs.85).aspx">App User Model ID</a>. It has to be set, otherwise the other options will have no effect.</li>\n<li><code class="highlighter-rouge">appIconPath</code> String (optional) - Window s <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd391573(v=vs.85).aspx">Relaunch Icon</a>.</li>\n<li><code class="highlighter-rouge">appIconIndex</code> Integer (optional) - Index of the icon in <code class="highlighter-rouge">appIconPath</code>. Ignored when <code class="highlighter-rouge">appIconPath</code> is not set. Default is <code class="highlighter-rouge">0</code>.</li>\n<li><code class="highlighter-rouge">relaunchCommand</code> String (optional) - Window s <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd391571(v=vs.85).aspx">Relaunch Command</a>.</li>\n<li><code class="highlighter-rouge">relaunchDisplayName</code> String (optional) - Window s <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd391572(v=vs.85).aspx">Relaunch Display Name</a>.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">appId</code> String (optional) - Window s <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd391569(v=vs.85).aspx">App User Model ID</a>. It has to be set, otherwise the other options will have no effect.</li>\n<li><code class="highlighter-rouge">appIconPath</code> String (optional) - Window s <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd391573(v=vs.85).aspx">Relaunch Icon</a>.</li>\n<li><code class="highlighter-rouge">appIconIndex</code> Integer (optional) - Index of the icon in <code class="highlighter-rouge">appIconPath</code>. Ignored when <code class="highlighter-rouge">appIconPath</code> is not set. Default is <code class="highlighter-rouge">0</code>.</li>\n<li><code class="highlighter-rouge">relaunchCommand</code> String (optional) - Window s <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd391571(v=vs.85).aspx">Relaunch Command</a>.</li>\n<li><code class="highlighter-rouge">relaunchDisplayName</code> String (optional) - Window s <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/dd391572(v=vs.85).aspx">Relaunch Display Name</a>.</li>\n</ul>Sets the properties for the window s taskbar button.\n\nNote: relaunchCommand and relaunchDisplayName must always be set together. If one of those properties is not set, then neither will be used.\n\n</section>	http://electron.atom.io/docs/api/
win.setAspectRatio macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">aspectRatio</code> Float - The aspect ratio to maintain for some portion of the content view.</li>\n<li><code class="highlighter-rouge">extraSize</code> Object (optional) - The extra size not to be included while maintaining the aspect ratio.\n    <ul>\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul>This will make a window maintain an aspect ratio. The extra size allows a developer to have space, specified in pixels, not included within the aspect ratio calculations. This API already takes into account the difference between a window s size and its content size.\n\nConsider a normal window with an HD video player and associated controls. Perhaps there are 15 pixels of controls on the left edge, 25 pixels of controls on the right edge and 50 pixels of controls below the player. In order to maintain a 16:9 aspect ratio (standard aspect ratio for HD @1920x1080) within the player itself we would call this function with arguments of 16/9 and [ 40, 50 ]. The second argument doesn t care where the extra width and height are within the content view only that they exist. Just sum any extra width and height areas you have within the overall content view.\n\n</section>	http://electron.atom.io/docs/api/
win.setAutoHideCursor macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">autoHide</code> Boolean</li>\n</ul>Controls whether to hide cursor when typing.\n\n</section>	http://electron.atom.io/docs/api/
win.setAutoHideMenuBar	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">hide</code> Boolean</li>\n</ul>Sets whether the window menu bar should hide itself automatically. Once set the menu bar will only show when users press the single Alt key.\n\nIf the menu bar is already visible, calling setAutoHideMenuBar(true) won t hide it immediately.\n\n</section>	http://electron.atom.io/docs/api/
win.setBounds	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">bounds</code> <a href="/docs/api/structures/rectangle">Rectangle</a></li>\n<li><code class="highlighter-rouge">animate</code> Boolean (optional) <em>macOS</em></li>\n</ul>Resizes and moves the window to the supplied bounds\n\n</section>	http://electron.atom.io/docs/api/
win.setClosable macOS Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">closable</code> Boolean</li>\n</ul>Sets whether the window can be manually closed by user. On Linux does nothing.\n\n</section>	http://electron.atom.io/docs/api/
win.setContentBounds	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">bounds</code> <a href="/docs/api/structures/rectangle">Rectangle</a></li>\n<li><code class="highlighter-rouge">animate</code> Boolean (optional) <em>macOS</em></li>\n</ul>Resizes and moves the window s client area (e.g. the web page) to the supplied bounds.\n\n</section>	http://electron.atom.io/docs/api/
win.setContentProtection macOS Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">enable</code> Boolean</li>\n</ul>Prevents the window contents from being captured by other apps.\n\nOn macOS it sets the NSWindow s sharingType to NSWindowSharingNone. On Windows it calls SetWindowDisplayAffinity with WDA_MONITOR.\n\n</section>	http://electron.atom.io/docs/api/
win.setContentSize	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n<li><code class="highlighter-rouge">animate</code> Boolean (optional) <em>macOS</em></li>\n</ul>Resizes the window s client area (e.g. the web page) to width and height.\n\n</section>	http://electron.atom.io/docs/api/
win.setDocumentEdited macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">edited</code> Boolean</li>\n</ul>Specifies whether the window s document has been edited, and the icon in title bar will become gray when set to true.\n\n</section>	http://electron.atom.io/docs/api/
win.setFocusable Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">focusable</code> Boolean</li>\n</ul>Changes whether the window can be focused.\n\n</section>	http://electron.atom.io/docs/api/
win.setFullScreen	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">flag</code> Boolean</li>\n</ul>Sets whether the window should be in fullscreen mode.\n\n</section>	http://electron.atom.io/docs/api/
win.setFullScreenable	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">fullscreenable</code> Boolean</li>\n</ul>Sets whether the maximize/zoom window button toggles fullscreen mode or maximizes the window.\n\n</section>	http://electron.atom.io/docs/api/
win.setHasShadow macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">hasShadow</code> Boolean</li>\n</ul>Sets whether the window should have a shadow. On Windows and Linux does nothing.\n\n</section>	http://electron.atom.io/docs/api/
win.setIcon Windows Linux	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">icon</code> <a href="/docs/api/native-image">NativeImage</a></li>\n</ul>Changes window icon.\n\n</section>	http://electron.atom.io/docs/api/
win.setIgnoreMouseEvents	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">ignore</code> Boolean</li>\n</ul>Makes the window ignore all mouse events.\n\nAll mouse events happened in this window will be passed to the window below this window, but if this window has focus, it will still receive keyboard events.\n\n</section>	http://electron.atom.io/docs/api/
win.setKiosk	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">flag</code> Boolean</li>\n</ul>Enters or leaves the kiosk mode.\n\n</section>	http://electron.atom.io/docs/api/
win.setMaximizable macOS Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">maximizable</code> Boolean</li>\n</ul>Sets whether the window can be manually maximized by user. On Linux does nothing.\n\n</section>	http://electron.atom.io/docs/api/
win.setMaximumSize	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul>Sets the maximum size of window to width and height.\n\n</section>	http://electron.atom.io/docs/api/
win.setMenu Linux Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">menu</code> Menu</li>\n</ul>Sets the menu as the window s menu bar, setting it to null will remove the menu bar.\n\n</section>	http://electron.atom.io/docs/api/
win.setMenuBarVisibility Windows Linux	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">visible</code> Boolean</li>\n</ul>Sets whether the menu bar should be visible. If the menu bar is auto-hide, users can still bring up the menu bar by pressing the single Alt key.\n\n</section>	http://electron.atom.io/docs/api/
win.setMinimizable macOS Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">minimizable</code> Boolean</li>\n</ul>Sets whether the window can be manually minimized by user. On Linux does nothing.\n\n</section>	http://electron.atom.io/docs/api/
win.setMinimumSize	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul>Sets the minimum size of window to width and height.\n\n</section>	http://electron.atom.io/docs/api/
win.setMovable macOS Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">movable</code> Boolean</li>\n</ul>Sets whether the window can be moved by user. On Linux does nothing.\n\n</section>	http://electron.atom.io/docs/api/
win.setOverlayIcon Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">overlay</code> <a href="/docs/api/native-image">NativeImage</a> - the icon to display on the bottom right corner of the taskbar icon. If this parameter is <code class="highlighter-rouge">null</code>, the overlay is cleared</li>\n<li><code class="highlighter-rouge">description</code> String - a description that will be provided to Accessibility screen readers</li>\n</ul>Sets a 16 x 16 pixel overlay onto the current taskbar icon, usually used to convey some sort of application status or to passively notify the user.\n\n</section>	http://electron.atom.io/docs/api/
win.setParentWindow Linux macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">parent</code> BrowserWindow</li>\n</ul>Sets parent as current window s parent window, passing null will turn current window into a top-level window.\n\n</section>	http://electron.atom.io/docs/api/
win.setPosition	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n<li><code class="highlighter-rouge">animate</code> Boolean (optional) <em>macOS</em></li>\n</ul>Moves window to x and y.\n\n</section>	http://electron.atom.io/docs/api/
win.setProgressBar	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">progress</code> Double</li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul>\n<li><code class="highlighter-rouge">mode</code> String <em>Windows</em> - Mode for the progress bar. Can be <code class="highlighter-rouge">none</code>, <code class="highlighter-rouge">normal</code>, <code class="highlighter-rouge">indeterminate</code>, <code class="highlighter-rouge">error</code>, or <code class="highlighter-rouge">paused</code>.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">mode</code> String <em>Windows</em> - Mode for the progress bar. Can be <code class="highlighter-rouge">none</code>, <code class="highlighter-rouge">normal</code>, <code class="highlighter-rouge">indeterminate</code>, <code class="highlighter-rouge">error</code>, or <code class="highlighter-rouge">paused</code>.</li>\n</ul>Sets progress value in progress bar. Valid range is [0, 1.0].\n\nRemove progress bar when progress < 0; Change to indeterminate mode when progress > 1.\n\nOn Linux platform, only supports Unity desktop environment, you need to specify the *.desktop file name to desktopName field in package.json. By default, it will assume app.getName().desktop.\n\nOn Windows, a mode can be passed. Accepted values are none, normal, indeterminate, error, and paused. If you call setProgressBar without a mode set (but with a value within the valid range), normal will be assumed.\n\n</section>	http://electron.atom.io/docs/api/
win.setRepresentedFilename macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">filename</code> String</li>\n</ul>Sets the pathname of the file the window represents, and the icon of the file will show in window s title bar.\n\n</section>	http://electron.atom.io/docs/api/
win.setResizable	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">resizable</code> Boolean</li>\n</ul>Sets whether the window can be manually resized by user.\n\n</section>	http://electron.atom.io/docs/api/
win.setSheetOffset macOS	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">offsetY</code> Float</li>\n<li><code class="highlighter-rouge">offsetX</code> Float (optional)</li>\n</ul>Changes the attachment point for sheets on macOS. By default, sheets are attached just below the window frame, but you may want to display them beneath a HTML-rendered toolbar. For example:\n\n<pre><code>const {BrowserWindow} = require('electron')\nlet win = new BrowserWindow()\n\nlet toolbarRect = document.getElementById('toolbar').getBoundingClientRect()\nwin.setSheetOffset(toolbarRect.height)\n\n</code></pre></section>	http://electron.atom.io/docs/api/
win.setSize	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n<li><code class="highlighter-rouge">animate</code> Boolean (optional) <em>macOS</em></li>\n</ul>Resizes the window to width and height.\n\n</section>	http://electron.atom.io/docs/api/
win.setSkipTaskbar	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">skip</code> Boolean</li>\n</ul>Makes the window not show in the taskbar.\n\n</section>	http://electron.atom.io/docs/api/
win.setThumbarButtons Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">buttons</code> <a href="/docs/api/structures/thumbar-button">ThumbarButton[]</a></li>\n</ul>Returns Boolean - Whether the buttons were added successfully\n\nAdd a thumbnail toolbar with a specified set of buttons to the thumbnail image of a window in a taskbar button layout. Returns a Boolean object indicates whether the thumbnail has been added successfully.\n\nThe number of buttons in thumbnail toolbar should be no greater than 7 due to the limited room. Once you setup the thumbnail toolbar, the toolbar cannot be removed due to the platform s limitation. But you can call the API with an empty array to clean the buttons.\n\nThe buttons is an array of Button objects:\n\n<ul>\n<li><code class="highlighter-rouge">Button</code> Object\n    <ul>\n<li><code class="highlighter-rouge">icon</code> <a href="/docs/api/native-image">NativeImage</a> - The icon showing in thumbnail toolbar.</li>\n<li><code class="highlighter-rouge">click</code> Function</li>\n<li><code class="highlighter-rouge">tooltip</code> String (optional) - The text of the button s tooltip.</li>\n<li><code class="highlighter-rouge">flags</code> String[] (optional) - Control specific states and behaviors of the button. By default, it is <code class="highlighter-rouge">['enabled']</code>.</li>\n</ul>\n</li>\n</ul><ul>\n<li><code class="highlighter-rouge">icon</code> <a href="/docs/api/native-image">NativeImage</a> - The icon showing in thumbnail toolbar.</li>\n<li><code class="highlighter-rouge">click</code> Function</li>\n<li><code class="highlighter-rouge">tooltip</code> String (optional) - The text of the button s tooltip.</li>\n<li><code class="highlighter-rouge">flags</code> String[] (optional) - Control specific states and behaviors of the button. By default, it is <code class="highlighter-rouge">['enabled']</code>.</li>\n</ul>The flags is an array that can include following Strings:\n\n<ul>\n<li><code class="highlighter-rouge">enabled</code> - The button is active and available to the user.</li>\n<li><code class="highlighter-rouge">disabled</code> - The button is disabled. It is present, but has a visual state indicating it will not respond to user action.</li>\n<li><code class="highlighter-rouge">dismissonclick</code> - When the button is clicked, the thumbnail window closes immediately.</li>\n<li><code class="highlighter-rouge">nobackground</code> - Do not draw a button border, use only the image.</li>\n<li><code class="highlighter-rouge">hidden</code> - The button is not shown to the user.</li>\n<li><code class="highlighter-rouge">noninteractive</code> - The button is enabled but not interactive; no pressed button state is drawn. This value is intended for instances where the button is used in a notification.</li>\n</ul></section>	http://electron.atom.io/docs/api/
win.setThumbnailClip Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">region</code> <a href="/docs/api/structures/rectangle">Rectangle</a> - Region of the window</li>\n</ul>Sets the region of the window to show as the thumbnail image displayed when hovering over the window in the taskbar. You can reset the thumbnail to be the entire window by specifying an empty region: {x: 0, y: 0, width: 0, height: 0}.\n\n</section>	http://electron.atom.io/docs/api/
win.setThumbnailToolTip Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">toolTip</code> String</li>\n</ul>Sets the toolTip that is displayed when hovering over the window thumbnail in the taskbar.\n\n</section>	http://electron.atom.io/docs/api/
win.setTitle	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">title</code> String</li>\n</ul>Changes the title of native window to title.\n\n</section>	http://electron.atom.io/docs/api/
win.setVisibleOnAllWorkspaces	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">visible</code> Boolean</li>\n</ul>Sets whether the window should be visible on all workspaces.\n\nNote: This API does nothing on Windows.\n\n</section>	http://electron.atom.io/docs/api/
win.show	A										<section class="prog__container">Shows and gives focus to the window.\n\n</section>	http://electron.atom.io/docs/api/
win.showDefinitionForSelection macOS	A										<section class="prog__container">Same as webContents.showDefinitionForSelection().\n\n</section>	http://electron.atom.io/docs/api/
win.showInactive	A										<section class="prog__container">Shows the window but doesn t focus on it.\n\n</section>	http://electron.atom.io/docs/api/
win.unhookAllWindowMessages Windows	A										<section class="prog__container">Unhooks all of the window messages.\n\n</section>	http://electron.atom.io/docs/api/
win.unhookWindowMessage Windows	A										<section class="prog__container"><ul>\n<li><code class="highlighter-rouge">message</code> Integer</li>\n</ul>Unhook the window message.\n\n</section>	http://electron.atom.io/docs/api/
win.unmaximize	A										<section class="prog__container">Unmaximizes the window.\n\n</section>	http://electron.atom.io/docs/api/
win.webContents	A										<section class="prog__container">A WebContents object this window owns. All web page related events and operations will be done via it.\n\nSee the webContents documentation for its methods and events.\n\n</section>	http://electron.atom.io/docs/api/
window open	A										<section class="prog__container">Open a new window and load a URL.\n\nWhen window.open is called to create a new window in a web page, a new instance of BrowserWindow will be created for the url and a proxy will be returned to window.open to let the page have limited control over it.\n\nThe proxy has limited standard functionality implemented to be compatible with traditional web pages. For full control of the new window you should create a BrowserWindow directly.\n\nThe newly created BrowserWindow will inherit the parent window s options by default. To override inherited options you can set them in the features string.\n\n<pre><code>window.open(url[, frameName][, features])</code></pre><ul>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">frameName</code> String (optional)</li>\n<li><code class="highlighter-rouge">features</code> String (optional)</li>\n</ul>Returns BrowserWindowProxy - Creates a new window and returns an instance of BrowserWindowProxy class.\n\nThe features string follows the format of standard browser, but each feature has to be a field of BrowserWindow s options.\n\nNotes:\n\n<ul>\n<li>Node integration will always be disabled in the opened <code class="highlighter-rouge">window</code> if it is disabled on the parent window.</li>\n<li>Non-standard features (that are not handled by Chromium or Electron) given in <code class="highlighter-rouge">features</code> will be passed to any registered <code class="highlighter-rouge">webContent</code> s <code class="highlighter-rouge">new-window</code> event handler in the <code class="highlighter-rouge">additionalFeatures</code> argument.</li>\n</ul><pre><code>window.opener.postMessage(message, targetOrigin)</code></pre><ul>\n<li><code class="highlighter-rouge">message</code> String</li>\n<li><code class="highlighter-rouge">targetOrigin</code> String</li>\n</ul>Sends a message to the parent window with the specified origin or * for no origin preference.\n\n</section>	http://electron.atom.io/docs/api/
