<webview>.canGoBack	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the guest page can go back.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>cangoback
<webview>.canGoForward	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the guest page can go forward.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>cangoforward
<webview>.canGoToOffset	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">offset</code> Integer</li>\n</ul><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the guest page can go to <code class="highlighter-rouge">offset</code>.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>cangotooffsetoffset
<webview>.capturePage	A										<section class="prog__container"><p>Captures a snapshot of the <code class="highlighter-rouge">webview</code>   s page. Same as <code class="highlighter-rouge">webContents.capturePage([rect, ]callback)</code>.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>capturepagerect-callback
<webview>.clearHistory	A										<section class="prog__container"><p>Clears the navigation history.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>clearhistory
<webview>.closeDevTools	A										<section class="prog__container"><p>Closes the DevTools window of guest page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>closedevtools
<webview>.copy	A										<section class="prog__container"><p>Executes editing command <code class="highlighter-rouge">copy</code> in page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>copy
<webview>.cut	A										<section class="prog__container"><p>Executes editing command <code class="highlighter-rouge">cut</code> in page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>cut
<webview>.delete	A										<section class="prog__container"><p>Executes editing command <code class="highlighter-rouge">delete</code> in page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>delete
<webview>.executeJavaScript	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">code</code> String</li>\n<li><code class="highlighter-rouge">userGesture</code> Boolean - Default <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional) - Called after script has been executed.\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">result</code> Any</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">result</code> Any</li>\n</ul><p>Evaluates <code class="highlighter-rouge">code</code> in page. If <code class="highlighter-rouge">userGesture</code> is set, it will create the user gesture context in the page. HTML APIs like <code class="highlighter-rouge">requestFullScreen</code>, which require user action, can take advantage of this option for automation.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>executejavascriptcode-usergesture-callback
<webview>.findInPage	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">text</code> String - Content to be searched, must not be empty.</li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">forward</code> Boolean - Whether to search forward or backward, defaults to <code class="highlighter-rouge">true</code>.</li>\n<li><code class="highlighter-rouge">findNext</code> Boolean - Whether the operation is first request or a follow up, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">matchCase</code> Boolean - Whether search should be case-sensitive, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">wordStart</code> Boolean - Whether to look only at the start of words. defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">medialCapitalAsWordStart</code> Boolean - When combined with <code class="highlighter-rouge">wordStart</code>, accepts a match in the middle of a word if the match begins with an uppercase letter followed by a lowercase or non-letter. Accepts several other intra-word matches, defaults to <code class="highlighter-rouge">false</code>.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">forward</code> Boolean - Whether to search forward or backward, defaults to <code class="highlighter-rouge">true</code>.</li>\n<li><code class="highlighter-rouge">findNext</code> Boolean - Whether the operation is first request or a follow up, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">matchCase</code> Boolean - Whether search should be case-sensitive, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">wordStart</code> Boolean - Whether to look only at the start of words. defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">medialCapitalAsWordStart</code> Boolean - When combined with <code class="highlighter-rouge">wordStart</code>, accepts a match in the middle of a word if the match begins with an uppercase letter followed by a lowercase or non-letter. Accepts several other intra-word matches, defaults to <code class="highlighter-rouge">false</code>.</li>\n</ul><p>Starts a request to find all matches for the <code class="highlighter-rouge">text</code> in the web page and returns an <code class="highlighter-rouge">Integer</code> representing the request id used for the request. The result of the request can be obtained by subscribing to found-in-page</code> event.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>findinpagetext-options
<webview>.getTitle	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The title of guest page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>gettitle
<webview>.getURL	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The URL of guest page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>geturl
<webview>.getUserAgent	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The user agent for guest page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>getuseragent
<webview>.getWebContents	A										<section class="prog__container"><p>Returns webview</code>.</p><p>The following DOM events are available to the <code class="highlighter-rouge">webview</code> tag:</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>getwebcontents
<webview>.goBack	A										<section class="prog__container"><p>Makes the guest page go back.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>goback
<webview>.goForward	A										<section class="prog__container"><p>Makes the guest page go forward.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>goforward
<webview>.goToIndex	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">index</code> Integer</li>\n</ul><p>Navigates to the specified absolute index.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>gotoindexindex
<webview>.goToOffset	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">offset</code> Integer</li>\n</ul><p>Navigates to the specified offset from the    current entry   .</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>gotooffsetoffset
<webview>.insertCSS	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">css</code> String</li>\n</ul><p>Injects CSS into the guest page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>insertcsscss
<webview>.insertText	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul><p>Inserts <code class="highlighter-rouge">text</code> to the focused element.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>inserttexttext
<webview>.inspectElement	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n</ul><p>Starts inspecting element at position (<code class="highlighter-rouge">x</code>, <code class="highlighter-rouge">y</code>) of guest page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>inspectelementx-y
<webview>.inspectServiceWorker	A										<section class="prog__container"><p>Opens the DevTools for the service worker context present in the guest page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>inspectserviceworker
<webview>.isAudioMuted	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether guest page has been muted.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>isaudiomuted
<webview>.isCrashed	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the renderer process has crashed.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>iscrashed
<webview>.isDevToolsFocused	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether DevTools window of guest page is focused.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>isdevtoolsfocused
<webview>.isDevToolsOpened	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether guest page has a DevTools window attached.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>isdevtoolsopened
<webview>.isLoading	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether guest page is still loading resources.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>isloading
<webview>.isWaitingForResponse	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the guest page is waiting for a first-response for the main resource of the page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>iswaitingforresponse
<webview>.loadURL	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> URL</li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">httpReferrer</code> String (optional) - A HTTP Referrer url.</li>\n<li><code class="highlighter-rouge">userAgent</code> String (optional) - A user agent originating the request.</li>\n<li><code class="highlighter-rouge">extraHeaders</code> String (optional) - Extra headers separated by    \n   </li>\n<li><code class="highlighter-rouge">postData</code> (UploadBlob)[] - (optional)</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">httpReferrer</code> String (optional) - A HTTP Referrer url.</li>\n<li><code class="highlighter-rouge">userAgent</code> String (optional) - A user agent originating the request.</li>\n<li><code class="highlighter-rouge">extraHeaders</code> String (optional) - Extra headers separated by    \n   </li>\n<li><code class="highlighter-rouge">postData</code> (UploadBlob)[] - (optional)</li>\n</ul><p>Loads the <code class="highlighter-rouge">url</code> in the webview, the <code class="highlighter-rouge">url</code> must contain the protocol prefix, e.g. the <code class="highlighter-rouge">http://</code> or <code class="highlighter-rouge">file://</code>.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>loadurlurl-options
<webview>.openDevTools	A										<section class="prog__container"><p>Opens a DevTools window for guest page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>opendevtools
<webview>.paste	A										<section class="prog__container"><p>Executes editing command <code class="highlighter-rouge">paste</code> in page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>paste
<webview>.pasteAndMatchStyle	A										<section class="prog__container"><p>Executes editing command <code class="highlighter-rouge">pasteAndMatchStyle</code> in page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>pasteandmatchstyle
<webview>.print	A										<section class="prog__container"><p>Prints <code class="highlighter-rouge">webview</code>   s web page. Same as <code class="highlighter-rouge">webContents.print([options])</code>.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>printoptions
<webview>.printToPDF	A										<section class="prog__container"><p>Prints <code class="highlighter-rouge">webview</code>   s web page as PDF, Same as <code class="highlighter-rouge">webContents.printToPDF(options, callback)</code>.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>printtopdfoptions-callback
<webview>.redo	A										<section class="prog__container"><p>Executes editing command <code class="highlighter-rouge">redo</code> in page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>redo
<webview>.reload	A										<section class="prog__container"><p>Reloads the guest page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>reload
<webview>.reloadIgnoringCache	A										<section class="prog__container"><p>Reloads the guest page and ignores cache.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>reloadignoringcache
<webview>.replace	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul><p>Executes editing command <code class="highlighter-rouge">replace</code> in page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>replacetext
<webview>.replaceMisspelling	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul><p>Executes editing command <code class="highlighter-rouge">replaceMisspelling</code> in page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>replacemisspellingtext
<webview>.selectAll	A										<section class="prog__container"><p>Executes editing command <code class="highlighter-rouge">selectAll</code> in page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>selectall
<webview>.send	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">arg</code> (optional)</li>\n</ul><p>Send an asynchronous message to renderer process via <code class="highlighter-rouge">channel</code>, you can also send arbitrary arguments. The renderer process can handle the message by listening to the <code class="highlighter-rouge">channel</code> event with the <code class="highlighter-rouge">ipcRenderer</code> module.</p><p>See webContents.send for examples.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>sendchannel-arg1-arg2-
<webview>.setAudioMuted	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">muted</code> Boolean</li>\n</ul><p>Set guest page muted.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>setaudiomutedmuted
<webview>.setUserAgent	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">userAgent</code> String</li>\n</ul><p>Overrides the user agent for the guest page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>setuseragentuseragent
<webview>.setZoomFactor	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">factor</code> Number - Zoom factor.</li>\n</ul><p>Changes the zoom factor to the specified factor. Zoom factor is zoom percent divided by 100, so 300% = 3.0.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>setzoomfactorfactor
<webview>.setZoomLevel	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">level</code> Number - Zoom level</li>\n</ul><p>Changes the zoom level to the specified level. The original size is 0 and each increment above or below represents zooming 20% larger or smaller to default limits of 300% and 50% of original size, respectively.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>setzoomlevellevel
<webview>.showDefinitionForSelection 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>showdefinitionforselection-macos
<webview>.stop	A										<section class="prog__container"><p>Stops any pending navigation.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>stop
<webview>.stopFindInPage	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">action</code> String - Specifies the action to take place when ending &lt;webview&gt;.findInPage</code> request.\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">clearSelection</code> - Clear the selection.</li>\n<li><code class="highlighter-rouge">keepSelection</code> - Translate the selection into a normal selection.</li>\n<li><code class="highlighter-rouge">activateSelection</code> - Focus and click the selection node.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">clearSelection</code> - Clear the selection.</li>\n<li><code class="highlighter-rouge">keepSelection</code> - Translate the selection into a normal selection.</li>\n<li><code class="highlighter-rouge">activateSelection</code> - Focus and click the selection node.</li>\n</ul><p>Stops any <code class="highlighter-rouge">findInPage</code> request for the <code class="highlighter-rouge">webview</code> with the provided <code class="highlighter-rouge">action</code>.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>stopfindinpageaction
<webview>.undo	A										<section class="prog__container"><p>Executes editing command <code class="highlighter-rouge">undo</code> in page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>undo
<webview>.unselect	A										<section class="prog__container"><p>Executes editing command <code class="highlighter-rouge">unselect</code> in page.</p></section>	http://electron.atom.io/docs/api/webview-tag/#<webview>unselect
BrowserWindow.addDevToolsExtension	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">path</code> String</li>\n</ul><p>Adds DevTools extension located at <code class="highlighter-rouge">path</code>, and returns extension   s name.</p><p>The extension will be remembered so you only need to call this API once, this API is not for programming use. If you try to add an extension that has already been loaded, this method will not return and instead log a warning to the console.</p><p>The method will also not return if the extension   s manifest is missing or incomplete.</p><p><strong>Note:</strong> This API cannot be called before the <code class="highlighter-rouge">ready</code> event of the <code class="highlighter-rouge">app</code> module is emitted.</p></section>	http://electron.atom.io/docs/api/browser-window/#browserwindowadddevtoolsextensionpath
BrowserWindow.fromId	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> Integer</li>\n</ul><p>Returns <code class="highlighter-rouge">BrowserWindow</code> - The window with the given <code class="highlighter-rouge">id</code>.</p></section>	http://electron.atom.io/docs/api/browser-window/#browserwindowfromidid
BrowserWindow.fromWebContents	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">webContents</code> WebContents</li>\n</ul><p>Returns <code class="highlighter-rouge">BrowserWindow</code> - The window that owns the given <code class="highlighter-rouge">webContents</code>.</p></section>	http://electron.atom.io/docs/api/browser-window/#browserwindowfromwebcontentswebcontents
BrowserWindow.getAll	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/browser-window/#browserwindowgetallwindows
BrowserWindow.getDevToolsExtensions	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Object</code> - The keys are the extension names and each value is an Object containing <code class="highlighter-rouge">name</code> and <code class="highlighter-rouge">version</code> properties.</p><p>To check if a DevTools extension is installed you can run the following:</p><pre><code>const {BrowserWindow} = require('electron')\n\nlet installed = BrowserWindow.getDevToolsExtensions().hasOwnProperty('devtron')\nconsole.log(installed)\n\n</code></pre><p><strong>Note:</strong> This API cannot be called before the <code class="highlighter-rouge">ready</code> event of the <code class="highlighter-rouge">app</code> module is emitted.</p></section>	http://electron.atom.io/docs/api/browser-window/#browserwindowgetdevtoolsextensions
BrowserWindow.getFocusedWindow	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">BrowserWindow</code> - The window that is focused in this application, otherwise returns <code class="highlighter-rouge">null</code>.</p></section>	http://electron.atom.io/docs/api/browser-window/#browserwindowgetfocusedwindow
BrowserWindow.removeDevToolsExtension	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">name</code> String</li>\n</ul><p>Remove a DevTools extension by name.</p><p><strong>Note:</strong> This API cannot be called before the <code class="highlighter-rouge">ready</code> event of the <code class="highlighter-rouge">app</code> module is emitted.</p></section>	http://electron.atom.io/docs/api/browser-window/#browserwindowremovedevtoolsextensionname
Main Menu’s Name	A										<section class="prog__container"><p>On macOS the label of the application menu   s first item is always your app   s name, no matter what label you set. To change it, modify your app bundle   s <code class="highlighter-rouge">Info.plist</code> file. See About Information Property List Files for more information.</p><p>The setMenu</code> method of browser windows can set the menu of certain browser windows.</p><p>You can make use of <code class="highlighter-rouge">position</code> and <code class="highlighter-rouge">id</code> to control how the item will be placed when building a menu with <code class="highlighter-rouge">Menu.buildFromTemplate</code>.</p><p>The <code class="highlighter-rouge">position</code> attribute of <code class="highlighter-rouge">MenuItem</code> has the form <code class="highlighter-rouge">[placement]=[id]</code>, where <code class="highlighter-rouge">placement</code> is one of <code class="highlighter-rouge">before</code>, <code class="highlighter-rouge">after</code>, or <code class="highlighter-rouge">endof</code> and <code class="highlighter-rouge">id</code> is the unique ID of an existing item in the menu:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">before</code> - Inserts this item before the id referenced item. If the referenced item doesn   t exist the item will be inserted at the end of the menu.</li>\n<li><code class="highlighter-rouge">after</code> - Inserts this item after id referenced item. If the referenced item doesn   t exist the item will be inserted at the end of the menu.</li>\n<li><code class="highlighter-rouge">endof</code> - Inserts this item at the end of the logical group containing the id referenced item (groups are created by separator items). If the referenced item doesn   t exist, a new separator group is created with the given id and this item is inserted after that separator.</li>\n</ul><p>When an item is positioned, all un-positioned items are inserted after it until a new item is positioned. So if you want to position a group of menu items in the same location you only need to specify a position for the first item.</p></section>	http://electron.atom.io/docs/api/menu/#main-menu’s-name
Main process	A										<section class="prog__container"><p>An example of creating the application menu in the main process with the simple template API:</p><pre><code>const {app, Menu} = require('electron')\n\nconst template = [\n  {\n    label: 'Edit',\n    submenu: [\n      {\n        role: 'undo'\n      },\n      {\n        role: 'redo'\n      },\n      {\n        type: 'separator'\n      },\n      {\n        role: 'cut'\n      },\n      {\n        role: 'copy'\n      },\n      {\n        role: 'paste'\n      },\n      {\n        role: 'pasteandmatchstyle'\n      },\n      {\n        role: 'delete'\n      },\n      {\n        role: 'selectall'\n      }\n    ]\n  },\n  {\n    label: 'View',\n    submenu: [\n      {\n        role: 'reload'\n      },\n      {\n        role: 'forcereload'\n      },\n      {\n        role: 'toggledevtools'\n      },\n      {\n        type: 'separator'\n      },\n      {\n        role: 'resetzoom'\n      },\n      {\n        role: 'zoomin'\n      },\n      {\n        role: 'zoomout'\n      },\n      {\n        type: 'separator'\n      },\n      {\n        role: 'togglefullscreen'\n      }\n    ]\n  },\n  {\n    role: 'window',\n    submenu: [\n      {\n        role: 'minimize'\n      },\n      {\n        role: 'close'\n      }\n    ]\n  },\n  {\n    role: 'help',\n    submenu: [\n      {\n        label: 'Learn More',\n        click () { require('electron').shell.openExternal('http://electron.atom.io') }\n      }\n    ]\n  }\n]\n\nif (process.platform === 'darwin') {\n  template.unshift({\n    label: app.getName(),\n    submenu: [\n      {\n        role: 'about'\n      },\n      {\n        type: 'separator'\n      },\n      {\n        role: 'services',\n        submenu: []\n      },\n      {\n        type: 'separator'\n      },\n      {\n        role: 'hide'\n      },\n      {\n        role: 'hideothers'\n      },\n      {\n        role: 'unhide'\n      },\n      {\n        type: 'separator'\n      },\n      {\n        role: 'quit'\n      }\n    ]\n  })\n  // Edit menu.\n  template[1].submenu.push(\n    {\n      type: 'separator'\n    },\n    {\n      label: 'Speech',\n      submenu: [\n        {\n          role: 'startspeaking'\n        },\n        {\n          role: 'stopspeaking'\n        }\n      ]\n    }\n  )\n  // Window menu.\n  template[3].submenu = [\n    {\n      label: 'Close',\n      accelerator: 'CmdOrCtrl+W',\n      role: 'close'\n    },\n    {\n      label: 'Minimize',\n      accelerator: 'CmdOrCtrl+M',\n      role: 'minimize'\n    },\n    {\n      label: 'Zoom',\n      role: 'zoom'\n    },\n    {\n      type: 'separator'\n    },\n    {\n      label: 'Bring All to Front',\n      role: 'front'\n    }\n  ]\n}\n\nconst menu = Menu.buildFromTemplate(template)\nMenu.setApplicationMenu(menu)\n\n</code></pre></section>	http://electron.atom.io/docs/api/menu/#main-process
Menu.buildFromTemplate	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">template</code> MenuItemConstructorOptions[]</li>\n</ul><p>Returns <code class="highlighter-rouge">Menu</code></p><p>Generally, the <code class="highlighter-rouge">template</code> is just an array of <code class="highlighter-rouge">options</code> for constructing a MenuItem. The usage can be referenced above.</p><p>You can also attach other fields to the element of the <code class="highlighter-rouge">template</code> and they will become properties of the constructed menu items.</p></section>	http://electron.atom.io/docs/api/menu/#menubuildfromtemplatetemplate
Menu.getApplicationMenu	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Menu</code> - The application menu, if set, or <code class="highlighter-rouge">null</code>, if not set.</p></section>	http://electron.atom.io/docs/api/menu/#menugetapplicationmenu
Menu.sendActionToFirstResponder 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/menu/#menusendactiontofirstresponderaction-macos
Menu.setApplicationMenu	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">menu</code> Menu</li>\n</ul><p>Sets <code class="highlighter-rouge">menu</code> as the application menu on macOS. On Windows and Linux, the <code class="highlighter-rouge">menu</code> will be set as each window   s top menu.</p><p><strong>Note:</strong> This API has to be called after the <code class="highlighter-rouge">ready</code> event of <code class="highlighter-rouge">app</code> module.</p></section>	http://electron.atom.io/docs/api/menu/#menusetapplicationmenumenu
Render process	A										<section class="prog__container"><p>Below is an example of creating a menu dynamically in a web page (render process) by using the remote</code> module, and showing it when the user right clicks the page:</p><pre><code><!-- index.html -->\n<script>\nconst {remote} = require('electron')\nconst {Menu, MenuItem} = remote\n\nconst menu = new Menu()\nmenu.append(new MenuItem({label: 'MenuItem1', click() { console.log('item 1 clicked') }}))\nmenu.append(new MenuItem({type: 'separator'}))\nmenu.append(new MenuItem({label: 'MenuItem2', type: 'checkbox', checked: true}))\n\nwindow.addEventListener('contextmenu', (e) => {\n  e.preventDefault()\n  menu.popup(remote.getCurrentWindow())\n}, false)\n</script>\n\n</code></pre><p>macOS has a completely different style of application menu from Windows and Linux. Here are some notes on making your app s menu more native-like.</p></section>	http://electron.atom.io/docs/api/menu/#render-process
Standard Menu Item Actions	A										<section class="prog__container"><p>macOS has provided standard actions for some menu items, like <code class="highlighter-rouge">About xxx</code>, <code class="highlighter-rouge">Hide xxx</code>, and <code class="highlighter-rouge">Hide Others</code>. To set the action of a menu item to a standard action, you should set the <code class="highlighter-rouge">role</code> attribute of the menu item.</p></section>	http://electron.atom.io/docs/api/menu/#standard-menu-item-actions
Standard Menus	A										<section class="prog__container"><p>On macOS there are many system-defined standard menus, like the <code class="highlighter-rouge">Services</code> and <code class="highlighter-rouge">Windows</code> menus. To make your menu a standard menu, you should set your menu   s <code class="highlighter-rouge">role</code> to one of following and Electron will recognize them and make them become standard menus:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">window</code></li>\n<li><code class="highlighter-rouge">help</code></li>\n<li><code class="highlighter-rouge">services</code></li>\n</ul></section>	http://electron.atom.io/docs/api/menu/#standard-menus
accelerator	A										<section class="prog__container"><p>Define keyboard shortcuts.</p><p>Accelerators are Strings that can contain multiple modifiers and key codes, combined by the <code class="highlighter-rouge">+</code> character, and are used to define keyboard shortcuts throughout your application.</p><p>Examples:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">CommandOrControl+A</code></li>\n<li><code class="highlighter-rouge">CommandOrControl+Shift+Z</code></li>\n</ul><p>Shortcuts are registered with the register</code> method, i.e.</p><pre><code>const {app, globalShortcut} = require('electron')\n\napp.on('ready', () => {\n  // Register a 'CommandOrControl+Y' shortcut listener.\n  globalShortcut.register('CommandOrControl+Y', () => {\n    // Do stuff when Y and either Command/Control is pressed.\n  })\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/accelerator
app	A										<section class="prog__container"><p>Control your application s event lifecycle.</p><p>Process: Main</p><p>The following example shows how to quit the application when the last window is closed:</p><pre><code>const {app} = require('electron')\napp.on('window-all-closed', () => {\n  app.quit()\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/app
app.addRecentDocument  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/app/#appaddrecentdocumentpath-macos-windows
app.clearRecentDocuments  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/app/#appclearrecentdocuments-macos-windows
app.commandLine.appendArgument	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">value</code> String - The argument to append to the command line</li>\n</ul><p>Append an argument to Chromium   s command line. The argument will be quoted correctly.</p><p><strong>Note:</strong> This will not affect <code class="highlighter-rouge">process.argv</code>.</p></section>	http://electron.atom.io/docs/api/app/#appcommandlineappendargumentvalue
app.commandLine.appendSwitch	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">switch</code> String - A command-line switch</li>\n<li><code class="highlighter-rouge">value</code> String (optional) - A value for the given switch</li>\n</ul><p>Append a switch (with optional <code class="highlighter-rouge">value</code>) to Chromium   s command line.</p><p><strong>Note:</strong> This will not affect <code class="highlighter-rouge">process.argv</code>, and is mainly used by developers to control some low-level Chromium behaviors.</p></section>	http://electron.atom.io/docs/api/app/#appcommandlineappendswitchswitch-value
app.disableHardwareAcceleration	A										<section class="prog__container"><p>Disables hardware acceleration for current app.</p><p>This method can only be called before app is ready.</p></section>	http://electron.atom.io/docs/api/app/#appdisablehardwareacceleration
app.dock.bounce 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/app/#appdockbouncetype-macos
app.dock.cancelBounce 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/app/#appdockcancelbounceid-macos
app.dock.downloadFinished 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/app/#appdockdownloadfinishedfilepath-macos
app.dock.getBadge 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/app/#appdockgetbadge-macos
app.dock.hide 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/app/#appdockhide-macos
app.dock.isVisible 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/app/#appdockisvisible-macos
app.dock.setBadge 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/app/#appdocksetbadgetext-macos
app.dock.setMenu 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/app/#appdocksetmenumenu-macos
app.dock.show 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/app/#appdockshow-macos
app.exit	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">exitCode</code> Integer (optional)</li>\n</ul><p>Exits immediately with <code class="highlighter-rouge">exitCode</code>. <code class="highlighter-rouge">exitCode</code> defaults to 0.</p><p>All windows will be closed immediately without asking user and the <code class="highlighter-rouge">before-quit</code> and <code class="highlighter-rouge">will-quit</code> events will not be emitted.</p></section>	http://electron.atom.io/docs/api/app/#appexitexitcode
app.focus	A										<section class="prog__container"><p>On Linux, focuses on the first visible window. On macOS, makes the application the active app. On Windows, focuses on the application   s first window.</p></section>	http://electron.atom.io/docs/api/app/#appfocus
app.getAppPath	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The current application directory.</p></section>	http://electron.atom.io/docs/api/app/#appgetapppath
app.getBadgeCount  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS Linux</p></section>	http://electron.atom.io/docs/api/app/#appgetbadgecount-linux-macos
app.getCurrentActivityType 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/app/#appgetcurrentactivitytype-macos
app.getJumpListSettings 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/app/#appgetjumplistsettings-windows
app.getLocale	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The current application locale. Possible return values are documented here.</p><p><strong>Note:</strong> When distributing your packaged app, you have to also ship the <code class="highlighter-rouge">locales</code> folder.</p><p><strong>Note:</strong> On Windows you have to call it after the <code class="highlighter-rouge">ready</code> events gets emitted.</p></section>	http://electron.atom.io/docs/api/app/#appgetlocale
app.getLoginItemSettings  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/app/#appgetloginitemsettingsoptions-macos-windows
app.getName	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The current application   s name, which is the name in the application   s <code class="highlighter-rouge">package.json</code> file.</p><p>Usually the <code class="highlighter-rouge">name</code> field of <code class="highlighter-rouge">package.json</code> is a short lowercased name, according to the npm modules spec. You should usually also specify a <code class="highlighter-rouge">productName</code> field, which is your application   s full capitalized name, and which will be preferred over <code class="highlighter-rouge">name</code> by Electron.</p></section>	http://electron.atom.io/docs/api/app/#appgetname
app.getPath	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">name</code> String</li>\n</ul><p>Returns <code class="highlighter-rouge">String</code> - A path to a special directory or file associated with <code class="highlighter-rouge">name</code>. On failure an <code class="highlighter-rouge">Error</code> is thrown.</p><p>You can request the following paths by the name:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">home</code> User   s home directory.</li>\n<li><code class="highlighter-rouge">appData</code> Per-user application data directory, which by default points to:\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">%APPDATA%</code> on Windows</li>\n<li><code class="highlighter-rouge">$XDG_CONFIG_HOME</code> or <code class="highlighter-rouge">~/.config</code> on Linux</li>\n<li><code class="highlighter-rouge">~/Library/Application Support</code> on macOS</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">userData</code> The directory for storing your app   s configuration files, which by default it is the <code class="highlighter-rouge">appData</code> directory appended with your app   s name.</li>\n<li><code class="highlighter-rouge">temp</code> Temporary directory.</li>\n<li><code class="highlighter-rouge">exe</code> The current executable file.</li>\n<li><code class="highlighter-rouge">module</code> The <code class="highlighter-rouge">libchromiumcontent</code> library.</li>\n<li><code class="highlighter-rouge">desktop</code> The current user   s Desktop directory.</li>\n<li><code class="highlighter-rouge">documents</code> Directory for a user   s    My Documents   .</li>\n<li><code class="highlighter-rouge">downloads</code> Directory for a user   s downloads.</li>\n<li><code class="highlighter-rouge">music</code> Directory for a user   s music.</li>\n<li><code class="highlighter-rouge">pictures</code> Directory for a user   s pictures.</li>\n<li><code class="highlighter-rouge">videos</code> Directory for a user   s videos.</li>\n<li><code class="highlighter-rouge">pepperFlashSystemPlugin</code> Full path to the system version of the Pepper Flash plugin.</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">%APPDATA%</code> on Windows</li>\n<li><code class="highlighter-rouge">$XDG_CONFIG_HOME</code> or <code class="highlighter-rouge">~/.config</code> on Linux</li>\n<li><code class="highlighter-rouge">~/Library/Application Support</code> on macOS</li>\n</ul></section>	http://electron.atom.io/docs/api/app/#appgetpathname
app.getVersion	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The version of the loaded application. If no version is found in the application   s <code class="highlighter-rouge">package.json</code> file, the version of the current bundle or executable is returned.</p></section>	http://electron.atom.io/docs/api/app/#appgetversion
app.hide 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/app/#apphide-macos
app.importCertificate LINUX	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">options</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">certificate</code> String - Path for the pkcs12 file.</li>\n<li><code class="highlighter-rouge">password</code> String - Passphrase for the certificate.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">result</code> Integer - Result of import.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">certificate</code> String - Path for the pkcs12 file.</li>\n<li><code class="highlighter-rouge">password</code> String - Passphrase for the certificate.</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">result</code> Integer - Result of import.</li>\n</ul><p>Imports the certificate in pkcs12 format into the platform certificate store. <code class="highlighter-rouge">callback</code> is called with the <code class="highlighter-rouge">result</code> of import operation, a value of <code class="highlighter-rouge">0</code> indicates success while any other value indicates failure according to chromium net_error_list.</p></section>	http://electron.atom.io/docs/api/app/#appimportcertificateoptions-callback-linux
app.isAccessibilitySupportEnabled  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/app/#appisaccessibilitysupportenabled-macos-windows
app.isDefaultProtocolClient  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/app/#appisdefaultprotocolclientprotocol-path-args-macos-windows
app.isReady	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - <code class="highlighter-rouge">true</code> if Electron has finished initializing, <code class="highlighter-rouge">false</code> otherwise.</p></section>	http://electron.atom.io/docs/api/app/#appisready
app.isUnityRunning 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> Linux</p></section>	http://electron.atom.io/docs/api/app/#appisunityrunning-linux
app.makeSingleInstance	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">argv</code> String[] - An array of the second instance s command line arguments</li>\n<li><code class="highlighter-rouge">workingDirectory</code> String - The second instance s working directory</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">argv</code> String[] - An array of the second instance s command line arguments</li>\n<li><code class="highlighter-rouge">workingDirectory</code> String - The second instance s working directory</li>\n</ul><p>This method makes your application a Single Instance Application - instead of allowing multiple instances of your app to run, this will ensure that only a single instance of your app is running, and other instances signal this instance and exit.</p><p><code class="highlighter-rouge">callback</code> will be called with <code class="highlighter-rouge">callback(argv, workingDirectory)</code> when a second instance has been executed. <code class="highlighter-rouge">argv</code> is an Array of the second instance s command line arguments, and <code class="highlighter-rouge">workingDirectory</code> is its current working directory. Usually applications respond to this by making their primary window focused and non-minimized.</p><p>The <code class="highlighter-rouge">callback</code> is guaranteed to be executed after the <code class="highlighter-rouge">ready</code> event of <code class="highlighter-rouge">app</code> gets emitted.</p><p>This method returns <code class="highlighter-rouge">false</code> if your process is the primary instance of the application and your app should continue loading. And returns <code class="highlighter-rouge">true</code> if your process has sent its parameters to another instance, and you should immediately quit.</p><p>On macOS the system enforces single instance automatically when users try to open a second instance of your app in Finder, and the <code class="highlighter-rouge">open-file</code> and <code class="highlighter-rouge">open-url</code> events will be emitted for that. However when users start your app in command line the system s single instance mechanism will be bypassed and you have to use this method to ensure single instance.</p><p>An example of activating the window of primary instance when a second instance starts:</p><pre><code>const {app} = require('electron')\nlet myWindow = null\n\nconst shouldQuit = app.makeSingleInstance((commandLine, workingDirectory) => {\n  // Someone tried to run a second instance, we should focus our window.\n  if (myWindow) {\n    if (myWindow.isMinimized()) myWindow.restore()\n    myWindow.focus()\n  }\n})\n\nif (shouldQuit) {\n  app.quit()\n}\n\n// Create myWindow, load the rest of the app, etc...\napp.on('ready', () => {\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/app/#appmakesingleinstancecallback
app.quit	A										<section class="prog__container"><p>Try to close all windows. The <code class="highlighter-rouge">before-quit</code> event will be emitted first. If all windows are successfully closed, the <code class="highlighter-rouge">will-quit</code> event will be emitted and by default the application will terminate.</p><p>This method guarantees that all <code class="highlighter-rouge">beforeunload</code> and <code class="highlighter-rouge">unload</code> event handlers are correctly executed. It is possible that a window cancels the quitting by returning <code class="highlighter-rouge">false</code> in the <code class="highlighter-rouge">beforeunload</code> event handler.</p></section>	http://electron.atom.io/docs/api/app/#appquit
app.relaunch	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">args</code> String[] - (optional)</li>\n<li><code class="highlighter-rouge">execPath</code> String (optional)</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">args</code> String[] - (optional)</li>\n<li><code class="highlighter-rouge">execPath</code> String (optional)</li>\n</ul><p>Relaunches the app when current instance exits.</p><p>By default the new instance will use the same working directory and command line arguments with current instance. When <code class="highlighter-rouge">args</code> is specified, the <code class="highlighter-rouge">args</code> will be passed as command line arguments instead. When <code class="highlighter-rouge">execPath</code> is specified, the <code class="highlighter-rouge">execPath</code> will be executed for relaunch instead of current app.</p><p>Note that this method does not quit the app when executed, you have to call <code class="highlighter-rouge">app.quit</code> or <code class="highlighter-rouge">app.exit</code> after calling <code class="highlighter-rouge">app.relaunch</code> to make the app restart.</p><p>When <code class="highlighter-rouge">app.relaunch</code> is called for multiple times, multiple instances will be started after current instance exited.</p><p>An example of restarting current instance immediately and adding a new command line argument to the new instance:</p><pre><code>const {app} = require('electron')\n\napp.relaunch({args: process.argv.slice(1).concat(['--relaunch'])})\napp.exit(0)\n\n</code></pre></section>	http://electron.atom.io/docs/api/app/#apprelaunchoptions
app.releaseSingleInstance	A										<section class="prog__container"><p>Releases all locks that were created by <code class="highlighter-rouge">makeSingleInstance</code>. This will allow multiple instances of the application to once again run side by side.</p></section>	http://electron.atom.io/docs/api/app/#appreleasesingleinstance
app.removeAsDefaultProtocolClient  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/app/#appremoveasdefaultprotocolclientprotocol-path-args-macos-windows
app.setAboutPanelOptions 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/app/#appsetaboutpaneloptionsoptions-macos
app.setAppUserModelId 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/app/#appsetappusermodelidid-windows
app.setAsDefaultProtocolClient  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/app/#appsetasdefaultprotocolclientprotocol-path-args-macos-windows
app.setBadgeCount  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS Linux</p></section>	http://electron.atom.io/docs/api/app/#appsetbadgecountcount-linux-macos
app.setJumpList 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/app/#appsetjumplistcategories-windows
app.setLoginItemSettings  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/app/#appsetloginitemsettingssettings-path-args-macos-windows
app.setName	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">name</code> String</li>\n</ul><p>Overrides the current application   s name.</p></section>	http://electron.atom.io/docs/api/app/#appsetnamename
app.setPath	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">name</code> String</li>\n<li><code class="highlighter-rouge">path</code> String</li>\n</ul><p>Overrides the <code class="highlighter-rouge">path</code> to a special directory or file associated with <code class="highlighter-rouge">name</code>. If the path specifies a directory that does not exist, the directory will be created by this method. On failure an <code class="highlighter-rouge">Error</code> is thrown.</p><p>You can only override paths of a <code class="highlighter-rouge">name</code> defined in <code class="highlighter-rouge">app.getPath</code>.</p><p>By default, web pages    cookies and caches will be stored under the <code class="highlighter-rouge">userData</code> directory. If you want to change this location, you have to override the <code class="highlighter-rouge">userData</code> path before the <code class="highlighter-rouge">ready</code> event of the <code class="highlighter-rouge">app</code> module is emitted.</p></section>	http://electron.atom.io/docs/api/app/#appsetpathname-path
app.setUserActivity 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/app/#appsetuseractivitytype-userinfo-webpageurl-macos
app.setUserTasks 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/app/#appsetusertaskstasks-windows
app.show 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/app/#appshow-macos
auto updater	A										<section class="prog__container"><p>Enable apps to automatically update themselves.</p><p>Process: Main</p><p>The <code class="highlighter-rouge">autoUpdater</code> module provides an interface for the Squirrel framework.</p><p>You can quickly launch a multi-platform release server for distributing your application by using one of these projects:</p><ul class="prog__ul">\n<li>nuts: <em>A smart release server for your applications, using GitHub as a backend. Auto-updates with Squirrel (Mac &amp; Windows)</em></li>\n<li>electron-release-server: <em>A fully featured, self-hosted release server for electron applications, compatible with auto-updater</em></li>\n<li>squirrel-updates-server: <em>A simple node.js server for Squirrel.Mac and Squirrel.Windows which uses GitHub releases</em></li>\n<li>squirrel-release-server: <em>A simple PHP application for Squirrel.Windows which reads updates from a folder. Supports delta updates.</em></li>\n</ul></section>	http://electron.atom.io/docs/api/auto-updater
autoUpdater.checkForUpdates	A										<section class="prog__container"><p>Asks the server whether there is an update. You must call <code class="highlighter-rouge">setFeedURL</code> before using this API.</p></section>	http://electron.atom.io/docs/api/auto-updater/#autoupdatercheckforupdates
autoUpdater.getFeedURL	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The current update feed URL.</p></section>	http://electron.atom.io/docs/api/auto-updater/#autoupdatergetfeedurl
autoUpdater.setFeedURL	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">requestHeaders</code> Object <em>macOS</em> (optional) - HTTP request headers.</li>\n</ul><p>Sets the <code class="highlighter-rouge">url</code> and initialize the auto updater.</p></section>	http://electron.atom.io/docs/api/auto-updater/#autoupdatersetfeedurlurl-requestheaders
browser window	A										<section class="prog__container"><p>Create and control browser windows.</p><p>Process: Main</p><pre><code>// In the main process.\nconst {BrowserWindow} = require('electron')\n\n// Or use `remote` from the renderer process.\n// const {BrowserWindow} = require('electron').remote\n\nlet win = new BrowserWindow({width: 800, height: 600})\nwin.on('closed', () => {\n  win = null\n})\n\n// Load a remote URL\nwin.loadURL('https://github.com')\n\n// Or load a local HTML file\nwin.loadURL(`file://${__dirname}/app/index.html`)\n\n</code></pre></section>	http://electron.atom.io/docs/api/browser-window
browser window browser-window	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">ignore</code> Boolean</li>\n</ul><p>Makes the window ignore all mouse events.</p><p>All mouse events happened in this window will be passed to the window below this window, but if this window has focus, it will still receive keyboard events.</p></section>	http://electron.atom.io/docs/api/browser-window/#browserignore-event-win.setignoremouseevents-window-browser-window
browser window proxy	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/browser-window-proxy
chrome command line switches	A										<section class="prog__container"><p>Command line switches supported by Electron.</p><p>You can use app module is emitted:</p><pre><code>const {app} = require('electron')\napp.commandLine.appendSwitch('remote-debugging-port', '8315')\napp.commandLine.appendSwitch('host-rules', 'MAP * 127.0.0.1')\n\napp.on('ready', () => {\n  // Your code here\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/chrome-command-line-switches
client request	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/client-request
clipboard	A										<section class="prog__container"><p>Perform copy and paste operations on the system clipboard.</p><p>Process: Renderer</p><p>The following example shows how to write a string to the clipboard:</p><pre><code>const {clipboard} = require('electron')\nclipboard.writeText('Example String')\n\n</code></pre><p>On X Window systems, there is also a selection clipboard. To manipulate it you need to pass <code class="highlighter-rouge">selection</code> to each method:</p><pre><code>const {clipboard} = require('electron')\nclipboard.writeText('Example String', 'selection')\nconsole.log(clipboard.readText('selection'))\n\n</code></pre></section>	http://electron.atom.io/docs/api/clipboard
clipboard.availableFormats	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul><p>Returns <code class="highlighter-rouge">String[]</code> - An array of supported formats for the clipboard <code class="highlighter-rouge">type</code>.</p></section>	http://electron.atom.io/docs/api/clipboard/#clipboardavailableformatstype
clipboard.clear	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul><p>Clears the clipboard content.</p></section>	http://electron.atom.io/docs/api/clipboard/#clipboardcleartype
clipboard.has Experimental	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">data</code> String</li>\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the clipboard supports the format of specified <code class="highlighter-rouge">data</code>.</p><pre><code>const {clipboard} = require('electron')\nconsole.log(clipboard.has('<p>selection</p>'))\n\n</code></pre></section>	http://electron.atom.io/docs/api/clipboard/#clipboardhasdata-type-experimental
clipboard.read Experimental	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">data</code> String</li>\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul><p>Returns <code class="highlighter-rouge">String</code> - Reads <code class="highlighter-rouge">data</code> from the clipboard.</p></section>	http://electron.atom.io/docs/api/clipboard/#clipboardreaddata-type-experimental
clipboard.readBookmark  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/clipboard/#clipboardreadbookmark-macos-windows
clipboard.readFindText 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/clipboard/#clipboardreadfindtext-macos
clipboard.readHTML	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul><p>Returns <code class="highlighter-rouge">String</code> - The content in the clipboard as markup.</p></section>	http://electron.atom.io/docs/api/clipboard/#clipboardreadhtmltype
clipboard.readImage	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul><p>Returns NativeImage</code> - The image content in the clipboard.</p></section>	http://electron.atom.io/docs/api/clipboard/#clipboardreadimagetype
clipboard.readRTF	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul><p>Returns <code class="highlighter-rouge">String</code> - The content in the clipboard as RTF.</p></section>	http://electron.atom.io/docs/api/clipboard/#clipboardreadrtftype
clipboard.readText	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul><p>Returns <code class="highlighter-rouge">String</code> - The content in the clipboard as plain text.</p></section>	http://electron.atom.io/docs/api/clipboard/#clipboardreadtexttype
clipboard.writeBookmark  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/clipboard/#clipboardwritebookmarktitle-url-type-macos-windows
clipboard.writeFindText 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/clipboard/#clipboardwritefindtexttext-macos
clipboard.writeHTML	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">markup</code> String</li>\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul><p>Writes <code class="highlighter-rouge">markup</code> to the clipboard.</p></section>	http://electron.atom.io/docs/api/clipboard/#clipboardwritehtmlmarkup-type
clipboard.writeImage	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">image</code> NativeImage</li>\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul><p>Writes <code class="highlighter-rouge">image</code> to the clipboard.</p></section>	http://electron.atom.io/docs/api/clipboard/#clipboardwriteimageimage-type
clipboard.writeRTF	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">text</code> String</li>\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul><p>Writes the <code class="highlighter-rouge">text</code> into the clipboard in RTF.</p></section>	http://electron.atom.io/docs/api/clipboard/#clipboardwritertftext-type
clipboard.writeText	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">text</code> String</li>\n<li><code class="highlighter-rouge">type</code> String (optional)</li>\n</ul><p>Writes the <code class="highlighter-rouge">text</code> into the clipboard as plain text.</p></section>	http://electron.atom.io/docs/api/clipboard/#clipboardwritetexttext-type
content tracing	A										<section class="prog__container"><p>Collect tracing data from Chromium s content module for finding performance bottlenecks and slow operations.</p><p>Process: Main</p><p>This module does not include a web interface so you need to open <code class="highlighter-rouge">chrome://tracing/</code> in a Chrome browser and load the generated file to view the result.</p><p><strong>Note:</strong> You should not use this module until the <code class="highlighter-rouge">ready</code> event of the app module is emitted.</p><pre><code>const {app, contentTracing} = require('electron')\n\napp.on('ready', () => {\n  const options = {\n    categoryFilter: '*',\n    traceOptions: 'record-until-full,enable-sampling'\n  }\n\n  contentTracing.startRecording(options, () => {\n    console.log('Tracing started')\n\n    setTimeout(() => {\n      contentTracing.stopRecording('', (path) => {\n        console.log('Tracing data recorded to ' + path)\n      })\n    }, 5000)\n  })\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/content-tracing
contentTracing.captureMonitoringSnapshot	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">resultFilePath</code> String</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">resultFilePath</code> String</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">resultFilePath</code> String</li>\n</ul><p>Get the current monitoring traced data.</p><p>Child processes typically cache trace data and only rarely flush and send trace data back to the main process. This is because it may be an expensive operation to send the trace data over IPC and we would like to avoid unneeded runtime overhead from tracing. So, to end tracing, we must asynchronously ask all child processes to flush any pending trace data.</p><p>Once all child processes have acknowledged the <code class="highlighter-rouge">captureMonitoringSnapshot</code> request the <code class="highlighter-rouge">callback</code> will be called with a file that contains the traced data.</p></section>	http://electron.atom.io/docs/api/content-tracing/#contenttracingcapturemonitoringsnapshotresultfilepath-callback
contentTracing.getCategories	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">categories</code> String[]</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">categories</code> String[]</li>\n</ul><p>Get a set of category groups. The category groups can change as new code paths are reached.</p><p>Once all child processes have acknowledged the <code class="highlighter-rouge">getCategories</code> request the <code class="highlighter-rouge">callback</code> is invoked with an array of category groups.</p></section>	http://electron.atom.io/docs/api/content-tracing/#contenttracinggetcategoriescallback
contentTracing.startMonitoring	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">options</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">categoryFilter</code> String</li>\n<li><code class="highlighter-rouge">traceOptions</code> String</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">categoryFilter</code> String</li>\n<li><code class="highlighter-rouge">traceOptions</code> String</li>\n</ul><p>Start monitoring on all processes.</p><p>Monitoring begins immediately locally and asynchronously on child processes as soon as they receive the <code class="highlighter-rouge">startMonitoring</code> request.</p><p>Once all child processes have acknowledged the <code class="highlighter-rouge">startMonitoring</code> request the <code class="highlighter-rouge">callback</code> will be called.</p></section>	http://electron.atom.io/docs/api/content-tracing/#contenttracingstartmonitoringoptions-callback
contentTracing.startRecording	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">options</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">categoryFilter</code> String</li>\n<li><code class="highlighter-rouge">traceOptions</code> String</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">categoryFilter</code> String</li>\n<li><code class="highlighter-rouge">traceOptions</code> String</li>\n</ul><p>Start recording on all processes.</p><p>Recording begins immediately locally and asynchronously on child processes as soon as they receive the EnableRecording request. The <code class="highlighter-rouge">callback</code> will be called once all child processes have acknowledged the <code class="highlighter-rouge">startRecording</code> request.</p><p><code class="highlighter-rouge">categoryFilter</code> is a filter to control what category groups should be traced. A filter can have an optional <code class="highlighter-rouge">-</code> prefix to exclude category groups that contain a matching category. Having both included and excluded category patterns in the same list is not supported.</p><p>Examples:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">test_MyTest*</code>,</li>\n<li><code class="highlighter-rouge">test_MyTest*,test_OtherStuff</code>,</li>\n<li><code class="highlighter-rouge">"-excluded_category1,-excluded_category2</code></li>\n</ul><p><code class="highlighter-rouge">traceOptions</code> controls what kind of tracing is enabled, it is a comma-delimited list. Possible options are:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">record-until-full</code></li>\n<li><code class="highlighter-rouge">record-continuously</code></li>\n<li><code class="highlighter-rouge">trace-to-console</code></li>\n<li><code class="highlighter-rouge">enable-sampling</code></li>\n<li><code class="highlighter-rouge">enable-systrace</code></li>\n</ul><p>The first 3 options are trace recording modes and hence mutually exclusive. If more than one trace recording modes appear in the <code class="highlighter-rouge">traceOptions</code> string, the last one takes precedence. If none of the trace recording modes are specified, recording mode is <code class="highlighter-rouge">record-until-full</code>.</p><p>The trace option will first be reset to the default option (<code class="highlighter-rouge">record_mode</code> set to <code class="highlighter-rouge">record-until-full</code>, <code class="highlighter-rouge">enable_sampling</code> and <code class="highlighter-rouge">enable_systrace</code> set to <code class="highlighter-rouge">false</code>) before options parsed from <code class="highlighter-rouge">traceOptions</code> are applied on it.</p></section>	http://electron.atom.io/docs/api/content-tracing/#contenttracingstartrecordingoptions-callback
contentTracing.stopMonitoring	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">callback</code> Function</li>\n</ul><p>Stop monitoring on all processes.</p><p>Once all child processes have acknowledged the <code class="highlighter-rouge">stopMonitoring</code> request the <code class="highlighter-rouge">callback</code> is called.</p></section>	http://electron.atom.io/docs/api/content-tracing/#contenttracingstopmonitoringcallback
contentTracing.stopRecording	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">resultFilePath</code> String</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">resultFilePath</code> String</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">resultFilePath</code> String</li>\n</ul><p>Stop recording on all processes.</p><p>Child processes typically cache trace data and only rarely flush and send trace data back to the main process. This helps to minimize the runtime overhead of tracing since sending trace data over IPC can be an expensive operation. So, to end tracing, we must asynchronously ask all child processes to flush any pending trace data.</p><p>Once all child processes have acknowledged the <code class="highlighter-rouge">stopRecording</code> request, <code class="highlighter-rouge">callback</code> will be called with a file that contains the traced data.</p><p>Trace data will be written into <code class="highlighter-rouge">resultFilePath</code> if it is not empty or into a temporary file. The actual file path will be passed to <code class="highlighter-rouge">callback</code> if it   s not <code class="highlighter-rouge">null</code>.</p></section>	http://electron.atom.io/docs/api/content-tracing/#contenttracingstoprecordingresultfilepath-callback
contents.addWorkSpace	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">path</code> String</li>\n</ul><p>Adds the specified path to DevTools workspace. Must be used after DevTools creation:</p><pre><code>const {BrowserWindow} = require('electron')\nlet win = new BrowserWindow()\nwin.webContents.on('devtools-opened', () => {\n  win.webContents.addWorkSpace(__dirname)\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/web-contents/#contentsaddworkspacepath
contents.beginFrameSubscription	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">onlyDirty</code> Boolean (optional) - Defaults to <code class="highlighter-rouge">false</code></li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">frameBuffer</code> Buffer</li>\n<li><code class="highlighter-rouge">dirtyRect</code> Rectangle</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">frameBuffer</code> Buffer</li>\n<li><code class="highlighter-rouge">dirtyRect</code> Rectangle</li>\n</ul><p>Begin subscribing for presentation events and captured frames, the <code class="highlighter-rouge">callback</code> will be called with <code class="highlighter-rouge">callback(frameBuffer, dirtyRect)</code> when there is a presentation event.</p><p>The <code class="highlighter-rouge">frameBuffer</code> is a <code class="highlighter-rouge">Buffer</code> that contains raw pixel data. On most machines, the pixel data is effectively stored in 32bit BGRA format, but the actual representation depends on the endianness of the processor (most modern processors are little-endian, on machines with big-endian processors the data is in 32bit ARGB format).</p><p>The <code class="highlighter-rouge">dirtyRect</code> is an object with <code class="highlighter-rouge">x, y, width, height</code> properties that describes which part of the page was repainted. If <code class="highlighter-rouge">onlyDirty</code> is set to <code class="highlighter-rouge">true</code>, <code class="highlighter-rouge">frameBuffer</code> will only contain the repainted area. <code class="highlighter-rouge">onlyDirty</code> defaults to <code class="highlighter-rouge">false</code>.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsbeginframesubscriptiononlydirty-callback
contents.canGoBack	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the browser can go back to previous web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentscangoback
contents.canGoForward	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the browser can go forward to next web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentscangoforward
contents.canGoToOffset	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">offset</code> Integer</li>\n</ul><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the web page can go to <code class="highlighter-rouge">offset</code>.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentscangotooffsetoffset
contents.capturePage	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">rect</code> Rectangle (optional) - The area of the page to be captured</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">image</code> NativeImage</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">image</code> NativeImage</li>\n</ul><p>Captures a snapshot of the page within <code class="highlighter-rouge">rect</code>. Upon completion <code class="highlighter-rouge">callback</code> will be called with <code class="highlighter-rouge">callback(image)</code>. The <code class="highlighter-rouge">image</code> is an instance of rect</code> will capture the whole visible page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentscapturepagerect-callback
contents.clearHistory	A										<section class="prog__container"><p>Clears the navigation history.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsclearhistory
contents.closeDevTools	A										<section class="prog__container"><p>Closes the devtools.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsclosedevtools
contents.copy	A										<section class="prog__container"><p>Executes the editing command <code class="highlighter-rouge">copy</code> in web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentscopy
contents.copyImageAt	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n</ul><p>Copy the image at the given position to the clipboard.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentscopyimageatx-y
contents.cut	A										<section class="prog__container"><p>Executes the editing command <code class="highlighter-rouge">cut</code> in web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentscut
contents.delete	A										<section class="prog__container"><p>Executes the editing command <code class="highlighter-rouge">delete</code> in web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsdelete
contents.devToolsWebContents	A										<section class="prog__container"><p>A <code class="highlighter-rouge">WebContents</code> of DevTools for this <code class="highlighter-rouge">WebContents</code>.</p><p><strong>Note:</strong> Users should never store this object because it may become <code class="highlighter-rouge">null</code> when the DevTools has been closed.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsdevtoolswebcontents
contents.disableDeviceEmulation	A										<section class="prog__container"><p>Disable device emulation enabled by <code class="highlighter-rouge">webContents.enableDeviceEmulation</code>.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsdisabledeviceemulation
contents.downloadURL	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n</ul><p>Initiates a download of the resource at <code class="highlighter-rouge">url</code> without navigating. The <code class="highlighter-rouge">will-download</code> event of <code class="highlighter-rouge">session</code> will be triggered.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsdownloadurlurl
contents.enableDeviceEmulation	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">parameters</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">screenPosition</code> String - Specify the screen type to emulate (default: <code class="highlighter-rouge">desktop</code>)\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">desktop</code> - Desktop screen type</li>\n<li><code class="highlighter-rouge">mobile</code> - Mobile screen type</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">screenSize</code> Object - Set the emulated screen size (screenPosition == mobile)\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer - Set the emulated screen width</li>\n<li><code class="highlighter-rouge">height</code> Integer - Set the emulated screen height</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">viewPosition</code> Object - Position the view on the screen (screenPosition == mobile) (default: <code class="highlighter-rouge"><span class="p">{</span><span class="err">x:</span><span class="w"> </span><span class="err">0,</span><span class="w"> </span><span class="err">y:</span><span class="w"> </span><span class="err">0</span><span class="p">}</span></code>)\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Integer - Set the x axis offset from top left corner</li>\n<li><code class="highlighter-rouge">y</code> Integer - Set the y axis offset from top left corner</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">deviceScaleFactor</code> Integer - Set the device scale factor (if zero defaults to original device scale factor) (default: <code class="highlighter-rouge">0</code>)</li>\n<li><code class="highlighter-rouge">viewSize</code> Object - Set the emulated view size (empty means no override)\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer - Set the emulated view width</li>\n<li><code class="highlighter-rouge">height</code> Integer - Set the emulated view height</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">fitToView</code> Boolean - Whether emulated view should be scaled down if necessary to fit into available space (default: <code class="highlighter-rouge">false</code>)</li>\n<li><code class="highlighter-rouge">offset</code> Object - Offset of the emulated view inside available space (not in fit to view mode) (default: <code class="highlighter-rouge"><span class="p">{</span><span class="err">x:</span><span class="w"> </span><span class="err">0,</span><span class="w"> </span><span class="err">y:</span><span class="w"> </span><span class="err">0</span><span class="p">}</span></code>)\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Float - Set the x axis offset from top left corner</li>\n<li><code class="highlighter-rouge">y</code> Float - Set the y axis offset from top left corner</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">scale</code> Float - Scale of emulated view inside available space (not in fit to view mode) (default: <code class="highlighter-rouge">1</code>)</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">screenPosition</code> String - Specify the screen type to emulate (default: <code class="highlighter-rouge">desktop</code>)\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">desktop</code> - Desktop screen type</li>\n<li><code class="highlighter-rouge">mobile</code> - Mobile screen type</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">screenSize</code> Object - Set the emulated screen size (screenPosition == mobile)\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer - Set the emulated screen width</li>\n<li><code class="highlighter-rouge">height</code> Integer - Set the emulated screen height</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">viewPosition</code> Object - Position the view on the screen (screenPosition == mobile) (default: <code class="highlighter-rouge"><span class="p">{</span><span class="err">x:</span><span class="w"> </span><span class="err">0,</span><span class="w"> </span><span class="err">y:</span><span class="w"> </span><span class="err">0</span><span class="p">}</span></code>)\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Integer - Set the x axis offset from top left corner</li>\n<li><code class="highlighter-rouge">y</code> Integer - Set the y axis offset from top left corner</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">deviceScaleFactor</code> Integer - Set the device scale factor (if zero defaults to original device scale factor) (default: <code class="highlighter-rouge">0</code>)</li>\n<li><code class="highlighter-rouge">viewSize</code> Object - Set the emulated view size (empty means no override)\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer - Set the emulated view width</li>\n<li><code class="highlighter-rouge">height</code> Integer - Set the emulated view height</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">fitToView</code> Boolean - Whether emulated view should be scaled down if necessary to fit into available space (default: <code class="highlighter-rouge">false</code>)</li>\n<li><code class="highlighter-rouge">offset</code> Object - Offset of the emulated view inside available space (not in fit to view mode) (default: <code class="highlighter-rouge"><span class="p">{</span><span class="err">x:</span><span class="w"> </span><span class="err">0,</span><span class="w"> </span><span class="err">y:</span><span class="w"> </span><span class="err">0</span><span class="p">}</span></code>)\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Float - Set the x axis offset from top left corner</li>\n<li><code class="highlighter-rouge">y</code> Float - Set the y axis offset from top left corner</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">scale</code> Float - Scale of emulated view inside available space (not in fit to view mode) (default: <code class="highlighter-rouge">1</code>)</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">desktop</code> - Desktop screen type</li>\n<li><code class="highlighter-rouge">mobile</code> - Mobile screen type</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer - Set the emulated screen width</li>\n<li><code class="highlighter-rouge">height</code> Integer - Set the emulated screen height</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Integer - Set the x axis offset from top left corner</li>\n<li><code class="highlighter-rouge">y</code> Integer - Set the y axis offset from top left corner</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer - Set the emulated view width</li>\n<li><code class="highlighter-rouge">height</code> Integer - Set the emulated view height</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Float - Set the x axis offset from top left corner</li>\n<li><code class="highlighter-rouge">y</code> Float - Set the y axis offset from top left corner</li>\n</ul><p>Enable device emulation with the given parameters.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsenabledeviceemulationparameters
contents.endFrameSubscription	A										<section class="prog__container"><p>End subscribing for frame presentation events.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsendframesubscription
contents.executeJavaScript	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">code</code> String</li>\n<li><code class="highlighter-rouge">userGesture</code> Boolean (optional)</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional) - Called after script has been executed.\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">result</code> Any</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">result</code> Any</li>\n</ul><p>Returns <code class="highlighter-rouge">Promise</code> - A promise that resolves with the result of the executed code or is rejected if the result of the code is a rejected promise.</p><p>Evaluates <code class="highlighter-rouge">code</code> in page.</p><p>In the browser window some HTML APIs like <code class="highlighter-rouge">requestFullScreen</code> can only be invoked by a gesture from the user. Setting <code class="highlighter-rouge">userGesture</code> to <code class="highlighter-rouge">true</code> will remove this limitation.</p><p>If the result of the executed code is a promise the callback result will be the resolved value of the promise. We recommend that you use the returned Promise to handle code that results in a Promise.</p><pre><code>contents.executeJavaScript('fetch("https://jsonplaceholder.typicode.com/users/1").then(resp => resp.json())', true)\n  .then((result) => {\n    console.log(result) // Will be the JSON object from the fetch call\n  })\n\n</code></pre></section>	http://electron.atom.io/docs/api/web-contents/#contentsexecutejavascriptcode-usergesture-callback
contents.findInPage	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">text</code> String - Content to be searched, must not be empty.</li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">forward</code> Boolean - (optional) Whether to search forward or backward, defaults to <code class="highlighter-rouge">true</code>.</li>\n<li><code class="highlighter-rouge">findNext</code> Boolean - (optional) Whether the operation is first request or a follow up, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">matchCase</code> Boolean - (optional) Whether search should be case-sensitive, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">wordStart</code> Boolean - (optional) Whether to look only at the start of words. defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">medialCapitalAsWordStart</code> Boolean - (optional) When combined with <code class="highlighter-rouge">wordStart</code>, accepts a match in the middle of a word if the match begins with an uppercase letter followed by a lowercase or non-letter. Accepts several other intra-word matches, defaults to <code class="highlighter-rouge">false</code>.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">forward</code> Boolean - (optional) Whether to search forward or backward, defaults to <code class="highlighter-rouge">true</code>.</li>\n<li><code class="highlighter-rouge">findNext</code> Boolean - (optional) Whether the operation is first request or a follow up, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">matchCase</code> Boolean - (optional) Whether search should be case-sensitive, defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">wordStart</code> Boolean - (optional) Whether to look only at the start of words. defaults to <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">medialCapitalAsWordStart</code> Boolean - (optional) When combined with <code class="highlighter-rouge">wordStart</code>, accepts a match in the middle of a word if the match begins with an uppercase letter followed by a lowercase or non-letter. Accepts several other intra-word matches, defaults to <code class="highlighter-rouge">false</code>.</li>\n</ul><p>Starts a request to find all matches for the <code class="highlighter-rouge">text</code> in the web page and returns an <code class="highlighter-rouge">Integer</code> representing the request id used for the request. The result of the request can be obtained by subscribing to found-in-page</code> event.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsfindinpagetext-options
contents.getFrameRate	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Integer</code> - If <em>offscreen rendering</em> is enabled returns the current frame rate.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsgetframerate
contents.getTitle	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The title of the current web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsgettitle
contents.getURL	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The URL of the current web page.</p><pre><code>const {BrowserWindow} = require('electron')\nlet win = new BrowserWindow({width: 800, height: 600})\nwin.loadURL('http://github.com')\n\nlet currentURL = win.webContents.getURL()\nconsole.log(currentURL)\n\n</code></pre></section>	http://electron.atom.io/docs/api/web-contents/#contentsgeturl
contents.getUserAgent	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The user agent for this web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsgetuseragent
contents.getZoomFactor	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">zoomFactor</code> Number</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">zoomFactor</code> Number</li>\n</ul><p>Sends a request to get current zoom factor, the <code class="highlighter-rouge">callback</code> will be called with <code class="highlighter-rouge">callback(zoomFactor)</code>.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsgetzoomfactorcallback
contents.getZoomLevel	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">zoomLevel</code> Number</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">zoomLevel</code> Number</li>\n</ul><p>Sends a request to get current zoom level, the <code class="highlighter-rouge">callback</code> will be called with <code class="highlighter-rouge">callback(zoomLevel)</code>.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsgetzoomlevelcallback
contents.goBack	A										<section class="prog__container"><p>Makes the browser go back a web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsgoback
contents.goForward	A										<section class="prog__container"><p>Makes the browser go forward a web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsgoforward
contents.goToIndex	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">index</code> Integer</li>\n</ul><p>Navigates browser to the specified absolute web page index.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsgotoindexindex
contents.goToOffset	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">offset</code> Integer</li>\n</ul><p>Navigates to the specified offset from the    current entry   .</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsgotooffsetoffset
contents.hasServiceWorker	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">hasWorker</code> Boolean</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">hasWorker</code> Boolean</li>\n</ul><p>Checks if any ServiceWorker is registered and returns a boolean as response to <code class="highlighter-rouge">callback</code>.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentshasserviceworkercallback
contents.hostWebContents	A										<section class="prog__container"><p>A WebContents</code>.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentshostwebcontents
contents.id	A										<section class="prog__container"><p>A Integer representing the unique ID of this WebContents.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsid
contents.insertCSS	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">css</code> String</li>\n</ul><p>Injects CSS into the current web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsinsertcsscss
contents.insertText	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul><p>Inserts <code class="highlighter-rouge">text</code> to the focused element.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsinserttexttext
contents.inspectElement	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n</ul><p>Starts inspecting element at position (<code class="highlighter-rouge">x</code>, <code class="highlighter-rouge">y</code>).</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsinspectelementx-y
contents.inspectServiceWorker	A										<section class="prog__container"><p>Opens the developer tools for the service worker context.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsinspectserviceworker
contents.invalidate	A										<section class="prog__container"><p>If <em>offscreen rendering</em> is enabled invalidates the frame and generates a new one through the <code class="highlighter-rouge">'paint'</code> event.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsinvalidate
contents.isAudioMuted	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether this page has been muted.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsisaudiomuted
contents.isCrashed	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the renderer process has crashed.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsiscrashed
contents.isDestroyed	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the web page is destroyed.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsisdestroyed
contents.isDevToolsFocused	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the devtools view is focused .</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsisdevtoolsfocused
contents.isDevToolsOpened	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the devtools is opened.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsisdevtoolsopened
contents.isFocused	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the web page is focused.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsisfocused
contents.isLoading	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether web page is still loading resources.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsisloading
contents.isLoadingMainFrame	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the main frame (and not just iframes or frames within it) is still loading.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsisloadingmainframe
contents.isOffscreen	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Indicates whether <em>offscreen rendering</em> is enabled.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsisoffscreen
contents.isPainting	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - If <em>offscreen rendering</em> is enabled returns whether it is currently painting.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsispainting
contents.isWaitingForResponse	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the web page is waiting for a first-response from the main resource of the page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsiswaitingforresponse
contents.loadURL	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">httpReferrer</code> String (optional) - A HTTP Referrer url.</li>\n<li><code class="highlighter-rouge">userAgent</code> String (optional) - A user agent originating the request.</li>\n<li><code class="highlighter-rouge">extraHeaders</code> String (optional) - Extra headers separated by  \n </li>\n<li><code class="highlighter-rouge">postData</code> (UploadBlob)[] - (optional)</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">httpReferrer</code> String (optional) - A HTTP Referrer url.</li>\n<li><code class="highlighter-rouge">userAgent</code> String (optional) - A user agent originating the request.</li>\n<li><code class="highlighter-rouge">extraHeaders</code> String (optional) - Extra headers separated by  \n </li>\n<li><code class="highlighter-rouge">postData</code> (UploadBlob)[] - (optional)</li>\n</ul><p>Loads the <code class="highlighter-rouge">url</code> in the window. The <code class="highlighter-rouge">url</code> must contain the protocol prefix, e.g. the <code class="highlighter-rouge">http://</code> or <code class="highlighter-rouge">file://</code>. If the load should bypass http cache then use the <code class="highlighter-rouge">pragma</code> header to achieve it.</p><pre><code>const {webContents} = require('electron')\nconst options = {extraHeaders: 'pragma: no-cache\n'}\nwebContents.loadURL('https://github.com', options)\n\n</code></pre></section>	http://electron.atom.io/docs/api/web-contents/#contentsloadurlurl-options
contents.openDevTools	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">mode</code> String - Opens the devtools with specified dock state, can be <code class="highlighter-rouge">right</code>, <code class="highlighter-rouge">bottom</code>, <code class="highlighter-rouge">undocked</code>, <code class="highlighter-rouge">detach</code>. Defaults to last used dock state. In <code class="highlighter-rouge">undocked</code> mode it   s possible to dock back. In <code class="highlighter-rouge">detach</code> mode it   s not.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">mode</code> String - Opens the devtools with specified dock state, can be <code class="highlighter-rouge">right</code>, <code class="highlighter-rouge">bottom</code>, <code class="highlighter-rouge">undocked</code>, <code class="highlighter-rouge">detach</code>. Defaults to last used dock state. In <code class="highlighter-rouge">undocked</code> mode it   s possible to dock back. In <code class="highlighter-rouge">detach</code> mode it   s not.</li>\n</ul><p>Opens the devtools.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsopendevtoolsoptions
contents.paste	A										<section class="prog__container"><p>Executes the editing command <code class="highlighter-rouge">paste</code> in web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentspaste
contents.pasteAndMatchStyle	A										<section class="prog__container"><p>Executes the editing command <code class="highlighter-rouge">pasteAndMatchStyle</code> in web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentspasteandmatchstyle
contents.print	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">silent</code> Boolean - Don   t ask user for print settings. Default is <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">printBackground</code> Boolean - Also prints the background color and image of the web page. Default is <code class="highlighter-rouge">false</code>.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">silent</code> Boolean - Don   t ask user for print settings. Default is <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">printBackground</code> Boolean - Also prints the background color and image of the web page. Default is <code class="highlighter-rouge">false</code>.</li>\n</ul><p>Prints window   s web page. When <code class="highlighter-rouge">silent</code> is set to <code class="highlighter-rouge">true</code>, Electron will pick up system   s default printer and default settings for printing.</p><p>Calling <code class="highlighter-rouge">window.print()</code> in web page is equivalent to calling <code class="highlighter-rouge">webContents.print({silent: false, printBackground: false})</code>.</p><p>Use <code class="highlighter-rouge">page-break-before: always;</code> CSS style to force to print to a new page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsprintoptions
contents.printToPDF	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">options</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">marginsType</code> Integer - (optional) Specifies the type of margins to use. Uses 0 for default margin, 1 for no margin, and 2 for minimum margin.</li>\n<li><code class="highlighter-rouge">pageSize</code> String - (optional) Specify page size of the generated PDF. Can be <code class="highlighter-rouge">A3</code>, <code class="highlighter-rouge">A4</code>, <code class="highlighter-rouge">A5</code>, <code class="highlighter-rouge">Legal</code>, <code class="highlighter-rouge">Letter</code>, <code class="highlighter-rouge">Tabloid</code> or an Object containing <code class="highlighter-rouge">height</code> and <code class="highlighter-rouge">width</code> in microns.</li>\n<li><code class="highlighter-rouge">printBackground</code> Boolean - (optional) Whether to print CSS backgrounds.</li>\n<li><code class="highlighter-rouge">printSelectionOnly</code> Boolean - (optional) Whether to print selection only.</li>\n<li><code class="highlighter-rouge">landscape</code> Boolean - (optional) <code class="highlighter-rouge">true</code> for landscape, <code class="highlighter-rouge">false</code> for portrait.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n<li><code class="highlighter-rouge">data</code> Buffer</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">marginsType</code> Integer - (optional) Specifies the type of margins to use. Uses 0 for default margin, 1 for no margin, and 2 for minimum margin.</li>\n<li><code class="highlighter-rouge">pageSize</code> String - (optional) Specify page size of the generated PDF. Can be <code class="highlighter-rouge">A3</code>, <code class="highlighter-rouge">A4</code>, <code class="highlighter-rouge">A5</code>, <code class="highlighter-rouge">Legal</code>, <code class="highlighter-rouge">Letter</code>, <code class="highlighter-rouge">Tabloid</code> or an Object containing <code class="highlighter-rouge">height</code> and <code class="highlighter-rouge">width</code> in microns.</li>\n<li><code class="highlighter-rouge">printBackground</code> Boolean - (optional) Whether to print CSS backgrounds.</li>\n<li><code class="highlighter-rouge">printSelectionOnly</code> Boolean - (optional) Whether to print selection only.</li>\n<li><code class="highlighter-rouge">landscape</code> Boolean - (optional) <code class="highlighter-rouge">true</code> for landscape, <code class="highlighter-rouge">false</code> for portrait.</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n<li><code class="highlighter-rouge">data</code> Buffer</li>\n</ul><p>Prints window s web page as PDF with Chromium s preview printing custom settings.</p><p>The <code class="highlighter-rouge">callback</code> will be called with <code class="highlighter-rouge">callback(error, data)</code> on completion. The <code class="highlighter-rouge">data</code> is a <code class="highlighter-rouge">Buffer</code> that contains the generated PDF data.</p><p>The <code class="highlighter-rouge">landscape</code> will be ignored if <code class="highlighter-rouge">@page</code> CSS at-rule is used in the web page.</p><p>By default, an empty <code class="highlighter-rouge">options</code> will be regarded as:</p><pre><code>{\n  marginsType: 0,\n  printBackground: false,\n  printSelectionOnly: false,\n  landscape: false\n}\n\n</code></pre><p>Use <code class="highlighter-rouge">page-break-before: always;</code> CSS style to force to print to a new page.</p><p>An example of <code class="highlighter-rouge">webContents.printToPDF</code>:</p><pre><code>const {BrowserWindow} = require('electron')\nconst fs = require('fs')\n\nlet win = new BrowserWindow({width: 800, height: 600})\nwin.loadURL('http://github.com')\n\nwin.webContents.on('did-finish-load', () => {\n  // Use default printing options\n  win.webContents.printToPDF({}, (error, data) => {\n    if (error) throw error\n    fs.writeFile('/tmp/print.pdf', data, (error) => {\n      if (error) throw error\n      console.log('Write PDF successfully.')\n    })\n  })\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/web-contents/#contentsprinttopdfoptions-callback
contents.redo	A										<section class="prog__container"><p>Executes the editing command <code class="highlighter-rouge">redo</code> in web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsredo
contents.reload	A										<section class="prog__container"><p>Reloads the current web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsreload
contents.reloadIgnoringCache	A										<section class="prog__container"><p>Reloads current page and ignores cache.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsreloadignoringcache
contents.removeWorkSpace	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">path</code> String</li>\n</ul><p>Removes the specified path from DevTools workspace.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsremoveworkspacepath
contents.replace	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul><p>Executes the editing command <code class="highlighter-rouge">replace</code> in web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsreplacetext
contents.replaceMisspelling	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul><p>Executes the editing command <code class="highlighter-rouge">replaceMisspelling</code> in web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsreplacemisspellingtext
contents.savePage	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">fullPath</code> String - The full file path.</li>\n<li><code class="highlighter-rouge">saveType</code> String - Specify the save type.\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">HTMLOnly</code> - Save only the HTML of the page.</li>\n<li><code class="highlighter-rouge">HTMLComplete</code> - Save complete-html page.</li>\n<li><code class="highlighter-rouge">MHTML</code> - Save complete-html page as MHTML.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function - <code class="highlighter-rouge">(error) =&gt; {}</code>.\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">HTMLOnly</code> - Save only the HTML of the page.</li>\n<li><code class="highlighter-rouge">HTMLComplete</code> - Save complete-html page.</li>\n<li><code class="highlighter-rouge">MHTML</code> - Save complete-html page as MHTML.</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul><p>Returns true if the process of saving page has been initiated successfully.</p><pre><code>const {BrowserWindow} = require('electron')\nlet win = new BrowserWindow()\n\nwin.loadURL('https://github.com')\n\nwin.webContents.on('did-finish-load', () => {\n  win.webContents.savePage('/tmp/test.html', 'HTMLComplete', (error) => {\n    if (!error) console.log('Save page successfully')\n  })\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/web-contents/#contentssavepagefullpath-savetype-callback
contents.selectAll	A										<section class="prog__container"><p>Executes the editing command <code class="highlighter-rouge">selectAll</code> in web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsselectall
contents.send	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">...args</code> any[]</li>\n</ul><p>Send an asynchronous message to renderer process via <code class="highlighter-rouge">channel</code>, you can also send arbitrary arguments. Arguments will be serialized in JSON internally and hence no functions or prototype chain will be included.</p><p>The renderer process can handle the message by listening to <code class="highlighter-rouge">channel</code> with the <code class="highlighter-rouge">ipcRenderer</code> module.</p><p>An example of sending messages from the main process to the renderer process:</p><pre><code>// In the main process.\nconst {app, BrowserWindow} = require('electron')\nlet win = null\n\napp.on('ready', () => {\n  win = new BrowserWindow({width: 800, height: 600})\n  win.loadURL(`file://${__dirname}/index.html`)\n  win.webContents.on('did-finish-load', () => {\n    win.webContents.send('ping', 'whoooooooh!')\n  })\n})\n\n</code></pre><pre><code><!-- index.html -->\n<html>\n<body>\n  <script>\n    require('electron').ipcRenderer.on('ping', (event, message) => {\n      console.log(message)  // Prints 'whoooooooh!'\n    })\n  </script>\n</body>\n</html>\n\n</code></pre></section>	http://electron.atom.io/docs/api/web-contents/#contentssendchannel-arg1-arg2-
contents.session	A										<section class="prog__container"><p>A Session object (session) used by this webContents.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentssession
contents.setAudioMuted	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">muted</code> Boolean</li>\n</ul><p>Mute the audio on the current web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentssetaudiomutedmuted
contents.setFrameRate	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">fps</code> Integer</li>\n</ul><p>If <em>offscreen rendering</em> is enabled sets the frame rate to the specified number. Only values between 1 and 60 are accepted.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentssetframeratefps
contents.setLayoutZoomLevelLimits	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">minimumLevel</code> Number</li>\n<li><code class="highlighter-rouge">maximumLevel</code> Number</li>\n</ul><p>Sets the maximum and minimum layout-based (i.e. non-visual) zoom level.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentssetlayoutzoomlevellimitsminimumlevel-maximumlevel
contents.setSize	A										<section class="prog__container"><p>Set the size of the page. This is only supported for <code class="highlighter-rouge">&lt;webview&gt;</code> guest contents.</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">options</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">normal</code> Object (optional) - Normal size of the page. This can be used in combination with the disableguestresize</code> attribute to manually resize the webview guest contents.\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">normal</code> Object (optional) - Normal size of the page. This can be used in combination with the disableguestresize</code> attribute to manually resize the webview guest contents.\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul></section>	http://electron.atom.io/docs/api/web-contents/#contentssetsizeoptions
contents.setUserAgent	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">userAgent</code> String</li>\n</ul><p>Overrides the user agent for this web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentssetuseragentuseragent
contents.setVisualZoomLevelLimits	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">minimumLevel</code> Number</li>\n<li><code class="highlighter-rouge">maximumLevel</code> Number</li>\n</ul><p>Sets the maximum and minimum pinch-to-zoom level.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentssetvisualzoomlevellimitsminimumlevel-maximumlevel
contents.setZoomFactor	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">factor</code> Number - Zoom factor.</li>\n</ul><p>Changes the zoom factor to the specified factor. Zoom factor is zoom percent divided by 100, so 300% = 3.0.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentssetzoomfactorfactor
contents.setZoomLevel	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">level</code> Number - Zoom level</li>\n</ul><p>Changes the zoom level to the specified level. The original size is 0 and each increment above or below represents zooming 20% larger or smaller to default limits of 300% and 50% of original size, respectively.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentssetzoomlevellevel
contents.setZoomLevelLimits	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">minimumLevel</code> Number</li>\n<li><code class="highlighter-rouge">maximumLevel</code> Number</li>\n</ul><p><strong>Deprecated:</strong> Call <code class="highlighter-rouge">setVisualZoomLevelLimits</code> instead to set the visual zoom level limits. This method will be removed in Electron 2.0.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentssetzoomlevellimitsminimumlevel-maximumlevel
contents.showDefinitionForSelection 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsshowdefinitionforselection-macos
contents.startDrag	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">item</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">file</code> String - The path to the file being dragged.</li>\n<li><code class="highlighter-rouge">icon</code> NativeImage - The image must be non-empty on macOS.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">file</code> String - The path to the file being dragged.</li>\n<li><code class="highlighter-rouge">icon</code> NativeImage - The image must be non-empty on macOS.</li>\n</ul><p>Sets the <code class="highlighter-rouge">item</code> as dragging item for current drag-drop operation, <code class="highlighter-rouge">file</code> is the absolute path of the file to be dragged, and <code class="highlighter-rouge">icon</code> is the image showing under the cursor when dragging.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsstartdragitem
contents.startPainting	A										<section class="prog__container"><p>If <em>offscreen rendering</em> is enabled and not painting, start painting.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsstartpainting
contents.stop	A										<section class="prog__container"><p>Stops any pending navigation.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsstop
contents.stopFindInPage	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">action</code> String - Specifies the action to take place when ending [<code class="highlighter-rouge">webContents.findInPage</code>] request.\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">clearSelection</code> - Clear the selection.</li>\n<li><code class="highlighter-rouge">keepSelection</code> - Translate the selection into a normal selection.</li>\n<li><code class="highlighter-rouge">activateSelection</code> - Focus and click the selection node.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">clearSelection</code> - Clear the selection.</li>\n<li><code class="highlighter-rouge">keepSelection</code> - Translate the selection into a normal selection.</li>\n<li><code class="highlighter-rouge">activateSelection</code> - Focus and click the selection node.</li>\n</ul><p>Stops any <code class="highlighter-rouge">findInPage</code> request for the <code class="highlighter-rouge">webContents</code> with the provided <code class="highlighter-rouge">action</code>.</p><pre><code>const {webContents} = require('electron')\nwebContents.on('found-in-page', (event, result) => {\n  if (result.finalUpdate) webContents.stopFindInPage('clearSelection')\n})\n\nconst requestId = webContents.findInPage('api')\nconsole.log(requestId)\n\n</code></pre></section>	http://electron.atom.io/docs/api/web-contents/#contentsstopfindinpageaction
contents.stopPainting	A										<section class="prog__container"><p>If <em>offscreen rendering</em> is enabled and painting, stop painting.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsstoppainting
contents.toggleDevTools	A										<section class="prog__container"><p>Toggles the developer tools.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentstoggledevtools
contents.undo	A										<section class="prog__container"><p>Executes the editing command <code class="highlighter-rouge">undo</code> in web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsundo
contents.unregisterServiceWorker	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">success</code> Boolean</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">success</code> Boolean</li>\n</ul><p>Unregisters any ServiceWorker if present and returns a boolean as response to <code class="highlighter-rouge">callback</code> when the JS promise is fulfilled or false when the JS promise is rejected.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsunregisterserviceworkercallback
contents.unselect	A										<section class="prog__container"><p>Executes the editing command <code class="highlighter-rouge">unselect</code> in web page.</p></section>	http://electron.atom.io/docs/api/web-contents/#contentsunselect
cookies	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/cookies
cookies.get	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">filter</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String (optional) - Retrieves cookies which are associated with <code class="highlighter-rouge">url</code>. Empty implies retrieving cookies of all urls.</li>\n<li><code class="highlighter-rouge">name</code> String (optional) - Filters cookies by name.</li>\n<li><code class="highlighter-rouge">domain</code> String (optional) - Retrieves cookies whose domains match or are subdomains of <code class="highlighter-rouge">domains</code></li>\n<li><code class="highlighter-rouge">path</code> String (optional) - Retrieves cookies whose path matches <code class="highlighter-rouge">path</code>.</li>\n<li><code class="highlighter-rouge">secure</code> Boolean (optional) - Filters cookies by their Secure property.</li>\n<li><code class="highlighter-rouge">session</code> Boolean (optional) - Filters out session or persistent cookies.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n<li><code class="highlighter-rouge">cookies</code> Cookies[]</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String (optional) - Retrieves cookies which are associated with <code class="highlighter-rouge">url</code>. Empty implies retrieving cookies of all urls.</li>\n<li><code class="highlighter-rouge">name</code> String (optional) - Filters cookies by name.</li>\n<li><code class="highlighter-rouge">domain</code> String (optional) - Retrieves cookies whose domains match or are subdomains of <code class="highlighter-rouge">domains</code></li>\n<li><code class="highlighter-rouge">path</code> String (optional) - Retrieves cookies whose path matches <code class="highlighter-rouge">path</code>.</li>\n<li><code class="highlighter-rouge">secure</code> Boolean (optional) - Filters cookies by their Secure property.</li>\n<li><code class="highlighter-rouge">session</code> Boolean (optional) - Filters out session or persistent cookies.</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n<li><code class="highlighter-rouge">cookies</code> Cookies[]</li>\n</ul><p>Sends a request to get all cookies matching <code class="highlighter-rouge">details</code>, <code class="highlighter-rouge">callback</code> will be called with <code class="highlighter-rouge">callback(error, cookies)</code> on complete.</p><p><code class="highlighter-rouge">cookies</code> is an Array of cookie</code> objects.</p></section>	http://electron.atom.io/docs/api/cookies/#cookiesgetfilter-callback
cookies.set	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">details</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String - The url to associate the cookie with.</li>\n<li><code class="highlighter-rouge">name</code> String (optional) - The name of the cookie. Empty by default if omitted.</li>\n<li><code class="highlighter-rouge">value</code> String (optional) - The value of the cookie. Empty by default if omitted.</li>\n<li><code class="highlighter-rouge">domain</code> String (optional) - The domain of the cookie. Empty by default if omitted.</li>\n<li><code class="highlighter-rouge">path</code> String (optional) - The path of the cookie. Empty by default if omitted.</li>\n<li><code class="highlighter-rouge">secure</code> Boolean (optional) - Whether the cookie should be marked as Secure. Defaults to false.</li>\n<li><code class="highlighter-rouge">httpOnly</code> Boolean (optional) - Whether the cookie should be marked as HTTP only. Defaults to false.</li>\n<li><code class="highlighter-rouge">expirationDate</code> Double (optional) - The expiration date of the cookie as the number of seconds since the UNIX epoch. If omitted then the cookie becomes a session cookie and will not be retained between sessions.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String - The url to associate the cookie with.</li>\n<li><code class="highlighter-rouge">name</code> String (optional) - The name of the cookie. Empty by default if omitted.</li>\n<li><code class="highlighter-rouge">value</code> String (optional) - The value of the cookie. Empty by default if omitted.</li>\n<li><code class="highlighter-rouge">domain</code> String (optional) - The domain of the cookie. Empty by default if omitted.</li>\n<li><code class="highlighter-rouge">path</code> String (optional) - The path of the cookie. Empty by default if omitted.</li>\n<li><code class="highlighter-rouge">secure</code> Boolean (optional) - Whether the cookie should be marked as Secure. Defaults to false.</li>\n<li><code class="highlighter-rouge">httpOnly</code> Boolean (optional) - Whether the cookie should be marked as HTTP only. Defaults to false.</li>\n<li><code class="highlighter-rouge">expirationDate</code> Double (optional) - The expiration date of the cookie as the number of seconds since the UNIX epoch. If omitted then the cookie becomes a session cookie and will not be retained between sessions.</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul><p>Sets a cookie with <code class="highlighter-rouge">details</code>, <code class="highlighter-rouge">callback</code> will be called with <code class="highlighter-rouge">callback(error)</code> on complete.</p></section>	http://electron.atom.io/docs/api/cookies/#cookiessetdetails-callback
crash reporter	A										<section class="prog__container"><p>Submit crash reports to a remote server.</p><p>Process: Renderer</p><p>The following is an example of automatically submitting a crash report to a remote server:</p><pre><code>const {crashReporter} = require('electron')\n\ncrashReporter.start({\n  productName: 'YourName',\n  companyName: 'YourCompany',\n  submitURL: 'https://your-domain.com/url-to-submit',\n  uploadToServer: true\n})\n\n</code></pre><p>For setting up a server to accept and process crash reports, you can use following projects:</p><ul class="prog__ul">\n<li>socorro</li>\n<li>mini-breakpad-server</li>\n</ul><p>Crash reports are saved locally in an application-specific temp directory folder. For a <code class="highlighter-rouge">productName</code> of <code class="highlighter-rouge">YourName</code>, crash reports will be stored in a folder named <code class="highlighter-rouge">YourName Crashes</code> inside the temp directory. You can customize this temp directory location for your app by calling the <code class="highlighter-rouge">app.setPath('temp', '/my/custom/temp')</code> API before starting the crash reporter.</p></section>	http://electron.atom.io/docs/api/crash-reporter
crashReporter.getLastCrashReport	A										<section class="prog__container"><p>Returns CrashReport</code>:</p><p>Returns the date and ID of the last crash report. If no crash reports have been sent or the crash reporter has not been started, <code class="highlighter-rouge">null</code> is returned.</p></section>	http://electron.atom.io/docs/api/crash-reporter/#crashreportergetlastcrashreport
crashReporter.getUploadToServer 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/crash-reporter/#crashreportergetuploadtoserver-macos
crashReporter.getUploadedReports	A										<section class="prog__container"><p>Returns CrashReport[]</code>:</p><p>Returns all uploaded crash reports. Each report contains the date and uploaded ID.</p></section>	http://electron.atom.io/docs/api/crash-reporter/#crashreportergetuploadedreports
crashReporter.start	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">options</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">companyName</code> String (optional)</li>\n<li><code class="highlighter-rouge">submitURL</code> String - URL that crash reports will be sent to as POST.</li>\n<li><code class="highlighter-rouge">productName</code> String (optional) - Defaults to <code class="highlighter-rouge">app.getName()</code>.</li>\n<li><code class="highlighter-rouge">uploadToServer</code> Boolean (optional) <em>macOS</em> - Whether crash reports should be sent to the server Default is <code class="highlighter-rouge">true</code>.</li>\n<li><code class="highlighter-rouge">ignoreSystemCrashHandler</code> Boolean (optional) - Default is <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">extra</code> Object (optional) - An object you can define that will be sent along with the report. Only string properties are sent correctly, Nested objects are not supported.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">companyName</code> String (optional)</li>\n<li><code class="highlighter-rouge">submitURL</code> String - URL that crash reports will be sent to as POST.</li>\n<li><code class="highlighter-rouge">productName</code> String (optional) - Defaults to <code class="highlighter-rouge">app.getName()</code>.</li>\n<li><code class="highlighter-rouge">uploadToServer</code> Boolean (optional) <em>macOS</em> - Whether crash reports should be sent to the server Default is <code class="highlighter-rouge">true</code>.</li>\n<li><code class="highlighter-rouge">ignoreSystemCrashHandler</code> Boolean (optional) - Default is <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">extra</code> Object (optional) - An object you can define that will be sent along with the report. Only string properties are sent correctly, Nested objects are not supported.</li>\n</ul><p>You are required to call this method before using any other <code class="highlighter-rouge">crashReporter</code> APIs and in each process (main/renderer) from which you want to collect crash reports. You can pass different options to <code class="highlighter-rouge">crashReporter.start</code> when calling from different processes.</p><p><strong>Note</strong> Child processes created via the <code class="highlighter-rouge">child_process</code> module will not have access to the Electron modules. Therefore, to collect crash reports from them, use <code class="highlighter-rouge">process.crashReporter.start</code> instead. Pass the same options as above along with an additional one called <code class="highlighter-rouge">crashesDirectory</code> that should point to a directory to store the crash reports temporarily. You can test this out by calling <code class="highlighter-rouge">process.crash()</code> to crash the child process.</p><p><strong>Note:</strong> To collect crash reports from child process in Windows, you need to add this extra code as well. This will start the process that will monitor and send the crash reports. Replace <code class="highlighter-rouge">submitURL</code>, <code class="highlighter-rouge">productName</code> and <code class="highlighter-rouge">crashesDirectory</code> with appropriate values.</p><pre><code>const args = [\n   `--reporter-url=${submitURL}`,\n   `--application-name=${productName}`,\n   `--crashes-directory=${crashesDirectory}`\n ]\n const env = {\n   ELECTRON_INTERNAL_CRASH_SERVICE: 1\n }\n spawn(process.execPath, args, {\n   env: env,\n   detached: true\n })\n\n</code></pre><p><strong>Note:</strong> On macOS, Electron uses a new <code class="highlighter-rouge">crashpad</code> client for crash collection and reporting. If you want to enable crash reporting, initializing <code class="highlighter-rouge">crashpad</code> from the main process using <code class="highlighter-rouge">crashReporter.start</code> is required regardless of which process you want to collect crashes from. Once initialized this way, the crashpad handler collects crashes from all processes. You still have to call <code class="highlighter-rouge">crashReporter.start</code> from the renderer or child process, otherwise crashes from them will get reported without <code class="highlighter-rouge">companyName</code>, <code class="highlighter-rouge">productName</code> or any of the <code class="highlighter-rouge">extra</code> information.</p></section>	http://electron.atom.io/docs/api/crash-reporter/#crashreporterstartoptions
debugger	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/debugger
debugger debugger	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">reason</code> String - Reason for detaching debugger.</li>\n</ul><p>Emitted when debugging session is terminated. This happens either when <code class="highlighter-rouge">webContents</code> is closed or devtools is invoked for the attached <code class="highlighter-rouge">webContents</code>.</p></section>	http://electron.atom.io/docs/api/debugger/#event-detach
debugger.detach	A										<section class="prog__container"><p>Detaches the debugger from the <code class="highlighter-rouge">webContents</code>.</p></section>	http://electron.atom.io/docs/api/debugger/#debuggerdetach
debugger.isAttached	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether a debugger is attached to the <code class="highlighter-rouge">webContents</code>.</p></section>	http://electron.atom.io/docs/api/debugger/#debuggerisattached
debugger.sendCommand	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">method</code> String - Method name, should be one of the methods defined by the remote debugging protocol.</li>\n<li><code class="highlighter-rouge">commandParams</code> Object (optional) - JSON object with request parameters.</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional) - Response\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Object - Error message indicating the failure of the command.</li>\n<li><code class="highlighter-rouge">result</code> Any - Response defined by the    returns    attribute of the command description in the remote debugging protocol.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Object - Error message indicating the failure of the command.</li>\n<li><code class="highlighter-rouge">result</code> Any - Response defined by the    returns    attribute of the command description in the remote debugging protocol.</li>\n</ul><p>Send given command to the debugging target.</p></section>	http://electron.atom.io/docs/api/debugger/#debuggersendcommandmethod-commandparams-callback
desktop capturer	A										<section class="prog__container"><p>Access information about media sources that can be used to capture audio and video from the desktop using the navigator.webkitGetUserMedia</code> API.</p><p>Process: Renderer</p><p>The following example shows how to capture video from a desktop window whose title is <code class="highlighter-rouge">Electron</code>:</p><pre><code>// In the renderer process.\nconst {desktopCapturer} = require('electron')\n\ndesktopCapturer.getSources({types: ['window', 'screen']}, (error, sources) => {\n  if (error) throw error\n  for (let i = 0; i < sources.length; ++i) {\n    if (sources[i].name === 'Electron') {\n      navigator.webkitGetUserMedia({\n        audio: false,\n        video: {\n          mandatory: {\n            chromeMediaSource: 'desktop',\n            chromeMediaSourceId: sources[i].id,\n            minWidth: 1280,\n            maxWidth: 1280,\n            minHeight: 720,\n            maxHeight: 720\n          }\n        }\n      }, handleStream, handleError)\n      return\n    }\n  }\n})\n\nfunction handleStream (stream) {\n  document.querySelector('video').src = URL.createObjectURL(stream)\n}\n\nfunction handleError (e) {\n  console.log(e)\n}\n\n</code></pre><p>To capture video from a source provided by <code class="highlighter-rouge">desktopCapturer</code> the constraints passed to audio: false</code>.</p><p>To capture both audio and video from the entire desktop the constraints passed to chromeMediaSourceId</code> constraint.</p></section>	http://electron.atom.io/docs/api/desktop-capturer
dialog	A										<section class="prog__container"><p>Display native system dialogs for opening and saving files, alerting, etc.</p><p>Process: Main</p><p>An example of showing a dialog to select multiple files and directories:</p><pre><code>const {dialog} = require('electron')\nconsole.log(dialog.showOpenDialog({properties: ['openFile', 'openDirectory', 'multiSelections']}))\n\n</code></pre><p>The Dialog is opened from Electron s main thread. If you want to use the dialog object from a renderer process, remember to access it using the remote:</p><pre><code>const {dialog} = require('electron').remote\nconsole.log(dialog)\n\n</code></pre></section>	http://electron.atom.io/docs/api/dialog
dialog.showMessageBox	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">browserWindow</code> BrowserWindow (optional)</li>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">type</code> String (optional) - Can be <code class="highlighter-rouge">"none"</code>, <code class="highlighter-rouge">"info"</code>, <code class="highlighter-rouge">"error"</code>, <code class="highlighter-rouge">"question"</code> or <code class="highlighter-rouge">"warning"</code>. On Windows,    question    displays the same icon as    info   , unless you set an icon using the    icon    option.</li>\n<li><code class="highlighter-rouge">buttons</code> String[] (optional) - Array of texts for buttons. On Windows, an empty array will result in one button labeled    OK   .</li>\n<li><code class="highlighter-rouge">defaultId</code> Integer (optional) - Index of the button in the buttons array which will be selected by default when the message box opens.</li>\n<li><code class="highlighter-rouge">title</code> String (optional) - Title of the message box, some platforms will not show it.</li>\n<li><code class="highlighter-rouge">message</code> String - Content of the message box.</li>\n<li><code class="highlighter-rouge">detail</code> String (optional) - Extra information of the message.</li>\n<li><code class="highlighter-rouge">icon</code> NativeImage (optional)</li>\n<li><code class="highlighter-rouge">cancelId</code> Integer (optional) - The value will be returned when user cancels the dialog instead of clicking the buttons of the dialog. By default it is the index of the buttons that have    cancel    or    no    as label, or 0 if there is no such buttons. On macOS and Windows the index of the    Cancel    button will always be used as <code class="highlighter-rouge">cancelId</code> even if it is specified.</li>\n<li><code class="highlighter-rouge">noLink</code> Boolean (optional) - On Windows Electron will try to figure out which one of the <code class="highlighter-rouge">buttons</code> are common buttons (like    Cancel    or    Yes   ), and show the others as command links in the dialog. This can make the dialog appear in the style of modern Windows apps. If you don   t like this behavior, you can set <code class="highlighter-rouge">noLink</code> to <code class="highlighter-rouge">true</code>.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">response</code> Number - The index of the button that was clicked</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">type</code> String (optional) - Can be <code class="highlighter-rouge">"none"</code>, <code class="highlighter-rouge">"info"</code>, <code class="highlighter-rouge">"error"</code>, <code class="highlighter-rouge">"question"</code> or <code class="highlighter-rouge">"warning"</code>. On Windows,    question    displays the same icon as    info   , unless you set an icon using the    icon    option.</li>\n<li><code class="highlighter-rouge">buttons</code> String[] (optional) - Array of texts for buttons. On Windows, an empty array will result in one button labeled    OK   .</li>\n<li><code class="highlighter-rouge">defaultId</code> Integer (optional) - Index of the button in the buttons array which will be selected by default when the message box opens.</li>\n<li><code class="highlighter-rouge">title</code> String (optional) - Title of the message box, some platforms will not show it.</li>\n<li><code class="highlighter-rouge">message</code> String - Content of the message box.</li>\n<li><code class="highlighter-rouge">detail</code> String (optional) - Extra information of the message.</li>\n<li><code class="highlighter-rouge">icon</code> NativeImage (optional)</li>\n<li><code class="highlighter-rouge">cancelId</code> Integer (optional) - The value will be returned when user cancels the dialog instead of clicking the buttons of the dialog. By default it is the index of the buttons that have    cancel    or    no    as label, or 0 if there is no such buttons. On macOS and Windows the index of the    Cancel    button will always be used as <code class="highlighter-rouge">cancelId</code> even if it is specified.</li>\n<li><code class="highlighter-rouge">noLink</code> Boolean (optional) - On Windows Electron will try to figure out which one of the <code class="highlighter-rouge">buttons</code> are common buttons (like    Cancel    or    Yes   ), and show the others as command links in the dialog. This can make the dialog appear in the style of modern Windows apps. If you don   t like this behavior, you can set <code class="highlighter-rouge">noLink</code> to <code class="highlighter-rouge">true</code>.</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">response</code> Number - The index of the button that was clicked</li>\n</ul><p>Returns <code class="highlighter-rouge">Integer</code>, the index of the clicked button, if a callback is provided it returns undefined.</p><p>Shows a message box, it will block the process until the message box is closed. It returns the index of the clicked button.</p><p>The <code class="highlighter-rouge">browserWindow</code> argument allows the dialog to attach itself to a parent window, making it modal.</p><p>If a <code class="highlighter-rouge">callback</code> is passed, the API call will be asynchronous and the result will be passed via <code class="highlighter-rouge">callback(response)</code>.</p></section>	http://electron.atom.io/docs/api/dialog/#dialogshowmessageboxbrowserwindow-options-callback
dialog.showOpenDialog	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">browserWindow</code> BrowserWindow (optional)</li>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">title</code> String (optional)</li>\n<li><code class="highlighter-rouge">defaultPath</code> String (optional)</li>\n<li><code class="highlighter-rouge">buttonLabel</code> String (optional) - Custom label for the confirmation button, when left empty the default label will be used.</li>\n<li><code class="highlighter-rouge">filters</code> FileFilter[] (optional)</li>\n<li><code class="highlighter-rouge">properties</code> String[] (optional) - Contains which features the dialog should use. The following values are supported:\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">openFile</code> - Allow files to be selected.</li>\n<li><code class="highlighter-rouge">openDirectory</code> - Allow directories to be selected.</li>\n<li><code class="highlighter-rouge">multiSelections</code> - Allow multiple paths to be selected.</li>\n<li><code class="highlighter-rouge">showHiddenFiles</code> - Show hidden files in dialog.</li>\n<li><code class="highlighter-rouge">createDirectory</code> <em>macOS</em> - Allow creating new directories from dialog.</li>\n<li><code class="highlighter-rouge">promptToCreate</code> <em>Windows</em> - Prompt for creation if the file path entered in the dialog does not exist. This does not actually create the file at the path but allows non-existent paths to be returned that should be created by the application.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">normalizeAccessKeys</code> Boolean (optional) - Normalize the keyboard access keys across platforms. Default is <code class="highlighter-rouge">false</code>. Enabling this assumes <code class="highlighter-rouge">&amp;</code> is used in the button labels for the placement of the keyboard shortcut access key and labels will be converted so they work correctly on each platform, <code class="highlighter-rouge">&amp;</code> characters are removed on macOS, converted to <code class="highlighter-rouge">_</code> on Linux, and left untouched on Windows. For example, a button label of <code class="highlighter-rouge">Vie&amp;w</code> will be converted to <code class="highlighter-rouge">Vie_w</code> on Linux and <code class="highlighter-rouge">View</code> on macOS and can be selected via <code class="highlighter-rouge">Alt-W</code> on Windows and Linux.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">filePaths</code> String[] - An array of file paths chosen by the user</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">title</code> String (optional)</li>\n<li><code class="highlighter-rouge">defaultPath</code> String (optional)</li>\n<li><code class="highlighter-rouge">buttonLabel</code> String (optional) - Custom label for the confirmation button, when left empty the default label will be used.</li>\n<li><code class="highlighter-rouge">filters</code> FileFilter[] (optional)</li>\n<li><code class="highlighter-rouge">properties</code> String[] (optional) - Contains which features the dialog should use. The following values are supported:\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">openFile</code> - Allow files to be selected.</li>\n<li><code class="highlighter-rouge">openDirectory</code> - Allow directories to be selected.</li>\n<li><code class="highlighter-rouge">multiSelections</code> - Allow multiple paths to be selected.</li>\n<li><code class="highlighter-rouge">showHiddenFiles</code> - Show hidden files in dialog.</li>\n<li><code class="highlighter-rouge">createDirectory</code> <em>macOS</em> - Allow creating new directories from dialog.</li>\n<li><code class="highlighter-rouge">promptToCreate</code> <em>Windows</em> - Prompt for creation if the file path entered in the dialog does not exist. This does not actually create the file at the path but allows non-existent paths to be returned that should be created by the application.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">normalizeAccessKeys</code> Boolean (optional) - Normalize the keyboard access keys across platforms. Default is <code class="highlighter-rouge">false</code>. Enabling this assumes <code class="highlighter-rouge">&amp;</code> is used in the button labels for the placement of the keyboard shortcut access key and labels will be converted so they work correctly on each platform, <code class="highlighter-rouge">&amp;</code> characters are removed on macOS, converted to <code class="highlighter-rouge">_</code> on Linux, and left untouched on Windows. For example, a button label of <code class="highlighter-rouge">Vie&amp;w</code> will be converted to <code class="highlighter-rouge">Vie_w</code> on Linux and <code class="highlighter-rouge">View</code> on macOS and can be selected via <code class="highlighter-rouge">Alt-W</code> on Windows and Linux.</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">openFile</code> - Allow files to be selected.</li>\n<li><code class="highlighter-rouge">openDirectory</code> - Allow directories to be selected.</li>\n<li><code class="highlighter-rouge">multiSelections</code> - Allow multiple paths to be selected.</li>\n<li><code class="highlighter-rouge">showHiddenFiles</code> - Show hidden files in dialog.</li>\n<li><code class="highlighter-rouge">createDirectory</code> <em>macOS</em> - Allow creating new directories from dialog.</li>\n<li><code class="highlighter-rouge">promptToCreate</code> <em>Windows</em> - Prompt for creation if the file path entered in the dialog does not exist. This does not actually create the file at the path but allows non-existent paths to be returned that should be created by the application.</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">filePaths</code> String[] - An array of file paths chosen by the user</li>\n</ul><p>Returns <code class="highlighter-rouge">String[]</code>, an array of file paths chosen by the user, if the callback is provided it returns <code class="highlighter-rouge">undefined</code>.</p><p>The <code class="highlighter-rouge">browserWindow</code> argument allows the dialog to attach itself to a parent window, making it modal.</p><p>The <code class="highlighter-rouge">filters</code> specifies an array of file types that can be displayed or selected when you want to limit the user to a specific type. For example:</p><pre><code>{\n  filters: [\n    {name: 'Images', extensions: ['jpg', 'png', 'gif']},\n    {name: 'Movies', extensions: ['mkv', 'avi', 'mp4']},\n    {name: 'Custom File Type', extensions: ['as']},\n    {name: 'All Files', extensions: ['*']}\n  ]\n}\n\n</code></pre><p>The <code class="highlighter-rouge">extensions</code> array should contain extensions without wildcards or dots (e.g. <code class="highlighter-rouge">'png'</code> is good but <code class="highlighter-rouge">'.png'</code> and <code class="highlighter-rouge">'*.png'</code> are bad). To show all files, use the <code class="highlighter-rouge">'*'</code> wildcard (no other wildcard is supported).</p><p>If a <code class="highlighter-rouge">callback</code> is passed, the API call will be asynchronous and the result will be passed via <code class="highlighter-rouge">callback(filenames)</code></p><p><strong>Note:</strong> On Windows and Linux an open dialog can not be both a file selector and a directory selector, so if you set <code class="highlighter-rouge">properties</code> to <code class="highlighter-rouge">['openFile', 'openDirectory']</code> on these platforms, a directory selector will be shown.</p></section>	http://electron.atom.io/docs/api/dialog/#dialogshowopendialogbrowserwindow-options-callback
dialog.showSaveDialog	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">browserWindow</code> BrowserWindow (optional)</li>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">title</code> String (optional)</li>\n<li><code class="highlighter-rouge">defaultPath</code> String (optional)</li>\n<li><code class="highlighter-rouge">buttonLabel</code> String (optional) - Custom label for the confirmation button, when left empty the default label will be used.</li>\n<li><code class="highlighter-rouge">filters</code> FileFilter[] (optional)</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">filename</code> String</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">title</code> String (optional)</li>\n<li><code class="highlighter-rouge">defaultPath</code> String (optional)</li>\n<li><code class="highlighter-rouge">buttonLabel</code> String (optional) - Custom label for the confirmation button, when left empty the default label will be used.</li>\n<li><code class="highlighter-rouge">filters</code> FileFilter[] (optional)</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">filename</code> String</li>\n</ul><p>Returns <code class="highlighter-rouge">String</code>, the path of the file chosen by the user, if a callback is provided it returns <code class="highlighter-rouge">undefined</code>.</p><p>The <code class="highlighter-rouge">browserWindow</code> argument allows the dialog to attach itself to a parent window, making it modal.</p><p>The <code class="highlighter-rouge">filters</code> specifies an array of file types that can be displayed, see <code class="highlighter-rouge">dialog.showOpenDialog</code> for an example.</p><p>If a <code class="highlighter-rouge">callback</code> is passed, the API call will be asynchronous and the result will be passed via <code class="highlighter-rouge">callback(filename)</code></p></section>	http://electron.atom.io/docs/api/dialog/#dialogshowsavedialogbrowserwindow-options-callback
download item	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/download-item
downloadItem.canResume	A										<section class="prog__container"><p>Resumes <code class="highlighter-rouge">Boolean</code> - Whether the download can resume.</p></section>	http://electron.atom.io/docs/api/download-item/#downloaditemcanresume
downloadItem.cancel	A										<section class="prog__container"><p>Cancels the download operation.</p></section>	http://electron.atom.io/docs/api/download-item/#downloaditemcancel
downloadItem.getContentDisposition	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The Content-Disposition field from the response header.</p></section>	http://electron.atom.io/docs/api/download-item/#downloaditemgetcontentdisposition
downloadItem.getETag	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - ETag header value.</p></section>	http://electron.atom.io/docs/api/download-item/#downloaditemgetetag
downloadItem.getFilename	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The file name of the download item.</p><p><strong>Note:</strong> The file name is not always the same as the actual one saved in local disk. If user changes the file name in a prompted download saving dialog, the actual name of saved file will be different.</p></section>	http://electron.atom.io/docs/api/download-item/#downloaditemgetfilename
downloadItem.getLastModifiedTime	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - Last-Modified header value.</p></section>	http://electron.atom.io/docs/api/download-item/#downloaditemgetlastmodifiedtime
downloadItem.getMimeType	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The files mime type.</p></section>	http://electron.atom.io/docs/api/download-item/#downloaditemgetmimetype
downloadItem.getReceivedBytes	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Integer</code> - The received bytes of the download item.</p></section>	http://electron.atom.io/docs/api/download-item/#downloaditemgetreceivedbytes
downloadItem.getSavePath	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The save path of the download item. This will be either the path set via <code class="highlighter-rouge">downloadItem.setSavePath(path)</code> or the path selected from the shown save dialog.</p></section>	http://electron.atom.io/docs/api/download-item/#downloaditemgetsavepath
downloadItem.getState	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The current state. Can be <code class="highlighter-rouge">progressing</code>, <code class="highlighter-rouge">completed</code>, <code class="highlighter-rouge">cancelled</code> or <code class="highlighter-rouge">interrupted</code>.</p><p><strong>Note:</strong> The following methods are useful specifically to resume a <code class="highlighter-rouge">cancelled</code> item when session is restarted.</p></section>	http://electron.atom.io/docs/api/download-item/#downloaditemgetstate
downloadItem.getTotalBytes	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Integer</code> - The total size in bytes of the download item.</p><p>If the size is unknown, it returns 0.</p></section>	http://electron.atom.io/docs/api/download-item/#downloaditemgettotalbytes
downloadItem.getURL	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The origin url where the item is downloaded from.</p></section>	http://electron.atom.io/docs/api/download-item/#downloaditemgeturl
downloadItem.getURLChain	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String[]</code> - The complete url chain of the item including any redirects.</p></section>	http://electron.atom.io/docs/api/download-item/#downloaditemgeturlchain
downloadItem.hasUserGesture	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the download has user gesture.</p></section>	http://electron.atom.io/docs/api/download-item/#downloaditemhasusergesture
downloadItem.isPaused	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the download is paused.</p></section>	http://electron.atom.io/docs/api/download-item/#downloaditemispaused
downloadItem.pause	A										<section class="prog__container"><p>Pauses the download.</p></section>	http://electron.atom.io/docs/api/download-item/#downloaditempause
downloadItem.resume	A										<section class="prog__container"><p>Resumes the download that has been paused.</p></section>	http://electron.atom.io/docs/api/download-item/#downloaditemresume
downloadItem.setSavePath	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">path</code> String - Set the save file path of the download item.</li>\n</ul><p>The API is only available in session   s <code class="highlighter-rouge">will-download</code> callback function. If user doesn   t set the save path via the API, Electron will use the original routine to determine the save path(Usually prompts a save dialog).</p></section>	http://electron.atom.io/docs/api/download-item/#downloaditemsetsavepathpath
environment variables	A										<section class="prog__container"><p>Control application configuration and behavior without changing code.</p><p>Certain Electron behaviors are controlled by environment variables because they are initialized earlier than the command line flags and the app s code.</p><p>POSIX shell example:</p><pre><code>$ export ELECTRON_ENABLE_LOGGING=true\n$ electron\n\n</code></pre><p>Windows console example:</p><pre><code>> set ELECTRON_ENABLE_LOGGING=true\n> electron\n\n</code></pre></section>	http://electron.atom.io/docs/api/environment-variables
event.returnValue	A										<section class="prog__container"><p>Set this to the value to be returned in a synchronous message.</p></section>	http://electron.atom.io/docs/api/ipc-main/#eventreturnvalue
file object	A										<section class="prog__container"><p>Use the HTML5 <code class="highlighter-rouge">File</code> API to work natively with files on the filesystem.</p><p>The DOM s File interface provides abstraction around native files in order to let users work on native files directly with the HTML5 file API. Electron has added a <code class="highlighter-rouge">path</code> attribute to the <code class="highlighter-rouge">File</code> interface which exposes the file s real path on filesystem.</p><p>Example of getting a real path from a dragged-onto-the-app file:</p><pre><code><div id="holder">\n  Drag your file here\n</div>\n\n<script>\n  const holder = document.getElementById('holder')\n  holder.ondragover = () => {\n    return false;\n  }\n  holder.ondragleave = holder.ondragend = () => {\n    return false;\n  }\n  holder.ondrop = (e) => {\n    e.preventDefault()\n    for (let f of e.dataTransfer.files) {\n      console.log('File(s) you dragged here: ', f.path)\n    }\n    return false;\n  }\n</script>\n\n</code></pre></section>	http://electron.atom.io/docs/api/file-object
frameless window	A										<section class="prog__container"><p>Open a window without toolbars, borders, or other graphical    chrome   .</p><p>A frameless window is a window that has no BrowserWindow</code> class.</p></section>	http://electron.atom.io/docs/api/frameless-window
global shortcut	A										<section class="prog__container"><p>Detect keyboard events when the application does not have keyboard focus.</p><p>Process: Main</p><p>The <code class="highlighter-rouge">globalShortcut</code> module can register/unregister a global keyboard shortcut with the operating system so that you can customize the operations for various shortcuts.</p><p><strong>Note:</strong> The shortcut is global; it will work even if the app does not have the keyboard focus. You should not use this module until the <code class="highlighter-rouge">ready</code> event of the app module is emitted.</p><pre><code>const {app, globalShortcut} = require('electron')\n\napp.on('ready', () => {\n  // Register a 'CommandOrControl+X' shortcut listener.\n  const ret = globalShortcut.register('CommandOrControl+X', () => {\n    console.log('CommandOrControl+X is pressed')\n  })\n\n  if (!ret) {\n    console.log('registration failed')\n  }\n\n  // Check whether a shortcut is registered.\n  console.log(globalShortcut.isRegistered('CommandOrControl+X'))\n})\n\napp.on('will-quit', () => {\n  // Unregister a shortcut.\n  globalShortcut.unregister('CommandOrControl+X')\n\n  // Unregister all shortcuts.\n  globalShortcut.unregisterAll()\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/global-shortcut
globalShortcut.isRegistered	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">accelerator</code> Accelerator</li>\n</ul><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether this application has registered <code class="highlighter-rouge">accelerator</code>.</p><p>When the accelerator is already taken by other applications, this call will still return <code class="highlighter-rouge">false</code>. This behavior is intended by operating systems, since they don   t want applications to fight for global shortcuts.</p></section>	http://electron.atom.io/docs/api/global-shortcut/#globalshortcutisregisteredaccelerator
globalShortcut.register	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">accelerator</code> Accelerator</li>\n<li><code class="highlighter-rouge">callback</code> Function</li>\n</ul><p>Registers a global shortcut of <code class="highlighter-rouge">accelerator</code>. The <code class="highlighter-rouge">callback</code> is called when the registered shortcut is pressed by the user.</p><p>When the accelerator is already taken by other applications, this call will silently fail. This behavior is intended by operating systems, since they don   t want applications to fight for global shortcuts.</p></section>	http://electron.atom.io/docs/api/global-shortcut/#globalshortcutregisteraccelerator-callback
globalShortcut.unregister	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">accelerator</code> Accelerator</li>\n</ul><p>Unregisters the global shortcut of <code class="highlighter-rouge">accelerator</code>.</p></section>	http://electron.atom.io/docs/api/global-shortcut/#globalshortcutunregisteraccelerator
image.crop	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">rect</code> Object - The area of the image to crop\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul><p>Returns <code class="highlighter-rouge">NativeImage</code> - The cropped image.</p></section>	http://electron.atom.io/docs/api/native-image/#imagecroprect
image.getBitmap	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Buffer</code> - A Buffer that contains the image   s raw bitmap pixel data.</p><p>The difference between <code class="highlighter-rouge">getBitmap()</code> and <code class="highlighter-rouge">toBitmap()</code> is, <code class="highlighter-rouge">getBitmap()</code> does not copy the bitmap data, so you have to use the returned Buffer immediately in current event loop tick, otherwise the data might be changed or destroyed.</p></section>	http://electron.atom.io/docs/api/native-image/#imagegetbitmap
image.getNativeHandle 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/native-image/#imagegetnativehandle-macos
image.getSize	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Object</code>:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul></section>	http://electron.atom.io/docs/api/native-image/#imagegetsize
image.isEmpty	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the image is empty.</p></section>	http://electron.atom.io/docs/api/native-image/#imageisempty
image.isTemplateImage	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the image is a template image.</p></section>	http://electron.atom.io/docs/api/native-image/#imageistemplateimage
image.resize	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">options</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer (optional)</li>\n<li><code class="highlighter-rouge">height</code> Integer (optional)</li>\n<li><code class="highlighter-rouge">quality</code> String (optional) - The desired quality of the resize image. Possible values are <code class="highlighter-rouge">good</code>, <code class="highlighter-rouge">better</code> or <code class="highlighter-rouge">best</code>. The default is <code class="highlighter-rouge">best</code>. These values express a desired quality/speed tradeoff. They are translated into an algorithm-specific method that depends on the capabilities (CPU, GPU) of the underlying platform. It is possible for all three methods to be mapped to the same algorithm on a given platform.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer (optional)</li>\n<li><code class="highlighter-rouge">height</code> Integer (optional)</li>\n<li><code class="highlighter-rouge">quality</code> String (optional) - The desired quality of the resize image. Possible values are <code class="highlighter-rouge">good</code>, <code class="highlighter-rouge">better</code> or <code class="highlighter-rouge">best</code>. The default is <code class="highlighter-rouge">best</code>. These values express a desired quality/speed tradeoff. They are translated into an algorithm-specific method that depends on the capabilities (CPU, GPU) of the underlying platform. It is possible for all three methods to be mapped to the same algorithm on a given platform.</li>\n</ul><p>Returns <code class="highlighter-rouge">NativeImage</code> - The resized image.</p><p>If only the <code class="highlighter-rouge">height</code> or the <code class="highlighter-rouge">width</code> are specified then the current aspect ratio will be preserved in the resized image.</p></section>	http://electron.atom.io/docs/api/native-image/#imageresizeoptions
image.setTemplateImage	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">option</code> Boolean</li>\n</ul><p>Marks the image as a template image.</p></section>	http://electron.atom.io/docs/api/native-image/#imagesettemplateimageoption
image.toBitmap	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Buffer</code> - A Buffer that contains a copy of the image   s raw bitmap pixel data.</p></section>	http://electron.atom.io/docs/api/native-image/#imagetobitmap
image.toDataURL	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The data URL of the image.</p></section>	http://electron.atom.io/docs/api/native-image/#imagetodataurl
image.toJPEG	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">quality</code> Integer (<strong>required</strong>) - Between 0 - 100.</li>\n</ul><p>Returns <code class="highlighter-rouge">Buffer</code> - A JPEG</code> encoded data.</p></section>	http://electron.atom.io/docs/api/native-image/#imagetojpegquality
image.toPNG	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Buffer</code> - A PNG</code> encoded data.</p></section>	http://electron.atom.io/docs/api/native-image/#imagetopng
incoming message	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/incoming-message
ipc main	A										<section class="prog__container"><p>Communicate asynchronously from the main process to renderer processes.</p><p>Process: Main</p><p>The <code class="highlighter-rouge">ipcMain</code> module is an instance of the EventEmitter class. When used in the main process, it handles asynchronous and synchronous messages sent from a renderer process (web page). Messages sent from a renderer will be emitted to this module.</p></section>	http://electron.atom.io/docs/api/ipc-main
ipc renderer	A										<section class="prog__container"><p>Communicate asynchronously from a renderer process to the main process.</p><p>Process: Renderer</p><p>The <code class="highlighter-rouge">ipcRenderer</code> module is an instance of the EventEmitter class. It provides a few methods so you can send synchronous and asynchronous messages from the render process (web page) to the main process. You can also receive replies from the main process.</p><p>See ipcMain for code examples.</p></section>	http://electron.atom.io/docs/api/ipc-renderer
ipcMain.on	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">listener</code> Function</li>\n</ul><p>Listens to <code class="highlighter-rouge">channel</code>, when a new message arrives <code class="highlighter-rouge">listener</code> would be called with <code class="highlighter-rouge">listener(event, args...)</code>.</p></section>	http://electron.atom.io/docs/api/ipc-main/#ipcmainonchannel-listener
ipcMain.once	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">listener</code> Function</li>\n</ul><p>Adds a one time <code class="highlighter-rouge">listener</code> function for the event. This <code class="highlighter-rouge">listener</code> is invoked only the next time a message is sent to <code class="highlighter-rouge">channel</code>, after which it is removed.</p></section>	http://electron.atom.io/docs/api/ipc-main/#ipcmainoncechannel-listener
ipcMain.removeAllListeners	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">channel</code> String (optional)</li>\n</ul><p>Removes all listeners, or those of the specified <code class="highlighter-rouge">channel</code>.</p><p>The <code class="highlighter-rouge">event</code> object passed to the <code class="highlighter-rouge">callback</code> has the following methods:</p></section>	http://electron.atom.io/docs/api/ipc-main/#ipcmainremovealllistenerschannel
ipcMain.removeListener	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">listener</code> Function</li>\n</ul><p>Removes the specified <code class="highlighter-rouge">listener</code> from the listener array for the specified <code class="highlighter-rouge">channel</code>.</p></section>	http://electron.atom.io/docs/api/ipc-main/#ipcmainremovelistenerchannel-listener
ipcRenderer.on	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">listener</code> Function</li>\n</ul><p>Listens to <code class="highlighter-rouge">channel</code>, when a new message arrives <code class="highlighter-rouge">listener</code> would be called with <code class="highlighter-rouge">listener(event, args...)</code>.</p></section>	http://electron.atom.io/docs/api/ipc-renderer/#ipcrendereronchannel-listener
ipcRenderer.once	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">listener</code> Function</li>\n</ul><p>Adds a one time <code class="highlighter-rouge">listener</code> function for the event. This <code class="highlighter-rouge">listener</code> is invoked only the next time a message is sent to <code class="highlighter-rouge">channel</code>, after which it is removed.</p></section>	http://electron.atom.io/docs/api/ipc-renderer/#ipcrendereroncechannel-listener
ipcRenderer.removeAllListeners	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">channel</code> String (optional)</li>\n</ul><p>Removes all listeners, or those of the specified <code class="highlighter-rouge">channel</code>.</p></section>	http://electron.atom.io/docs/api/ipc-renderer/#ipcrendererremovealllistenerschannel
ipcRenderer.removeListener	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">listener</code> Function</li>\n</ul><p>Removes the specified <code class="highlighter-rouge">listener</code> from the listener array for the specified <code class="highlighter-rouge">channel</code>.</p></section>	http://electron.atom.io/docs/api/ipc-renderer/#ipcrendererremovelistenerchannel-listener
ipcRenderer.send	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">...args</code> any[]</li>\n</ul><p>Send a message to the main process asynchronously via <code class="highlighter-rouge">channel</code>, you can also send arbitrary arguments. Arguments will be serialized in JSON internally and hence no functions or prototype chain will be included.</p><p>The main process handles it by listening for <code class="highlighter-rouge">channel</code> with <code class="highlighter-rouge">ipcMain</code> module.</p></section>	http://electron.atom.io/docs/api/ipc-renderer/#ipcrenderersendchannel-arg1-arg2-
ipcRenderer.sendSync	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">...args</code> any[]</li>\n</ul><p>Send a message to the main process synchronously via <code class="highlighter-rouge">channel</code>, you can also send arbitrary arguments. Arguments will be serialized in JSON internally and hence no functions or prototype chain will be included.</p><p>The main process handles it by listening for <code class="highlighter-rouge">channel</code> with <code class="highlighter-rouge">ipcMain</code> module, and replies by setting <code class="highlighter-rouge">event.returnValue</code>.</p><p><strong>Note:</strong> Sending a synchronous message will block the whole renderer process, unless you know what you are doing you should never use it.</p></section>	http://electron.atom.io/docs/api/ipc-renderer/#ipcrenderersendsyncchannel-arg1-arg2-
locales	A										<section class="prog__container"><p>Locale values returned by <code class="highlighter-rouge">app.getLocale()</code>.</p><p>Electron uses Chromium   s <code class="highlighter-rouge">l10n_util</code> library to fetch the locale. Possible values are listed below:</p></section>	http://electron.atom.io/docs/api/locales
menu	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/menu
menu item	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/menu-item
menu.append	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">menuItem</code> MenuItem</li>\n</ul><p>Appends the <code class="highlighter-rouge">menuItem</code> to the menu.</p></section>	http://electron.atom.io/docs/api/menu/#menuappendmenuitem
menu.insert	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">pos</code> Integer</li>\n<li><code class="highlighter-rouge">menuItem</code> MenuItem</li>\n</ul><p>Inserts the <code class="highlighter-rouge">menuItem</code> to the <code class="highlighter-rouge">pos</code> position of the menu.</p></section>	http://electron.atom.io/docs/api/menu/#menuinsertpos-menuitem
menu.items	A										<section class="prog__container"><p>A MenuItem[] array containing the menu   s items.</p><p>Each <code class="highlighter-rouge">Menu</code> consists of multiple MenuItem</code> can have a submenu.</p><p>The <code class="highlighter-rouge">Menu</code> class is only available in the main process, but you can also use it in the render process via the remote</code> module.</p></section>	http://electron.atom.io/docs/api/menu/#menuitems
menu.popup	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">browserWindow</code> BrowserWindow (optional) - Default is <code class="highlighter-rouge">BrowserWindow.getFocusedWindow()</code>.</li>\n<li><code class="highlighter-rouge">x</code> Number (optional) - Default is the current mouse cursor position.</li>\n<li><code class="highlighter-rouge">y</code> Number (<strong>required</strong> if <code class="highlighter-rouge">x</code> is used) - Default is the current mouse cursor position.</li>\n<li><code class="highlighter-rouge">positioningItem</code> Number (optional) <em>macOS</em> - The index of the menu item to be positioned under the mouse cursor at the specified coordinates. Default is -1.</li>\n</ul><p>Pops up this menu as a context menu in the <code class="highlighter-rouge">browserWindow</code>.</p></section>	http://electron.atom.io/docs/api/menu/#menupopupbrowserwindow-x-y-positioningitem
native image	A										<section class="prog__container"><p>Create tray, dock, and application icons using PNG or JPG files.</p><p>Process: Renderer</p><p>In Electron, for the APIs that take images, you can pass either file paths or <code class="highlighter-rouge">NativeImage</code> instances. An empty image will be used when <code class="highlighter-rouge">null</code> is passed.</p><p>For example, when creating a tray or setting a window s icon, you can pass an image file path as a <code class="highlighter-rouge">String</code>:</p><pre><code>const {BrowserWindow, Tray} = require('electron')\n\nconst appIcon = new Tray('/Users/somebody/images/icon.png')\nlet win = new BrowserWindow({icon: '/Users/somebody/images/window.png'})\nconsole.log(appIcon, win)\n\n</code></pre><p>Or read the image from the clipboard which returns a <code class="highlighter-rouge">NativeImage</code>:</p><pre><code>const {clipboard, Tray} = require('electron')\nconst image = clipboard.readImage()\nconst appIcon = new Tray(image)\nconsole.log(appIcon)\n\n</code></pre></section>	http://electron.atom.io/docs/api/native-image
nativeImage.createEmpty	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">NativeImage</code></p><p>Creates an empty <code class="highlighter-rouge">NativeImage</code> instance.</p></section>	http://electron.atom.io/docs/api/native-image/#nativeimagecreateempty
nativeImage.createFromBuffer	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">buffer</code> Buffer</li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer (optional) - Required for bitmap buffers.</li>\n<li><code class="highlighter-rouge">height</code> Integer (optional) - Required for bitmap buffers.</li>\n<li><code class="highlighter-rouge">scaleFactor</code> Double (optional) - Defaults to 1.0.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer (optional) - Required for bitmap buffers.</li>\n<li><code class="highlighter-rouge">height</code> Integer (optional) - Required for bitmap buffers.</li>\n<li><code class="highlighter-rouge">scaleFactor</code> Double (optional) - Defaults to 1.0.</li>\n</ul><p>Returns <code class="highlighter-rouge">NativeImage</code></p><p>Creates a new <code class="highlighter-rouge">NativeImage</code> instance from <code class="highlighter-rouge">buffer</code>.</p></section>	http://electron.atom.io/docs/api/native-image/#nativeimagecreatefrombufferbuffer-options
nativeImage.createFromDataURL	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">dataURL</code> String</li>\n</ul><p>Creates a new <code class="highlighter-rouge">NativeImage</code> instance from <code class="highlighter-rouge">dataURL</code>.</p><p>Natively wrap images such as tray, dock, and application icons.</p><p>Process: Renderer</p></section>	http://electron.atom.io/docs/api/native-image/#nativeimagecreatefromdataurldataurl
nativeImage.createFromPath	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">path</code> String</li>\n</ul><p>Returns <code class="highlighter-rouge">NativeImage</code></p><p>Creates a new <code class="highlighter-rouge">NativeImage</code> instance from a file located at <code class="highlighter-rouge">path</code>. This method returns an empty image if the <code class="highlighter-rouge">path</code> does not exist, cannot be read, or is not a valid image.</p><pre><code>const nativeImage = require('electron').nativeImage\n\nlet image = nativeImage.createFromPath('/Users/somebody/images/icon.png')\nconsole.log(image)\n\n</code></pre></section>	http://electron.atom.io/docs/api/native-image/#nativeimagecreatefrompathpath
navigator	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/Navigator/#navigator
net	A										<section class="prog__container"><p>Issue HTTP/HTTPS requests using Chromium s native networking library</p><p>Process: Main</p><p>The <code class="highlighter-rouge">net</code> module is a client-side API for issuing HTTP(S) requests. It is similar to the HTTPS modules of Node.js but uses Chromium s native networking library instead of the Node.js implementation, offering better support for web proxies.</p><p>The following is a non-exhaustive list of why you may consider using the <code class="highlighter-rouge">net</code> module instead of the native Node.js modules:</p><ul class="prog__ul">\n<li>Automatic management of system proxy configuration, support of the wpad protocol and proxy pac configuration files.</li>\n<li>Automatic tunneling of HTTPS requests.</li>\n<li>Support for authenticating proxies using basic, digest, NTLM, Kerberos or negotiate authentication schemes.</li>\n<li>Support for traffic monitoring proxies: Fiddler-like proxies used for access control and monitoring.</li>\n</ul><p>The <code class="highlighter-rouge">net</code> module API has been specifically designed to mimic, as closely as possible, the familiar Node.js API. The API components including classes, methods, properties and event names are similar to those commonly used in Node.js.</p><p>For instance, the following example quickly shows how the <code class="highlighter-rouge">net</code> API might be used:</p><pre><code>const {app} = require('electron')\napp.on('ready', () => {\n  const {net} = require('electron')\n  const request = net.request('https://github.com')\n  request.on('response', (response) => {\n    console.log(`STATUS: ${response.statusCode}`)\n    console.log(`HEADERS: ${JSON.stringify(response.headers)}`)\n    response.on('data', (chunk) => {\n      console.log(`BODY: ${chunk}`)\n    })\n    response.on('end', () => {\n      console.log('No more data in response.')\n    })\n  })\n  request.end()\n})\n\n</code></pre><p>By the way, it is almost identical to how you would normally use the HTTPS modules of Node.js</p><p>The <code class="highlighter-rouge">net</code> API can be used only after the application emits the <code class="highlighter-rouge">ready</code> event. Trying to use the module before the <code class="highlighter-rouge">ready</code> event will throw an error.</p></section>	http://electron.atom.io/docs/api/net
power monitor	A										<section class="prog__container"><p>Monitor power state changes.</p><p>Process: Main</p><p>You cannot require or use this module until the <code class="highlighter-rouge">ready</code> event of the <code class="highlighter-rouge">app</code> module is emitted.</p><p>For example:</p><pre><code>const electron = require('electron')\nconst {app} = electron\n\napp.on('ready', () => {\n  electron.powerMonitor.on('suspend', () => {\n    console.log('The system is going to sleep')\n  })\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/power-monitor
power save blocker	A										<section class="prog__container"><p>Block the system from entering low-power (sleep) mode.</p><p>Process: Main</p><p>For example:</p><pre><code>const {powerSaveBlocker} = require('electron')\n\nconst id = powerSaveBlocker.start('prevent-display-sleep')\nconsole.log(powerSaveBlocker.isStarted(id))\n\npowerSaveBlocker.stop(id)\n\n</code></pre></section>	http://electron.atom.io/docs/api/power-save-blocker
powerSaveBlocker.start	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">type</code> String - Power save blocker type.\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">prevent-app-suspension</code> - Prevent the application from being suspended. Keeps system active but allows screen to be turned off. Example use cases: downloading a file or playing audio.</li>\n<li><code class="highlighter-rouge">prevent-display-sleep</code> - Prevent the display from going to sleep. Keeps system and screen active. Example use case: playing video.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">prevent-app-suspension</code> - Prevent the application from being suspended. Keeps system active but allows screen to be turned off. Example use cases: downloading a file or playing audio.</li>\n<li><code class="highlighter-rouge">prevent-display-sleep</code> - Prevent the display from going to sleep. Keeps system and screen active. Example use case: playing video.</li>\n</ul><p>Returns <code class="highlighter-rouge">Integer</code> - The blocker ID that is assigned to this power blocker</p><p>Starts preventing the system from entering lower-power mode. Returns an integer identifying the power save blocker.</p><p><strong>Note:</strong> <code class="highlighter-rouge">prevent-display-sleep</code> has higher precedence over <code class="highlighter-rouge">prevent-app-suspension</code>. Only the highest precedence type takes effect. In other words, <code class="highlighter-rouge">prevent-display-sleep</code> always takes precedence over <code class="highlighter-rouge">prevent-app-suspension</code>.</p><p>For example, an API calling A requests for <code class="highlighter-rouge">prevent-app-suspension</code>, and another calling B requests for <code class="highlighter-rouge">prevent-display-sleep</code>. <code class="highlighter-rouge">prevent-display-sleep</code> will be used until B stops its request. After that, <code class="highlighter-rouge">prevent-app-suspension</code> is used.</p></section>	http://electron.atom.io/docs/api/power-save-blocker/#powersaveblockerstarttype
powerSaveBlocker.stop	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> Integer - The power save blocker id returned by <code class="highlighter-rouge">powerSaveBlocker.start</code>.</li>\n</ul><p>Stops the specified power save blocker.</p></section>	http://electron.atom.io/docs/api/power-save-blocker/#powersaveblockerstopid
process	A										<section class="prog__container"><p>Extensions to process object.</p><p>Process: Renderer</p><p>Electron   s <code class="highlighter-rouge">process</code> object is extended from the process</code> object. It adds the following events, properties, and methods:</p></section>	http://electron.atom.io/docs/api/process
process.crash	A										<section class="prog__container"><p>Causes the main thread of the current process crash.</p></section>	http://electron.atom.io/docs/api/process/#processcrash
process.getProcessMemoryInfo	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Object</code>:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">workingSetSize</code> Integer - The amount of memory currently pinned to actual physical RAM.</li>\n<li><code class="highlighter-rouge">peakWorkingSetSize</code> Integer - The maximum amount of memory that has ever been pinned to actual physical RAM.</li>\n<li><code class="highlighter-rouge">privateBytes</code> Integer - The amount of memory not shared by other processes, such as JS heap or HTML content.</li>\n<li><code class="highlighter-rouge">sharedBytes</code> Integer - The amount of memory shared between processes, typically memory consumed by the Electron code itself</li>\n</ul><p>Returns an object giving memory usage statistics about the current process. Note that all statistics are reported in Kilobytes.</p></section>	http://electron.atom.io/docs/api/process/#processgetprocessmemoryinfo
process.hang	A										<section class="prog__container"><p>Causes the main thread of the current process hang.</p></section>	http://electron.atom.io/docs/api/process/#processhang
process.setFdLimit  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS Linux</p></section>	http://electron.atom.io/docs/api/process/#processsetfdlimitmaxdescriptors-macos-linux
protocol	A										<section class="prog__container"><p>Register a custom protocol and intercept existing protocol requests.</p><p>Process: Main</p><p>An example of implementing a protocol that has the same effect as the <code class="highlighter-rouge">file://</code> protocol:</p><pre><code>const {app, protocol} = require('electron')\nconst path = require('path')\n\napp.on('ready', () => {\n  protocol.registerFileProtocol('atom', (request, callback) => {\n    const url = request.url.substr(7)\n    callback({path: path.normalize(`${__dirname}/${url}`)})\n  }, (error) => {\n    if (error) console.error('Failed to register protocol')\n  })\n})\n\n</code></pre><p><strong>Note:</strong> All methods unless specified can only be used after the <code class="highlighter-rouge">ready</code> event of the <code class="highlighter-rouge">app</code> module gets emitted.</p></section>	http://electron.atom.io/docs/api/protocol
protocol.interceptBufferProtocol	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">handler</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">request</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">buffer</code> Buffer (optional)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">completion</code> Function (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">request</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">buffer</code> Buffer (optional)</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">buffer</code> Buffer (optional)</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul><p>Intercepts <code class="highlighter-rouge">scheme</code> protocol and uses <code class="highlighter-rouge">handler</code> as the protocol   s new handler which sends a <code class="highlighter-rouge">Buffer</code> as a response.</p></section>	http://electron.atom.io/docs/api/protocol/#protocolinterceptbufferprotocolscheme-handler-completion
protocol.interceptFileProtocol	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">handler</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">request</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">filePath</code> String</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">completion</code> Function (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">request</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">filePath</code> String</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">filePath</code> String</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul><p>Intercepts <code class="highlighter-rouge">scheme</code> protocol and uses <code class="highlighter-rouge">handler</code> as the protocol   s new handler which sends a file as a response.</p></section>	http://electron.atom.io/docs/api/protocol/#protocolinterceptfileprotocolscheme-handler-completion
protocol.interceptHttpProtocol	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">handler</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">request</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">redirectRequest</code> Object\n            <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">session</code> Object (optional)</li>\n<li><code class="highlighter-rouge">uploadData</code> Object (optional)\n                <ul class="prog__ul">\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">completion</code> Function (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">request</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">redirectRequest</code> Object\n            <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">session</code> Object (optional)</li>\n<li><code class="highlighter-rouge">uploadData</code> Object (optional)\n                <ul class="prog__ul">\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">redirectRequest</code> Object\n            <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">session</code> Object (optional)</li>\n<li><code class="highlighter-rouge">uploadData</code> Object (optional)\n                <ul class="prog__ul">\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">session</code> Object (optional)</li>\n<li><code class="highlighter-rouge">uploadData</code> Object (optional)\n                <ul class="prog__ul">\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul><p>Intercepts <code class="highlighter-rouge">scheme</code> protocol and uses <code class="highlighter-rouge">handler</code> as the protocol   s new handler which sends a new HTTP request as a response.</p></section>	http://electron.atom.io/docs/api/protocol/#protocolintercepthttpprotocolscheme-handler-completion
protocol.interceptStringProtocol	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">handler</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">request</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">data</code> String (optional)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">completion</code> Function (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">request</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">data</code> String (optional)</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">data</code> String (optional)</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul><p>Intercepts <code class="highlighter-rouge">scheme</code> protocol and uses <code class="highlighter-rouge">handler</code> as the protocol   s new handler which sends a <code class="highlighter-rouge">String</code> as a response.</p></section>	http://electron.atom.io/docs/api/protocol/#protocolinterceptstringprotocolscheme-handler-completion
protocol.isProtocolHandled	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul><p>The <code class="highlighter-rouge">callback</code> will be called with a boolean that indicates whether there is already a handler for <code class="highlighter-rouge">scheme</code>.</p></section>	http://electron.atom.io/docs/api/protocol/#protocolisprotocolhandledscheme-callback
protocol.registerBufferProtocol	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">handler</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">request</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">buffer</code> (Buffer | MimeTypedBuffer) (optional)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">completion</code> Function (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">request</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">buffer</code> (Buffer | MimeTypedBuffer) (optional)</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">buffer</code> (Buffer | MimeTypedBuffer) (optional)</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul><p>Registers a protocol of <code class="highlighter-rouge">scheme</code> that will send a <code class="highlighter-rouge">Buffer</code> as a response.</p><p>The usage is the same with <code class="highlighter-rouge">registerFileProtocol</code>, except that the <code class="highlighter-rouge">callback</code> should be called with either a <code class="highlighter-rouge">Buffer</code> object or an object that has the <code class="highlighter-rouge">data</code>, <code class="highlighter-rouge">mimeType</code>, and <code class="highlighter-rouge">charset</code> properties.</p><p>Example:</p><pre><code>const {protocol} = require('electron')\n\nprotocol.registerBufferProtocol('atom', (request, callback) => {\n  callback({mimeType: 'text/html', data: new Buffer('<h5>Response</h5>')})\n}, (error) => {\n  if (error) console.error('Failed to register protocol')\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/protocol/#protocolregisterbufferprotocolscheme-handler-completion
protocol.registerFileProtocol	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">handler</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">request</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">filePath</code> String (optional)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">completion</code> Function (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">request</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">filePath</code> String (optional)</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">filePath</code> String (optional)</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul><p>Registers a protocol of <code class="highlighter-rouge">scheme</code> that will send the file as a response. The <code class="highlighter-rouge">handler</code> will be called with <code class="highlighter-rouge">handler(request, callback)</code> when a <code class="highlighter-rouge">request</code> is going to be created with <code class="highlighter-rouge">scheme</code>. <code class="highlighter-rouge">completion</code> will be called with <code class="highlighter-rouge">completion(null)</code> when <code class="highlighter-rouge">scheme</code> is successfully registered or <code class="highlighter-rouge">completion(error)</code> when failed.</p><p>To handle the <code class="highlighter-rouge">request</code>, the <code class="highlighter-rouge">callback</code> should be called with either the file   s path or an object that has a <code class="highlighter-rouge">path</code> property, e.g. <code class="highlighter-rouge">callback(filePath)</code> or <code class="highlighter-rouge">callback({path: filePath})</code>.</p><p>When <code class="highlighter-rouge">callback</code> is called with nothing, a number, or an object that has an <code class="highlighter-rouge">error</code> property, the <code class="highlighter-rouge">request</code> will fail with the <code class="highlighter-rouge">error</code> number you specified. For the available error numbers you can use, please see the net error list.</p><p>By default the <code class="highlighter-rouge">scheme</code> is treated like <code class="highlighter-rouge">http:</code>, which is parsed differently than protocols that follow the    generic URI syntax    like <code class="highlighter-rouge">file:</code>, so you probably want to call <code class="highlighter-rouge">protocol.registerStandardSchemes</code> to have your scheme treated as a standard scheme.</p></section>	http://electron.atom.io/docs/api/protocol/#protocolregisterfileprotocolscheme-handler-completion
protocol.registerHttpProtocol	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">handler</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">request</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">redirectRequest</code> Object\n            <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">session</code> Object (optional)</li>\n<li><code class="highlighter-rouge">uploadData</code> Object (optional)\n                <ul class="prog__ul">\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">completion</code> Function (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">request</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">redirectRequest</code> Object\n            <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">session</code> Object (optional)</li>\n<li><code class="highlighter-rouge">uploadData</code> Object (optional)\n                <ul class="prog__ul">\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">redirectRequest</code> Object\n            <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">session</code> Object (optional)</li>\n<li><code class="highlighter-rouge">uploadData</code> Object (optional)\n                <ul class="prog__ul">\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">session</code> Object (optional)</li>\n<li><code class="highlighter-rouge">uploadData</code> Object (optional)\n                <ul class="prog__ul">\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">contentType</code> String - MIME type of the content.</li>\n<li><code class="highlighter-rouge">data</code> String - Content to be sent.</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul><p>Registers a protocol of <code class="highlighter-rouge">scheme</code> that will send an HTTP request as a response.</p><p>The usage is the same with <code class="highlighter-rouge">registerFileProtocol</code>, except that the <code class="highlighter-rouge">callback</code> should be called with a <code class="highlighter-rouge">redirectRequest</code> object that has the <code class="highlighter-rouge">url</code>, <code class="highlighter-rouge">method</code>, <code class="highlighter-rouge">referrer</code>, <code class="highlighter-rouge">uploadData</code> and <code class="highlighter-rouge">session</code> properties.</p><p>By default the HTTP request will reuse the current session. If you want the request to have a different session you should set <code class="highlighter-rouge">session</code> to <code class="highlighter-rouge">null</code>.</p><p>For POST requests the <code class="highlighter-rouge">uploadData</code> object must be provided.</p></section>	http://electron.atom.io/docs/api/protocol/#protocolregisterhttpprotocolscheme-handler-completion
protocol.registerServiceWorkerSchemes	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">schemes</code> String[] - Custom schemes to be registered to handle service workers.</li>\n</ul></section>	http://electron.atom.io/docs/api/protocol/#protocolregisterserviceworkerschemesschemes
protocol.registerStandardSchemes	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">schemes</code> String[] - Custom schemes to be registered as standard schemes.</li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">secure</code> Boolean (optional) - <code class="highlighter-rouge">true</code> to register the scheme as secure. Default <code class="highlighter-rouge">false</code>.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">secure</code> Boolean (optional) - <code class="highlighter-rouge">true</code> to register the scheme as secure. Default <code class="highlighter-rouge">false</code>.</li>\n</ul><p>A standard scheme adheres to what RFC 3986 calls file</code> is not.</p><p>Registering a scheme as standard, will allow relative and absolute resources to be resolved correctly when served. Otherwise the scheme will behave like the <code class="highlighter-rouge">file</code> protocol, but without the ability to resolve relative URLs.</p><p>For example when you load following page with custom protocol without registering it as standard scheme, the image will not be loaded because non-standard schemes can not recognize relative URLs:</p><pre><code><body>\n  <img src='test.png'>\n</body>\n\n</code></pre><p>Registering a scheme as standard will allow access to files through the FileSystem API. Otherwise the renderer will throw a security error for the scheme.</p><p>By default web storage apis (localStorage, sessionStorage, webSQL, indexedDB, cookies) are disabled for non standard schemes. So in general if you want to register a custom protocol to replace the <code class="highlighter-rouge">http</code> protocol, you have to register it as a standard scheme:</p><pre><code>const {app, protocol} = require('electron')\n\nprotocol.registerStandardSchemes(['atom'])\napp.on('ready', () => {\n  protocol.registerHttpProtocol('atom', '...')\n})\n\n</code></pre><p><strong>Note:</strong> This method can only be used before the <code class="highlighter-rouge">ready</code> event of the <code class="highlighter-rouge">app</code> module gets emitted.</p></section>	http://electron.atom.io/docs/api/protocol/#protocolregisterstandardschemesschemes-options
protocol.registerStringProtocol	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">handler</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">request</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">data</code> String (optional)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">completion</code> Function (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">request</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">data</code> String (optional)</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">data</code> String (optional)</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul><p>Registers a protocol of <code class="highlighter-rouge">scheme</code> that will send a <code class="highlighter-rouge">String</code> as a response.</p><p>The usage is the same with <code class="highlighter-rouge">registerFileProtocol</code>, except that the <code class="highlighter-rouge">callback</code> should be called with either a <code class="highlighter-rouge">String</code> or an object that has the <code class="highlighter-rouge">data</code>, <code class="highlighter-rouge">mimeType</code>, and <code class="highlighter-rouge">charset</code> properties.</p></section>	http://electron.atom.io/docs/api/protocol/#protocolregisterstringprotocolscheme-handler-completion
protocol.unregisterProtocol	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">completion</code> Function (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul><p>Unregisters the custom protocol of <code class="highlighter-rouge">scheme</code>.</p></section>	http://electron.atom.io/docs/api/protocol/#protocolunregisterprotocolscheme-completion
remote	A										<section class="prog__container"><p>Use main process modules from the renderer process.</p><p>Process: Renderer</p><p>The <code class="highlighter-rouge">remote</code> module provides a simple way to do inter-process communication (IPC) between the renderer process (web page) and the main process.</p><p>In Electron, GUI-related modules (such as <code class="highlighter-rouge">dialog</code>, <code class="highlighter-rouge">menu</code> etc.) are only available in the main process, not in the renderer process. In order to use them from the renderer process, the <code class="highlighter-rouge">ipc</code> module is necessary to send inter-process messages to the main process. With the <code class="highlighter-rouge">remote</code> module, you can invoke methods of the main process object without explicitly sending inter-process messages, similar to Java s RMI. An example of creating a browser window from a renderer process:</p><pre><code>const {BrowserWindow} = require('electron').remote\nlet win = new BrowserWindow({width: 800, height: 600})\nwin.loadURL('https://github.com')\n\n</code></pre><p><strong>Note:</strong> For the reverse (access the renderer process from the main process), you can use webContents.executeJavascript.</p></section>	http://electron.atom.io/docs/api/remote
remote.getCurrentWebContents	A										<section class="prog__container"><p>Returns WebContents</code> - The web contents of this web page.</p></section>	http://electron.atom.io/docs/api/remote/#remotegetcurrentwebcontents
remote.getCurrentWindow	A										<section class="prog__container"><p>Returns BrowserWindow</code> - The window to which this web page belongs.</p></section>	http://electron.atom.io/docs/api/remote/#remotegetcurrentwindow
remote.getGlobal	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">name</code> String</li>\n</ul><p>Returns <code class="highlighter-rouge">any</code> - The global variable of <code class="highlighter-rouge">name</code> (e.g. <code class="highlighter-rouge">global[name]</code>) in the main process.</p></section>	http://electron.atom.io/docs/api/remote/#remotegetglobalname
remote.require	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">module</code> String</li>\n</ul><p>Returns <code class="highlighter-rouge">any</code> - The object returned by <code class="highlighter-rouge">require(module)</code> in the main process.</p></section>	http://electron.atom.io/docs/api/remote/#remoterequiremodule
request.end	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">chunk</code> (String | Buffer) (optional)</li>\n<li><code class="highlighter-rouge">encoding</code> String (optional)</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional)</li>\n</ul><p>Sends the last chunk of the request data. Subsequent write or end operations will not be allowed. The <code class="highlighter-rouge">finish</code> event is emitted just after the end operation.</p></section>	http://electron.atom.io/docs/api/client-request/#requestendchunk-encoding-callback
request.getHeader	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">name</code> String - Specify an extra header name.</li>\n</ul><p>Returns String - The value of a previously set extra header name.</p></section>	http://electron.atom.io/docs/api/client-request/#requestgetheadername
request.removeHeader	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">name</code> String - Specify an extra header name.</li>\n</ul><p>Removes a previously set extra header name. This method can be called only before first write. Trying to call it after the first write will throw an error.</p></section>	http://electron.atom.io/docs/api/client-request/#requestremoveheadername
request.write	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">chunk</code> (String | Buffer) - A chunk of the request body   s data. If it is a string, it is converted into a Buffer using the specified encoding.</li>\n<li><code class="highlighter-rouge">encoding</code> String (optional) - Used to convert string chunks into Buffer objects. Defaults to    utf-8   .</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional) - Called after the write operation ends.</li>\n</ul><p><code class="highlighter-rouge">callback</code> is essentially a dummy function introduced in the purpose of keeping similarity with the Node.js API. It is called asynchronously in the next tick after <code class="highlighter-rouge">chunk</code> content have been delivered to the Chromium networking layer. Contrary to the Node.js implementation, it is not guaranteed that <code class="highlighter-rouge">chunk</code> content have been flushed on the wire before <code class="highlighter-rouge">callback</code> is called.</p><p>Adds a chunk of data to the request body. The first write operation may cause the request headers to be issued on the wire. After the first write operation, it is not allowed to add or remove a custom header.</p></section>	http://electron.atom.io/docs/api/client-request/#requestwritechunk-encoding-callback
screen	A										<section class="prog__container"><p>Retrieve information about screen size, displays, cursor position, etc.</p><p>Process: Renderer</p><p>You cannot require or use this module until the <code class="highlighter-rouge">ready</code> event of the <code class="highlighter-rouge">app</code> module is emitted.</p><p><code class="highlighter-rouge">screen</code> is an EventEmitter.</p><p><strong>Note:</strong> In the renderer / DevTools, <code class="highlighter-rouge">window.screen</code> is a reserved DOM property, so writing <code class="highlighter-rouge">let {screen} = require('electron')</code> will not work.</p><p>An example of creating a window that fills the whole screen:</p><pre><code>const electron = require('electron')\nconst {app, BrowserWindow} = electron\n\nlet win\n\napp.on('ready', () => {\n  const {width, height} = electron.screen.getPrimaryDisplay().workAreaSize\n  win = new BrowserWindow({width, height})\n  win.loadURL('https://github.com')\n})\n\n</code></pre><p>Another example of creating a window in the external display:</p><pre><code>const electron = require('electron')\nconst {app, BrowserWindow} = require('electron')\n\nlet win\n\napp.on('ready', () => {\n  let displays = electron.screen.getAllDisplays()\n  let externalDisplay = displays.find((display) => {\n    return display.bounds.x !== 0 || display.bounds.y !== 0\n  })\n\n  if (externalDisplay) {\n    win = new BrowserWindow({\n      x: externalDisplay.bounds.x + 50,\n      y: externalDisplay.bounds.y + 50\n    })\n    win.loadURL('https://github.com')\n  }\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/screen
screen.getAllDisplays	A										<section class="prog__container"><p>Returns Display[]</code> - An array of displays that are currently available.</p></section>	http://electron.atom.io/docs/api/screen/#screengetalldisplays
screen.getCursorScreenPoint	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Object</code>:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n</ul><p>The current absolute position of the mouse pointer.</p></section>	http://electron.atom.io/docs/api/screen/#screengetcursorscreenpoint
screen.getDisplayNearestPoint	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">point</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n</ul><p>Returns Display</code> - The display nearest the specified point.</p></section>	http://electron.atom.io/docs/api/screen/#screengetdisplaynearestpointpoint
screen.getPrimaryDisplay	A										<section class="prog__container"><p>Returns Display</code> - The primary display.</p></section>	http://electron.atom.io/docs/api/screen/#screengetprimarydisplay
ses.allowNTLMCredentialsForDomains	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">domains</code> String - A comma-seperated list of servers for which integrated authentication is enabled.</li>\n</ul><p>Dynamically sets whether to always send credentials for HTTP NTLM or Negotiate authentication.</p><pre><code>const {session} = require('electron')\n// consider any url ending with `example.com`, `foobar.com`, `baz`\n// for integrated authentication.\nsession.defaultSession.allowNTLMCredentialsForDomains('*example.com, *foobar.com, *baz')\n\n// consider all urls for integrated authentication.\nsession.defaultSession.allowNTLMCredentialsForDomains('*')\n\n</code></pre></section>	http://electron.atom.io/docs/api/session/#sesallowntlmcredentialsfordomainsdomains
ses.clearAuthCache	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">options</code> (RemoveClientCertificate)</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional) - Called when operation is done</li>\n</ul><p>Clears the session   s HTTP authentication cache.</p></section>	http://electron.atom.io/docs/api/session/#sesclearauthcacheoptions-callback
ses.clearCache	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">callback</code> Function - Called when operation is done</li>\n</ul><p>Clears the session   s HTTP cache.</p></section>	http://electron.atom.io/docs/api/session/#sesclearcachecallback
ses.clearHostResolverCache	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">callback</code> Function (optional) - Called when operation is done.</li>\n</ul><p>Clears the host resolver cache.</p></section>	http://electron.atom.io/docs/api/session/#sesclearhostresolvercachecallback
ses.clearStorageData	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">origin</code> String - Should follow <code class="highlighter-rouge">window.location.origin</code>   s representation <code class="highlighter-rouge">scheme://host:port</code>.</li>\n<li><code class="highlighter-rouge">storages</code> String[] - The types of storages to clear, can contain: <code class="highlighter-rouge">appcache</code>, <code class="highlighter-rouge">cookies</code>, <code class="highlighter-rouge">filesystem</code>, <code class="highlighter-rouge">indexdb</code>, <code class="highlighter-rouge">localstorage</code>, <code class="highlighter-rouge">shadercache</code>, <code class="highlighter-rouge">websql</code>, <code class="highlighter-rouge">serviceworkers</code></li>\n<li><code class="highlighter-rouge">quotas</code> String[] - The types of quotas to clear, can contain: <code class="highlighter-rouge">temporary</code>, <code class="highlighter-rouge">persistent</code>, <code class="highlighter-rouge">syncable</code>.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional) - Called when operation is done.</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">origin</code> String - Should follow <code class="highlighter-rouge">window.location.origin</code>   s representation <code class="highlighter-rouge">scheme://host:port</code>.</li>\n<li><code class="highlighter-rouge">storages</code> String[] - The types of storages to clear, can contain: <code class="highlighter-rouge">appcache</code>, <code class="highlighter-rouge">cookies</code>, <code class="highlighter-rouge">filesystem</code>, <code class="highlighter-rouge">indexdb</code>, <code class="highlighter-rouge">localstorage</code>, <code class="highlighter-rouge">shadercache</code>, <code class="highlighter-rouge">websql</code>, <code class="highlighter-rouge">serviceworkers</code></li>\n<li><code class="highlighter-rouge">quotas</code> String[] - The types of quotas to clear, can contain: <code class="highlighter-rouge">temporary</code>, <code class="highlighter-rouge">persistent</code>, <code class="highlighter-rouge">syncable</code>.</li>\n</ul><p>Clears the data of web storages.</p></section>	http://electron.atom.io/docs/api/session/#sesclearstoragedataoptions-callback
ses.cookies	A										<section class="prog__container"><p>A Cookies object for this session.</p></section>	http://electron.atom.io/docs/api/session/#sescookies
ses.createInterruptedDownload	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">options</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">path</code> String - Absolute path of the download.</li>\n<li><code class="highlighter-rouge">urlChain</code> String[] - Complete URL chain for the download.</li>\n<li><code class="highlighter-rouge">mimeType</code> String (optional)</li>\n<li><code class="highlighter-rouge">offset</code> Integer - Start range for the download.</li>\n<li><code class="highlighter-rouge">length</code> Integer - Total length of the download.</li>\n<li><code class="highlighter-rouge">lastModified</code> String - Last-Modified header value.</li>\n<li><code class="highlighter-rouge">eTag</code> String - ETag header value.</li>\n<li><code class="highlighter-rouge">startTime</code> Double (optional) - Time when download was started in number of seconds since UNIX epoch.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">path</code> String - Absolute path of the download.</li>\n<li><code class="highlighter-rouge">urlChain</code> String[] - Complete URL chain for the download.</li>\n<li><code class="highlighter-rouge">mimeType</code> String (optional)</li>\n<li><code class="highlighter-rouge">offset</code> Integer - Start range for the download.</li>\n<li><code class="highlighter-rouge">length</code> Integer - Total length of the download.</li>\n<li><code class="highlighter-rouge">lastModified</code> String - Last-Modified header value.</li>\n<li><code class="highlighter-rouge">eTag</code> String - ETag header value.</li>\n<li><code class="highlighter-rouge">startTime</code> Double (optional) - Time when download was started in number of seconds since UNIX epoch.</li>\n</ul><p>Allows resuming <code class="highlighter-rouge">cancelled</code> or <code class="highlighter-rouge">interrupted</code> downloads from previous <code class="highlighter-rouge">Session</code>. The API will generate a DownloadItem.</p></section>	http://electron.atom.io/docs/api/session/#sescreateinterrupteddownloadoptions
ses.disableNetworkEmulation	A										<section class="prog__container"><p>Disables any network emulation already active for the <code class="highlighter-rouge">session</code>. Resets to the original network configuration.</p></section>	http://electron.atom.io/docs/api/session/#sesdisablenetworkemulation
ses.enableNetworkEmulation	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">options</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">offline</code> Boolean (optional) - Whether to emulate network outage. Defaults to false.</li>\n<li><code class="highlighter-rouge">latency</code> Double (optional) - RTT in ms. Defaults to 0 which will disable latency throttling.</li>\n<li><code class="highlighter-rouge">downloadThroughput</code> Double (optional) - Download rate in Bps. Defaults to 0 which will disable download throttling.</li>\n<li><code class="highlighter-rouge">uploadThroughput</code> Double (optional) - Upload rate in Bps. Defaults to 0 which will disable upload throttling.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">offline</code> Boolean (optional) - Whether to emulate network outage. Defaults to false.</li>\n<li><code class="highlighter-rouge">latency</code> Double (optional) - RTT in ms. Defaults to 0 which will disable latency throttling.</li>\n<li><code class="highlighter-rouge">downloadThroughput</code> Double (optional) - Download rate in Bps. Defaults to 0 which will disable download throttling.</li>\n<li><code class="highlighter-rouge">uploadThroughput</code> Double (optional) - Upload rate in Bps. Defaults to 0 which will disable upload throttling.</li>\n</ul><p>Emulates network with the given configuration for the <code class="highlighter-rouge">session</code>.</p><pre><code>// To emulate a GPRS connection with 50kbps throughput and 500 ms latency.\nwindow.webContents.session.enableNetworkEmulation({\n  latency: 500,\n  downloadThroughput: 6400,\n  uploadThroughput: 6400\n})\n\n// To emulate a network outage.\nwindow.webContents.session.enableNetworkEmulation({offline: true})\n\n</code></pre></section>	http://electron.atom.io/docs/api/session/#sesenablenetworkemulationoptions
ses.flushStorageData	A										<section class="prog__container"><p>Writes any unwritten DOMStorage data to disk.</p></section>	http://electron.atom.io/docs/api/session/#sesflushstoragedata
ses.getBlobData	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">identifier</code> String - Valid UUID.</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">result</code> Buffer - Blob data.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">result</code> Buffer - Blob data.</li>\n</ul><p>Returns <code class="highlighter-rouge">Blob</code> - The blob data associated with the <code class="highlighter-rouge">identifier</code>.</p></section>	http://electron.atom.io/docs/api/session/#sesgetblobdataidentifier-callback
ses.getCacheSize	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">size</code> Integer - Cache size used in bytes.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">size</code> Integer - Cache size used in bytes.</li>\n</ul><p>Returns the session   s current cache size.</p></section>	http://electron.atom.io/docs/api/session/#sesgetcachesizecallback
ses.getUserAgent	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The user agent for this session.</p></section>	http://electron.atom.io/docs/api/session/#sesgetuseragent
ses.resolveProxy	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> URL</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">proxy</code> Object</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">proxy</code> Object</li>\n</ul><p>Resolves the proxy information for <code class="highlighter-rouge">url</code>. The <code class="highlighter-rouge">callback</code> will be called with <code class="highlighter-rouge">callback(proxy)</code> when the request is performed.</p></section>	http://electron.atom.io/docs/api/session/#sesresolveproxyurl-callback
ses.setCertificateVerifyProc	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">proc</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">hostname</code> String</li>\n<li><code class="highlighter-rouge">certificate</code> Certificate</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">isTrusted</code> Boolean - Determines if the certificate should be trusted</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">hostname</code> String</li>\n<li><code class="highlighter-rouge">certificate</code> Certificate</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">isTrusted</code> Boolean - Determines if the certificate should be trusted</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">isTrusted</code> Boolean - Determines if the certificate should be trusted</li>\n</ul><p>Sets the certificate verify proc for <code class="highlighter-rouge">session</code>, the <code class="highlighter-rouge">proc</code> will be called with <code class="highlighter-rouge">proc(hostname, certificate, callback)</code> whenever a server certificate verification is requested. Calling <code class="highlighter-rouge">callback(true)</code> accepts the certificate, calling <code class="highlighter-rouge">callback(false)</code> rejects it.</p><p>Calling <code class="highlighter-rouge">setCertificateVerifyProc(null)</code> will revert back to default certificate verify proc.</p><pre><code>const {BrowserWindow} = require('electron')\nlet win = new BrowserWindow()\n\nwin.webContents.session.setCertificateVerifyProc((hostname, cert, callback) => {\n  callback(hostname === 'github.com')\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/session/#sessetcertificateverifyprocproc
ses.setDownloadPath	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">path</code> String - The download location</li>\n</ul><p>Sets download saving directory. By default, the download directory will be the <code class="highlighter-rouge">Downloads</code> under the respective app folder.</p></section>	http://electron.atom.io/docs/api/session/#sessetdownloadpathpath
ses.setPermissionRequestHandler	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">handler</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">webContents</code> Object - WebContents requesting the permission.</li>\n<li><code class="highlighter-rouge">permission</code> String - Enum of  media ,  geolocation ,  notifications ,  midiSysex ,  pointerLock ,  fullscreen ,  openExternal .</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">permissionGranted</code> Boolean - Allow or deny the permission</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">webContents</code> Object - WebContents requesting the permission.</li>\n<li><code class="highlighter-rouge">permission</code> String - Enum of  media ,  geolocation ,  notifications ,  midiSysex ,  pointerLock ,  fullscreen ,  openExternal .</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">permissionGranted</code> Boolean - Allow or deny the permission</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">permissionGranted</code> Boolean - Allow or deny the permission</li>\n</ul><p>Sets the handler which can be used to respond to permission requests for the <code class="highlighter-rouge">session</code>. Calling <code class="highlighter-rouge">callback(true)</code> will allow the permission and <code class="highlighter-rouge">callback(false)</code> will reject it.</p><pre><code>const {session} = require('electron')\nsession.fromPartition('some-partition').setPermissionRequestHandler((webContents, permission, callback) => {\n  if (webContents.getURL() === 'some-host' && permission === 'notifications') {\n    return callback(false) // denied.\n  }\n\n  callback(true)\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/session/#sessetpermissionrequesthandlerhandler
ses.setProxy	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">config</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">pacScript</code> String - The URL associated with the PAC file.</li>\n<li><code class="highlighter-rouge">proxyRules</code> String - Rules indicating which proxies to use.</li>\n<li><code class="highlighter-rouge">proxyBypassRules</code> String - Rules indicating which URLs should bypass the proxy settings.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function - Called when operation is done.</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">pacScript</code> String - The URL associated with the PAC file.</li>\n<li><code class="highlighter-rouge">proxyRules</code> String - Rules indicating which proxies to use.</li>\n<li><code class="highlighter-rouge">proxyBypassRules</code> String - Rules indicating which URLs should bypass the proxy settings.</li>\n</ul><p>Sets the proxy settings.</p><p>When <code class="highlighter-rouge">pacScript</code> and <code class="highlighter-rouge">proxyRules</code> are provided together, the <code class="highlighter-rouge">proxyRules</code> option is ignored and <code class="highlighter-rouge">pacScript</code> configuration is applied.</p><p>The <code class="highlighter-rouge">proxyRules</code> has to follow the rules below:</p><pre><code>proxyRules = schemeProxies[";"<schemeProxies>]\nschemeProxies = [<urlScheme>"="]<proxyURIList>\nurlScheme = "http" | "https" | "ftp" | "socks"\nproxyURIList = <proxyURL>[","<proxyURIList>]\nproxyURL = [<proxyScheme>"://"]<proxyHost>[":"<proxyPort>]\n\n\n</code></pre><p>For example:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">http=foopy:80;ftp=foopy2</code> - Use HTTP proxy <code class="highlighter-rouge">foopy:80</code> for <code class="highlighter-rouge">http://</code> URLs, and HTTP proxy <code class="highlighter-rouge">foopy2:80</code> for <code class="highlighter-rouge">ftp://</code> URLs.</li>\n<li><code class="highlighter-rouge">foopy:80</code> - Use HTTP proxy <code class="highlighter-rouge">foopy:80</code> for all URLs.</li>\n<li><code class="highlighter-rouge">foopy:80,bar,direct://</code> - Use HTTP proxy <code class="highlighter-rouge">foopy:80</code> for all URLs, failing over to <code class="highlighter-rouge">bar</code> if <code class="highlighter-rouge">foopy:80</code> is unavailable, and after that using no proxy.</li>\n<li><code class="highlighter-rouge">socks4://foopy</code> - Use SOCKS v4 proxy <code class="highlighter-rouge">foopy:1080</code> for all URLs.</li>\n<li><code class="highlighter-rouge">http=foopy,socks5://bar.com</code> - Use HTTP proxy <code class="highlighter-rouge">foopy</code> for http URLs, and fail over to the SOCKS5 proxy <code class="highlighter-rouge">bar.com</code> if <code class="highlighter-rouge">foopy</code> is unavailable.</li>\n<li><code class="highlighter-rouge">http=foopy,direct://</code> - Use HTTP proxy <code class="highlighter-rouge">foopy</code> for http URLs, and use no proxy if <code class="highlighter-rouge">foopy</code> is unavailable.</li>\n<li><code class="highlighter-rouge">http=foopy;socks=foopy2</code> - Use HTTP proxy <code class="highlighter-rouge">foopy</code> for http URLs, and use <code class="highlighter-rouge">socks4://foopy2</code> for all other URLs.</li>\n</ul><p>The <code class="highlighter-rouge">proxyBypassRules</code> is a comma separated list of rules described below:</p><ul class="prog__ul">\n<li>\n<p><code class="highlighter-rouge">[ URL_SCHEME "://" ] HOSTNAME_PATTERN [ ":" &lt;port&gt; ]</code></p>\n<p>Match all hostnames that match the pattern HOSTNAME_PATTERN.</p>\n<p>Examples:  foobar.com ,  <em>foobar.com ,  </em>.foobar.com ,  <em>foobar.com:99 ,  https://x.</em>.y.com:99 </p>\n</li>\n<li>\n<p><code class="highlighter-rouge">"." HOSTNAME_SUFFIX_PATTERN [ ":" PORT ]</code></p>\n<p>Match a particular domain suffix.</p>\n<p>Examples:  .google.com ,  .com ,  http://.google.com </p>\n</li>\n<li>\n<p><code class="highlighter-rouge">[ SCHEME "://" ] IP_LITERAL [ ":" PORT ]</code></p>\n<p>Match URLs which are IP address literals.</p>\n<p>Examples:  127.0.1 ,  [0:0::1] ,  [::1] ,  http://[::1]:99 </p>\n</li>\n<li>\n<p><code class="highlighter-rouge">IP_LITERAL "/" PREFIX_LENGHT_IN_BITS</code></p>\n<p>Match any URL that is to an IP literal that falls between the given range. IP range is specified using CIDR notation.</p>\n<p>Examples:  192.168.1.1/16 ,  fefe:13::abc/33 .</p>\n</li>\n<li>\n<p><code class="highlighter-rouge">&lt;local&gt;</code></p>\n<p>Match local addresses. The meaning of <code class="highlighter-rouge">&lt;local&gt;</code> is whether the host matches one of:  127.0.0.1 ,  ::1 ,  localhost .</p>\n</li>\n</ul><p><code class="highlighter-rouge">[ URL_SCHEME "://" ] HOSTNAME_PATTERN [ ":" &lt;port&gt; ]</code></p><p>Match all hostnames that match the pattern HOSTNAME_PATTERN.</p><p>Examples:  foobar.com ,  <em>foobar.com ,  </em>.foobar.com ,  <em>foobar.com:99 ,  https://x.</em>.y.com:99 </p><p><code class="highlighter-rouge">"." HOSTNAME_SUFFIX_PATTERN [ ":" PORT ]</code></p><p>Match a particular domain suffix.</p><p>Examples:  .google.com ,  .com ,  http://.google.com </p><p><code class="highlighter-rouge">[ SCHEME "://" ] IP_LITERAL [ ":" PORT ]</code></p><p>Match URLs which are IP address literals.</p><p>Examples:  127.0.1 ,  [0:0::1] ,  [::1] ,  http://[::1]:99 </p><p><code class="highlighter-rouge">IP_LITERAL "/" PREFIX_LENGHT_IN_BITS</code></p><p>Match any URL that is to an IP literal that falls between the given range. IP range is specified using CIDR notation.</p><p>Examples:  192.168.1.1/16 ,  fefe:13::abc/33 .</p><p><code class="highlighter-rouge">&lt;local&gt;</code></p><p>Match local addresses. The meaning of <code class="highlighter-rouge">&lt;local&gt;</code> is whether the host matches one of:  127.0.0.1 ,  ::1 ,  localhost .</p></section>	http://electron.atom.io/docs/api/session/#sessetproxyconfig-callback
ses.setUserAgent	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">userAgent</code> String</li>\n<li><code class="highlighter-rouge">acceptLanguages</code> String (optional)</li>\n</ul><p>Overrides the <code class="highlighter-rouge">userAgent</code> and <code class="highlighter-rouge">acceptLanguages</code> for this session.</p><p>The <code class="highlighter-rouge">acceptLanguages</code> must a comma separated ordered list of language codes, for example <code class="highlighter-rouge">"en-US,fr,de,ko,zh-CN,ja"</code>.</p><p>This doesn   t affect existing <code class="highlighter-rouge">WebContents</code>, and each <code class="highlighter-rouge">WebContents</code> can use <code class="highlighter-rouge">webContents.setUserAgent</code> to override the session-wide user agent.</p></section>	http://electron.atom.io/docs/api/session/#sessetuseragentuseragent-acceptlanguages
ses.webRequest	A										<section class="prog__container"><p>A WebRequest object for this session.</p></section>	http://electron.atom.io/docs/api/session/#seswebrequest
session	A										<section class="prog__container"><p>Manage browser sessions, cookies, cache, proxy settings, etc.</p><p>Process: Main</p><p>The <code class="highlighter-rouge">session</code> module can be used to create new <code class="highlighter-rouge">Session</code> objects.</p><p>You can also access the <code class="highlighter-rouge">session</code> of existing pages by using the <code class="highlighter-rouge">session</code> property of session</code> module.</p><pre><code>const {BrowserWindow} = require('electron')\n\nlet win = new BrowserWindow({width: 800, height: 600})\nwin.loadURL('http://github.com')\n\nconst ses = win.webContents.session\nconsole.log(ses.getUserAgent())\n\n</code></pre></section>	http://electron.atom.io/docs/api/session
session session	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">item</code> DownloadItem</li>\n<li><code class="highlighter-rouge">webContents</code> WebContents</li>\n</ul><p>Emitted when Electron is about to download <code class="highlighter-rouge">item</code> in <code class="highlighter-rouge">webContents</code>.</p><p>Calling <code class="highlighter-rouge">event.preventDefault()</code> will cancel the download and <code class="highlighter-rouge">item</code> will not be available from next tick of the process.</p><pre><code>const {session} = require('electron')\nsession.defaultSession.on('will-download', (event, item, webContents) => {\n  event.preventDefault()\n  require('request')(item.getURL(), (data) => {\n    require('fs').writeFileSync('/somewhere', data)\n  })\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/session/#event-will-download
session.defaultSession	A										<section class="prog__container"><p>A <code class="highlighter-rouge">Session</code> object, the default session object of the app.</p><p>Get and set properties of a session.</p><p>Process: Main</p><p>You can create a <code class="highlighter-rouge">Session</code> object in the <code class="highlighter-rouge">session</code> module:</p><pre><code>const {session} = require('electron')\nconst ses = session.fromPartition('persist:name')\nconsole.log(ses.getUserAgent())\n\n</code></pre></section>	http://electron.atom.io/docs/api/session/#sessiondefaultsession
session.fromPartition	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">partition</code> String</li>\n<li><code class="highlighter-rouge">options</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">cache</code> Boolean - Whether to enable cache.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">cache</code> Boolean - Whether to enable cache.</li>\n</ul><p>Returns <code class="highlighter-rouge">Session</code> - A session instance from <code class="highlighter-rouge">partition</code> string. When there is an existing <code class="highlighter-rouge">Session</code> with the same <code class="highlighter-rouge">partition</code>, it will be returned; otherwise a new <code class="highlighter-rouge">Session</code> instance will be created with <code class="highlighter-rouge">options</code>.</p><p>If <code class="highlighter-rouge">partition</code> starts with <code class="highlighter-rouge">persist:</code>, the page will use a persistent session available to all pages in the app with the same <code class="highlighter-rouge">partition</code>. if there is no <code class="highlighter-rouge">persist:</code> prefix, the page will use an in-memory session. If the <code class="highlighter-rouge">partition</code> is empty then default session of the app will be returned.</p><p>To create a <code class="highlighter-rouge">Session</code> with <code class="highlighter-rouge">options</code>, you have to ensure the <code class="highlighter-rouge">Session</code> with the <code class="highlighter-rouge">partition</code> has never been used before. There is no way to change the <code class="highlighter-rouge">options</code> of an existing <code class="highlighter-rouge">Session</code> object.</p><p>The <code class="highlighter-rouge">session</code> module has the following properties:</p></section>	http://electron.atom.io/docs/api/session/#sessionfrompartitionpartition-options
shell	A										<section class="prog__container"><p>Manage files and URLs using their default applications.</p><p>Process: Renderer</p><p>The <code class="highlighter-rouge">shell</code> module provides functions related to desktop integration.</p><p>An example of opening a URL in the user s default browser:</p><pre><code>const {shell} = require('electron')\n\nshell.openExternal('https://github.com')\n\n</code></pre></section>	http://electron.atom.io/docs/api/shell
shell.beep	A										<section class="prog__container"><p>Play the beep sound.</p></section>	http://electron.atom.io/docs/api/shell/#shellbeep
shell.moveItemToTrash	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">fullPath</code> String</li>\n</ul><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the item was successfully moved to the trash</p><p>Move the given file to trash and returns a boolean status for the operation.</p></section>	http://electron.atom.io/docs/api/shell/#shellmoveitemtotrashfullpath
shell.openExternal	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">options</code> Object (optional) <em>macOS</em>\n<ul class="prog__ul">\n<li><code class="highlighter-rouge">activate</code> Boolean - <code class="highlighter-rouge">true</code> to bring the opened application to the foreground. The default is <code class="highlighter-rouge">true</code>.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional) - If specified will perform the open asynchronously. <em>macOS</em>\n<ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">activate</code> Boolean - <code class="highlighter-rouge">true</code> to bring the opened application to the foreground. The default is <code class="highlighter-rouge">true</code>.</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">error</code> Error</li>\n</ul><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether an application was available to open the URL. If callback is specified, always returns true.</p><p>Open the given external protocol URL in the desktop   s default manner. (For example, mailto: URLs in the user   s default mail agent).</p></section>	http://electron.atom.io/docs/api/shell/#shellopenexternalurl-options-callback
shell.openItem	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">fullPath</code> String</li>\n</ul><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the item was successfully opened.</p><p>Open the given file in the desktop   s default manner.</p></section>	http://electron.atom.io/docs/api/shell/#shellopenitemfullpath
shell.showItemInFolder	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">fullPath</code> String</li>\n</ul><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the item was successfully shown</p><p>Show the given file in a file manager. If possible, select the file.</p></section>	http://electron.atom.io/docs/api/shell/#shellshowiteminfolderfullpath
shell.writeShortcutLink 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/shell/#shellwriteshortcutlinkshortcutpath-operation-options-windows
synopsis	A										<section class="prog__container"><p>How to use Node.js and Electron APIs.</p><p>All of native modules).</p><p>Electron also provides some extra built-in modules for developing native desktop applications. Some modules are only available in the main process, some are only available in the renderer process (web page), and some can be used in both processes.</p><p>The basic rule is: if a module is main process vs. renderer process scripts to be able to use those modules.</p><p>The main process script is just like a normal Node.js script:</p><pre><code>const {app, BrowserWindow} = require('electron')\nlet win = null\n\napp.on('ready', () => {\n  win = new BrowserWindow({width: 800, height: 600})\n  win.loadURL('https://github.com')\n})\n\n</code></pre><p>The renderer process is no different than a normal web page, except for the extra ability to use node modules:</p><pre><code><!DOCTYPE html>\n<html>\n<body>\n<script>\n  const {app} = require('electron').remote\n  console.log(app.getVersion())\n</script>\n</body>\n</html>\n\n</code></pre><p>To run your app, read Run your app.</p></section>	http://electron.atom.io/docs/api/synopsis
system preferences	A										<section class="prog__container"><p>Get system preferences.</p><p>Process: Main</p><pre><code>const {systemPreferences} = require('electron')\nconsole.log(systemPreferences.isDarkMode())\n\n</code></pre></section>	http://electron.atom.io/docs/api/system-preferences
system preferences system-preferences	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the Swipe between pages setting is on.</p></section>	http://electron.atom.io/docs/api/system-preferences/#system-event-systempreferences.isswipetrackingfromscrolleventsenabled macos-preferences-system-preferences
systemPreferences.getAccentColor 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/system-preferences/#systempreferencesgetaccentcolor-windows
systemPreferences.getColor 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/system-preferences/#systempreferencesgetcolorcolor-windows
systemPreferences.getUserDefault 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/system-preferences/#systempreferencesgetuserdefaultkey-type-macos
systemPreferences.isAeroGlassEnabled 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/system-preferences/#systempreferencesisaeroglassenabled-windows
systemPreferences.postLocalNotification 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/system-preferences/#event- userInfo
systemPreferences.postNotification 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/system-preferences/#event- userInfo
systemPreferences.setUserDefault 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/system-preferences/#systempreferencessetuserdefaultkey-type-value-macos
systemPreferences.subscribeLocalNotification 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/system-preferences/#event- callback
systemPreferences.subscribeNotification 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/system-preferences/#event- callback
systemPreferences.unsubscribeLocalNotification 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/system-preferences/#systempreferencesunsubscribelocalnotificationid-macos
systemPreferences.unsubscribeNotification 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/system-preferences/#systempreferencesunsubscribenotificationid-macos
tray	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/tray
tray.destroy	A										<section class="prog__container"><p>Destroys the tray icon immediately.</p></section>	http://electron.atom.io/docs/api/tray/#traydestroy
tray.displayBalloon 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/tray/#traydisplayballoonoptions-windows
tray.getBounds  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/tray/#traygetbounds-macos-windows
tray.popUpContextMenu  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/tray/#traypopupcontextmenumenu-position-macos-windows
tray.setContextMenu	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">menu</code> Menu</li>\n</ul><p>Sets the context menu for this icon.</p></section>	http://electron.atom.io/docs/api/tray/#traysetcontextmenumenu
tray.setHighlightMode 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/tray/#traysethighlightmodemode-macos
tray.setImage	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">image</code> (NativeImage | String)</li>\n</ul><p>Sets the <code class="highlighter-rouge">image</code> associated with this tray icon.</p></section>	http://electron.atom.io/docs/api/tray/#traysetimageimage
tray.setPressedImage 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/tray/#traysetpressedimageimage-macos
tray.setTitle 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/tray/#traysettitletitle-macos
tray.setToolTip	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">toolTip</code> String</li>\n</ul><p>Sets the hover text for this tray icon.</p></section>	http://electron.atom.io/docs/api/tray/#traysettooltiptooltip
web contents	A										<section class="prog__container"><p>Render and control web pages.</p><p>Process: Main</p><p><code class="highlighter-rouge">webContents</code> is an webContents</code> object:</p><pre><code>const {BrowserWindow} = require('electron')\n\nlet win = new BrowserWindow({width: 800, height: 1500})\nwin.loadURL('http://github.com')\n\nlet contents = win.webContents\nconsole.log(contents)\n\n</code></pre></section>	http://electron.atom.io/docs/api/web-contents
web contents web-contents	A										<section class="prog__container"><p>Corresponds to the points in time when the spinner of the tab started spinning.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-did-start-loading
web contents web-contents	A										<section class="prog__container"><p>Corresponds to the points in time when the spinner of the tab stopped spinning.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-did-stop-loading
web contents web-contents	A										<section class="prog__container"><p>Emitted when <code class="highlighter-rouge">webContents</code> is destroyed.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-destroyed
web contents web-contents	A										<section class="prog__container"><p>Emitted when DevTools is closed.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-devtools-closed
web contents web-contents	A										<section class="prog__container"><p>Emitted when DevTools is focused / opened.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-devtools-focused
web contents web-contents	A										<section class="prog__container"><p>Emitted when DevTools is opened.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-devtools-opened
web contents web-contents	A										<section class="prog__container"><p>Emitted when a page s theme color changes. This is usually due to encountering a meta tag:</p><pre><code><meta name='theme-color' content='#ff0000'>\n\n</code></pre></section>	http://electron.atom.io/docs/api/web-contents/#event-did-change-theme-color
web contents web-contents	A										<section class="prog__container"><p>Emitted when media is paused or done playing.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-media-paused
web contents web-contents	A										<section class="prog__container"><p>Emitted when media starts playing.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-media-started-playing
web contents web-contents	A										<section class="prog__container"><p>Emitted when the devtools window instructs the webContents to reload</p></section>	http://electron.atom.io/docs/api/web-contents/#event-devtools-reload-page
web contents web-contents	A										<section class="prog__container"><p>Emitted when the navigation is done, i.e. the spinner of the tab has stopped spinning, and the <code class="highlighter-rouge">onload</code> event was dispatched.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-did-finish-load
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n</ul><p>Emitted when the document in the given frame is loaded.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-dom-ready
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">devices</code> BluetoothDevice[]</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">deviceId</code> String</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">deviceId</code> String</li>\n</ul><p>Emitted when bluetooth device needs to be selected on call to <code class="highlighter-rouge">navigator.bluetooth.requestDevice</code>. To use <code class="highlighter-rouge">navigator.bluetooth</code> api <code class="highlighter-rouge">webBluetooth</code> should be enabled. If <code class="highlighter-rouge">event.preventDefault</code> is not called, first available device will be selected. <code class="highlighter-rouge">callback</code> should be called with <code class="highlighter-rouge">deviceId</code> to be selected, passing empty string to <code class="highlighter-rouge">callback</code> will cancel the request.</p><pre><code>const {app, webContents} = require('electron')\napp.commandLine.appendSwitch('enable-web-bluetooth')\n\napp.on('ready', () => {\n  webContents.on('select-bluetooth-device', (event, deviceList, callback) => {\n    event.preventDefault()\n    let result = deviceList.find((device) => {\n      return device.deviceName === 'test'\n    })\n    if (!result) {\n      callback('')\n    } else {\n      callback(result.deviceId)\n    }\n  })\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/web-contents/#event-select-bluetooth-device
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">dirtyRect</code> Rectangle</li>\n<li><code class="highlighter-rouge">image</code> NativeImage - The image data of the whole frame.</li>\n</ul><p>Emitted when a new frame is generated. Only the dirty area is passed in the buffer.</p><pre><code>const {BrowserWindow} = require('electron')\n\nlet win = new BrowserWindow({webPreferences: {offscreen: true}})\nwin.webContents.on('paint', (event, dirty, image) => {\n  // updateBitmap(dirty, image.getBitmap())\n})\nwin.loadURL('http://github.com')\n\n</code></pre></section>	http://electron.atom.io/docs/api/web-contents/#event-paint
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">errorCode</code> Integer</li>\n<li><code class="highlighter-rouge">errorDescription</code> String</li>\n<li><code class="highlighter-rouge">validatedURL</code> String</li>\n<li><code class="highlighter-rouge">isMainFrame</code> Boolean</li>\n</ul><p>This event is like <code class="highlighter-rouge">did-finish-load</code> but emitted when the load failed or was cancelled, e.g. <code class="highlighter-rouge">window.stop()</code> is invoked. The full list of error codes and their meaning is available here.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-did-fail-load
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">favicons</code> String[] - Array of URLs</li>\n</ul><p>Emitted when page receives favicon urls.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-page-favicon-updated
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">input</code> Object - Input properties\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">type</code> String - Either <code class="highlighter-rouge">keyUp</code> or <code class="highlighter-rouge">keyDown</code></li>\n<li><code class="highlighter-rouge">key</code> String - Equivalent to KeyboardEvent.key</li>\n<li><code class="highlighter-rouge">code</code> String - Equivalent to KeyboardEvent.code</li>\n<li><code class="highlighter-rouge">isAutoRepeat</code> Boolean - Equivalent to KeyboardEvent.repeat</li>\n<li><code class="highlighter-rouge">shift</code> Boolean - Equivalent to KeyboardEvent.shiftKey</li>\n<li><code class="highlighter-rouge">control</code> Boolean - Equivalent to KeyboardEvent.controlKey</li>\n<li><code class="highlighter-rouge">alt</code> Boolean - Equivalent to KeyboardEvent.altKey</li>\n<li><code class="highlighter-rouge">meta</code> Boolean - Equivalent to KeyboardEvent.metaKey</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">type</code> String - Either <code class="highlighter-rouge">keyUp</code> or <code class="highlighter-rouge">keyDown</code></li>\n<li><code class="highlighter-rouge">key</code> String - Equivalent to KeyboardEvent.key</li>\n<li><code class="highlighter-rouge">code</code> String - Equivalent to KeyboardEvent.code</li>\n<li><code class="highlighter-rouge">isAutoRepeat</code> Boolean - Equivalent to KeyboardEvent.repeat</li>\n<li><code class="highlighter-rouge">shift</code> Boolean - Equivalent to KeyboardEvent.shiftKey</li>\n<li><code class="highlighter-rouge">control</code> Boolean - Equivalent to KeyboardEvent.controlKey</li>\n<li><code class="highlighter-rouge">alt</code> Boolean - Equivalent to KeyboardEvent.altKey</li>\n<li><code class="highlighter-rouge">meta</code> Boolean - Equivalent to KeyboardEvent.metaKey</li>\n</ul><p>Emitted before dispatching the <code class="highlighter-rouge">keydown</code> and <code class="highlighter-rouge">keyup</code> events in the page. Calling <code class="highlighter-rouge">event.preventDefault</code> will prevent the page <code class="highlighter-rouge">keydown</code>/<code class="highlighter-rouge">keyup</code> events from being dispatched.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-before-input-event
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">isMainFrame</code> Boolean</li>\n</ul><p>Emitted when a frame has done navigation.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-did-frame-finish-load
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">killed</code> Boolean</li>\n</ul><p>Emitted when the renderer process crashes or is killed.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-crashed
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">name</code> String</li>\n<li><code class="highlighter-rouge">version</code> String</li>\n</ul><p>Emitted when a plugin process has crashed.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-plugin-crashed
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">oldURL</code> String</li>\n<li><code class="highlighter-rouge">newURL</code> String</li>\n<li><code class="highlighter-rouge">isMainFrame</code> Boolean</li>\n<li><code class="highlighter-rouge">httpResponseCode</code> Integer</li>\n<li><code class="highlighter-rouge">requestMethod</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">headers</code> Object</li>\n</ul><p>Emitted when a redirect is received while requesting a resource.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-did-get-redirect-request
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">params</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Integer - x coordinate</li>\n<li><code class="highlighter-rouge">y</code> Integer - y coordinate</li>\n<li><code class="highlighter-rouge">linkURL</code> String - URL of the link that encloses the node the context menu was invoked on.</li>\n<li><code class="highlighter-rouge">linkText</code> String - Text associated with the link. May be an empty string if the contents of the link are an image.</li>\n<li><code class="highlighter-rouge">pageURL</code> String - URL of the top level page that the context menu was invoked on.</li>\n<li><code class="highlighter-rouge">frameURL</code> String - URL of the subframe that the context menu was invoked on.</li>\n<li><code class="highlighter-rouge">srcURL</code> String - Source URL for the element that the context menu was invoked on. Elements with source URLs are images, audio and video.</li>\n<li><code class="highlighter-rouge">mediaType</code> String - Type of the node the context menu was invoked on. Can be <code class="highlighter-rouge">none</code>, <code class="highlighter-rouge">image</code>, <code class="highlighter-rouge">audio</code>, <code class="highlighter-rouge">video</code>, <code class="highlighter-rouge">canvas</code>, <code class="highlighter-rouge">file</code> or <code class="highlighter-rouge">plugin</code>.</li>\n<li><code class="highlighter-rouge">hasImageContents</code> Boolean - Whether the context menu was invoked on an image which has non-empty contents.</li>\n<li><code class="highlighter-rouge">isEditable</code> Boolean - Whether the context is editable.</li>\n<li><code class="highlighter-rouge">selectionText</code> String - Text of the selection that the context menu was invoked on.</li>\n<li><code class="highlighter-rouge">titleText</code> String - Title or alt text of the selection that the context was invoked on.</li>\n<li><code class="highlighter-rouge">misspelledWord</code> String - The misspelled word under the cursor, if any.</li>\n<li><code class="highlighter-rouge">frameCharset</code> String - The character encoding of the frame on which the menu was invoked.</li>\n<li><code class="highlighter-rouge">inputFieldType</code> String - If the context menu was invoked on an input field, the type of that field. Possible values are <code class="highlighter-rouge">none</code>, <code class="highlighter-rouge">plainText</code>, <code class="highlighter-rouge">password</code>, <code class="highlighter-rouge">other</code>.</li>\n<li><code class="highlighter-rouge">menuSourceType</code> String - Input source that invoked the context menu. Can be <code class="highlighter-rouge">none</code>, <code class="highlighter-rouge">mouse</code>, <code class="highlighter-rouge">keyboard</code>, <code class="highlighter-rouge">touch</code>, <code class="highlighter-rouge">touchMenu</code>.</li>\n<li><code class="highlighter-rouge">mediaFlags</code> Object - The flags for the media element the context menu was invoked on.\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">inError</code> Boolean - Whether the media element has crashed.</li>\n<li><code class="highlighter-rouge">isPaused</code> Boolean - Whether the media element is paused.</li>\n<li><code class="highlighter-rouge">isMuted</code> Boolean - Whether the media element is muted.</li>\n<li><code class="highlighter-rouge">hasAudio</code> Boolean - Whether the media element has audio.</li>\n<li><code class="highlighter-rouge">isLooping</code> Boolean - Whether the media element is looping.</li>\n<li><code class="highlighter-rouge">isControlsVisible</code> Boolean - Whether the media element   s controls are visible.</li>\n<li><code class="highlighter-rouge">canToggleControls</code> Boolean - Whether the media element   s controls are toggleable.</li>\n<li><code class="highlighter-rouge">canRotate</code> Boolean - Whether the media element can be rotated.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">editFlags</code> Object - These flags indicate whether the renderer believes it is able to perform the corresponding action.\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">canUndo</code> Boolean - Whether the renderer believes it can undo.</li>\n<li><code class="highlighter-rouge">canRedo</code> Boolean - Whether the renderer believes it can redo.</li>\n<li><code class="highlighter-rouge">canCut</code> Boolean - Whether the renderer believes it can cut.</li>\n<li><code class="highlighter-rouge">canCopy</code> Boolean - Whether the renderer believes it can copy</li>\n<li><code class="highlighter-rouge">canPaste</code> Boolean - Whether the renderer believes it can paste.</li>\n<li><code class="highlighter-rouge">canDelete</code> Boolean - Whether the renderer believes it can delete.</li>\n<li><code class="highlighter-rouge">canSelectAll</code> Boolean - Whether the renderer believes it can select all.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Integer - x coordinate</li>\n<li><code class="highlighter-rouge">y</code> Integer - y coordinate</li>\n<li><code class="highlighter-rouge">linkURL</code> String - URL of the link that encloses the node the context menu was invoked on.</li>\n<li><code class="highlighter-rouge">linkText</code> String - Text associated with the link. May be an empty string if the contents of the link are an image.</li>\n<li><code class="highlighter-rouge">pageURL</code> String - URL of the top level page that the context menu was invoked on.</li>\n<li><code class="highlighter-rouge">frameURL</code> String - URL of the subframe that the context menu was invoked on.</li>\n<li><code class="highlighter-rouge">srcURL</code> String - Source URL for the element that the context menu was invoked on. Elements with source URLs are images, audio and video.</li>\n<li><code class="highlighter-rouge">mediaType</code> String - Type of the node the context menu was invoked on. Can be <code class="highlighter-rouge">none</code>, <code class="highlighter-rouge">image</code>, <code class="highlighter-rouge">audio</code>, <code class="highlighter-rouge">video</code>, <code class="highlighter-rouge">canvas</code>, <code class="highlighter-rouge">file</code> or <code class="highlighter-rouge">plugin</code>.</li>\n<li><code class="highlighter-rouge">hasImageContents</code> Boolean - Whether the context menu was invoked on an image which has non-empty contents.</li>\n<li><code class="highlighter-rouge">isEditable</code> Boolean - Whether the context is editable.</li>\n<li><code class="highlighter-rouge">selectionText</code> String - Text of the selection that the context menu was invoked on.</li>\n<li><code class="highlighter-rouge">titleText</code> String - Title or alt text of the selection that the context was invoked on.</li>\n<li><code class="highlighter-rouge">misspelledWord</code> String - The misspelled word under the cursor, if any.</li>\n<li><code class="highlighter-rouge">frameCharset</code> String - The character encoding of the frame on which the menu was invoked.</li>\n<li><code class="highlighter-rouge">inputFieldType</code> String - If the context menu was invoked on an input field, the type of that field. Possible values are <code class="highlighter-rouge">none</code>, <code class="highlighter-rouge">plainText</code>, <code class="highlighter-rouge">password</code>, <code class="highlighter-rouge">other</code>.</li>\n<li><code class="highlighter-rouge">menuSourceType</code> String - Input source that invoked the context menu. Can be <code class="highlighter-rouge">none</code>, <code class="highlighter-rouge">mouse</code>, <code class="highlighter-rouge">keyboard</code>, <code class="highlighter-rouge">touch</code>, <code class="highlighter-rouge">touchMenu</code>.</li>\n<li><code class="highlighter-rouge">mediaFlags</code> Object - The flags for the media element the context menu was invoked on.\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">inError</code> Boolean - Whether the media element has crashed.</li>\n<li><code class="highlighter-rouge">isPaused</code> Boolean - Whether the media element is paused.</li>\n<li><code class="highlighter-rouge">isMuted</code> Boolean - Whether the media element is muted.</li>\n<li><code class="highlighter-rouge">hasAudio</code> Boolean - Whether the media element has audio.</li>\n<li><code class="highlighter-rouge">isLooping</code> Boolean - Whether the media element is looping.</li>\n<li><code class="highlighter-rouge">isControlsVisible</code> Boolean - Whether the media element   s controls are visible.</li>\n<li><code class="highlighter-rouge">canToggleControls</code> Boolean - Whether the media element   s controls are toggleable.</li>\n<li><code class="highlighter-rouge">canRotate</code> Boolean - Whether the media element can be rotated.</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">editFlags</code> Object - These flags indicate whether the renderer believes it is able to perform the corresponding action.\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">canUndo</code> Boolean - Whether the renderer believes it can undo.</li>\n<li><code class="highlighter-rouge">canRedo</code> Boolean - Whether the renderer believes it can redo.</li>\n<li><code class="highlighter-rouge">canCut</code> Boolean - Whether the renderer believes it can cut.</li>\n<li><code class="highlighter-rouge">canCopy</code> Boolean - Whether the renderer believes it can copy</li>\n<li><code class="highlighter-rouge">canPaste</code> Boolean - Whether the renderer believes it can paste.</li>\n<li><code class="highlighter-rouge">canDelete</code> Boolean - Whether the renderer believes it can delete.</li>\n<li><code class="highlighter-rouge">canSelectAll</code> Boolean - Whether the renderer believes it can select all.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">inError</code> Boolean - Whether the media element has crashed.</li>\n<li><code class="highlighter-rouge">isPaused</code> Boolean - Whether the media element is paused.</li>\n<li><code class="highlighter-rouge">isMuted</code> Boolean - Whether the media element is muted.</li>\n<li><code class="highlighter-rouge">hasAudio</code> Boolean - Whether the media element has audio.</li>\n<li><code class="highlighter-rouge">isLooping</code> Boolean - Whether the media element is looping.</li>\n<li><code class="highlighter-rouge">isControlsVisible</code> Boolean - Whether the media element   s controls are visible.</li>\n<li><code class="highlighter-rouge">canToggleControls</code> Boolean - Whether the media element   s controls are toggleable.</li>\n<li><code class="highlighter-rouge">canRotate</code> Boolean - Whether the media element can be rotated.</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">canUndo</code> Boolean - Whether the renderer believes it can undo.</li>\n<li><code class="highlighter-rouge">canRedo</code> Boolean - Whether the renderer believes it can redo.</li>\n<li><code class="highlighter-rouge">canCut</code> Boolean - Whether the renderer believes it can cut.</li>\n<li><code class="highlighter-rouge">canCopy</code> Boolean - Whether the renderer believes it can copy</li>\n<li><code class="highlighter-rouge">canPaste</code> Boolean - Whether the renderer believes it can paste.</li>\n<li><code class="highlighter-rouge">canDelete</code> Boolean - Whether the renderer believes it can delete.</li>\n<li><code class="highlighter-rouge">canSelectAll</code> Boolean - Whether the renderer believes it can select all.</li>\n</ul><p>Emitted when there is a new context menu that needs to be handled.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-context-menu
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">request</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">url</code> URL</li>\n<li><code class="highlighter-rouge">referrer</code> URL</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">authInfo</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">isProxy</code> Boolean</li>\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">host</code> String</li>\n<li><code class="highlighter-rouge">port</code> Integer</li>\n<li><code class="highlighter-rouge">realm</code> String</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">username</code> String</li>\n<li><code class="highlighter-rouge">password</code> String</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">url</code> URL</li>\n<li><code class="highlighter-rouge">referrer</code> URL</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">isProxy</code> Boolean</li>\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">host</code> String</li>\n<li><code class="highlighter-rouge">port</code> Integer</li>\n<li><code class="highlighter-rouge">realm</code> String</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">username</code> String</li>\n<li><code class="highlighter-rouge">password</code> String</li>\n</ul><p>Emitted when <code class="highlighter-rouge">webContents</code> wants to do basic auth.</p><p>The usage is the same with app</code>.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-login
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">result</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">requestId</code> Integer</li>\n<li><code class="highlighter-rouge">activeMatchOrdinal</code> Integer - Position of the active match.</li>\n<li><code class="highlighter-rouge">matches</code> Integer - Number of Matches.</li>\n<li><code class="highlighter-rouge">selectionArea</code> Object - Coordinates of first match region.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">requestId</code> Integer</li>\n<li><code class="highlighter-rouge">activeMatchOrdinal</code> Integer - Position of the active match.</li>\n<li><code class="highlighter-rouge">matches</code> Integer - Number of Matches.</li>\n<li><code class="highlighter-rouge">selectionArea</code> Object - Coordinates of first match region.</li>\n</ul><p>Emitted when a result is available for [<code class="highlighter-rouge">webContents.findInPage</code>] request.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-found-in-page
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">status</code> Boolean</li>\n<li><code class="highlighter-rouge">newURL</code> String</li>\n<li><code class="highlighter-rouge">originalURL</code> String</li>\n<li><code class="highlighter-rouge">httpResponseCode</code> Integer</li>\n<li><code class="highlighter-rouge">requestMethod</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">headers</code> Object</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n</ul><p>Emitted when details regarding a requested resource are available. <code class="highlighter-rouge">status</code> indicates the socket connection to download the resource.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-did-get-response-details
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">type</code> String</li>\n<li><code class="highlighter-rouge">image</code> NativeImage (optional)</li>\n<li><code class="highlighter-rouge">scale</code> Float (optional) - scaling factor for the custom cursor</li>\n<li><code class="highlighter-rouge">size</code> Object (optional) - the size of the <code class="highlighter-rouge">image</code>\n<ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">hotspot</code> Object (optional) - coordinates of the custom cursor   s hotspot\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Integer - x coordinate</li>\n<li><code class="highlighter-rouge">y</code> Integer - y coordinate</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Integer - x coordinate</li>\n<li><code class="highlighter-rouge">y</code> Integer - y coordinate</li>\n</ul><p>Emitted when the cursor   s type changes. The <code class="highlighter-rouge">type</code> parameter can be <code class="highlighter-rouge">default</code>, <code class="highlighter-rouge">crosshair</code>, <code class="highlighter-rouge">pointer</code>, <code class="highlighter-rouge">text</code>, <code class="highlighter-rouge">wait</code>, <code class="highlighter-rouge">help</code>, <code class="highlighter-rouge">e-resize</code>, <code class="highlighter-rouge">n-resize</code>, <code class="highlighter-rouge">ne-resize</code>, <code class="highlighter-rouge">nw-resize</code>, <code class="highlighter-rouge">s-resize</code>, <code class="highlighter-rouge">se-resize</code>, <code class="highlighter-rouge">sw-resize</code>, <code class="highlighter-rouge">w-resize</code>, <code class="highlighter-rouge">ns-resize</code>, <code class="highlighter-rouge">ew-resize</code>, <code class="highlighter-rouge">nesw-resize</code>, <code class="highlighter-rouge">nwse-resize</code>, <code class="highlighter-rouge">col-resize</code>, <code class="highlighter-rouge">row-resize</code>, <code class="highlighter-rouge">m-panning</code>, <code class="highlighter-rouge">e-panning</code>, <code class="highlighter-rouge">n-panning</code>, <code class="highlighter-rouge">ne-panning</code>, <code class="highlighter-rouge">nw-panning</code>, <code class="highlighter-rouge">s-panning</code>, <code class="highlighter-rouge">se-panning</code>, <code class="highlighter-rouge">sw-panning</code>, <code class="highlighter-rouge">w-panning</code>, <code class="highlighter-rouge">move</code>, <code class="highlighter-rouge">vertical-text</code>, <code class="highlighter-rouge">cell</code>, <code class="highlighter-rouge">context-menu</code>, <code class="highlighter-rouge">alias</code>, <code class="highlighter-rouge">progress</code>, <code class="highlighter-rouge">nodrop</code>, <code class="highlighter-rouge">copy</code>, <code class="highlighter-rouge">none</code>, <code class="highlighter-rouge">not-allowed</code>, <code class="highlighter-rouge">zoom-in</code>, <code class="highlighter-rouge">zoom-out</code>, <code class="highlighter-rouge">grab</code>, <code class="highlighter-rouge">grabbing</code>, <code class="highlighter-rouge">custom</code>.</p><p>If the <code class="highlighter-rouge">type</code> parameter is <code class="highlighter-rouge">custom</code>, the <code class="highlighter-rouge">image</code> parameter will hold the custom cursor image in a <code class="highlighter-rouge">NativeImage</code>, and <code class="highlighter-rouge">scale</code>, <code class="highlighter-rouge">size</code> and <code class="highlighter-rouge">hotspot</code> will hold additional information about the custom cursor.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-cursor-changed
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n</ul><p>Emitted when a navigation is done.</p><p>This event is not emitted for in-page navigations, such as clicking anchor links or updating the <code class="highlighter-rouge">window.location.hash</code>. Use <code class="highlighter-rouge">did-navigate-in-page</code> event for this purpose.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-did-navigate
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n</ul><p>Emitted when a user or the page wants to start navigation. It can happen when the <code class="highlighter-rouge">window.location</code> object is changed or a user clicks a link in the page.</p><p>This event will not emit when the navigation is started programmatically with APIs like <code class="highlighter-rouge">webContents.loadURL</code> and <code class="highlighter-rouge">webContents.back</code>.</p><p>It is also not emitted for in-page navigations, such as clicking anchor links or updating the <code class="highlighter-rouge">window.location.hash</code>. Use <code class="highlighter-rouge">did-navigate-in-page</code> event for this purpose.</p><p>Calling <code class="highlighter-rouge">event.preventDefault()</code> will prevent the navigation.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-will-navigate
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n</ul><p>Emitted when mouse moves over a link or the keyboard moves the focus to a link.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-update-target-url
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">error</code> String - The error code</li>\n<li><code class="highlighter-rouge">certificate</code> Certificate</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">isTrusted</code> Boolean - Indicates whether the certificate can be considered trusted</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">isTrusted</code> Boolean - Indicates whether the certificate can be considered trusted</li>\n</ul><p>Emitted when failed to verify the <code class="highlighter-rouge">certificate</code> for <code class="highlighter-rouge">url</code>.</p><p>The usage is the same with app</code>.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-certificate-error
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">frameName</code> String</li>\n<li><code class="highlighter-rouge">disposition</code> String - Can be <code class="highlighter-rouge">default</code>, <code class="highlighter-rouge">foreground-tab</code>, <code class="highlighter-rouge">background-tab</code>, <code class="highlighter-rouge">new-window</code>, <code class="highlighter-rouge">save-to-disk</code> and <code class="highlighter-rouge">other</code>.</li>\n<li><code class="highlighter-rouge">options</code> Object - The options which will be used for creating the new <code class="highlighter-rouge">BrowserWindow</code>.</li>\n<li><code class="highlighter-rouge">additionalFeatures</code> String[] - The non-standard features (features not handled by Chromium or Electron) given to <code class="highlighter-rouge">window.open()</code>.</li>\n</ul><p>Emitted when the page requests to open a new window for a <code class="highlighter-rouge">url</code>. It could be requested by <code class="highlighter-rouge">window.open</code> or an external link like <code class="highlighter-rouge">&lt;a target='_blank'&gt;</code>.</p><p>By default a new <code class="highlighter-rouge">BrowserWindow</code> will be created for the <code class="highlighter-rouge">url</code>.</p><p>Calling <code class="highlighter-rouge">event.preventDefault()</code> will prevent creating new windows. In such case, the <code class="highlighter-rouge">event.newGuest</code> may be set with a reference to a <code class="highlighter-rouge">BrowserWindow</code> instance to make it used by the Electron   s runtime.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-new-window
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">isMainFrame</code> Boolean</li>\n</ul><p>Emitted when an in-page navigation happened.</p><p>When in-page navigation happens, the page URL changes but does not cause navigation outside of the page. Examples of this occurring are when anchor links are clicked or when the DOM <code class="highlighter-rouge">hashchange</code> event is triggered.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-did-navigate-in-page
web contents web-contents	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Event</li>\n<li><code class="highlighter-rouge">url</code> URL</li>\n<li><code class="highlighter-rouge">certificateList</code> Certificate[]</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">certificate</code> Certificate - Must be a certificate from the given list</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">certificate</code> Certificate - Must be a certificate from the given list</li>\n</ul><p>Emitted when a client certificate is requested.</p><p>The usage is the same with app</code>.</p></section>	http://electron.atom.io/docs/api/web-contents/#event-select-client-certificate
web contents web-contents	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">type</code> String (<strong>required</strong>) - The type of the event, can be <code class="highlighter-rouge">mouseDown</code>, <code class="highlighter-rouge">mouseUp</code>, <code class="highlighter-rouge">mouseEnter</code>, <code class="highlighter-rouge">mouseLeave</code>, <code class="highlighter-rouge">contextMenu</code>, <code class="highlighter-rouge">mouseWheel</code>, <code class="highlighter-rouge">mouseMove</code>, <code class="highlighter-rouge">keyDown</code>, <code class="highlighter-rouge">keyUp</code>, <code class="highlighter-rouge">char</code>.</li>\n<li><code class="highlighter-rouge">modifiers</code> String[] - An array of modifiers of the event, can include <code class="highlighter-rouge">shift</code>, <code class="highlighter-rouge">control</code>, <code class="highlighter-rouge">alt</code>, <code class="highlighter-rouge">meta</code>, <code class="highlighter-rouge">isKeypad</code>, <code class="highlighter-rouge">isAutoRepeat</code>, <code class="highlighter-rouge">leftButtonDown</code>, <code class="highlighter-rouge">middleButtonDown</code>, <code class="highlighter-rouge">rightButtonDown</code>, <code class="highlighter-rouge">capsLock</code>, <code class="highlighter-rouge">numLock</code>, <code class="highlighter-rouge">left</code>, <code class="highlighter-rouge">right</code>.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">type</code> String (<strong>required</strong>) - The type of the event, can be <code class="highlighter-rouge">mouseDown</code>, <code class="highlighter-rouge">mouseUp</code>, <code class="highlighter-rouge">mouseEnter</code>, <code class="highlighter-rouge">mouseLeave</code>, <code class="highlighter-rouge">contextMenu</code>, <code class="highlighter-rouge">mouseWheel</code>, <code class="highlighter-rouge">mouseMove</code>, <code class="highlighter-rouge">keyDown</code>, <code class="highlighter-rouge">keyUp</code>, <code class="highlighter-rouge">char</code>.</li>\n<li><code class="highlighter-rouge">modifiers</code> String[] - An array of modifiers of the event, can include <code class="highlighter-rouge">shift</code>, <code class="highlighter-rouge">control</code>, <code class="highlighter-rouge">alt</code>, <code class="highlighter-rouge">meta</code>, <code class="highlighter-rouge">isKeypad</code>, <code class="highlighter-rouge">isAutoRepeat</code>, <code class="highlighter-rouge">leftButtonDown</code>, <code class="highlighter-rouge">middleButtonDown</code>, <code class="highlighter-rouge">rightButtonDown</code>, <code class="highlighter-rouge">capsLock</code>, <code class="highlighter-rouge">numLock</code>, <code class="highlighter-rouge">left</code>, <code class="highlighter-rouge">right</code>.</li>\n</ul><p>Sends an input <code class="highlighter-rouge">event</code> to the page.</p><p>For keyboard events, the <code class="highlighter-rouge">event</code> object also have following properties:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">keyCode</code> String (<strong>required</strong>) - The character that will be sent as the keyboard event. Should only use the valid key codes in Accelerator.</li>\n</ul><p>For mouse events, the <code class="highlighter-rouge">event</code> object also have following properties:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Integer (<strong>required</strong>)</li>\n<li><code class="highlighter-rouge">y</code> Integer (<strong>required</strong>)</li>\n<li><code class="highlighter-rouge">button</code> String - The button pressed, can be <code class="highlighter-rouge">left</code>, <code class="highlighter-rouge">middle</code>, <code class="highlighter-rouge">right</code></li>\n<li><code class="highlighter-rouge">globalX</code> Integer</li>\n<li><code class="highlighter-rouge">globalY</code> Integer</li>\n<li><code class="highlighter-rouge">movementX</code> Integer</li>\n<li><code class="highlighter-rouge">movementY</code> Integer</li>\n<li><code class="highlighter-rouge">clickCount</code> Integer</li>\n</ul><p>For the <code class="highlighter-rouge">mouseWheel</code> event, the <code class="highlighter-rouge">event</code> object also have following properties:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">deltaX</code> Integer</li>\n<li><code class="highlighter-rouge">deltaY</code> Integer</li>\n<li><code class="highlighter-rouge">wheelTicksX</code> Integer</li>\n<li><code class="highlighter-rouge">wheelTicksY</code> Integer</li>\n<li><code class="highlighter-rouge">accelerationRatioX</code> Integer</li>\n<li><code class="highlighter-rouge">accelerationRatioY</code> Integer</li>\n<li><code class="highlighter-rouge">hasPreciseScrollingDeltas</code> Boolean</li>\n<li><code class="highlighter-rouge">canScroll</code> Boolean</li>\n</ul></section>	http://electron.atom.io/docs/api/web-contents/#event-event
web frame	A										<section class="prog__container"><p>Customize the rendering of the current web page.</p><p>Process: Renderer</p><p>An example of zooming current page to 200%.</p><pre><code>const {webFrame} = require('electron')\n\nwebFrame.setZoomFactor(2)\n\n</code></pre></section>	http://electron.atom.io/docs/api/web-frame
web request	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/web-request
webContents.fromId	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> Integer</li>\n</ul><p>Returns <code class="highlighter-rouge">WebContents</code> - A WebContents instance with the given ID.</p><p>Render and control the contents of a BrowserWindow instance.</p><p>Process: Main</p></section>	http://electron.atom.io/docs/api/web-contents/#webcontentsfromidid
webContents.getAllWebContents	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">WebContents[]</code> - An array of all <code class="highlighter-rouge">WebContents</code> instances. This will contain web contents for all windows, webviews, opened devtools, and devtools extension background pages.</p></section>	http://electron.atom.io/docs/api/web-contents/#webcontentsgetallwebcontents
webContents.getFocusedWebContents	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">WebContents</code> - The web contents that is focused in this application, otherwise returns <code class="highlighter-rouge">null</code>.</p></section>	http://electron.atom.io/docs/api/web-contents/#webcontentsgetfocusedwebcontents
webFrame.executeJavaScript	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">code</code> String</li>\n<li><code class="highlighter-rouge">userGesture</code> Boolean (optional) - Default is <code class="highlighter-rouge">false</code>.</li>\n<li><code class="highlighter-rouge">callback</code> Function (optional) - Called after script has been executed.\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">result</code> Any</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">result</code> Any</li>\n</ul><p>Evaluates <code class="highlighter-rouge">code</code> in page.</p><p>In the browser window some HTML APIs like <code class="highlighter-rouge">requestFullScreen</code> can only be invoked by a gesture from the user. Setting <code class="highlighter-rouge">userGesture</code> to <code class="highlighter-rouge">true</code> will remove this limitation.</p></section>	http://electron.atom.io/docs/api/web-frame/#webframeexecutejavascriptcode-usergesture-callback
webFrame.getResourceUsage	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Object</code>:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">images</code> MemoryUsageDetails</li>\n<li><code class="highlighter-rouge">cssStyleSheets</code> MemoryUsageDetails</li>\n<li><code class="highlighter-rouge">xslStyleSheets</code> MemoryUsageDetails</li>\n<li><code class="highlighter-rouge">fonts</code> MemoryUsageDetails</li>\n<li><code class="highlighter-rouge">other</code> MemoryUsageDetails</li>\n</ul><p>Returns an object describing usage information of Blink s internal memory caches.</p><pre><code>const {webFrame} = require('electron')\nconsole.log(webFrame.getResourceUsage())\n\n</code></pre><p>This will generate:</p><pre><code>{\n  images: {\n    count: 22,\n    size: 2549,\n    liveSize: 2542\n  },\n  cssStyleSheets: { /* same with "images" */ },\n  xslStyleSheets: { /* same with "images" */ },\n  fonts: { /* same with "images" */ },\n  other: { /* same with "images" */ }\n}\n\n</code></pre></section>	http://electron.atom.io/docs/api/web-frame/#webframegetresourceusage
webFrame.getZoomFactor	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Number</code> - The current zoom factor.</p></section>	http://electron.atom.io/docs/api/web-frame/#webframegetzoomfactor
webFrame.getZoomLevel	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Number</code> - The current zoom level.</p></section>	http://electron.atom.io/docs/api/web-frame/#webframegetzoomlevel
webFrame.insertText	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul><p>Inserts <code class="highlighter-rouge">text</code> to the focused element.</p></section>	http://electron.atom.io/docs/api/web-frame/#webframeinserttexttext
webFrame.registerURLSchemeAsBypassingCSP	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">scheme</code> String</li>\n</ul><p>Resources will be loaded from this <code class="highlighter-rouge">scheme</code> regardless of the current page   s Content Security Policy.</p></section>	http://electron.atom.io/docs/api/web-frame/#webframeregisterurlschemeasbypassingcspscheme
webFrame.registerURLSchemeAsPrivileged	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">scheme</code> String</li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">secure</code> Boolean - (optional) Default true.</li>\n<li><code class="highlighter-rouge">bypassCSP</code> Boolean - (optional) Default true.</li>\n<li><code class="highlighter-rouge">allowServiceWorkers</code> Boolean - (optional) Default true.</li>\n<li><code class="highlighter-rouge">supportFetchAPI</code> Boolean - (optional) Default true.</li>\n<li><code class="highlighter-rouge">corsEnabled</code> Boolean - (optional) Default true.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">secure</code> Boolean - (optional) Default true.</li>\n<li><code class="highlighter-rouge">bypassCSP</code> Boolean - (optional) Default true.</li>\n<li><code class="highlighter-rouge">allowServiceWorkers</code> Boolean - (optional) Default true.</li>\n<li><code class="highlighter-rouge">supportFetchAPI</code> Boolean - (optional) Default true.</li>\n<li><code class="highlighter-rouge">corsEnabled</code> Boolean - (optional) Default true.</li>\n</ul><p>Registers the <code class="highlighter-rouge">scheme</code> as secure, bypasses content security policy for resources, allows registering ServiceWorker and supports fetch API.</p><p>Specify an option with the value of <code class="highlighter-rouge">false</code> to omit it from the registration. An example of registering a privileged scheme, without bypassing Content Security Policy:</p><pre><code>const {webFrame} = require('electron')\nwebFrame.registerURLSchemeAsPrivileged('foo', { bypassCSP: false })\n\n</code></pre></section>	http://electron.atom.io/docs/api/web-frame/#webframeregisterurlschemeasprivilegedscheme-options
webFrame.registerURLSchemeAsSecure	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">scheme</code> String</li>\n</ul><p>Registers the <code class="highlighter-rouge">scheme</code> as secure scheme.</p><p>Secure schemes do not trigger mixed content warnings. For example, <code class="highlighter-rouge">https</code> and <code class="highlighter-rouge">data</code> are secure schemes because they cannot be corrupted by active network attackers.</p></section>	http://electron.atom.io/docs/api/web-frame/#webframeregisterurlschemeassecurescheme
webFrame.setLayoutZoomLevelLimits	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">minimumLevel</code> Number</li>\n<li><code class="highlighter-rouge">maximumLevel</code> Number</li>\n</ul><p>Sets the maximum and minimum layout-based (i.e. non-visual) zoom level.</p></section>	http://electron.atom.io/docs/api/web-frame/#webframesetlayoutzoomlevellimitsminimumlevel-maximumlevel
webFrame.setSpellCheckProvider	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">language</code> String</li>\n<li><code class="highlighter-rouge">autoCorrectWord</code> Boolean</li>\n<li><code class="highlighter-rouge">provider</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">spellCheck</code> Function - Returns <code class="highlighter-rouge">Boolean</code>\n<ul class="prog__ul">\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">spellCheck</code> Function - Returns <code class="highlighter-rouge">Boolean</code>\n<ul class="prog__ul">\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">text</code> String</li>\n</ul><p>Sets a provider for spell checking in input fields and text areas.</p><p>The <code class="highlighter-rouge">provider</code> must be an object that has a <code class="highlighter-rouge">spellCheck</code> method that returns whether the word passed is correctly spelled.</p><p>An example of using node-spellchecker as provider:</p><pre><code>const {webFrame} = require('electron')\nwebFrame.setSpellCheckProvider('en-US', true, {\n  spellCheck (text) {\n    return !(require('spellchecker').isMisspelled(text))\n  }\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/web-frame/#webframesetspellcheckproviderlanguage-autocorrectword-provider
webFrame.setVisualZoomLevelLimits	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">minimumLevel</code> Number</li>\n<li><code class="highlighter-rouge">maximumLevel</code> Number</li>\n</ul><p>Sets the maximum and minimum pinch-to-zoom level.</p></section>	http://electron.atom.io/docs/api/web-frame/#webframesetvisualzoomlevellimitsminimumlevel-maximumlevel
webFrame.setZoomFactor	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">factor</code> Number - Zoom factor.</li>\n</ul><p>Changes the zoom factor to the specified factor. Zoom factor is zoom percent divided by 100, so 300% = 3.0.</p></section>	http://electron.atom.io/docs/api/web-frame/#webframesetzoomfactorfactor
webFrame.setZoomLevel	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">level</code> Number - Zoom level</li>\n</ul><p>Changes the zoom level to the specified level. The original size is 0 and each increment above or below represents zooming 20% larger or smaller to default limits of 300% and 50% of original size, respectively.</p></section>	http://electron.atom.io/docs/api/web-frame/#webframesetzoomlevellevel
webFrame.setZoomLevelLimits	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">minimumLevel</code> Number</li>\n<li><code class="highlighter-rouge">maximumLevel</code> Number</li>\n</ul><p><strong>Deprecated:</strong> Call <code class="highlighter-rouge">setVisualZoomLevelLimits</code> instead to set the visual zoom level limits. This method will be removed in Electron 2.0.</p></section>	http://electron.atom.io/docs/api/web-frame/#webframesetzoomlevellimitsminimumlevel-maximumlevel
webRequest.onBeforeRedirect	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">filter</code> Object</li>\n<li><code class="highlighter-rouge">listener</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">details</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> String</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">redirectURL</code> String</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">ip</code> String (optional) - The server IP address that the request was actually sent to.</li>\n<li><code class="highlighter-rouge">fromCache</code> Boolean</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">details</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> String</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">redirectURL</code> String</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">ip</code> String (optional) - The server IP address that the request was actually sent to.</li>\n<li><code class="highlighter-rouge">fromCache</code> Boolean</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> String</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">redirectURL</code> String</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">ip</code> String (optional) - The server IP address that the request was actually sent to.</li>\n<li><code class="highlighter-rouge">fromCache</code> Boolean</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n</ul><p>The <code class="highlighter-rouge">listener</code> will be called with <code class="highlighter-rouge">listener(details)</code> when a server initiated redirect is about to occur.</p></section>	http://electron.atom.io/docs/api/web-request/#webrequestonbeforeredirectfilter-listener
webRequest.onBeforeRequest	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">filter</code> Object</li>\n<li><code class="highlighter-rouge">listener</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">details</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">response</code> Object\n            <ul class="prog__ul">\n<li><code class="highlighter-rouge">cancel</code> Boolean (optional)</li>\n<li><code class="highlighter-rouge">redirectURL</code> String (optional) - The original request is prevented from being sent or completed and is instead redirected to the given URL.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">details</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">response</code> Object\n            <ul class="prog__ul">\n<li><code class="highlighter-rouge">cancel</code> Boolean (optional)</li>\n<li><code class="highlighter-rouge">redirectURL</code> String (optional) - The original request is prevented from being sent or completed and is instead redirected to the given URL.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">uploadData</code> UploadData[]</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">response</code> Object\n            <ul class="prog__ul">\n<li><code class="highlighter-rouge">cancel</code> Boolean (optional)</li>\n<li><code class="highlighter-rouge">redirectURL</code> String (optional) - The original request is prevented from being sent or completed and is instead redirected to the given URL.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">cancel</code> Boolean (optional)</li>\n<li><code class="highlighter-rouge">redirectURL</code> String (optional) - The original request is prevented from being sent or completed and is instead redirected to the given URL.</li>\n</ul><p>The <code class="highlighter-rouge">listener</code> will be called with <code class="highlighter-rouge">listener(details, callback)</code> when a request is about to occur.</p><p>The <code class="highlighter-rouge">uploadData</code> is an array of <code class="highlighter-rouge">UploadData</code> objects.</p><p>The <code class="highlighter-rouge">callback</code> has to be called with an <code class="highlighter-rouge">response</code> object.</p></section>	http://electron.atom.io/docs/api/web-request/#webrequestonbeforerequestfilter-listener
webRequest.onBeforeSendHeaders	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">filter</code> Object</li>\n<li><code class="highlighter-rouge">listener</code> Function</li>\n</ul><p>The <code class="highlighter-rouge">listener</code> will be called with <code class="highlighter-rouge">listener(details, callback)</code> before sending an HTTP request, once the request headers are available. This may occur after a TCP connection is made to the server, but before any http data is sent.</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">details</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">requestHeaders</code> Object</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">response</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">cancel</code> Boolean (optional)</li>\n<li><code class="highlighter-rouge">requestHeaders</code> Object (optional) - When provided, request will be made with these headers.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">requestHeaders</code> Object</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">response</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">cancel</code> Boolean (optional)</li>\n<li><code class="highlighter-rouge">requestHeaders</code> Object (optional) - When provided, request will be made with these headers.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">cancel</code> Boolean (optional)</li>\n<li><code class="highlighter-rouge">requestHeaders</code> Object (optional) - When provided, request will be made with these headers.</li>\n</ul><p>The <code class="highlighter-rouge">callback</code> has to be called with an <code class="highlighter-rouge">response</code> object.</p></section>	http://electron.atom.io/docs/api/web-request/#webrequestonbeforesendheadersfilter-listener
webRequest.onCompleted	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">filter</code> Object</li>\n<li><code class="highlighter-rouge">listener</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">details</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n<li><code class="highlighter-rouge">fromCache</code> Boolean</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">statusLine</code> String</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">details</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n<li><code class="highlighter-rouge">fromCache</code> Boolean</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">statusLine</code> String</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n<li><code class="highlighter-rouge">fromCache</code> Boolean</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">statusLine</code> String</li>\n</ul><p>The <code class="highlighter-rouge">listener</code> will be called with <code class="highlighter-rouge">listener(details)</code> when a request is completed.</p></section>	http://electron.atom.io/docs/api/web-request/#webrequestoncompletedfilter-listener
webRequest.onHeadersReceived	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">filter</code> Object</li>\n<li><code class="highlighter-rouge">listener</code> Function</li>\n</ul><p>The <code class="highlighter-rouge">listener</code> will be called with <code class="highlighter-rouge">listener(details, callback)</code> when HTTP response headers of a request have been received.</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">details</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> String</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">statusLine</code> String</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n</ul>\n</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">response</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">cancel</code> Boolean</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object (optional) - When provided, the server is assumed to have responded with these headers.</li>\n<li><code class="highlighter-rouge">statusLine</code> String (optional) - Should be provided when overriding <code class="highlighter-rouge">responseHeaders</code> to change header status otherwise original response header   s status will be used.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> String</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">statusLine</code> String</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">response</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">cancel</code> Boolean</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object (optional) - When provided, the server is assumed to have responded with these headers.</li>\n<li><code class="highlighter-rouge">statusLine</code> String (optional) - Should be provided when overriding <code class="highlighter-rouge">responseHeaders</code> to change header status otherwise original response header   s status will be used.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">cancel</code> Boolean</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object (optional) - When provided, the server is assumed to have responded with these headers.</li>\n<li><code class="highlighter-rouge">statusLine</code> String (optional) - Should be provided when overriding <code class="highlighter-rouge">responseHeaders</code> to change header status otherwise original response header   s status will be used.</li>\n</ul><p>The <code class="highlighter-rouge">callback</code> has to be called with an <code class="highlighter-rouge">response</code> object.</p></section>	http://electron.atom.io/docs/api/web-request/#webrequestonheadersreceivedfilter-listener
webRequest.onResponseStarted	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">filter</code> Object</li>\n<li><code class="highlighter-rouge">listener</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">details</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n<li><code class="highlighter-rouge">fromCache</code> Boolean - Indicates whether the response was fetched from disk cache.</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">statusLine</code> String</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">details</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n<li><code class="highlighter-rouge">fromCache</code> Boolean - Indicates whether the response was fetched from disk cache.</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">statusLine</code> String</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">responseHeaders</code> Object</li>\n<li><code class="highlighter-rouge">fromCache</code> Boolean - Indicates whether the response was fetched from disk cache.</li>\n<li><code class="highlighter-rouge">statusCode</code> Integer</li>\n<li><code class="highlighter-rouge">statusLine</code> String</li>\n</ul><p>The <code class="highlighter-rouge">listener</code> will be called with <code class="highlighter-rouge">listener(details)</code> when first byte of the response body is received. For HTTP requests, this means that the status line and response headers are available.</p></section>	http://electron.atom.io/docs/api/web-request/#webrequestonresponsestartedfilter-listener
webRequest.onSendHeaders	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">filter</code> Object</li>\n<li><code class="highlighter-rouge">listener</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">details</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">requestHeaders</code> Object</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">details</code> Object\n        <ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">requestHeaders</code> Object</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">id</code> Integer</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">method</code> String</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n<li><code class="highlighter-rouge">timestamp</code> Double</li>\n<li><code class="highlighter-rouge">requestHeaders</code> Object</li>\n</ul><p>The <code class="highlighter-rouge">listener</code> will be called with <code class="highlighter-rouge">listener(details)</code> just before a request is going to be sent to the server, modifications of previous <code class="highlighter-rouge">onBeforeSendHeaders</code> response are visible by the time this listener is fired.</p></section>	http://electron.atom.io/docs/api/web-request/#webrequestonsendheadersfilter-listener
webview tag	A										<section class="prog__container"><p>Display external web content in an isolated frame and process.</p><p>Use the <code class="highlighter-rouge">webview</code> tag to embed    guest    content (such as web pages) in your Electron app. The guest content is contained within the <code class="highlighter-rouge">webview</code> container. An embedded page within your app controls how the guest content is laid out and rendered.</p><p>Unlike an <code class="highlighter-rouge">iframe</code>, the <code class="highlighter-rouge">webview</code> runs in a separate process than your app. It doesn   t have the same permissions as your web page and all interactions between your app and embedded content will be asynchronous. This keeps your app safe from the embedded content.</p><p>For security purposes, <code class="highlighter-rouge">webview</code> can only be used in <code class="highlighter-rouge">BrowserWindow</code>s that have <code class="highlighter-rouge">nodeIntegration</code> enabled.</p></section>	http://electron.atom.io/docs/api/webview-tag
webview tag webview-tag	A										<section class="prog__container"><p>Corresponds to the points in time when the spinner of the tab starts spinning.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-did-start-loading
webview tag webview-tag	A										<section class="prog__container"><p>Corresponds to the points in time when the spinner of the tab stops spinning.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-did-stop-loading
webview tag webview-tag	A										<section class="prog__container"><p>Emitted when DevTools is closed.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-devtools-closed
webview tag webview-tag	A										<section class="prog__container"><p>Emitted when DevTools is opened.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-devtools-opened
webview tag webview-tag	A										<section class="prog__container"><p>Emitted when media is paused or done playing.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-media-paused
webview tag webview-tag	A										<section class="prog__container"><p>Emitted when media starts playing.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-media-started-playing
webview tag webview-tag	A										<section class="prog__container"><p>Fired when document in the given frame is loaded.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-dom-ready
webview tag webview-tag	A										<section class="prog__container"><p>Fired when page enters fullscreen triggered by HTML API.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-enter-html-full-screen
webview tag webview-tag	A										<section class="prog__container"><p>Fired when page leaves fullscreen triggered by HTML API.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-leave-html-full-screen
webview tag webview-tag	A										<section class="prog__container"><p>Fired when the WebContents is destroyed.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-destroyed
webview tag webview-tag	A										<section class="prog__container"><p>Fired when the gpu process is crashed.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-gpu-crashed
webview tag webview-tag	A										<section class="prog__container"><p>Fired when the guest page attempts to close itself.</p><p>The following example code navigates the <code class="highlighter-rouge">webview</code> to <code class="highlighter-rouge">about:blank</code> when the guest attempts to close itself.</p><pre><code>const webview = document.querySelector('webview')\nwebview.addEventListener('close', () => {\n  webview.src = 'about:blank'\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/webview-tag/#event-close
webview tag webview-tag	A										<section class="prog__container"><p>Fired when the navigation is done, i.e. the spinner of the tab will stop spinning, and the <code class="highlighter-rouge">onload</code> event is dispatched.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-did-finish-load
webview tag webview-tag	A										<section class="prog__container"><p>Fired when the renderer process is crashed.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-crashed
webview tag webview-tag	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">channel</code> String</li>\n<li><code class="highlighter-rouge">args</code> Array</li>\n</ul><p>Fired when the guest page has sent an asynchronous message to embedder page.</p><p>With <code class="highlighter-rouge">sendToHost</code> method and <code class="highlighter-rouge">ipc-message</code> event you can easily communicate between guest page and embedder page:</p><pre><code>// In embedder page.\nconst webview = document.querySelector('webview')\nwebview.addEventListener('ipc-message', (event) => {\n  console.log(event.channel)\n  // Prints "pong"\n})\nwebview.send('ping')\n\n</code></pre><pre><code>// In guest page.\nconst {ipcRenderer} = require('electron')\nipcRenderer.on('ping', () => {\n  ipcRenderer.sendToHost('pong')\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/webview-tag/#event-ipc-message
webview tag webview-tag	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">errorCode</code> Integer</li>\n<li><code class="highlighter-rouge">errorDescription</code> String</li>\n<li><code class="highlighter-rouge">validatedURL</code> String</li>\n<li><code class="highlighter-rouge">isMainFrame</code> Boolean</li>\n</ul><p>This event is like <code class="highlighter-rouge">did-finish-load</code>, but fired when the load failed or was cancelled, e.g. <code class="highlighter-rouge">window.stop()</code> is invoked.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-did-fail-load
webview tag webview-tag	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">favicons</code> String[] - Array of URLs.</li>\n</ul><p>Fired when page receives favicon urls.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-page-favicon-updated
webview tag webview-tag	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">isMainFrame</code> Boolean</li>\n</ul><p>Fired when a frame has done navigation.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-did-frame-finish-load
webview tag webview-tag	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">isMainFrame</code> Boolean</li>\n<li><code class="highlighter-rouge">url</code> String</li>\n</ul><p>Emitted when an in-page navigation happened.</p><p>When in-page navigation happens, the page URL changes but does not cause navigation outside of the page. Examples of this occurring are when anchor links are clicked or when the DOM <code class="highlighter-rouge">hashchange</code> event is triggered.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-did-navigate-in-page
webview tag webview-tag	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">level</code> Integer</li>\n<li><code class="highlighter-rouge">message</code> String</li>\n<li><code class="highlighter-rouge">line</code> Integer</li>\n<li><code class="highlighter-rouge">sourceId</code> String</li>\n</ul><p>Fired when the guest window logs a console message.</p><p>The following example code forwards all log messages to the embedder s console without regard for log level or other properties.</p><pre><code>const webview = document.querySelector('webview')\nwebview.addEventListener('console-message', (e) => {\n  console.log('Guest page logged a message:', e.message)\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/webview-tag/#event-console-message
webview tag webview-tag	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">name</code> String</li>\n<li><code class="highlighter-rouge">version</code> String</li>\n</ul><p>Fired when a plugin process is crashed.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-plugin-crashed
webview tag webview-tag	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">oldURL</code> String</li>\n<li><code class="highlighter-rouge">newURL</code> String</li>\n<li><code class="highlighter-rouge">isMainFrame</code> Boolean</li>\n</ul><p>Fired when a redirect was received while requesting a resource.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-did-get-redirect-request
webview tag webview-tag	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">result</code> Object\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">requestId</code> Integer</li>\n<li><code class="highlighter-rouge">activeMatchOrdinal</code> Integer - Position of the active match.</li>\n<li><code class="highlighter-rouge">matches</code> Integer - Number of Matches.</li>\n<li><code class="highlighter-rouge">selectionArea</code> Object - Coordinates of first match region.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">requestId</code> Integer</li>\n<li><code class="highlighter-rouge">activeMatchOrdinal</code> Integer - Position of the active match.</li>\n<li><code class="highlighter-rouge">matches</code> Integer - Number of Matches.</li>\n<li><code class="highlighter-rouge">selectionArea</code> Object - Coordinates of first match region.</li>\n</ul><p>Fired when a result is available for webview.findInPage</code> request.</p><pre><code>const webview = document.querySelector('webview')\nwebview.addEventListener('found-in-page', (e) => {\n  webview.stopFindInPage('keepSelection')\n})\n\nconst requestId = webview.findInPage('test')\nconsole.log(requestId)\n\n</code></pre></section>	http://electron.atom.io/docs/api/webview-tag/#event-found-in-page
webview tag webview-tag	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">status</code> Boolean</li>\n<li><code class="highlighter-rouge">newURL</code> String</li>\n<li><code class="highlighter-rouge">originalURL</code> String</li>\n<li><code class="highlighter-rouge">httpResponseCode</code> Integer</li>\n<li><code class="highlighter-rouge">requestMethod</code> String</li>\n<li><code class="highlighter-rouge">referrer</code> String</li>\n<li><code class="highlighter-rouge">headers</code> Object</li>\n<li><code class="highlighter-rouge">resourceType</code> String</li>\n</ul><p>Fired when details regarding a requested resource is available. <code class="highlighter-rouge">status</code> indicates socket connection to download the resource.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-did-get-response-details
webview tag webview-tag	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">themeColor</code> String</li>\n</ul><p>Emitted when a page s theme color changes. This is usually due to encountering a meta tag:</p><pre><code><meta name='theme-color' content='#ff0000'>\n\n</code></pre></section>	http://electron.atom.io/docs/api/webview-tag/#event-did-change-theme-color
webview tag webview-tag	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">title</code> String</li>\n<li><code class="highlighter-rouge">explicitSet</code> Boolean</li>\n</ul><p>Fired when page title is set during navigation. <code class="highlighter-rouge">explicitSet</code> is false when title is synthesized from file url.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-page-title-updated
webview tag webview-tag	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n</ul><p>Emitted when a navigation is done.</p><p>This event is not emitted for in-page navigations, such as clicking anchor links or updating the <code class="highlighter-rouge">window.location.hash</code>. Use <code class="highlighter-rouge">did-navigate-in-page</code> event for this purpose.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-did-navigate
webview tag webview-tag	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n</ul><p>Emitted when a user or the page wants to start navigation. It can happen when the <code class="highlighter-rouge">window.location</code> object is changed or a user clicks a link in the page.</p><p>This event will not emit when the navigation is started programmatically with APIs like <code class="highlighter-rouge">&lt;webview&gt;.loadURL</code> and <code class="highlighter-rouge">&lt;webview&gt;.back</code>.</p><p>It is also not emitted during in-page navigation, such as clicking anchor links or updating the <code class="highlighter-rouge">window.location.hash</code>. Use <code class="highlighter-rouge">did-navigate-in-page</code> event for this purpose.</p><p>Calling <code class="highlighter-rouge">event.preventDefault()</code> does <strong>NOT</strong> have any effect.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-will-navigate
webview tag webview-tag	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n</ul><p>Emitted when mouse moves over a link or the keyboard moves the focus to a link.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-update-target-url
webview tag webview-tag	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">frameName</code> String</li>\n<li><code class="highlighter-rouge">disposition</code> String - Can be <code class="highlighter-rouge">default</code>, <code class="highlighter-rouge">foreground-tab</code>, <code class="highlighter-rouge">background-tab</code>, <code class="highlighter-rouge">new-window</code>, <code class="highlighter-rouge">save-to-disk</code> and <code class="highlighter-rouge">other</code>.</li>\n<li><code class="highlighter-rouge">options</code> Object - The options which should be used for creating the new <code class="highlighter-rouge">BrowserWindow</code>.</li>\n</ul><p>Fired when the guest page attempts to open a new browser window.</p><p>The following example code opens the new url in system s default browser.</p><pre><code>const {shell} = require('electron')\nconst webview = document.querySelector('webview')\n\nwebview.addEventListener('new-window', (e) => {\n  const protocol = require('url').parse(e.url).protocol\n  if (protocol === 'http:' || protocol === 'https:') {\n    shell.openExternal(e.url)\n  }\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/webview-tag/#event-new-window
webview tag webview-tag	A										<section class="prog__container"><p>Returns:</p><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">isMainFrame</code> Boolean</li>\n</ul><p>Fired when a load has committed. This includes navigation within the current document as well as subframe document-level loads, but does not include asynchronous resource loads.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-load-commit
webview tag webview-tag	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">event</code> Object</li>\n</ul><p>Sends an input <code class="highlighter-rouge">event</code> to the page.</p><p>See event</code> object.</p></section>	http://electron.atom.io/docs/api/webview-tag/#event-event
win.blur	A										<section class="prog__container"><p>Removes focus from the child window.</p></section>	http://electron.atom.io/docs/api/browser-window-proxy/#winblur
win.blur	A										<section class="prog__container"><p>Removes focus from the window.</p></section>	http://electron.atom.io/docs/api/browser-window/#winblur
win.blurWebView	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/browser-window/#winblurwebview
win.capturePage	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">rect</code> Rectangle (optional) - The bounds to capture</li>\n<li><code class="highlighter-rouge">callback</code> Function\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">image</code> NativeImage</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">image</code> NativeImage</li>\n</ul><p>Same as <code class="highlighter-rouge">webContents.capturePage([rect, ]callback)</code>.</p></section>	http://electron.atom.io/docs/api/browser-window/#wincapturepagerect-callback
win.center	A										<section class="prog__container"><p>Moves window to the center of the screen.</p></section>	http://electron.atom.io/docs/api/browser-window/#wincenter
win.close	A										<section class="prog__container"><p>Forcefully closes the child window without calling its unload event.</p></section>	http://electron.atom.io/docs/api/browser-window-proxy/#winclose
win.close	A										<section class="prog__container"><p>Try to close the window. This has the same effect as a user manually clicking the close button of the window. The web page may cancel the close though. See the close event.</p></section>	http://electron.atom.io/docs/api/browser-window/#winclose
win.closeFilePreview 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winclosefilepreview-macos
win.destroy	A										<section class="prog__container"><p>Force closing the window, the <code class="highlighter-rouge">unload</code> and <code class="highlighter-rouge">beforeunload</code> event won   t be emitted for the web page, and <code class="highlighter-rouge">close</code> event will also not be emitted for this window, but it guarantees the <code class="highlighter-rouge">closed</code> event will be emitted.</p></section>	http://electron.atom.io/docs/api/browser-window/#windestroy
win.eval	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">code</code> String</li>\n</ul><p>Evaluates the code in the child window.</p></section>	http://electron.atom.io/docs/api/browser-window-proxy/#winevalcode
win.flashFrame	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">flag</code> Boolean</li>\n</ul><p>Starts or stops flashing the window to attract user   s attention.</p></section>	http://electron.atom.io/docs/api/browser-window/#winflashframeflag
win.focus	A										<section class="prog__container"><p>Focuses on the window.</p></section>	http://electron.atom.io/docs/api/browser-window/#winfocus
win.focus	A										<section class="prog__container"><p>Focuses the child window (brings the window to front).</p></section>	http://electron.atom.io/docs/api/browser-window-proxy/#winfocus
win.focusOnWebView	A										<section class="prog__container"></section>	http://electron.atom.io/docs/api/browser-window/#winfocusonwebview
win.getBounds	A										<section class="prog__container"><p>Returns Rectangle</code></p></section>	http://electron.atom.io/docs/api/browser-window/#wingetbounds
win.getChild	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/browser-window/#wingetchildwindows
win.getContentBounds	A										<section class="prog__container"><p>Returns Rectangle</code></p></section>	http://electron.atom.io/docs/api/browser-window/#wingetcontentbounds
win.getContentSize	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Integer[]</code> - Contains the window   s client area   s width and height.</p></section>	http://electron.atom.io/docs/api/browser-window/#wingetcontentsize
win.getMaximumSize	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Integer[]</code> - Contains the window   s maximum width and height.</p></section>	http://electron.atom.io/docs/api/browser-window/#wingetmaximumsize
win.getMinimumSize	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Integer[]</code> - Contains the window   s minimum width and height.</p></section>	http://electron.atom.io/docs/api/browser-window/#wingetminimumsize
win.getNativeWindowHandle	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Buffer</code> - The platform-specific handle of the window.</p><p>The native type of the handle is <code class="highlighter-rouge">HWND</code> on Windows, <code class="highlighter-rouge">NSView*</code> on macOS, and <code class="highlighter-rouge">Window</code> (<code class="highlighter-rouge">unsigned long</code>) on Linux.</p></section>	http://electron.atom.io/docs/api/browser-window/#wingetnativewindowhandle
win.getParentWindow	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">BrowserWindow</code> - The parent window.</p></section>	http://electron.atom.io/docs/api/browser-window/#wingetparentwindow
win.getPosition	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Integer[]</code> - Contains the window   s current position.</p></section>	http://electron.atom.io/docs/api/browser-window/#wingetposition
win.getRepresentedFilename 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#wingetrepresentedfilename-macos
win.getSize	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Integer[]</code> - Contains the window   s width and height.</p></section>	http://electron.atom.io/docs/api/browser-window/#wingetsize
win.getTitle	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">String</code> - The title of the native window.</p><p><strong>Note:</strong> The title of web page can be different from the title of the native window.</p></section>	http://electron.atom.io/docs/api/browser-window/#wingettitle
win.hasShadow 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winhasshadow-macos
win.hide	A										<section class="prog__container"><p>Hides the window.</p></section>	http://electron.atom.io/docs/api/browser-window/#winhide
win.hookWindowMessage 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/browser-window/#winhookwindowmessagemessage-callback-windows
win.id	A										<section class="prog__container"><p>A <code class="highlighter-rouge">Integer</code> representing the unique ID of the window.</p></section>	http://electron.atom.io/docs/api/browser-window/#winid
win.isAlwaysOnTop	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the window is always on top of other windows.</p></section>	http://electron.atom.io/docs/api/browser-window/#winisalwaysontop
win.isClosable  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winisclosable-macos-windows
win.isDestroyed	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the window is destroyed.</p></section>	http://electron.atom.io/docs/api/browser-window/#winisdestroyed
win.isDocumentEdited 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winisdocumentedited-macos
win.isFocused	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the window is focused.</p></section>	http://electron.atom.io/docs/api/browser-window/#winisfocused
win.isFullScreen	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the window is in fullscreen mode.</p></section>	http://electron.atom.io/docs/api/browser-window/#winisfullscreen
win.isFullScreenable	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the maximize/zoom window button toggles fullscreen mode or maximizes the window.</p></section>	http://electron.atom.io/docs/api/browser-window/#winisfullscreenable
win.isKiosk	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the window is in kiosk mode.</p></section>	http://electron.atom.io/docs/api/browser-window/#winiskiosk
win.isMaximizable  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winismaximizable-macos-windows
win.isMaximized	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the window is maximized.</p></section>	http://electron.atom.io/docs/api/browser-window/#winismaximized
win.isMenuBarAutoHide	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether menu bar automatically hides itself.</p></section>	http://electron.atom.io/docs/api/browser-window/#winismenubarautohide
win.isMenuBarVisible	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the menu bar is visible.</p></section>	http://electron.atom.io/docs/api/browser-window/#winismenubarvisible
win.isMinimizable  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winisminimizable-macos-windows
win.isMinimized	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the window is minimized.</p></section>	http://electron.atom.io/docs/api/browser-window/#winisminimized
win.isModal	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether current window is a modal window.</p></section>	http://electron.atom.io/docs/api/browser-window/#winismodal
win.isMovable  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winismovable-macos-windows
win.isResizable	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the window can be manually resized by user.</p></section>	http://electron.atom.io/docs/api/browser-window/#winisresizable
win.isVisible	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the window is visible to the user.</p></section>	http://electron.atom.io/docs/api/browser-window/#winisvisible
win.isVisibleOnAllWorkspaces	A										<section class="prog__container"><p>Returns <code class="highlighter-rouge">Boolean</code> - Whether the window is visible on all workspaces.</p><p><strong>Note:</strong> This API always returns false on Windows.</p></section>	http://electron.atom.io/docs/api/browser-window/#winisvisibleonallworkspaces
win.isWindowMessageHooked 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/browser-window/#winiswindowmessagehookedmessage-windows
win.loadURL	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">httpReferrer</code> String (optional) - A HTTP Referrer url.</li>\n<li><code class="highlighter-rouge">userAgent</code> String (optional) - A user agent originating the request.</li>\n<li><code class="highlighter-rouge">extraHeaders</code> String (optional) - Extra headers separated by  \n </li>\n<li><code class="highlighter-rouge">postData</code> (UploadBlob)[] - (optional)</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">httpReferrer</code> String (optional) - A HTTP Referrer url.</li>\n<li><code class="highlighter-rouge">userAgent</code> String (optional) - A user agent originating the request.</li>\n<li><code class="highlighter-rouge">extraHeaders</code> String (optional) - Extra headers separated by  \n </li>\n<li><code class="highlighter-rouge">postData</code> (UploadBlob)[] - (optional)</li>\n</ul><p>Same as <code class="highlighter-rouge">webContents.loadURL(url[, options])</code>.</p><p>The <code class="highlighter-rouge">url</code> can be a remote address (e.g. <code class="highlighter-rouge">http://</code>) or a path to a local HTML file using the <code class="highlighter-rouge">file://</code> protocol.</p><p>To ensure that file URLs are properly formatted, it is recommended to use Node s url.format</code> method:</p><pre><code>let url = require('url').format({\n  protocol: 'file',\n  slashes: true,\n  pathname: require('path').join(__dirname, 'index.html')\n})\n\nwin.loadURL(url)\n\n</code></pre><p>You can load a URL using a <code class="highlighter-rouge">POST</code> request with URL-encoded data by doing the following:</p><pre><code>win.loadURL('http://localhost:8000/post', {\n  postData: [{\n    type: 'rawData',\n    bytes: Buffer.from('hello=world')\n  }],\n  extraHeaders: 'Content-Type: application/x-www-form-urlencoded'\n})\n\n</code></pre></section>	http://electron.atom.io/docs/api/browser-window/#winloadurlurl-options
win.maximize	A										<section class="prog__container"><p>Maximizes the window.</p></section>	http://electron.atom.io/docs/api/browser-window/#winmaximize
win.minimize	A										<section class="prog__container"><p>Minimizes the window. On some platforms the minimized window will be shown in the Dock.</p></section>	http://electron.atom.io/docs/api/browser-window/#winminimize
win.postMessage	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">message</code> String</li>\n<li><code class="highlighter-rouge">targetOrigin</code> String</li>\n</ul><p>Sends a message to the child window with the specified origin or <code class="highlighter-rouge">*</code> for no origin preference.</p><p>In addition to these methods, the child window implements <code class="highlighter-rouge">window.opener</code> object with no properties and a single method.</p></section>	http://electron.atom.io/docs/api/browser-window-proxy/#winpostmessagemessage-targetorigin
win.previewFile 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winpreviewfilepath-displayname-macos
win.print	A										<section class="prog__container"><p>Invokes the print dialog on the child window.</p></section>	http://electron.atom.io/docs/api/browser-window-proxy/#winprint
win.reload	A										<section class="prog__container"><p>Same as <code class="highlighter-rouge">webContents.reload</code>.</p></section>	http://electron.atom.io/docs/api/browser-window/#winreload
win.restore	A										<section class="prog__container"><p>Restores the window from minimized state to its previous state.</p></section>	http://electron.atom.io/docs/api/browser-window/#winrestore
win.setAlwaysOnTop	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">flag</code> Boolean</li>\n<li><code class="highlighter-rouge">level</code> String (optional) <em>macOS</em> - Values include <code class="highlighter-rouge">normal</code>, <code class="highlighter-rouge">floating</code>, <code class="highlighter-rouge">torn-off-menu</code>, <code class="highlighter-rouge">modal-panel</code>, <code class="highlighter-rouge">main-menu</code>, <code class="highlighter-rouge">status</code>, <code class="highlighter-rouge">pop-up-menu</code>, <code class="highlighter-rouge">screen-saver</code>, and <del><code class="highlighter-rouge">dock</code></del> (Deprecated). The default is <code class="highlighter-rouge">floating</code>. See the macOS docs for more details.</li>\n<li><code class="highlighter-rouge">relativeLevel</code> Integer (optional) <em>macOS</em> - The number of layers higher to set this window relative to the given <code class="highlighter-rouge">level</code>. The default is <code class="highlighter-rouge">0</code>. Note that Apple discourages setting levels higher than 1 above <code class="highlighter-rouge">screen-saver</code>.</li>\n</ul><p>Sets whether the window should show always on top of other windows. After setting this, the window is still a normal window, not a toolbox window which can not be focused on.</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetalwaysontopflag-level-relativelevel
win.setAppDetails 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetappdetailsoptions-windows
win.setAspectRatio 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetaspectratioaspectratio-extrasize-macos
win.setAutoHideCursor 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetautohidecursorautohide-macos
win.setAutoHideMenuBar	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">hide</code> Boolean</li>\n</ul><p>Sets whether the window menu bar should hide itself automatically. Once set the menu bar will only show when users press the single <code class="highlighter-rouge">Alt</code> key.</p><p>If the menu bar is already visible, calling <code class="highlighter-rouge">setAutoHideMenuBar(true)</code> won   t hide it immediately.</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetautohidemenubarhide
win.setBounds	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">bounds</code> Rectangle</li>\n<li><code class="highlighter-rouge">animate</code> Boolean (optional) <em>macOS</em></li>\n</ul><p>Resizes and moves the window to the supplied bounds</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetboundsbounds-animate
win.setClosable  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetclosableclosable-macos-windows
win.setContentBounds	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">bounds</code> Rectangle</li>\n<li><code class="highlighter-rouge">animate</code> Boolean (optional) <em>macOS</em></li>\n</ul><p>Resizes and moves the window   s client area (e.g. the web page) to the supplied bounds.</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetcontentboundsbounds-animate
win.setContentProtection  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetcontentprotectionenable-macos-windows
win.setContentSize	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n<li><code class="highlighter-rouge">animate</code> Boolean (optional) <em>macOS</em></li>\n</ul><p>Resizes the window   s client area (e.g. the web page) to <code class="highlighter-rouge">width</code> and <code class="highlighter-rouge">height</code>.</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetcontentsizewidth-height-animate
win.setDocumentEdited 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetdocumenteditededited-macos
win.setFocusable 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetfocusablefocusable-windows
win.setFullScreen	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">flag</code> Boolean</li>\n</ul><p>Sets whether the window should be in fullscreen mode.</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetfullscreenflag
win.setFullScreenable	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">fullscreenable</code> Boolean</li>\n</ul><p>Sets whether the maximize/zoom window button toggles fullscreen mode or maximizes the window.</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetfullscreenablefullscreenable
win.setHasShadow 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winsethasshadowhasshadow-macos
win.setIcon  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows Linux</p></section>	http://electron.atom.io/docs/api/browser-window/#winseticonicon-windows-linux
win.setKiosk	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">flag</code> Boolean</li>\n</ul><p>Enters or leaves the kiosk mode.</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetkioskflag
win.setMaximizable  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetmaximizablemaximizable-macos-windows
win.setMaximumSize	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul><p>Sets the maximum size of window to <code class="highlighter-rouge">width</code> and <code class="highlighter-rouge">height</code>.</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetmaximumsizewidth-height
win.setMenu  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows Linux</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetmenumenu-linux-windows
win.setMenuBarVisibility  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows Linux</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetmenubarvisibilityvisible-windows-linux
win.setMinimizable  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetminimizableminimizable-macos-windows
win.setMinimumSize	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n</ul><p>Sets the minimum size of window to <code class="highlighter-rouge">width</code> and <code class="highlighter-rouge">height</code>.</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetminimumsizewidth-height
win.setMovable  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetmovablemovable-macos-windows
win.setOverlayIcon 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetoverlayiconoverlay-description-windows
win.setParentWindow  	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS Linux</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetparentwindowparent-linux-macos
win.setPosition	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">x</code> Integer</li>\n<li><code class="highlighter-rouge">y</code> Integer</li>\n<li><code class="highlighter-rouge">animate</code> Boolean (optional) <em>macOS</em></li>\n</ul><p>Moves window to <code class="highlighter-rouge">x</code> and <code class="highlighter-rouge">y</code>.</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetpositionx-y-animate
win.setProgressBar	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">progress</code> Double</li>\n<li><code class="highlighter-rouge">options</code> Object (optional)\n    <ul class="prog__ul">\n<li><code class="highlighter-rouge">mode</code> String <em>Windows</em> - Mode for the progress bar. Can be <code class="highlighter-rouge">none</code>, <code class="highlighter-rouge">normal</code>, <code class="highlighter-rouge">indeterminate</code>, <code class="highlighter-rouge">error</code>, or <code class="highlighter-rouge">paused</code>.</li>\n</ul>\n</li>\n</ul><ul class="prog__ul">\n<li><code class="highlighter-rouge">mode</code> String <em>Windows</em> - Mode for the progress bar. Can be <code class="highlighter-rouge">none</code>, <code class="highlighter-rouge">normal</code>, <code class="highlighter-rouge">indeterminate</code>, <code class="highlighter-rouge">error</code>, or <code class="highlighter-rouge">paused</code>.</li>\n</ul><p>Sets progress value in progress bar. Valid range is [0, 1.0].</p><p>Remove progress bar when progress &lt; 0; Change to indeterminate mode when progress &gt; 1.</p><p>On Linux platform, only supports Unity desktop environment, you need to specify the <code class="highlighter-rouge">*.desktop</code> file name to <code class="highlighter-rouge">desktopName</code> field in <code class="highlighter-rouge">package.json</code>. By default, it will assume <code class="highlighter-rouge">app.getName().desktop</code>.</p><p>On Windows, a mode can be passed. Accepted values are <code class="highlighter-rouge">none</code>, <code class="highlighter-rouge">normal</code>, <code class="highlighter-rouge">indeterminate</code>, <code class="highlighter-rouge">error</code>, and <code class="highlighter-rouge">paused</code>. If you call <code class="highlighter-rouge">setProgressBar</code> without a mode set (but with a value within the valid range), <code class="highlighter-rouge">normal</code> will be assumed.</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetprogressbarprogress-options
win.setRepresentedFilename 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetrepresentedfilenamefilename-macos
win.setResizable	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">resizable</code> Boolean</li>\n</ul><p>Sets whether the window can be manually resized by user.</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetresizableresizable
win.setSheetOffset 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetsheetoffsetoffsety-offsetx-macos
win.setSize	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">width</code> Integer</li>\n<li><code class="highlighter-rouge">height</code> Integer</li>\n<li><code class="highlighter-rouge">animate</code> Boolean (optional) <em>macOS</em></li>\n</ul><p>Resizes the window to <code class="highlighter-rouge">width</code> and <code class="highlighter-rouge">height</code>.</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetsizewidth-height-animate
win.setSkipTaskbar	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">skip</code> Boolean</li>\n</ul><p>Makes the window not show in the taskbar.</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetskiptaskbarskip
win.setThumbarButtons 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetthumbarbuttonsbuttons-windows
win.setThumbnailClip 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetthumbnailclipregion-windows
win.setThumbnailToolTip 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetthumbnailtooltiptooltip-windows
win.setTitle	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">title</code> String</li>\n</ul><p>Changes the title of native window to <code class="highlighter-rouge">title</code>.</p></section>	http://electron.atom.io/docs/api/browser-window/#winsettitletitle
win.setVisibleOnAllWorkspaces	A										<section class="prog__container"><ul class="prog__ul">\n<li><code class="highlighter-rouge">visible</code> Boolean</li>\n</ul><p>Sets whether the window should be visible on all workspaces.</p><p><strong>Note:</strong> This API does nothing on Windows.</p></section>	http://electron.atom.io/docs/api/browser-window/#winsetvisibleonallworkspacesvisible
win.show	A										<section class="prog__container"><p>Shows and gives focus to the window.</p></section>	http://electron.atom.io/docs/api/browser-window/#winshow
win.showDefinitionForSelection 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p> macOS</p></section>	http://electron.atom.io/docs/api/browser-window/#winshowdefinitionforselection-macos
win.showInactive	A										<section class="prog__container"><p>Shows the window but doesn   t focus on it.</p></section>	http://electron.atom.io/docs/api/browser-window/#winshowinactive
win.unhookAllWindowMessages 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/browser-window/#winunhookallwindowmessages-windows
win.unhookWindowMessage 	A										<section class="prog__container"><span class="prog__sub>Platform:</span><p>Windows</p></section>	http://electron.atom.io/docs/api/browser-window/#winunhookwindowmessagemessage-windows
win.unmaximize	A										<section class="prog__container"><p>Unmaximizes the window.</p></section>	http://electron.atom.io/docs/api/browser-window/#winunmaximize
win.webContents	A										<section class="prog__container"><p>A <code class="highlighter-rouge">WebContents</code> object this window owns. All web page related events and operations will be done via it.</p><p>See the webContents</code> documentation for its methods and events.</p></section>	http://electron.atom.io/docs/api/browser-window/#winwebcontents
window open	A										<section class="prog__container"><p>Open a new window and load a URL.</p><p>When <code class="highlighter-rouge">window.open</code> is called to create a new window in a web page, a new instance of <code class="highlighter-rouge">BrowserWindow</code> will be created for the <code class="highlighter-rouge">url</code> and a proxy will be returned to <code class="highlighter-rouge">window.open</code> to let the page have limited control over it.</p><p>The proxy has limited standard functionality implemented to be compatible with traditional web pages. For full control of the new window you should create a <code class="highlighter-rouge">BrowserWindow</code> directly.</p><p>The newly created <code class="highlighter-rouge">BrowserWindow</code> will inherit the parent window s options by default. To override inherited options you can set them in the <code class="highlighter-rouge">features</code> string.</p><span class=prog__sub">window.open(url[, frameName][, features])</span><ul class="prog__ul">\n<li><code class="highlighter-rouge">url</code> String</li>\n<li><code class="highlighter-rouge">frameName</code> String (optional)</li>\n<li><code class="highlighter-rouge">features</code> String (optional)</li>\n</ul><p>Returns BrowserWindowProxy</code> class.</p><p>The <code class="highlighter-rouge">features</code> string follows the format of standard browser, but each feature has to be a field of <code class="highlighter-rouge">BrowserWindow</code> s options.</p><p><strong>Notes:</strong></p><ul class="prog__ul">\n<li>Node integration will always be disabled in the opened <code class="highlighter-rouge">window</code> if it is disabled on the parent window.</li>\n<li>Non-standard features (that are not handled by Chromium or Electron) given in <code class="highlighter-rouge">features</code> will be passed to any registered <code class="highlighter-rouge">webContent</code> s <code class="highlighter-rouge">new-window</code> event handler in the <code class="highlighter-rouge">additionalFeatures</code> argument.</li>\n</ul><span class=prog__sub">window.opener.postMessage(message, targetOrigin)</span><ul class="prog__ul">\n<li><code class="highlighter-rouge">message</code> String</li>\n<li><code class="highlighter-rouge">targetOrigin</code> String</li>\n</ul><p>Sends a message to the parent window with the specified origin or <code class="highlighter-rouge">*</code> for no origin preference.</p></section>	http://electron.atom.io/docs/api/window-open
