AEADBadTagException	A										<section class="prog__container"><pre><code>public class AEADBadTagException</code></pre>This exception is thrown when a <code>Cipher</code> operating in an AEAD mode (such as GCM/CCM) is unable to verify the supplied authentication tag.</section>	https://developer.android.com/reference/javax/crypto/AEADBadTagException.html
AbsListView	A										<section class="prog__container"><pre><code>public abstract class AbsListView</code></pre>Base class that can be used to implement virtualized lists of items. A list does not have a spatial definition here. For instance, subclases of this class can display the content of the list in a grid, in a carousel, as stack, etc.</section>	https://developer.android.com/reference/android/widget/AbsListView.html
AbsListView.LayoutParams	A										<section class="prog__container"><pre><code>public static class AbsListView.LayoutParams</code></pre>AbsListView extends LayoutParams to provide a place to hold the view type.</section>	https://developer.android.com/reference/android/widget/AbsListView.LayoutParams.html
AbsListView.MultiChoiceModeListener	A										<section class="prog__container"><pre><code>public static interface AbsListView.MultiChoiceModeListener</code></pre>A MultiChoiceModeListener receives events for <code>CHOICE_MODE_MULTIPLE_MODAL</code>. It acts as the <code>ActionMode.Callback</code> for the selection mode and also receives <code>onItemCheckedStateChanged(ActionMode, int, long, boolean)</code> events when the user selects and deselects list items.</section>	https://developer.android.com/reference/android/widget/AbsListView.MultiChoiceModeListener.html
AbsListView.OnScrollListener	A										<section class="prog__container"><pre><code>public static interface AbsListView.OnScrollListener</code></pre>Interface definition for a callback to be invoked when the list or grid has been scrolled.</section>	https://developer.android.com/reference/android/widget/AbsListView.OnScrollListener.html
AbsListView.RecyclerListener	A										<section class="prog__container"><pre><code>public static interface AbsListView.RecyclerListener</code></pre>A RecyclerListener is used to receive a notification whenever a View is placed inside the RecycleBin's scrap heap. This listener is used to free resources associated to Views placed in the RecycleBin.</section>	https://developer.android.com/reference/android/widget/AbsListView.RecyclerListener.html
AbsListView.SelectionBoundsAdjuster	A										<section class="prog__container"><pre><code>public static interface AbsListView.SelectionBoundsAdjuster</code></pre>The top-level view of a list item can implement this interface to allow itself to modify the bounds of the selection shown for that item.</section>	https://developer.android.com/reference/android/widget/AbsListView.SelectionBoundsAdjuster.html
AbsSavedState	D								*[[v4.view.AbsSavedState]], <section class="prog__container"><pre><code>public abstract class AbsSavedState</code></pre>A <code>Parcelable</code> implementation that should be used by inheritance hierarchies to ensure the state of all classes along the chain is saved.</section>\n*[[android.view.AbsSavedState]], <section class="prog__container"><pre><code>public abstract class AbsSavedState</code></pre>A <code>Parcelable</code> implementation that should be used by inheritance hierarchies to ensure the state of all classes along the chain is saved.</section>			
AbsSeekBar	A										<section class="prog__container"><pre><code>public abstract class AbsSeekBar</code></pre></section>	https://developer.android.com/reference/android/widget/AbsSeekBar.html
AbsSpinner	A										<section class="prog__container"><pre><code>public abstract class AbsSpinner</code></pre>An abstract base class for spinner widgets. SDK users will probably not need to use this class.</section>	https://developer.android.com/reference/android/widget/AbsSpinner.html
AbsoluteLayout	A										<section class="prog__container"><pre><code>public class AbsoluteLayout</code></pre><p class="caution"><strong> This class was deprecated in API level 3.</strong><br/> Use <code>FrameLayout</code>, <code>RelativeLayout</code> or a custom layout instead.</section>	https://developer.android.com/reference/android/widget/AbsoluteLayout.html
AbsoluteLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class AbsoluteLayout.LayoutParams</code></pre>Per-child layout information associated with AbsoluteLayout. See <code>Absolute Layout Attributes</code> for a list of all child view attributes that this class supports.</section>	https://developer.android.com/reference/android/widget/AbsoluteLayout.LayoutParams.html
AbsoluteSizeSpan	A										<section class="prog__container"><pre><code>public class AbsoluteSizeSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/AbsoluteSizeSpan.html
AbstractAccountAuthenticator	A										<section class="prog__container"><pre><code>public abstract class AbstractAccountAuthenticator</code></pre>Abstract base class for creating AccountAuthenticators. In order to be an authenticator one must extend this class, provider implementations for the abstract methods and write a service that returns the result of <code>getIBinder()</code> in the service's <code>onBind(android.content.Intent)</code> when invoked with an intent with action <code>ACTION_AUTHENTICATOR_INTENT</code>. This service must specify the following intent filter and metadata tags in its AndroidManifest.xml file <pre> &lt;intent-filter&gt; &lt;action android:name="android.accounts.AccountAuthenticator" /&gt; &lt;/intent-filter&gt; &lt;meta-data android:name="android.accounts.AccountAuthenticator" android:resource="@xml/authenticator" /&gt; </pre> The <code>android:resource</code> attribute must point to a resource that looks like: <pre> &lt;account-authenticator xmlns:android="http://schemas.android.com/apk/res/android" android:accountType="typeOfAuthenticator" android:icon="@drawable/icon" android:smallIcon="@drawable/miniIcon" android:label="@string/label" android:accountPreferences="@xml/account_preferences" /&gt; </pre> Replace the icons and labels with your own resources. The <code>android:accountType</code> attribute must be a string that uniquely identifies your authenticator and will be the same string that user will use when making calls on the <code>AccountManager</code> and it also corresponds to <code>type</code> for your accounts. One user of the android:icon is the "Account &amp; Sync" settings page and one user of the android:smallIcon is the Contact Application's tab panels.</section>	https://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html
AbstractCollection	A										<section class="prog__container"><pre><code>public abstract class AbstractCollection</code></pre>This class provides a skeletal implementation of the <tt>Collection</tt> interface, to minimize the effort required to implement this interface.</section>	https://developer.android.com/reference/java/util/AbstractCollection.html
AbstractCursor	A										<section class="prog__container"><pre><code>public abstract class AbstractCursor</code></pre>This is an abstract cursor class that handles a lot of the common code that all cursors need to deal with and is provided for convenience reasons.</section>	https://developer.android.com/reference/android/database/AbstractCursor.html
AbstractCursor.SelfContentObserver	A										<section class="prog__container"><pre><code>protected static class AbstractCursor.SelfContentObserver</code></pre>Cursors use this class to track changes others make to their URI.</section>	https://developer.android.com/reference/android/database/AbstractCursor.SelfContentObserver.html
AbstractDetailsDescriptionPresenter	A										<section class="prog__container"><pre><code>public abstract class AbstractDetailsDescriptionPresenter</code></pre>An abstract <code>Presenter</code> for rendering a detailed description of an item. Typically this Presenter will be used in a <code>DetailsOverviewRowPresenter</code> or <code>PlaybackControlsRowPresenter</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/AbstractDetailsDescriptionPresenter.html
AbstractDetailsDescriptionPresenter.ViewHolder	A										<section class="prog__container"><pre><code>public static class AbstractDetailsDescriptionPresenter.ViewHolder</code></pre>The ViewHolder for the <code>AbstractDetailsDescriptionPresenter</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/AbstractDetailsDescriptionPresenter.ViewHolder.html
AbstractExecutorService	A										<section class="prog__container"><pre><code>public abstract class AbstractExecutorService</code></pre>Provides default implementations of <code>ExecutorService</code> execution methods. This class implements the <code>submit</code>, <code>invokeAny</code> and <code>invokeAll</code> methods using a <code>RunnableFuture</code> returned by <code>newTaskFor</code>, which defaults to the <code>FutureTask</code> class provided in this package. For example, the implementation of <code>submit(Runnable)</code> creates an associated <code>RunnableFuture</code> that is executed and returned. Subclasses may override the <code>newTaskFor</code> methods to return <code>RunnableFuture</code> implementations other than <code>FutureTask</code>.</section>	https://developer.android.com/reference/java/util/concurrent/AbstractExecutorService.html
AbstractInputMethodService	A										<section class="prog__container"><pre><code>public abstract class AbstractInputMethodService</code></pre>AbstractInputMethodService provides a abstract base class for input methods. Normal input method implementations will not derive from this directly, instead building on top of <code>InputMethodService</code> or another more complete base class. Be sure to read <code>InputMethod</code> for more information on the basics of writing input methods.</section>	https://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.html
AbstractInputMethodService.AbstractInputMethodImpl	A										<section class="prog__container"><pre><code>public abstract class AbstractInputMethodService.AbstractInputMethodImpl</code></pre>Base class for derived classes to implement their <code>InputMethod</code> interface. This takes care of basic maintenance of the input method, but most behavior must be implemented in a derived class.</section>	https://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodImpl.html
AbstractInputMethodService.AbstractInputMethodSessionImpl	A										<section class="prog__container"><pre><code>public abstract class AbstractInputMethodService.AbstractInputMethodSessionImpl</code></pre>Base class for derived classes to implement their <code>InputMethodSession</code> interface. This takes care of basic maintenance of the session, but most behavior must be implemented in a derived class.</section>	https://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodSessionImpl.html
AbstractInterruptibleChannel	A										<section class="prog__container"><pre><code>public abstract class AbstractInterruptibleChannel</code></pre>Base implementation class for interruptible channels.</section>	https://developer.android.com/reference/java/nio/channels/spi/AbstractInterruptibleChannel.html
AbstractList	A										<section class="prog__container"><pre><code>public abstract class AbstractList</code></pre>This class provides a skeletal implementation of the <code>List</code> interface to minimize the effort required to implement this interface backed by a "random access" data store (such as an array). For sequential access data (such as a linked list), <code>AbstractSequentialList</code> should be used in preference to this class.</section>	https://developer.android.com/reference/java/util/AbstractList.html
AbstractMap	A										<section class="prog__container"><pre><code>public abstract class AbstractMap</code></pre>This class provides a skeletal implementation of the <tt>Map</tt> interface, to minimize the effort required to implement this interface.</section>	https://developer.android.com/reference/java/util/AbstractMap.html
AbstractMap.SimpleEntry	A										<section class="prog__container"><pre><code>public static class AbstractMap.SimpleEntry</code></pre>An Entry maintaining a key and a value. The value may be changed using the <tt>setValue</tt> method. This class facilitates the process of building custom map implementations. For example, it may be convenient to return arrays of <tt>SimpleEntry</tt> instances in method <tt>Map.entrySet().toArray</tt>.</section>	https://developer.android.com/reference/java/util/AbstractMap.SimpleEntry.html
AbstractMap.SimpleImmutableEntry	A										<section class="prog__container"><pre><code>public static class AbstractMap.SimpleImmutableEntry</code></pre>An Entry maintaining an immutable key and value. This class does not support method <tt>setValue</tt>. This class may be convenient in methods that return thread-safe snapshots of key-value mappings.</section>	https://developer.android.com/reference/java/util/AbstractMap.SimpleImmutableEntry.html
AbstractMediaItemPresenter	A										<section class="prog__container"><pre><code>public abstract class AbstractMediaItemPresenter</code></pre>Abstract <code>Presenter</code> class for rendering media items in a playlist format. Media item data provided for this presenter can implement the interface <code>MultiActionsProvider</code>, if the media rows wish to contain custom actions. Media items in the playlist are arranged as a vertical list with each row holding each media item's details provided by the user of this class and a set of optional custom actions. Each media item's details and actions are separately focusable. The appearance of each one of the media row components can be controlled through setting theme's attributes. Each media item row provides a view flipper for switching between different views depending on the playback state. A default layout is provided by this presenter for rendering different playback states, or a custom layout can be provided by the user by overriding the playbackMediaItemNumberViewFlipperLayout attribute in the currently specified theme. Subclasses should also override <code>getMediaPlayState(Object)</code> to provide the current play state of their media item model in case they wish to use different views depending on the playback state. The presenter can optionally provide line separators between media rows by setting <code>setHasMediaRowSeparator(boolean)</code> to true.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/AbstractMediaItemPresenter.html
AbstractMediaItemPresenter.ViewHolder	A										<section class="prog__container"><pre><code>public static class AbstractMediaItemPresenter.ViewHolder</code></pre>The ViewHolder for the <code>AbstractMediaItemPresenter</code>. It references different views that place different meta-data corresponding to a media item details, actions, selector, listeners, and presenters,</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/AbstractMediaItemPresenter.ViewHolder.html
AbstractMediaListHeaderPresenter	A										<section class="prog__container"><pre><code>public abstract class AbstractMediaListHeaderPresenter</code></pre>Abstract presenter class for rendering the header for a list of media items in a playlist. The presenter creates a <code>AbstractMediaListHeaderPresenter.ViewHolder</code> for the TextView holding the header text.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/AbstractMediaListHeaderPresenter.html
AbstractMediaListHeaderPresenter.ViewHolder	A										<section class="prog__container"><pre><code>public static class AbstractMediaListHeaderPresenter.ViewHolder</code></pre>The ViewHolder for the <code>AbstractMediaListHeaderPresenter</code>. It references the TextView that places the header text provided by the data binder.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/AbstractMediaListHeaderPresenter.ViewHolder.html
AbstractMethodError	A										<section class="prog__container"><pre><code>public class AbstractMethodError</code></pre>Thrown when an application tries to call an abstract method. Normally, this error is caught by the compiler; this error can only occur at run time if the definition of some class has incompatibly changed since the currently executing method was last compiled.</section>	https://developer.android.com/reference/java/lang/AbstractMethodError.html
AbstractOwnableSynchronizer	A										<section class="prog__container"><pre><code>public abstract class AbstractOwnableSynchronizer</code></pre>A synchronizer that may be exclusively owned by a thread. This class provides a basis for creating locks and related synchronizers that may entail a notion of ownership. The <code>AbstractOwnableSynchronizer</code> class itself does not manage or use this information. However, subclasses and tools may use appropriately maintained values to help control and monitor access and provide diagnostics.</section>	https://developer.android.com/reference/java/util/concurrent/locks/AbstractOwnableSynchronizer.html
AbstractPreferences	A										<section class="prog__container"><pre><code>public abstract class AbstractPreferences</code></pre>This class provides a skeletal implementation of the <code>Preferences</code> class, greatly easing the task of implementing it.</section>	https://developer.android.com/reference/java/util/prefs/AbstractPreferences.html
AbstractQueue	A										<section class="prog__container"><pre><code>public abstract class AbstractQueue</code></pre>This class provides skeletal implementations of some <code>Queue</code> operations. The implementations in this class are appropriate when the base implementation does <em>not</em> allow <code>null</code> elements. Methods <code>add</code>, <code>remove</code>, and <code>element</code> are based on <code>offer</code>, <code>poll</code>, and <code>peek</code>, respectively, but throw exceptions instead of indicating failure via <code>false</code> or <code>null</code> returns.</section>	https://developer.android.com/reference/java/util/AbstractQueue.html
AbstractQueuedLongSynchronizer	A										<section class="prog__container"><pre><code>public abstract class AbstractQueuedLongSynchronizer</code></pre>A version of <code>AbstractQueuedSynchronizer</code> in which synchronization state is maintained as a <code>long</code>. This class has exactly the same structure, properties, and methods as <code>AbstractQueuedSynchronizer</code> with the exception that all state-related parameters and results are defined as <code>long</code> rather than <code>int</code>. This class may be useful when creating synchronizers such as multilevel locks and barriers that require 64 bits of state.</section>	https://developer.android.com/reference/java/util/concurrent/locks/AbstractQueuedLongSynchronizer.html
AbstractQueuedLongSynchronizer.ConditionObject	A										<section class="prog__container"><pre><code>public class AbstractQueuedLongSynchronizer.ConditionObject</code></pre>Condition implementation for a <code>AbstractQueuedLongSynchronizer</code> serving as the basis of a <code>Lock</code> implementation.</section>	https://developer.android.com/reference/java/util/concurrent/locks/AbstractQueuedLongSynchronizer.ConditionObject.html
AbstractQueuedSynchronizer	A										<section class="prog__container"><pre><code>public abstract class AbstractQueuedSynchronizer</code></pre>Provides a framework for implementing blocking locks and related synchronizers (semaphores, events, etc) that rely on first-in-first-out (FIFO) wait queues. This class is designed to be a useful basis for most kinds of synchronizers that rely on a single atomic <code>int</code> value to represent state. Subclasses must define the protected methods that change this state, and which define what that state means in terms of this object being acquired or released. Given these, the other methods in this class carry out all queuing and blocking mechanics. Subclasses can maintain other state fields, but only the atomically updated <code>int</code> value manipulated using methods <code>getState()</code>, <code>setState(int)</code> and <code>compareAndSetState(int, int)</code> is tracked with respect to synchronization.</section>	https://developer.android.com/reference/java/util/concurrent/locks/AbstractQueuedSynchronizer.html
AbstractQueuedSynchronizer.ConditionObject	A										<section class="prog__container"><pre><code>public class AbstractQueuedSynchronizer.ConditionObject</code></pre>Condition implementation for a <code>AbstractQueuedSynchronizer</code> serving as the basis of a <code>Lock</code> implementation.</section>	https://developer.android.com/reference/java/util/concurrent/locks/AbstractQueuedSynchronizer.ConditionObject.html
AbstractSelectableChannel	A										<section class="prog__container"><pre><code>public abstract class AbstractSelectableChannel</code></pre>Base implementation class for selectable channels.</section>	https://developer.android.com/reference/java/nio/channels/spi/AbstractSelectableChannel.html
AbstractSelectionKey	A										<section class="prog__container"><pre><code>public abstract class AbstractSelectionKey</code></pre>Base implementation class for selection keys.</section>	https://developer.android.com/reference/java/nio/channels/spi/AbstractSelectionKey.html
AbstractSelector	A										<section class="prog__container"><pre><code>public abstract class AbstractSelector</code></pre>Base implementation class for selectors.</section>	https://developer.android.com/reference/java/nio/channels/spi/AbstractSelector.html
AbstractSequentialList	A										<section class="prog__container"><pre><code>public abstract class AbstractSequentialList</code></pre>This class provides a skeletal implementation of the <tt>List</tt> interface to minimize the effort required to implement this interface backed by a "sequential access" data store (such as a linked list). For random access data (such as an array), <tt>AbstractList</tt> should be used in preference to this class.</section>	https://developer.android.com/reference/java/util/AbstractSequentialList.html
AbstractSet	A										<section class="prog__container"><pre><code>public abstract class AbstractSet</code></pre>This class provides a skeletal implementation of the <tt>Set</tt> interface to minimize the effort required to implement this interface.</section>	https://developer.android.com/reference/java/util/AbstractSet.html
AbstractThreadedSyncAdapter	A										<section class="prog__container"><pre><code>public abstract class AbstractThreadedSyncAdapter</code></pre>An abstract implementation of a SyncAdapter that spawns a thread to invoke a sync operation. If a sync operation is already in progress when a sync request is received, an error will be returned to the new request and the existing request will be allowed to continue. However if there is no sync in progress then a thread will be spawned and <code>onPerformSync(Account, Bundle, String, ContentProviderClient, SyncResult)</code> will be invoked on that thread.</section>	https://developer.android.com/reference/android/content/AbstractThreadedSyncAdapter.html
AbstractVerifier	A										<section class="prog__container"><pre><code>public abstract class AbstractVerifier</code></pre><p class="caution"><strong> This class was deprecated in API level 22.</strong><br/> Please use <code>openConnection()</code> instead. Please visit this webpage for further details.</section>	https://developer.android.com/reference/org/apache/http/conn/ssl/AbstractVerifier.html
AbstractWindowedCursor	A										<section class="prog__container"><pre><code>public abstract class AbstractWindowedCursor</code></pre>A base class for Cursors that store their data in <code>CursorWindow</code>s.</section>	https://developer.android.com/reference/android/database/AbstractWindowedCursor.html
AccelerateDecelerateInterpolator	A										<section class="prog__container"><pre><code>public class AccelerateDecelerateInterpolator</code></pre>An interpolator where the rate of change starts and ends slowly but accelerates through the middle.</section>	https://developer.android.com/reference/android/view/animation/AccelerateDecelerateInterpolator.html
AccelerateInterpolator	A										<section class="prog__container"><pre><code>public class AccelerateInterpolator</code></pre>An interpolator where the rate of change starts out slowly and and then accelerates.</section>	https://developer.android.com/reference/android/view/animation/AccelerateInterpolator.html
AccessControlContext	A										<section class="prog__container"><pre><code>public final class AccessControlContext</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/security/AccessControlContext.html
AccessControlException	A										<section class="prog__container"><pre><code>public class AccessControlException</code></pre></section>	https://developer.android.com/reference/java/security/AccessControlException.html
AccessController	A										<section class="prog__container"><pre><code>public final class AccessController</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/security/AccessController.html
AccessibilityDelegateCompat	A										<section class="prog__container"><pre><code>public class AccessibilityDelegateCompat</code></pre>Helper for accessing <code>View.AccessibilityDelegate</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/view/AccessibilityDelegateCompat.html
AccessibilityEvent	A										<section class="prog__container"><pre><code>public final class AccessibilityEvent</code></pre></section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityEvent.html
AccessibilityEventCompat	A										<section class="prog__container"><pre><code>public final class AccessibilityEventCompat</code></pre>Helper for accessing features in <code>AccessibilityEvent</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityEventCompat.html
AccessibilityEventSource	A										<section class="prog__container"><pre><code>public interface AccessibilityEventSource</code></pre>This interface is implemented by classes source of <code>AccessibilityEvent</code>s. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityEventSource.html
AccessibilityManager	A										<section class="prog__container"><pre><code>public final class AccessibilityManager</code></pre>System level service that serves as an event dispatch for <code>AccessibilityEvent</code>s, and provides facilities for querying the accessibility state of the system. Accessibility events are generated when something notable happens in the user interface, for example an <code>Activity</code> starts, the focus or selection of a <code>View</code> changes etc. Parties interested in handling accessibility events implement and register an accessibility service which extends <code>AccessibilityService</code>.</section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityManager.html
AccessibilityManager.AccessibilityStateChangeListener	A										<section class="prog__container"><pre><code>public static interface AccessibilityManager.AccessibilityStateChangeListener</code></pre>Listener for the system accessibility state. To listen for changes to the accessibility state on the device, implement this interface and register it with the system by calling <code>addAccessibilityStateChangeListener(AccessibilityManager.AccessibilityStateChangeListener)</code>.</section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityManager.AccessibilityStateChangeListener.html
AccessibilityManager.TouchExplorationStateChangeListener	A										<section class="prog__container"><pre><code>public static interface AccessibilityManager.TouchExplorationStateChangeListener</code></pre>Listener for the system touch exploration state. To listen for changes to the touch exploration state on the device, implement this interface and register it with the system by calling <code>addTouchExplorationStateChangeListener(AccessibilityManager.TouchExplorationStateChangeListener)</code>.</section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityManager.TouchExplorationStateChangeListener.html
AccessibilityManagerCompat	A										<section class="prog__container"><pre><code>public final class AccessibilityManagerCompat</code></pre>Helper for accessing features in <code>AccessibilityManager</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityManagerCompat.html
AccessibilityManagerCompat.AccessibilityStateChangeListener	A										<section class="prog__container"><pre><code>public static interface AccessibilityManagerCompat.AccessibilityStateChangeListener</code></pre>Listener for the accessibility state.</section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityManagerCompat.AccessibilityStateChangeListener.html
AccessibilityManagerCompat.AccessibilityStateChangeListenerCompat	A										<section class="prog__container"><pre><code>public static abstract class AccessibilityManagerCompat.AccessibilityStateChangeListenerCompat</code></pre><p class="caution"><strong> This class is deprecated.</strong><br/> Use <code>AccessibilityManagerCompat.AccessibilityStateChangeListener</code> instead.</section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityManagerCompat.AccessibilityStateChangeListenerCompat.html
AccessibilityManagerCompat.TouchExplorationStateChangeListener	A										<section class="prog__container"><pre><code>public static interface AccessibilityManagerCompat.TouchExplorationStateChangeListener</code></pre>Listener for the system touch exploration state. To listen for changes to the touch exploration state on the device, implement this interface and register it with the system by calling <code>addTouchExplorationStateChangeListener(AccessibilityManager, AccessibilityManagerCompat.TouchExplorationStateChangeListener)</code>.</section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityManagerCompat.TouchExplorationStateChangeListener.html
AccessibilityNodeInfo	A										<section class="prog__container"><pre><code>public class AccessibilityNodeInfo</code></pre>This class represents a node of the window content as well as actions that can be requested from its source. From the point of view of an <code>AccessibilityService</code> a window's content is presented as a tree of accessibility node infos, which may or may not map one-to-one to the view hierarchy. In other words, a custom view is free to report itself as a tree of accessibility node info.</section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.html
AccessibilityNodeInfo.AccessibilityAction	A										<section class="prog__container"><pre><code>public static final class AccessibilityNodeInfo.AccessibilityAction</code></pre>A class defining an action that can be performed on an <code>AccessibilityNodeInfo</code>. Each action has a unique id that is mandatory and optional data.</section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.AccessibilityAction.html
AccessibilityNodeInfo.CollectionInfo	A										<section class="prog__container"><pre><code>public static final class AccessibilityNodeInfo.CollectionInfo</code></pre>Class with information if a node is a collection. Use <code>obtain(int, int, boolean)</code> to get an instance.</section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.CollectionInfo.html
AccessibilityNodeInfo.CollectionItemInfo	A										<section class="prog__container"><pre><code>public static final class AccessibilityNodeInfo.CollectionItemInfo</code></pre>Class with information if a node is a collection item. Use <code>obtain(int, int, int, int, boolean)</code> to get an instance.</section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.CollectionItemInfo.html
AccessibilityNodeInfo.RangeInfo	A										<section class="prog__container"><pre><code>public static final class AccessibilityNodeInfo.RangeInfo</code></pre>Class with information if a node is a range. Use <code>obtain(int, float, float, float)</code> to get an instance.</section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeInfo.RangeInfo.html
AccessibilityNodeInfoCompat	A										<section class="prog__container"><pre><code>public class AccessibilityNodeInfoCompat</code></pre>Helper for accessing <code>AccessibilityNodeInfo</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeInfoCompat.html
AccessibilityNodeInfoCompat.AccessibilityActionCompat	A										<section class="prog__container"><pre><code>public static class AccessibilityNodeInfoCompat.AccessibilityActionCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeInfoCompat.AccessibilityActionCompat.html
AccessibilityNodeInfoCompat.CollectionInfoCompat	A										<section class="prog__container"><pre><code>public static class AccessibilityNodeInfoCompat.CollectionInfoCompat</code></pre>Class with information if a node is a collection.</section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeInfoCompat.CollectionInfoCompat.html
AccessibilityNodeInfoCompat.CollectionItemInfoCompat	A										<section class="prog__container"><pre><code>public static class AccessibilityNodeInfoCompat.CollectionItemInfoCompat</code></pre>Class with information if a node is a collection item.</section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeInfoCompat.CollectionItemInfoCompat.html
AccessibilityNodeInfoCompat.RangeInfoCompat	A										<section class="prog__container"><pre><code>public static class AccessibilityNodeInfoCompat.RangeInfoCompat</code></pre>Class with information if a node is a range.</section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeInfoCompat.RangeInfoCompat.html
AccessibilityNodeProvider	A										<section class="prog__container"><pre><code>public abstract class AccessibilityNodeProvider</code></pre>This class is the contract a client should implement to enable support of a virtual view hierarchy rooted at a given view for accessibility purposes. A virtual view hierarchy is a tree of imaginary Views that is reported as a part of the view hierarchy when an <code>AccessibilityService</code> explores the window content. Since the virtual View tree does not exist this class is responsible for managing the <code>AccessibilityNodeInfo</code>s describing that tree to accessibility services.</section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityNodeProvider.html
AccessibilityNodeProviderCompat	A										<section class="prog__container"><pre><code>public class AccessibilityNodeProviderCompat</code></pre>Helper for accessing <code>AccessibilityNodeProvider</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeProviderCompat.html
AccessibilityRecord	A										<section class="prog__container"><pre><code>public class AccessibilityRecord</code></pre>Represents a record in an <code>AccessibilityEvent</code> and contains information about state change of its source <code>View</code>. When a view fires an accessibility event it requests from its parent to dispatch the constructed event. The parent may optionally append a record for itself for providing more context to <code>AccessibilityService</code>s. Hence, accessibility services can facilitate additional accessibility records to enhance feedback.</section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityRecord.html
AccessibilityRecordCompat	A										<section class="prog__container"><pre><code>public class AccessibilityRecordCompat</code></pre>Helper for accessing <code>AccessibilityRecord</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityRecordCompat.html
AccessibilityService	A										<section class="prog__container"><pre><code>public abstract class AccessibilityService</code></pre>Accessibility services should only be used to assist users with disabilities in using Android devices and apps. They run in the background and receive callbacks by the system when <code>AccessibilityEvent</code>s are fired. Such events denote some state transition in the user interface, for example, the focus has changed, a button has been clicked, etc. Such a service can optionally request the capability for querying the content of the active window. Development of an accessibility service requires extending this class and implementing its abstract methods. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/accessibilityservice/AccessibilityService.html
AccessibilityService.GestureResultCallback	A										<section class="prog__container"><pre><code>public static abstract class AccessibilityService.GestureResultCallback</code></pre>Class used to report status of dispatched gestures</section>	https://developer.android.com/reference/android/accessibilityservice/AccessibilityService.GestureResultCallback.html
AccessibilityService.MagnificationController	A										<section class="prog__container"><pre><code>public static final class AccessibilityService.MagnificationController</code></pre>Used to control and query the state of display magnification.</section>	https://developer.android.com/reference/android/accessibilityservice/AccessibilityService.MagnificationController.html
AccessibilityService.MagnificationController.OnMagnificationChangedListener	A										<section class="prog__container"><pre><code>public static interface AccessibilityService.MagnificationController.OnMagnificationChangedListener</code></pre>Listener for changes in the state of magnification.</section>	https://developer.android.com/reference/android/accessibilityservice/AccessibilityService.MagnificationController.OnMagnificationChangedListener.html
AccessibilityService.SoftKeyboardController	A										<section class="prog__container"><pre><code>public static final class AccessibilityService.SoftKeyboardController</code></pre>Used to control and query the soft keyboard show mode.</section>	https://developer.android.com/reference/android/accessibilityservice/AccessibilityService.SoftKeyboardController.html
AccessibilityService.SoftKeyboardController.OnShowModeChangedListener	A										<section class="prog__container"><pre><code>public static interface AccessibilityService.SoftKeyboardController.OnShowModeChangedListener</code></pre>Listener for changes in the soft keyboard show mode.</section>	https://developer.android.com/reference/android/accessibilityservice/AccessibilityService.SoftKeyboardController.OnShowModeChangedListener.html
AccessibilityServiceInfo	A										<section class="prog__container"><pre><code>public class AccessibilityServiceInfo</code></pre>This class describes an <code>AccessibilityService</code>. The system notifies an <code>AccessibilityService</code> for <code>AccessibilityEvent</code>s according to the information encapsulated in this class. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/accessibilityservice/AccessibilityServiceInfo.html
AccessibilityServiceInfoCompat	A										<section class="prog__container"><pre><code>public final class AccessibilityServiceInfoCompat</code></pre>Helper for accessing features in <code>AccessibilityService</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/accessibilityservice/AccessibilityServiceInfoCompat.html
AccessibilityWindowInfo	A										<section class="prog__container"><pre><code>public final class AccessibilityWindowInfo</code></pre>This class represents a state snapshot of a window for accessibility purposes. The screen content contains one or more windows where some windows can be descendants of other windows, which is the windows are hierarchically ordered. Note that there is no root window. Hence, the screen content can be seen as a collection of window trees.</section>	https://developer.android.com/reference/android/view/accessibility/AccessibilityWindowInfo.html
AccessibilityWindowInfoCompat	A										<section class="prog__container"><pre><code>public class AccessibilityWindowInfoCompat</code></pre>Helper for accessing <code>AccessibilityWindowInfo</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityWindowInfoCompat.html
AccessibleObject	A										<section class="prog__container"><pre><code>public class AccessibleObject</code></pre>The AccessibleObject class is the base class for Field, Method and Constructor objects. It provides the ability to flag a reflected object as suppressing default Java language access control checks when it is used. The access checks--for public, default (package) access, protected, and private members--are performed when Fields, Methods or Constructors are used to set or get fields, to invoke methods, or to create and initialize new instances of classes, respectively.</section>	https://developer.android.com/reference/java/lang/reflect/AccessibleObject.html
Account	A										<section class="prog__container"><pre><code>public class Account</code></pre>Value type that represents an Account in the <code>AccountManager</code>. This object is <code>Parcelable</code> and also overrides <code>equals(Object)</code> and <code>hashCode()</code>, making it suitable for use as the key of a <code>Map</code></section>	https://developer.android.com/reference/android/accounts/Account.html
AccountAuthenticatorActivity	A										<section class="prog__container"><pre><code>public class AccountAuthenticatorActivity</code></pre>Base class for implementing an Activity that is used to help implement an AbstractAccountAuthenticator. If the AbstractAccountAuthenticator needs to use an activity to handle the request then it can have the activity extend AccountAuthenticatorActivity. The AbstractAccountAuthenticator passes in the response to the intent using the following: <pre> intent.putExtra(<code>KEY_ACCOUNT_AUTHENTICATOR_RESPONSE</code>, response); </pre> The activity then sets the result that is to be handed to the response via <code>setAccountAuthenticatorResult(android.os.Bundle)</code>. This result will be sent as the result of the request when the activity finishes. If this is never set or if it is set to null then error <code>ERROR_CODE_CANCELED</code> will be called on the response.</section>	https://developer.android.com/reference/android/accounts/AccountAuthenticatorActivity.html
AccountAuthenticatorResponse	A										<section class="prog__container"><pre><code>public class AccountAuthenticatorResponse</code></pre>Object used to communicate responses back to the AccountManager</section>	https://developer.android.com/reference/android/accounts/AccountAuthenticatorResponse.html
AccountManager	A										<section class="prog__container"><pre><code>public class AccountManager</code></pre>This class provides access to a centralized registry of the user's online accounts. The user enters credentials (username and password) once per account, granting applications access to online resources with "one-click" approval.</section>	https://developer.android.com/reference/android/accounts/AccountManager.html
AccountManagerCallback	A										<section class="prog__container"><pre><code>public interface AccountManagerCallback</code></pre></section>	https://developer.android.com/reference/android/accounts/AccountManagerCallback.html
AccountManagerFuture	A										<section class="prog__container"><pre><code>public interface AccountManagerFuture</code></pre>A <tt>AccountManagerFuture</tt> represents the result of an asynchronous <code>AccountManager</code> call. Methods are provided to check if the computation is complete, to wait for its completion, and to retrieve the result of the computation. The result can only be retrieved using method <tt>get</tt> when the computation has completed, blocking if necessary until it is ready. Cancellation is performed by the <tt>cancel</tt> method. Additional methods are provided to determine if the task completed normally or was cancelled. Once a computation has completed, the computation cannot be cancelled. If you would like to use a <tt>Future</tt> for the sake of cancellability but not provide a usable result, you can declare types of the form <tt>Future&lt;?&gt;</tt> and return <tt>null</tt> as a result of the underlying task.</section>	https://developer.android.com/reference/android/accounts/AccountManagerFuture.html
AccountsException	A										<section class="prog__container"><pre><code>public class AccountsException</code></pre></section>	https://developer.android.com/reference/android/accounts/AccountsException.html
Acl	A										<section class="prog__container"><pre><code>public interface Acl</code></pre>Interface representing an Access Control List (ACL). An Access Control List is a data structure used to guard access to resources.</section>	https://developer.android.com/reference/java/security/acl/Acl.html
AclEntry	A										<section class="prog__container"><pre><code>public interface AclEntry</code></pre>This is the interface used for representing one entry in an Access Control List (ACL).</section>	https://developer.android.com/reference/java/security/acl/AclEntry.html
AclNotFoundException	A										<section class="prog__container"><pre><code>public class AclNotFoundException</code></pre>This is an exception that is thrown whenever a reference is made to a non-existent ACL (Access Control List).</section>	https://developer.android.com/reference/java/security/acl/AclNotFoundException.html
AcousticEchoCanceler	A										<section class="prog__container"><pre><code>public class AcousticEchoCanceler</code></pre>Acoustic Echo Canceler (AEC).</section>	https://developer.android.com/reference/android/media/audiofx/AcousticEchoCanceler.html
Action	A										<section class="prog__container"><pre><code>public class Action</code></pre>An action contains one or two lines of text, an optional image and an optional id. It may also be invoked by one or more keycodes.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/Action.html
ActionBar	D								*[[android.app.ActionBar]], <section class="prog__container"><pre><code>public abstract class ActionBar</code></pre>A primary toolbar within the activity that may display the activity title, application-level navigation affordances, and other interactive items.</section>\n*[[v7.app.ActionBar]], <section class="prog__container"><pre><code>public abstract class ActionBar</code></pre>A primary toolbar within the activity that may display the activity title, application-level navigation affordances, and other interactive items.</section>			
ActionBar.LayoutParams	D								*[[android.app.ActionBar.LayoutParams]], <section class="prog__container"><pre><code>public static class ActionBar.LayoutParams</code></pre>Per-child layout information associated with action bar custom views.</section>\n*[[v7.app.ActionBar.LayoutParams]], <section class="prog__container"><pre><code>public static class ActionBar.LayoutParams</code></pre>Per-child layout information associated with action bar custom views.</section>			
ActionBar.OnMenuVisibilityListener	D								*[[android.app.ActionBar.OnMenuVisibilityListener]], <section class="prog__container"><pre><code>public static interface ActionBar.OnMenuVisibilityListener</code></pre>Listener for receiving events when action bar menus are shown or hidden.</section>\n*[[v7.app.ActionBar.OnMenuVisibilityListener]], <section class="prog__container"><pre><code>public static interface ActionBar.OnMenuVisibilityListener</code></pre>Listener for receiving events when action bar menus are shown or hidden.</section>			
ActionBar.OnNavigationListener	D								*[[android.app.ActionBar.OnNavigationListener]], <section class="prog__container"><pre><code>public static interface ActionBar.OnNavigationListener</code></pre><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead.</section>\n*[[v7.app.ActionBar.OnNavigationListener]], <section class="prog__container"><pre><code>public static interface ActionBar.OnNavigationListener</code></pre><p class="caution"><strong> This interface is deprecated.</strong><br/> Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead.</section>			
ActionBar.Tab	D								*[[android.app.ActionBar.Tab]], <section class="prog__container"><pre><code>public static abstract class ActionBar.Tab</code></pre><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead.</section>\n*[[v7.app.ActionBar.Tab]], <section class="prog__container"><pre><code>public static abstract class ActionBar.Tab</code></pre><p class="caution"><strong> This class is deprecated.</strong><br/> Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead.</section>			
ActionBar.TabListener	D								*[[android.app.ActionBar.TabListener]], <section class="prog__container"><pre><code>public static interface ActionBar.TabListener</code></pre><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead.</section>\n*[[v7.app.ActionBar.TabListener]], <section class="prog__container"><pre><code>public static interface ActionBar.TabListener</code></pre><p class="caution"><strong> This interface is deprecated.</strong><br/> Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead.</section>			
ActionBarActivity	A										<section class="prog__container"><pre><code>public class ActionBarActivity</code></pre><p class="caution"><strong> This class is deprecated.</strong><br/> Use <code>AppCompatActivity</code> instead.</section>	https://developer.android.com/reference/android/support/v7/app/ActionBarActivity.html
ActionBarDrawerToggle	D								*[[v4.app.ActionBarDrawerToggle]], <section class="prog__container"><pre><code>public class ActionBarDrawerToggle</code></pre><p class="caution"><strong> This class is deprecated.</strong><br/> Please use ActionBarDrawerToggle in support-v7-appcompat.</section>\n*[[v7.app.ActionBarDrawerToggle]], <section class="prog__container"><pre><code>public class ActionBarDrawerToggle</code></pre>This class provides a handy way to tie together the functionality of <code>DrawerLayout</code> and the framework <code>ActionBar</code> to implement the recommended design for navigation drawers.</section>			
ActionBarDrawerToggle.Delegate	D								*[[v4.app.ActionBarDrawerToggle.Delegate]], <section class="prog__container"><pre><code>public static interface ActionBarDrawerToggle.Delegate</code></pre></section>\n*[[v7.app.ActionBarDrawerToggle.Delegate]], <section class="prog__container"><pre><code>public static interface ActionBarDrawerToggle.Delegate</code></pre></section>			
ActionBarDrawerToggle.DelegateProvider	D								*[[v4.app.ActionBarDrawerToggle.DelegateProvider]], <section class="prog__container"><pre><code>public static interface ActionBarDrawerToggle.DelegateProvider</code></pre>Allows an implementing Activity to return an <code>ActionBarDrawerToggle.Delegate</code> to use with ActionBarDrawerToggle.</section>\n*[[v7.app.ActionBarDrawerToggle.DelegateProvider]], <section class="prog__container"><pre><code>public static interface ActionBarDrawerToggle.DelegateProvider</code></pre>Allows an implementing Activity to return an <code>ActionBarDrawerToggle.Delegate</code> to use with ActionBarDrawerToggle.</section>			
ActionBarOverlayLayout	A										Special layout for the containing of an overlay action bar (and its content) to correctly handle fitting system windows when the content has request that its layout ignore them.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
ActionMenuView	D								*[[v7.widget.ActionMenuView]], <section class="prog__container"><pre><code>public class ActionMenuView</code></pre>ActionMenuView is a presentation of a series of menu options as a View. It provides several top level options as action buttons while spilling remaining options over as items in an overflow menu. This allows applications to present packs of actions inline with specific or repeating content.</section>\n*[[android.widget.ActionMenuView]], <section class="prog__container"><pre><code>public class ActionMenuView</code></pre>ActionMenuView is a presentation of a series of menu options as a View. It provides several top level options as action buttons while spilling remaining options over as items in an overflow menu. This allows applications to present packs of actions inline with specific or repeating content.</section>			
ActionMenuView.LayoutParams	D								*[[v7.widget.ActionMenuView.LayoutParams]], <section class="prog__container"><pre><code>public static class ActionMenuView.LayoutParams</code></pre></section>\n*[[android.widget.ActionMenuView.LayoutParams]], <section class="prog__container"><pre><code>public static class ActionMenuView.LayoutParams</code></pre></section>			
ActionMenuView.OnMenuItemClickListener	D								*[[v7.widget.ActionMenuView.OnMenuItemClickListener]], <section class="prog__container"><pre><code>public static interface ActionMenuView.OnMenuItemClickListener</code></pre>Interface responsible for receiving menu item click events if the items themselves do not have individual item click listeners.</section>\n*[[android.widget.ActionMenuView.OnMenuItemClickListener]], <section class="prog__container"><pre><code>public static interface ActionMenuView.OnMenuItemClickListener</code></pre>Interface responsible for receiving menu item click events if the items themselves do not have individual item click listeners.</section>			
ActionMode	D								*[[v7.view.ActionMode]], <section class="prog__container"><pre><code>public abstract class ActionMode</code></pre>Represents a contextual mode of the user interface. Action modes can be used to provide alternative interaction modes and replace parts of the normal UI until finished. Examples of good action modes include text selection and contextual actions. <div class="special reference"> <h3>Developer Guides</h3></section>\n*[[android.view.ActionMode]], <section class="prog__container"><pre><code>public abstract class ActionMode</code></pre>Represents a contextual mode of the user interface. Action modes can be used to provide alternative interaction modes and replace parts of the normal UI until finished. Examples of good action modes include text selection and contextual actions. <div class="special reference"> <h3>Developer Guides</h3></section>			
ActionMode.Callback	D								*[[v7.view.ActionMode.Callback]], <section class="prog__container"><pre><code>public static interface ActionMode.Callback</code></pre>Callback interface for action modes. Supplied to <code>startSupportActionMode(Callback)</code> (Callback)}, a Callback configures and handles events raised by a user's interaction with an action mode.</section>\n*[[android.view.ActionMode.Callback]], <section class="prog__container"><pre><code>public static interface ActionMode.Callback</code></pre>Callback interface for action modes. Supplied to <code>startActionMode(Callback)</code>, a Callback configures and handles events raised by a user's interaction with an action mode.</section>			
ActionMode.Callback2	A										<section class="prog__container"><pre><code>public static abstract class ActionMode.Callback2</code></pre>Extension of <code>ActionMode.Callback</code> to provide content rect information. This is required for ActionModes with dynamic positioning such as the ones with type <code>TYPE_FLOATING</code> to ensure the positioning doesn't obscure app content. If an app fails to provide a subclass of this class, a default implementation will be used.</section>	https://developer.android.com/reference/android/view/ActionMode.Callback2.html
ActionProvider	D								*[[v4.view.ActionProvider]], <section class="prog__container"><pre><code>public abstract class ActionProvider</code></pre>This class is a mediator for accomplishing a given task, for example sharing a file. It is responsible for creating a view that performs an action that accomplishes the task. This class also implements other functions such a performing a default action. <p class="note"><strong>Note:</strong> This class is included in the support library for compatibility with API level 4 and higher. If you're developing your app for API level 14 and higher <em>only</em>, you should instead use the framework <code>ActionProvider</code> class.</section>\n*[[android.view.ActionProvider]], <section class="prog__container"><pre><code>public abstract class ActionProvider</code></pre>An ActionProvider defines rich menu interaction in a single component. ActionProvider can generate action views for use in the action bar, dynamically populate submenus of a MenuItem, and handle default menu item invocations.</section>			
ActionProvider.VisibilityListener	D								*[[v4.view.ActionProvider.VisibilityListener]], <section class="prog__container"><pre><code>public static interface ActionProvider.VisibilityListener</code></pre>Listens to changes in visibility as reported by <code>refreshVisibility()</code>.</section>\n*[[android.view.ActionProvider.VisibilityListener]], <section class="prog__container"><pre><code>public static interface ActionProvider.VisibilityListener</code></pre>Listens to changes in visibility as reported by <code>refreshVisibility()</code>.</section>			
Activity	A										<section class="prog__container"><pre><code>public class Activity</code></pre>An activity is a single, focused thing that the user can do. Almost all activities interact with the user, so the Activity class takes care of creating a window for you in which you can place your UI with <code>setContentView(View)</code>. While activities are often presented to the user as full-screen windows, they can also be used in other ways: as floating windows (via a theme with <code>windowIsFloating</code> set) or embedded inside of another activity (using <code>ActivityGroup</code>). There are two methods almost all subclasses of Activity will implement: <ul> <li> <code>onCreate(Bundle)</code> is where you initialize your activity. Most importantly, here you will usually call <code>setContentView(int)</code> with a layout resource defining your UI, and using <code>findViewById(int)</code> to retrieve the widgets in that UI that you need to interact with programmatically. <li> <code>onPause()</code> is where you deal with the user leaving your activity. Most importantly, any changes made by the user should at this point be committed (usually to the <code>ContentProvider</code> holding the data). </li></li></ul></section>	https://developer.android.com/reference/android/app/Activity.html
ActivityCompat	D								*[[v13.app.ActivityCompat]], <section class="prog__container"><pre><code>public class ActivityCompat</code></pre>Helper for accessing features in <code>Activity</code> introduced after API level 13 in a backwards compatible fashion.</section>\n*[[v4.app.ActivityCompat]], <section class="prog__container"><pre><code>public class ActivityCompat</code></pre>Helper for accessing features in <code>Activity</code> introduced after API level 4 in a backwards compatible fashion.</section>			
ActivityCompat.OnRequestPermissionsResultCallback	A										<section class="prog__container"><pre><code>public static interface ActivityCompat.OnRequestPermissionsResultCallback</code></pre>This interface is the contract for receiving the results for permission requests.</section>	https://developer.android.com/reference/android/support/v4/app/ActivityCompat.OnRequestPermissionsResultCallback.html
ActivityGroup	A										<section class="prog__container"><pre><code>public class ActivityGroup</code></pre><p class="caution"><strong> This class was deprecated in API level 13.</strong><br/> Use the new <code>Fragment</code> and <code>FragmentManager</code> APIs instead; these are also available on older platforms through the Android compatibility package.</section>	https://developer.android.com/reference/android/app/ActivityGroup.html
ActivityInfo	A										<section class="prog__container"><pre><code>public class ActivityInfo</code></pre>Information you can retrieve about a particular application activity or receiver. This corresponds to information collected from the AndroidManifest.xml's &lt;activity&gt; and &lt;receiver&gt; tags.</section>	https://developer.android.com/reference/android/content/pm/ActivityInfo.html
ActivityInfo.WindowLayout	A										<section class="prog__container"><pre><code>public static final class ActivityInfo.WindowLayout</code></pre>Contains information about position and size of the activity on the display. Used in freeform mode to set desired position when activity is first launched. It describes how big the activity wants to be in both width and height, the minimal allowed size, and the gravity to be applied.</section>	https://developer.android.com/reference/android/content/pm/ActivityInfo.WindowLayout.html
ActivityInfoCompat	A										<section class="prog__container"><pre><code>public final class ActivityInfoCompat</code></pre>Helper for accessing features in <code>ActivityInfo</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/content/pm/ActivityInfoCompat.html
ActivityManager	A										<section class="prog__container"><pre><code>public class ActivityManager</code></pre></section>	https://developer.android.com/reference/android/app/ActivityManager.html
ActivityManager.AppTask	A										<section class="prog__container"><pre><code>public static class ActivityManager.AppTask</code></pre>The AppTask allows you to manage your own application's tasks. See <code>getAppTasks()</code></section>	https://developer.android.com/reference/android/app/ActivityManager.AppTask.html
ActivityManager.MemoryInfo	A										<section class="prog__container"><pre><code>public static class ActivityManager.MemoryInfo</code></pre>Information you can retrieve about the available memory through <code>getMemoryInfo(ActivityManager.MemoryInfo)</code>.</section>	https://developer.android.com/reference/android/app/ActivityManager.MemoryInfo.html
ActivityManager.ProcessErrorStateInfo	A										<section class="prog__container"><pre><code>public static class ActivityManager.ProcessErrorStateInfo</code></pre>Information you can retrieve about any processes that are in an error condition.</section>	https://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html
ActivityManager.RecentTaskInfo	A										<section class="prog__container"><pre><code>public static class ActivityManager.RecentTaskInfo</code></pre>Information you can retrieve about tasks that the user has most recently started or visited.</section>	https://developer.android.com/reference/android/app/ActivityManager.RecentTaskInfo.html
ActivityManager.RunningAppProcessInfo	A										<section class="prog__container"><pre><code>public static class ActivityManager.RunningAppProcessInfo</code></pre>Information you can retrieve about a running process.</section>	https://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html
ActivityManager.RunningServiceInfo	A										<section class="prog__container"><pre><code>public static class ActivityManager.RunningServiceInfo</code></pre>Information you can retrieve about a particular Service that is currently running in the system.</section>	https://developer.android.com/reference/android/app/ActivityManager.RunningServiceInfo.html
ActivityManager.RunningTaskInfo	A										<section class="prog__container"><pre><code>public static class ActivityManager.RunningTaskInfo</code></pre>Information you can retrieve about a particular task that is currently "running" in the system. Note that a running task does not mean the given task actually has a process it is actively running in; it simply means that the user has gone to it and never closed it, but currently the system may have killed its process and is only holding on to its last state in order to restart it when the user returns.</section>	https://developer.android.com/reference/android/app/ActivityManager.RunningTaskInfo.html
ActivityManager.TaskDescription	A										<section class="prog__container"><pre><code>public static class ActivityManager.TaskDescription</code></pre>Information you can set and retrieve about the current activity within the recent task list.</section>	https://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html
ActivityManagerCompat	A										<section class="prog__container"><pre><code>public final class ActivityManagerCompat</code></pre>Helper for accessing features in <code>ActivityManager</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/app/ActivityManagerCompat.html
ActivityNotFoundException	A										<section class="prog__container"><pre><code>public class ActivityNotFoundException</code></pre>This exception is thrown when a call to <code>startActivity(Intent)</code> or one of its variants fails because an Activity can not be found to execute the given Intent.</section>	https://developer.android.com/reference/android/content/ActivityNotFoundException.html
ActivityOptions	A										<section class="prog__container"><pre><code>public class ActivityOptions</code></pre>Helper class for building an options Bundle that can be used with <code>Context.startActivity(Intent, Bundle)</code> and related methods.</section>	https://developer.android.com/reference/android/app/ActivityOptions.html
ActivityOptionsCompat	A										<section class="prog__container"><pre><code>public class ActivityOptionsCompat</code></pre>Helper for accessing features in <code>ActivityOptions</code> introduced in API level 16 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/app/ActivityOptionsCompat.html
ActivityTestCase	A										<section class="prog__container"><pre><code>public abstract class ActivityTestCase</code></pre><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/ActivityTestCase.html
Adapter	A										<section class="prog__container"><pre><code>public interface Adapter</code></pre>An Adapter object acts as a bridge between an <code>AdapterView</code> and the underlying data for that view. The Adapter provides access to the data items. The Adapter is also responsible for making a <code>View</code> for each item in the data set.</section>	https://developer.android.com/reference/android/widget/Adapter.html
AdapterView.AdapterContextMenuInfo	A										<section class="prog__container"><pre><code>public static class AdapterView.AdapterContextMenuInfo</code></pre>Extra menu information provided to the <code>onCreateContextMenu(ContextMenu, View, ContextMenuInfo)</code> callback when a context menu is brought up for this AdapterView.</section>	https://developer.android.com/reference/android/widget/AdapterView.AdapterContextMenuInfo.html
AdapterView.OnItemClickListener	A										<section class="prog__container"><pre><code>public static interface AdapterView.OnItemClickListener</code></pre>Interface definition for a callback to be invoked when an item in this AdapterView has been clicked.</section>	https://developer.android.com/reference/android/widget/AdapterView.OnItemClickListener.html
AdapterView.OnItemLongClickListener	A										<section class="prog__container"><pre><code>public static interface AdapterView.OnItemLongClickListener</code></pre>Interface definition for a callback to be invoked when an item in this view has been clicked and held.</section>	https://developer.android.com/reference/android/widget/AdapterView.OnItemLongClickListener.html
AdapterView.OnItemSelectedListener	A										<section class="prog__container"><pre><code>public static interface AdapterView.OnItemSelectedListener</code></pre>Interface definition for a callback to be invoked when an item in this view has been selected.</section>	https://developer.android.com/reference/android/widget/AdapterView.OnItemSelectedListener.html
AdapterViewAnimator	A										<section class="prog__container"><pre><code>public abstract class AdapterViewAnimator</code></pre>Base class for a <code>AdapterView</code> that will perform animations when switching between its views.</section>	https://developer.android.com/reference/android/widget/AdapterViewAnimator.html
AdapterViewFlipper	A										<section class="prog__container"><pre><code>public class AdapterViewFlipper</code></pre>Simple <code>ViewAnimator</code> that will animate between two or more views that have been added to it. Only one child is shown at a time. If requested, can automatically flip between each child at a regular interval.</section>	https://developer.android.com/reference/android/widget/AdapterViewFlipper.html
Address	A										<section class="prog__container"><pre><code>public class Address</code></pre>A class representing an Address, i.e, a set of Strings describing a location. The address format is a simplified version of xAL (eXtensible Address Language) http://www.oasis-open.org/committees/ciq/ciq.html#6</section>	https://developer.android.com/reference/android/location/Address.html
Adler32	A										<section class="prog__container"><pre><code>public class Adler32</code></pre>A class that can be used to compute the Adler-32 checksum of a data stream. An Adler-32 checksum is almost as reliable as a CRC-32 but can be computed much faster.</section>	https://developer.android.com/reference/java/util/zip/Adler32.html
Advanceable	A										<section class="prog__container"><pre><code>public interface Advanceable</code></pre>This interface can be implemented by any collection-type view which has a notion of progressing through its set of children. The interface exists to give AppWidgetHosts a way of taking responsibility for automatically advancing such collections.</section>	https://developer.android.com/reference/android/widget/Advanceable.html
AdvertiseCallback	A										<section class="prog__container"><pre><code>public abstract class AdvertiseCallback</code></pre>Bluetooth LE advertising callbacks, used to deliver advertising operation status.</section>	https://developer.android.com/reference/android/bluetooth/le/AdvertiseCallback.html
AdvertiseData	A										<section class="prog__container"><pre><code>public final class AdvertiseData</code></pre>Advertise data packet container for Bluetooth LE advertising. This represents the data to be advertised as well as the scan response data for active scans.</section>	https://developer.android.com/reference/android/bluetooth/le/AdvertiseData.html
AdvertiseData.Builder	A										<section class="prog__container"><pre><code>public static final class AdvertiseData.Builder</code></pre>Builder for <code>AdvertiseData</code>.</section>	https://developer.android.com/reference/android/bluetooth/le/AdvertiseData.Builder.html
AdvertiseSettings	A										<section class="prog__container"><pre><code>public final class AdvertiseSettings</code></pre>The <code>AdvertiseSettings</code> provide a way to adjust advertising preferences for each Bluetooth LE advertisement instance. Use <code>AdvertiseSettings.Builder</code> to create an instance of this class.</section>	https://developer.android.com/reference/android/bluetooth/le/AdvertiseSettings.html
AdvertiseSettings.Builder	A										<section class="prog__container"><pre><code>public static final class AdvertiseSettings.Builder</code></pre>Builder class for <code>AdvertiseSettings</code>.</section>	https://developer.android.com/reference/android/bluetooth/le/AdvertiseSettings.Builder.html
AlarmClock	A										<section class="prog__container"><pre><code>public final class AlarmClock</code></pre>The AlarmClock provider contains an Intent action and extras that can be used to start an Activity to set a new alarm or timer in an alarm clock application. Applications that wish to receive the ACTION_SET_ALARM and ACTION_SET_TIMER Intents should create an activity to handle the Intent that requires the permission com.android.alarm.permission.SET_ALARM. Applications that wish to create a new alarm or timer should use <code>Context.startActivity()</code> so that the user has the option of choosing which alarm clock application to use.</section>	https://developer.android.com/reference/android/provider/AlarmClock.html
AlarmManager	A										<section class="prog__container"><pre><code>public class AlarmManager</code></pre>This class provides access to the system alarm services. These allow you to schedule your application to be run at some point in the future. When an alarm goes off, the <code>Intent</code> that had been registered for it is broadcast by the system, automatically starting the target application if it is not already running. Registered alarms are retained while the device is asleep (and can optionally wake the device up if they go off during that time), but will be cleared if it is turned off and rebooted.</section>	https://developer.android.com/reference/android/app/AlarmManager.html
AlarmManager.AlarmClockInfo	A										<section class="prog__container"><pre><code>public static final class AlarmManager.AlarmClockInfo</code></pre>An immutable description of a scheduled "alarm clock" event.</section>	https://developer.android.com/reference/android/app/AlarmManager.AlarmClockInfo.html
AlarmManager.OnAlarmListener	A										<section class="prog__container"><pre><code>public static interface AlarmManager.OnAlarmListener</code></pre>Direct-notification alarms: the requester must be running continuously from the time the alarm is set to the time it is delivered, or delivery will fail. Only one-shot alarms can be set using this mechanism, not repeating alarms.</section>	https://developer.android.com/reference/android/app/AlarmManager.OnAlarmListener.html
AlertDialog	D								*[[android.app.AlertDialog]], <section class="prog__container"><pre><code>public class AlertDialog</code></pre>A subclass of Dialog that can display one, two or three buttons. If you only want to display a String in this dialog box, use the setMessage() method. If you want to display a more complex view, look up the FrameLayout called "custom" and add your view to it: <pre> FrameLayout fl = (FrameLayout) findViewById(android.R.id.custom); fl.addView(myView, new LayoutParams(MATCH_PARENT, WRAP_CONTENT)); </pre></section>\n*[[v7.app.AlertDialog]], <section class="prog__container"><pre><code>public class AlertDialog</code></pre>A subclass of Dialog that can display one, two or three buttons. If you only want to display a String in this dialog box, use the setMessage() method. If you want to display a more complex view, look up the FrameLayout called "custom" and add your view to it: <pre> FrameLayout fl = (FrameLayout) findViewById(android.R.id.custom); fl.addView(myView, new LayoutParams(MATCH_PARENT, WRAP_CONTENT)); </pre></section>			
AlertDialog.Builder	D								*[[android.app.AlertDialog.Builder]], <section class="prog__container"><pre><code>public static class AlertDialog.Builder</code></pre></section>\n*[[v7.app.AlertDialog.Builder]], <section class="prog__container"><pre><code>public static class AlertDialog.Builder</code></pre></section>			
AlgorithmConstraints	A										<section class="prog__container"><pre><code>public interface AlgorithmConstraints</code></pre>This interface specifies constraints for cryptographic algorithms, keys (key sizes), and other algorithm parameters.</section>	https://developer.android.com/reference/java/security/AlgorithmConstraints.html
AlgorithmParameterGenerator	A										<section class="prog__container"><pre><code>public class AlgorithmParameterGenerator</code></pre>The <code>AlgorithmParameterGenerator</code> class is used to generate a set of parameters to be used with a certain algorithm. Parameter generators are constructed using the <code>getInstance</code> factory methods (static methods that return instances of a given class).</section>	https://developer.android.com/reference/java/security/AlgorithmParameterGenerator.html
AlgorithmParameterGeneratorSpi	A										<section class="prog__container"><pre><code>public abstract class AlgorithmParameterGeneratorSpi</code></pre>This class defines the <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>AlgorithmParameterGenerator</code> class, which is used to generate a set of parameters to be used with a certain algorithm.</section>	https://developer.android.com/reference/java/security/AlgorithmParameterGeneratorSpi.html
AlgorithmParameterSpec	A										<section class="prog__container"><pre><code>public interface AlgorithmParameterSpec</code></pre>A (transparent) specification of cryptographic parameters.</section>	https://developer.android.com/reference/java/security/spec/AlgorithmParameterSpec.html
AlgorithmParameters	A										<section class="prog__container"><pre><code>public class AlgorithmParameters</code></pre>This class is used as an opaque representation of cryptographic parameters.</section>	https://developer.android.com/reference/java/security/AlgorithmParameters.html
AlgorithmParametersSpi	A										<section class="prog__container"><pre><code>public abstract class AlgorithmParametersSpi</code></pre>This class defines the <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>AlgorithmParameters</code> class, which is used to manage algorithm parameters.</section>	https://developer.android.com/reference/java/security/AlgorithmParametersSpi.html
AliasActivity	A										<section class="prog__container"><pre><code>public class AliasActivity</code></pre>Stub activity that launches another activity (and then finishes itself) based on information in its component's manifest meta-data. This is a simple way to implement an alias-like mechanism. To use this activity, you should include in the manifest for the associated component an entry named "android.app.alias". It is a reference to an XML resource describing an intent that launches the real application.</section>	https://developer.android.com/reference/android/app/AliasActivity.html
AlignmentSpan	A										<section class="prog__container"><pre><code>public interface AlignmentSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/AlignmentSpan.html
AlignmentSpan.Standard	A										<section class="prog__container"><pre><code>public static class AlignmentSpan.Standard</code></pre></section>	https://developer.android.com/reference/android/text/style/AlignmentSpan.Standard.html
AllPermission	A										<section class="prog__container"><pre><code>public final class AllPermission</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/security/AllPermission.html
Allocation	D								*[[android.renderscript.Allocation]], <section class="prog__container"><pre><code>public class Allocation</code></pre></section>\n*[[v8.renderscript.Allocation]], <section class="prog__container"><pre><code>public class Allocation</code></pre></section>			
Allocation.MipmapControl	D								*[[android.renderscript.Allocation.MipmapControl]], <section class="prog__container"><pre><code>public static final enum Allocation.MipmapControl</code></pre>Controls mipmap behavior when using the bitmap creation and update functions.</section>\n*[[v8.renderscript.Allocation.MipmapControl]], <section class="prog__container"><pre><code>public static final enum Allocation.MipmapControl</code></pre>Controls mipmap behavior when using the bitmap creation and update functions.</section>			
Allocation.OnBufferAvailableListener	A										<section class="prog__container"><pre><code>public static interface Allocation.OnBufferAvailableListener</code></pre>Interface to handle notification when new buffers are available via <code>USAGE_IO_INPUT</code>. An application will receive one notification when a buffer is available. Additional buffers will not trigger new notifications until a buffer is processed.</section>	https://developer.android.com/reference/android/renderscript/Allocation.OnBufferAvailableListener.html
AllocationAdapter	A										<section class="prog__container"><pre><code>public class AllocationAdapter</code></pre>Only intended for use by generated reflected code.</section>	https://developer.android.com/reference/android/renderscript/AllocationAdapter.html
AllowAllHostnameVerifier	A										<section class="prog__container"><pre><code>public class AllowAllHostnameVerifier</code></pre><p class="caution"><strong> This class was deprecated in API level 22.</strong><br/> Please use <code>openConnection()</code> instead. Please visit this webpage for further details.</section>	https://developer.android.com/reference/org/apache/http/conn/ssl/AllowAllHostnameVerifier.html
AlphaAnimation	A										<section class="prog__container"><pre><code>public class AlphaAnimation</code></pre>An animation that controls the alpha level of an object. Useful for fading things in and out. This animation ends up changing the alpha property of a <code>Transformation</code></section>	https://developer.android.com/reference/android/view/animation/AlphaAnimation.html
AlphabetIndexer	A										<section class="prog__container"><pre><code>public class AlphabetIndexer</code></pre>A helper class for adapters that implement the SectionIndexer interface. If the items in the adapter are sorted by simple alphabet-based sorting, then this class provides a way to do fast indexing of large lists using binary search. It caches the indices that have been determined through the binary search and also invalidates the cache if changes occur in the cursor.</section>	https://developer.android.com/reference/android/widget/AlphabetIndexer.html
AlphabeticIndex	A										<section class="prog__container"><pre><code>public final class AlphabeticIndex</code></pre>AlphabeticIndex supports the creation of a UI index appropriate for a given language. It can support either direct use, or use with a client that doesn't support localized collation. The following is an example of what an index might look like in a UI: <pre> <b>... A B C D E F G H I J K L M N O P Q R S T U V W X Y Z ...</b> <b>A</b> Addison Albertson Azensky <b>B</b> Baecker ... </pre> The class can generate a list of labels for use as a UI "index", that is, a list of clickable characters (or character sequences) that allow the user to see a segment (bucket) of a larger "target" list. That is, each label corresponds to a bucket in the target list, where everything in the bucket is greater than or equal to the character (according to the locale's collation). Strings can be added to the index; they will be in sorted order in the right bucket.</section>	https://developer.android.com/reference/android/icu/text/AlphabeticIndex.html
AlphabeticIndex.Bucket	A										<section class="prog__container"><pre><code>public static class AlphabeticIndex.Bucket</code></pre>An index "bucket" with a label string and type. It is referenced by <code>getBucketIndex(CharSequence)</code> and <code>getBucketIndex(CharSequence)</code>, returned by <code>getBucket(int)</code>, and <code>addRecord(CharSequence, Object)</code> adds a record into a bucket according to the record's name.</section>	https://developer.android.com/reference/android/icu/text/AlphabeticIndex.Bucket.html
AlphabeticIndex.Bucket.LabelType	A										<section class="prog__container"><pre><code>public static final enum AlphabeticIndex.Bucket.LabelType</code></pre>Type of the label</section>	https://developer.android.com/reference/android/icu/text/AlphabeticIndex.Bucket.LabelType.html
AlphabeticIndex.ImmutableIndex	A										<section class="prog__container"><pre><code>public static final class AlphabeticIndex.ImmutableIndex</code></pre>Immutable, thread-safe version of <code>AlphabeticIndex</code>. This class provides thread-safe methods for bucketing, and random access to buckets and their properties, but does not offer adding records to the index.</section>	https://developer.android.com/reference/android/icu/text/AlphabeticIndex.ImmutableIndex.html
AlphabeticIndex.Record	A										<section class="prog__container"><pre><code>public static class AlphabeticIndex.Record</code></pre>A (name, data) pair, to be sorted by name into one of the index buckets. The user data is not used by the index implementation.</section>	https://developer.android.com/reference/android/icu/text/AlphabeticIndex.Record.html
AlreadyBoundException	A										<section class="prog__container"><pre><code>public class AlreadyBoundException</code></pre>Unchecked exception thrown when an attempt is made to bind the socket a network oriented channel that is already bound.</section>	https://developer.android.com/reference/java/nio/channels/AlreadyBoundException.html
AlreadyConnectedException	A										<section class="prog__container"><pre><code>public class AlreadyConnectedException</code></pre>Unchecked exception thrown when an attempt is made to connect a <code>SocketChannel</code> that is already connected.</section>	https://developer.android.com/reference/java/nio/channels/AlreadyConnectedException.html
AlteredCharSequence	A										<section class="prog__container"><pre><code>public class AlteredCharSequence</code></pre>An AlteredCharSequence is a CharSequence that is largely mirrored from another CharSequence, except that a specified range of characters are mirrored from a different char array instead.</section>	https://developer.android.com/reference/android/text/AlteredCharSequence.html
AlwaysOnHotwordDetector	A										<section class="prog__container"><pre><code>public class AlwaysOnHotwordDetector</code></pre>A class that lets a VoiceInteractionService implementation interact with always-on keyphrase detection APIs.</section>	https://developer.android.com/reference/android/service/voice/AlwaysOnHotwordDetector.html
AlwaysOnHotwordDetector.Callback	A										<section class="prog__container"><pre><code>public static abstract class AlwaysOnHotwordDetector.Callback</code></pre>Callbacks for always-on hotword detection.</section>	https://developer.android.com/reference/android/service/voice/AlwaysOnHotwordDetector.Callback.html
AlwaysOnHotwordDetector.EventPayload	A										<section class="prog__container"><pre><code>public static class AlwaysOnHotwordDetector.EventPayload</code></pre>Additional payload for <code>onDetected(AlwaysOnHotwordDetector.EventPayload)</code>.</section>	https://developer.android.com/reference/android/service/voice/AlwaysOnHotwordDetector.EventPayload.html
AnalogClock	A										<section class="prog__container"><pre><code>public class AnalogClock</code></pre><p class="caution"><strong> This class was deprecated in API level 23.</strong><br/> This widget is no longer supported.</section>	https://developer.android.com/reference/android/widget/AnalogClock.html
AndroidCharacter	A										<section class="prog__container"><pre><code>public class AndroidCharacter</code></pre>AndroidCharacter exposes some character properties that are not easily accessed from java.lang.Character.</section>	https://developer.android.com/reference/android/text/AndroidCharacter.html
AndroidConfig	A										Implements the java.util.logging configuration for Android.	https://developer.android.com/reference/com/android/internal/logging/package-summary.html
AndroidException	A										<section class="prog__container"><pre><code>public class AndroidException</code></pre>Base class for all checked exceptions thrown by the Android frameworks.</section>	https://developer.android.com/reference/android/util/AndroidException.html
AndroidRuntimeException	A										<section class="prog__container"><pre><code>public class AndroidRuntimeException</code></pre>Base class for all unchecked exceptions thrown by the Android frameworks.</section>	https://developer.android.com/reference/android/util/AndroidRuntimeException.html
AndroidTestCase	A										<section class="prog__container"><pre><code>public class AndroidTestCase</code></pre><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use InstrumentationRegistry instead. New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/AndroidTestCase.html
AndroidTestRunner	A										<section class="prog__container"><pre><code>public class AndroidTestRunner</code></pre><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use AndroidJUnitRunner instead. New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/AndroidTestRunner.html
AnimRes	A										<section class="prog__container"><pre><code>public abstract @interface AnimRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be an anim resource reference (e.g. <code>android.R.anim.fade_in</code>).</section>	https://developer.android.com/reference/android/support/annotation/AnimRes.html
Animatable	A										<section class="prog__container"><pre><code>public interface Animatable</code></pre>Interface that drawables supporting animations should implement.</section>	https://developer.android.com/reference/android/graphics/drawable/Animatable.html
Animatable2	A										<section class="prog__container"><pre><code>public interface Animatable2</code></pre>Abstract class that drawables supporting animations and callbacks should extend.</section>	https://developer.android.com/reference/android/graphics/drawable/Animatable2.html
Animatable2.AnimationCallback	A										<section class="prog__container"><pre><code>public static abstract class Animatable2.AnimationCallback</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/Animatable2.AnimationCallback.html
AnimatedStateListDrawable	A										<section class="prog__container"><pre><code>public class AnimatedStateListDrawable</code></pre>Drawable containing a set of Drawable keyframes where the currently displayed keyframe is chosen based on the current state set. Animations between keyframes may optionally be defined using transition elements.</section>	https://developer.android.com/reference/android/graphics/drawable/AnimatedStateListDrawable.html
AnimatedVectorDrawable	A										<section class="prog__container"><pre><code>public class AnimatedVectorDrawable</code></pre>This class animates properties of a <code>VectorDrawable</code> with animations defined using <code>ObjectAnimator</code> or <code>AnimatorSet</code>.</section>	https://developer.android.com/reference/android/graphics/drawable/AnimatedVectorDrawable.html
AnimatedVectorDrawableCompat	A										<section class="prog__container"><pre><code>public class AnimatedVectorDrawableCompat</code></pre>For API 24 and above, this class is delegating to the framework's <code>AnimatedVectorDrawable</code>. For older API version, this class uses <code>ObjectAnimator</code> and <code>AnimatorSet</code> to animate the properties of a <code>VectorDrawableCompat</code> to create an animated drawable.</section>	https://developer.android.com/reference/android/support/graphics/drawable/AnimatedVectorDrawableCompat.html
Animation	A										<section class="prog__container"><pre><code>public abstract class Animation</code></pre>Abstraction for an Animation that can be applied to Views, Surfaces, or other objects. See the <code>animation package description file</code>.</section>	https://developer.android.com/reference/android/view/animation/Animation.html
Animation.AnimationListener	A										<section class="prog__container"><pre><code>public static interface Animation.AnimationListener</code></pre></section>	https://developer.android.com/reference/android/view/animation/Animation.AnimationListener.html
Animation.Description	A										<section class="prog__container"><pre><code>protected static class Animation.Description</code></pre>Utility class to parse a string description of a size.</section>	https://developer.android.com/reference/android/view/animation/Animation.Description.html
AnimationDrawable	A										<section class="prog__container"><pre><code>public class AnimationDrawable</code></pre>An object used to create frame-by-frame animations, defined by a series of Drawable objects, which can be used as a View object's background.</section>	https://developer.android.com/reference/android/graphics/drawable/AnimationDrawable.html
AnimationSet	A										<section class="prog__container"><pre><code>public class AnimationSet</code></pre>Represents a group of Animations that should be played together. The transformation of each individual animation are composed together into a single transform. If AnimationSet sets any properties that its children also set (for example, duration or fillBefore), the values of AnimationSet override the child values.</section>	https://developer.android.com/reference/android/view/animation/AnimationSet.html
AnimationUtils	A										<section class="prog__container"><pre><code>public class AnimationUtils</code></pre>Defines common utilities for working with animations.</section>	https://developer.android.com/reference/android/view/animation/AnimationUtils.html
Animator	A										<section class="prog__container"><pre><code>public abstract class Animator</code></pre>This is the superclass for classes which provide basic support for animations which can be started, ended, and have <code>AnimatorListeners</code> added to them.</section>	https://developer.android.com/reference/android/animation/Animator.html
Animator.AnimatorListener	A										<section class="prog__container"><pre><code>public static interface Animator.AnimatorListener</code></pre></section>	https://developer.android.com/reference/android/animation/Animator.AnimatorListener.html
Animator.AnimatorPauseListener	A										<section class="prog__container"><pre><code>public static interface Animator.AnimatorPauseListener</code></pre>A pause listener receives notifications from an animation when the animation is <code>paused</code> or <code>resumed</code>.</section>	https://developer.android.com/reference/android/animation/Animator.AnimatorPauseListener.html
AnimatorInflater	A										<section class="prog__container"><pre><code>public class AnimatorInflater</code></pre>This class is used to instantiate animator XML files into Animator objects.</section>	https://developer.android.com/reference/android/animation/AnimatorInflater.html
AnimatorListenerAdapter	A										<section class="prog__container"><pre><code>public abstract class AnimatorListenerAdapter</code></pre>This adapter class provides empty implementations of the methods from <code>Animator.AnimatorListener</code>. Any custom listener that cares only about a subset of the methods of this listener can simply subclass this adapter class instead of implementing the interface directly.</section>	https://developer.android.com/reference/android/animation/AnimatorListenerAdapter.html
AnimatorRes	A										<section class="prog__container"><pre><code>public abstract @interface AnimatorRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be an animator resource reference (e.g. <code>android.R.animator.fade_in</code>).</section>	https://developer.android.com/reference/android/support/annotation/AnimatorRes.html
AnimatorSet	A										<section class="prog__container"><pre><code>public final class AnimatorSet</code></pre>This class plays a set of <code>Animator</code> objects in the specified order. Animations can be set up to play together, in sequence, or after a specified delay.</section>	https://developer.android.com/reference/android/animation/AnimatorSet.html
AnimatorSet.Builder	A										<section class="prog__container"><pre><code>public class AnimatorSet.Builder</code></pre>The <code>Builder</code> object is a utility class to facilitate adding animations to a <code>AnimatorSet</code> along with the relationships between the various animations. The intention of the <code>Builder</code> methods, along with the <code>play()</code> method of <code>AnimatorSet</code> is to make it possible to express the dependency relationships of animations in a natural way. Developers can also use the <code>playTogether()</code> and <code>playSequentially()</code> methods if these suit the need, but it might be easier in some situations to express the AnimatorSet of animations in pairs.</section>	https://developer.android.com/reference/android/animation/AnimatorSet.Builder.html
AnnotatedElement	A										<section class="prog__container"><pre><code>public interface AnnotatedElement</code></pre>Represents an annotated element of the program currently running in this VM. This interface allows annotations to be read reflectively. All annotations returned by methods in this interface are immutable and serializable. It is permissible for the caller to modify the arrays returned by accessors for array-valued enum members; it will have no affect on the arrays returned to other callers.</section>	https://developer.android.com/reference/java/lang/reflect/AnnotatedElement.html
Annotation	D								*[[android.text.Annotation]], <section class="prog__container"><pre><code>public class Annotation</code></pre>Annotations are simple key-value pairs that are preserved across TextView save/restore cycles and can be used to keep application-specific data that needs to be maintained for regions of text.</section>\n*[[annotation.Annotation]], <section class="prog__container"><pre><code>public interface Annotation</code></pre>The common interface extended by all annotation types. Note that an interface that manually extends this one does <i>not</i> define an annotation type. Also note that this interface does not itself define an annotation type. More information about annotation types can be found in section 9.6 of <cite>The Java&trade; Language Specification</cite>.</section>\n*[[java.text.Annotation]], <section class="prog__container"><pre><code>public class Annotation</code></pre>An Annotation object is used as a wrapper for a text attribute value if the attribute has annotation characteristics. These characteristics are: <ul> <li>The text range that the attribute is applied to is critical to the semantics of the range. That means, the attribute cannot be applied to subranges of the text range that it applies to, and, if two adjacent text ranges have the same value for this attribute, the attribute still cannot be applied to the combined range as a whole with this value. <li>The attribute or its value usually do no longer apply if the underlying text is changed. </li></li></ul> An example is grammatical information attached to a sentence: For the previous sentence, you can say that "an example" is the subject, but you cannot say the same about "an", "example", or "exam". When the text is changed, the grammatical information typically becomes invalid. Another example is Japanese reading information (yomi).</section>			
AnnotationFormatError	A										<section class="prog__container"><pre><code>public class AnnotationFormatError</code></pre>Thrown when the annotation parser attempts to read an annotation from a class file and determines that the annotation is malformed. This error can be thrown by the API used to read annotations reflectively</section>	https://developer.android.com/reference/java/lang/annotation/AnnotationFormatError.html
AnnotationTypeMismatchException	A										<section class="prog__container"><pre><code>public class AnnotationTypeMismatchException</code></pre>Thrown to indicate that a program has attempted to access an element of an annotation whose type has changed after the annotation was compiled (or serialized). This exception can be thrown by the API used to read annotations reflectively</section>	https://developer.android.com/reference/java/lang/annotation/AnnotationTypeMismatchException.html
AnticipateInterpolator	A										<section class="prog__container"><pre><code>public class AnticipateInterpolator</code></pre>An interpolator where the change starts backward then flings forward.</section>	https://developer.android.com/reference/android/view/animation/AnticipateInterpolator.html
AnticipateOvershootInterpolator	A										<section class="prog__container"><pre><code>public class AnticipateOvershootInterpolator</code></pre>An interpolator where the change starts backward then flings forward and overshoots the target value and finally goes back to the final value.</section>	https://developer.android.com/reference/android/view/animation/AnticipateOvershootInterpolator.html
AnyRes	A										<section class="prog__container"><pre><code>public abstract @interface AnyRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be a resource reference of any type. If the specific type is known, use one of the more specific annotations instead, such as <code>StringRes</code> or <code>DrawableRes</code>.</section>	https://developer.android.com/reference/android/support/annotation/AnyRes.html
AnyThread	A										<section class="prog__container"><pre><code>public abstract @interface AnyThread</code></pre>Denotes that the annotated method can be called from any thread (e.g. it is "thread safe".) If the annotated element is a class, then all methods in the class can be called from any thread.</section>	https://developer.android.com/reference/android/support/annotation/AnyThread.html
AppBarLayout	A										<section class="prog__container"><pre><code>public class AppBarLayout</code></pre>AppBarLayout is a vertical <code>LinearLayout</code> which implements many of the features of material designs app bar concept, namely scrolling gestures.</section>	https://developer.android.com/reference/android/support/design/widget/AppBarLayout.html
AppBarLayout.Behavior	A										<section class="prog__container"><pre><code>public static class AppBarLayout.Behavior</code></pre>The default <code>AppBarLayout.Behavior</code> for <code>AppBarLayout</code>. Implements the necessary nested scroll handling with offsetting.</section>	https://developer.android.com/reference/android/support/design/widget/AppBarLayout.Behavior.html
AppBarLayout.Behavior.DragCallback	A										<section class="prog__container"><pre><code>public static abstract class AppBarLayout.Behavior.DragCallback</code></pre>Callback to allow control over any <code>AppBarLayout</code> dragging.</section>	https://developer.android.com/reference/android/support/design/widget/AppBarLayout.Behavior.DragCallback.html
AppBarLayout.Behavior.SavedState	A										<section class="prog__container"><pre><code>protected static class AppBarLayout.Behavior.SavedState</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/AppBarLayout.Behavior.SavedState.html
AppBarLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class AppBarLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/AppBarLayout.LayoutParams.html
AppBarLayout.OnOffsetChangedListener	A										<section class="prog__container"><pre><code>public static interface AppBarLayout.OnOffsetChangedListener</code></pre>Interface definition for a callback to be invoked when an <code>AppBarLayout</code>'s vertical offset changes.</section>	https://developer.android.com/reference/android/support/design/widget/AppBarLayout.OnOffsetChangedListener.html
AppBarLayout.ScrollingViewBehavior	A										<section class="prog__container"><pre><code>public static class AppBarLayout.ScrollingViewBehavior</code></pre>Behavior which should be used by <code>View</code>s which can scroll vertically and support nested scrolling to automatically scroll any <code>AppBarLayout</code> siblings.</section>	https://developer.android.com/reference/android/support/design/widget/AppBarLayout.ScrollingViewBehavior.html
AppCompatActivity	A										<section class="prog__container"><pre><code>public class AppCompatActivity</code></pre>Base class for activities that use the support library action bar features.</section>	https://developer.android.com/reference/android/support/v7/app/AppCompatActivity.html
AppCompatAutoCompleteTextView	A										<section class="prog__container"><pre><code>public class AppCompatAutoCompleteTextView</code></pre>A <code>AutoCompleteTextView</code> which supports compatible features on older version of the platform, including: <ul> <li>Supports <code>textAllCaps</code> style attribute which works back to <code>Gingerbread</code>.</li> <li>Allows dynamic tint of it background via the background tint methods in <code>ViewCompat</code>.</li> <li>Allows setting of the background tint using <code>backgroundTint</code> and <code>backgroundTintMode</code>.</li> </ul></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatAutoCompleteTextView.html
AppCompatButton	A										<section class="prog__container"><pre><code>public class AppCompatButton</code></pre>A <code>Button</code> which supports compatible features on older version of the platform, including: <ul> <li>Supports <code>textAllCaps</code> style attribute which works back to <code>Gingerbread</code>.</li> <li>Allows dynamic tint of it background via the background tint methods in <code>ViewCompat</code>.</li> <li>Allows setting of the background tint using <code>backgroundTint</code> and <code>backgroundTintMode</code>.</li> </ul></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatButton.html
AppCompatCallback	A										<section class="prog__container"><pre><code>public interface AppCompatCallback</code></pre>Implemented this in order for AppCompat to be able to callback in certain situations.</section>	https://developer.android.com/reference/android/support/v7/app/AppCompatCallback.html
AppCompatCheckBox	A										<section class="prog__container"><pre><code>public class AppCompatCheckBox</code></pre>A <code>CheckBox</code> which supports compatible features on older version of the platform, including: <ul> <li>Allows dynamic tint of it background via the background tint methods in <code>CompoundButtonCompat</code>.</li> <li>Allows setting of the background tint using <code>buttonTint</code> and <code>buttonTintMode</code>.</li> </ul></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatCheckBox.html
AppCompatCheckedTextView	A										<section class="prog__container"><pre><code>public class AppCompatCheckedTextView</code></pre>A <code>CheckedTextView</code> which supports compatible features on older version of the platform.</section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatCheckedTextView.html
AppCompatDelegate	A										<section class="prog__container"><pre><code>public abstract class AppCompatDelegate</code></pre>This class represents a delegate which you can use to extend AppCompat's support to any <code>Activity</code>.</section>	https://developer.android.com/reference/android/support/v7/app/AppCompatDelegate.html
AppCompatDialog	A										<section class="prog__container"><pre><code>public class AppCompatDialog</code></pre>Base class for AppCompat themed <code>Dialog</code>s.</section>	https://developer.android.com/reference/android/support/v7/app/AppCompatDialog.html
AppCompatDialogFragment	A										<section class="prog__container"><pre><code>public class AppCompatDialogFragment</code></pre>A special version of <code>DialogFragment</code> which uses an <code>AppCompatDialog</code> in place of a platform-styled dialog.</section>	https://developer.android.com/reference/android/support/v7/app/AppCompatDialogFragment.html
AppCompatEditText	A										<section class="prog__container"><pre><code>public class AppCompatEditText</code></pre>A <code>EditText</code> which supports compatible features on older version of the platform, including: <ul> <li>Supports <code>textAllCaps</code> style attribute which works back to <code>Gingerbread</code>.</li> <li>Allows dynamic tint of it background via the background tint methods in <code>ViewCompat</code>.</li> <li>Allows setting of the background tint using <code>backgroundTint</code> and <code>backgroundTintMode</code>.</li> </ul></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatEditText.html
AppCompatImageButton	A										<section class="prog__container"><pre><code>public class AppCompatImageButton</code></pre>A <code>ImageButton</code> which supports compatible features on older version of the platform, including: <ul> <li>Allows dynamic tint of it background via the background tint methods in <code>ViewCompat</code>.</li> <li>Allows setting of the background tint using <code>backgroundTint</code> and <code>backgroundTintMode</code>.</li> </ul></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatImageButton.html
AppCompatImageView	A										<section class="prog__container"><pre><code>public class AppCompatImageView</code></pre>A <code>ImageView</code> which supports compatible features on older version of the platform, including: <ul> <li>Allows dynamic tint of it background via the background tint methods in <code>ViewCompat</code>.</li> <li>Allows setting of the background tint using <code>backgroundTint</code> and <code>backgroundTintMode</code>.</li> </ul></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatImageView.html
AppCompatMultiAutoCompleteTextView	A										<section class="prog__container"><pre><code>public class AppCompatMultiAutoCompleteTextView</code></pre>A <code>MultiAutoCompleteTextView</code> which supports compatible features on older version of the platform, including: <ul> <li>Supports <code>textAllCaps</code> style attribute which works back to <code>Gingerbread</code>.</li> <li>Allows dynamic tint of it background via the background tint methods in <code>ViewCompat</code>.</li> <li>Allows setting of the background tint using <code>backgroundTint</code> and <code>backgroundTintMode</code>.</li> </ul></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatMultiAutoCompleteTextView.html
AppCompatRadioButton	A										<section class="prog__container"><pre><code>public class AppCompatRadioButton</code></pre>A <code>RadioButton</code> which supports compatible features on older version of the platform, including: <ul> <li>Allows dynamic tint of it background via the background tint methods in <code>CompoundButtonCompat</code>.</li> <li>Allows setting of the background tint using <code>buttonTint</code> and <code>buttonTintMode</code>.</li> </ul></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatRadioButton.html
AppCompatRatingBar	A										<section class="prog__container"><pre><code>public class AppCompatRatingBar</code></pre>A <code>RatingBar</code> which supports compatible features on older version of the platform.</section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatRatingBar.html
AppCompatResources	A										<section class="prog__container"><pre><code>public final class AppCompatResources</code></pre>Class for accessing an application's resources through AppCompat, and thus any backward compatible functionality.</section>	https://developer.android.com/reference/android/support/v7/content/res/AppCompatResources.html
AppCompatSeekBar	A										<section class="prog__container"><pre><code>public class AppCompatSeekBar</code></pre>A <code>SeekBar</code> which supports compatible features on older version of the platform.</section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatSeekBar.html
AppCompatSpinner	A										<section class="prog__container"><pre><code>public class AppCompatSpinner</code></pre>A <code>Spinner</code> which supports compatible features on older versions of the platform, including: <ul> <li>Dynamic tinting of the background via the background tint methods in <code>ViewCompat</code>.</li> <li>Configuring the background tint using <code>backgroundTint</code> and <code>backgroundTintMode</code>.</li> <li>Setting the popup theme using <code>popupTheme</code>.</li> </ul></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatSpinner.html
AppCompatTextView	A										<section class="prog__container"><pre><code>public class AppCompatTextView</code></pre>A <code>TextView</code> which supports compatible features on older version of the platform, including: <ul> <li>Supports <code>textAllCaps</code> style attribute which works back to <code>Gingerbread</code>.</li> <li>Allows dynamic tint of it background via the background tint methods in <code>ViewCompat</code>.</li> <li>Allows setting of the background tint using <code>backgroundTint</code> and <code>backgroundTintMode</code>.</li> </ul></section>	https://developer.android.com/reference/android/support/v7/widget/AppCompatTextView.html
AppLaunchChecker	A										<section class="prog__container"><pre><code>public class AppLaunchChecker</code></pre>This class provides APIs for determining how an app has been launched. This can be useful if you want to confirm that a user has launched your app through its front door activity from their launcher/home screen, rather than just if the app has been opened in the past in order to view a link, open a document or perform some other service for other apps on the device.</section>	https://developer.android.com/reference/android/support/v4/app/AppLaunchChecker.html
AppOpsManager	A										<section class="prog__container"><pre><code>public class AppOpsManager</code></pre>API for interacting with "application operation" tracking.</section>	https://developer.android.com/reference/android/app/AppOpsManager.html
AppOpsManager.OnOpChangedListener	A										<section class="prog__container"><pre><code>public static interface AppOpsManager.OnOpChangedListener</code></pre>Callback for notification of changes to operation state.</section>	https://developer.android.com/reference/android/app/AppOpsManager.OnOpChangedListener.html
AppOpsManagerCompat	A										<section class="prog__container"><pre><code>public final class AppOpsManagerCompat</code></pre>Helper for accessing features in android.app.AppOpsManager introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/app/AppOpsManagerCompat.html
AppWidgetHost	A										<section class="prog__container"><pre><code>public class AppWidgetHost</code></pre>AppWidgetHost provides the interaction with the AppWidget service for apps, like the home screen, that want to embed AppWidgets in their UI.</section>	https://developer.android.com/reference/android/appwidget/AppWidgetHost.html
AppWidgetHostView	A										<section class="prog__container"><pre><code>public class AppWidgetHostView</code></pre>Provides the glue to show AppWidget views. This class offers automatic animation between updates, and will try recycling old views for each incoming <code>RemoteViews</code>.</section>	https://developer.android.com/reference/android/appwidget/AppWidgetHostView.html
AppWidgetManager	A										<section class="prog__container"><pre><code>public class AppWidgetManager</code></pre>Updates AppWidget state; gets information about installed AppWidget providers and other AppWidget related state. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/appwidget/AppWidgetManager.html
AppWidgetProvider	A										<section class="prog__container"><pre><code>public class AppWidgetProvider</code></pre>A convenience class to aid in implementing an AppWidget provider. Everything you can do with AppWidgetProvider, you can do with a regular <code>BroadcastReceiver</code>. AppWidgetProvider merely parses the relevant fields out of the Intent that is received in <code>onReceive(Context,Intent)</code>, and calls hook methods with the received extras.</section>	https://developer.android.com/reference/android/appwidget/AppWidgetProvider.html
AppWidgetProviderInfo	A										<section class="prog__container"><pre><code>public class AppWidgetProviderInfo</code></pre>Describes the meta data for an installed AppWidget provider. The fields in this class correspond to the fields in the <code>&lt;appwidget-provider&gt;</code> xml tag.</section>	https://developer.android.com/reference/android/appwidget/AppWidgetProviderInfo.html
Appendable	A										<section class="prog__container"><pre><code>public interface Appendable</code></pre>An object to which <tt>char</tt> sequences and values can be appended. The <tt>Appendable</tt> interface must be implemented by any class whose instances are intended to receive formatted output from a <code>Formatter</code>.</section>	https://developer.android.com/reference/java/lang/Appendable.html
Application	A										<section class="prog__container"><pre><code>public class Application</code></pre>Base class for maintaining global application state. You can provide your own implementation by creating a subclass and specifying the fully-qualified name of this subclass as the <code>"android:name"</code> attribute in your AndroidManifest.xml's <code>&lt;application&gt;</code> tag. The Application class, or your subclass of the Application class, is instantiated before any other class when the process for your application/package is created. <p class="note"><strong>Note: </strong>There is normally no need to subclass Application. In most situations, static singletons can provide the same functionality in a more modular way. If your singleton needs a global context (for example to register broadcast receivers), include <code>Context.getApplicationContext()</code> as a <code>Context</code> argument when invoking your singleton's <code>getInstance()</code> method.</section>	https://developer.android.com/reference/android/app/Application.html
Application.ActivityLifecycleCallbacks	A										<section class="prog__container"><pre><code>public static interface Application.ActivityLifecycleCallbacks</code></pre></section>	https://developer.android.com/reference/android/app/Application.ActivityLifecycleCallbacks.html
Application.OnProvideAssistDataListener	A										<section class="prog__container"><pre><code>public static interface Application.OnProvideAssistDataListener</code></pre>Callback interface for use with <code>registerOnProvideAssistDataListener(Application.OnProvideAssistDataListener)</code> and <code>unregisterOnProvideAssistDataListener(Application.OnProvideAssistDataListener)</code>.</section>	https://developer.android.com/reference/android/app/Application.OnProvideAssistDataListener.html
ApplicationErrorReport	A										<section class="prog__container"><pre><code>public class ApplicationErrorReport</code></pre>Describes an application error. A report has a type, which is one of <ul> <li> <code>TYPE_NONE</code> uninitialized instance of <code>ApplicationErrorReport</code>. <li> <code>TYPE_CRASH</code> application crash. Information about the crash is stored in <code>crashInfo</code>. <li> <code>TYPE_ANR</code> application not responding. Information about the ANR is stored in <code>anrInfo</code>. <li> <code>TYPE_BATTERY</code> user reported application is using too much battery. Information about the battery use is stored in <code>batteryInfo</code>. <li> <code>TYPE_RUNNING_SERVICE</code> user reported application is leaving an unneeded serive running. Information about the battery use is stored in <code>runningServiceInfo</code>. </li></li></li></li></li></ul></section>	https://developer.android.com/reference/android/app/ApplicationErrorReport.html
ApplicationErrorReport.AnrInfo	A										<section class="prog__container"><pre><code>public static class ApplicationErrorReport.AnrInfo</code></pre>Describes an application not responding error.</section>	https://developer.android.com/reference/android/app/ApplicationErrorReport.AnrInfo.html
ApplicationErrorReport.BatteryInfo	A										<section class="prog__container"><pre><code>public static class ApplicationErrorReport.BatteryInfo</code></pre>Describes a battery usage report.</section>	https://developer.android.com/reference/android/app/ApplicationErrorReport.BatteryInfo.html
ApplicationErrorReport.CrashInfo	A										<section class="prog__container"><pre><code>public static class ApplicationErrorReport.CrashInfo</code></pre>Describes an application crash.</section>	https://developer.android.com/reference/android/app/ApplicationErrorReport.CrashInfo.html
ApplicationErrorReport.RunningServiceInfo	A										<section class="prog__container"><pre><code>public static class ApplicationErrorReport.RunningServiceInfo</code></pre>Describes a running service report.</section>	https://developer.android.com/reference/android/app/ApplicationErrorReport.RunningServiceInfo.html
ApplicationInfo	A										<section class="prog__container"><pre><code>public class ApplicationInfo</code></pre>Information you can retrieve about a particular application. This corresponds to information collected from the AndroidManifest.xml's &lt;application&gt; tag.</section>	https://developer.android.com/reference/android/content/pm/ApplicationInfo.html
ApplicationInfo.DisplayNameComparator	A										<section class="prog__container"><pre><code>public static class ApplicationInfo.DisplayNameComparator</code></pre></section>	https://developer.android.com/reference/android/content/pm/ApplicationInfo.DisplayNameComparator.html
ArcMotion	A										<section class="prog__container"><pre><code>public class ArcMotion</code></pre>A PathMotion that generates a curved path along an arc on an imaginary circle containing the two points. If the horizontal distance between the points is less than the vertical distance, then the circle's center point will be horizontally aligned with the end point. If the vertical distance is less than the horizontal distance then the circle's center point will be vertically aligned with the end point.</section>	https://developer.android.com/reference/android/transition/ArcMotion.html
ArcShape	A										<section class="prog__container"><pre><code>public class ArcShape</code></pre>Creates an arc shape. The arc shape starts at a specified angle and sweeps clockwise, drawing slices of pie. The arc can be drawn to a Canvas with its own draw() method, but more graphical control is available if you instead pass the ArcShape to a <code>ShapeDrawable</code>.</section>	https://developer.android.com/reference/android/graphics/drawable/shapes/ArcShape.html
ArgbEvaluator	A										<section class="prog__container"><pre><code>public class ArgbEvaluator</code></pre>This evaluator can be used to perform type interpolation between integer values that represent ARGB colors.</section>	https://developer.android.com/reference/android/animation/ArgbEvaluator.html
ArithmeticException	A										<section class="prog__container"><pre><code>public class ArithmeticException</code></pre>Thrown when an exceptional arithmetic condition has occurred. For example, an integer "divide by zero" throws an instance of this class. <code>ArithmeticException</code> objects may be constructed by the virtual machine as if suppression were disabled and/or the stack trace was not writable</section>	https://developer.android.com/reference/java/lang/ArithmeticException.html
Array	D								*[[reflect.Array]], <section class="prog__container"><pre><code>public final class Array</code></pre>The <code>Array</code> class provides static methods to dynamically create and access Java arrays.</section>\n*[[sql.Array]], <section class="prog__container"><pre><code>public interface Array</code></pre>The mapping in the Java programming language for the SQL type <code>ARRAY</code>. By default, an <code>Array</code> value is a transaction-duration reference to an SQL <code>ARRAY</code> value. By default, an <code>Array</code> object is implemented using an SQL LOCATOR(array) internally, which means that an <code>Array</code> object contains a logical pointer to the data in the SQL <code>ARRAY</code> value rather than containing the <code>ARRAY</code> value's data.</section>			
ArrayAdapter	A										<section class="prog__container"><pre><code>public class ArrayAdapter</code></pre>A concrete BaseAdapter that is backed by an array of arbitrary objects. By default this class expects that the provided resource id references a single TextView. If you want to use a more complex layout, use the constructors that also takes a field id. That field id should reference a TextView in the larger layout resource.</section>	https://developer.android.com/reference/android/widget/ArrayAdapter.html
ArrayBlockingQueue	A										<section class="prog__container"><pre><code>public class ArrayBlockingQueue</code></pre>A bounded blocking queue</section>	https://developer.android.com/reference/java/util/concurrent/ArrayBlockingQueue.html
ArrayDeque	A										<section class="prog__container"><pre><code>public class ArrayDeque</code></pre>Resizable-array implementation of the <code>Deque</code> interface. Array deques have no capacity restrictions; they grow as necessary to support usage. They are not thread-safe; in the absence of external synchronization, they do not support concurrent access by multiple threads. Null elements are prohibited. This class is likely to be faster than <code>Stack</code> when used as a stack, and faster than <code>LinkedList</code> when used as a queue.</section>	https://developer.android.com/reference/java/util/ArrayDeque.html
ArrayIndexOutOfBoundsException	A										<section class="prog__container"><pre><code>public class ArrayIndexOutOfBoundsException</code></pre>Thrown to indicate that an array has been accessed with an illegal index. The index is either negative or greater than or equal to the size of the array.</section>	https://developer.android.com/reference/java/lang/ArrayIndexOutOfBoundsException.html
ArrayList	A										<section class="prog__container"><pre><code>public class ArrayList</code></pre>Resizable-array implementation of the <tt>List</tt> interface. Implements all optional list operations, and permits all elements, including <tt>null</tt>. In addition to implementing the <tt>List</tt> interface, this class provides methods to manipulate the size of the array that is used internally to store the list. (This class is roughly equivalent to <tt>Vector</tt>, except that it is unsynchronized.)</section>	https://developer.android.com/reference/java/util/ArrayList.html
ArrayMap	D								*[[v4.util.ArrayMap]], <section class="prog__container"><pre><code>public class ArrayMap</code></pre>ArrayMap is a generic key-&gt;value mapping data structure that is designed to be more memory efficient than a traditional <code>HashMap</code>, this implementation is a version of the platform's <code>ArrayMap</code> that can be used on older versions of the platform. It keeps its mappings in an array data structure -- an integer array of hash codes for each item, and an Object array of the key/value pairs. This allows it to avoid having to create an extra object for every entry put in to the map, and it also tries to control the growth of the size of these arrays more aggressively (since growing them only requires copying the entries in the array, not rebuilding a hash map).</section>\n*[[android.util.ArrayMap]], <section class="prog__container"><pre><code>public final class ArrayMap</code></pre>ArrayMap is a generic key-&gt;value mapping data structure that is designed to be more memory efficient than a traditional <code>HashMap</code>. It keeps its mappings in an array data structure -- an integer array of hash codes for each item, and an Object array of the key/value pairs. This allows it to avoid having to create an extra object for every entry put in to the map, and it also tries to control the growth of the size of these arrays more aggressively (since growing them only requires copying the entries in the array, not rebuilding a hash map).</section>			
ArrayObjectAdapter	A										<section class="prog__container"><pre><code>public class ArrayObjectAdapter</code></pre>An <code>ObjectAdapter</code> implemented with an <code>ArrayList</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ArrayObjectAdapter.html
ArrayRes	A										<section class="prog__container"><pre><code>public abstract @interface ArrayRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be an array resource reference (e.g. <code>android.R.array.phoneTypes</code>).</section>	https://developer.android.com/reference/android/support/annotation/ArrayRes.html
ArraySet	D								*[[v4.util.ArraySet]], <section class="prog__container"><pre><code>public final class ArraySet</code></pre>ArraySet is a generic set data structure that is designed to be more memory efficient than a traditional <code>HashSet</code>. The design is very similar to <code>ArrayMap</code>, with all of the caveats described there. This implementation is separate from ArrayMap, however, so the Object array contains only one item for each entry in the set (instead of a pair for a mapping).</section>\n*[[android.util.ArraySet]], <section class="prog__container"><pre><code>public final class ArraySet</code></pre>ArraySet is a generic set data structure that is designed to be more memory efficient than a traditional <code>HashSet</code>. The design is very similar to <code>ArrayMap</code>, with all of the caveats described there. This implementation is separate from ArrayMap, however, so the Object array contains only one item for each entry in the set (instead of a pair for a mapping).</section>			
ArrayStoreException	A										<section class="prog__container"><pre><code>public class ArrayStoreException</code></pre>Thrown to indicate that an attempt has been made to store the wrong type of object into an array of objects. For example, the following code generates an <code>ArrayStoreException</code>:</section>	https://developer.android.com/reference/java/lang/ArrayStoreException.html
Arrays	A										<section class="prog__container"><pre><code>public class Arrays</code></pre>This class contains various methods for manipulating arrays (such as sorting and searching). This class also contains a static factory that allows arrays to be viewed as lists.</section>	https://developer.android.com/reference/java/util/Arrays.html
ArrowKeyMovementMethod	A										<section class="prog__container"><pre><code>public class ArrowKeyMovementMethod</code></pre>A movement method that provides cursor movement and selection. Supports displaying the context menu on DPad Center.</section>	https://developer.android.com/reference/android/text/method/ArrowKeyMovementMethod.html
Assert	A										<section class="prog__container"><pre><code>public class Assert</code></pre>A set of assert methods. Messages are only displayed when an assert fails.</section>	https://developer.android.com/reference/junit/framework/Assert.html
AssertionError	A										<section class="prog__container"><pre><code>public class AssertionError</code></pre>Thrown to indicate that an assertion has failed.</section>	https://developer.android.com/reference/java/lang/AssertionError.html
AssertionFailedError	D								*[[test.AssertionFailedError]], <section class="prog__container"><pre><code>public class AssertionFailedError</code></pre><p class="caution"><strong> This class was deprecated in API level 16.</strong><br/> use junit.framework.AssertionFailedError</section>\n*[[framework.AssertionFailedError]], <section class="prog__container"><pre><code>public class AssertionFailedError</code></pre>Thrown when an assertion failed.</section>			
AssetFileDescriptor	A										<section class="prog__container"><pre><code>public class AssetFileDescriptor</code></pre>File descriptor of an entry in the AssetManager. This provides your own opened FileDescriptor that can be used to read the data, as well as the offset and length of that entry's data in the file.</section>	https://developer.android.com/reference/android/content/res/AssetFileDescriptor.html
AssetFileDescriptor.AutoCloseInputStream	A										<section class="prog__container"><pre><code>public static class AssetFileDescriptor.AutoCloseInputStream</code></pre>An InputStream you can create on a ParcelFileDescriptor, which will take care of calling <code>ParcelFileDescritor.close()</code> for you when the stream is closed.</section>	https://developer.android.com/reference/android/content/res/AssetFileDescriptor.AutoCloseInputStream.html
AssetFileDescriptor.AutoCloseOutputStream	A										<section class="prog__container"><pre><code>public static class AssetFileDescriptor.AutoCloseOutputStream</code></pre>An OutputStream you can create on a ParcelFileDescriptor, which will take care of calling <code>ParcelFileDescritor.close()</code> for you when the stream is closed.</section>	https://developer.android.com/reference/android/content/res/AssetFileDescriptor.AutoCloseOutputStream.html
AssetManager	A										<section class="prog__container"><pre><code>public final class AssetManager</code></pre>Provides access to an application's raw asset files; see <code>Resources</code> for the way most applications will want to retrieve their resource data. This class presents a lower-level API that allows you to open and read raw files that have been bundled with the application as a simple stream of bytes.</section>	https://developer.android.com/reference/android/content/res/AssetManager.html
AssetManager.AssetInputStream	A										<section class="prog__container"><pre><code>public final class AssetManager.AssetInputStream</code></pre></section>	https://developer.android.com/reference/android/content/res/AssetManager.AssetInputStream.html
AssistContent	A										<section class="prog__container"><pre><code>public class AssistContent</code></pre>Holds information about the content an application is viewing, to hand to an assistant at the user's request. This is filled in by <code>Activity.onProvideAssistContent</code>.</section>	https://developer.android.com/reference/android/app/assist/AssistContent.html
AssistStructure	A										<section class="prog__container"><pre><code>public class AssistStructure</code></pre>Assist data automatically created by the platform's implementation of <code>onProvideAssistData(Bundle)</code>.</section>	https://developer.android.com/reference/android/app/assist/AssistStructure.html
AssistStructure.ViewNode	A										<section class="prog__container"><pre><code>public static class AssistStructure.ViewNode</code></pre>Describes a single view in the assist data.</section>	https://developer.android.com/reference/android/app/assist/AssistStructure.ViewNode.html
AssistStructure.WindowNode	A										<section class="prog__container"><pre><code>public static class AssistStructure.WindowNode</code></pre>Describes a window in the assist data.</section>	https://developer.android.com/reference/android/app/assist/AssistStructure.WindowNode.html
AsyncLayoutInflater	A										<section class="prog__container"><pre><code>public final class AsyncLayoutInflater</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/AsyncLayoutInflater.html
AsyncLayoutInflater.OnInflateFinishedListener	A										<section class="prog__container"><pre><code>public static interface AsyncLayoutInflater.OnInflateFinishedListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/AsyncLayoutInflater.OnInflateFinishedListener.html
AsyncListUtil	A										<section class="prog__container"><pre><code>public class AsyncListUtil</code></pre>A utility class that supports asynchronous content loading.</section>	https://developer.android.com/reference/android/support/v7/util/AsyncListUtil.html
AsyncListUtil.DataCallback	A										<section class="prog__container"><pre><code>public static abstract class AsyncListUtil.DataCallback</code></pre>The callback that provides data access for <code>AsyncListUtil</code>.</section>	https://developer.android.com/reference/android/support/v7/util/AsyncListUtil.DataCallback.html
AsyncListUtil.ViewCallback	A										<section class="prog__container"><pre><code>public static abstract class AsyncListUtil.ViewCallback</code></pre>The callback that links <code>AsyncListUtil</code> with the list view.</section>	https://developer.android.com/reference/android/support/v7/util/AsyncListUtil.ViewCallback.html
AsyncPlayer	A										<section class="prog__container"><pre><code>public class AsyncPlayer</code></pre>Plays a series of audio URIs, but does all the hard work on another thread so that any slowness with preparing or loading doesn't block the calling thread.</section>	https://developer.android.com/reference/android/media/AsyncPlayer.html
AsyncQueryHandler	A										<section class="prog__container"><pre><code>public abstract class AsyncQueryHandler</code></pre>A helper class to help make handling asynchronous <code>ContentResolver</code> queries easier.</section>	https://developer.android.com/reference/android/content/AsyncQueryHandler.html
AsyncQueryHandler.WorkerArgs	A										<section class="prog__container"><pre><code>protected static final class AsyncQueryHandler.WorkerArgs</code></pre></section>	https://developer.android.com/reference/android/content/AsyncQueryHandler.WorkerArgs.html
AsyncQueryHandler.WorkerHandler	A										<section class="prog__container"><pre><code>protected class AsyncQueryHandler.WorkerHandler</code></pre></section>	https://developer.android.com/reference/android/content/AsyncQueryHandler.WorkerHandler.html
AsyncTask	A										<section class="prog__container"><pre><code>public abstract class AsyncTask</code></pre></section>	https://developer.android.com/reference/android/os/AsyncTask.html
AsyncTask.Status	A										<section class="prog__container"><pre><code>public static final enum AsyncTask.Status</code></pre>Indicates the current status of the task. Each status will be set only once during the lifetime of a task.</section>	https://developer.android.com/reference/android/os/AsyncTask.Status.html
AsyncTaskCompat	A										<section class="prog__container"><pre><code>public final class AsyncTaskCompat</code></pre>Helper for accessing features in <code>AsyncTask</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/os/AsyncTaskCompat.html
AsyncTaskLoader	D								*[[android.content.AsyncTaskLoader]], <section class="prog__container"><pre><code>public abstract class AsyncTaskLoader</code></pre>Abstract Loader that provides an <code>AsyncTask</code> to do the work. See <code>Loader</code> and <code>LoaderManager</code> for more details.</section>\n*[[v4.content.AsyncTaskLoader]], <section class="prog__container"><pre><code>public abstract class AsyncTaskLoader</code></pre>Static library support version of the framework's <code>AsyncTaskLoader</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>			
AsynchronousCloseException	A										<section class="prog__container"><pre><code>public class AsynchronousCloseException</code></pre>Checked exception received by a thread when another thread closes the channel or the part of the channel upon which it is blocked in an I/O operation.</section>	https://developer.android.com/reference/java/nio/channels/AsynchronousCloseException.html
AtomicBoolean	A										<section class="prog__container"><pre><code>public class AtomicBoolean</code></pre>A <code>boolean</code> value that may be updated atomically. See the <code>java.util.concurrent.atomic</code> package specification for description of the properties of atomic variables. An <code>AtomicBoolean</code> is used in applications such as atomically updated flags, and cannot be used as a replacement for a <code>Boolean</code>.</section>	https://developer.android.com/reference/java/util/concurrent/atomic/AtomicBoolean.html
AtomicFile	D								*[[v4.util.AtomicFile]], <section class="prog__container"><pre><code>public class AtomicFile</code></pre>Static library support version of the framework's <code>AtomicFile</code>, a helper class for performing atomic operations on a file by creating a backup file until a write has successfully completed.</section>\n*[[android.util.AtomicFile]], <section class="prog__container"><pre><code>public class AtomicFile</code></pre>Helper class for performing atomic operations on a file by creating a backup file until a write has successfully completed. If you need this on older versions of the platform you can use <code>AtomicFile</code> in the v4 support library.</section>\n*[[os.AtomicFile]], Helper class for performing atomic operations on a file, by creating a backup file until a write has successfully completed.			
AtomicInteger	A										<section class="prog__container"><pre><code>public class AtomicInteger</code></pre>An <code>int</code> value that may be updated atomically. See the <code>java.util.concurrent.atomic</code> package specification for description of the properties of atomic variables. An <code>AtomicInteger</code> is used in applications such as atomically incremented counters, and cannot be used as a replacement for an <code>Integer</code>. However, this class does extend <code>Number</code> to allow uniform access by tools and utilities that deal with numerically-based classes.</section>	https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger.html
AtomicIntegerArray	A										<section class="prog__container"><pre><code>public class AtomicIntegerArray</code></pre>An <code>int</code> array in which elements may be updated atomically. See the <code>java.util.concurrent.atomic</code> package specification for description of the properties of atomic variables.</section>	https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerArray.html
AtomicIntegerFieldUpdater	A										<section class="prog__container"><pre><code>public abstract class AtomicIntegerFieldUpdater</code></pre>A reflection-based utility that enables atomic updates to designated <code>volatile int</code> fields of designated classes. This class is designed for use in atomic data structures in which several fields of the same node are independently subject to atomic updates.</section>	https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater.html
AtomicLong	A										<section class="prog__container"><pre><code>public class AtomicLong</code></pre>A <code>long</code> value that may be updated atomically. See the <code>java.util.concurrent.atomic</code> package specification for description of the properties of atomic variables. An <code>AtomicLong</code> is used in applications such as atomically incremented sequence numbers, and cannot be used as a replacement for a <code>Long</code>. However, this class does extend <code>Number</code> to allow uniform access by tools and utilities that deal with numerically-based classes.</section>	https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html
AtomicLongArray	A										<section class="prog__container"><pre><code>public class AtomicLongArray</code></pre>A <code>long</code> array in which elements may be updated atomically. See the <code>java.util.concurrent.atomic</code> package specification for description of the properties of atomic variables.</section>	https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray.html
AtomicLongFieldUpdater	A										<section class="prog__container"><pre><code>public abstract class AtomicLongFieldUpdater</code></pre>A reflection-based utility that enables atomic updates to designated <code>volatile long</code> fields of designated classes. This class is designed for use in atomic data structures in which several fields of the same node are independently subject to atomic updates.</section>	https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongFieldUpdater.html
AtomicMarkableReference	A										<section class="prog__container"><pre><code>public class AtomicMarkableReference</code></pre>An <code>AtomicMarkableReference</code> maintains an object reference along with a mark bit, that can be updated atomically.</section>	https://developer.android.com/reference/java/util/concurrent/atomic/AtomicMarkableReference.html
AtomicReference	A										<section class="prog__container"><pre><code>public class AtomicReference</code></pre>An object reference that may be updated atomically. See the <code>java.util.concurrent.atomic</code> package specification for description of the properties of atomic variables.</section>	https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReference.html
AtomicReferenceArray	A										<section class="prog__container"><pre><code>public class AtomicReferenceArray</code></pre>An array of object references in which elements may be updated atomically. See the <code>java.util.concurrent.atomic</code> package specification for description of the properties of atomic variables.</section>	https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray.html
AtomicReferenceFieldUpdater	A										<section class="prog__container"><pre><code>public abstract class AtomicReferenceFieldUpdater</code></pre>A reflection-based utility that enables atomic updates to designated <code>volatile</code> reference fields of designated classes. This class is designed for use in atomic data structures in which several reference fields of the same node are independently subject to atomic updates. For example, a tree node might be declared as <pre> <code>class Node { private volatile Node left, right; private static final AtomicReferenceFieldUpdater&lt;Node, Node&gt; leftUpdater = AtomicReferenceFieldUpdater.newUpdater(Node.class, Node.class, "left"); private static AtomicReferenceFieldUpdater&lt;Node, Node&gt; rightUpdater = AtomicReferenceFieldUpdater.newUpdater(Node.class, Node.class, "right"); Node getLeft() { return left; } boolean compareAndSetLeft(Node expect, Node update) { return leftUpdater.compareAndSet(this, expect, update); } // ... and so on }</code></pre></section>	https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceFieldUpdater.html
AtomicStampedReference	A										<section class="prog__container"><pre><code>public class AtomicStampedReference</code></pre>An <code>AtomicStampedReference</code> maintains an object reference along with an integer "stamp", that can be updated atomically.</section>	https://developer.android.com/reference/java/util/concurrent/atomic/AtomicStampedReference.html
Attr	A										<section class="prog__container"><pre><code>public interface Attr</code></pre>The <code>Attr</code> interface represents an attribute in an <code>Element</code> object. Typically the allowable values for the attribute are defined in a schema associated with the document.</section>	https://developer.android.com/reference/org/w3c/dom/Attr.html
AttrRes	A										<section class="prog__container"><pre><code>public abstract @interface AttrRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be an attribute reference (e.g. <code>android.R.attr.action</code>).</section>	https://developer.android.com/reference/android/support/annotation/AttrRes.html
AttributeList	A										<section class="prog__container"><pre><code>public interface AttributeList</code></pre><p class="caution"><strong> This interface was deprecated in API level 1.</strong><br/> This interface has been replaced by the SAX2 <code>Attributes</code> interface, which includes Namespace support.</section>	https://developer.android.com/reference/org/xml/sax/AttributeList.html
AttributeListImpl	A										<section class="prog__container"><pre><code>public class AttributeListImpl</code></pre><p class="caution"><strong> This class was deprecated in API level 1.</strong><br/> This class implements a deprecated interface, <code>AttributeList</code>; that interface has been replaced by <code>Attributes</code>, which is implemented in the <code>AttributesImpl</code> helper class.</section>	https://developer.android.com/reference/org/xml/sax/helpers/AttributeListImpl.html
AttributeSet	A										<section class="prog__container"><pre><code>public interface AttributeSet</code></pre>A collection of attributes, as found associated with a tag in an XML document. Often you will not want to use this interface directly, instead passing it to <code>Resources.Theme.obtainStyledAttributes()</code> which will take care of parsing the attributes for you. In particular, the Resources API will convert resource references (attribute values such as "@string/my_label" in the original XML) to the desired type for you; if you use AttributeSet directly then you will need to manually check for resource references (with <code>getAttributeResourceValue(int, int)</code>) and do the resource lookup yourself if needed. Direct use of AttributeSet also prevents the application of themes and styles when retrieving attribute values.</section>	https://developer.android.com/reference/android/util/AttributeSet.html
AttributedCharacterIterator	A										<section class="prog__container"><pre><code>public interface AttributedCharacterIterator</code></pre>An <code>AttributedCharacterIterator</code> allows iteration through both text and related attribute information.</section>	https://developer.android.com/reference/java/text/AttributedCharacterIterator.html
AttributedCharacterIterator.Attribute	A										<section class="prog__container"><pre><code>public static class AttributedCharacterIterator.Attribute</code></pre>Defines attribute keys that are used to identify text attributes. These keys are used in <code>AttributedCharacterIterator</code> and <code>AttributedString</code>.</section>	https://developer.android.com/reference/java/text/AttributedCharacterIterator.Attribute.html
AttributedString	A										<section class="prog__container"><pre><code>public class AttributedString</code></pre>An AttributedString holds text and related attribute information. It may be used as the actual data storage in some cases where a text reader wants to access attributed text through the AttributedCharacterIterator interface.</section>	https://developer.android.com/reference/java/text/AttributedString.html
Attributes	D								*[[jar.Attributes]], <section class="prog__container"><pre><code>public class Attributes</code></pre>The Attributes class maps Manifest attribute names to associated string values. Valid attribute names are case-insensitive, are restricted to the ASCII characters in the set [0-9a-zA-Z_-], and cannot exceed 70 characters in length. Attribute values can contain any characters and will be UTF8-encoded when written to the output stream. See the JAR File Specification for more information about valid attribute names and values.</section>\n*[[sax.Attributes]], <section class="prog__container"><pre><code>public interface Attributes</code></pre>Interface for a list of XML attributes. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>			
Attributes.Name	A										<section class="prog__container"><pre><code>public static class Attributes.Name</code></pre>The Attributes.Name class represents an attribute name stored in this Map. Valid attribute names are case-insensitive, are restricted to the ASCII characters in the set [0-9a-zA-Z_-], and cannot exceed 70 characters in length. Attribute values can contain any characters and will be UTF8-encoded when written to the output stream. See the JAR File Specification for more information about valid attribute names and values.</section>	https://developer.android.com/reference/java/util/jar/Attributes.Name.html
Attributes2	A										<section class="prog__container"><pre><code>public interface Attributes2</code></pre>SAX2 extension to augment the per-attribute information provided though <code>Attributes</code>. If an implementation supports this extension, the attributes provided in <code>ContentHandler.startElement() </code> will implement this interface, and the <em>http://xml.org/sax/features/use-attributes2</em> feature flag will have the value <em>true</em>. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> </blockquote></section>	https://developer.android.com/reference/org/xml/sax/ext/Attributes2.html
Attributes2Impl	A										<section class="prog__container"><pre><code>public class Attributes2Impl</code></pre>SAX2 extension helper for additional Attributes information, implementing the <code>Attributes2</code> interface. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> </blockquote></section>	https://developer.android.com/reference/org/xml/sax/ext/Attributes2Impl.html
AttributesImpl	A										<section class="prog__container"><pre><code>public class AttributesImpl</code></pre>Default implementation of the Attributes interface. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/helpers/AttributesImpl.html
AudioAttributes	A										<section class="prog__container"><pre><code>public final class AudioAttributes</code></pre>A class to encapsulate a collection of attributes describing information about an audio stream.</section>	https://developer.android.com/reference/android/media/AudioAttributes.html
AudioAttributes.Builder	A										<section class="prog__container"><pre><code>public static class AudioAttributes.Builder</code></pre>Builder class for <code>AudioAttributes</code> objects.</section>	https://developer.android.com/reference/android/media/AudioAttributes.Builder.html
AudioCodec	A										<section class="prog__container"><pre><code>public class AudioCodec</code></pre>This class defines a collection of audio codecs to be used with <code>AudioStream</code>s. Their parameters are designed to be exchanged using Session Description Protocol (SDP). Most of the values listed here can be found in RFC 3551, while others are described in separated standards.</section>	https://developer.android.com/reference/android/net/rtp/AudioCodec.html
AudioDeviceCallback	A										<section class="prog__container"><pre><code>public abstract class AudioDeviceCallback</code></pre>AudioDeviceCallback defines the mechanism by which applications can receive notifications of audio device connection and disconnection events.</section>	https://developer.android.com/reference/android/media/AudioDeviceCallback.html
AudioDeviceInfo	A										<section class="prog__container"><pre><code>public final class AudioDeviceInfo</code></pre>Class to provide information about the audio devices.</section>	https://developer.android.com/reference/android/media/AudioDeviceInfo.html
AudioEffect	A										<section class="prog__container"><pre><code>public class AudioEffect</code></pre>AudioEffect is the base class for controlling audio effects provided by the android audio framework.</section>	https://developer.android.com/reference/android/media/audiofx/AudioEffect.html
AudioEffect.Descriptor	A										<section class="prog__container"><pre><code>public static class AudioEffect.Descriptor</code></pre>The effect descriptor contains information on a particular effect implemented in the audio framework:<br> <ul> <li>type: UUID identifying the effect type. May be one of: <code>EFFECT_TYPE_AEC</code>, <code>EFFECT_TYPE_AGC</code>, <code>EFFECT_TYPE_BASS_BOOST</code>, <code>EFFECT_TYPE_ENV_REVERB</code>, <code>EFFECT_TYPE_EQUALIZER</code>, <code>EFFECT_TYPE_NS</code>, <code>EFFECT_TYPE_PRESET_REVERB</code>, <code>EFFECT_TYPE_VIRTUALIZER</code>. </li> <li>uuid: UUID for this particular implementation</li> <li>connectMode: <code>EFFECT_INSERT</code> or <code>EFFECT_AUXILIARY</code></li> <li>name: human readable effect name</li> <li>implementor: human readable effect implementor name</li> </ul> The method <code>queryEffects()</code> returns an array of Descriptors to facilitate effects enumeration. </br></section>	https://developer.android.com/reference/android/media/audiofx/AudioEffect.Descriptor.html
AudioEffect.OnControlStatusChangeListener	A										<section class="prog__container"><pre><code>public static interface AudioEffect.OnControlStatusChangeListener</code></pre>The OnControlStatusChangeListener interface defines a method called by the AudioEffect when a the control of the effect engine is gained or lost by the application</section>	https://developer.android.com/reference/android/media/audiofx/AudioEffect.OnControlStatusChangeListener.html
AudioEffect.OnEnableStatusChangeListener	A										<section class="prog__container"><pre><code>public static interface AudioEffect.OnEnableStatusChangeListener</code></pre>The OnEnableStatusChangeListener interface defines a method called by the AudioEffect when a the enabled state of the effect engine was changed by the controlling application.</section>	https://developer.android.com/reference/android/media/audiofx/AudioEffect.OnEnableStatusChangeListener.html
AudioFormat	A										<section class="prog__container"><pre><code>public final class AudioFormat</code></pre>The <code>AudioFormat</code> class is used to access a number of audio format and channel configuration constants. They are for instance used in <code>AudioTrack</code> and <code>AudioRecord</code>, as valid values in individual parameters of constructors like <code>AudioTrack(int, int, int, int, int, int)</code>, where the fourth parameter is one of the <code>AudioFormat.ENCODING_*</code> constants. The <code>AudioFormat</code> constants are also used in <code>MediaFormat</code> to specify audio related values commonly used in media, such as for <code>KEY_CHANNEL_MASK</code>.</section>	https://developer.android.com/reference/android/media/AudioFormat.html
AudioFormat.Builder	A										<section class="prog__container"><pre><code>public static class AudioFormat.Builder</code></pre>Builder class for <code>AudioFormat</code> objects. Use this class to configure and create an AudioFormat instance. By setting format characteristics such as audio encoding, channel mask or sample rate, you indicate which of those are to vary from the default behavior on this device wherever this audio format is used. See <code>AudioFormat</code> for a complete description of the different parameters that can be used to configure an <code>AudioFormat</code> instance.</section>	https://developer.android.com/reference/android/media/AudioFormat.Builder.html
AudioGroup	A										<section class="prog__container"><pre><code>public class AudioGroup</code></pre>An AudioGroup is an audio hub for the speaker, the microphone, and <code>AudioStream</code>s. Each of these components can be logically turned on or off by calling <code>setMode(int)</code> or <code>setMode(int)</code>. The AudioGroup will go through these components and process them one by one within its execution loop. The loop consists of four steps. First, for each AudioStream not in <code>MODE_SEND_ONLY</code>, decodes its incoming packets and stores in its buffer. Then, if the microphone is enabled, processes the recorded audio and stores in its buffer. Third, if the speaker is enabled, mixes all AudioStream buffers and plays back. Finally, for each AudioStream not in <code>MODE_RECEIVE_ONLY</code>, mixes all other buffers and sends back the encoded packets. An AudioGroup does nothing if there is no AudioStream in it.</section>	https://developer.android.com/reference/android/net/rtp/AudioGroup.html
AudioManager	A										<section class="prog__container"><pre><code>public class AudioManager</code></pre>AudioManager provides access to volume and ringer mode control.</section>	https://developer.android.com/reference/android/media/AudioManager.html
AudioManager.AudioRecordingCallback	A										<section class="prog__container"><pre><code>public static abstract class AudioManager.AudioRecordingCallback</code></pre>Interface for receiving update notifications about the recording configuration. Extend this abstract class and register it with <code>registerAudioRecordingCallback(AudioRecordingCallback, Handler)</code> to be notified. Use <code>getActiveRecordingConfigurations()</code> to query the current configuration.</section>	https://developer.android.com/reference/android/media/AudioManager.AudioRecordingCallback.html
AudioManager.OnAudioFocusChangeListener	A										<section class="prog__container"><pre><code>public static interface AudioManager.OnAudioFocusChangeListener</code></pre>Interface definition for a callback to be invoked when the audio focus of the system is updated.</section>	https://developer.android.com/reference/android/media/AudioManager.OnAudioFocusChangeListener.html
AudioRecord	A										<section class="prog__container"><pre><code>public class AudioRecord</code></pre>The AudioRecord class manages the audio resources for Java applications to record audio from the audio input hardware of the platform. This is achieved by "pulling" (reading) the data from the AudioRecord object. The application is responsible for polling the AudioRecord object in time using one of the following three methods: <code>read(byte[], int, int)</code>, <code>read(short[], int, int)</code> or <code>read(ByteBuffer, int)</code>. The choice of which method to use will be based on the audio data storage format that is the most convenient for the user of AudioRecord.</section>	https://developer.android.com/reference/android/media/AudioRecord.html
AudioRecord.Builder	A										<section class="prog__container"><pre><code>public static class AudioRecord.Builder</code></pre>Builder class for <code>AudioRecord</code> objects. Use this class to configure and create an <code>AudioRecord</code> instance. By setting the recording source and audio format parameters, you indicate which of those vary from the default behavior on the device.</section>	https://developer.android.com/reference/android/media/AudioRecord.Builder.html
AudioRecord.OnRecordPositionUpdateListener	A										<section class="prog__container"><pre><code>public static interface AudioRecord.OnRecordPositionUpdateListener</code></pre>Interface definition for a callback to be invoked when an AudioRecord has reached a notification marker set by <code>setNotificationMarkerPosition(int)</code> or for periodic updates on the progress of the record head, as set by <code>setPositionNotificationPeriod(int)</code>.</section>	https://developer.android.com/reference/android/media/AudioRecord.OnRecordPositionUpdateListener.html
AudioRecord.OnRoutingChangedListener	A										<section class="prog__container"><pre><code>public static interface AudioRecord.OnRoutingChangedListener</code></pre><p class="caution"><strong> This interface was deprecated in API level 24.</strong><br/> users should switch to the general purpose <code>AudioRouting.OnRoutingChangedListener</code> class instead.</section>	https://developer.android.com/reference/android/media/AudioRecord.OnRoutingChangedListener.html
AudioRecordingConfiguration	A										<section class="prog__container"><pre><code>public final class AudioRecordingConfiguration</code></pre>The AudioRecordingConfiguration class collects the information describing an audio recording session.</section>	https://developer.android.com/reference/android/media/AudioRecordingConfiguration.html
AudioRouting	A										<section class="prog__container"><pre><code>public interface AudioRouting</code></pre>AudioRouting defines an interface for controlling routing and routing notifications in AudioTrack and AudioRecord objects.</section>	https://developer.android.com/reference/android/media/AudioRouting.html
AudioRouting.OnRoutingChangedListener	A										<section class="prog__container"><pre><code>public static interface AudioRouting.OnRoutingChangedListener</code></pre>Defines the interface by which applications can receive notifications of routing changes for the associated <code>AudioRouting</code>.</section>	https://developer.android.com/reference/android/media/AudioRouting.OnRoutingChangedListener.html
AudioStream	A										<section class="prog__container"><pre><code>public class AudioStream</code></pre>An AudioStream is a <code>RtpStream</code> which carrys audio payloads over Real-time Transport Protocol (RTP). Two different classes are developed in order to support various usages such as audio conferencing. An AudioStream represents a remote endpoint which consists of a network mapping and a configured <code>AudioCodec</code>. On the other side, An <code>AudioGroup</code> represents a local endpoint which mixes all the AudioStreams and optionally interacts with the speaker and the microphone at the same time. The simplest usage includes one for each endpoints. For other combinations, developers should be aware of the limitations described in <code>AudioGroup</code>.</section>	https://developer.android.com/reference/android/net/rtp/AudioStream.html
AudioTimestamp	A										<section class="prog__container"><pre><code>public final class AudioTimestamp</code></pre>Structure that groups a position in frame units relative to an assumed audio stream, together with the estimated time when that frame enters or leaves the audio processing pipeline on that device. This can be used to coordinate events and interactions with the external environment.</section>	https://developer.android.com/reference/android/media/AudioTimestamp.html
AudioTrack	A										<section class="prog__container"><pre><code>public class AudioTrack</code></pre>The AudioTrack class manages and plays a single audio resource for Java applications. It allows streaming of PCM audio buffers to the audio sink for playback. This is achieved by "pushing" the data to the AudioTrack object using one of the <code>write(byte[], int, int)</code>, <code>write(short[], int, int)</code>, and <code>write(float[], int, int, int)</code> methods.</section>	https://developer.android.com/reference/android/media/AudioTrack.html
AudioTrack.Builder	A										<section class="prog__container"><pre><code>public static class AudioTrack.Builder</code></pre>Builder class for <code>AudioTrack</code> objects. Use this class to configure and create an <code>AudioTrack</code> instance. By setting audio attributes and audio format parameters, you indicate which of those vary from the default behavior on the device.</section>	https://developer.android.com/reference/android/media/AudioTrack.Builder.html
AudioTrack.OnPlaybackPositionUpdateListener	A										<section class="prog__container"><pre><code>public static interface AudioTrack.OnPlaybackPositionUpdateListener</code></pre>Interface definition for a callback to be invoked when the playback head position of an AudioTrack has reached a notification marker or has increased by a certain period.</section>	https://developer.android.com/reference/android/media/AudioTrack.OnPlaybackPositionUpdateListener.html
AudioTrack.OnRoutingChangedListener	A										<section class="prog__container"><pre><code>public static interface AudioTrack.OnRoutingChangedListener</code></pre><p class="caution"><strong> This interface was deprecated in API level 24.</strong><br/> users should switch to the general purpose <code>AudioRouting.OnRoutingChangedListener</code> class instead.</section>	https://developer.android.com/reference/android/media/AudioTrack.OnRoutingChangedListener.html
AuthPermission	A										<section class="prog__container"><pre><code>public final class AuthPermission</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/javax/security/auth/AuthPermission.html
AuthProvider	A										<section class="prog__container"><pre><code>public abstract class AuthProvider</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/security/AuthProvider.html
Authenticator	A										<section class="prog__container"><pre><code>public abstract class Authenticator</code></pre>The class Authenticator represents an object that knows how to obtain authentication for a network connection. Usually, it will do this by prompting the user for information.</section>	https://developer.android.com/reference/java/net/Authenticator.html
Authenticator.RequestorType	A										<section class="prog__container"><pre><code>public static final enum Authenticator.RequestorType</code></pre>The type of the entity requesting authentication.</section>	https://developer.android.com/reference/java/net/Authenticator.RequestorType.html
AuthenticatorDescription	A										<section class="prog__container"><pre><code>public class AuthenticatorDescription</code></pre>A <code>Parcelable</code> value type that contains information about an account authenticator.</section>	https://developer.android.com/reference/android/accounts/AuthenticatorDescription.html
AuthenticatorException	A										<section class="prog__container"><pre><code>public class AuthenticatorException</code></pre></section>	https://developer.android.com/reference/android/accounts/AuthenticatorException.html
AutoCloseable	A										<section class="prog__container"><pre><code>public interface AutoCloseable</code></pre>A resource that must be closed when it is no longer needed.</section>	https://developer.android.com/reference/java/lang/AutoCloseable.html
AutoCompleteTextView	A										<section class="prog__container"><pre><code>public class AutoCompleteTextView</code></pre></section>	https://developer.android.com/reference/android/widget/AutoCompleteTextView.html
AutoCompleteTextView.OnDismissListener	A										<section class="prog__container"><pre><code>public static interface AutoCompleteTextView.OnDismissListener</code></pre>Listener to respond to the AutoCompleteTextView's completion list being dismissed.</section>	https://developer.android.com/reference/android/widget/AutoCompleteTextView.OnDismissListener.html
AutoCompleteTextView.Validator	A										<section class="prog__container"><pre><code>public static interface AutoCompleteTextView.Validator</code></pre>This interface is used to make sure that the text entered in this TextView complies to a certain format. Since there is no foolproof way to prevent the user from leaving this View with an incorrect value in it, all we can do is try to fix it ourselves when this happens.</section>	https://developer.android.com/reference/android/widget/AutoCompleteTextView.Validator.html
AutoScrollHelper	D								*[[v4.widget.AutoScrollHelper]], <section class="prog__container"><pre><code>public abstract class AutoScrollHelper</code></pre>AutoScrollHelper is a utility class for adding automatic edge-triggered scrolling to Views.</section>\n*[[internal.widget.AutoScrollHelper]], AutoScrollHelper is a utility class for adding automatic edge-triggered scrolling to Views.			
AutoScrollHelper.AbsListViewAutoScroller	A										An implementation of <code><a href="https://developer.android.com/reference/com/android/internal/widget/AutoScrollHelper.html">AutoScrollHelper</a></code> that knows how to scroll through an <code><a href="https://developer.android.com/reference/android/widget/AbsListView.html">AbsListView</a></code>.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
AutoText	A										<section class="prog__container"><pre><code>public class AutoText</code></pre>This class accesses a dictionary of corrections to frequent misspellings.</section>	https://developer.android.com/reference/android/text/AutoText.html
AutoTransition	D								*[[support.transition.AutoTransition]], <section class="prog__container"><pre><code>public class AutoTransition</code></pre>Utility class for creating a default transition that automatically fades, moves, and resizes views during a scene change.</section>\n*[[android.transition.AutoTransition]], <section class="prog__container"><pre><code>public class AutoTransition</code></pre>Utility class for creating a default transition that automatically fades, moves, and resizes views during a scene change.</section>			
AutomaticGainControl	A										<section class="prog__container"><pre><code>public class AutomaticGainControl</code></pre>Automatic Gain Control (AGC).</section>	https://developer.android.com/reference/android/media/audiofx/AutomaticGainControl.html
AutomaticZenRule	A										<section class="prog__container"><pre><code>public final class AutomaticZenRule</code></pre>Rule instance information for zen mode.</section>	https://developer.android.com/reference/android/app/AutomaticZenRule.html
BackgroundColorSpan	A										<section class="prog__container"><pre><code>public class BackgroundColorSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/BackgroundColorSpan.html
BackgroundFallback	A										Helper class for drawing a fallback background in framework decor layouts.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
BackgroundManager	A										<section class="prog__container"><pre><code>public final class BackgroundManager</code></pre>Supports background image continuity between multiple Activities.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/BackgroundManager.html
BackgroundThread	A										Shared singleton background thread for each process.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
BackingStoreException	A										<section class="prog__container"><pre><code>public class BackingStoreException</code></pre>Thrown to indicate that a preferences operation could not complete because of a failure in the backing store, or a failure to contact the backing store.</section>	https://developer.android.com/reference/java/util/prefs/BackingStoreException.html
BackupAgent	A										<section class="prog__container"><pre><code>public abstract class BackupAgent</code></pre>Provides the central interface between an application and Android's data backup infrastructure. An application that wishes to participate in the backup and restore mechanism will declare a subclass of <code>BackupAgent</code>, implement the <code>onBackup()</code> and <code>onRestore()</code> methods, and provide the name of its backup agent class in its <code>AndroidManifest.xml</code> file via the <code> &lt;application&gt;</code> tag's <code>android:backupAgent</code> attribute. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/app/backup/BackupAgent.html
BackupAgentHelper	A										<section class="prog__container"><pre><code>public class BackupAgentHelper</code></pre>A convenient <code>BackupAgent</code> wrapper class that automatically manages heterogeneous data sets within the backup data, each identified by a unique key prefix. When processing a backup or restore operation, the BackupAgentHelper dispatches to one or more installed <code>BackupHelper</code> objects, each of which is responsible for a defined subset of the data being processed.</section>	https://developer.android.com/reference/android/app/backup/BackupAgentHelper.html
BackupDataInput	A										<section class="prog__container"><pre><code>public class BackupDataInput</code></pre>Provides the structured interface through which a <code>BackupAgent</code> reads information from the backup data set, via its <code>onRestore()</code> method. The data is presented as a set of "entities," each representing one named record as previously stored by the agent's <code>onBackup()</code> implementation. An entity is composed of a descriptive header plus a byte array that holds the raw data saved in the remote backup.</section>	https://developer.android.com/reference/android/app/backup/BackupDataInput.html
BackupDataInputStream	A										<section class="prog__container"><pre><code>public class BackupDataInputStream</code></pre>Provides an <code>InputStream</code>-like interface for accessing an entity's data during a restore operation. Used by <code>BackupHelper</code> classes within the <code>BackupAgentHelper</code> mechanism.</section>	https://developer.android.com/reference/android/app/backup/BackupDataInputStream.html
BackupDataOutput	A										<section class="prog__container"><pre><code>public class BackupDataOutput</code></pre>Provides the structured interface through which a <code>BackupAgent</code> commits information to the backup data set, via its <code>onBackup()</code> method. Data written for backup is presented as a set of "entities," key/value pairs in which each binary data record "value" is named with a string "key."</section>	https://developer.android.com/reference/android/app/backup/BackupDataOutput.html
BackupHelper	A										<section class="prog__container"><pre><code>public interface BackupHelper</code></pre>Defines the calling interface that <code>BackupAgentHelper</code> uses when dispatching backup and restore operations to the installed helpers. Applications can define and install their own helpers as well as using those provided as part of the Android framework.</section>	https://developer.android.com/reference/android/app/backup/BackupHelper.html
BackupManager	A										<section class="prog__container"><pre><code>public class BackupManager</code></pre>The interface through which an application interacts with the Android backup service to request backup and restore operations. Applications instantiate it using the constructor and issue calls through that instance.</section>	https://developer.android.com/reference/android/app/backup/BackupManager.html
BadPaddingException	A										<section class="prog__container"><pre><code>public class BadPaddingException</code></pre>This exception is thrown when a particular padding mechanism is expected for the input data but the data is not padded properly.</section>	https://developer.android.com/reference/javax/crypto/BadPaddingException.html
BadParcelableException	A										<section class="prog__container"><pre><code>public class BadParcelableException</code></pre>Exception thrown when a <code>Parcelable</code> is malformed or otherwise invalid.</section>	https://developer.android.com/reference/android/os/BadParcelableException.html
Base64	A										<section class="prog__container"><pre><code>public class Base64</code></pre>Utilities for encoding and decoding the Base64 representation of binary data. See RFCs 2045 and 3548.</section>	https://developer.android.com/reference/android/util/Base64.html
Base64DataException	A										<section class="prog__container"><pre><code>public class Base64DataException</code></pre>This exception is thrown by <code>Base64InputStream</code> or <code>Base64OutputStream</code> when an error is detected in the data being decoded. This allows problems with the base64 data to be disambiguated from errors in the underlying streams (e.g. actual connection errors.)</section>	https://developer.android.com/reference/android/util/Base64DataException.html
Base64InputStream	A										<section class="prog__container"><pre><code>public class Base64InputStream</code></pre>An InputStream that does Base64 decoding on the data read through it.</section>	https://developer.android.com/reference/android/util/Base64InputStream.html
Base64OutputStream	A										<section class="prog__container"><pre><code>public class Base64OutputStream</code></pre>An OutputStream that does Base64 encoding on the data written to it, writing the resulting data to another OutputStream.</section>	https://developer.android.com/reference/android/util/Base64OutputStream.html
BaseAdapter	A										<section class="prog__container"><pre><code>public abstract class BaseAdapter</code></pre>Common base class of common implementation for an <code>Adapter</code> that can be used in both <code>ListView</code> (by implementing the specialized <code>ListAdapter</code> interface) and <code>Spinner</code> (by implementing the specialized <code>SpinnerAdapter</code> interface).</section>	https://developer.android.com/reference/android/widget/BaseAdapter.html
BaseBundle	A										<section class="prog__container"><pre><code>public class BaseBundle</code></pre>A mapping from String keys to values of various types. In most cases, you should work directly with either the <code>Bundle</code> or <code>PersistableBundle</code> subclass.</section>	https://developer.android.com/reference/android/os/BaseBundle.html
BaseCardView	A										<section class="prog__container"><pre><code>public class BaseCardView</code></pre>A card style layout that responds to certain state changes. It arranges its children in a vertical column, with different regions becoming visible at different times.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/BaseCardView.html
BaseCardView.LayoutParams	A										<section class="prog__container"><pre><code>public static class BaseCardView.LayoutParams</code></pre>Per-child layout information associated with BaseCardView.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/BaseCardView.LayoutParams.html
BaseColumns	A										<section class="prog__container"><pre><code>public interface BaseColumns</code></pre></section>	https://developer.android.com/reference/android/provider/BaseColumns.html
BaseDexClassLoader	A										<section class="prog__container"><pre><code>public class BaseDexClassLoader</code></pre>Base class for common functionality between various dex-based <code>ClassLoader</code> implementations.</section>	https://developer.android.com/reference/dalvik/system/BaseDexClassLoader.html
BaseExpandableListAdapter	A										<section class="prog__container"><pre><code>public abstract class BaseExpandableListAdapter</code></pre>Base class for a <code>ExpandableListAdapter</code> used to provide data and Views from some data to an expandable list view.</section>	https://developer.android.com/reference/android/widget/BaseExpandableListAdapter.html
BaseInputConnection	A										<section class="prog__container"><pre><code>public class BaseInputConnection</code></pre>Base class for implementors of the InputConnection interface, taking care of most of the common behavior for providing a connection to an Editable. Implementors of this class will want to be sure to implement <code>getEditable()</code> to provide access to their own editable object, and to refer to the documentation in <code>InputConnection</code>.</section>	https://developer.android.com/reference/android/view/inputmethod/BaseInputConnection.html
BaseInterpolator	A										<section class="prog__container"><pre><code>public abstract class BaseInterpolator</code></pre>An abstract class which is extended by default interpolators.</section>	https://developer.android.com/reference/android/view/animation/BaseInterpolator.html
BaseKeyListener	A										<section class="prog__container"><pre><code>public abstract class BaseKeyListener</code></pre>Abstract base class for key listeners. Provides a basic foundation for entering and editing text. Subclasses should override <code>onKeyDown(View, Editable, int, KeyEvent)</code> and <code>onKeyUp(View, Editable, int, KeyEvent)</code> to insert characters as keys are pressed.</section>	https://developer.android.com/reference/android/text/method/BaseKeyListener.html
BaseLeanbackPreferenceFragment	A										<section class="prog__container"><pre><code>public abstract class BaseLeanbackPreferenceFragment</code></pre>This fragment provides a preference fragment with leanback-style behavior, suitable for embedding into broader UI elements.</section>	https://developer.android.com/reference/android/support/v17/preference/BaseLeanbackPreferenceFragment.html
BaseMovementMethod	A										<section class="prog__container"><pre><code>public class BaseMovementMethod</code></pre>Base classes for movement methods.</section>	https://developer.android.com/reference/android/text/method/BaseMovementMethod.html
BaseObj	D								*[[android.renderscript.BaseObj]], <section class="prog__container"><pre><code>public class BaseObj</code></pre>BaseObj is the base class for all RenderScript objects owned by a RS context. It is responsible for lifetime management and resource tracking. This class should not be used by a user application.</section>\n*[[v8.renderscript.BaseObj]], <section class="prog__container"><pre><code>public class BaseObj</code></pre>BaseObj is the base class for all RenderScript objects owned by a RS context. It is responsible for lifetime management and resource tracking. This class should not be used by a user application.</section>			
BaseObservable	A										<section class="prog__container"><pre><code>public class BaseObservable</code></pre>A convenience class that implements <code>Observable</code> interface and provides <code>notifyPropertyChanged(int)</code> and <code>notifyChange()</code> methods.</section>	https://developer.android.com/reference/android/databinding/BaseObservable.html
BaseOnItemViewClickedListener	A										<section class="prog__container"><pre><code>public interface BaseOnItemViewClickedListener</code></pre>Interface for receiving notification when an item view holder is clicked.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/BaseOnItemViewClickedListener.html
BaseOnItemViewSelectedListener	A										<section class="prog__container"><pre><code>public interface BaseOnItemViewSelectedListener</code></pre>Interface for receiving notification when a row or item becomes selected. The concept of current selection is different than focus. A row or item can be selected without having focus; for example, when a row header view gains focus then the corresponding row view becomes selected.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/BaseOnItemViewSelectedListener.html
BaseTestRunner	A										<section class="prog__container"><pre><code>public abstract class BaseTestRunner</code></pre>Base class for all test runners. This class was born live on stage in Sardinia during XP2000.</section>	https://developer.android.com/reference/junit/runner/BaseTestRunner.html
BaseTransientBottomBar.BaseCallback	A										<section class="prog__container"><pre><code>public static abstract class BaseTransientBottomBar.BaseCallback</code></pre>Base class for <code>BaseTransientBottomBar</code> callbacks.</section>	https://developer.android.com/reference/android/support/design/widget/BaseTransientBottomBar.BaseCallback.html
BaseTransientBottomBar.ContentViewCallback	A										<section class="prog__container"><pre><code>public static interface BaseTransientBottomBar.ContentViewCallback</code></pre>Interface that defines the behavior of the main content of a transient bottom bar.</section>	https://developer.android.com/reference/android/support/design/widget/BaseTransientBottomBar.ContentViewCallback.html
BasicPermission	A										<section class="prog__container"><pre><code>public abstract class BasicPermission</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/security/BasicPermission.html
BassBoost	A										<section class="prog__container"><pre><code>public class BassBoost</code></pre>Bass boost is an audio effect to boost or amplify low frequencies of the sound. It is comparable to a simple equalizer but limited to one band amplification in the low frequency range.</section>	https://developer.android.com/reference/android/media/audiofx/BassBoost.html
BassBoost.OnParameterChangeListener	A										<section class="prog__container"><pre><code>public static interface BassBoost.OnParameterChangeListener</code></pre>The OnParameterChangeListener interface defines a method called by the BassBoost when a parameter value has changed.</section>	https://developer.android.com/reference/android/media/audiofx/BassBoost.OnParameterChangeListener.html
BassBoost.Settings	A										<section class="prog__container"><pre><code>public static class BassBoost.Settings</code></pre>The Settings class regroups all bass boost parameters. It is used in conjuntion with getProperties() and setProperties() methods to backup and restore all parameters in a single call.</section>	https://developer.android.com/reference/android/media/audiofx/BassBoost.Settings.html
BatchUpdateException	A										<section class="prog__container"><pre><code>public class BatchUpdateException</code></pre>The subclass of <code>SQLException</code> thrown when an error occurs during a batch update operation. In addition to the information provided by <code>SQLException</code>, a <code>BatchUpdateException</code> provides the update counts for all commands that were executed successfully during the batch update, that is, all commands that were executed before the error occurred. The order of elements in an array of update counts corresponds to the order in which commands were added to the batch.</section>	https://developer.android.com/reference/java/sql/BatchUpdateException.html
BatchingListUpdateCallback	A										<section class="prog__container"><pre><code>public class BatchingListUpdateCallback</code></pre>Wraps a <code>ListUpdateCallback</code> callback and batches operations that can be merged.</section>	https://developer.android.com/reference/android/support/v7/util/BatchingListUpdateCallback.html
BatteryManager	A										<section class="prog__container"><pre><code>public class BatteryManager</code></pre>The BatteryManager class contains strings and constants used for values in the <code>ACTION_BATTERY_CHANGED</code> Intent, and provides a method for querying battery and charging properties.</section>	https://developer.android.com/reference/android/os/BatteryManager.html
BatterySipper	A										Contains power usage of an application, system service, or hardware type.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
BatteryStatsHelper	A										A helper class for retrieving the power usage information for all applications and services.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
BatteryStatsImpl	A										All information we are collecting about things that can happen that impact battery life.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
BatteryStatsImpl.BatchTimer	A										A timer that increments in batches.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
BatteryStatsImpl.Counter	A										State for keeping track of counting information.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
BatteryStatsImpl.DurationTimer	A										A StopwatchTimer that also tracks the total and max individual time spent active according to the given timebase.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
BatteryStatsImpl.SamplingTimer	A										A counter meant to accept monotonically increasing values to its <code><a href="https://developer.android.com/reference/com/android/internal/os/BatteryStatsImpl.SamplingTimer.html#update(long, int)">update(long, int)</a></code> method.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
BatteryStatsImpl.StopwatchTimer	A										State for keeping track of timing information.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
BatteryStatsImpl.Timer	A										State for keeping track of timing information.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
BatteryStatsImpl.Uid	A										The statistics associated with a particular uid.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
BatteryStatsImpl.Uid.Pkg	A										The statistics associated with a particular package.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
BatteryStatsImpl.Uid.Pkg.Serv	A										The statistics associated with a particular service.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
BatteryStatsImpl.Uid.Proc	A										The statistics associated with a particular process.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
BatteryStatsImpl.Uid.Wakelock	A										The statistics associated with a particular wake lock.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
BiConsumer	A										<section class="prog__container"><pre><code>public interface BiConsumer</code></pre>Represents an operation that accepts two input arguments and returns no result. This is the two-arity specialization of <code>Consumer</code>. Unlike most other functional interfaces, <code>BiConsumer</code> is expected to operate via side-effects.</section>	https://developer.android.com/reference/java/util/function/BiConsumer.html
BiFunction	A										<section class="prog__container"><pre><code>public interface BiFunction</code></pre>Represents a function that accepts two arguments and produces a result. This is the two-arity specialization of <code>Function</code>.</section>	https://developer.android.com/reference/java/util/function/BiFunction.html
BiPredicate	A										<section class="prog__container"><pre><code>public interface BiPredicate</code></pre>Represents a predicate (boolean-valued function) of two arguments. This is the two-arity specialization of <code>Predicate</code>.</section>	https://developer.android.com/reference/java/util/function/BiPredicate.html
Bidi	A										<section class="prog__container"><pre><code>public final class Bidi</code></pre>This class implements the Unicode Bidirectional Algorithm.</section>	https://developer.android.com/reference/java/text/Bidi.html
BidiFormatter	D								*[[v4.text.BidiFormatter]], <section class="prog__container"><pre><code>public final class BidiFormatter</code></pre>Utility class for formatting text for display in a potentially opposite-directionality context without garbling. The directionality of the context is set at formatter creation and the directionality of the text can be either estimated or passed in when known. Provides the following functionality:</section>\n*[[android.text.BidiFormatter]], <section class="prog__container"><pre><code>public final class BidiFormatter</code></pre>Utility class for formatting text for display in a potentially opposite-directionality context without garbling. The directionality of the context is set at formatter creation and the directionality of the text can be either estimated or passed in when known.</section>			
BidiFormatter.Builder	D								*[[v4.text.BidiFormatter.Builder]], <section class="prog__container"><pre><code>public static final class BidiFormatter.Builder</code></pre>A class for building a BidiFormatter with non-default options.</section>\n*[[android.text.BidiFormatter.Builder]], <section class="prog__container"><pre><code>public static final class BidiFormatter.Builder</code></pre>A class for building a BidiFormatter with non-default options.</section>			
BidirectionalTypeConverter	A										<section class="prog__container"><pre><code>public abstract class BidirectionalTypeConverter</code></pre>Abstract base class used convert type T to another type V and back again. This is necessary when the value types of in animation are different from the property type. BidirectionalTypeConverter is needed when only the final value for the animation is supplied to animators.</section>	https://developer.android.com/reference/android/animation/BidirectionalTypeConverter.html
BigDecimal	D								*[[icu.math.BigDecimal]], <section class="prog__container"><pre><code>public class BigDecimal</code></pre>The <code>BigDecimal</code> class implements immutable arbitrary-precision decimal numbers. The methods of the <code>BigDecimal</code> class provide operations for fixed and floating point arithmetic, comparison, format conversions, and hashing.</section>\n*[[java.math.BigDecimal]], <section class="prog__container"><pre><code>public class BigDecimal</code></pre>An immutable arbitrary-precision signed decimal.</section>			
BigInteger	A										<section class="prog__container"><pre><code>public class BigInteger</code></pre>An immutable arbitrary-precision signed integer. <h3>Fast Cryptography</h3> This implementation is efficient for operations traditionally used in cryptography, such as the generation of large prime numbers and computation of the modular inverse. <h3>Slow Two's Complement Bitwise Operations</h3> This API includes operations for bitwise operations in two's complement representation. Two's complement is not the internal representation used by this implementation, so such methods may be inefficient. Use <code>BitSet</code> for high-performance bitwise operations on arbitrarily-large sequences of bits.</section>	https://developer.android.com/reference/java/math/BigInteger.html
BinaryOperator	A										<section class="prog__container"><pre><code>public interface BinaryOperator</code></pre>Represents an operation upon two operands of the same type, producing a result of the same type as the operands. This is a specialization of <code>BiFunction</code> for the case where the operands and the result are all of the same type.</section>	https://developer.android.com/reference/java/util/function/BinaryOperator.html
BindException	A										<section class="prog__container"><pre><code>public class BindException</code></pre>Signals that an error occurred while attempting to bind a socket to a local address and port. Typically, the port is in use, or the requested local address could not be assigned.</section>	https://developer.android.com/reference/java/net/BindException.html
Bindable	A										<section class="prog__container"><pre><code>public abstract @interface Bindable</code></pre>The Bindable annotation should be applied to any getter accessor method of an <code>Observable</code> class. Bindable will generate a field in the BR class to identify the field that has changed.</section>	https://developer.android.com/reference/android/databinding/Bindable.html
Binder	A										<section class="prog__container"><pre><code>public class Binder</code></pre>Base class for a remotable object, the core part of a lightweight remote procedure call mechanism defined by <code>IBinder</code>. This class is an implementation of IBinder that provides standard local implementation of such an object.</section>	https://developer.android.com/reference/android/os/Binder.html
BinderInternal	A										Private and debugging Binder APIs.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
BinderThread	A										<section class="prog__container"><pre><code>public abstract @interface BinderThread</code></pre>Denotes that the annotated method should only be called on the binder thread. If the annotated element is a class, then all methods in the class should be called on the binder thread.</section>	https://developer.android.com/reference/android/support/annotation/BinderThread.html
BindingAdapter	A										<section class="prog__container"><pre><code>public abstract @interface BindingAdapter</code></pre>BindingAdapter is applied to methods that are used to manipulate how values with expressions are set to views. The simplest example is to have a public static method that takes the view and the value to set:</section>	https://developer.android.com/reference/android/databinding/BindingAdapter.html
BindingConversion	A										<section class="prog__container"><pre><code>public abstract @interface BindingConversion</code></pre>Annotate methods that are used to automatically convert from the expression type to the value used in the setter. The converter should take one parameter, the expression type, and the return value should be the target value type used in the setter. Converters are used whenever they can be applied and are not specific to any attribute.</section>	https://developer.android.com/reference/android/databinding/BindingConversion.html
BindingMethod	A										<section class="prog__container"><pre><code>public abstract @interface BindingMethod</code></pre>Used within an <code>BindingMethods</code> annotation to describe a renaming of an attribute to the setter used to set that attribute. By default, an attribute attr will be associated with setter setAttr.</section>	https://developer.android.com/reference/android/databinding/BindingMethod.html
BindingMethods	A										<section class="prog__container"><pre><code>public abstract @interface BindingMethods</code></pre>Used to enumerate attribute-to-setter renaming. By default, an attribute is associated with setAttribute setter. If there is a simple rename, enumerate them in an array of <code>BindingMethod</code> annotations in the value.</section>	https://developer.android.com/reference/android/databinding/BindingMethods.html
BitSet	A										<section class="prog__container"><pre><code>public class BitSet</code></pre>This class implements a vector of bits that grows as needed. Each component of the bit set has a <code>boolean</code> value. The bits of a <code>BitSet</code> are indexed by nonnegative integers. Individual indexed bits can be examined, set, or cleared. One <code>BitSet</code> may be used to modify the contents of another <code>BitSet</code> through logical AND, logical inclusive OR, and logical exclusive OR operations.</section>	https://developer.android.com/reference/java/util/BitSet.html
Bitmap	A										<section class="prog__container"><pre><code>public final class Bitmap</code></pre></section>	https://developer.android.com/reference/android/graphics/Bitmap.html
Bitmap.CompressFormat	A										<section class="prog__container"><pre><code>public static final enum Bitmap.CompressFormat</code></pre>Specifies the known formats a bitmap can be compressed into</section>	https://developer.android.com/reference/android/graphics/Bitmap.CompressFormat.html
Bitmap.Config	A										<section class="prog__container"><pre><code>public static final enum Bitmap.Config</code></pre>Possible bitmap configurations. A bitmap configuration describes how pixels are stored. This affects the quality (color depth) as well as the ability to display transparent/translucent colors.</section>	https://developer.android.com/reference/android/graphics/Bitmap.Config.html
BitmapCompat	A										<section class="prog__container"><pre><code>public final class BitmapCompat</code></pre>Helper for accessing features in <code>Bitmap</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/graphics/BitmapCompat.html
BitmapDrawable	A										<section class="prog__container"><pre><code>public class BitmapDrawable</code></pre>A Drawable that wraps a bitmap and can be tiled, stretched, or aligned. You can create a BitmapDrawable from a file path, an input stream, through XML inflation, or from a <code>Bitmap</code> object.</section>	https://developer.android.com/reference/android/graphics/drawable/BitmapDrawable.html
BitmapFactory	A										<section class="prog__container"><pre><code>public class BitmapFactory</code></pre>Creates Bitmap objects from various sources, including files, streams, and byte-arrays.</section>	https://developer.android.com/reference/android/graphics/BitmapFactory.html
BitmapFactory.Options	A										<section class="prog__container"><pre><code>public static class BitmapFactory.Options</code></pre></section>	https://developer.android.com/reference/android/graphics/BitmapFactory.Options.html
BitmapRegionDecoder	A										<section class="prog__container"><pre><code>public final class BitmapRegionDecoder</code></pre>BitmapRegionDecoder can be used to decode a rectangle region from an image. BitmapRegionDecoder is particularly useful when an original image is large and you only need parts of the image.</section>	https://developer.android.com/reference/android/graphics/BitmapRegionDecoder.html
BitmapShader	A										<section class="prog__container"><pre><code>public class BitmapShader</code></pre>Shader used to draw a bitmap as a texture. The bitmap can be repeated or mirrored by setting the tiling mode.</section>	https://developer.android.com/reference/android/graphics/BitmapShader.html
BlackLevelPattern	A										<section class="prog__container"><pre><code>public final class BlackLevelPattern</code></pre>Immutable class to store a 4-element vector of integers corresponding to a 2x2 pattern of color channel offsets used for the black level offsets of each color channel.</section>	https://developer.android.com/reference/android/hardware/camera2/params/BlackLevelPattern.html
Blob	A										<section class="prog__container"><pre><code>public interface Blob</code></pre>The representation (mapping) in the Java<sup><font size="-2">TM</font></sup> programming language of an SQL <code>BLOB</code> value. An SQL <code>BLOB</code> is a built-in type that stores a Binary Large Object as a column value in a row of a database table. By default drivers implement <code>Blob</code> using an SQL <code>locator(BLOB)</code>, which means that a <code>Blob</code> object contains a logical pointer to the SQL <code>BLOB</code> data rather than the data itself. A <code>Blob</code> object is valid for the duration of the transaction in which is was created.</section>	https://developer.android.com/reference/java/sql/Blob.html
BlockedNumberContract	A										<section class="prog__container"><pre><code>public class BlockedNumberContract</code></pre></section>	https://developer.android.com/reference/android/provider/BlockedNumberContract.html
BlockedNumberContract.BlockedNumbers	A										<section class="prog__container"><pre><code>public static class BlockedNumberContract.BlockedNumbers</code></pre>Constants to interact with the blocked numbers list.</section>	https://developer.android.com/reference/android/provider/BlockedNumberContract.BlockedNumbers.html
BlockingDeque	A										<section class="prog__container"><pre><code>public interface BlockingDeque</code></pre>A <code>Deque</code> that additionally supports blocking operations that wait for the deque to become non-empty when retrieving an element, and wait for space to become available in the deque when storing an element.</section>	https://developer.android.com/reference/java/util/concurrent/BlockingDeque.html
BlockingQueue	A										<section class="prog__container"><pre><code>public interface BlockingQueue</code></pre>A <code>Queue</code> that additionally supports operations that wait for the queue to become non-empty when retrieving an element, and wait for space to become available in the queue when storing an element.</section>	https://developer.android.com/reference/java/util/concurrent/BlockingQueue.html
BluetoothA2dp	A										<section class="prog__container"><pre><code>public final class BluetoothA2dp</code></pre>This class provides the public APIs to control the Bluetooth A2DP profile.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothA2dp.html
BluetoothAdapter	A										<section class="prog__container"><pre><code>public final class BluetoothAdapter</code></pre>Represents the local device Bluetooth adapter. The <code>BluetoothAdapter</code> lets you perform fundamental Bluetooth tasks, such as initiate device discovery, query a list of bonded (paired) devices, instantiate a <code>BluetoothDevice</code> using a known MAC address, and create a <code>BluetoothServerSocket</code> to listen for connection requests from other devices, and start a scan for Bluetooth LE devices.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothAdapter.html
BluetoothAdapter.LeScanCallback	A										<section class="prog__container"><pre><code>public static interface BluetoothAdapter.LeScanCallback</code></pre>Callback interface used to deliver LE scan results.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothAdapter.LeScanCallback.html
BluetoothAssignedNumbers	A										<section class="prog__container"><pre><code>public class BluetoothAssignedNumbers</code></pre>Bluetooth Assigned Numbers.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothAssignedNumbers.html
BluetoothClass	A										<section class="prog__container"><pre><code>public final class BluetoothClass</code></pre>Represents a Bluetooth class, which describes general characteristics and capabilities of a device. For example, a Bluetooth class will specify the general device type such as a phone, a computer, or headset, and whether it's capable of services such as audio or telephony.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothClass.html
BluetoothClass.Device	A										<section class="prog__container"><pre><code>public static class BluetoothClass.Device</code></pre>Defines all device class constants.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.html
BluetoothClass.Device.Major	A										<section class="prog__container"><pre><code>public static class BluetoothClass.Device.Major</code></pre>Defines all major device class constants.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothClass.Device.Major.html
BluetoothClass.Service	A										<section class="prog__container"><pre><code>public static final class BluetoothClass.Service</code></pre>Defines all service class constants.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothClass.Service.html
BluetoothDevice	A										<section class="prog__container"><pre><code>public final class BluetoothDevice</code></pre>Represents a remote Bluetooth device. A <code>BluetoothDevice</code> lets you create a connection with the respective device or query information about it, such as the name, address, class, and bonding state.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothDevice.html
BluetoothGatt	A										<section class="prog__container"><pre><code>public final class BluetoothGatt</code></pre>Public API for the Bluetooth GATT Profile.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothGatt.html
BluetoothGattCallback	A										<section class="prog__container"><pre><code>public abstract class BluetoothGattCallback</code></pre>This abstract class is used to implement <code>BluetoothGatt</code> callbacks.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothGattCallback.html
BluetoothGattCharacteristic	A										<section class="prog__container"><pre><code>public class BluetoothGattCharacteristic</code></pre>Represents a Bluetooth GATT Characteristic</section>	https://developer.android.com/reference/android/bluetooth/BluetoothGattCharacteristic.html
BluetoothGattDescriptor	A										<section class="prog__container"><pre><code>public class BluetoothGattDescriptor</code></pre>Represents a Bluetooth GATT Descriptor</section>	https://developer.android.com/reference/android/bluetooth/BluetoothGattDescriptor.html
BluetoothGattServer	A										<section class="prog__container"><pre><code>public final class BluetoothGattServer</code></pre>Public API for the Bluetooth GATT Profile server role.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothGattServer.html
BluetoothGattServerCallback	A										<section class="prog__container"><pre><code>public abstract class BluetoothGattServerCallback</code></pre>This abstract class is used to implement <code>BluetoothGattServer</code> callbacks.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothGattServerCallback.html
BluetoothGattService	A										<section class="prog__container"><pre><code>public class BluetoothGattService</code></pre>Represents a Bluetooth GATT Service</section>	https://developer.android.com/reference/android/bluetooth/BluetoothGattService.html
BluetoothHeadset	A										<section class="prog__container"><pre><code>public final class BluetoothHeadset</code></pre>Public API for controlling the Bluetooth Headset Service. This includes both Bluetooth Headset and Handsfree (v1.5) profiles.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothHeadset.html
BluetoothHealth	A										<section class="prog__container"><pre><code>public final class BluetoothHealth</code></pre>Public API for Bluetooth Health Profile.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothHealth.html
BluetoothHealthAppConfiguration	A										<section class="prog__container"><pre><code>public final class BluetoothHealthAppConfiguration</code></pre>The Bluetooth Health Application Configuration that is used in conjunction with the <code>BluetoothHealth</code> class. This class represents an application configuration that the Bluetooth Health third party application will register to communicate with the remote Bluetooth health device.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothHealthAppConfiguration.html
BluetoothHealthCallback	A										<section class="prog__container"><pre><code>public abstract class BluetoothHealthCallback</code></pre>This abstract class is used to implement <code>BluetoothHealth</code> callbacks.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothHealthCallback.html
BluetoothLeAdvertiser	A										<section class="prog__container"><pre><code>public final class BluetoothLeAdvertiser</code></pre>This class provides a way to perform Bluetooth LE advertise operations, such as starting and stopping advertising. An advertiser can broadcast up to 31 bytes of advertisement data represented by <code>AdvertiseData</code>.</section>	https://developer.android.com/reference/android/bluetooth/le/BluetoothLeAdvertiser.html
BluetoothLeScanner	A										<section class="prog__container"><pre><code>public final class BluetoothLeScanner</code></pre>This class provides methods to perform scan related operations for Bluetooth LE devices. An application can scan for a particular type of Bluetooth LE devices using <code>ScanFilter</code>. It can also request different types of callbacks for delivering the result.</section>	https://developer.android.com/reference/android/bluetooth/le/BluetoothLeScanner.html
BluetoothManager	A										<section class="prog__container"><pre><code>public final class BluetoothManager</code></pre>High level manager used to obtain an instance of an <code>BluetoothAdapter</code> and to conduct overall Bluetooth Management.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothManager.html
BluetoothProfile	A										<section class="prog__container"><pre><code>public interface BluetoothProfile</code></pre>Public APIs for the Bluetooth Profiles.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothProfile.html
BluetoothProfile.ServiceListener	A										<section class="prog__container"><pre><code>public static interface BluetoothProfile.ServiceListener</code></pre>An interface for notifying BluetoothProfile IPC clients when they have been connected or disconnected to the service.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothProfile.ServiceListener.html
BluetoothServerSocket	A										<section class="prog__container"><pre><code>public final class BluetoothServerSocket</code></pre>A listening Bluetooth socket.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothServerSocket.html
BluetoothSocket	A										<section class="prog__container"><pre><code>public final class BluetoothSocket</code></pre>A connected or connecting Bluetooth socket.</section>	https://developer.android.com/reference/android/bluetooth/BluetoothSocket.html
BlurMaskFilter	A										<section class="prog__container"><pre><code>public class BlurMaskFilter</code></pre>This takes a mask, and blurs its edge by the specified radius. Whether or or not to include the original mask, and whether the blur goes outside, inside, or straddles, the original mask's border, is controlled by the Blur enum.</section>	https://developer.android.com/reference/android/graphics/BlurMaskFilter.html
BlurMaskFilter.Blur	A										<section class="prog__container"><pre><code>public static final enum BlurMaskFilter.Blur</code></pre></section>	https://developer.android.com/reference/android/graphics/BlurMaskFilter.Blur.html
BoolRes	A										<section class="prog__container"><pre><code>public abstract @interface BoolRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be a boolean resource reference.</section>	https://developer.android.com/reference/android/support/annotation/BoolRes.html
Boolean	A										<section class="prog__container"><pre><code>public final class Boolean</code></pre>The Boolean class wraps a value of the primitive type <code>boolean</code> in an object. An object of type <code>Boolean</code> contains a single field whose type is <code>boolean</code>.</section>	https://developer.android.com/reference/java/lang/Boolean.html
BooleanSupplier	A										<section class="prog__container"><pre><code>public interface BooleanSupplier</code></pre>Represents a supplier of <code>boolean</code>-valued results. This is the <code>boolean</code>-producing primitive specialization of <code>Supplier</code>.</section>	https://developer.android.com/reference/java/util/function/BooleanSupplier.html
BoringLayout	A										<section class="prog__container"><pre><code>public class BoringLayout</code></pre>A BoringLayout is a very simple Layout implementation for text that fits on a single line and is all left-to-right characters. You will probably never want to make one of these yourself; if you do, be sure to call <code>isBoring(CharSequence, TextPaint)</code> first to make sure the text meets the criteria.</section>	https://developer.android.com/reference/android/text/BoringLayout.html
BoringLayout.Metrics	A										<section class="prog__container"><pre><code>public static class BoringLayout.Metrics</code></pre></section>	https://developer.android.com/reference/android/text/BoringLayout.Metrics.html
BottomNavigationView	A										<section class="prog__container"><pre><code>public class BottomNavigationView</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/BottomNavigationView.html
BottomNavigationView.OnNavigationItemSelectedListener	A										<section class="prog__container"><pre><code>public static interface BottomNavigationView.OnNavigationItemSelectedListener</code></pre>Listener for handling events on bottom navigation items.</section>	https://developer.android.com/reference/android/support/design/widget/BottomNavigationView.OnNavigationItemSelectedListener.html
BottomSheetBehavior.BottomSheetCallback	A										<section class="prog__container"><pre><code>public static abstract class BottomSheetBehavior.BottomSheetCallback</code></pre>Callback for monitoring events about bottom sheets.</section>	https://developer.android.com/reference/android/support/design/widget/BottomSheetBehavior.BottomSheetCallback.html
BottomSheetBehavior.SavedState	A										<section class="prog__container"><pre><code>protected static class BottomSheetBehavior.SavedState</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/BottomSheetBehavior.SavedState.html
BottomSheetDialog	A										<section class="prog__container"><pre><code>public class BottomSheetDialog</code></pre>Base class for <code>Dialog</code>s styled as a bottom sheet.</section>	https://developer.android.com/reference/android/support/design/widget/BottomSheetDialog.html
BottomSheetDialogFragment	A										<section class="prog__container"><pre><code>public class BottomSheetDialogFragment</code></pre>Modal bottom sheet. This is a version of <code>DialogFragment</code> that shows a bottom sheet using <code>BottomSheetDialog</code> instead of a floating dialog.</section>	https://developer.android.com/reference/android/support/design/widget/BottomSheetDialogFragment.html
BounceInterpolator	A										<section class="prog__container"><pre><code>public class BounceInterpolator</code></pre>An interpolator where the change bounces at the end.</section>	https://developer.android.com/reference/android/view/animation/BounceInterpolator.html
BrandedFragment	A										<section class="prog__container"><pre><code>public class BrandedFragment</code></pre>Fragment class for managing search and branding using a view that implements <code>TitleViewAdapter.Provider</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrandedFragment.html
BrandedSupportFragment	A										<section class="prog__container"><pre><code>public class BrandedSupportFragment</code></pre>Fragment class for managing search and branding using a view that implements <code>TitleViewAdapter.Provider</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrandedSupportFragment.html
BreakIterator	D								*[[icu.text.BreakIterator]], <section class="prog__container"><pre><code>public abstract class BreakIterator</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>BreakIterator</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.</section>\n*[[java.text.BreakIterator]], <section class="prog__container"><pre><code>public abstract class BreakIterator</code></pre>The <code>BreakIterator</code> class implements methods for finding the location of boundaries in text. Instances of <code>BreakIterator</code> maintain a current position and scan over text returning the index of characters where boundaries occur. Internally, <code>BreakIterator</code> scans text using a <code>CharacterIterator</code>, and is thus able to scan text held by any object implementing that protocol. A <code>StringCharacterIterator</code> is used to scan <code>String</code> objects passed to <code>setText</code>.</section>			
BroadcastReceiver	A										<section class="prog__container"><pre><code>public abstract class BroadcastReceiver</code></pre>Base class for code that receives and handles broadcast intents sent by <code>sendBroadcast(Intent)</code>.</section>	https://developer.android.com/reference/android/content/BroadcastReceiver.html
BroadcastReceiver.PendingResult	A										<section class="prog__container"><pre><code>public static class BroadcastReceiver.PendingResult</code></pre>State for a result that is pending for a broadcast receiver. Returned by <code>goAsync()</code> while in <code>BroadcastReceiver.onReceive()</code>. This allows you to return from onReceive() without having the broadcast terminate; you must call <code>finish()</code> once you are done with the broadcast. This allows you to process the broadcast off of the main thread of your app.</section>	https://developer.android.com/reference/android/content/BroadcastReceiver.PendingResult.html
BrokenBarrierException	A										<section class="prog__container"><pre><code>public class BrokenBarrierException</code></pre>Exception thrown when a thread tries to wait upon a barrier that is in a broken state, or which enters the broken state while the thread is waiting.</section>	https://developer.android.com/reference/java/util/concurrent/BrokenBarrierException.html
BrowseFragment	A										<section class="prog__container"><pre><code>public class BrowseFragment</code></pre>A fragment for creating Leanback browse screens. It is composed of a RowsFragment and a HeadersFragment.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseFragment.html
BrowseFragment.BrowseTransitionListener	A										<section class="prog__container"><pre><code>public static class BrowseFragment.BrowseTransitionListener</code></pre>Listener for transitions between browse headers and rows.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseFragment.BrowseTransitionListener.html
BrowseFragment.FragmentHost	A										<section class="prog__container"><pre><code>public static interface BrowseFragment.FragmentHost</code></pre>Possible set of actions that <code>BrowseFragment</code> exposes to clients. Custom fragments can interact with <code>BrowseFragment</code> using this interface.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseFragment.FragmentHost.html
BrowseFragment.ListRowFragmentFactory	A										<section class="prog__container"><pre><code>public static class BrowseFragment.ListRowFragmentFactory</code></pre>FragmentFactory implementation for <code>ListRow</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseFragment.ListRowFragmentFactory.html
BrowseFragment.MainFragmentAdapterProvider	A										<section class="prog__container"><pre><code>public static interface BrowseFragment.MainFragmentAdapterProvider</code></pre>Interface to be implemented by all fragments for providing an instance of <code>BrowseFragment.MainFragmentAdapter</code>. Both <code>RowsFragment</code> and custom fragment provided against <code>PageRow</code> will need to implement this interface.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseFragment.MainFragmentAdapterProvider.html
BrowseFragment.MainFragmentAdapterRegistry	A										<section class="prog__container"><pre><code>public static final class BrowseFragment.MainFragmentAdapterRegistry</code></pre>Registry class maintaining the mapping of <code>Row</code> subclasses to <code>BrowseFragment.FragmentFactory</code>. BrowseRowFragment automatically registers <code>BrowseFragment.ListRowFragmentFactory</code> for handling <code>ListRow</code>. Developers can override that and also if they want to use custom fragment, they can register a custom <code>BrowseFragment.FragmentFactory</code> against <code>PageRow</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseFragment.MainFragmentAdapterRegistry.html
BrowseFragment.MainFragmentRowsAdapterProvider	A										<section class="prog__container"><pre><code>public static interface BrowseFragment.MainFragmentRowsAdapterProvider</code></pre>Interface to be implemented by <code>RowsFragment</code> and it's subclasses for providing an instance of <code>BrowseFragment.MainFragmentRowsAdapter</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseFragment.MainFragmentRowsAdapterProvider.html
BrowseFrameLayout	A										<section class="prog__container"><pre><code>public class BrowseFrameLayout</code></pre>A ViewGroup for managing focus behavior between overlapping views.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/BrowseFrameLayout.html
BrowseFrameLayout.OnChildFocusListener	A										<section class="prog__container"><pre><code>public static interface BrowseFrameLayout.OnChildFocusListener</code></pre>Interface for managing child focus in a BrowseFrameLayout.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/BrowseFrameLayout.OnChildFocusListener.html
BrowseFrameLayout.OnFocusSearchListener	A										<section class="prog__container"><pre><code>public static interface BrowseFrameLayout.OnFocusSearchListener</code></pre>Interface for selecting a focused view in a BrowseFrameLayout when the system focus finder couldn't find a view to focus.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/BrowseFrameLayout.OnFocusSearchListener.html
BrowseSupportFragment	A										<section class="prog__container"><pre><code>public class BrowseSupportFragment</code></pre>A fragment for creating Leanback browse screens. It is composed of a RowsSupportFragment and a HeadersSupportFragment.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseSupportFragment.html
BrowseSupportFragment.BrowseTransitionListener	A										<section class="prog__container"><pre><code>public static class BrowseSupportFragment.BrowseTransitionListener</code></pre>Listener for transitions between browse headers and rows.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseSupportFragment.BrowseTransitionListener.html
BrowseSupportFragment.FragmentHost	A										<section class="prog__container"><pre><code>public static interface BrowseSupportFragment.FragmentHost</code></pre>Possible set of actions that <code>BrowseSupportFragment</code> exposes to clients. Custom fragments can interact with <code>BrowseSupportFragment</code> using this interface.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseSupportFragment.FragmentHost.html
BrowseSupportFragment.ListRowFragmentFactory	A										<section class="prog__container"><pre><code>public static class BrowseSupportFragment.ListRowFragmentFactory</code></pre>FragmentFactory implementation for <code>ListRow</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseSupportFragment.ListRowFragmentFactory.html
BrowseSupportFragment.MainFragmentAdapterProvider	A										<section class="prog__container"><pre><code>public static interface BrowseSupportFragment.MainFragmentAdapterProvider</code></pre>Interface to be implemented by all fragments for providing an instance of <code>BrowseSupportFragment.MainFragmentAdapter</code>. Both <code>RowsSupportFragment</code> and custom fragment provided against <code>PageRow</code> will need to implement this interface.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseSupportFragment.MainFragmentAdapterProvider.html
BrowseSupportFragment.MainFragmentAdapterRegistry	A										<section class="prog__container"><pre><code>public static final class BrowseSupportFragment.MainFragmentAdapterRegistry</code></pre>Registry class maintaining the mapping of <code>Row</code> subclasses to <code>BrowseSupportFragment.FragmentFactory</code>. BrowseRowFragment automatically registers <code>BrowseSupportFragment.ListRowFragmentFactory</code> for handling <code>ListRow</code>. Developers can override that and also if they want to use custom fragment, they can register a custom <code>BrowseSupportFragment.FragmentFactory</code> against <code>PageRow</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseSupportFragment.MainFragmentAdapterRegistry.html
BrowseSupportFragment.MainFragmentRowsAdapterProvider	A										<section class="prog__container"><pre><code>public static interface BrowseSupportFragment.MainFragmentRowsAdapterProvider</code></pre>Interface to be implemented by <code>RowsSupportFragment</code> and it's subclasses for providing an instance of <code>BrowseSupportFragment.MainFragmentRowsAdapter</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/BrowseSupportFragment.MainFragmentRowsAdapterProvider.html
Browser	A										<section class="prog__container"><pre><code>public class Browser</code></pre></section>	https://developer.android.com/reference/android/provider/Browser.html
BrowserCompatHostnameVerifier	A										<section class="prog__container"><pre><code>public class BrowserCompatHostnameVerifier</code></pre><p class="caution"><strong> This class was deprecated in API level 22.</strong><br/> Please use <code>openConnection()</code> instead. Please visit this webpage for further details.</section>	https://developer.android.com/reference/org/apache/http/conn/ssl/BrowserCompatHostnameVerifier.html
BuddhistCalendar	A										<section class="prog__container"><pre><code>public class BuddhistCalendar</code></pre><code>BuddhistCalendar</code> is a subclass of <code>GregorianCalendar</code> that numbers years since the birth of the Buddha. This is the civil calendar in some predominantly Buddhist countries such as Thailand, and it is used for religious purposes elsewhere.</section>	https://developer.android.com/reference/android/icu/util/BuddhistCalendar.html
Buffer	A										<section class="prog__container"><pre><code>public abstract class Buffer</code></pre>A container for data of a specific primitive type.</section>	https://developer.android.com/reference/java/nio/Buffer.html
BufferOverflowException	A										<section class="prog__container"><pre><code>public class BufferOverflowException</code></pre>Unchecked exception thrown when a relative <i>put</i> operation reaches the target buffer's limit.</section>	https://developer.android.com/reference/java/nio/BufferOverflowException.html
BufferUnderflowException	A										<section class="prog__container"><pre><code>public class BufferUnderflowException</code></pre>Unchecked exception thrown when a relative <i>get</i> operation reaches the source buffer's limit.</section>	https://developer.android.com/reference/java/nio/BufferUnderflowException.html
BufferedInputStream	A										<section class="prog__container"><pre><code>public class BufferedInputStream</code></pre>A <code>BufferedInputStream</code> adds functionality to another input stream-namely, the ability to buffer the input and to support the <code>mark</code> and <code>reset</code> methods. When the <code>BufferedInputStream</code> is created, an internal buffer array is created. As bytes from the stream are read or skipped, the internal buffer is refilled as necessary from the contained input stream, many bytes at a time. The <code>mark</code> operation remembers a point in the input stream and the <code>reset</code> operation causes all the bytes read since the most recent <code>mark</code> operation to be reread before new bytes are taken from the contained input stream.</section>	https://developer.android.com/reference/java/io/BufferedInputStream.html
BufferedOutputStream	A										<section class="prog__container"><pre><code>public class BufferedOutputStream</code></pre>The class implements a buffered output stream. By setting up such an output stream, an application can write bytes to the underlying output stream without necessarily causing a call to the underlying system for each byte written.</section>	https://developer.android.com/reference/java/io/BufferedOutputStream.html
BufferedReader	A										<section class="prog__container"><pre><code>public class BufferedReader</code></pre>Reads text from a character-input stream, buffering characters so as to provide for the efficient reading of characters, arrays, and lines.</section>	https://developer.android.com/reference/java/io/BufferedReader.html
BufferedWriter	A										<section class="prog__container"><pre><code>public class BufferedWriter</code></pre>Writes text to a character-output stream, buffering characters so as to provide for the efficient writing of single characters, arrays, and strings.</section>	https://developer.android.com/reference/java/io/BufferedWriter.html
Build	A										<section class="prog__container"><pre><code>public class Build</code></pre>Information about the current build, extracted from system properties.</section>	https://developer.android.com/reference/android/os/Build.html
Build.VERSION	A										<section class="prog__container"><pre><code>public static class Build.VERSION</code></pre>Various version strings.</section>	https://developer.android.com/reference/android/os/Build.VERSION.html
Build.VERSION_CODES	A										<section class="prog__container"><pre><code>public static class Build.VERSION_CODES</code></pre>Enumeration of the currently known SDK version codes. These are the values that can be found in <code>SDK</code>. Version numbers increment monotonically with each official platform release.</section>	https://developer.android.com/reference/android/os/Build.VERSION_CODES.html
BuildCompat	A										<section class="prog__container"><pre><code>public class BuildCompat</code></pre>BuildCompat contains additional platform version checking methods for testing compatibility with new features.</section>	https://developer.android.com/reference/android/support/v4/os/BuildCompat.html
BulletSpan	A										<section class="prog__container"><pre><code>public class BulletSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/BulletSpan.html
Bundle	A										<section class="prog__container"><pre><code>public final class Bundle</code></pre>A mapping from String keys to various <code>Parcelable</code> values.</section>	https://developer.android.com/reference/android/os/Bundle.html
BundleCompat	A										<section class="prog__container"><pre><code>public final class BundleCompat</code></pre>Helper for accessing features in <code>Bundle</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/app/BundleCompat.html
Button	A										<section class="prog__container"><pre><code>public class Button</code></pre>Represents a push-button widget. Push-buttons can be pressed, or clicked, by the user to perform an action.</section>	https://developer.android.com/reference/android/widget/Button.html
Byte	A										<section class="prog__container"><pre><code>public final class Byte</code></pre>The <code>Byte</code> class wraps a value of primitive type <code>byte</code> in an object. An object of type <code>Byte</code> contains a single field whose type is <code>byte</code>.</section>	https://developer.android.com/reference/java/lang/Byte.html
Byte2	D								*[[android.renderscript.Byte2]], <section class="prog__container"><pre><code>public class Byte2</code></pre>Class for exposing the native RenderScript byte2 type back to the Android system.</section>\n*[[v8.renderscript.Byte2]], <section class="prog__container"><pre><code>public class Byte2</code></pre>Class for exposing the native RenderScript byte2 type back to the Android system.</section>			
Byte3	D								*[[android.renderscript.Byte3]], <section class="prog__container"><pre><code>public class Byte3</code></pre>Class for exposing the native RenderScript byte3 type back to the Android system.</section>\n*[[v8.renderscript.Byte3]], <section class="prog__container"><pre><code>public class Byte3</code></pre>Class for exposing the native RenderScript byte3 type back to the Android system.</section>			
Byte4	D								*[[android.renderscript.Byte4]], <section class="prog__container"><pre><code>public class Byte4</code></pre>Class for exposing the native RenderScript byte4 type back to the Android system.</section>\n*[[v8.renderscript.Byte4]], <section class="prog__container"><pre><code>public class Byte4</code></pre>Class for exposing the native RenderScript byte4 type back to the Android system.</section>			
ByteArrayInputStream	A										<section class="prog__container"><pre><code>public class ByteArrayInputStream</code></pre>A <code>ByteArrayInputStream</code> contains an internal buffer that contains bytes that may be read from the stream. An internal counter keeps track of the next byte to be supplied by the <code>read</code> method.</section>	https://developer.android.com/reference/java/io/ByteArrayInputStream.html
ByteArrayOutputStream	A										<section class="prog__container"><pre><code>public class ByteArrayOutputStream</code></pre>This class implements an output stream in which the data is written into a byte array. The buffer automatically grows as data is written to it. The data can be retrieved using <code>toByteArray()</code> and <code>toString()</code>.</section>	https://developer.android.com/reference/java/io/ByteArrayOutputStream.html
ByteBuffer	A										<section class="prog__container"><pre><code>public abstract class ByteBuffer</code></pre>A byte buffer.</section>	https://developer.android.com/reference/java/nio/ByteBuffer.html
ByteChannel	A										<section class="prog__container"><pre><code>public interface ByteChannel</code></pre>A channel that can read and write bytes. This interface simply unifies <code>ReadableByteChannel</code> and <code>WritableByteChannel</code>; it does not specify any new operations.</section>	https://developer.android.com/reference/java/nio/channels/ByteChannel.html
ByteOrder	A										<section class="prog__container"><pre><code>public final class ByteOrder</code></pre>A typesafe enumeration for byte orders.</section>	https://developer.android.com/reference/java/nio/ByteOrder.html
CDATASection	A										<section class="prog__container"><pre><code>public interface CDATASection</code></pre>CDATA sections are used to escape blocks of text containing characters that would otherwise be regarded as markup. The only delimiter that is recognized in a CDATA section is the "]]&gt;" string that ends the CDATA section. CDATA sections cannot be nested. Their primary purpose is for including material such as XML fragments, without needing to escape all the delimiters.</section>	https://developer.android.com/reference/org/w3c/dom/CDATASection.html
CRC32	A										<section class="prog__container"><pre><code>public class CRC32</code></pre>A class that can be used to compute the CRC-32 of a data stream.</section>	https://developer.android.com/reference/java/util/zip/CRC32.html
CRL	A										<section class="prog__container"><pre><code>public abstract class CRL</code></pre>This class is an abstraction of certificate revocation lists (CRLs) that have different formats but important common uses. For example, all CRLs share the functionality of listing revoked certificates, and can be queried on whether or not they list a given certificate.</section>	https://developer.android.com/reference/java/security/cert/CRL.html
CRLException	A										<section class="prog__container"><pre><code>public class CRLException</code></pre>CRL (Certificate Revocation List) Exception.</section>	https://developer.android.com/reference/java/security/cert/CRLException.html
CRLReason	A										<section class="prog__container"><pre><code>public final enum CRLReason</code></pre>The CRLReason enumeration specifies the reason that a certificate is revoked, as defined in RFC 3280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile.</section>	https://developer.android.com/reference/java/security/cert/CRLReason.html
CRLSelector	A										<section class="prog__container"><pre><code>public interface CRLSelector</code></pre>A selector that defines a set of criteria for selecting <code>CRL</code>s. Classes that implement this interface are often used to specify which <code>CRL</code>s should be retrieved from a <code>CertStore</code>.</section>	https://developer.android.com/reference/java/security/cert/CRLSelector.html
CacheRequest	A										<section class="prog__container"><pre><code>public abstract class CacheRequest</code></pre>Represents channels for storing resources in the ResponseCache. Instances of such a class provide an OutputStream object which is called by protocol handlers to store the resource data into the cache, and also an abort() method which allows a cache store operation to be interrupted and abandoned. If an IOException is encountered while reading the response or writing to the cache, the current cache store operation will be aborted.</section>	https://developer.android.com/reference/java/net/CacheRequest.html
CacheResponse	A										<section class="prog__container"><pre><code>public abstract class CacheResponse</code></pre>Represent channels for retrieving resources from the ResponseCache. Instances of such a class provide an InputStream that returns the entity body, and also a getHeaders() method which returns the associated response headers.</section>	https://developer.android.com/reference/java/net/CacheResponse.html
Calendar	D								*[[icu.util.Calendar]], <section class="prog__container"><pre><code>public abstract class Calendar</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>Calendar</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.</section>\n*[[java.util.Calendar]], <section class="prog__container"><pre><code>public abstract class Calendar</code></pre>The <code>Calendar</code> class is an abstract class that provides methods for converting between a specific instant in time and a set of <code>calendar fields</code> such as <code>YEAR</code>, <code>MONTH</code>, <code>DAY_OF_MONTH</code>, <code>HOUR</code>, and so on, and for manipulating the calendar fields, such as getting the date of the next week. An instant in time can be represented by a millisecond value that is an offset from the <em>Epoch</em>, January 1, 1970 00:00:00.000 GMT (Gregorian).</section>			
Calendar.WeekData	A										<section class="prog__container"><pre><code>public static final class Calendar.WeekData</code></pre>Simple, immutable struct-like class for access to the CLDR weekend data.</section>	https://developer.android.com/reference/android/icu/util/Calendar.WeekData.html
CalendarContract	A										<section class="prog__container"><pre><code>public final class CalendarContract</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.html
CalendarContract.Attendees	A										<section class="prog__container"><pre><code>public static final class CalendarContract.Attendees</code></pre>Fields and helpers for interacting with Attendees. Each row of this table represents a single attendee or guest of an event. Calling <code>query(ContentResolver, long, String[])</code> will return a list of attendees for the event with the given eventId. Both apps and sync adapters may write to this table. There are six writable fields and all of them except <code>ATTENDEE_NAME</code> must be included when inserting a new attendee. They are: <ul> <li><code>EVENT_ID</code></li> <li><code>ATTENDEE_NAME</code></li> <li><code>ATTENDEE_EMAIL</code></li> <li><code>ATTENDEE_RELATIONSHIP</code></li> <li><code>ATTENDEE_TYPE</code></li> <li><code>ATTENDEE_STATUS</code></li> <li><code>ATTENDEE_IDENTITY</code></li> <li><code>ATTENDEE_ID_NAMESPACE</code></li> </ul></section>	https://developer.android.com/reference/android/provider/CalendarContract.Attendees.html
CalendarContract.AttendeesColumns	A										<section class="prog__container"><pre><code>protected static interface CalendarContract.AttendeesColumns</code></pre>Columns from the Attendees table that other tables join into themselves.</section>	https://developer.android.com/reference/android/provider/CalendarContract.AttendeesColumns.html
CalendarContract.CalendarAlerts	A										<section class="prog__container"><pre><code>public static final class CalendarContract.CalendarAlerts</code></pre>Fields and helpers for accessing calendar alerts information. These fields are for tracking which alerts have been fired. Scheduled alarms will generate an intent using <code>ACTION_EVENT_REMINDER</code>. Apps that receive this action may update the <code>STATE</code> for the reminder when they have finished handling it. Apps that have their notifications disabled should not modify the table to ensure that they do not conflict with another app that is generating a notification. In general, apps should not need to write to this table directly except to update the state of a reminder.</section>	https://developer.android.com/reference/android/provider/CalendarContract.CalendarAlerts.html
CalendarContract.CalendarAlertsColumns	A										<section class="prog__container"><pre><code>protected static interface CalendarContract.CalendarAlertsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.CalendarAlertsColumns.html
CalendarContract.CalendarCache	A										<section class="prog__container"><pre><code>public static final class CalendarContract.CalendarCache</code></pre>CalendarCache stores some settings for calendar including the current time zone for the instances. These settings are stored using a key/value scheme. A <code>KEY</code> must be specified when updating these values.</section>	https://developer.android.com/reference/android/provider/CalendarContract.CalendarCache.html
CalendarContract.CalendarCacheColumns	A										<section class="prog__container"><pre><code>protected static interface CalendarContract.CalendarCacheColumns</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.CalendarCacheColumns.html
CalendarContract.CalendarColumns	A										<section class="prog__container"><pre><code>protected static interface CalendarContract.CalendarColumns</code></pre>Columns specific to the Calendars Uri that other Uris can query.</section>	https://developer.android.com/reference/android/provider/CalendarContract.CalendarColumns.html
CalendarContract.CalendarEntity	A										<section class="prog__container"><pre><code>public static final class CalendarContract.CalendarEntity</code></pre>Class that represents a Calendar Entity. There is one entry per calendar. This is a helper class to make batch operations easier.</section>	https://developer.android.com/reference/android/provider/CalendarContract.CalendarEntity.html
CalendarContract.CalendarSyncColumns	A										<section class="prog__container"><pre><code>protected static interface CalendarContract.CalendarSyncColumns</code></pre>Generic columns for use by sync adapters. The specific functions of these columns are private to the sync adapter. Other clients of the API should not attempt to either read or write this column. These columns are editable as part of the Calendars Uri, but can only be read if accessed through any other Uri.</section>	https://developer.android.com/reference/android/provider/CalendarContract.CalendarSyncColumns.html
CalendarContract.Calendars	A										<section class="prog__container"><pre><code>public static final class CalendarContract.Calendars</code></pre>Constants and helpers for the Calendars table, which contains details for individual calendars. <h3>Operations</h3> All operations can be done either as an app or as a sync adapter. To perform an operation as a sync adapter <code>CALLER_IS_SYNCADAPTER</code> should be set to true and <code>ACCOUNT_NAME</code> and <code>ACCOUNT_TYPE</code> must be set in the Uri parameters. See <code>appendQueryParameter(java.lang.String, java.lang.String)</code> for details on adding parameters. Sync adapters have write access to more columns but are restricted to a single account at a time. Calendars are designed to be primarily managed by a sync adapter and inserting new calendars should be done as a sync adapter. For the most part, apps should only update calendars (such as changing the color or display name). If a local calendar is required an app can do so by inserting as a sync adapter and using an <code>ACCOUNT_TYPE</code> of <code>ACCOUNT_TYPE_LOCAL</code> . <dl> <dt><b>Insert</b></dt> <dd>When inserting a new calendar the following fields must be included: <ul> <li><code>ACCOUNT_NAME</code></li> <li><code>ACCOUNT_TYPE</code></li> <li><code>NAME</code></li> <li><code>CALENDAR_DISPLAY_NAME</code></li> <li><code>CALENDAR_COLOR</code></li> <li><code>CALENDAR_ACCESS_LEVEL</code></li> <li><code>OWNER_ACCOUNT</code></li> </ul> The following fields are not required when inserting a Calendar but are generally a good idea to include: <ul> <li><code>SYNC_EVENTS</code> set to 1</li> <li><code>CALENDAR_TIME_ZONE</code></li> <li><code>ALLOWED_REMINDERS</code></li> <li><code>ALLOWED_AVAILABILITY</code></li> <li><code>ALLOWED_ATTENDEE_TYPES</code></li> </ul> <dt><b>Update</b></dt> <dd>To perform an update on a calendar the <code>_ID</code> of the calendar should be provided either as an appended id to the Uri ( <code>withAppendedId(Uri, long)</code>) or as the first selection item--the selection should start with "_id=?" and the first selectionArg should be the _id of the calendar. Calendars may also be updated using a selection without the id. In general, the <code>ACCOUNT_NAME</code> and <code>ACCOUNT_TYPE</code> should not be changed after a calendar is created as this can cause issues for sync adapters. <dt><b>Delete</b></dt> <dd>Calendars can be deleted either by the <code>_ID</code> as an appended id on the Uri or using any standard selection. Deleting a calendar should generally be handled by a sync adapter as it will remove the calendar from the database and all associated data (aka events).</dd> <dt><b>Query</b></dt> <dd>Querying the Calendars table will get you all information about a set of calendars. There will be one row returned for each calendar that matches the query selection, or at most a single row if the <code>_ID</code> is appended to the Uri.</dd> </dd></dd></dl> <h3>Calendar Columns</h3> The following Calendar columns are writable by both an app and a sync adapter. <ul> <li><code>NAME</code></li> <li><code>CALENDAR_DISPLAY_NAME</code></li> <li><code>VISIBLE</code></li> <li><code>SYNC_EVENTS</code></li> </ul> The following Calendars columns are writable only by a sync adapter <ul> <li><code>ACCOUNT_NAME</code></li> <li><code>ACCOUNT_TYPE</code></li> <li><code>CALENDAR_COLOR</code></li> <li><code>_SYNC_ID</code></li> <li><code>DIRTY</code></li> <li><code>MUTATORS</code></li> <li><code>OWNER_ACCOUNT</code></li> <li><code>MAX_REMINDERS</code></li> <li><code>ALLOWED_REMINDERS</code></li> <li><code>ALLOWED_AVAILABILITY</code></li> <li><code>ALLOWED_ATTENDEE_TYPES</code></li> <li><code>CAN_MODIFY_TIME_ZONE</code></li> <li><code>CAN_ORGANIZER_RESPOND</code></li> <li><code>CAN_PARTIALLY_UPDATE</code></li> <li><code>CALENDAR_LOCATION</code></li> <li><code>CALENDAR_TIME_ZONE</code></li> <li><code>CALENDAR_ACCESS_LEVEL</code></li> <li><code>DELETED</code></li> <li><code>CAL_SYNC1</code></li> <li><code>CAL_SYNC2</code></li> <li><code>CAL_SYNC3</code></li> <li><code>CAL_SYNC4</code></li> <li><code>CAL_SYNC5</code></li> <li><code>CAL_SYNC6</code></li> <li><code>CAL_SYNC7</code></li> <li><code>CAL_SYNC8</code></li> <li><code>CAL_SYNC9</code></li> <li><code>CAL_SYNC10</code></li> </ul></section>	https://developer.android.com/reference/android/provider/CalendarContract.Calendars.html
CalendarContract.Colors	A										<section class="prog__container"><pre><code>public static final class CalendarContract.Colors</code></pre>Fields for accessing colors available for a given account. Colors are referenced by <code>COLOR_KEY</code> which must be unique for a given account name/type. These values can only be updated by the sync adapter. Only <code>COLOR</code> may be updated after the initial insert. In addition, a row can only be deleted once all references to that color have been removed from the <code>CalendarContract.Calendars</code> or <code>CalendarContract.Events</code> tables.</section>	https://developer.android.com/reference/android/provider/CalendarContract.Colors.html
CalendarContract.ColorsColumns	A										<section class="prog__container"><pre><code>protected static interface CalendarContract.ColorsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.ColorsColumns.html
CalendarContract.EventDays	A										<section class="prog__container"><pre><code>public static final class CalendarContract.EventDays</code></pre>Fields and helpers for querying for a list of days that contain events.</section>	https://developer.android.com/reference/android/provider/CalendarContract.EventDays.html
CalendarContract.EventDaysColumns	A										<section class="prog__container"><pre><code>protected static interface CalendarContract.EventDaysColumns</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.EventDaysColumns.html
CalendarContract.Events	A										<section class="prog__container"><pre><code>public static final class CalendarContract.Events</code></pre>Constants and helpers for the Events table, which contains details for individual events. <h3>Operations</h3> All operations can be done either as an app or as a sync adapter. To perform an operation as a sync adapter <code>CALLER_IS_SYNCADAPTER</code> should be set to true and <code>ACCOUNT_NAME</code> and <code>ACCOUNT_TYPE</code> must be set in the Uri parameters. See <code>appendQueryParameter(java.lang.String, java.lang.String)</code> for details on adding parameters. Sync adapters have write access to more columns but are restricted to a single account at a time. <dl> <dt><b>Insert</b></dt> <dd>When inserting a new event the following fields must be included: <ul> <li>dtstart</li> <li>dtend if the event is non-recurring</li> <li>duration if the event is recurring</li> <li>rrule or rdate if the event is recurring</li> <li>eventTimezone</li> <li>a calendar_id</li> </ul> There are also further requirements when inserting or updating an event. See the section on Writing to Events.</dd> <dt><b>Update</b></dt> <dd>To perform an update of an Event the <code>_ID</code> of the event should be provided either as an appended id to the Uri ( <code>withAppendedId(Uri, long)</code>) or as the first selection item--the selection should start with "_id=?" and the first selectionArg should be the _id of the event. Updates may also be done using a selection and no id. Updating an event must respect the same rules as inserting and is further restricted in the fields that can be written. See the section on Writing to Events.</dd> <dt><b>Delete</b></dt> <dd>Events can be deleted either by the <code>_ID</code> as an appended id on the Uri or using any standard selection. If an appended id is used a selection is not allowed. There are two versions of delete: as an app and as a sync adapter. An app delete will set the deleted column on an event and remove all instances of that event. A sync adapter delete will remove the event from the database and all associated data.</dd> <dt><b>Query</b></dt> <dd>Querying the Events table will get you all information about a set of events except their reminders, attendees, and extended properties. There will be one row returned for each event that matches the query selection, or at most a single row if the <code>_ID</code> is appended to the Uri. Recurring events will only return a single row regardless of the number of times that event repeats.</dd> </dl> <h3>Writing to Events</h3> There are further restrictions on all Updates and Inserts in the Events table: <ul> <li>If allDay is set to 1 eventTimezone must be <code>TIMEZONE_UTC</code> and the time must correspond to a midnight boundary.</li> <li>Exceptions are not allowed to recur. If rrule or rdate is not empty, original_id and original_sync_id must be empty.</li> <li>In general a calendar_id should not be modified after insertion. This is not explicitly forbidden but many sync adapters will not behave in an expected way if the calendar_id is modified.</li> </ul> The following Events columns are writable by both an app and a sync adapter. <ul> <li><code>CALENDAR_ID</code></li> <li><code>ORGANIZER</code></li> <li><code>TITLE</code></li> <li><code>EVENT_LOCATION</code></li> <li><code>DESCRIPTION</code></li> <li><code>EVENT_COLOR</code></li> <li><code>DTSTART</code></li> <li><code>DTEND</code></li> <li><code>EVENT_TIMEZONE</code></li> <li><code>EVENT_END_TIMEZONE</code></li> <li><code>DURATION</code></li> <li><code>ALL_DAY</code></li> <li><code>RRULE</code></li> <li><code>RDATE</code></li> <li><code>EXRULE</code></li> <li><code>EXDATE</code></li> <li><code>ORIGINAL_ID</code></li> <li><code>ORIGINAL_SYNC_ID</code></li> <li><code>ORIGINAL_INSTANCE_TIME</code></li> <li><code>ORIGINAL_ALL_DAY</code></li> <li><code>ACCESS_LEVEL</code></li> <li><code>AVAILABILITY</code></li> <li><code>GUESTS_CAN_MODIFY</code></li> <li><code>GUESTS_CAN_INVITE_OTHERS</code></li> <li><code>GUESTS_CAN_SEE_GUESTS</code></li> <li><code>CUSTOM_APP_PACKAGE</code></li> <li><code>CUSTOM_APP_URI</code></li> <li><code>UID_2445</code></li> </ul> The following Events columns are writable only by a sync adapter <ul> <li><code>DIRTY</code></li> <li><code>MUTATORS</code></li> <li><code>_SYNC_ID</code></li> <li><code>SYNC_DATA1</code></li> <li><code>SYNC_DATA2</code></li> <li><code>SYNC_DATA3</code></li> <li><code>SYNC_DATA4</code></li> <li><code>SYNC_DATA5</code></li> <li><code>SYNC_DATA6</code></li> <li><code>SYNC_DATA7</code></li> <li><code>SYNC_DATA8</code></li> <li><code>SYNC_DATA9</code></li> <li><code>SYNC_DATA10</code></li> </ul> The remaining columns are either updated by the provider only or are views into other tables and cannot be changed through the Events table.</section>	https://developer.android.com/reference/android/provider/CalendarContract.Events.html
CalendarContract.EventsColumns	A										<section class="prog__container"><pre><code>protected static interface CalendarContract.EventsColumns</code></pre>Columns from the Events table that other tables join into themselves.</section>	https://developer.android.com/reference/android/provider/CalendarContract.EventsColumns.html
CalendarContract.EventsEntity	A										<section class="prog__container"><pre><code>public static final class CalendarContract.EventsEntity</code></pre>Class that represents an Event Entity. There is one entry per event. Recurring events show up as a single entry. This is a helper class to make batch operations easier. A <code>ContentResolver</code> or <code>ContentProviderClient</code> is required as the helper does additional queries to add reminders and attendees to each entry.</section>	https://developer.android.com/reference/android/provider/CalendarContract.EventsEntity.html
CalendarContract.ExtendedProperties	A										<section class="prog__container"><pre><code>public static final class CalendarContract.ExtendedProperties</code></pre>Fields for accessing the Extended Properties. This is a generic set of name/value pairs for use by sync adapters to add extra information to events. There are three writable columns and all three must be present when inserting a new value. They are: <ul> <li><code>EVENT_ID</code></li> <li><code>NAME</code></li> <li><code>VALUE</code></li> </ul></section>	https://developer.android.com/reference/android/provider/CalendarContract.ExtendedProperties.html
CalendarContract.ExtendedPropertiesColumns	A										<section class="prog__container"><pre><code>protected static interface CalendarContract.ExtendedPropertiesColumns</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.ExtendedPropertiesColumns.html
CalendarContract.Instances	A										<section class="prog__container"><pre><code>public static final class CalendarContract.Instances</code></pre>Fields and helpers for interacting with Instances. An instance is a single occurrence of an event including time zone specific start and end days and minutes. The instances table is not writable and only provides a way to query event occurrences.</section>	https://developer.android.com/reference/android/provider/CalendarContract.Instances.html
CalendarContract.Reminders	A										<section class="prog__container"><pre><code>public static final class CalendarContract.Reminders</code></pre>Fields and helpers for accessing reminders for an event. Each row of this table represents a single reminder for an event. Calling <code>query(ContentResolver, long, String[])</code> will return a list of reminders for the event with the given eventId. Both apps and sync adapters may write to this table. There are three writable fields and all of them must be included when inserting a new reminder. They are: <ul> <li><code>EVENT_ID</code></li> <li><code>MINUTES</code></li> <li><code>METHOD</code></li> </ul></section>	https://developer.android.com/reference/android/provider/CalendarContract.Reminders.html
CalendarContract.RemindersColumns	A										<section class="prog__container"><pre><code>protected static interface CalendarContract.RemindersColumns</code></pre></section>	https://developer.android.com/reference/android/provider/CalendarContract.RemindersColumns.html
CalendarContract.SyncColumns	A										<section class="prog__container"><pre><code>protected static interface CalendarContract.SyncColumns</code></pre>Columns for Sync information used by Calendars and Events tables. These have specific uses which are expected to be consistent by the app and sync adapter.</section>	https://developer.android.com/reference/android/provider/CalendarContract.SyncColumns.html
CalendarContract.SyncState	A										<section class="prog__container"><pre><code>public static final class CalendarContract.SyncState</code></pre>A table provided for sync adapters to use for storing private sync state data.</section>	https://developer.android.com/reference/android/provider/CalendarContract.SyncState.html
CalendarView	A										<section class="prog__container"><pre><code>public class CalendarView</code></pre>This class is a calendar widget for displaying and selecting dates. The range of dates supported by this calendar is configurable.</section>	https://developer.android.com/reference/android/widget/CalendarView.html
CalendarView.OnDateChangeListener	A										<section class="prog__container"><pre><code>public static interface CalendarView.OnDateChangeListener</code></pre>The callback used to indicate the user changes the date.</section>	https://developer.android.com/reference/android/widget/CalendarView.OnDateChangeListener.html
Call	A										<section class="prog__container"><pre><code>public final class Call</code></pre>Represents an ongoing phone call that the in-call app should present to the user.</section>	https://developer.android.com/reference/android/telecom/Call.html
Call.Callback	A										<section class="prog__container"><pre><code>public static abstract class Call.Callback</code></pre>Defines callbacks which inform the <code>InCallService</code> of changes to a <code>Call</code>. These callbacks can originate from the Telecom framework, or a <code>ConnectionService</code> implementation.</section>	https://developer.android.com/reference/android/telecom/Call.Callback.html
Call.Details	A										<section class="prog__container"><pre><code>public static class Call.Details</code></pre></section>	https://developer.android.com/reference/android/telecom/Call.Details.html
CallAudioState	A										<section class="prog__container"><pre><code>public final class CallAudioState</code></pre>Encapsulates the telecom audio state, including the current audio routing, supported audio routing and mute.</section>	https://developer.android.com/reference/android/telecom/CallAudioState.html
CallLog	A										<section class="prog__container"><pre><code>public class CallLog</code></pre>The CallLog provider contains information about placed and received calls.</section>	https://developer.android.com/reference/android/provider/CallLog.html
CallLog.Calls	A										<section class="prog__container"><pre><code>public static class CallLog.Calls</code></pre>Contains the recent calls.</section>	https://developer.android.com/reference/android/provider/CallLog.Calls.html
CallScreeningService	A										<section class="prog__container"><pre><code>public abstract class CallScreeningService</code></pre>This service can be implemented by the default dialer (see <code>getDefaultDialerPackage()</code>) to allow or disallow incoming calls before they are shown to a user.</section>	https://developer.android.com/reference/android/telecom/CallScreeningService.html
CallScreeningService.CallResponse	A										<section class="prog__container"><pre><code>public static class CallScreeningService.CallResponse</code></pre></section>	https://developer.android.com/reference/android/telecom/CallScreeningService.CallResponse.html
CallScreeningService.CallResponse.Builder	A										<section class="prog__container"><pre><code>public static class CallScreeningService.CallResponse.Builder</code></pre></section>	https://developer.android.com/reference/android/telecom/CallScreeningService.CallResponse.Builder.html
CallSuper	A										<section class="prog__container"><pre><code>public abstract @interface CallSuper</code></pre>Denotes that any overriding methods should invoke this method as well.</section>	https://developer.android.com/reference/android/support/annotation/CallSuper.html
Callable	A										<section class="prog__container"><pre><code>public interface Callable</code></pre>A task that returns a result and may throw an exception. Implementors define a single method with no arguments called <code>call</code>.</section>	https://developer.android.com/reference/java/util/concurrent/Callable.html
CallableStatement	A										<section class="prog__container"><pre><code>public interface CallableStatement</code></pre>The interface used to execute SQL stored procedures. The JDBC API provides a stored procedure SQL escape syntax that allows stored procedures to be called in a standard way for all RDBMSs. This escape syntax has one form that includes a result parameter and one that does not. If used, the result parameter must be registered as an OUT parameter. The other parameters can be used for input, output or both. Parameters are referred to sequentially, by number, with the first parameter being 1. <pre> {?= call &lt;procedure-name&gt;[(&lt;arg1&gt;,&lt;arg2&gt;, ...)]} {call &lt;procedure-name&gt;[(&lt;arg1&gt;,&lt;arg2&gt;, ...)]} </pre></section>	https://developer.android.com/reference/java/sql/CallableStatement.html
Callback	A										<section class="prog__container"><pre><code>public interface Callback</code></pre></section>	https://developer.android.com/reference/javax/security/auth/callback/Callback.html
CallbackHandler	A										<section class="prog__container"><pre><code>public interface CallbackHandler</code></pre></section>	https://developer.android.com/reference/javax/security/auth/callback/CallbackHandler.html
CallbackRegistry	A										<section class="prog__container"><pre><code>public class CallbackRegistry</code></pre>A utility for storing and notifying callbacks. This class supports reentrant modification of the callbacks during notification without adversely disrupting notifications. A common pattern for callbacks is to receive a notification and then remove themselves. This class handles this behavior with constant memory under most circumstances.</section>	https://developer.android.com/reference/android/databinding/CallbackRegistry.html
CallbackRegistry.NotifierCallback	A										<section class="prog__container"><pre><code>public static abstract class CallbackRegistry.NotifierCallback</code></pre>Class used to notify events from CallbackRegistry.</section>	https://developer.android.com/reference/android/databinding/CallbackRegistry.NotifierCallback.html
CamcorderProfile	A										<section class="prog__container"><pre><code>public class CamcorderProfile</code></pre>Retrieves the predefined camcorder profile settings for camcorder applications. These settings are read-only.</section>	https://developer.android.com/reference/android/media/CamcorderProfile.html
Camera	D								*[[graphics.Camera]], <section class="prog__container"><pre><code>public class Camera</code></pre>A camera instance can be used to compute 3D transformations and generate a matrix that can be applied, for instance, on a <code>Canvas</code>.</section>\n*[[hardware.Camera]], <section class="prog__container"><pre><code>public class Camera</code></pre><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> We recommend using the new <code>android.hardware.camera2</code> API for new applications.</section>			
Camera.Area	A										<section class="prog__container"><pre><code>public static class Camera.Area</code></pre><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> We recommend using the new <code>android.hardware.camera2</code> API for new applications.</section>	https://developer.android.com/reference/android/hardware/Camera.Area.html
Camera.AutoFocusCallback	A										<section class="prog__container"><pre><code>public static interface Camera.AutoFocusCallback</code></pre><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> We recommend using the new <code>android.hardware.camera2</code> API for new applications.</section>	https://developer.android.com/reference/android/hardware/Camera.AutoFocusCallback.html
Camera.AutoFocusMoveCallback	A										<section class="prog__container"><pre><code>public static interface Camera.AutoFocusMoveCallback</code></pre><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> We recommend using the new <code>android.hardware.camera2</code> API for new applications.</section>	https://developer.android.com/reference/android/hardware/Camera.AutoFocusMoveCallback.html
Camera.CameraInfo	A										<section class="prog__container"><pre><code>public static class Camera.CameraInfo</code></pre><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> We recommend using the new <code>android.hardware.camera2</code> API for new applications.</section>	https://developer.android.com/reference/android/hardware/Camera.CameraInfo.html
Camera.ErrorCallback	A										<section class="prog__container"><pre><code>public static interface Camera.ErrorCallback</code></pre><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> We recommend using the new <code>android.hardware.camera2</code> API for new applications.</section>	https://developer.android.com/reference/android/hardware/Camera.ErrorCallback.html
Camera.Face	A										<section class="prog__container"><pre><code>public static class Camera.Face</code></pre><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> We recommend using the new <code>android.hardware.camera2</code> API for new applications.</section>	https://developer.android.com/reference/android/hardware/Camera.Face.html
Camera.FaceDetectionListener	A										<section class="prog__container"><pre><code>public static interface Camera.FaceDetectionListener</code></pre><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> We recommend using the new <code>android.hardware.camera2</code> API for new applications.</section>	https://developer.android.com/reference/android/hardware/Camera.FaceDetectionListener.html
Camera.OnZoomChangeListener	A										<section class="prog__container"><pre><code>public static interface Camera.OnZoomChangeListener</code></pre><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> We recommend using the new <code>android.hardware.camera2</code> API for new applications.</section>	https://developer.android.com/reference/android/hardware/Camera.OnZoomChangeListener.html
Camera.Parameters	A										<section class="prog__container"><pre><code>public class Camera.Parameters</code></pre><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> We recommend using the new <code>android.hardware.camera2</code> API for new applications.</section>	https://developer.android.com/reference/android/hardware/Camera.Parameters.html
Camera.PictureCallback	A										<section class="prog__container"><pre><code>public static interface Camera.PictureCallback</code></pre><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> We recommend using the new <code>android.hardware.camera2</code> API for new applications.</section>	https://developer.android.com/reference/android/hardware/Camera.PictureCallback.html
Camera.PreviewCallback	A										<section class="prog__container"><pre><code>public static interface Camera.PreviewCallback</code></pre><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> We recommend using the new <code>android.hardware.camera2</code> API for new applications.</section>	https://developer.android.com/reference/android/hardware/Camera.PreviewCallback.html
Camera.ShutterCallback	A										<section class="prog__container"><pre><code>public static interface Camera.ShutterCallback</code></pre><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> We recommend using the new <code>android.hardware.camera2</code> API for new applications.</section>	https://developer.android.com/reference/android/hardware/Camera.ShutterCallback.html
Camera.Size	A										<section class="prog__container"><pre><code>public class Camera.Size</code></pre><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> We recommend using the new <code>android.hardware.camera2</code> API for new applications.</section>	https://developer.android.com/reference/android/hardware/Camera.Size.html
CameraAccessException	A										<section class="prog__container"><pre><code>public class CameraAccessException</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CameraAccessException.html
CameraCaptureSession	A										<section class="prog__container"><pre><code>public abstract class CameraCaptureSession</code></pre>A configured capture session for a <code>CameraDevice</code>, used for capturing images from the camera or reprocessing images captured from the camera in the same session previously.</section>	https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.html
CameraCaptureSession.CaptureCallback	A										<section class="prog__container"><pre><code>public static abstract class CameraCaptureSession.CaptureCallback</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.CaptureCallback.html
CameraCaptureSession.StateCallback	A										<section class="prog__container"><pre><code>public static abstract class CameraCaptureSession.StateCallback</code></pre>A callback object for receiving updates about the state of a camera capture session.</section>	https://developer.android.com/reference/android/hardware/camera2/CameraCaptureSession.StateCallback.html
CameraCharacteristics	A										<section class="prog__container"><pre><code>public final class CameraCharacteristics</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.html
CameraCharacteristics.Key	A										<section class="prog__container"><pre><code>public static final class CameraCharacteristics.Key</code></pre>A <code>Key</code> is used to do camera characteristics field lookups with <code>get(CameraCharacteristics.Key<t>)</t></code>.</section>	https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics.Key.html
CameraConstrainedHighSpeedCaptureSession	A										<section class="prog__container"><pre><code>public abstract class CameraConstrainedHighSpeedCaptureSession</code></pre>A constrained high speed capture session for a <code>CameraDevice</code>, used for capturing high speed images from the <code>CameraDevice</code> for high speed video recording use case.</section>	https://developer.android.com/reference/android/hardware/camera2/CameraConstrainedHighSpeedCaptureSession.html
CameraDevice	A										<section class="prog__container"><pre><code>public abstract class CameraDevice</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CameraDevice.html
CameraDevice.StateCallback	A										<section class="prog__container"><pre><code>public static abstract class CameraDevice.StateCallback</code></pre>A callback objects for receiving updates about the state of a camera device.</section>	https://developer.android.com/reference/android/hardware/camera2/CameraDevice.StateCallback.html
CameraManager	A										<section class="prog__container"><pre><code>public final class CameraManager</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CameraManager.html
CameraManager.AvailabilityCallback	A										<section class="prog__container"><pre><code>public static abstract class CameraManager.AvailabilityCallback</code></pre>A callback for camera devices becoming available or unavailable to open.</section>	https://developer.android.com/reference/android/hardware/camera2/CameraManager.AvailabilityCallback.html
CameraManager.TorchCallback	A										<section class="prog__container"><pre><code>public static abstract class CameraManager.TorchCallback</code></pre>A callback for camera flash torch modes becoming unavailable, disabled, or enabled.</section>	https://developer.android.com/reference/android/hardware/camera2/CameraManager.TorchCallback.html
CameraMetadata	A										<section class="prog__container"><pre><code>public abstract class CameraMetadata</code></pre>The base class for camera controls and information.</section>	https://developer.android.com/reference/android/hardware/camera2/CameraMetadata.html
CameraPrewarmService	A										<section class="prog__container"><pre><code>public abstract class CameraPrewarmService</code></pre>Extend this class to implement a camera prewarm service. See <code>META_DATA_STILL_IMAGE_CAMERA_PREWARM_SERVICE</code>.</section>	https://developer.android.com/reference/android/service/media/CameraPrewarmService.html
CameraProfile	A										<section class="prog__container"><pre><code>public class CameraProfile</code></pre>The CameraProfile class is used to retrieve the pre-defined still image capture (jpeg) quality levels (0-100) used for low, medium, and high quality settings in the Camera application.</section>	https://developer.android.com/reference/android/media/CameraProfile.html
CancellationException	A										<section class="prog__container"><pre><code>public class CancellationException</code></pre>Exception indicating that the result of a value-producing task, such as a <code>FutureTask</code>, cannot be retrieved because the task was cancelled.</section>	https://developer.android.com/reference/java/util/concurrent/CancellationException.html
CancellationSignal	D								*[[android.os.CancellationSignal]], <section class="prog__container"><pre><code>public final class CancellationSignal</code></pre>Provides the ability to cancel an operation in progress.</section>\n*[[v4.os.CancellationSignal]], <section class="prog__container"><pre><code>public final class CancellationSignal</code></pre>Static library support version of the framework's <code>CancellationSignal</code>. Used to write apps that run on platforms prior to Android 4.1. See the framework SDK documentation for a class overview.</section>			
CancellationSignal.OnCancelListener	D								*[[android.os.CancellationSignal.OnCancelListener]], <section class="prog__container"><pre><code>public static interface CancellationSignal.OnCancelListener</code></pre>Listens for cancellation.</section>\n*[[v4.os.CancellationSignal.OnCancelListener]], <section class="prog__container"><pre><code>public static interface CancellationSignal.OnCancelListener</code></pre>Listens for cancellation.</section>			
CancelledKeyException	A										<section class="prog__container"><pre><code>public class CancelledKeyException</code></pre>Unchecked exception thrown when an attempt is made to use a selection key that is no longer valid.</section>	https://developer.android.com/reference/java/nio/channels/CancelledKeyException.html
Canvas	A										<section class="prog__container"><pre><code>public class Canvas</code></pre>The Canvas class holds the "draw" calls. To draw something, you need 4 basic components: A Bitmap to hold the pixels, a Canvas to host the draw calls (writing into the bitmap), a drawing primitive (e.g. Rect, Path, text, Bitmap), and a paint (to describe the colors and styles for the drawing). <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/graphics/Canvas.html
Canvas.EdgeType	A										<section class="prog__container"><pre><code>public static final enum Canvas.EdgeType</code></pre></section>	https://developer.android.com/reference/android/graphics/Canvas.EdgeType.html
Canvas.VertexMode	A										<section class="prog__container"><pre><code>public static final enum Canvas.VertexMode</code></pre></section>	https://developer.android.com/reference/android/graphics/Canvas.VertexMode.html
CaptioningManager	A										<section class="prog__container"><pre><code>public class CaptioningManager</code></pre>Contains methods for accessing and monitoring preferred video captioning state and visual properties.</section>	https://developer.android.com/reference/android/view/accessibility/CaptioningManager.html
CaptioningManager.CaptionStyle	A										<section class="prog__container"><pre><code>public static final class CaptioningManager.CaptionStyle</code></pre>Specifies visual properties for video captions, including foreground and background colors, edge properties, and typeface.</section>	https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptionStyle.html
CaptioningManager.CaptioningChangeListener	A										<section class="prog__container"><pre><code>public static abstract class CaptioningManager.CaptioningChangeListener</code></pre>Listener for changes in captioning properties, including enabled state and user style preferences.</section>	https://developer.android.com/reference/android/view/accessibility/CaptioningManager.CaptioningChangeListener.html
CaptivePortal	A										<section class="prog__container"><pre><code>public class CaptivePortal</code></pre>A class allowing apps handling the <code>ACTION_CAPTIVE_PORTAL_SIGN_IN</code> activity to indicate to the system different outcomes of captive portal sign in. This class is passed as an extra named <code>EXTRA_CAPTIVE_PORTAL</code> with the <code>ACTION_CAPTIVE_PORTAL_SIGN_IN</code> activity.</section>	https://developer.android.com/reference/android/net/CaptivePortal.html
CaptureFailure	A										<section class="prog__container"><pre><code>public class CaptureFailure</code></pre>A report of failed capture for a single image capture from the image sensor.</section>	https://developer.android.com/reference/android/hardware/camera2/CaptureFailure.html
CaptureRequest	A										<section class="prog__container"><pre><code>public final class CaptureRequest</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.html
CaptureRequest.Builder	A										<section class="prog__container"><pre><code>public static final class CaptureRequest.Builder</code></pre>A builder for capture requests.</section>	https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.Builder.html
CaptureRequest.Key	A										<section class="prog__container"><pre><code>public static final class CaptureRequest.Key</code></pre>A <code>Key</code> is used to do capture request field lookups with <code>get(CaptureResult.Key<t>)</t></code> or to set fields with <code>set(Key, Object)</code>.</section>	https://developer.android.com/reference/android/hardware/camera2/CaptureRequest.Key.html
CaptureResult	A										<section class="prog__container"><pre><code>public class CaptureResult</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/CaptureResult.html
CaptureResult.Key	A										<section class="prog__container"><pre><code>public static final class CaptureResult.Key</code></pre>A <code>Key</code> is used to do capture result field lookups with <code>get(CaptureResult.Key<t>)</t></code>.</section>	https://developer.android.com/reference/android/hardware/camera2/CaptureResult.Key.html
CardEmulation	A										<section class="prog__container"><pre><code>public final class CardEmulation</code></pre>This class can be used to query the state of NFC card emulation services. For a general introduction into NFC card emulation, please read the NFC card emulation developer guide.</section>	https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation.html
CardView	A										<section class="prog__container"><pre><code>public class CardView</code></pre>A FrameLayout with a rounded corner background and shadow.</section>	https://developer.android.com/reference/android/support/v7/widget/CardView.html
CarrierConfigManager	A										<section class="prog__container"><pre><code>public class CarrierConfigManager</code></pre>Provides access to telephony configuration values that are carrier-specific.</section>	https://developer.android.com/reference/android/telephony/CarrierConfigManager.html
CarrierIdentifier	A										<section class="prog__container"><pre><code>public class CarrierIdentifier</code></pre>Used to pass info to CarrierConfigService implementations so they can decide what values to return.</section>	https://developer.android.com/reference/android/service/carrier/CarrierIdentifier.html
CarrierMessagingService	A										<section class="prog__container"><pre><code>public abstract class CarrierMessagingService</code></pre>A service that receives calls from the system when new SMS and MMS are sent or received.</section>	https://developer.android.com/reference/android/service/carrier/CarrierMessagingService.html
CarrierMessagingService.ResultCallback	A										<section class="prog__container"><pre><code>public static interface CarrierMessagingService.ResultCallback</code></pre>A callback interface used to provide results asynchronously.</section>	https://developer.android.com/reference/android/service/carrier/CarrierMessagingService.ResultCallback.html
CarrierMessagingService.SendMmsResult	A										<section class="prog__container"><pre><code>public static final class CarrierMessagingService.SendMmsResult</code></pre>The result of sending an MMS.</section>	https://developer.android.com/reference/android/service/carrier/CarrierMessagingService.SendMmsResult.html
CarrierMessagingService.SendMultipartSmsResult	A										<section class="prog__container"><pre><code>public static final class CarrierMessagingService.SendMultipartSmsResult</code></pre>The result of sending a multipart SMS.</section>	https://developer.android.com/reference/android/service/carrier/CarrierMessagingService.SendMultipartSmsResult.html
CarrierMessagingService.SendSmsResult	A										<section class="prog__container"><pre><code>public static final class CarrierMessagingService.SendSmsResult</code></pre>The result of sending an SMS.</section>	https://developer.android.com/reference/android/service/carrier/CarrierMessagingService.SendSmsResult.html
CarrierService	A										<section class="prog__container"><pre><code>public abstract class CarrierService</code></pre>A service that exposes carrier-specific functionality to the system.</section>	https://developer.android.com/reference/android/service/carrier/CarrierService.html
CdmaCellLocation	A										<section class="prog__container"><pre><code>public class CdmaCellLocation</code></pre>Represents the cell location on a CDMA phone.</section>	https://developer.android.com/reference/android/telephony/cdma/CdmaCellLocation.html
CellIdentityCdma	A										<section class="prog__container"><pre><code>public final class CellIdentityCdma</code></pre>CellIdentity is to represent a unique CDMA cell</section>	https://developer.android.com/reference/android/telephony/CellIdentityCdma.html
CellIdentityGsm	A										<section class="prog__container"><pre><code>public final class CellIdentityGsm</code></pre>CellIdentity to represent a unique GSM cell</section>	https://developer.android.com/reference/android/telephony/CellIdentityGsm.html
CellIdentityLte	A										<section class="prog__container"><pre><code>public final class CellIdentityLte</code></pre>CellIdentity is to represent a unique LTE cell</section>	https://developer.android.com/reference/android/telephony/CellIdentityLte.html
CellIdentityWcdma	A										<section class="prog__container"><pre><code>public final class CellIdentityWcdma</code></pre>CellIdentity to represent a unique UMTS cell</section>	https://developer.android.com/reference/android/telephony/CellIdentityWcdma.html
CellInfo	A										<section class="prog__container"><pre><code>public abstract class CellInfo</code></pre>Immutable cell information from a point in time.</section>	https://developer.android.com/reference/android/telephony/CellInfo.html
CellInfoCdma	A										<section class="prog__container"><pre><code>public final class CellInfoCdma</code></pre>Immutable cell information from a point in time.</section>	https://developer.android.com/reference/android/telephony/CellInfoCdma.html
CellInfoGsm	A										<section class="prog__container"><pre><code>public final class CellInfoGsm</code></pre>Immutable cell information from a point in time.</section>	https://developer.android.com/reference/android/telephony/CellInfoGsm.html
CellInfoLte	A										<section class="prog__container"><pre><code>public final class CellInfoLte</code></pre>Immutable cell information from a point in time.</section>	https://developer.android.com/reference/android/telephony/CellInfoLte.html
CellInfoWcdma	A										<section class="prog__container"><pre><code>public final class CellInfoWcdma</code></pre>Immutable cell information from a point in time.</section>	https://developer.android.com/reference/android/telephony/CellInfoWcdma.html
CellLocation	A										<section class="prog__container"><pre><code>public abstract class CellLocation</code></pre>Abstract class that represents the location of the device.</section>	https://developer.android.com/reference/android/telephony/CellLocation.html
CellSignalStrength	A										<section class="prog__container"><pre><code>public abstract class CellSignalStrength</code></pre>Abstract base class for cell phone signal strength related information.</section>	https://developer.android.com/reference/android/telephony/CellSignalStrength.html
CellSignalStrengthCdma	A										<section class="prog__container"><pre><code>public final class CellSignalStrengthCdma</code></pre>Signal strength related information.</section>	https://developer.android.com/reference/android/telephony/CellSignalStrengthCdma.html
CellSignalStrengthGsm	A										<section class="prog__container"><pre><code>public final class CellSignalStrengthGsm</code></pre>GSM signal strength related information.</section>	https://developer.android.com/reference/android/telephony/CellSignalStrengthGsm.html
CellSignalStrengthLte	A										<section class="prog__container"><pre><code>public final class CellSignalStrengthLte</code></pre>LTE signal strength related information.</section>	https://developer.android.com/reference/android/telephony/CellSignalStrengthLte.html
CellSignalStrengthWcdma	A										<section class="prog__container"><pre><code>public final class CellSignalStrengthWcdma</code></pre>Wcdma signal strength related information.</section>	https://developer.android.com/reference/android/telephony/CellSignalStrengthWcdma.html
CertPath	A										<section class="prog__container"><pre><code>public abstract class CertPath</code></pre>An immutable sequence of certificates (a certification path).</section>	https://developer.android.com/reference/java/security/cert/CertPath.html
CertPath.CertPathRep	A										<section class="prog__container"><pre><code>protected static class CertPath.CertPathRep</code></pre>Alternate <code>CertPath</code> class for serialization.</section>	https://developer.android.com/reference/java/security/cert/CertPath.CertPathRep.html
CertPathBuilder	A										<section class="prog__container"><pre><code>public class CertPathBuilder</code></pre>A class for building certification paths (also known as certificate chains).</section>	https://developer.android.com/reference/java/security/cert/CertPathBuilder.html
CertPathBuilderException	A										<section class="prog__container"><pre><code>public class CertPathBuilderException</code></pre>An exception indicating one of a variety of problems encountered when building a certification path with a <code>CertPathBuilder</code>.</section>	https://developer.android.com/reference/java/security/cert/CertPathBuilderException.html
CertPathBuilderResult	A										<section class="prog__container"><pre><code>public interface CertPathBuilderResult</code></pre>A specification of the result of a certification path builder algorithm. All results returned by the <code>CertPathBuilder.build</code> method must implement this interface.</section>	https://developer.android.com/reference/java/security/cert/CertPathBuilderResult.html
CertPathBuilderSpi	A										<section class="prog__container"><pre><code>public abstract class CertPathBuilderSpi</code></pre>The <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>CertPathBuilder</code> class. All <code>CertPathBuilder</code> implementations must include a class (the SPI class) that extends this class (<code>CertPathBuilderSpi</code>) and implements all of its methods. In general, instances of this class should only be accessed through the <code>CertPathBuilder</code> class. For details, see the Java Cryptography Architecture.</section>	https://developer.android.com/reference/java/security/cert/CertPathBuilderSpi.html
CertPathChecker	A										<section class="prog__container"><pre><code>public interface CertPathChecker</code></pre></section>	https://developer.android.com/reference/java/security/cert/CertPathChecker.html
CertPathParameters	A										<section class="prog__container"><pre><code>public interface CertPathParameters</code></pre>A specification of certification path algorithm parameters. The purpose of this interface is to group (and provide type safety for) all <code>CertPath</code> parameter specifications. All <code>CertPath</code> parameter specifications must implement this interface.</section>	https://developer.android.com/reference/java/security/cert/CertPathParameters.html
CertPathTrustManagerParameters	A										<section class="prog__container"><pre><code>public class CertPathTrustManagerParameters</code></pre>A wrapper for CertPathParameters. This class is used to pass validation settings to CertPath based <code>TrustManager</code>s using the <code>TrustManagerFactory.init()</code> method.</section>	https://developer.android.com/reference/javax/net/ssl/CertPathTrustManagerParameters.html
CertPathValidator	A										<section class="prog__container"><pre><code>public class CertPathValidator</code></pre>A class for validating certification paths (also known as certificate chains).</section>	https://developer.android.com/reference/java/security/cert/CertPathValidator.html
CertPathValidatorException	A										<section class="prog__container"><pre><code>public class CertPathValidatorException</code></pre>An exception indicating one of a variety of problems encountered when validating a certification path.</section>	https://developer.android.com/reference/java/security/cert/CertPathValidatorException.html
CertPathValidatorException.BasicReason	A										<section class="prog__container"><pre><code>public static final enum CertPathValidatorException.BasicReason</code></pre>The BasicReason enumerates the potential reasons that a certification path of any type may be invalid.</section>	https://developer.android.com/reference/java/security/cert/CertPathValidatorException.BasicReason.html
CertPathValidatorException.Reason	A										<section class="prog__container"><pre><code>public static interface CertPathValidatorException.Reason</code></pre>The reason the validation algorithm failed.</section>	https://developer.android.com/reference/java/security/cert/CertPathValidatorException.Reason.html
CertPathValidatorResult	A										<section class="prog__container"><pre><code>public interface CertPathValidatorResult</code></pre>A specification of the result of a certification path validator algorithm.</section>	https://developer.android.com/reference/java/security/cert/CertPathValidatorResult.html
CertPathValidatorSpi	A										<section class="prog__container"><pre><code>public abstract class CertPathValidatorSpi</code></pre>The <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>CertPathValidator</code> class. All <code>CertPathValidator</code> implementations must include a class (the SPI class) that extends this class (<code>CertPathValidatorSpi</code>) and implements all of its methods. In general, instances of this class should only be accessed through the <code>CertPathValidator</code> class. For details, see the Java Cryptography Architecture.</section>	https://developer.android.com/reference/java/security/cert/CertPathValidatorSpi.html
CertSelector	A										<section class="prog__container"><pre><code>public interface CertSelector</code></pre>A selector that defines a set of criteria for selecting <code>Certificate</code>s. Classes that implement this interface are often used to specify which <code>Certificate</code>s should be retrieved from a <code>CertStore</code>.</section>	https://developer.android.com/reference/java/security/cert/CertSelector.html
CertStore	A										<section class="prog__container"><pre><code>public class CertStore</code></pre>A class for retrieving <code>Certificate</code>s and <code>CRL</code>s from a repository.</section>	https://developer.android.com/reference/java/security/cert/CertStore.html
CertStoreException	A										<section class="prog__container"><pre><code>public class CertStoreException</code></pre>An exception indicating one of a variety of problems retrieving certificates and CRLs from a <code>CertStore</code>.</section>	https://developer.android.com/reference/java/security/cert/CertStoreException.html
CertStoreParameters	A										<section class="prog__container"><pre><code>public interface CertStoreParameters</code></pre>A specification of <code>CertStore</code> parameters.</section>	https://developer.android.com/reference/java/security/cert/CertStoreParameters.html
CertStoreSpi	A										<section class="prog__container"><pre><code>public abstract class CertStoreSpi</code></pre>The <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>CertStore</code> class. All <code>CertStore</code> implementations must include a class (the SPI class) that extends this class (<code>CertStoreSpi</code>), provides a constructor with a single argument of type <code>CertStoreParameters</code>, and implements all of its methods. In general, instances of this class should only be accessed through the <code>CertStore</code> class. For details, see the Java Cryptography Architecture.</section>	https://developer.android.com/reference/java/security/cert/CertStoreSpi.html
Certificate	D								*[[security.Certificate]], <section class="prog__container"><pre><code>public interface Certificate</code></pre><p class="caution"><strong> This interface was deprecated in API level 1.</strong><br/> A new certificate handling package is created in the Java platform. This Certificate interface is entirely deprecated and is here to allow for a smooth transition to the new package.</section>\n*[[java.security.cert.Certificate]], <section class="prog__container"><pre><code>public abstract class Certificate</code></pre></section>\n*[[javax.security.cert.Certificate]], <section class="prog__container"><pre><code>public abstract class Certificate</code></pre></section>			
Certificate.CertificateRep	A										<section class="prog__container"><pre><code>protected static class Certificate.CertificateRep</code></pre>Alternate Certificate class for serialization.</section>	https://developer.android.com/reference/java/security/cert/Certificate.CertificateRep.html
CertificateEncodingException	D								*[[java.security.cert.CertificateEncodingException]], <section class="prog__container"><pre><code>public class CertificateEncodingException</code></pre>Certificate Encoding Exception. This is thrown whenever an error occurs while attempting to encode a certificate.</section>\n*[[javax.security.cert.CertificateEncodingException]], <section class="prog__container"><pre><code>public class CertificateEncodingException</code></pre>Certificate Encoding Exception. This is thrown whenever an error occurs whilst attempting to encode a certificate.</section>			
CertificateException	D								*[[java.security.cert.CertificateException]], <section class="prog__container"><pre><code>public class CertificateException</code></pre>This exception indicates one of a variety of certificate problems.</section>\n*[[javax.security.cert.CertificateException]], <section class="prog__container"><pre><code>public class CertificateException</code></pre>This exception indicates one of a variety of certificate problems.</section>			
CertificateExpiredException	D								*[[java.security.cert.CertificateExpiredException]], <section class="prog__container"><pre><code>public class CertificateExpiredException</code></pre>Certificate Expired Exception. This is thrown whenever the current <code>Date</code> or the specified <code>Date</code> is after the <code>notAfter</code> date/time specified in the validity period of the certificate.</section>\n*[[javax.security.cert.CertificateExpiredException]], <section class="prog__container"><pre><code>public class CertificateExpiredException</code></pre>Certificate Expired Exception. This is thrown whenever the current <code>Date</code> or the specified <code>Date</code> is after the <code>notAfter</code> date/time specified in the validity period of the certificate.</section>			
CertificateFactory	A										<section class="prog__container"><pre><code>public class CertificateFactory</code></pre>This class defines the functionality of a certificate factory, which is used to generate certificate, certification path (<code>CertPath</code>) and certificate revocation list (CRL) objects from their encodings.</section>	https://developer.android.com/reference/java/security/cert/CertificateFactory.html
CertificateFactorySpi	A										<section class="prog__container"><pre><code>public abstract class CertificateFactorySpi</code></pre>This class defines the <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>CertificateFactory</code> class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a certificate factory for a particular certificate type, e.g., X.509.</section>	https://developer.android.com/reference/java/security/cert/CertificateFactorySpi.html
CertificateNotYetValidException	D								*[[java.security.cert.CertificateNotYetValidException]], <section class="prog__container"><pre><code>public class CertificateNotYetValidException</code></pre>Certificate is not yet valid exception. This is thrown whenever the current <code>Date</code> or the specified <code>Date</code> is before the <code>notBefore</code> date/time in the Certificate validity period.</section>\n*[[javax.security.cert.CertificateNotYetValidException]], <section class="prog__container"><pre><code>public class CertificateNotYetValidException</code></pre>Certificate is not yet valid exception. This is thrown whenever the current <code>Date</code> or the specified <code>Date</code> is before the <code>notBefore</code> date/time in the Certificate validity period.</section>			
CertificateParsingException	D								*[[java.security.cert.CertificateParsingException]], <section class="prog__container"><pre><code>public class CertificateParsingException</code></pre>Certificate Parsing Exception. This is thrown whenever an invalid DER-encoded certificate is parsed or unsupported DER features are found in the Certificate.</section>\n*[[javax.security.cert.CertificateParsingException]], <section class="prog__container"><pre><code>public class CertificateParsingException</code></pre>Certificate Parsing Exception. This is thrown whenever invalid DER encoded certificate is parsed or unsupported DER features are found in the Certificate.</section>			
CertificateRevokedException	A										<section class="prog__container"><pre><code>public class CertificateRevokedException</code></pre>An exception that indicates an X.509 certificate is revoked. A <code>CertificateRevokedException</code> contains additional information about the revoked certificate, such as the date on which the certificate was revoked and the reason it was revoked.</section>	https://developer.android.com/reference/java/security/cert/CertificateRevokedException.html
ChangeBounds	D								*[[support.transition.ChangeBounds]], <section class="prog__container"><pre><code>public class ChangeBounds</code></pre>This transition captures the layout bounds of target views before and after the scene change and animates those changes during the transition.</section>\n*[[android.transition.ChangeBounds]], <section class="prog__container"><pre><code>public class ChangeBounds</code></pre>This transition captures the layout bounds of target views before and after the scene change and animates those changes during the transition.</section>			
ChangeClipBounds	A										<section class="prog__container"><pre><code>public class ChangeClipBounds</code></pre>ChangeClipBounds captures the <code>getClipBounds()</code> before and after the scene change and animates those changes during the transition.</section>	https://developer.android.com/reference/android/transition/ChangeClipBounds.html
ChangeImageTransform	A										<section class="prog__container"><pre><code>public class ChangeImageTransform</code></pre>This Transition captures an ImageView's matrix before and after the scene change and animates it during the transition.</section>	https://developer.android.com/reference/android/transition/ChangeImageTransform.html
ChangeScroll	A										<section class="prog__container"><pre><code>public class ChangeScroll</code></pre>This transition captures the scroll properties of targets before and after the scene change and animates any changes.</section>	https://developer.android.com/reference/android/transition/ChangeScroll.html
ChangeTransform	A										<section class="prog__container"><pre><code>public class ChangeTransform</code></pre>This Transition captures scale and rotation for Views before and after the scene change and animates those changes during the transition. A change in parent is handled as well by capturing the transforms from the parent before and after the scene change and animating those during the transition.</section>	https://developer.android.com/reference/android/transition/ChangeTransform.html
Channel	A										<section class="prog__container"><pre><code>public interface Channel</code></pre>A nexus for I/O operations.</section>	https://developer.android.com/reference/java/nio/channels/Channel.html
Channels	A										<section class="prog__container"><pre><code>public final class Channels</code></pre>Utility methods for channels and streams.</section>	https://developer.android.com/reference/java/nio/channels/Channels.html
CharArrayBuffer	A										<section class="prog__container"><pre><code>public final class CharArrayBuffer</code></pre>This is used for <code>copyStringToBuffer(int, CharArrayBuffer)</code></section>	https://developer.android.com/reference/android/database/CharArrayBuffer.html
CharArrayReader	A										<section class="prog__container"><pre><code>public class CharArrayReader</code></pre>This class implements a character buffer that can be used as a character-input stream.</section>	https://developer.android.com/reference/java/io/CharArrayReader.html
CharArrayWriter	A										<section class="prog__container"><pre><code>public class CharArrayWriter</code></pre>This class implements a character buffer that can be used as an Writer. The buffer automatically grows when data is written to the stream. The data can be retrieved using toCharArray() and toString().</section>	https://developer.android.com/reference/java/io/CharArrayWriter.html
CharBuffer	A										<section class="prog__container"><pre><code>public abstract class CharBuffer</code></pre>A char buffer.</section>	https://developer.android.com/reference/java/nio/CharBuffer.html
CharConversionException	A										<section class="prog__container"><pre><code>public class CharConversionException</code></pre>Base class for character conversion exceptions.</section>	https://developer.android.com/reference/java/io/CharConversionException.html
CharSequence	A										<section class="prog__container"><pre><code>public interface CharSequence</code></pre>A <tt>CharSequence</tt> is a readable sequence of <code>char</code> values. This interface provides uniform, read-only access to many different kinds of <code>char</code> sequences. A <code>char</code> value represents a character in the <i>Basic Multilingual Plane (BMP)</i> or a surrogate. Refer to Unicode Character Representation for details.</section>	https://developer.android.com/reference/java/lang/CharSequence.html
Character	A										<section class="prog__container"><pre><code>public final class Character</code></pre>The <code>Character</code> class wraps a value of the primitive type <code>char</code> in an object. An object of type <code>Character</code> contains a single field whose type is <code>char</code>.</section>	https://developer.android.com/reference/java/lang/Character.html
Character.Subset	A										<section class="prog__container"><pre><code>public static class Character.Subset</code></pre>Instances of this class represent particular subsets of the Unicode character set. The only family of subsets defined in the <code>Character</code> class is <code>Character.UnicodeBlock</code>. Other portions of the Java API may define other subsets for their own purposes.</section>	https://developer.android.com/reference/java/lang/Character.Subset.html
Character.UnicodeBlock	A										<section class="prog__container"><pre><code>public static final class Character.UnicodeBlock</code></pre>A family of character subsets representing the character blocks in the Unicode specification. Character blocks generally define characters used for a specific script or purpose. A character is contained by at most one Unicode block.</section>	https://developer.android.com/reference/java/lang/Character.UnicodeBlock.html
Character.UnicodeScript	A										<section class="prog__container"><pre><code>public static final enum Character.UnicodeScript</code></pre>A family of character subsets representing the character scripts defined in the <i>Unicode Standard Annex #24: Script Names</i>. Every Unicode character is assigned to a single Unicode script, either a specific script, such as <code>Latin</code>, or one of the following three special values, <code>Inherited</code>, <code>Common</code> or <code>Unknown</code>.</section>	https://developer.android.com/reference/java/lang/Character.UnicodeScript.html
CharacterCodingException	A										<section class="prog__container"><pre><code>public class CharacterCodingException</code></pre>Checked exception thrown when a character encoding or decoding error occurs.</section>	https://developer.android.com/reference/java/nio/charset/CharacterCodingException.html
CharacterData	A										<section class="prog__container"><pre><code>public interface CharacterData</code></pre>The <code>CharacterData</code> interface extends Node with a set of attributes and methods for accessing character data in the DOM. For clarity this set is defined here rather than on each object that uses these attributes and methods. No DOM objects correspond directly to <code>CharacterData</code>, though <code>Text</code> and others do inherit the interface from it. All <code>offsets</code> in this interface start from <code>0</code>.</section>	https://developer.android.com/reference/org/w3c/dom/CharacterData.html
CharacterIterator	A										<section class="prog__container"><pre><code>public interface CharacterIterator</code></pre>This interface defines a protocol for bidirectional iteration over text. The iterator iterates over a bounded sequence of characters. Characters are indexed with values beginning with the value returned by getBeginIndex() and continuing through the value returned by getEndIndex()-1.</section>	https://developer.android.com/reference/java/text/CharacterIterator.html
CharacterPickerDialog	A										<section class="prog__container"><pre><code>public class CharacterPickerDialog</code></pre>Dialog for choosing accented characters related to a base character.</section>	https://developer.android.com/reference/android/text/method/CharacterPickerDialog.html
CharacterStyle	A										<section class="prog__container"><pre><code>public abstract class CharacterStyle</code></pre>The classes that affect character-level text formatting extend this class. Most extend its subclass <code>MetricAffectingSpan</code>, but simple ones may just implement <code>UpdateAppearance</code>.</section>	https://developer.android.com/reference/android/text/style/CharacterStyle.html
Charset	A										<section class="prog__container"><pre><code>public abstract class Charset</code></pre>A named mapping between sequences of sixteen-bit Unicode code units and sequences of bytes. This class defines methods for creating decoders and encoders and for retrieving the various names associated with a charset. Instances of this class are immutable.</section>	https://developer.android.com/reference/java/nio/charset/Charset.html
CharsetDecoder	A										<section class="prog__container"><pre><code>public abstract class CharsetDecoder</code></pre>An engine that can transform a sequence of bytes in a specific charset into a sequence of sixteen-bit Unicode characters.</section>	https://developer.android.com/reference/java/nio/charset/CharsetDecoder.html
CharsetEncoder	A										<section class="prog__container"><pre><code>public abstract class CharsetEncoder</code></pre>An engine that can transform a sequence of sixteen-bit Unicode characters into a sequence of bytes in a specific charset.</section>	https://developer.android.com/reference/java/nio/charset/CharsetEncoder.html
CharsetProvider	A										<section class="prog__container"><pre><code>public abstract class CharsetProvider</code></pre>Charset service-provider class.</section>	https://developer.android.com/reference/java/nio/charset/spi/CharsetProvider.html
CheckBox	A										<section class="prog__container"><pre><code>public class CheckBox</code></pre></section>	https://developer.android.com/reference/android/widget/CheckBox.html
CheckBoxPreference	D								*[[android.preference.CheckBoxPreference]], <section class="prog__container"><pre><code>public class CheckBoxPreference</code></pre>A <code>Preference</code> that provides checkbox widget functionality.</section>\n*[[v7.preference.CheckBoxPreference]], <section class="prog__container"><pre><code>public class CheckBoxPreference</code></pre>A <code>Preference</code> that provides checkbox widget functionality.</section>			
CheckResult	A										<section class="prog__container"><pre><code>public abstract @interface CheckResult</code></pre>Denotes that the annotated method returns a result that it typically is an error to ignore. This is usually used for methods that have no side effect, so calling it without actually looking at the result usually means the developer has misunderstood what the method does.</section>	https://developer.android.com/reference/android/support/annotation/CheckResult.html
Checkable	A										<section class="prog__container"><pre><code>public interface Checkable</code></pre>Defines an extension for views that make them checkable.</section>	https://developer.android.com/reference/android/widget/Checkable.html
CheckedInputStream	A										<section class="prog__container"><pre><code>public class CheckedInputStream</code></pre>An input stream that also maintains a checksum of the data being read. The checksum can then be used to verify the integrity of the input data.</section>	https://developer.android.com/reference/java/util/zip/CheckedInputStream.html
CheckedOutputStream	A										<section class="prog__container"><pre><code>public class CheckedOutputStream</code></pre>An output stream that also maintains a checksum of the data being written. The checksum can then be used to verify the integrity of the output data.</section>	https://developer.android.com/reference/java/util/zip/CheckedOutputStream.html
CheckedTextView	A										<section class="prog__container"><pre><code>public class CheckedTextView</code></pre>An extension to <code>TextView</code> that supports the <code>Checkable</code> interface and displays.</section>	https://developer.android.com/reference/android/widget/CheckedTextView.html
Checksum	A										<section class="prog__container"><pre><code>public interface Checksum</code></pre>An interface representing a data checksum.</section>	https://developer.android.com/reference/java/util/zip/Checksum.html
ChineseCalendar	A										<section class="prog__container"><pre><code>public class ChineseCalendar</code></pre><code>ChineseCalendar</code> is a concrete subclass of <code>Calendar</code> that implements a traditional Chinese calendar. The traditional Chinese calendar is a lunisolar calendar: Each month starts on a new moon, and the months are numbered according to solar events, specifically, to guarantee that month 11 always contains the winter solstice. In order to accomplish this, leap months are inserted in certain years. Leap months are numbered the same as the month they follow. The decision of which month is a leap month depends on the relative movements of the sun and moon.</section>	https://developer.android.com/reference/android/icu/util/ChineseCalendar.html
ChoiceFormat	A										<section class="prog__container"><pre><code>public class ChoiceFormat</code></pre>A <code>ChoiceFormat</code> allows you to attach a format to a range of numbers. It is generally used in a <code>MessageFormat</code> for handling plurals. The choice is specified with an ascending list of doubles, where each item specifies a half-open interval up to the next item: <blockquote> <pre> X matches j if and only if limit[j] &lt;= X &lt; limit[j+1] </pre> </blockquote> If there is no match, then either the first or last index is used, depending on whether the number (X) is too low or too high. If the limit array is not in ascending order, the results of formatting will be incorrect. ChoiceFormat also accepts <code>\u221E</code> as equivalent to infinity(INF).</section>	https://developer.android.com/reference/java/text/ChoiceFormat.html
ChooserTarget	A										<section class="prog__container"><pre><code>public final class ChooserTarget</code></pre>A ChooserTarget represents a deep-link into an application as returned by a <code>ChooserTargetService</code>.</section>	https://developer.android.com/reference/android/service/chooser/ChooserTarget.html
ChooserTargetService	A										<section class="prog__container"><pre><code>public abstract class ChooserTargetService</code></pre>A service that receives calls from the system when the user is asked to choose a target for an intent explicitly by another app. The calling app must have invoked <code>ACTION_CHOOSER</code> as handled by the system; applications do not have the ability to query a ChooserTargetService directly.</section>	https://developer.android.com/reference/android/service/chooser/ChooserTargetService.html
Choreographer	A										<section class="prog__container"><pre><code>public final class Choreographer</code></pre>Coordinates the timing of animations, input and drawing.</section>	https://developer.android.com/reference/android/view/Choreographer.html
Choreographer.FrameCallback	A										<section class="prog__container"><pre><code>public static interface Choreographer.FrameCallback</code></pre>Implement this interface to receive a callback when a new display frame is being rendered. The callback is invoked on the <code>Looper</code> thread to which the <code>Choreographer</code> is attached.</section>	https://developer.android.com/reference/android/view/Choreographer.FrameCallback.html
Chronometer	A										<section class="prog__container"><pre><code>public class Chronometer</code></pre>Class that implements a simple timer.</section>	https://developer.android.com/reference/android/widget/Chronometer.html
Chronometer.OnChronometerTickListener	A										<section class="prog__container"><pre><code>public static interface Chronometer.OnChronometerTickListener</code></pre>A callback that notifies when the chronometer has incremented on its own.</section>	https://developer.android.com/reference/android/widget/Chronometer.OnChronometerTickListener.html
Cipher	A										<section class="prog__container"><pre><code>public class Cipher</code></pre>This class provides the functionality of a cryptographic cipher for encryption and decryption. It forms the core of the Java Cryptographic Extension (JCE) framework.</section>	https://developer.android.com/reference/javax/crypto/Cipher.html
CipherInputStream	A										<section class="prog__container"><pre><code>public class CipherInputStream</code></pre>A CipherInputStream is composed of an InputStream and a Cipher so that read() methods return data that are read in from the underlying InputStream but have been additionally processed by the Cipher. The Cipher must be fully initialized before being used by a CipherInputStream.</section>	https://developer.android.com/reference/javax/crypto/CipherInputStream.html
CipherOutputStream	A										<section class="prog__container"><pre><code>public class CipherOutputStream</code></pre>A CipherOutputStream is composed of an OutputStream and a Cipher so that write() methods first process the data before writing them out to the underlying OutputStream. The cipher must be fully initialized before being used by a CipherOutputStream.</section>	https://developer.android.com/reference/javax/crypto/CipherOutputStream.html
CipherSpi	A										<section class="prog__container"><pre><code>public abstract class CipherSpi</code></pre>This class defines the <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>Cipher</code> class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a particular cipher algorithm.</section>	https://developer.android.com/reference/javax/crypto/CipherSpi.html
CircularArray	A										<section class="prog__container"><pre><code>public final class CircularArray</code></pre>CircularArray is a generic circular array data structure that provides O(1) random read, O(1) prepend and O(1) append. The CircularArray automatically grows its capacity when number of added items is over its capacity.</section>	https://developer.android.com/reference/android/support/v4/util/CircularArray.html
CircularIntArray	A										<section class="prog__container"><pre><code>public final class CircularIntArray</code></pre>CircularIntArray is a circular integer array data structure that provides O(1) random read, O(1) prepend and O(1) append. The CircularIntArray automatically grows its capacity when number of added integers is over its capacity.</section>	https://developer.android.com/reference/android/support/v4/util/CircularIntArray.html
CircularPropagation	A										<section class="prog__container"><pre><code>public class CircularPropagation</code></pre>A propagation that varies with the distance to the epicenter of the Transition or center of the scene if no epicenter exists. When a View is visible in the start of the transition, Views farther from the epicenter will transition sooner than Views closer to the epicenter. When a View is not in the start of the transition or is not visible at the start of the transition, it will transition sooner when closer to the epicenter and later when farther from the epicenter. This is the default TransitionPropagation used with <code>Explode</code>.</section>	https://developer.android.com/reference/android/transition/CircularPropagation.html
Class	A										<section class="prog__container"><pre><code>public final class Class</code></pre>Instances of the class <code>Class</code> represent classes and interfaces in a running Java application. An enum is a kind of class and an annotation is a kind of interface. Every array also belongs to a class that is reflected as a <code>Class</code> object that is shared by all arrays with the same element type and number of dimensions. The primitive Java types (<code>boolean</code>, <code>byte</code>, <code>char</code>, <code>short</code>, <code>int</code>, <code>long</code>, <code>float</code>, and <code>double</code>), and the keyword <code>void</code> are also represented as <code>Class</code> objects.</section>	https://developer.android.com/reference/java/lang/Class.html
ClassCastException	A										<section class="prog__container"><pre><code>public class ClassCastException</code></pre>Thrown to indicate that the code has attempted to cast an object to a subclass of which it is not an instance. For example, the following code generates a <code>ClassCastException</code>:</section>	https://developer.android.com/reference/java/lang/ClassCastException.html
ClassCircularityError	A										<section class="prog__container"><pre><code>public class ClassCircularityError</code></pre>Thrown when the Java Virtual Machine detects a circularity in the superclass hierarchy of a class being loaded.</section>	https://developer.android.com/reference/java/lang/ClassCircularityError.html
ClassFormatError	A										<section class="prog__container"><pre><code>public class ClassFormatError</code></pre>Thrown when the Java Virtual Machine attempts to read a class file and determines that the file is malformed or otherwise cannot be interpreted as a class file.</section>	https://developer.android.com/reference/java/lang/ClassFormatError.html
ClassLoader	A										<section class="prog__container"><pre><code>public abstract class ClassLoader</code></pre>A class loader is an object that is responsible for loading classes. The class <tt>ClassLoader</tt> is an abstract class. Given the binary name of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class. A typical strategy is to transform the name into a file name and then read a "class file" of that name from a file system.</section>	https://developer.android.com/reference/java/lang/ClassLoader.html
ClassNotFoundException	A										<section class="prog__container"><pre><code>public class ClassNotFoundException</code></pre>Thrown when an application tries to load in a class through its string name using: <ul> <li>The <code>forName</code> method in class <code>Class</code>. <li>The <code>findSystemClass</code> method in class <code>ClassLoader</code> . <li>The <code>loadClass</code> method in class <code>ClassLoader</code>. </li></li></li></ul></section>	https://developer.android.com/reference/java/lang/ClassNotFoundException.html
ClassPresenterSelector	A										<section class="prog__container"><pre><code>public final class ClassPresenterSelector</code></pre>A ClassPresenterSelector selects a <code>Presenter</code> based on the item's Java class.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ClassPresenterSelector.html
ClickableSpan	A										<section class="prog__container"><pre><code>public abstract class ClickableSpan</code></pre>If an object of this type is attached to the text of a TextView with a movement method of LinkMovementMethod, the affected spans of text can be selected. If clicked, the <code>onClick(View)</code> method will be called.</section>	https://developer.android.com/reference/android/text/style/ClickableSpan.html
ClientCertRequest	A										<section class="prog__container"><pre><code>public abstract class ClientCertRequest</code></pre>ClientCertRequest: The user receives an instance of this class as a parameter of <code>onReceivedClientCertRequest(WebView, ClientCertRequest)</code>. The request includes the parameters to choose the client certificate, such as the host name and the port number requesting the cert, the acceptable key types and the principals. The user should call one of the class methods to indicate how to deal with the client certificate request. All methods should be called on UI thread. WebView caches the <code>proceed(PrivateKey, X509Certificate[])</code> and <code>cancel()</code> responses in memory and uses them to handle future client certificate requests for the same host/port pair. The user can clear the cached data using <code>clearClientCertPreferences(Runnable)</code>.</section>	https://developer.android.com/reference/android/webkit/ClientCertRequest.html
ClientInfoStatus	A										<section class="prog__container"><pre><code>public final enum ClientInfoStatus</code></pre>Enumeration for status of the reason that a property could not be set via a call to <code>Connection.setClientInfo</code></section>	https://developer.android.com/reference/java/sql/ClientInfoStatus.html
ClipData	A										<section class="prog__container"><pre><code>public class ClipData</code></pre>Representation of a clipped data on the clipboard.</section>	https://developer.android.com/reference/android/content/ClipData.html
ClipData.Item	A										<section class="prog__container"><pre><code>public static class ClipData.Item</code></pre>Description of a single item in a ClipData.</section>	https://developer.android.com/reference/android/content/ClipData.Item.html
ClipDescription	A										<section class="prog__container"><pre><code>public class ClipDescription</code></pre>Meta-data describing the contents of a <code>ClipData</code>. Provides enough information to know if you can handle the ClipData, but not the data itself. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/content/ClipDescription.html
ClipDrawable	A										<section class="prog__container"><pre><code>public class ClipDrawable</code></pre>A Drawable that clips another Drawable based on this Drawable's current level value. You can control how much the child Drawable gets clipped in width and height based on the level, as well as a gravity to control where it is placed in its overall container. Most often used to implement things like progress bars, by increasing the drawable's level with <code>setLevel()</code>. <p class="note"><strong>Note:</strong> The drawable is clipped completely and not visible when the level is 0 and fully revealed when the level is 10,000.</section>	https://developer.android.com/reference/android/graphics/drawable/ClipDrawable.html
ClipboardManager	D								*[[content.ClipboardManager]], <section class="prog__container"><pre><code>public class ClipboardManager</code></pre>Interface to the clipboard service, for placing and retrieving text in the global clipboard.</section>\n*[[text.ClipboardManager]], <section class="prog__container"><pre><code>public abstract class ClipboardManager</code></pre><p class="caution"><strong> This class was deprecated in API level 11.</strong><br/> Old text-only interface to the clipboard. See <code>ClipboardManager</code> for the modern API.</section>			
ClipboardManager.OnPrimaryClipChangedListener	A										<section class="prog__container"><pre><code>public static interface ClipboardManager.OnPrimaryClipChangedListener</code></pre>Defines a listener callback that is invoked when the primary clip on the clipboard changes. Objects that want to register a listener call <code>addPrimaryClipChangedListener()</code> with an object that implements OnPrimaryClipChangedListener.</section>	https://developer.android.com/reference/android/content/ClipboardManager.OnPrimaryClipChangedListener.html
Clob	A										<section class="prog__container"><pre><code>public interface Clob</code></pre>The mapping in the Java<sup><font size="-2">TM</font></sup> programming language for the SQL <code>CLOB</code> type. An SQL <code>CLOB</code> is a built-in type that stores a Character Large Object as a column value in a row of a database table. By default drivers implement a <code>Clob</code> object using an SQL <code>locator(CLOB)</code>, which means that a <code>Clob</code> object contains a logical pointer to the SQL <code>CLOB</code> data rather than the data itself. A <code>Clob</code> object is valid for the duration of the transaction in which it was created.</section>	https://developer.android.com/reference/java/sql/Clob.html
CloneNotSupportedException	A										<section class="prog__container"><pre><code>public class CloneNotSupportedException</code></pre>Thrown to indicate that the <code>clone</code> method in class <code>Object</code> has been called to clone an object, but that the object's class does not implement the <code>Cloneable</code> interface.</section>	https://developer.android.com/reference/java/lang/CloneNotSupportedException.html
Cloneable	A										<section class="prog__container"><pre><code>public interface Cloneable</code></pre>A class implements the <code>Cloneable</code> interface to indicate to the <code>clone()</code> method that it is legal for that method to make a field-for-field copy of instances of that class.</section>	https://developer.android.com/reference/java/lang/Cloneable.html
Closeable	A										<section class="prog__container"><pre><code>public interface Closeable</code></pre>A <code>Closeable</code> is a source or destination of data that can be closed. The close method is invoked to release resources that the object is holding (such as open files).</section>	https://developer.android.com/reference/java/io/Closeable.html
ClosedByInterruptException	A										<section class="prog__container"><pre><code>public class ClosedByInterruptException</code></pre>Checked exception received by a thread when another thread interrupts it while it is blocked in an I/O operation upon a channel. Before this exception is thrown the channel will have been closed and the interrupt status of the previously-blocked thread will have been set.</section>	https://developer.android.com/reference/java/nio/channels/ClosedByInterruptException.html
ClosedChannelException	A										<section class="prog__container"><pre><code>public class ClosedChannelException</code></pre>Checked exception thrown when an attempt is made to invoke or complete an I/O operation upon channel that is closed, or at least closed to that operation. That this exception is thrown does not necessarily imply that the channel is completely closed. A socket channel whose write half has been shut down, for example, may still be open for reading.</section>	https://developer.android.com/reference/java/nio/channels/ClosedChannelException.html
ClosedSelectorException	A										<section class="prog__container"><pre><code>public class ClosedSelectorException</code></pre>Unchecked exception thrown when an attempt is made to invoke an I/O operation upon a closed selector.</section>	https://developer.android.com/reference/java/nio/channels/ClosedSelectorException.html
CodeSigner	A										<section class="prog__container"><pre><code>public final class CodeSigner</code></pre>This class encapsulates information about a code signer. It is immutable.</section>	https://developer.android.com/reference/java/security/CodeSigner.html
CodeSource	A										<section class="prog__container"><pre><code>public class CodeSource</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/security/CodeSource.html
CoderMalfunctionError	A										<section class="prog__container"><pre><code>public class CoderMalfunctionError</code></pre>Error thrown when the <code>decodeLoop</code> method of a <code>CharsetDecoder</code>, or the <code>encodeLoop</code> method of a <code>CharsetEncoder</code>, throws an unexpected exception.</section>	https://developer.android.com/reference/java/nio/charset/CoderMalfunctionError.html
CoderResult	A										<section class="prog__container"><pre><code>public class CoderResult</code></pre>A description of the result state of a coder.</section>	https://developer.android.com/reference/java/nio/charset/CoderResult.html
CodingErrorAction	A										<section class="prog__container"><pre><code>public class CodingErrorAction</code></pre>A typesafe enumeration for coding-error actions.</section>	https://developer.android.com/reference/java/nio/charset/CodingErrorAction.html
CollapsibleActionView	D								*[[v7.view.CollapsibleActionView]], <section class="prog__container"><pre><code>public interface CollapsibleActionView</code></pre>When a <code>View</code> implements this interface it will receive callbacks when expanded or collapsed as an action view alongside the optional, app-specified callbacks to <code>MenuItemCompat.OnActionExpandListener</code>.</section>\n*[[android.view.CollapsibleActionView]], <section class="prog__container"><pre><code>public interface CollapsibleActionView</code></pre>When a <code>View</code> implements this interface it will receive callbacks when expanded or collapsed as an action view alongside the optional, app-specified callbacks to <code>MenuItem.OnActionExpandListener</code>.</section>			
CollapsingToolbarLayout	A										<section class="prog__container"><pre><code>public class CollapsingToolbarLayout</code></pre>CollapsingToolbarLayout is a wrapper for <code>Toolbar</code> which implements a collapsing app bar. It is designed to be used as a direct child of a <code>AppBarLayout</code>. CollapsingToolbarLayout contains the following features: <h4>Collapsing title</h4> A title which is larger when the layout is fully visible but collapses and becomes smaller as the layout is scrolled off screen. You can set the title to display via <code>setTitle(CharSequence)</code>. The title appearance can be tweaked via the <code>collapsedTextAppearance</code> and <code>expandedTextAppearance</code> attributes. <h4>Content scrim</h4> A full-bleed scrim which is show or hidden when the scroll position has hit a certain threshold. You can change this via <code>setContentScrim(Drawable)</code>. <h4>Status bar scrim</h4> A scrim which is show or hidden behind the status bar when the scroll position has hit a certain threshold. You can change this via <code>setStatusBarScrim(Drawable)</code>. This only works on <code>LOLLIPOP</code> devices when we set to fit system windows. <h4>Parallax scrolling children</h4> Child views can opt to be scrolled within this layout in a parallax fashion. See <code>COLLAPSE_MODE_PARALLAX</code> and <code>setParallaxMultiplier(float)</code>. <h4>Pinned position children</h4> Child views can opt to be pinned in space globally. This is useful when implementing a collapsing as it allows the <code>Toolbar</code> to be fixed in place even though this layout is moving. See <code>COLLAPSE_MODE_PIN</code>.</section>	https://developer.android.com/reference/android/support/design/widget/CollapsingToolbarLayout.html
CollapsingToolbarLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class CollapsingToolbarLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/CollapsingToolbarLayout.LayoutParams.html
CollationElementIterator	D								*[[icu.text.CollationElementIterator]], <section class="prog__container"><pre><code>public final class CollationElementIterator</code></pre><code>CollationElementIterator</code> is an iterator created by a RuleBasedCollator to walk through a string. The return result of each iteration is a 32-bit collation element (CE) that defines the ordering priority of the next character or sequence of characters in the source string.</section>\n*[[java.text.CollationElementIterator]], <section class="prog__container"><pre><code>public final class CollationElementIterator</code></pre>The <code>CollationElementIterator</code> class is used as an iterator to walk through each character of an international string. Use the iterator to return the ordering priority of the positioned character. The ordering priority of a character, which we refer to as a key, defines how a character is collated in the given collation object.</section>			
CollationKey	D								*[[icu.text.CollationKey]], <section class="prog__container"><pre><code>public final class CollationKey</code></pre>A <code>CollationKey</code> represents a <code>String</code> under the rules of a specific <code>Collator</code> object. Comparing two <code>CollationKey</code>s returns the relative order of the <code>String</code>s they represent.</section>\n*[[java.text.CollationKey]], <section class="prog__container"><pre><code>public abstract class CollationKey</code></pre>A <code>CollationKey</code> represents a <code>String</code> under the rules of a specific <code>Collator</code> object. Comparing two <code>CollationKey</code>s returns the relative order of the <code>String</code>s they represent. Using <code>CollationKey</code>s to compare <code>String</code>s is generally faster than using <code>Collator.compare</code>. Thus, when the <code>String</code>s must be compared multiple times, for example when sorting a list of <code>String</code>s. It's more efficient to use <code>CollationKey</code>s.</section>			
CollationKey.BoundMode	A										<section class="prog__container"><pre><code>public static final class CollationKey.BoundMode</code></pre>Options that used in the API CollationKey.getBound() for getting a CollationKey based on the bound mode requested.</section>	https://developer.android.com/reference/android/icu/text/CollationKey.BoundMode.html
Collator	D								*[[icu.text.Collator]], <section class="prog__container"><pre><code>public abstract class Collator</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>Collator</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.</section>\n*[[java.text.Collator]], <section class="prog__container"><pre><code>public abstract class Collator</code></pre>The <code>Collator</code> class performs locale-sensitive <code>String</code> comparison. You use this class to build searching and sorting routines for natural language text.</section>			
Collator.ReorderCodes	A										<section class="prog__container"><pre><code>public static interface Collator.ReorderCodes</code></pre>Reordering codes for non-script groups that can be reordered under collation.</section>	https://developer.android.com/reference/android/icu/text/Collator.ReorderCodes.html
Collection	A										<section class="prog__container"><pre><code>public interface Collection</code></pre>The root interface in the <i>collection hierarchy</i>. A collection represents a group of objects, known as its <i>elements</i>. Some collections allow duplicate elements and others do not. Some are ordered and others unordered. The JDK does not provide any <i>direct</i> implementations of this interface: it provides implementations of more specific subinterfaces like <tt>Set</tt> and <tt>List</tt>. This interface is typically used to pass collections around and manipulate them where maximum generality is desired.</section>	https://developer.android.com/reference/java/util/Collection.html
CollectionCertStoreParameters	A										<section class="prog__container"><pre><code>public class CollectionCertStoreParameters</code></pre>Parameters used as input for the Collection <code>CertStore</code> algorithm.</section>	https://developer.android.com/reference/java/security/cert/CollectionCertStoreParameters.html
Collections	A										<section class="prog__container"><pre><code>public class Collections</code></pre>This class consists exclusively of static methods that operate on or return collections. It contains polymorphic algorithms that operate on collections, "wrappers", which return a new collection backed by a specified collection, and a few other odds and ends.</section>	https://developer.android.com/reference/java/util/Collections.html
Collector	A										<section class="prog__container"><pre><code>public interface Collector</code></pre>A mutable reduction operation that accumulates input elements into a mutable result container, optionally transforming the accumulated result into a final representation after all input elements have been processed. Reduction operations can be performed either sequentially or in parallel.</section>	https://developer.android.com/reference/java/util/stream/Collector.html
Collector.Characteristics	A										<section class="prog__container"><pre><code>public static final enum Collector.Characteristics</code></pre>Characteristics indicating properties of a <code>Collector</code>, which can be used to optimize reduction implementations.</section>	https://developer.android.com/reference/java/util/stream/Collector.Characteristics.html
Collectors	A										<section class="prog__container"><pre><code>public final class Collectors</code></pre>Implementations of <code>Collector</code> that implement various useful reduction operations, such as accumulating elements into collections, summarizing elements according to various criteria, etc.</section>	https://developer.android.com/reference/java/util/stream/Collectors.html
Color	A										<section class="prog__container"><pre><code>public class Color</code></pre>The Color class defines methods for creating and converting color ints. Colors are represented as packed ints, made up of 4 bytes: alpha, red, green, blue. The values are unpremultiplied, meaning any transparency is stored solely in the alpha component, and not in the color components. The components are stored as follows (alpha &lt;&lt; 24) | (red &lt;&lt; 16) | (green &lt;&lt; 8) | blue. Each component ranges between 0..255 with 0 meaning no contribution for that component, and 255 meaning 100% contribution. Thus opaque-black would be 0xFF000000 (100% opaque but no contributions from red, green, or blue), and opaque-white would be 0xFFFFFFFF</section>	https://developer.android.com/reference/android/graphics/Color.html
ColorDrawable	A										<section class="prog__container"><pre><code>public class ColorDrawable</code></pre>A specialized Drawable that fills the Canvas with a specified color. Note that a ColorDrawable ignores the ColorFilter.</section>	https://developer.android.com/reference/android/graphics/drawable/ColorDrawable.html
ColorFilter	A										<section class="prog__container"><pre><code>public class ColorFilter</code></pre>A color filter can be used with a <code>Paint</code> to modify the color of each pixel drawn with that paint. This is an abstract class that should never be used directly.</section>	https://developer.android.com/reference/android/graphics/ColorFilter.html
ColorFilterCache	A										<section class="prog__container"><pre><code>public final class ColorFilterCache</code></pre>Cache of <code>ColorFilter</code>s for a given color at different alpha levels.</section>	https://developer.android.com/reference/android/support/v17/leanback/graphics/ColorFilterCache.html
ColorFilterDimmer	A										<section class="prog__container"><pre><code>public final class ColorFilterDimmer</code></pre>Helper class for applying a dim level to a View. The ColorFilterDimmer uses a ColorFilter in a Paint object to dim the view according to the currently active level.</section>	https://developer.android.com/reference/android/support/v17/leanback/graphics/ColorFilterDimmer.html
ColorInt	A										<section class="prog__container"><pre><code>public abstract @interface ColorInt</code></pre>Denotes that the annotated element represents a packed color int, <code>AARRGGBB</code>. If applied to an int array, every element in the array represents a color integer.</section>	https://developer.android.com/reference/android/support/annotation/ColorInt.html
ColorMatrix	A										<section class="prog__container"><pre><code>public class ColorMatrix</code></pre>4x5 matrix for transforming the color and alpha components of a Bitmap. The matrix can be passed as single array, and is treated as follows: <pre> [ a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t ]</pre></section>	https://developer.android.com/reference/android/graphics/ColorMatrix.html
ColorMatrixColorFilter	A										<section class="prog__container"><pre><code>public class ColorMatrixColorFilter</code></pre>A color filter that transforms colors through a 4x5 color matrix. This filter can be used to change the saturation of pixels, convert from YUV to RGB, etc.</section>	https://developer.android.com/reference/android/graphics/ColorMatrixColorFilter.html
ColorOverlayDimmer	A										<section class="prog__container"><pre><code>public final class ColorOverlayDimmer</code></pre>Helper class for assigning a dim color to Paint. It holds the alpha value for the current active level.</section>	https://developer.android.com/reference/android/support/v17/leanback/graphics/ColorOverlayDimmer.html
ColorRes	A										<section class="prog__container"><pre><code>public abstract @interface ColorRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be a color resource reference (e.g. <code>android.R.color.black</code>).</section>	https://developer.android.com/reference/android/support/annotation/ColorRes.html
ColorSpaceTransform	A										<section class="prog__container"><pre><code>public final class ColorSpaceTransform</code></pre>Immutable class for describing a 3x3 matrix of <code>Rational</code> values in row-major order.</section>	https://developer.android.com/reference/android/hardware/camera2/params/ColorSpaceTransform.html
ColorStateList	A										<section class="prog__container"><pre><code>public class ColorStateList</code></pre>Lets you map <code>View</code> state sets to colors.</section>	https://developer.android.com/reference/android/content/res/ColorStateList.html
ColorUtils	A										<section class="prog__container"><pre><code>public final class ColorUtils</code></pre>A set of color-related utility methods, building upon those available in <code>Color</code>.</section>	https://developer.android.com/reference/android/support/v4/graphics/ColorUtils.html
Comment	A										<section class="prog__container"><pre><code>public interface Comment</code></pre>This interface inherits from <code>CharacterData</code> and represents the content of a comment, i.e., all the characters between the starting ' <code>&lt;!--</code>' and ending '<code>--&gt;</code>'. Note that this is the definition of a comment in XML, and, in practice, HTML, although some HTML tools may implement the full SGML comment structure.</section>	https://developer.android.com/reference/org/w3c/dom/Comment.html
CommonDataSource	A										<section class="prog__container"><pre><code>public interface CommonDataSource</code></pre>Interface that defines the methods which are common between <code>DataSource</code>, <code>XADataSource</code> and <code>ConnectionPoolDataSource</code>.</section>	https://developer.android.com/reference/javax/sql/CommonDataSource.html
CompactDecimalFormat	A										<section class="prog__container"><pre><code>public class CompactDecimalFormat</code></pre>The CompactDecimalFormat produces abbreviated numbers, suitable for display in environments will limited real estate. For example, 'Hits: 1.2B' instead of 'Hits: 1,200,000,000'. The format will be appropriate for the given language, such as "1,2 Mrd." for German.</section>	https://developer.android.com/reference/android/icu/text/CompactDecimalFormat.html
CompactDecimalFormat.CompactStyle	A										<section class="prog__container"><pre><code>public static final enum CompactDecimalFormat.CompactStyle</code></pre>Style parameter for CompactDecimalFormat.</section>	https://developer.android.com/reference/android/icu/text/CompactDecimalFormat.CompactStyle.html
Comparable	A										<section class="prog__container"><pre><code>public interface Comparable</code></pre>This interface imposes a total ordering on the objects of each class that implements it. This ordering is referred to as the class's <i>natural ordering</i>, and the class's <tt>compareTo</tt> method is referred to as its <i>natural comparison method</i>.</section>	https://developer.android.com/reference/java/lang/Comparable.html
Comparator	A										<section class="prog__container"><pre><code>public interface Comparator</code></pre>A comparison function, which imposes a <i>total ordering</i> on some collection of objects. Comparators can be passed to a sort method (such as <code>Collections.sort</code> or <code>Arrays.sort</code>) to allow precise control over the sort order. Comparators can also be used to control the order of certain data structures (such as <code>sorted sets</code> or <code>sorted maps</code>), or to provide an ordering for collections of objects that don't have a <code>natural ordering</code>.</section>	https://developer.android.com/reference/java/util/Comparator.html
ComparisonFailure	D								*[[test.ComparisonFailure]], <section class="prog__container"><pre><code>public class ComparisonFailure</code></pre><p class="caution"><strong> This class was deprecated in API level 16.</strong><br/> use junit.framework.ComparisonFailure</section>\n*[[framework.ComparisonFailure]], <section class="prog__container"><pre><code>public class ComparisonFailure</code></pre>Thrown when an assert equals for Strings failed. Inspired by a patch from Alex Chaffee mailto:alex@purpletech.com</section>			
Compiler	A										<section class="prog__container"><pre><code>public final class Compiler</code></pre>Does nothing on Android.</section>	https://developer.android.com/reference/java/lang/Compiler.html
CompletableFuture	A										<section class="prog__container"><pre><code>public class CompletableFuture</code></pre>A <code>Future</code> that may be explicitly completed (setting its value and status), and may be used as a <code>CompletionStage</code>, supporting dependent functions and actions that trigger upon its completion.</section>	https://developer.android.com/reference/java/util/concurrent/CompletableFuture.html
CompletableFuture.AsynchronousCompletionTask	A										<section class="prog__container"><pre><code>public static interface CompletableFuture.AsynchronousCompletionTask</code></pre>A marker interface identifying asynchronous tasks produced by <code>async</code> methods. This may be useful for monitoring, debugging, and tracking asynchronous activities.</section>	https://developer.android.com/reference/java/util/concurrent/CompletableFuture.AsynchronousCompletionTask.html
CompletionException	A										<section class="prog__container"><pre><code>public class CompletionException</code></pre>Exception thrown when an error or other exception is encountered in the course of completing a result or task.</section>	https://developer.android.com/reference/java/util/concurrent/CompletionException.html
CompletionInfo	A										<section class="prog__container"><pre><code>public final class CompletionInfo</code></pre>Information about a single text completion that an editor has reported to an input method.</section>	https://developer.android.com/reference/android/view/inputmethod/CompletionInfo.html
CompletionService	A										<section class="prog__container"><pre><code>public interface CompletionService</code></pre>A service that decouples the production of new asynchronous tasks from the consumption of the results of completed tasks. Producers <code>submit</code> tasks for execution. Consumers <code>take</code> completed tasks and process their results in the order they complete. A <code>CompletionService</code> can for example be used to manage asynchronous I/O, in which tasks that perform reads are submitted in one part of a program or system, and then acted upon in a different part of the program when the reads complete, possibly in a different order than they were requested.</section>	https://developer.android.com/reference/java/util/concurrent/CompletionService.html
CompletionStage	A										<section class="prog__container"><pre><code>public interface CompletionStage</code></pre>A stage of a possibly asynchronous computation, that performs an action or computes a value when another CompletionStage completes. A stage completes upon termination of its computation, but this may in turn trigger other dependent stages. The functionality defined in this interface takes only a few basic forms, which expand out to a larger set of methods to capture a range of usage styles: <ul> <li>The computation performed by a stage may be expressed as a Function, Consumer, or Runnable (using methods with names including <em>apply</em>, <em>accept</em>, or <em>run</em>, respectively) depending on whether it requires arguments and/or produces results. For example: <pre> <code>stage.thenApply(x -&gt; square(x)) .thenAccept(x -&gt; System.out.print(x)) .thenRun(() -&gt; System.out.println());</code></pre> An additional form (<em>compose</em>) allows the construction of computation pipelines from functions returning completion stages.</section>	https://developer.android.com/reference/java/util/concurrent/CompletionStage.html
ComponentCallbacks	A										<section class="prog__container"><pre><code>public interface ComponentCallbacks</code></pre>The set of callback APIs that are common to all application components (<code>Activity</code>, <code>Service</code>, <code>ContentProvider</code>, and <code>Application</code>). <p class="note"><strong>Note:</strong> You should also implement the <code>ComponentCallbacks2</code> interface, which provides the <code>onTrimMemory(int)</code> callback to help your app manage its memory usage more effectively.</section>	https://developer.android.com/reference/android/content/ComponentCallbacks.html
ComponentCallbacks2	A										<section class="prog__container"><pre><code>public interface ComponentCallbacks2</code></pre>Extended <code>ComponentCallbacks</code> interface with a new callback for finer-grained memory management. This interface is available in all application components (<code>Activity</code>, <code>Service</code>, <code>ContentProvider</code>, and <code>Application</code>).</section>	https://developer.android.com/reference/android/content/ComponentCallbacks2.html
ComponentInfo	A										<section class="prog__container"><pre><code>public class ComponentInfo</code></pre>Base class containing information common to all application components (<code>ActivityInfo</code>, <code>ServiceInfo</code>). This class is not intended to be used by itself; it is simply here to share common definitions between all application components. As such, it does not itself implement Parcelable, but does provide convenience methods to assist in the implementation of Parcelable in subclasses.</section>	https://developer.android.com/reference/android/content/pm/ComponentInfo.html
ComponentName	A										<section class="prog__container"><pre><code>public final class ComponentName</code></pre>Identifier for a specific application component (<code>Activity</code>, <code>Service</code>, <code>BroadcastReceiver</code>, or <code>ContentProvider</code>) that is available. Two pieces of information, encapsulated here, are required to identify a component: the package (a String) it exists in, and the class (a String) name inside of that package.</section>	https://developer.android.com/reference/android/content/ComponentName.html
ComposePathEffect	A										<section class="prog__container"><pre><code>public class ComposePathEffect</code></pre></section>	https://developer.android.com/reference/android/graphics/ComposePathEffect.html
ComposeShader	A										<section class="prog__container"><pre><code>public class ComposeShader</code></pre>A subclass of shader that returns the composition of two other shaders, combined by an <code>Xfermode</code> subclass.</section>	https://developer.android.com/reference/android/graphics/ComposeShader.html
CompoundButton	A										<section class="prog__container"><pre><code>public abstract class CompoundButton</code></pre></section>	https://developer.android.com/reference/android/widget/CompoundButton.html
CompoundButton.OnCheckedChangeListener	A										<section class="prog__container"><pre><code>public static interface CompoundButton.OnCheckedChangeListener</code></pre>Interface definition for a callback to be invoked when the checked state of a compound button changed.</section>	https://developer.android.com/reference/android/widget/CompoundButton.OnCheckedChangeListener.html
CompoundButtonCompat	A										<section class="prog__container"><pre><code>public final class CompoundButtonCompat</code></pre>Helper for accessing <code>CompoundButton</code> methods introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/widget/CompoundButtonCompat.html
ConcurrentHashMap	A										<section class="prog__container"><pre><code>public class ConcurrentHashMap</code></pre>A hash table supporting full concurrency of retrievals and high expected concurrency for updates. This class obeys the same functional specification as <code>Hashtable</code>, and includes versions of methods corresponding to each method of <code>Hashtable</code>. However, even though all operations are thread-safe, retrieval operations do <em>not</em> entail locking, and there is <em>not</em> any support for locking the entire table in a way that prevents all access. This class is fully interoperable with <code>Hashtable</code> in programs that rely on its thread safety but not on its synchronization details.</section>	https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap.html
ConcurrentHashMap.KeySetView	A										<section class="prog__container"><pre><code>public static class ConcurrentHashMap.KeySetView</code></pre>A view of a ConcurrentHashMap as a <code>Set</code> of keys, in which additions may optionally be enabled by mapping to a common value. This class cannot be directly instantiated. See <code>keySet(V)</code>, <code>newKeySet()</code>, <code>newKeySet(int)</code>.</section>	https://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap.KeySetView.html
ConcurrentLinkedDeque	A										<section class="prog__container"><pre><code>public class ConcurrentLinkedDeque</code></pre>An unbounded concurrent deque</section>	https://developer.android.com/reference/java/util/concurrent/ConcurrentLinkedDeque.html
ConcurrentLinkedQueue	A										<section class="prog__container"><pre><code>public class ConcurrentLinkedQueue</code></pre>An unbounded thread-safe queue</section>	https://developer.android.com/reference/java/util/concurrent/ConcurrentLinkedQueue.html
ConcurrentMap	A										<section class="prog__container"><pre><code>public interface ConcurrentMap</code></pre>A <code>Map</code> providing thread safety and atomicity guarantees.</section>	https://developer.android.com/reference/java/util/concurrent/ConcurrentMap.html
ConcurrentModificationException	A										<section class="prog__container"><pre><code>public class ConcurrentModificationException</code></pre>This exception may be thrown by methods that have detected concurrent modification of an object when such modification is not permissible.</section>	https://developer.android.com/reference/java/util/ConcurrentModificationException.html
ConcurrentNavigableMap	A										<section class="prog__container"><pre><code>public interface ConcurrentNavigableMap</code></pre>A <code>ConcurrentMap</code> supporting <code>NavigableMap</code> operations, and recursively so for its navigable sub-maps.</section>	https://developer.android.com/reference/java/util/concurrent/ConcurrentNavigableMap.html
ConcurrentSkipListMap	A										<section class="prog__container"><pre><code>public class ConcurrentSkipListMap</code></pre>A scalable concurrent <code>ConcurrentNavigableMap</code> implementation. The map is sorted according to the natural ordering</section>	https://developer.android.com/reference/java/util/concurrent/ConcurrentSkipListMap.html
ConcurrentSkipListSet	A										<section class="prog__container"><pre><code>public class ConcurrentSkipListSet</code></pre>A scalable concurrent <code>NavigableSet</code> implementation based on a <code>ConcurrentSkipListMap</code>. The elements of the set are kept sorted according to their natural ordering</section>	https://developer.android.com/reference/java/util/concurrent/ConcurrentSkipListSet.html
Condition	D								*[[notification.Condition]], <section class="prog__container"><pre><code>public final class Condition</code></pre>The current condition of an <code>AutomaticZenRule</code>, provided by the <code>ConditionProviderService</code> that owns the rule. Used to tell the system to enter Do Not Disturb mode and request that the system exit Do Not Disturb mode.</section>\n*[[locks.Condition]], <section class="prog__container"><pre><code>public interface Condition</code></pre><code>Condition</code> factors out the <code>Object</code> monitor methods (<code>wait</code>, <code>notify</code> and <code>notifyAll</code>) into distinct objects to give the effect of having multiple wait-sets per object, by combining them with the use of arbitrary <code>Lock</code> implementations. Where a <code>Lock</code> replaces the use of <code>synchronized</code> methods and statements, a <code>Condition</code> replaces the use of the Object monitor methods.</section>			
ConditionProviderService	A										<section class="prog__container"><pre><code>public abstract class ConditionProviderService</code></pre>A service that provides conditions about boolean state.</section>	https://developer.android.com/reference/android/service/notification/ConditionProviderService.html
ConditionVariable	A										<section class="prog__container"><pre><code>public class ConditionVariable</code></pre>Class that implements the condition variable locking paradigm.</section>	https://developer.android.com/reference/android/os/ConditionVariable.html
Conference	A										<section class="prog__container"><pre><code>public abstract class Conference</code></pre>Represents a conference call which can contain any number of <code>Connection</code> objects.</section>	https://developer.android.com/reference/android/telecom/Conference.html
Conferenceable	A										<section class="prog__container"><pre><code>public abstract class Conferenceable</code></pre>Interface used to identify entities with which another entity can participate in a conference call with. The <code>ConnectionService</code> implementation will only recognize <code>Conferenceable</code>s which are <code>Connection</code>s or <code>Conference</code>s.</section>	https://developer.android.com/reference/android/telecom/Conferenceable.html
Config	A										<section class="prog__container"><pre><code>public final class Config</code></pre><p class="caution"><strong> This class was deprecated in API level 14.</strong><br/> This class is not useful, it just returns the same value for all constants, and has always done this. Do not use it.</section>	https://developer.android.com/reference/android/util/Config.html
Configuration	A										<section class="prog__container"><pre><code>public final class Configuration</code></pre>This class describes all device configuration information that can impact the resources the application retrieves. This includes both user-specified configuration options (locale list and scaling) as well as device configurations (such as input modes, screen size and screen orientation).</section>	https://developer.android.com/reference/android/content/res/Configuration.html
ConfigurationHelper	A										<section class="prog__container"><pre><code>public final class ConfigurationHelper</code></pre>Helper class which allows access to properties of <code>Configuration</code> in a backward compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/content/res/ConfigurationHelper.html
ConfigurationInfo	A										<section class="prog__container"><pre><code>public class ConfigurationInfo</code></pre>Information you can retrieve about hardware configuration preferences declared by an application. This corresponds to information collected from the AndroidManifest.xml's &lt;uses-configuration&gt; and &lt;uses-feature&gt; tags.</section>	https://developer.android.com/reference/android/content/pm/ConfigurationInfo.html
ConfigurationStats	A										<section class="prog__container"><pre><code>public final class ConfigurationStats</code></pre>Represents the usage statistics of a device <code>Configuration</code> for a specific time range.</section>	https://developer.android.com/reference/android/app/usage/ConfigurationStats.html
ConnectException	A										<section class="prog__container"><pre><code>public class ConnectException</code></pre>Signals that an error occurred while attempting to connect a socket to a remote address and port. Typically, the connection was refused remotely (e.g., no process is listening on the remote address/port).</section>	https://developer.android.com/reference/java/net/ConnectException.html
ConnectTimeoutException	A										<section class="prog__container"><pre><code>public class ConnectTimeoutException</code></pre><p class="caution"><strong> This class was deprecated in API level 22.</strong><br/> Please use <code>openConnection()</code> instead. Please visit this webpage for further details.</section>	https://developer.android.com/reference/org/apache/http/conn/ConnectTimeoutException.html
Connection	D								*[[telecom.Connection]], <section class="prog__container"><pre><code>public abstract class Connection</code></pre>Represents a phone call or connection to a remote endpoint that carries voice and/or video traffic.</section>\n*[[sql.Connection]], <section class="prog__container"><pre><code>public interface Connection</code></pre></section>			
Connection.VideoProvider	A										<section class="prog__container"><pre><code>public static abstract class Connection.VideoProvider</code></pre>Provides a means of controlling the video session associated with a <code>Connection</code>.</section>	https://developer.android.com/reference/android/telecom/Connection.VideoProvider.html
ConnectionEvent	A										<section class="prog__container"><pre><code>public class ConnectionEvent</code></pre></section>	https://developer.android.com/reference/javax/sql/ConnectionEvent.html
ConnectionEventListener	A										<section class="prog__container"><pre><code>public interface ConnectionEventListener</code></pre></section>	https://developer.android.com/reference/javax/sql/ConnectionEventListener.html
ConnectionPendingException	A										<section class="prog__container"><pre><code>public class ConnectionPendingException</code></pre>Unchecked exception thrown when an attempt is made to connect a <code>SocketChannel</code> for which a non-blocking connection operation is already in progress.</section>	https://developer.android.com/reference/java/nio/channels/ConnectionPendingException.html
ConnectionPoolDataSource	A										<section class="prog__container"><pre><code>public interface ConnectionPoolDataSource</code></pre>A factory for <code>PooledConnection</code> objects. An object that implements this interface will typically be registered with a naming service that is based on the Java<sup><font size="-2">TM</font></sup> Naming and Directory Interface (JNDI).</section>	https://developer.android.com/reference/javax/sql/ConnectionPoolDataSource.html
ConnectionRequest	A										<section class="prog__container"><pre><code>public final class ConnectionRequest</code></pre>Simple data container encapsulating a request to some entity to create a new <code>Connection</code>.</section>	https://developer.android.com/reference/android/telecom/ConnectionRequest.html
ConnectionService	A										<section class="prog__container"><pre><code>public abstract class ConnectionService</code></pre>An abstract service that should be implemented by any apps which can make phone calls (VoIP or otherwise) and want those calls to be integrated into the built-in phone app. Once implemented, the <code>ConnectionService</code> needs two additional steps before it will be integrated into the phone app:</section>	https://developer.android.com/reference/android/telecom/ConnectionService.html
ConnectivityManager	A										<section class="prog__container"><pre><code>public class ConnectivityManager</code></pre>Class that answers queries about the state of network connectivity. It also notifies applications when network connectivity changes. Get an instance of this class by calling <code>Context.getSystemService(Context.CONNECTIVITY_SERVICE)</code>.</section>	https://developer.android.com/reference/android/net/ConnectivityManager.html
ConnectivityManager.NetworkCallback	A										<section class="prog__container"><pre><code>public static class ConnectivityManager.NetworkCallback</code></pre>Base class for NetworkRequest callbacks. Used for notifications about network changes. Should be extended by applications wanting notifications.</section>	https://developer.android.com/reference/android/net/ConnectivityManager.NetworkCallback.html
ConnectivityManager.OnNetworkActiveListener	A										<section class="prog__container"><pre><code>public static interface ConnectivityManager.OnNetworkActiveListener</code></pre>Callback for use with <code>addDefaultNetworkActiveListener(ConnectivityManager.OnNetworkActiveListener)</code> to find out when the system default network has gone in to a high power state.</section>	https://developer.android.com/reference/android/net/ConnectivityManager.OnNetworkActiveListener.html
ConnectivityManagerCompat	A										<section class="prog__container"><pre><code>public final class ConnectivityManagerCompat</code></pre>Helper for accessing features in <code>ConnectivityManager</code> introduced after API level 16 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/net/ConnectivityManagerCompat.html
Console	A										<section class="prog__container"><pre><code>public final class Console</code></pre>Methods to access the character-based console device, if any, associated with the current Java virtual machine.</section>	https://developer.android.com/reference/java/io/Console.html
ConsoleHandler	A										<section class="prog__container"><pre><code>public class ConsoleHandler</code></pre>This <tt>Handler</tt> publishes log records to <tt>System.err</tt>. By default the <tt>SimpleFormatter</tt> is used to generate brief summaries.</section>	https://developer.android.com/reference/java/util/logging/ConsoleHandler.html
ConsoleMessage	A										<section class="prog__container"><pre><code>public class ConsoleMessage</code></pre>Public class representing a JavaScript console message from WebCore. This could be a issued by a call to one of the <code>console</code> logging functions (e.g. <code>console.log('...')</code>) or a JavaScript error on the page. To receive notifications of these messages, override the <code>onConsoleMessage(ConsoleMessage)</code> function.</section>	https://developer.android.com/reference/android/webkit/ConsoleMessage.html
ConsoleMessage.MessageLevel	A										<section class="prog__container"><pre><code>public static final enum ConsoleMessage.MessageLevel</code></pre></section>	https://developer.android.com/reference/android/webkit/ConsoleMessage.MessageLevel.html
Constructor	A										<section class="prog__container"><pre><code>public final class Constructor</code></pre><code>Constructor</code> provides information about, and access to, a single constructor for a class.</section>	https://developer.android.com/reference/java/lang/reflect/Constructor.html
Consumer	A										<section class="prog__container"><pre><code>public interface Consumer</code></pre>Represents an operation that accepts a single input argument and returns no result. Unlike most other functional interfaces, <code>Consumer</code> is expected to operate via side-effects.</section>	https://developer.android.com/reference/java/util/function/Consumer.html
ConsumerIrManager	A										<section class="prog__container"><pre><code>public final class ConsumerIrManager</code></pre>Class that operates consumer infrared on the device.</section>	https://developer.android.com/reference/android/hardware/ConsumerIrManager.html
ConsumerIrManager.CarrierFrequencyRange	A										<section class="prog__container"><pre><code>public final class ConsumerIrManager.CarrierFrequencyRange</code></pre>Represents a range of carrier frequencies (inclusive) on which the infrared transmitter can transmit</section>	https://developer.android.com/reference/android/hardware/ConsumerIrManager.CarrierFrequencyRange.html
Contacts	A										<section class="prog__container"><pre><code>public class Contacts</code></pre><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> The APIs have been superseded by <code>ContactsContract</code>. The newer APIs allow access multiple accounts and support aggregation of similar contacts. These APIs continue to work but will only return data for the first Google account created, which matches the original behavior.</section>	https://developer.android.com/reference/android/provider/Contacts.html
Contacts.ContactMethods	A										<section class="prog__container"><pre><code>public static final class Contacts.ContactMethods</code></pre><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.ContactMethods.html
Contacts.ContactMethodsColumns	A										<section class="prog__container"><pre><code>public static interface Contacts.ContactMethodsColumns</code></pre><p class="caution"><strong> This interface was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.ContactMethodsColumns.html
Contacts.Extensions	A										<section class="prog__container"><pre><code>public static final class Contacts.Extensions</code></pre><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.Extensions.html
Contacts.ExtensionsColumns	A										<section class="prog__container"><pre><code>public static interface Contacts.ExtensionsColumns</code></pre><p class="caution"><strong> This interface was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.ExtensionsColumns.html
Contacts.GroupMembership	A										<section class="prog__container"><pre><code>public static final class Contacts.GroupMembership</code></pre><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.GroupMembership.html
Contacts.Groups	A										<section class="prog__container"><pre><code>public static final class Contacts.Groups</code></pre><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.Groups.html
Contacts.GroupsColumns	A										<section class="prog__container"><pre><code>public static interface Contacts.GroupsColumns</code></pre><p class="caution"><strong> This interface was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.GroupsColumns.html
Contacts.Intents	A										<section class="prog__container"><pre><code>public static final class Contacts.Intents</code></pre><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.Intents.html
Contacts.Intents.Insert	A										<section class="prog__container"><pre><code>public static final class Contacts.Intents.Insert</code></pre><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.Intents.Insert.html
Contacts.Intents.UI	A										<section class="prog__container"><pre><code>public static final class Contacts.Intents.UI</code></pre><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> Do not use. This is not supported.</section>	https://developer.android.com/reference/android/provider/Contacts.Intents.UI.html
Contacts.OrganizationColumns	A										<section class="prog__container"><pre><code>public static interface Contacts.OrganizationColumns</code></pre><p class="caution"><strong> This interface was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.OrganizationColumns.html
Contacts.Organizations	A										<section class="prog__container"><pre><code>public static final class Contacts.Organizations</code></pre><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.Organizations.html
Contacts.People	A										<section class="prog__container"><pre><code>public static final class Contacts.People</code></pre><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.People.html
Contacts.People.ContactMethods	A										<section class="prog__container"><pre><code>public static final class Contacts.People.ContactMethods</code></pre><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.People.ContactMethods.html
Contacts.People.Extensions	A										<section class="prog__container"><pre><code>public static class Contacts.People.Extensions</code></pre><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.People.Extensions.html
Contacts.People.Phones	A										<section class="prog__container"><pre><code>public static final class Contacts.People.Phones</code></pre><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.People.Phones.html
Contacts.PeopleColumns	A										<section class="prog__container"><pre><code>public static interface Contacts.PeopleColumns</code></pre><p class="caution"><strong> This interface was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.PeopleColumns.html
Contacts.Phones	A										<section class="prog__container"><pre><code>public static final class Contacts.Phones</code></pre><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.Phones.html
Contacts.PhonesColumns	A										<section class="prog__container"><pre><code>public static interface Contacts.PhonesColumns</code></pre><p class="caution"><strong> This interface was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.PhonesColumns.html
Contacts.Photos	A										<section class="prog__container"><pre><code>public static final class Contacts.Photos</code></pre><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.Photos.html
Contacts.PhotosColumns	A										<section class="prog__container"><pre><code>public static interface Contacts.PhotosColumns</code></pre><p class="caution"><strong> This interface was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.PhotosColumns.html
Contacts.PresenceColumns	A										<section class="prog__container"><pre><code>public static interface Contacts.PresenceColumns</code></pre><p class="caution"><strong> This interface was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.PresenceColumns.html
Contacts.Settings	A										<section class="prog__container"><pre><code>public static final class Contacts.Settings</code></pre><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.Settings.html
Contacts.SettingsColumns	A										<section class="prog__container"><pre><code>public static interface Contacts.SettingsColumns</code></pre><p class="caution"><strong> This interface was deprecated in API level 5.</strong><br/> see <code>ContactsContract</code></section>	https://developer.android.com/reference/android/provider/Contacts.SettingsColumns.html
ContactsContract	A										<section class="prog__container"><pre><code>public final class ContactsContract</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.html
ContactsContract.AggregationExceptions	A										<section class="prog__container"><pre><code>public static final class ContactsContract.AggregationExceptions</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.AggregationExceptions.html
ContactsContract.BaseSyncColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.BaseSyncColumns</code></pre>Generic columns for use by sync adapters. The specific functions of these columns are private to the sync adapter. Other clients of the API should not attempt to either read or write this column.</section>	https://developer.android.com/reference/android/provider/ContactsContract.BaseSyncColumns.html
ContactsContract.CommonDataKinds	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds</code></pre>Container for definitions of common data types stored in the <code>ContactsContract.Data</code> table.</section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.html
ContactsContract.CommonDataKinds.BaseTypes	A										<section class="prog__container"><pre><code>public static interface ContactsContract.CommonDataKinds.BaseTypes</code></pre>The base types that all "Typed" data kinds support.</section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.BaseTypes.html
ContactsContract.CommonDataKinds.Callable	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Callable</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Callable.html
ContactsContract.CommonDataKinds.CommonColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.CommonDataKinds.CommonColumns</code></pre>Columns common across the specific types.</section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.CommonColumns.html
ContactsContract.CommonDataKinds.Contactables	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Contactables</code></pre>A special class of data items, used to refer to types of data that can be used to attempt to start communicating with a person (<code>ContactsContract.CommonDataKinds.Phone</code> and <code>ContactsContract.CommonDataKinds.Email</code>). Note that this is NOT a separate data kind. This URI allows the ContactsProvider to return a unified result for data items that users can use to initiate communications with another contact. <code>ContactsContract.CommonDataKinds.Phone</code> and <code>ContactsContract.CommonDataKinds.Email</code> are the current data types in this category.</section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Contactables.html
ContactsContract.CommonDataKinds.Email	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Email</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Email.html
ContactsContract.CommonDataKinds.Event	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Event</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Event.html
ContactsContract.CommonDataKinds.GroupMembership	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.GroupMembership</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.GroupMembership.html
ContactsContract.CommonDataKinds.Identity	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Identity</code></pre>A data kind representing an Identity related to the contact.</section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Identity.html
ContactsContract.CommonDataKinds.Im	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Im</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Im.html
ContactsContract.CommonDataKinds.Nickname	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Nickname</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Nickname.html
ContactsContract.CommonDataKinds.Note	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Note</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Note.html
ContactsContract.CommonDataKinds.Organization	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Organization</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Organization.html
ContactsContract.CommonDataKinds.Phone	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Phone</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Phone.html
ContactsContract.CommonDataKinds.Photo	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Photo</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Photo.html
ContactsContract.CommonDataKinds.Relation	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Relation</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Relation.html
ContactsContract.CommonDataKinds.SipAddress	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.SipAddress</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.SipAddress.html
ContactsContract.CommonDataKinds.StructuredName	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.StructuredName</code></pre>A data kind representing the contact's proper name. You can use all columns defined for <code>ContactsContract.Data</code> as well as the following aliases. <h2>Column aliases</h2> <table class="jd-sumtable"> <tr> <th>Type</th><th>Alias</th><th colspan="2">Data column</th> </tr> <tr> <td>String</td> <td><code>DISPLAY_NAME</code></td> <td><code>DATA1</code></td> <td></td> </tr> <tr> <td>String</td> <td><code>GIVEN_NAME</code></td> <td><code>DATA2</code></td> <td></td> </tr> <tr> <td>String</td> <td><code>FAMILY_NAME</code></td> <td><code>DATA3</code></td> <td></td> </tr> <tr> <td>String</td> <td><code>PREFIX</code></td> <td><code>DATA4</code></td> <td>Common prefixes in English names are "Mr", "Ms", "Dr" etc.</td> </tr> <tr> <td>String</td> <td><code>MIDDLE_NAME</code></td> <td><code>DATA5</code></td> <td></td> </tr> <tr> <td>String</td> <td><code>SUFFIX</code></td> <td><code>DATA6</code></td> <td>Common suffixes in English names are "Sr", "Jr", "III" etc.</td> </tr> <tr> <td>String</td> <td><code>PHONETIC_GIVEN_NAME</code></td> <td><code>DATA7</code></td> <td>Used for phonetic spelling of the name, e.g. Pinyin, Katakana, Hiragana</td> </tr> <tr> <td>String</td> <td><code>PHONETIC_MIDDLE_NAME</code></td> <td><code>DATA8</code></td> <td></td> </tr> <tr> <td>String</td> <td><code>PHONETIC_FAMILY_NAME</code></td> <td><code>DATA9</code></td> <td></td> </tr> </table></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.StructuredName.html
ContactsContract.CommonDataKinds.StructuredPostal	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.StructuredPostal</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.StructuredPostal.html
ContactsContract.CommonDataKinds.Website	A										<section class="prog__container"><pre><code>public static final class ContactsContract.CommonDataKinds.Website</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.CommonDataKinds.Website.html
ContactsContract.ContactNameColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.ContactNameColumns</code></pre>Contact name and contact name metadata columns in the RawContacts table.</section>	https://developer.android.com/reference/android/provider/ContactsContract.ContactNameColumns.html
ContactsContract.ContactOptionsColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.ContactOptionsColumns</code></pre>Columns of <code>ContactsContract.Contacts</code> that track the user's preferences for, or interactions with, the contact.</section>	https://developer.android.com/reference/android/provider/ContactsContract.ContactOptionsColumns.html
ContactsContract.ContactStatusColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.ContactStatusColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.ContactStatusColumns.html
ContactsContract.Contacts	A										<section class="prog__container"><pre><code>public static class ContactsContract.Contacts</code></pre>Constants for the contacts table, which contains a record per aggregate of raw contacts representing the same person. <h3>Operations</h3> <dl> <dt><b>Insert</b></dt> <dd>A Contact cannot be created explicitly. When a raw contact is inserted, the provider will first try to find a Contact representing the same person. If one is found, the raw contact's <code>CONTACT_ID</code> column gets the _ID of the aggregate Contact. If no match is found, the provider automatically inserts a new Contact and puts its _ID into the <code>CONTACT_ID</code> column of the newly inserted raw contact.</dd> <dt><b>Update</b></dt> <dd>Only certain columns of Contact are modifiable: <code>TIMES_CONTACTED</code>, <code>LAST_TIME_CONTACTED</code>, <code>STARRED</code>, <code>CUSTOM_RINGTONE</code>, <code>SEND_TO_VOICEMAIL</code>. Changing any of these columns on the Contact also changes them on all constituent raw contacts.</dd> <dt><b>Delete</b></dt> <dd>Be careful with deleting Contacts! Deleting an aggregate contact deletes all constituent raw contacts. The corresponding sync adapters will notice the deletions of their respective raw contacts and remove them from their back end storage.</dd> <dt><b>Query</b></dt> <dd> <ul> <li>If you need to read an individual contact, consider using <code>CONTENT_LOOKUP_URI</code> instead of <code>CONTENT_URI</code>.</li> <li>If you need to look up a contact by the phone number, use <code>PhoneLookup.CONTENT_FILTER_URI</code>, which is optimized for this purpose.</li> <li>If you need to look up a contact by partial name, e.g. to produce filter-as-you-type suggestions, use the <code>CONTENT_FILTER_URI</code> URI. <li>If you need to look up a contact by some data element like email address, nickname, etc, use a query against the <code>ContactsContract.Data</code> table. The result will contain contact ID, name etc. </li></li></ul> </dd> </dl> <h2>Columns</h2> <table class="jd-sumtable"> <tr> <th colspan="4">Contacts</th> </tr> <tr> <td>long</td> <td><code>_ID</code></td> <td>read-only</td> <td>Row ID. Consider using <code>LOOKUP_KEY</code> instead.</td> </tr> <tr> <td>String</td> <td><code>LOOKUP_KEY</code></td> <td>read-only</td> <td>An opaque value that contains hints on how to find the contact if its row id changed as a result of a sync or aggregation.</td> </tr> <tr> <td>long</td> <td>NAME_RAW_CONTACT_ID</td> <td>read-only</td> <td>The ID of the raw contact that contributes the display name to the aggregate contact. During aggregation one of the constituent raw contacts is chosen using a heuristic: a longer name or a name with more diacritic marks or more upper case characters is chosen.</td> </tr> <tr> <td>String</td> <td>DISPLAY_NAME_PRIMARY</td> <td>read-only</td> <td>The display name for the contact. It is the display name contributed by the raw contact referred to by the NAME_RAW_CONTACT_ID column.</td> </tr> <tr> <td>long</td> <td><code>PHOTO_ID</code></td> <td>read-only</td> <td>Reference to the row in the <code>ContactsContract.Data</code> table holding the photo. That row has the mime type <code>CONTENT_ITEM_TYPE</code>. The value of this field is computed automatically based on the <code>IS_SUPER_PRIMARY</code> field of the data rows of that mime type.</td> </tr> <tr> <td>long</td> <td><code>PHOTO_URI</code></td> <td>read-only</td> <td>A URI that can be used to retrieve the contact's full-size photo. This column is the preferred method of retrieving the contact photo.</td> </tr> <tr> <td>long</td> <td><code>PHOTO_THUMBNAIL_URI</code></td> <td>read-only</td> <td>A URI that can be used to retrieve the thumbnail of contact's photo. This column is the preferred method of retrieving the contact photo.</td> </tr> <tr> <td>int</td> <td><code>IN_VISIBLE_GROUP</code></td> <td>read-only</td> <td>An indicator of whether this contact is supposed to be visible in the UI. "1" if the contact has at least one raw contact that belongs to a visible group; "0" otherwise.</td> </tr> <tr> <td>int</td> <td><code>HAS_PHONE_NUMBER</code></td> <td>read-only</td> <td>An indicator of whether this contact has at least one phone number. "1" if there is at least one phone number, "0" otherwise.</td> </tr> <tr> <td>int</td> <td><code>TIMES_CONTACTED</code></td> <td>read/write</td> <td>The number of times the contact has been contacted. See <code>markAsContacted(ContentResolver, long)</code>. When raw contacts are aggregated, this field is computed automatically as the maximum number of times contacted among all constituent raw contacts. Setting this field automatically changes the corresponding field on all constituent raw contacts.</td> </tr> <tr> <td>long</td> <td><code>LAST_TIME_CONTACTED</code></td> <td>read/write</td> <td>The timestamp of the last time the contact was contacted. See <code>markAsContacted(ContentResolver, long)</code>. Setting this field also automatically increments <code>TIMES_CONTACTED</code>. When raw contacts are aggregated, this field is computed automatically as the latest time contacted of all constituent raw contacts. Setting this field automatically changes the corresponding field on all constituent raw contacts.</td> </tr> <tr> <td>int</td> <td><code>STARRED</code></td> <td>read/write</td> <td>An indicator for favorite contacts: '1' if favorite, '0' otherwise. When raw contacts are aggregated, this field is automatically computed: if any constituent raw contacts are starred, then this field is set to '1'. Setting this field automatically changes the corresponding field on all constituent raw contacts.</td> </tr> <tr> <td>String</td> <td><code>CUSTOM_RINGTONE</code></td> <td>read/write</td> <td>A custom ringtone associated with a contact. Typically this is the URI returned by an activity launched with the <code>ACTION_RINGTONE_PICKER</code> intent.</td> </tr> <tr> <td>int</td> <td><code>SEND_TO_VOICEMAIL</code></td> <td>read/write</td> <td>An indicator of whether calls from this contact should be forwarded directly to voice mail ('1') or not ('0'). When raw contacts are aggregated, this field is automatically computed: if <i>all</i> constituent raw contacts have SEND_TO_VOICEMAIL=1, then this field is set to '1'. Setting this field automatically changes the corresponding field on all constituent raw contacts.</td> </tr> <tr> <td>int</td> <td><code>CONTACT_PRESENCE</code></td> <td>read-only</td> <td>Contact IM presence status. See <code>ContactsContract.StatusUpdates</code> for individual status definitions. Automatically computed as the highest presence of all constituent raw contacts. The provider may choose not to store this value in persistent storage. The expectation is that presence status will be updated on a regular basis.</td> </tr> <tr> <td>String</td> <td><code>CONTACT_STATUS</code></td> <td>read-only</td> <td>Contact's latest status update. Automatically computed as the latest of all constituent raw contacts' status updates.</td> </tr> <tr> <td>long</td> <td><code>CONTACT_STATUS_TIMESTAMP</code></td> <td>read-only</td> <td>The absolute time in milliseconds when the latest status was inserted/updated.</td> </tr> <tr> <td>String</td> <td><code>CONTACT_STATUS_RES_PACKAGE</code></td> <td>read-only</td> <td> The package containing resources for this status: label and icon.</td> </tr> <tr> <td>long</td> <td><code>CONTACT_STATUS_LABEL</code></td> <td>read-only</td> <td>The resource ID of the label describing the source of contact status, e.g. "Google Talk". This resource is scoped by the <code>CONTACT_STATUS_RES_PACKAGE</code>.</td> </tr> <tr> <td>long</td> <td><code>CONTACT_STATUS_ICON</code></td> <td>read-only</td> <td>The resource ID of the icon for the source of contact status. This resource is scoped by the <code>CONTACT_STATUS_RES_PACKAGE</code>.</td> </tr> </table></section>	https://developer.android.com/reference/android/provider/ContactsContract.Contacts.html
ContactsContract.Contacts.AggregationSuggestions	A										<section class="prog__container"><pre><code>public static final class ContactsContract.Contacts.AggregationSuggestions</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.Contacts.AggregationSuggestions.html
ContactsContract.Contacts.AggregationSuggestions.Builder	A										<section class="prog__container"><pre><code>public static final class ContactsContract.Contacts.AggregationSuggestions.Builder</code></pre>A convenience builder for aggregation suggestion content URIs.</section>	https://developer.android.com/reference/android/provider/ContactsContract.Contacts.AggregationSuggestions.Builder.html
ContactsContract.Contacts.Data	A										<section class="prog__container"><pre><code>public static final class ContactsContract.Contacts.Data</code></pre>A sub-directory of a single contact that contains all of the constituent raw contact <code>ContactsContract.Data</code> rows. This directory can be used either with a <code>CONTENT_URI</code> or <code>CONTENT_LOOKUP_URI</code>.</section>	https://developer.android.com/reference/android/provider/ContactsContract.Contacts.Data.html
ContactsContract.Contacts.Entity	A										<section class="prog__container"><pre><code>public static final class ContactsContract.Contacts.Entity</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.Contacts.Entity.html
ContactsContract.Contacts.Photo	A										<section class="prog__container"><pre><code>public static final class ContactsContract.Contacts.Photo</code></pre>A <i>read-only</i> sub-directory of a single contact that contains the contact's primary photo. The photo may be stored in up to two ways - the default "photo" is a thumbnail-sized image stored directly in the data row, while the "display photo", if present, is a larger version stored as a file.</section>	https://developer.android.com/reference/android/provider/ContactsContract.Contacts.Photo.html
ContactsContract.ContactsColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.ContactsColumns</code></pre>Columns of <code>ContactsContract.Contacts</code> that refer to intrinsic properties of the contact, as opposed to the user-specified options found in <code>ContactsContract.ContactOptionsColumns</code>.</section>	https://developer.android.com/reference/android/provider/ContactsContract.ContactsColumns.html
ContactsContract.Data	A										<section class="prog__container"><pre><code>public static final class ContactsContract.Data</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.Data.html
ContactsContract.DataColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.DataColumns</code></pre>Columns in the Data table.</section>	https://developer.android.com/reference/android/provider/ContactsContract.DataColumns.html
ContactsContract.DataColumnsWithJoins	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.DataColumnsWithJoins</code></pre>Combines all columns returned by <code>ContactsContract.Data</code> table queries.</section>	https://developer.android.com/reference/android/provider/ContactsContract.DataColumnsWithJoins.html
ContactsContract.DataUsageFeedback	A										<section class="prog__container"><pre><code>public static final class ContactsContract.DataUsageFeedback</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.DataUsageFeedback.html
ContactsContract.DataUsageStatColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.DataUsageStatColumns</code></pre>Columns in the Data_Usage_Stat table</section>	https://developer.android.com/reference/android/provider/ContactsContract.DataUsageStatColumns.html
ContactsContract.DeletedContacts	A										<section class="prog__container"><pre><code>public static final class ContactsContract.DeletedContacts</code></pre>Constants for the deleted contact table. This table holds a log of deleted contacts.</section>	https://developer.android.com/reference/android/provider/ContactsContract.DeletedContacts.html
ContactsContract.DeletedContactsColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.DeletedContactsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.DeletedContactsColumns.html
ContactsContract.Directory	A										<section class="prog__container"><pre><code>public static final class ContactsContract.Directory</code></pre>A Directory represents a contacts corpus, e.g. Local contacts, Google Apps Global Address List or Corporate Global Address List.</section>	https://developer.android.com/reference/android/provider/ContactsContract.Directory.html
ContactsContract.DisplayNameSources	A										<section class="prog__container"><pre><code>public static interface ContactsContract.DisplayNameSources</code></pre>Types of data used to produce the display name for a contact. In the order of increasing priority: <code>EMAIL</code>, <code>PHONE</code>, <code>ORGANIZATION</code>, <code>NICKNAME</code>, <code>STRUCTURED_PHONETIC_NAME</code>, <code>STRUCTURED_NAME</code>.</section>	https://developer.android.com/reference/android/provider/ContactsContract.DisplayNameSources.html
ContactsContract.DisplayPhoto	A										<section class="prog__container"><pre><code>public static final class ContactsContract.DisplayPhoto</code></pre>Helper class for accessing full-size photos by photo file ID.</section>	https://developer.android.com/reference/android/provider/ContactsContract.DisplayPhoto.html
ContactsContract.FullNameStyle	A										<section class="prog__container"><pre><code>public static interface ContactsContract.FullNameStyle</code></pre>Constants for various styles of combining given name, family name etc into a full name. For example, the western tradition follows the pattern 'given name' 'middle name' 'family name' with the alternative pattern being 'family name', 'given name' 'middle name'. The CJK tradition is 'family name' 'middle name' 'given name', with Japanese favoring a space between the names and Chinese omitting the space.</section>	https://developer.android.com/reference/android/provider/ContactsContract.FullNameStyle.html
ContactsContract.Groups	A										<section class="prog__container"><pre><code>public static final class ContactsContract.Groups</code></pre>Constants for the groups table. Only per-account groups are supported. <h2>Columns</h2> <table class="jd-sumtable"> <tr> <th colspan="4">Groups</th> </tr> <tr> <td>long</td> <td><code>_ID</code></td> <td>read-only</td> <td>Row ID. Sync adapter should try to preserve row IDs during updates. In other words, it would be a really bad idea to delete and reinsert a group. A sync adapter should always do an update instead.</td> </tr> # <tr> <td>String</td> <td><code>DATA_SET</code></td> <td>read/write-once</td> <td></section>	https://developer.android.com/reference/android/provider/ContactsContract.Groups.html
ContactsContract.GroupsColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.GroupsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.GroupsColumns.html
ContactsContract.Intents	A										<section class="prog__container"><pre><code>public static final class ContactsContract.Intents</code></pre>Contains helper classes used to create or manage <code>Intents</code> that involve contacts.</section>	https://developer.android.com/reference/android/provider/ContactsContract.Intents.html
ContactsContract.Intents.Insert	A										<section class="prog__container"><pre><code>public static final class ContactsContract.Intents.Insert</code></pre>Convenience class that contains string constants used to create contact <code>Intents</code>.</section>	https://developer.android.com/reference/android/provider/ContactsContract.Intents.Insert.html
ContactsContract.PhoneLookup	A										<section class="prog__container"><pre><code>public static final class ContactsContract.PhoneLookup</code></pre>A table that represents the result of looking up a phone number, for example for caller ID. To perform a lookup you must append the number you want to find to <code>CONTENT_FILTER_URI</code>. This query is highly optimized. <pre> Uri uri = Uri.withAppendedPath(PhoneLookup.CONTENT_FILTER_URI, Uri.encode(phoneNumber)); resolver.query(uri, new String[]{PhoneLookup.DISPLAY_NAME,... </pre> <h3>Columns</h3> <table class="jd-sumtable"> <tr> <th colspan="4">PhoneLookup</th> </tr> <tr> <td>String</td> <td><code>NUMBER</code></td> <td>read-only</td> <td>Phone number.</td> </tr> <tr> <td>String</td> <td><code>TYPE</code></td> <td>read-only</td> <td>Phone number type. See <code>ContactsContract.CommonDataKinds.Phone</code>.</td> </tr> <tr> <td>String</td> <td><code>LABEL</code></td> <td>read-only</td> <td>Custom label for the phone number. See <code>ContactsContract.CommonDataKinds.Phone</code>.</td> </tr> </table></section>	https://developer.android.com/reference/android/provider/ContactsContract.PhoneLookup.html
ContactsContract.PhoneLookupColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.PhoneLookupColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.PhoneLookupColumns.html
ContactsContract.PhoneticNameStyle	A										<section class="prog__container"><pre><code>public static interface ContactsContract.PhoneticNameStyle</code></pre>Constants for various styles of capturing the pronunciation of a person's name.</section>	https://developer.android.com/reference/android/provider/ContactsContract.PhoneticNameStyle.html
ContactsContract.PinnedPositions	A										<section class="prog__container"><pre><code>public static final class ContactsContract.PinnedPositions</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.PinnedPositions.html
ContactsContract.Presence	A										<section class="prog__container"><pre><code>public static final class ContactsContract.Presence</code></pre><p class="caution"><strong> This class was deprecated in API level 5.</strong><br/> This old name was never meant to be made public. Do not use.</section>	https://developer.android.com/reference/android/provider/ContactsContract.Presence.html
ContactsContract.PresenceColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.PresenceColumns</code></pre>Additional data mixed in with <code>ContactsContract.StatusColumns</code> to link back to specific <code>_ID</code> entries.</section>	https://developer.android.com/reference/android/provider/ContactsContract.PresenceColumns.html
ContactsContract.Profile	A										<section class="prog__container"><pre><code>public static final class ContactsContract.Profile</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.Profile.html
ContactsContract.ProfileSyncState	A										<section class="prog__container"><pre><code>public static final class ContactsContract.ProfileSyncState</code></pre>A table provided for sync adapters to use for storing private sync state data for the user's personal profile.</section>	https://developer.android.com/reference/android/provider/ContactsContract.ProfileSyncState.html
ContactsContract.ProviderStatus	A										<section class="prog__container"><pre><code>public static final class ContactsContract.ProviderStatus</code></pre>API for inquiring about the general status of the provider.</section>	https://developer.android.com/reference/android/provider/ContactsContract.ProviderStatus.html
ContactsContract.QuickContact	A										<section class="prog__container"><pre><code>public static final class ContactsContract.QuickContact</code></pre>Helper methods to display QuickContact dialogs that display all the information belonging to a specific <code>Contacts</code> entry.</section>	https://developer.android.com/reference/android/provider/ContactsContract.QuickContact.html
ContactsContract.RawContacts	A										<section class="prog__container"><pre><code>public static final class ContactsContract.RawContacts</code></pre>Constants for the raw contacts table, which contains one row of contact information for each person in each synced account. Sync adapters and contact management apps are the primary consumers of this API. <h3>Aggregation</h3></section>	https://developer.android.com/reference/android/provider/ContactsContract.RawContacts.html
ContactsContract.RawContacts.Data	A										<section class="prog__container"><pre><code>public static final class ContactsContract.RawContacts.Data</code></pre>A sub-directory of a single raw contact that contains all of its <code>ContactsContract.Data</code> rows. To access this directory append <code>CONTENT_DIRECTORY</code> to the raw contact URI.</section>	https://developer.android.com/reference/android/provider/ContactsContract.RawContacts.Data.html
ContactsContract.RawContacts.DisplayPhoto	A										<section class="prog__container"><pre><code>public static final class ContactsContract.RawContacts.DisplayPhoto</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.RawContacts.DisplayPhoto.html
ContactsContract.RawContacts.Entity	A										<section class="prog__container"><pre><code>public static final class ContactsContract.RawContacts.Entity</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.RawContacts.Entity.html
ContactsContract.RawContactsColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.RawContactsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.RawContactsColumns.html
ContactsContract.RawContactsEntity	A										<section class="prog__container"><pre><code>public static final class ContactsContract.RawContactsEntity</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.RawContactsEntity.html
ContactsContract.SearchSnippets	A										<section class="prog__container"><pre><code>public static class ContactsContract.SearchSnippets</code></pre>Additional column returned by <code>Contacts.CONTENT_FILTER_URI</code> explaining why the filter matched the contact. This column will contain extracts from the contact's constituent <code>Data</code> items, formatted in a way that indicates the section of the snippet that matched the filter.</section>	https://developer.android.com/reference/android/provider/ContactsContract.SearchSnippets.html
ContactsContract.Settings	A										<section class="prog__container"><pre><code>public static final class ContactsContract.Settings</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.Settings.html
ContactsContract.SettingsColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.SettingsColumns</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.SettingsColumns.html
ContactsContract.StatusColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.StatusColumns</code></pre>Social status update columns.</section>	https://developer.android.com/reference/android/provider/ContactsContract.StatusColumns.html
ContactsContract.StatusUpdates	A										<section class="prog__container"><pre><code>public static class ContactsContract.StatusUpdates</code></pre></section>	https://developer.android.com/reference/android/provider/ContactsContract.StatusUpdates.html
ContactsContract.SyncColumns	A										<section class="prog__container"><pre><code>protected static interface ContactsContract.SyncColumns</code></pre>Columns that appear when each row of a table belongs to a specific account, including sync information that an account may need.</section>	https://developer.android.com/reference/android/provider/ContactsContract.SyncColumns.html
ContactsContract.SyncState	A										<section class="prog__container"><pre><code>public static final class ContactsContract.SyncState</code></pre>A table provided for sync adapters to use for storing private sync state data for contacts.</section>	https://developer.android.com/reference/android/provider/ContactsContract.SyncState.html
ContentHandler	D								*[[net.ContentHandler]], <section class="prog__container"><pre><code>public abstract class ContentHandler</code></pre>The abstract class <code>ContentHandler</code> is the superclass of all classes that read an <code>Object</code> from a <code>URLConnection</code>.</section>\n*[[sax.ContentHandler]], <section class="prog__container"><pre><code>public interface ContentHandler</code></pre>Receive notification of the logical content of a document. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>			
ContentHandlerFactory	A										<section class="prog__container"><pre><code>public interface ContentHandlerFactory</code></pre>This interface defines a factory for content handlers. An implementation of this interface should map a MIME type into an instance of <code>ContentHandler</code>.</section>	https://developer.android.com/reference/java/net/ContentHandlerFactory.html
ContentLoadingProgressBar	A										<section class="prog__container"><pre><code>public class ContentLoadingProgressBar</code></pre>ContentLoadingProgressBar implements a ProgressBar that waits a minimum time to be dismissed before showing. Once visible, the progress bar will be visible for a minimum amount of time to avoid "flashes" in the UI when an event could take a largely variable time to complete (from none, to a user perceivable amount)</section>	https://developer.android.com/reference/android/support/v4/widget/ContentLoadingProgressBar.html
ContentObservable	A										<section class="prog__container"><pre><code>public class ContentObservable</code></pre>A specialization of <code>Observable</code> for <code>ContentObserver</code> that provides methods for sending notifications to a list of <code>ContentObserver</code> objects.</section>	https://developer.android.com/reference/android/database/ContentObservable.html
ContentObserver	A										<section class="prog__container"><pre><code>public abstract class ContentObserver</code></pre>Receives call backs for changes to content. Must be implemented by objects which are added to a <code>ContentObservable</code>.</section>	https://developer.android.com/reference/android/database/ContentObserver.html
ContentProvider	A										<section class="prog__container"><pre><code>public abstract class ContentProvider</code></pre>Content providers are one of the primary building blocks of Android applications, providing content to applications. They encapsulate data and provide it to applications through the single <code>ContentResolver</code> interface. A content provider is only required if you need to share data between multiple applications. For example, the contacts data is used by multiple applications and must be stored in a content provider. If you don't need to share data amongst multiple applications you can use a database directly via <code>SQLiteDatabase</code>.</section>	https://developer.android.com/reference/android/content/ContentProvider.html
ContentProvider.PipeDataWriter	A										<section class="prog__container"><pre><code>public static interface ContentProvider.PipeDataWriter</code></pre>Interface to write a stream of data to a pipe. Use with <code>openPipeHelper(Uri, String, Bundle, T, ContentProvider.PipeDataWriter<t>)</t></code>.</section>	https://developer.android.com/reference/android/content/ContentProvider.PipeDataWriter.html
ContentProviderClient	A										<section class="prog__container"><pre><code>public class ContentProviderClient</code></pre>The public interface object used to interact with a specific <code>ContentProvider</code>.</section>	https://developer.android.com/reference/android/content/ContentProviderClient.html
ContentProviderOperation	A										<section class="prog__container"><pre><code>public class ContentProviderOperation</code></pre>Represents a single operation to be performed as part of a batch of operations.</section>	https://developer.android.com/reference/android/content/ContentProviderOperation.html
ContentProviderOperation.Builder	A										<section class="prog__container"><pre><code>public static class ContentProviderOperation.Builder</code></pre>Used to add parameters to a <code>ContentProviderOperation</code>. The <code>ContentProviderOperation.Builder</code> is first created by calling <code>newInsert(android.net.Uri)</code>, <code>newUpdate(android.net.Uri)</code>, <code>newDelete(android.net.Uri)</code> or <code>newAssertQuery(Uri)</code>. The withXXX methods can then be used to add parameters to the builder. See the specific methods to find for which <code>ContentProviderOperation.Builder</code> type each is allowed. Call <code>build()</code> to create the <code>ContentProviderOperation</code> once all the parameters have been supplied.</section>	https://developer.android.com/reference/android/content/ContentProviderOperation.Builder.html
ContentProviderResult	A										<section class="prog__container"><pre><code>public class ContentProviderResult</code></pre>Contains the result of the application of a <code>ContentProviderOperation</code>. It is guaranteed to have exactly one of <code>uri</code> or <code>count</code> set.</section>	https://developer.android.com/reference/android/content/ContentProviderResult.html
ContentQueryMap	A										<section class="prog__container"><pre><code>public class ContentQueryMap</code></pre>Caches the contents of a cursor into a Map of String-&gt;ContentValues and optionally keeps the cache fresh by registering for updates on the content backing the cursor. The column of the database that is to be used as the key of the map is user-configurable, and the ContentValues contains all columns other than the one that is designated the key.</section>	https://developer.android.com/reference/android/content/ContentQueryMap.html
ContentRecommendation	A										<section class="prog__container"><pre><code>public final class ContentRecommendation</code></pre>The ContentRecommendation object encapsulates all application provided data for a single content recommendation item.</section>	https://developer.android.com/reference/android/support/app/recommendation/ContentRecommendation.html
ContentRecommendation.Builder	A										<section class="prog__container"><pre><code>public static final class ContentRecommendation.Builder</code></pre>Builder class for <code>ContentRecommendation</code> objects. Provides a convenient way to set the various fields of a <code>ContentRecommendation</code>.</section>	https://developer.android.com/reference/android/support/app/recommendation/ContentRecommendation.Builder.html
ContentRecommendation.ContentMaturity	A										<section class="prog__container"><pre><code>public static abstract @interface ContentRecommendation.ContentMaturity</code></pre></section>	https://developer.android.com/reference/android/support/app/recommendation/ContentRecommendation.ContentMaturity.html
ContentRecommendation.ContentPricing	A										<section class="prog__container"><pre><code>public static abstract @interface ContentRecommendation.ContentPricing</code></pre></section>	https://developer.android.com/reference/android/support/app/recommendation/ContentRecommendation.ContentPricing.html
ContentRecommendation.ContentStatus	A										<section class="prog__container"><pre><code>public static abstract @interface ContentRecommendation.ContentStatus</code></pre></section>	https://developer.android.com/reference/android/support/app/recommendation/ContentRecommendation.ContentStatus.html
ContentRecommendation.ContentType	A										<section class="prog__container"><pre><code>public static abstract @interface ContentRecommendation.ContentType</code></pre></section>	https://developer.android.com/reference/android/support/app/recommendation/ContentRecommendation.ContentType.html
ContentRecommendation.IntentData	A										<section class="prog__container"><pre><code>public static class ContentRecommendation.IntentData</code></pre>Object used to encapsulate the data to be used to build the <code>PendingIntent</code> object associated with a given content recommendation, at the time this recommendation gets posted to the home Screen.</section>	https://developer.android.com/reference/android/support/app/recommendation/ContentRecommendation.IntentData.html
ContentRecommendation.IntentType	A										<section class="prog__container"><pre><code>public static abstract @interface ContentRecommendation.IntentType</code></pre></section>	https://developer.android.com/reference/android/support/app/recommendation/ContentRecommendation.IntentType.html
ContentResolver	A										<section class="prog__container"><pre><code>public abstract class ContentResolver</code></pre>This class provides applications access to the content model. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/content/ContentResolver.html
ContentResolverCompat	A										<section class="prog__container"><pre><code>public final class ContentResolverCompat</code></pre>Helper for accessing features in <code>ContentResolver</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/content/ContentResolverCompat.html
ContentUris	A										<section class="prog__container"><pre><code>public class ContentUris</code></pre>Utility methods useful for working with <code>Uri</code> objects that use the "content" (content://) scheme.</section>	https://developer.android.com/reference/android/content/ContentUris.html
ContentValues	A										<section class="prog__container"><pre><code>public final class ContentValues</code></pre>This class is used to store a set of values that the <code>ContentResolver</code> can process.</section>	https://developer.android.com/reference/android/content/ContentValues.html
Context	A										<section class="prog__container"><pre><code>public abstract class Context</code></pre>Interface to global information about an application environment. This is an abstract class whose implementation is provided by the Android system. It allows access to application-specific resources and classes, as well as up-calls for application-level operations such as launching activities, broadcasting and receiving intents, etc.</section>	https://developer.android.com/reference/android/content/Context.html
ContextCompat	A										<section class="prog__container"><pre><code>public class ContextCompat</code></pre>Helper for accessing features in <code>Context</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/content/ContextCompat.html
ContextMenu	A										<section class="prog__container"><pre><code>public interface ContextMenu</code></pre>Extension of <code>Menu</code> for context menus providing functionality to modify the header of the context menu.</section>	https://developer.android.com/reference/android/view/ContextMenu.html
ContextMenu.ContextMenuInfo	A										<section class="prog__container"><pre><code>public static interface ContextMenu.ContextMenuInfo</code></pre>Additional information regarding the creation of the context menu. For example, <code>AdapterView</code>s use this to pass the exact item position within the adapter that initiated the context menu.</section>	https://developer.android.com/reference/android/view/ContextMenu.ContextMenuInfo.html
ContextThemeWrapper	A										<section class="prog__container"><pre><code>public class ContextThemeWrapper</code></pre>A context wrapper that allows you to modify or replace the theme of the wrapped context.</section>	https://developer.android.com/reference/android/view/ContextThemeWrapper.html
ContextWrapper	A										<section class="prog__container"><pre><code>public class ContextWrapper</code></pre>Proxying implementation of Context that simply delegates all of its calls to another Context. Can be subclassed to modify behavior without changing the original Context.</section>	https://developer.android.com/reference/android/content/ContextWrapper.html
ControlButtonPresenterSelector	A										<section class="prog__container"><pre><code>public class ControlButtonPresenterSelector</code></pre>Displays primary and secondary controls for a <code>PlaybackControlsRow</code>. Binds to items of type <code>Action</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ControlButtonPresenterSelector.html
CookieHandler	A										<section class="prog__container"><pre><code>public abstract class CookieHandler</code></pre>A CookieHandler object provides a callback mechanism to hook up a HTTP state management policy implementation into the HTTP protocol handler. The HTTP state management mechanism specifies a way to create a stateful session with HTTP requests and responses.</section>	https://developer.android.com/reference/java/net/CookieHandler.html
CookieManager	D								*[[webkit.CookieManager]], <section class="prog__container"><pre><code>public abstract class CookieManager</code></pre>Manages the cookies used by an application's <code>WebView</code> instances. Cookies are manipulated according to RFC2109.</section>\n*[[net.CookieManager]], <section class="prog__container"><pre><code>public class CookieManager</code></pre>CookieManager provides a concrete implementation of <code>CookieHandler</code>, which separates the storage of cookies from the policy surrounding accepting and rejecting cookies. A CookieManager is initialized with a <code>CookieStore</code> which manages storage, and a <code>CookiePolicy</code> object, which makes policy decisions on cookie acceptance/rejection.</section>			
CookiePolicy	A										<section class="prog__container"><pre><code>public interface CookiePolicy</code></pre>CookiePolicy implementations decide which cookies should be accepted and which should be rejected. Three pre-defined policy implementations are provided, namely ACCEPT_ALL, ACCEPT_NONE and ACCEPT_ORIGINAL_SERVER.</section>	https://developer.android.com/reference/java/net/CookiePolicy.html
CookieStore	A										<section class="prog__container"><pre><code>public interface CookieStore</code></pre>A CookieStore object represents a storage for cookie. Can store and retrieve cookies.</section>	https://developer.android.com/reference/java/net/CookieStore.html
CookieSyncManager	A										<section class="prog__container"><pre><code>public final class CookieSyncManager</code></pre><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> The WebView now automatically syncs cookies as necessary. You no longer need to create or use the CookieSyncManager. To manually force a sync you can use the CookieManager method <code>flush()</code> which is a synchronous replacement for <code>sync()</code>.</section>	https://developer.android.com/reference/android/webkit/CookieSyncManager.html
CoordinatorLayout	A										<section class="prog__container"><pre><code>public class CoordinatorLayout</code></pre>CoordinatorLayout is a super-powered <code>FrameLayout</code>.</section>	https://developer.android.com/reference/android/support/design/widget/CoordinatorLayout.html
CoordinatorLayout.DefaultBehavior	A										<section class="prog__container"><pre><code>public static abstract @interface CoordinatorLayout.DefaultBehavior</code></pre>Defines the default <code>CoordinatorLayout.Behavior</code> of a <code>View</code> class.</section>	https://developer.android.com/reference/android/support/design/widget/CoordinatorLayout.DefaultBehavior.html
CoordinatorLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class CoordinatorLayout.LayoutParams</code></pre>Parameters describing the desired layout for a child of a <code>CoordinatorLayout</code>.</section>	https://developer.android.com/reference/android/support/design/widget/CoordinatorLayout.LayoutParams.html
CoordinatorLayout.SavedState	A										<section class="prog__container"><pre><code>protected static class CoordinatorLayout.SavedState</code></pre></section>	https://developer.android.com/reference/android/support/design/widget/CoordinatorLayout.SavedState.html
CopticCalendar	A										<section class="prog__container"><pre><code>public final class CopticCalendar</code></pre>Implement the Coptic calendar system.</section>	https://developer.android.com/reference/android/icu/util/CopticCalendar.html
CopyOnWriteArrayList	A										<section class="prog__container"><pre><code>public class CopyOnWriteArrayList</code></pre>A thread-safe random-access list.</section>	https://developer.android.com/reference/java/util/concurrent/CopyOnWriteArrayList.html
CopyOnWriteArraySet	A										<section class="prog__container"><pre><code>public class CopyOnWriteArraySet</code></pre>A <code>Set</code> that uses an internal <code>CopyOnWriteArrayList</code> for all of its operations. Thus, it shares the same basic properties: <ul> <li>It is best suited for applications in which set sizes generally stay small, read-only operations vastly outnumber mutative operations, and you need to prevent interference among threads during traversal. <li>It is thread-safe. <li>Mutative operations (<code>add</code>, <code>set</code>, <code>remove</code>, etc.) are expensive since they usually entail copying the entire underlying array. <li>Iterators do not support the mutative <code>remove</code> operation. <li>Traversal via iterators is fast and cannot encounter interference from other threads. Iterators rely on unchanging snapshots of the array at the time the iterators were constructed. </li></li></li></li></li></ul></section>	https://developer.android.com/reference/java/util/concurrent/CopyOnWriteArraySet.html
CoreConnectionPNames	A										<section class="prog__container"><pre><code>public interface CoreConnectionPNames</code></pre><p class="caution"><strong> This interface was deprecated in API level 22.</strong><br/> Please use <code>openConnection()</code> instead. Please visit this webpage for further details.</section>	https://developer.android.com/reference/org/apache/http/params/CoreConnectionPNames.html
CornerPathEffect	A										<section class="prog__container"><pre><code>public class CornerPathEffect</code></pre></section>	https://developer.android.com/reference/android/graphics/CornerPathEffect.html
CorrectionInfo	A										<section class="prog__container"><pre><code>public final class CorrectionInfo</code></pre>Information about a single text correction that an editor has reported to an input method.</section>	https://developer.android.com/reference/android/view/inputmethod/CorrectionInfo.html
CountDownLatch	A										<section class="prog__container"><pre><code>public class CountDownLatch</code></pre>A synchronization aid that allows one or more threads to wait until a set of operations being performed in other threads completes.</section>	https://developer.android.com/reference/java/util/concurrent/CountDownLatch.html
CountDownTimer	A										<section class="prog__container"><pre><code>public abstract class CountDownTimer</code></pre>Schedule a countdown until a time in the future, with regular notifications on intervals along the way. Example of showing a 30 second countdown in a text field: <pre class="prettyprint"> new CountDownTimer(30000, 1000) { public void onTick(long millisUntilFinished) { mTextField.setText("seconds remaining: " + millisUntilFinished / 1000); } public void onFinish() { mTextField.setText("done!"); } }.start(); </pre> The calls to <code>onTick(long)</code> are synchronized to this object so that one call to <code>onTick(long)</code> won't ever occur before the previous callback is complete. This is only relevant when the implementation of <code>onTick(long)</code> takes an amount of time to execute that is significant compared to the countdown interval.</section>	https://developer.android.com/reference/android/os/CountDownTimer.html
CountedCompleter	A										<section class="prog__container"><pre><code>public abstract class CountedCompleter</code></pre>A <code>ForkJoinTask</code> with a completion action performed when triggered and there are no remaining pending actions. CountedCompleters are in general more robust in the presence of subtask stalls and blockage than are other forms of ForkJoinTasks, but are less intuitive to program. Uses of CountedCompleter are similar to those of other completion based components except that multiple <em>pending</em> completions may be necessary to trigger the completion action <code>onCompletion(CountedCompleter)</code>, not just one. Unless initialized otherwise, the pending count</section>	https://developer.android.com/reference/java/util/concurrent/CountedCompleter.html
CpuUsageInfo	A										<section class="prog__container"><pre><code>public final class CpuUsageInfo</code></pre>CPU usage information per core.</section>	https://developer.android.com/reference/android/os/CpuUsageInfo.html
Credentials	A										<section class="prog__container"><pre><code>public class Credentials</code></pre>A class for representing UNIX credentials passed via ancillary data on UNIX domain sockets. See "man 7 unix" on a desktop linux distro.</section>	https://developer.android.com/reference/android/net/Credentials.html
Criteria	A										<section class="prog__container"><pre><code>public class Criteria</code></pre>A class indicating the application criteria for selecting a location provider. Providers maybe ordered according to accuracy, power usage, ability to report altitude, speed, and bearing, and monetary cost.</section>	https://developer.android.com/reference/android/location/Criteria.html
CrossProcessCursor	A										<section class="prog__container"><pre><code>public interface CrossProcessCursor</code></pre>A cross process cursor is an extension of a <code>Cursor</code> that also supports usage from remote processes.</section>	https://developer.android.com/reference/android/database/CrossProcessCursor.html
CrossProcessCursorWrapper	A										<section class="prog__container"><pre><code>public class CrossProcessCursorWrapper</code></pre>Cursor wrapper that implements <code>CrossProcessCursor</code>.</section>	https://developer.android.com/reference/android/database/CrossProcessCursorWrapper.html
CryptoPrimitive	A										<section class="prog__container"><pre><code>public final enum CryptoPrimitive</code></pre>An enumeration of cryptographic primitives.</section>	https://developer.android.com/reference/java/security/CryptoPrimitive.html
Currency	D								*[[icu.util.Currency]], <section class="prog__container"><pre><code>public class Currency</code></pre>A class encapsulating a currency, as defined by ISO 4217. A <tt>Currency</tt> object can be created given a <tt>Locale</tt> or given an ISO 4217 code. Once created, the <tt>Currency</tt> object can return various data necessary to its proper display: <ul><li>A display symbol, for a specific locale <li>The number of fraction digits to display <li>A rounding increment </li></li></li></ul> The <tt>DecimalFormat</tt> class uses these data to display currencies.</section>\n*[[java.util.Currency]], <section class="prog__container"><pre><code>public final class Currency</code></pre>Represents a currency. Currencies are identified by their ISO 4217 currency codes. Visit the ISO web site for more information, including a table of currency codes.</section>			
Currency.CurrencyUsage	A										<section class="prog__container"><pre><code>public static final enum Currency.CurrencyUsage</code></pre>Currency Usage used for Decimal Format</section>	https://developer.android.com/reference/android/icu/util/Currency.CurrencyUsage.html
CurrencyAmount	A										<section class="prog__container"><pre><code>public class CurrencyAmount</code></pre>An amount of currency, consisting of a Number and a Currency. CurrencyAmount objects are immutable.</section>	https://developer.android.com/reference/android/icu/util/CurrencyAmount.html
CurrencyPluralInfo	A										<section class="prog__container"><pre><code>public class CurrencyPluralInfo</code></pre>This class represents the information needed by DecimalFormat to format currency plural, such as "3.00 US dollars" or "1.00 US dollar". DecimalFormat creates for itself an instance of CurrencyPluralInfo from its locale data. If you need to change any of these symbols, you can get the CurrencyPluralInfo object from your DecimalFormat and modify it. Following are the information needed for currency plural format and parse: locale information, plural rule of the locale, currency plural pattern of the locale.</section>	https://developer.android.com/reference/android/icu/text/CurrencyPluralInfo.html
Cursor	A										<section class="prog__container"><pre><code>public interface Cursor</code></pre>This interface provides random read-write access to the result set returned by a database query.</section>	https://developer.android.com/reference/android/database/Cursor.html
CursorAdapter	D								*[[v4.widget.CursorAdapter]], <section class="prog__container"><pre><code>public abstract class CursorAdapter</code></pre>Static library support version of the framework's <code>CursorAdapter</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>\n*[[android.widget.CursorAdapter]], <section class="prog__container"><pre><code>public abstract class CursorAdapter</code></pre>Adapter that exposes data from a <code>Cursor</code> to a <code>ListView</code> widget.</section>			
CursorAnchorInfo	A										<section class="prog__container"><pre><code>public final class CursorAnchorInfo</code></pre>Positional information about the text insertion point and characters in the composition string.</section>	https://developer.android.com/reference/android/view/inputmethod/CursorAnchorInfo.html
CursorAnchorInfo.Builder	A										<section class="prog__container"><pre><code>public static final class CursorAnchorInfo.Builder</code></pre>Builder for <code>CursorAnchorInfo</code>. This class is not designed to be thread-safe.</section>	https://developer.android.com/reference/android/view/inputmethod/CursorAnchorInfo.Builder.html
CursorIndexOutOfBoundsException	A										<section class="prog__container"><pre><code>public class CursorIndexOutOfBoundsException</code></pre>An exception indicating that a cursor is out of bounds.</section>	https://developer.android.com/reference/android/database/CursorIndexOutOfBoundsException.html
CursorJoiner	A										<section class="prog__container"><pre><code>public final class CursorJoiner</code></pre>Does a join on two cursors using the specified columns. The cursors must already be sorted on each of the specified columns in ascending order. This joiner only supports the case where the tuple of key column values is unique.</section>	https://developer.android.com/reference/android/database/CursorJoiner.html
CursorJoiner.Result	A										<section class="prog__container"><pre><code>public static final enum CursorJoiner.Result</code></pre>The result of a call to next().</section>	https://developer.android.com/reference/android/database/CursorJoiner.Result.html
CursorLoader	D								*[[android.content.CursorLoader]], <section class="prog__container"><pre><code>public class CursorLoader</code></pre>A loader that queries the <code>ContentResolver</code> and returns a <code>Cursor</code>. This class implements the <code>Loader</code> protocol in a standard way for querying cursors, building on <code>AsyncTaskLoader</code> to perform the cursor query on a background thread so that it does not block the application's UI.</section>\n*[[v4.content.CursorLoader]], <section class="prog__container"><pre><code>public class CursorLoader</code></pre>Static library support version of the framework's <code>CursorLoader</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>			
CursorMapper	A										<section class="prog__container"><pre><code>public abstract class CursorMapper</code></pre>Abstract class used to convert the current <code>Cursor</code> row to a single object.</section>	https://developer.android.com/reference/android/support/v17/leanback/database/CursorMapper.html
CursorObjectAdapter	A										<section class="prog__container"><pre><code>public class CursorObjectAdapter</code></pre>An <code>ObjectAdapter</code> implemented with a <code>Cursor</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/CursorObjectAdapter.html
CursorTreeAdapter	A										<section class="prog__container"><pre><code>public abstract class CursorTreeAdapter</code></pre>An adapter that exposes data from a series of <code>Cursor</code>s to an <code>ExpandableListView</code> widget. The top-level <code>Cursor</code> (that is given in the constructor) exposes the groups, while subsequent <code>Cursor</code>s returned from <code>getChildrenCursor(Cursor)</code> expose children within a particular group. The Cursors must include a column named "_id" or this class will not work.</section>	https://developer.android.com/reference/android/widget/CursorTreeAdapter.html
CursorWindow	A										<section class="prog__container"><pre><code>public class CursorWindow</code></pre>A buffer containing multiple cursor rows.</section>	https://developer.android.com/reference/android/database/CursorWindow.html
CursorWrapper	A										<section class="prog__container"><pre><code>public class CursorWrapper</code></pre>Wrapper class for Cursor that delegates all calls to the actual cursor object. The primary use for this class is to extend a cursor while overriding only a subset of its methods.</section>	https://developer.android.com/reference/android/database/CursorWrapper.html
CustomPrinterIconCallback	A										<section class="prog__container"><pre><code>public final class CustomPrinterIconCallback</code></pre>Callback for <code>onRequestCustomPrinterIcon(PrinterId, CancellationSignal, CustomPrinterIconCallback)</code>.</section>	https://developer.android.com/reference/android/printservice/CustomPrinterIconCallback.html
CustomTabsCallback	A										<section class="prog__container"><pre><code>public class CustomTabsCallback</code></pre>A callback class for custom tabs client to get messages regarding events in their custom tabs.</section>	https://developer.android.com/reference/android/support/customtabs/CustomTabsCallback.html
CustomTabsClient	A										<section class="prog__container"><pre><code>public class CustomTabsClient</code></pre>Class to communicate with a <code>CustomTabsService</code> and create <code>CustomTabsSession</code> from it.</section>	https://developer.android.com/reference/android/support/customtabs/CustomTabsClient.html
CustomTabsIntent	A										<section class="prog__container"><pre><code>public final class CustomTabsIntent</code></pre>Class holding the <code>Intent</code> and start bundle for a Custom Tabs Activity.</section>	https://developer.android.com/reference/android/support/customtabs/CustomTabsIntent.html
CustomTabsIntent.Builder	A										<section class="prog__container"><pre><code>public static final class CustomTabsIntent.Builder</code></pre>Builder class for <code>CustomTabsIntent</code> objects.</section>	https://developer.android.com/reference/android/support/customtabs/CustomTabsIntent.Builder.html
CustomTabsService	A										<section class="prog__container"><pre><code>public abstract class CustomTabsService</code></pre>Abstract service class for implementing Custom Tabs related functionality. The service should be responding to the action ACTION_CUSTOM_TABS_CONNECTION. This class should be used by implementers that want to provide Custom Tabs functionality, not by clients that want to launch Custom Tabs.</section>	https://developer.android.com/reference/android/support/customtabs/CustomTabsService.html
CustomTabsServiceConnection	A										<section class="prog__container"><pre><code>public abstract class CustomTabsServiceConnection</code></pre>Abstract <code>ServiceConnection</code> to use while binding to a <code>CustomTabsService</code>. Any client implementing this is responsible for handling changes related with the lifetime of the connection like rebinding on disconnect.</section>	https://developer.android.com/reference/android/support/customtabs/CustomTabsServiceConnection.html
CustomTabsSession	A										<section class="prog__container"><pre><code>public final class CustomTabsSession</code></pre>A class to be used for Custom Tabs related communication. Clients that want to launch Custom Tabs can use this class exclusively to handle all related communication.</section>	https://developer.android.com/reference/android/support/customtabs/CustomTabsSession.html
CustomTabsSessionToken	A										<section class="prog__container"><pre><code>public class CustomTabsSessionToken</code></pre>Wrapper class that can be used as a unique identifier for a session. Also contains an accessor for the <code>CustomTabsCallback</code> for the session if there was any.</section>	https://developer.android.com/reference/android/support/customtabs/CustomTabsSessionToken.html
CycleInterpolator	A										<section class="prog__container"><pre><code>public class CycleInterpolator</code></pre>Repeats the animation for a specified number of cycles. The rate of change follows a sinusoidal pattern.</section>	https://developer.android.com/reference/android/view/animation/CycleInterpolator.html
CyclicBarrier	A										<section class="prog__container"><pre><code>public class CyclicBarrier</code></pre>A synchronization aid that allows a set of threads to all wait for each other to reach a common barrier point. CyclicBarriers are useful in programs involving a fixed sized party of threads that must occasionally wait for each other. The barrier is called <em>cyclic</em> because it can be re-used after the waiting threads are released.</section>	https://developer.android.com/reference/java/util/concurrent/CyclicBarrier.html
DESKeySpec	A										<section class="prog__container"><pre><code>public class DESKeySpec</code></pre>This class specifies a DES key.</section>	https://developer.android.com/reference/javax/crypto/spec/DESKeySpec.html
DESedeKeySpec	A										<section class="prog__container"><pre><code>public class DESedeKeySpec</code></pre>This class specifies a DES-EDE ("triple-DES") key.</section>	https://developer.android.com/reference/javax/crypto/spec/DESedeKeySpec.html
DHGenParameterSpec	A										<section class="prog__container"><pre><code>public class DHGenParameterSpec</code></pre>This class specifies the set of parameters used for generating Diffie-Hellman (system) parameters for use in Diffie-Hellman key agreement. This is typically done by a central authority.</section>	https://developer.android.com/reference/javax/crypto/spec/DHGenParameterSpec.html
DHKey	A										<section class="prog__container"><pre><code>public interface DHKey</code></pre>The interface to a Diffie-Hellman key.</section>	https://developer.android.com/reference/javax/crypto/interfaces/DHKey.html
DHParameterSpec	A										<section class="prog__container"><pre><code>public class DHParameterSpec</code></pre>This class specifies the set of parameters used with the Diffie-Hellman algorithm, as specified in PKCS #3: <i>Diffie-Hellman Key-Agreement Standard</i>.</section>	https://developer.android.com/reference/javax/crypto/spec/DHParameterSpec.html
DHPrivateKey	A										<section class="prog__container"><pre><code>public interface DHPrivateKey</code></pre>The interface to a Diffie-Hellman private key.</section>	https://developer.android.com/reference/javax/crypto/interfaces/DHPrivateKey.html
DHPrivateKeySpec	A										<section class="prog__container"><pre><code>public class DHPrivateKeySpec</code></pre>This class specifies a Diffie-Hellman private key with its associated parameters.</section>	https://developer.android.com/reference/javax/crypto/spec/DHPrivateKeySpec.html
DHPublicKey	A										<section class="prog__container"><pre><code>public interface DHPublicKey</code></pre>The interface to a Diffie-Hellman public key.</section>	https://developer.android.com/reference/javax/crypto/interfaces/DHPublicKey.html
DHPublicKeySpec	A										<section class="prog__container"><pre><code>public class DHPublicKeySpec</code></pre>This class specifies a Diffie-Hellman public key with its associated parameters.</section>	https://developer.android.com/reference/javax/crypto/spec/DHPublicKeySpec.html
DOMConfiguration	A										<section class="prog__container"><pre><code>public interface DOMConfiguration</code></pre>The <code>DOMConfiguration</code> interface represents the configuration of a document and maintains a table of recognized parameters. Using the configuration, it is possible to change <code>Document.normalizeDocument()</code> behavior, such as replacing the <code>CDATASection</code> nodes with <code>Text</code> nodes or specifying the type of the schema that must be used when the validation of the <code>Document</code> is requested. <code>DOMConfiguration</code> objects are also used in [DOM Level 3 Load and Save] in the <code>DOMParser</code> and <code>DOMSerializer</code> interfaces.</section>	https://developer.android.com/reference/org/w3c/dom/DOMConfiguration.html
DOMError	A										<section class="prog__container"><pre><code>public interface DOMError</code></pre><code>DOMError</code> is an interface that describes an error.</section>	https://developer.android.com/reference/org/w3c/dom/DOMError.html
DOMErrorHandler	A										<section class="prog__container"><pre><code>public interface DOMErrorHandler</code></pre><code>DOMErrorHandler</code> is a callback interface that the DOM implementation can call when reporting errors that happens while processing XML data, or when doing some other processing (e.g. validating a document). A <code>DOMErrorHandler</code> object can be attached to a <code>Document</code> using the "error-handler" on the <code>DOMConfiguration</code> interface. If more than one error needs to be reported during an operation, the sequence and numbers of the errors passed to the error handler are implementation dependent.</section>	https://developer.android.com/reference/org/w3c/dom/DOMErrorHandler.html
DOMException	A										<section class="prog__container"><pre><code>public class DOMException</code></pre>DOM operations only raise exceptions in "exceptional" circumstances, i.e., when an operation is impossible to perform (either for logical reasons, because data is lost, or because the implementation has become unstable). In general, DOM methods return specific error values in ordinary processing situations, such as out-of-bound errors when using <code>NodeList</code>.</section>	https://developer.android.com/reference/org/w3c/dom/DOMException.html
DOMImplementation	A										<section class="prog__container"><pre><code>public interface DOMImplementation</code></pre>The <code>DOMImplementation</code> interface provides a number of methods for performing operations that are independent of any particular instance of the document object model.</section>	https://developer.android.com/reference/org/w3c/dom/DOMImplementation.html
DOMImplementationLS	A										<section class="prog__container"><pre><code>public interface DOMImplementationLS</code></pre><code>DOMImplementationLS</code> contains the factory methods for creating Load and Save objects.</section>	https://developer.android.com/reference/org/w3c/dom/ls/DOMImplementationLS.html
DOMImplementationList	A										<section class="prog__container"><pre><code>public interface DOMImplementationList</code></pre>The <code>DOMImplementationList</code> interface provides the abstraction of an ordered collection of DOM implementations, without defining or constraining how this collection is implemented. The items in the <code>DOMImplementationList</code> are accessible via an integral index, starting from 0.</section>	https://developer.android.com/reference/org/w3c/dom/DOMImplementationList.html
DOMImplementationSource	A										<section class="prog__container"><pre><code>public interface DOMImplementationSource</code></pre>This interface permits a DOM implementer to supply one or more implementations, based upon requested features and versions, as specified in . Each implemented <code>DOMImplementationSource</code> object is listed in the binding-specific list of available sources so that its <code>DOMImplementation</code> objects are made available.</section>	https://developer.android.com/reference/org/w3c/dom/DOMImplementationSource.html
DOMLocator	D								*[[transform.dom.DOMLocator]], <section class="prog__container"><pre><code>public interface DOMLocator</code></pre>Indicates the position of a node in a source DOM, intended primarily for error reporting. To use a DOMLocator, the receiver of an error must downcast the <code>SourceLocator</code> object returned by an exception. A <code>Transformer</code> may use this object for purposes other than error reporting, for instance, to indicate the source node that originated a result node.</section>\n*[[w3c.dom.DOMLocator]], <section class="prog__container"><pre><code>public interface DOMLocator</code></pre><code>DOMLocator</code> is an interface that describes a location (e.g. where an error occurred).</section>			
DOMResult	A										<section class="prog__container"><pre><code>public class DOMResult</code></pre></section>	https://developer.android.com/reference/javax/xml/transform/dom/DOMResult.html
DOMSource	A										<section class="prog__container"><pre><code>public class DOMSource</code></pre></section>	https://developer.android.com/reference/javax/xml/transform/dom/DOMSource.html
DOMStringList	A										<section class="prog__container"><pre><code>public interface DOMStringList</code></pre>The <code>DOMStringList</code> interface provides the abstraction of an ordered collection of <code>DOMString</code> values, without defining or constraining how this collection is implemented. The items in the <code>DOMStringList</code> are accessible via an integral index, starting from 0.</section>	https://developer.android.com/reference/org/w3c/dom/DOMStringList.html
DSAKey	A										<section class="prog__container"><pre><code>public interface DSAKey</code></pre>The interface to a DSA public or private key. DSA (Digital Signature Algorithm) is defined in NIST's FIPS-186.</section>	https://developer.android.com/reference/java/security/interfaces/DSAKey.html
DSAKeyPairGenerator	A										<section class="prog__container"><pre><code>public interface DSAKeyPairGenerator</code></pre>An interface to an object capable of generating DSA key pairs.</section>	https://developer.android.com/reference/java/security/interfaces/DSAKeyPairGenerator.html
DSAParameterSpec	A										<section class="prog__container"><pre><code>public class DSAParameterSpec</code></pre>This class specifies the set of parameters used with the DSA algorithm.</section>	https://developer.android.com/reference/java/security/spec/DSAParameterSpec.html
DSAParams	A										<section class="prog__container"><pre><code>public interface DSAParams</code></pre>Interface to a DSA-specific set of key parameters, which defines a DSA <em>key family</em>. DSA (Digital Signature Algorithm) is defined in NIST's FIPS-186.</section>	https://developer.android.com/reference/java/security/interfaces/DSAParams.html
DSAPrivateKey	A										<section class="prog__container"><pre><code>public interface DSAPrivateKey</code></pre>The standard interface to a DSA private key. DSA (Digital Signature Algorithm) is defined in NIST's FIPS-186.</section>	https://developer.android.com/reference/java/security/interfaces/DSAPrivateKey.html
DSAPrivateKeySpec	A										<section class="prog__container"><pre><code>public class DSAPrivateKeySpec</code></pre>This class specifies a DSA private key with its associated parameters.</section>	https://developer.android.com/reference/java/security/spec/DSAPrivateKeySpec.html
DSAPublicKey	A										<section class="prog__container"><pre><code>public interface DSAPublicKey</code></pre>The interface to a DSA public key. DSA (Digital Signature Algorithm) is defined in NIST's FIPS-186.</section>	https://developer.android.com/reference/java/security/interfaces/DSAPublicKey.html
DSAPublicKeySpec	A										<section class="prog__container"><pre><code>public class DSAPublicKeySpec</code></pre>This class specifies a DSA public key with its associated parameters.</section>	https://developer.android.com/reference/java/security/spec/DSAPublicKeySpec.html
DTDHandler	A										<section class="prog__container"><pre><code>public interface DTDHandler</code></pre>Receive notification of basic DTD-related events. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/DTDHandler.html
DashPathEffect	A										<section class="prog__container"><pre><code>public class DashPathEffect</code></pre></section>	https://developer.android.com/reference/android/graphics/DashPathEffect.html
DataBindingComponent	A										<section class="prog__container"><pre><code>public interface DataBindingComponent</code></pre>This interface is generated during compilation to contain getters for all used instance BindingAdapters. When a BindingAdapter is an instance method, an instance of the class implementing the method must be instantiated. This interface will be generated with a getter for each class with the name get* where * is simple class name of the declaring BindingAdapter class/interface. Name collisions will be resolved by adding a numeric suffix to the getter.</section>	https://developer.android.com/reference/android/databinding/DataBindingComponent.html
DataBindingUtil	A										<section class="prog__container"><pre><code>public class DataBindingUtil</code></pre>Utility class to create <code>ViewDataBinding</code> from layouts.</section>	https://developer.android.com/reference/android/databinding/DataBindingUtil.html
DataFormatException	A										<section class="prog__container"><pre><code>public class DataFormatException</code></pre>Signals that a data format error has occurred.</section>	https://developer.android.com/reference/java/util/zip/DataFormatException.html
DataInput	A										<section class="prog__container"><pre><code>public interface DataInput</code></pre>The <code>DataInput</code> interface provides for reading bytes from a binary stream and reconstructing from them data in any of the Java primitive types. There is also a facility for reconstructing a <code>String</code> from data in modified UTF-8 format.</section>	https://developer.android.com/reference/java/io/DataInput.html
DataInputStream	A										<section class="prog__container"><pre><code>public class DataInputStream</code></pre>A data input stream lets an application read primitive Java data types from an underlying input stream in a machine-independent way. An application uses a data output stream to write data that can later be read by a data input stream.</section>	https://developer.android.com/reference/java/io/DataInputStream.html
DataOutput	A										<section class="prog__container"><pre><code>public interface DataOutput</code></pre>The <code>DataOutput</code> interface provides for converting data from any of the Java primitive types to a series of bytes and writing these bytes to a binary stream. There is also a facility for converting a <code>String</code> into modified UTF-8 format and writing the resulting series of bytes.</section>	https://developer.android.com/reference/java/io/DataOutput.html
DataOutputStream	A										<section class="prog__container"><pre><code>public class DataOutputStream</code></pre>A data output stream lets an application write primitive Java data types to an output stream in a portable way. An application can then use a data input stream to read the data back in.</section>	https://developer.android.com/reference/java/io/DataOutputStream.html
DataSetObservable	A										<section class="prog__container"><pre><code>public class DataSetObservable</code></pre>A specialization of <code>Observable</code> for <code>DataSetObserver</code> that provides methods for sending notifications to a list of <code>DataSetObserver</code> objects.</section>	https://developer.android.com/reference/android/database/DataSetObservable.html
DataSetObserver	A										<section class="prog__container"><pre><code>public abstract class DataSetObserver</code></pre>Receives call backs when a data set has been changed, or made invalid. The typically data sets that are observed are <code>Cursor</code>s or <code>Adapter</code>s. DataSetObserver must be implemented by objects which are added to a DataSetObservable.</section>	https://developer.android.com/reference/android/database/DataSetObserver.html
DataSource	A										<section class="prog__container"><pre><code>public interface DataSource</code></pre></section>	https://developer.android.com/reference/javax/sql/DataSource.html
DataTruncation	A										<section class="prog__container"><pre><code>public class DataTruncation</code></pre>An exception thrown as a <code>DataTruncation</code> exception (on writes) or reported as a <code>DataTruncation</code> warning (on reads) when a data values is unexpectedly truncated for reasons other than its having execeeded <code>MaxFieldSize</code>.</section>	https://developer.android.com/reference/java/sql/DataTruncation.html
DatabaseErrorHandler	A										<section class="prog__container"><pre><code>public interface DatabaseErrorHandler</code></pre>An interface to let apps define an action to take when database corruption is detected.</section>	https://developer.android.com/reference/android/database/DatabaseErrorHandler.html
DatabaseMetaData	A										<section class="prog__container"><pre><code>public interface DatabaseMetaData</code></pre>Comprehensive information about the database as a whole.</section>	https://developer.android.com/reference/java/sql/DatabaseMetaData.html
DatabaseUtils	A										<section class="prog__container"><pre><code>public class DatabaseUtils</code></pre>Static utility methods for dealing with databases and <code>Cursor</code>s.</section>	https://developer.android.com/reference/android/database/DatabaseUtils.html
DatabaseUtils.InsertHelper	A										<section class="prog__container"><pre><code>public static class DatabaseUtils.InsertHelper</code></pre><p class="caution"><strong> This class was deprecated in API level 17.</strong><br/> Use <code>SQLiteStatement</code> instead.</section>	https://developer.android.com/reference/android/database/DatabaseUtils.InsertHelper.html
DatabaseUtilsCompat	A										<section class="prog__container"><pre><code>public final class DatabaseUtilsCompat</code></pre>Helper for accessing features in <code>DatabaseUtils</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/database/DatabaseUtilsCompat.html
DatagramChannel	A										<section class="prog__container"><pre><code>public abstract class DatagramChannel</code></pre>A selectable channel for datagram-oriented sockets.</section>	https://developer.android.com/reference/java/nio/channels/DatagramChannel.html
DatagramPacket	A										<section class="prog__container"><pre><code>public final class DatagramPacket</code></pre>This class represents a datagram packet.</section>	https://developer.android.com/reference/java/net/DatagramPacket.html
DatagramSocket	A										<section class="prog__container"><pre><code>public class DatagramSocket</code></pre>This class represents a socket for sending and receiving datagram packets.</section>	https://developer.android.com/reference/java/net/DatagramSocket.html
DatagramSocketImpl	A										<section class="prog__container"><pre><code>public abstract class DatagramSocketImpl</code></pre>Abstract datagram and multicast socket implementation base class.</section>	https://developer.android.com/reference/java/net/DatagramSocketImpl.html
DatagramSocketImplFactory	A										<section class="prog__container"><pre><code>public interface DatagramSocketImplFactory</code></pre>This interface defines a factory for datagram socket implementations. It is used by the classes <code>DatagramSocket</code> to create actual socket implementations.</section>	https://developer.android.com/reference/java/net/DatagramSocketImplFactory.html
DatatypeConfigurationException	A										<section class="prog__container"><pre><code>public class DatatypeConfigurationException</code></pre></section>	https://developer.android.com/reference/javax/xml/datatype/DatatypeConfigurationException.html
DatatypeConstants	A										<section class="prog__container"><pre><code>public final class DatatypeConstants</code></pre></section>	https://developer.android.com/reference/javax/xml/datatype/DatatypeConstants.html
DatatypeConstants.Field	A										<section class="prog__container"><pre><code>public static final class DatatypeConstants.Field</code></pre>Type-safe enum class that represents six fields of the <code>Duration</code> class.</section>	https://developer.android.com/reference/javax/xml/datatype/DatatypeConstants.Field.html
DatatypeFactory	A										<section class="prog__container"><pre><code>public abstract class DatatypeFactory</code></pre></section>	https://developer.android.com/reference/javax/xml/datatype/DatatypeFactory.html
Date	D								*[[sql.Date]], <section class="prog__container"><pre><code>public class Date</code></pre></section>\n*[[util.Date]], <section class="prog__container"><pre><code>public class Date</code></pre>The class <code>Date</code> represents a specific instant in time, with millisecond precision.</section>			
DateFormat	D								*[[icu.text.DateFormat]], <section class="prog__container"><pre><code>public abstract class DateFormat</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>DateFormat</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.</section>\n*[[format.DateFormat]], <section class="prog__container"><pre><code>public class DateFormat</code></pre>Utility class for producing strings with formatted date/time.</section>\n*[[java.text.DateFormat]], <section class="prog__container"><pre><code>public abstract class DateFormat</code></pre><code>DateFormat</code> is an abstract class for date/time formatting subclasses which formats and parses dates or time in a language-independent manner. The date/time formatting subclass, such as <code>SimpleDateFormat</code>, allows for formatting (i.e., date -&gt; text), parsing (text -&gt; date), and normalization. The date is represented as a <code>Date</code> object or as the milliseconds since January 1, 1970, 00:00:00 GMT.</section>			
DateFormat.BooleanAttribute	A										<section class="prog__container"><pre><code>public static final enum DateFormat.BooleanAttribute</code></pre>boolean attributes</section>	https://developer.android.com/reference/android/icu/text/DateFormat.BooleanAttribute.html
DateFormat.Field	D								*[[icu.text.DateFormat.Field]], <section class="prog__container"><pre><code>public static class DateFormat.Field</code></pre>The instances of this inner class are used as attribute keys and values in AttributedCharacterIterator that DateFormat.formatToCharacterIterator() method returns.</section>\n*[[java.text.DateFormat.Field]], <section class="prog__container"><pre><code>public static class DateFormat.Field</code></pre>Defines constants that are used as attribute keys in the <code>AttributedCharacterIterator</code> returned from <code>DateFormat.formatToCharacterIterator</code> and as field identifiers in <code>FieldPosition</code>.</section>			
DateFormatSymbols	D								*[[icu.text.DateFormatSymbols]], <section class="prog__container"><pre><code>public class DateFormatSymbols</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>DateFormatSymbols</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.</section>\n*[[java.text.DateFormatSymbols]], <section class="prog__container"><pre><code>public class DateFormatSymbols</code></pre><code>DateFormatSymbols</code> is a public class for encapsulating localizable date-time formatting data, such as the names of the months, the names of the days of the week, and the time zone data. <code>DateFormat</code> and <code>SimpleDateFormat</code> both use <code>DateFormatSymbols</code> to encapsulate this information.</section>			
DateInterval	A										<section class="prog__container"><pre><code>public final class DateInterval</code></pre>This class represents date interval. It is a pair of long representing from date 1 to date 2.</section>	https://developer.android.com/reference/android/icu/util/DateInterval.html
DateIntervalFormat	A										<section class="prog__container"><pre><code>public class DateIntervalFormat</code></pre>DateIntervalFormat is a class for formatting and parsing date intervals in a language-independent manner. Only formatting is supported. Parsing is not supported.</section>	https://developer.android.com/reference/android/icu/text/DateIntervalFormat.html
DateIntervalInfo	A										<section class="prog__container"><pre><code>public class DateIntervalInfo</code></pre>DateIntervalInfo is a public class for encapsulating localizable date time interval patterns. It is used by DateIntervalFormat.</section>	https://developer.android.com/reference/android/icu/text/DateIntervalInfo.html
DateIntervalInfo.PatternInfo	A										<section class="prog__container"><pre><code>public static final class DateIntervalInfo.PatternInfo</code></pre>PatternInfo class saves the first and second part of interval pattern, and whether the interval pattern is earlier date first.</section>	https://developer.android.com/reference/android/icu/text/DateIntervalInfo.PatternInfo.html
DateKeyListener	A										<section class="prog__container"><pre><code>public class DateKeyListener</code></pre>For entering dates in a text field.</section>	https://developer.android.com/reference/android/text/method/DateKeyListener.html
DatePicker	A										<section class="prog__container"><pre><code>public class DatePicker</code></pre>Provides a widget for selecting a date.</section>	https://developer.android.com/reference/android/widget/DatePicker.html
DatePicker.OnDateChangedListener	A										<section class="prog__container"><pre><code>public static interface DatePicker.OnDateChangedListener</code></pre>The callback used to indicate the user changed the date.</section>	https://developer.android.com/reference/android/widget/DatePicker.OnDateChangedListener.html
DatePickerDialog	A										<section class="prog__container"><pre><code>public class DatePickerDialog</code></pre>A simple dialog containing an <code>DatePicker</code>.</section>	https://developer.android.com/reference/android/app/DatePickerDialog.html
DatePickerDialog.OnDateSetListener	A										<section class="prog__container"><pre><code>public static interface DatePickerDialog.OnDateSetListener</code></pre>The listener used to indicate the user has finished selecting a date.</section>	https://developer.android.com/reference/android/app/DatePickerDialog.OnDateSetListener.html
DateSorter	A										<section class="prog__container"><pre><code>public class DateSorter</code></pre>Sorts dates into the following groups: Today Yesterday seven days ago one month ago older than a month ago</section>	https://developer.android.com/reference/android/webkit/DateSorter.html
DateTimeKeyListener	A										<section class="prog__container"><pre><code>public class DateTimeKeyListener</code></pre>For entering dates and times in the same text field.</section>	https://developer.android.com/reference/android/text/method/DateTimeKeyListener.html
DateTimePatternGenerator	A										<section class="prog__container"><pre><code>public class DateTimePatternGenerator</code></pre>This class provides flexible generation of date format patterns, like "yy-MM-dd". The user can build up the generator by adding successive patterns. Once that is done, a query can be made using a "skeleton", which is a pattern which just includes the desired fields and lengths. The generator will return the "best fit" pattern corresponding to that skeleton.</section>	https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.html
DateTimePatternGenerator.PatternInfo	A										<section class="prog__container"><pre><code>public static final class DateTimePatternGenerator.PatternInfo</code></pre>PatternInfo supplies output parameters for addPattern(...). It is used because Java doesn't have real output parameters. It is treated like a struct (eg Point), so all fields are public.</section>	https://developer.android.com/reference/android/icu/text/DateTimePatternGenerator.PatternInfo.html
DateUtils	A										<section class="prog__container"><pre><code>public class DateUtils</code></pre>This class contains various date-related utilities for creating text for things like elapsed time and date ranges, strings for days of the week and months, and AM/PM text etc.</section>	https://developer.android.com/reference/android/text/format/DateUtils.html
DeadObjectException	A										<section class="prog__container"><pre><code>public class DeadObjectException</code></pre>The object you are calling has died, because its hosting process no longer exists.</section>	https://developer.android.com/reference/android/os/DeadObjectException.html
DeadSystemException	A										<section class="prog__container"><pre><code>public class DeadSystemException</code></pre>The core Android system has died and is going through a runtime restart. All running apps will be promptly killed.</section>	https://developer.android.com/reference/android/os/DeadSystemException.html
Debug	A										<section class="prog__container"><pre><code>public final class Debug</code></pre>Provides various debugging methods for Android applications, including tracing and allocation counts.</section>	https://developer.android.com/reference/android/os/Debug.html
Debug.InstructionCount	A										<section class="prog__container"><pre><code>public static class Debug.InstructionCount</code></pre><p class="caution"><strong> This class was deprecated in API level 23.</strong><br/> Instruction counting is no longer supported.</section>	https://developer.android.com/reference/android/os/Debug.InstructionCount.html
Debug.MemoryInfo	A										<section class="prog__container"><pre><code>public static class Debug.MemoryInfo</code></pre>This class is used to retrieved various statistics about the memory mappings for this process. The returned info is broken down by dalvik, native, and other. All results are in kB.</section>	https://developer.android.com/reference/android/os/Debug.MemoryInfo.html
DebugUtils	A										<section class="prog__container"><pre><code>public class DebugUtils</code></pre></section>	https://developer.android.com/reference/android/util/DebugUtils.html
DecelerateInterpolator	A										<section class="prog__container"><pre><code>public class DecelerateInterpolator</code></pre>An interpolator where the rate of change starts out quickly and and then decelerates.</section>	https://developer.android.com/reference/android/view/animation/DecelerateInterpolator.html
DecimalFormat	D								*[[icu.text.DecimalFormat]], <section class="prog__container"><pre><code>public class DecimalFormat</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>DecimalFormat</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'. <code>DecimalFormat</code> is a concrete subclass of <code>NumberFormat</code> that formats decimal numbers. It has a variety of features designed to make it possible to parse and format numbers in any locale, including support for Western, Arabic, or Indic digits. It also supports different flavors of numbers, including integers ("123"), fixed-point numbers ("123.4"), scientific notation ("1.23E4"), percentages ("12%"), and currency amounts ("$123.00", "USD123.00", "123.00 US dollars"). All of these flavors can be easily localized.</section>\n*[[java.text.DecimalFormat]], <section class="prog__container"><pre><code>public class DecimalFormat</code></pre><code>DecimalFormat</code> is a concrete subclass of <code>NumberFormat</code> that formats decimal numbers. It has a variety of features designed to make it possible to parse and format numbers in any locale, including support for Western, Arabic, and Indic digits. It also supports different kinds of numbers, including integers (123), fixed-point numbers (123.4), scientific notation (1.23E4), percentages (12%), and currency amounts ($123). All of these can be localized.</section>			
DecimalFormatSymbols	D								*[[icu.text.DecimalFormatSymbols]], <section class="prog__container"><pre><code>public class DecimalFormatSymbols</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>DecimalFormatSymbols</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'. This class represents the set of symbols (such as the decimal separator, the grouping separator, and so on) needed by <code>DecimalFormat</code> to format numbers. <code>DecimalFormat</code> creates for itself an instance of <code>DecimalFormatSymbols</code> from its locale data. If you need to change any of these symbols, you can get the <code>DecimalFormatSymbols</code> object from your <code>DecimalFormat</code> and modify it.</section>\n*[[java.text.DecimalFormatSymbols]], <section class="prog__container"><pre><code>public class DecimalFormatSymbols</code></pre>This class represents the set of symbols (such as the decimal separator, the grouping separator, and so on) needed by <code>DecimalFormat</code> to format numbers. <code>DecimalFormat</code> creates for itself an instance of <code>DecimalFormatSymbols</code> from its locale data. If you need to change any of these symbols, you can get the <code>DecimalFormatSymbols</code> object from your <code>DecimalFormat</code> and modify it.</section>			
DeclHandler	A										<section class="prog__container"><pre><code>public interface DeclHandler</code></pre>SAX2 extension handler for DTD declaration events. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/ext/DeclHandler.html
DecorCaptionView	A										This class represents the special screen elements to control a window on freeform environment.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
DecorContentParent	A										Implemented by the top-level decor layout for a window.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
DefaultDatabaseErrorHandler	A										<section class="prog__container"><pre><code>public final class DefaultDatabaseErrorHandler</code></pre>Default class used to define the action to take when database corruption is reported by sqlite.</section>	https://developer.android.com/reference/android/database/DefaultDatabaseErrorHandler.html
DefaultHandler	A										<section class="prog__container"><pre><code>public class DefaultHandler</code></pre>Default base class for SAX2 event handlers. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/helpers/DefaultHandler.html
DefaultHandler2	A										<section class="prog__container"><pre><code>public class DefaultHandler2</code></pre>This class extends the SAX2 base handler class to support the SAX2 <code>LexicalHandler</code>, <code>DeclHandler</code>, and <code>EntityResolver2</code> extensions. Except for overriding the original SAX1 <code>resolveEntity()</code> method the added handler methods just return. Subclassers may override everything on a method-by-method basis. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> </blockquote></section>	https://developer.android.com/reference/org/xml/sax/ext/DefaultHandler2.html
DefaultItemAnimator	A										<section class="prog__container"><pre><code>public class DefaultItemAnimator</code></pre>This implementation of <code>RecyclerView.ItemAnimator</code> provides basic animations on remove, add, and move events that happen to the items in a RecyclerView. RecyclerView uses a DefaultItemAnimator by default.</section>	https://developer.android.com/reference/android/support/v7/widget/DefaultItemAnimator.html
Deflater	A										<section class="prog__container"><pre><code>public class Deflater</code></pre>This class provides support for general purpose compression using the popular ZLIB compression library. The ZLIB compression library was initially developed as part of the PNG graphics standard and is not protected by patents. It is fully described in the specifications at the java.util.zip package description.</section>	https://developer.android.com/reference/java/util/zip/Deflater.html
DeflaterInputStream	A										<section class="prog__container"><pre><code>public class DeflaterInputStream</code></pre>Implements an input stream filter for compressing data in the "deflate" compression format.</section>	https://developer.android.com/reference/java/util/zip/DeflaterInputStream.html
DeflaterOutputStream	A										<section class="prog__container"><pre><code>public class DeflaterOutputStream</code></pre>This class implements an output stream filter for compressing data in the "deflate" compression format. It is also used as the basis for other types of compression filters, such as GZIPOutputStream.</section>	https://developer.android.com/reference/java/util/zip/DeflaterOutputStream.html
Delayed	A										<section class="prog__container"><pre><code>public interface Delayed</code></pre>A mix-in style interface for marking objects that should be acted upon after a given delay.</section>	https://developer.android.com/reference/java/util/concurrent/Delayed.html
DeniedByServerException	A										<section class="prog__container"><pre><code>public final class DeniedByServerException</code></pre>Exception thrown when the provisioning server or key server denies a certficate or license for a device.</section>	https://developer.android.com/reference/android/media/DeniedByServerException.html
Deprecated	A										<section class="prog__container"><pre><code>public abstract @interface Deprecated</code></pre>A program element annotated @Deprecated is one that programmers are discouraged from using, typically because it is dangerous, or because a better alternative exists. Compilers warn when a deprecated program element is used or overridden in non-deprecated code.</section>	https://developer.android.com/reference/java/lang/Deprecated.html
Deque	A										<section class="prog__container"><pre><code>public interface Deque</code></pre>A linear collection that supports element insertion and removal at both ends. The name <i>deque</i> is short for "double ended queue" and is usually pronounced "deck". Most <code>Deque</code> implementations place no fixed limits on the number of elements they may contain, but this interface supports capacity-restricted deques as well as those with no fixed size limit.</section>	https://developer.android.com/reference/java/util/Deque.html
DestroyFailedException	A										<section class="prog__container"><pre><code>public class DestroyFailedException</code></pre>Signals that a <code>destroy</code> operation failed.</section>	https://developer.android.com/reference/javax/security/auth/DestroyFailedException.html
Destroyable	A										<section class="prog__container"><pre><code>public interface Destroyable</code></pre>Objects such as credentials may optionally implement this interface to provide the capability to destroy its contents.</section>	https://developer.android.com/reference/javax/security/auth/Destroyable.html
DetailsFragment	A										<section class="prog__container"><pre><code>public class DetailsFragment</code></pre>A fragment for creating Leanback details screens.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/DetailsFragment.html
DetailsOverviewLogoPresenter	A										<section class="prog__container"><pre><code>public class DetailsOverviewLogoPresenter</code></pre>Presenter that responsible to create a ImageView and bind to DetailsOverviewRow. The default implementation uses <code>getImageDrawable()</code> and binds to <code>ImageView</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/DetailsOverviewLogoPresenter.html
DetailsOverviewLogoPresenter.ViewHolder	A										<section class="prog__container"><pre><code>public static class DetailsOverviewLogoPresenter.ViewHolder</code></pre>ViewHolder for Logo view of DetailsOverviewRow.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/DetailsOverviewLogoPresenter.ViewHolder.html
DetailsOverviewRow	A										<section class="prog__container"><pre><code>public class DetailsOverviewRow</code></pre>An overview <code>Row</code> for a details fragment. This row consists of an image, a description view, and optionally a series of <code>Action</code>s that can be taken for the item. <h3>Actions</h3> Application uses <code>setActionsAdapter(ObjectAdapter)</code> to set actions on the overview row. <code>SparseArrayObjectAdapter</code> is recommended for easily updating actions while maintaining the order. The application can add or remove actions on the UI thread after the row is bound to a view. <h3>Updating main item</h3> After the row is bound to a view, the application may call <code>setItem(Object)</code> on UI thread and the view will be updated. <h3>Updating image</h3> After the row is bound to view, the application may change the image by calling <code>setImageBitmap(Context, Bitmap)</code> or <code>setImageDrawable(Drawable)</code> on the UI thread, and the view will be updated.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/DetailsOverviewRow.html
DetailsOverviewRow.Listener	A										<section class="prog__container"><pre><code>public static class DetailsOverviewRow.Listener</code></pre>Listener for changes of DetailsOverviewRow.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/DetailsOverviewRow.Listener.html
DetailsOverviewRowPresenter	A										<section class="prog__container"><pre><code>public class DetailsOverviewRowPresenter</code></pre><p class="caution"><strong> This class is deprecated.</strong><br/> Use <code>FullWidthDetailsOverviewRowPresenter</code></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/DetailsOverviewRowPresenter.html
DetailsOverviewRowPresenter.ViewHolder	A										<section class="prog__container"><pre><code>public final class DetailsOverviewRowPresenter.ViewHolder</code></pre>A ViewHolder for the DetailsOverviewRow.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/DetailsOverviewRowPresenter.ViewHolder.html
DetailsSupportFragment	A										<section class="prog__container"><pre><code>public class DetailsSupportFragment</code></pre>A fragment for creating Leanback details screens.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/DetailsSupportFragment.html
DeviceAdminInfo	A										<section class="prog__container"><pre><code>public final class DeviceAdminInfo</code></pre>This class is used to specify meta information of a device administrator component.</section>	https://developer.android.com/reference/android/app/admin/DeviceAdminInfo.html
DeviceAdminReceiver	A										<section class="prog__container"><pre><code>public class DeviceAdminReceiver</code></pre>Base class for implementing a device administration component. This class provides a convenience for interpreting the raw intent actions that are sent by the system.</section>	https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver.html
DevicePolicyManager	A										<section class="prog__container"><pre><code>public class DevicePolicyManager</code></pre>Public interface for managing policies enforced on a device. Most clients of this class must be registered with the system as a device administrator. Additionally, a device administrator may be registered as either a profile or device owner. A given method is accessible to all device administrators unless the documentation for that method specifies that it is restricted to either device or profile owners. Any application calling an api may only pass as an argument a device administrator component it owns. Otherwise, a <code>SecurityException</code> will be thrown. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/app/admin/DevicePolicyManager.html
DexClassLoader	A										<section class="prog__container"><pre><code>public class DexClassLoader</code></pre>A class loader that loads classes from <code>.jar</code> and <code>.apk</code> files containing a <code>classes.dex</code> entry. This can be used to execute code not installed as part of an application.</section>	https://developer.android.com/reference/dalvik/system/DexClassLoader.html
DexFile	A										<section class="prog__container"><pre><code>public final class DexFile</code></pre>Manipulates DEX files. The class is similar in principle to <code>ZipFile</code>. It is used primarily by class loaders.</section>	https://developer.android.com/reference/dalvik/system/DexFile.html
DhcpInfo	A										<section class="prog__container"><pre><code>public class DhcpInfo</code></pre>A simple object for retrieving the results of a DHCP request.</section>	https://developer.android.com/reference/android/net/DhcpInfo.html
DialerFilter	A										<section class="prog__container"><pre><code>public class DialerFilter</code></pre></section>	https://developer.android.com/reference/android/widget/DialerFilter.html
DialerKeyListener	A										<section class="prog__container"><pre><code>public class DialerKeyListener</code></pre>For dialing-only text entry</section>	https://developer.android.com/reference/android/text/method/DialerKeyListener.html
Dialog	A										<section class="prog__container"><pre><code>public class Dialog</code></pre>Base class for Dialogs.</section>	https://developer.android.com/reference/android/app/Dialog.html
DialogFragment	D								*[[android.app.DialogFragment]], <section class="prog__container"><pre><code>public class DialogFragment</code></pre>A fragment that displays a dialog window, floating on top of its activity's window. This fragment contains a Dialog object, which it displays as appropriate based on the fragment's state. Control of the dialog (deciding when to show, hide, dismiss it) should be done through the API here, not with direct calls on the dialog.</section>\n*[[v4.app.DialogFragment]], <section class="prog__container"><pre><code>public class DialogFragment</code></pre>Static library support version of the framework's <code>DialogFragment</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>			
DialogInterface	A										<section class="prog__container"><pre><code>public interface DialogInterface</code></pre></section>	https://developer.android.com/reference/android/content/DialogInterface.html
DialogInterface.OnCancelListener	A										<section class="prog__container"><pre><code>public static interface DialogInterface.OnCancelListener</code></pre>Interface used to allow the creator of a dialog to run some code when the dialog is canceled.</section>	https://developer.android.com/reference/android/content/DialogInterface.OnCancelListener.html
DialogInterface.OnClickListener	A										<section class="prog__container"><pre><code>public static interface DialogInterface.OnClickListener</code></pre>Interface used to allow the creator of a dialog to run some code when an item on the dialog is clicked..</section>	https://developer.android.com/reference/android/content/DialogInterface.OnClickListener.html
DialogInterface.OnDismissListener	A										<section class="prog__container"><pre><code>public static interface DialogInterface.OnDismissListener</code></pre>Interface used to allow the creator of a dialog to run some code when the dialog is dismissed.</section>	https://developer.android.com/reference/android/content/DialogInterface.OnDismissListener.html
DialogInterface.OnKeyListener	A										<section class="prog__container"><pre><code>public static interface DialogInterface.OnKeyListener</code></pre>Interface definition for a callback to be invoked when a key event is dispatched to this dialog. The callback will be invoked before the key event is given to the dialog.</section>	https://developer.android.com/reference/android/content/DialogInterface.OnKeyListener.html
DialogInterface.OnMultiChoiceClickListener	A										<section class="prog__container"><pre><code>public static interface DialogInterface.OnMultiChoiceClickListener</code></pre>Interface used to allow the creator of a dialog to run some code when an item in a multi-choice dialog is clicked.</section>	https://developer.android.com/reference/android/content/DialogInterface.OnMultiChoiceClickListener.html
DialogInterface.OnShowListener	A										<section class="prog__container"><pre><code>public static interface DialogInterface.OnShowListener</code></pre>Interface used to allow the creator of a dialog to run some code when the dialog is shown.</section>	https://developer.android.com/reference/android/content/DialogInterface.OnShowListener.html
DialogPreference	D								*[[android.preference.DialogPreference]], <section class="prog__container"><pre><code>public abstract class DialogPreference</code></pre>A base class for <code>Preference</code> objects that are dialog-based. These preferences will, when clicked, open a dialog showing the actual preference controls.</section>\n*[[v7.preference.DialogPreference]], <section class="prog__container"><pre><code>public abstract class DialogPreference</code></pre>A base class for <code>Preference</code> objects that are dialog-based. These preferences will, when clicked, open a dialog showing the actual preference controls.</section>			
DialogPreference.TargetFragment	A										<section class="prog__container"><pre><code>public static interface DialogPreference.TargetFragment</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/DialogPreference.TargetFragment.html
Dictionary	A										<section class="prog__container"><pre><code>public abstract class Dictionary</code></pre>The <code>Dictionary</code> class is the abstract parent of any class, such as <code>Hashtable</code>, which maps keys to values. Every key and every value is an object. In any one <tt>Dictionary</tt> object, every key is associated with at most one value. Given a <tt>Dictionary</tt> and a key, the associated element can be looked up. Any non-<code>null</code> object can be used as a key and as a value.</section>	https://developer.android.com/reference/java/util/Dictionary.html
DiffUtil	A										<section class="prog__container"><pre><code>public class DiffUtil</code></pre>DiffUtil is a utility class that can calculate the difference between two lists and output a list of update operations that converts the first list into the second one.</section>	https://developer.android.com/reference/android/support/v7/util/DiffUtil.html
DiffUtil.Callback	A										<section class="prog__container"><pre><code>public static abstract class DiffUtil.Callback</code></pre>A Callback class used by DiffUtil while calculating the diff between two lists.</section>	https://developer.android.com/reference/android/support/v7/util/DiffUtil.Callback.html
DiffUtil.DiffResult	A										<section class="prog__container"><pre><code>public static class DiffUtil.DiffResult</code></pre>This class holds the information about the result of a <code>calculateDiff(Callback, boolean)</code> call.</section>	https://developer.android.com/reference/android/support/v7/util/DiffUtil.DiffResult.html
DigestException	A										<section class="prog__container"><pre><code>public class DigestException</code></pre>This is the generic Message Digest exception.</section>	https://developer.android.com/reference/java/security/DigestException.html
DigestInputStream	A										<section class="prog__container"><pre><code>public class DigestInputStream</code></pre>A transparent stream that updates the associated message digest using the bits going through the stream.</section>	https://developer.android.com/reference/java/security/DigestInputStream.html
DigestOutputStream	A										<section class="prog__container"><pre><code>public class DigestOutputStream</code></pre>A transparent stream that updates the associated message digest using the bits going through the stream.</section>	https://developer.android.com/reference/java/security/DigestOutputStream.html
DigitalClock	A										<section class="prog__container"><pre><code>public class DigitalClock</code></pre><p class="caution"><strong> This class was deprecated in API level 17.</strong><br/> It is recommended you use <code>TextClock</code> instead.</section>	https://developer.android.com/reference/android/widget/DigitalClock.html
DigitsKeyListener	A										<section class="prog__container"><pre><code>public class DigitsKeyListener</code></pre>For digits-only text entry</section>	https://developer.android.com/reference/android/text/method/DigitsKeyListener.html
DimenRes	A										<section class="prog__container"><pre><code>public abstract @interface DimenRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be a dimension resource reference (e.g. <code>android.R.dimen.app_icon_size</code>).</section>	https://developer.android.com/reference/android/support/annotation/DimenRes.html
Dimension	A										<section class="prog__container"><pre><code>public abstract @interface Dimension</code></pre>Denotes that an integer parameter, field or method return value is expected to represent a dimension.</section>	https://developer.android.com/reference/android/support/annotation/Dimension.html
DisconnectCause	A										<section class="prog__container"><pre><code>public final class DisconnectCause</code></pre>Describes the cause of a disconnected call. This always includes a code describing the generic cause of the disconnect. Optionally, it may include a label and/or description to display to the user. It is the responsibility of the <code>ConnectionService</code> to provide localized versions of the label and description. It also may contain a reason for the disconnect, which is intended for logging and not for display to the user.</section>	https://developer.android.com/reference/android/telecom/DisconnectCause.html
DiscretePathEffect	A										<section class="prog__container"><pre><code>public class DiscretePathEffect</code></pre></section>	https://developer.android.com/reference/android/graphics/DiscretePathEffect.html
Display	A										<section class="prog__container"><pre><code>public final class Display</code></pre>Provides information about the size and density of a logical display.</section>	https://developer.android.com/reference/android/view/Display.html
Display.HdrCapabilities	A										<section class="prog__container"><pre><code>public static final class Display.HdrCapabilities</code></pre>Encapsulates the HDR capabilities of a given display. For example, what HDR types it supports and details about the desired luminance data.</section>	https://developer.android.com/reference/android/view/Display.HdrCapabilities.html
Display.Mode	A										<section class="prog__container"><pre><code>public static final class Display.Mode</code></pre>A mode supported by a given display.</section>	https://developer.android.com/reference/android/view/Display.Mode.html
DisplayContext	A										<section class="prog__container"><pre><code>public final enum DisplayContext</code></pre>Display context settings. Note, the specific numeric values are internal and may change.</section>	https://developer.android.com/reference/android/icu/text/DisplayContext.html
DisplayContext.Type	A										<section class="prog__container"><pre><code>public static final enum DisplayContext.Type</code></pre>Type values for DisplayContext</section>	https://developer.android.com/reference/android/icu/text/DisplayContext.Type.html
DisplayManager	A										<section class="prog__container"><pre><code>public final class DisplayManager</code></pre>Manages the properties of attached displays.</section>	https://developer.android.com/reference/android/hardware/display/DisplayManager.html
DisplayManager.DisplayListener	A										<section class="prog__container"><pre><code>public static interface DisplayManager.DisplayListener</code></pre>Listens for changes in available display devices.</section>	https://developer.android.com/reference/android/hardware/display/DisplayManager.DisplayListener.html
DisplayManagerCompat	A										<section class="prog__container"><pre><code>public abstract class DisplayManagerCompat</code></pre>Helper for accessing features in <code>DisplayManager</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/hardware/display/DisplayManagerCompat.html
DisplayMetrics	A										<section class="prog__container"><pre><code>public class DisplayMetrics</code></pre>A structure describing general information about a display, such as its size, density, and font scaling.</section>	https://developer.android.com/reference/android/util/DisplayMetrics.html
DividerItemDecoration	A										<section class="prog__container"><pre><code>public class DividerItemDecoration</code></pre>DividerItemDecoration is a <code>RecyclerView.ItemDecoration</code> that can be used as a divider between items of a <code>LinearLayoutManager</code>. It supports both <code>HORIZONTAL</code> and <code>VERTICAL</code> orientations. <pre> mDividerItemDecoration = new DividerItemDecoration(recyclerView.getContext(), mLayoutManager.getOrientation()); recyclerView.addItemDecoration(mDividerItemDecoration); </pre></section>	https://developer.android.com/reference/android/support/v7/widget/DividerItemDecoration.html
DividerPresenter	A										<section class="prog__container"><pre><code>public class DividerPresenter</code></pre>DividerPresenter provides a default presentation for <code>DividerRow</code> in HeadersFragment.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/DividerPresenter.html
DividerRow	A										<section class="prog__container"><pre><code>public class DividerRow</code></pre>Used to represent divider in HeadersFragment.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/DividerRow.html
DngCreator	A										<section class="prog__container"><pre><code>public final class DngCreator</code></pre>The <code>DngCreator</code> class provides functions to write raw pixel data as a DNG file.</section>	https://developer.android.com/reference/android/hardware/camera2/DngCreator.html
Document	A										<section class="prog__container"><pre><code>public interface Document</code></pre>The <code>Document</code> interface represents the entire HTML or XML document. Conceptually, it is the root of the document tree, and provides the primary access to the document's data.</section>	https://developer.android.com/reference/org/w3c/dom/Document.html
DocumentBuilder	A										<section class="prog__container"><pre><code>public abstract class DocumentBuilder</code></pre>Defines the API to obtain DOM Document instances from an XML document. Using this class, an application programmer can obtain a <code>Document</code> from XML.</section>	https://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html
DocumentBuilderFactory	A										<section class="prog__container"><pre><code>public abstract class DocumentBuilderFactory</code></pre>Defines a factory API that enables applications to obtain a parser that produces DOM object trees from XML documents.</section>	https://developer.android.com/reference/javax/xml/parsers/DocumentBuilderFactory.html
DocumentFile	A										<section class="prog__container"><pre><code>public abstract class DocumentFile</code></pre>Representation of a document backed by either a <code>DocumentsProvider</code> or a raw file on disk. This is a utility class designed to emulate the traditional <code>File</code> interface. It offers a simplified view of a tree of documents, but it has substantial overhead. For optimal performance and a richer feature set, use the <code>DocumentsContract</code> methods and constants directly.</section>	https://developer.android.com/reference/android/support/v4/provider/DocumentFile.html
DocumentFragment	A										<section class="prog__container"><pre><code>public interface DocumentFragment</code></pre><code>DocumentFragment</code> is a "lightweight" or "minimal" <code>Document</code> object. It is very common to want to be able to extract a portion of a document's tree or to create a new fragment of a document. Imagine implementing a user command like cut or rearranging a document by moving fragments around. It is desirable to have an object which can hold such fragments and it is quite natural to use a Node for this purpose. While it is true that a <code>Document</code> object could fulfill this role, a <code>Document</code> object can potentially be a heavyweight object, depending on the underlying implementation. What is really needed for this is a very lightweight object. <code>DocumentFragment</code> is such an object.</section>	https://developer.android.com/reference/org/w3c/dom/DocumentFragment.html
DocumentHandler	A										<section class="prog__container"><pre><code>public interface DocumentHandler</code></pre><p class="caution"><strong> This interface was deprecated in API level 1.</strong><br/> This interface has been replaced by the SAX2 <code>ContentHandler</code> interface, which includes Namespace support.</section>	https://developer.android.com/reference/org/xml/sax/DocumentHandler.html
DocumentType	A										<section class="prog__container"><pre><code>public interface DocumentType</code></pre>Each <code>Document</code> has a <code>doctype</code> attribute whose value is either <code>null</code> or a <code>DocumentType</code> object. The <code>DocumentType</code> interface in the DOM Core provides an interface to the list of entities that are defined for the document, and little else because the effect of namespaces and the various XML schema efforts on DTD representation are not clearly understood as of this writing.</section>	https://developer.android.com/reference/org/w3c/dom/DocumentType.html
Documented	A										<section class="prog__container"><pre><code>public abstract @interface Documented</code></pre>Indicates that annotations with a type are to be documented by javadoc and similar tools by default. This type should be used to annotate the declarations of types whose annotations affect the use of annotated elements by their clients. If a type declaration is annotated with Documented, its annotations become part of the public API of the annotated elements.</section>	https://developer.android.com/reference/java/lang/annotation/Documented.html
DocumentsContract	A										<section class="prog__container"><pre><code>public final class DocumentsContract</code></pre>Defines the contract between a documents provider and the platform.</section>	https://developer.android.com/reference/android/provider/DocumentsContract.html
DocumentsContract.Document	A										<section class="prog__container"><pre><code>public static final class DocumentsContract.Document</code></pre>Constants related to a document, including <code>Cursor</code> column names and flags.</section>	https://developer.android.com/reference/android/provider/DocumentsContract.Document.html
DocumentsContract.Root	A										<section class="prog__container"><pre><code>public static final class DocumentsContract.Root</code></pre>Constants related to a root of documents, including <code>Cursor</code> column names and flags. A root is the start of a tree of documents, such as a physical storage device, or an account. Each root starts at the directory referenced by <code>COLUMN_DOCUMENT_ID</code>, which can recursively contain both documents and directories.</section>	https://developer.android.com/reference/android/provider/DocumentsContract.Root.html
DocumentsProvider	A										<section class="prog__container"><pre><code>public abstract class DocumentsProvider</code></pre>Base class for a document provider. A document provider offers read and write access to durable files, such as files stored on a local disk, or files in a cloud storage service. To create a document provider, extend this class, implement the abstract methods, and add it to your manifest like this: <pre class="prettyprint">&lt;manifest&gt; ... &lt;application&gt; ... &lt;provider android:name="com.example.MyCloudProvider" android:authorities="com.example.mycloudprovider" android:exported="true" android:grantUriPermissions="true" android:permission="android.permission.MANAGE_DOCUMENTS" android:enabled="@bool/isAtLeastKitKat"&gt; &lt;intent-filter&gt; &lt;action android:name="android.content.action.DOCUMENTS_PROVIDER" /&gt; &lt;/intent-filter&gt; &lt;/provider&gt; ... &lt;/application&gt; &lt;/manifest&gt;</pre></section>	https://developer.android.com/reference/android/provider/DocumentsProvider.html
DomainCombiner	A										<section class="prog__container"><pre><code>public interface DomainCombiner</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/security/DomainCombiner.html
Double	A										<section class="prog__container"><pre><code>public final class Double</code></pre>The <code>Double</code> class wraps a value of the primitive type <code>double</code> in an object. An object of type <code>Double</code> contains a single field whose type is <code>double</code>.</section>	https://developer.android.com/reference/java/lang/Double.html
Double2	D								*[[android.renderscript.Double2]], <section class="prog__container"><pre><code>public class Double2</code></pre>Vector version of the basic double type. Provides two double fields packed.</section>\n*[[v8.renderscript.Double2]], <section class="prog__container"><pre><code>public class Double2</code></pre>Class for exposing the native RenderScript double2 type back to the Android system.</section>			
Double3	D								*[[android.renderscript.Double3]], <section class="prog__container"><pre><code>public class Double3</code></pre>Vector version of the basic double type. Provides three double fields packed.</section>\n*[[v8.renderscript.Double3]], <section class="prog__container"><pre><code>public class Double3</code></pre>Class for exposing the native RenderScript double3 type back to the Android system.</section>			
Double4	D								*[[android.renderscript.Double4]], <section class="prog__container"><pre><code>public class Double4</code></pre>Vector version of the basic double type. Provides four double fields packed.</section>\n*[[v8.renderscript.Double4]], <section class="prog__container"><pre><code>public class Double4</code></pre>Class for exposing the native RenderScript double4 type back to the Android system.</section>			
DoubleAccumulator	A										<section class="prog__container"><pre><code>public class DoubleAccumulator</code></pre>One or more variables that together maintain a running <code>double</code> value updated using a supplied function. When updates (method <code>accumulate(double)</code>) are contended across threads, the set of variables may grow dynamically to reduce contention. Method <code>get()</code> (or, equivalently, <code>doubleValue()</code>) returns the current value across the variables maintaining updates.</section>	https://developer.android.com/reference/java/util/concurrent/atomic/DoubleAccumulator.html
DoubleAdder	A										<section class="prog__container"><pre><code>public class DoubleAdder</code></pre>One or more variables that together maintain an initially zero <code>double</code> sum. When updates (method <code>add(double)</code>) are contended across threads, the set of variables may grow dynamically to reduce contention. Method <code>sum()</code> (or, equivalently <code>doubleValue()</code>) returns the current total combined across the variables maintaining the sum. The order of accumulation within or across threads is not guaranteed. Thus, this class may not be applicable if numerical stability is required, especially when combining values of substantially different orders of magnitude.</section>	https://developer.android.com/reference/java/util/concurrent/atomic/DoubleAdder.html
DoubleBinaryOperator	A										<section class="prog__container"><pre><code>public interface DoubleBinaryOperator</code></pre>Represents an operation upon two <code>double</code>-valued operands and producing a <code>double</code>-valued result. This is the primitive type specialization of <code>BinaryOperator</code> for <code>double</code>.</section>	https://developer.android.com/reference/java/util/function/DoubleBinaryOperator.html
DoubleBuffer	A										<section class="prog__container"><pre><code>public abstract class DoubleBuffer</code></pre>A double buffer.</section>	https://developer.android.com/reference/java/nio/DoubleBuffer.html
DoubleConsumer	A										<section class="prog__container"><pre><code>public interface DoubleConsumer</code></pre>Represents an operation that accepts a single <code>double</code>-valued argument and returns no result. This is the primitive type specialization of <code>Consumer</code> for <code>double</code>. Unlike most other functional interfaces, <code>DoubleConsumer</code> is expected to operate via side-effects.</section>	https://developer.android.com/reference/java/util/function/DoubleConsumer.html
DoubleFunction	A										<section class="prog__container"><pre><code>public interface DoubleFunction</code></pre>Represents a function that accepts a double-valued argument and produces a result. This is the <code>double</code>-consuming primitive specialization for <code>Function</code>.</section>	https://developer.android.com/reference/java/util/function/DoubleFunction.html
DoublePredicate	A										<section class="prog__container"><pre><code>public interface DoublePredicate</code></pre>Represents a predicate (boolean-valued function) of one <code>double</code>-valued argument. This is the <code>double</code>-consuming primitive type specialization of <code>Predicate</code>.</section>	https://developer.android.com/reference/java/util/function/DoublePredicate.html
DoubleStream	A										<section class="prog__container"><pre><code>public interface DoubleStream</code></pre>A sequence of primitive double-valued elements supporting sequential and parallel aggregate operations. This is the <code>double</code> primitive specialization of <code>Stream</code>.</section>	https://developer.android.com/reference/java/util/stream/DoubleStream.html
DoubleStream.Builder	A										<section class="prog__container"><pre><code>public static interface DoubleStream.Builder</code></pre>A mutable builder for a <code>DoubleStream</code>.</section>	https://developer.android.com/reference/java/util/stream/DoubleStream.Builder.html
DoubleSummaryStatistics	A										<section class="prog__container"><pre><code>public class DoubleSummaryStatistics</code></pre>A state object for collecting statistics such as count, min, max, sum, and average.</section>	https://developer.android.com/reference/java/util/DoubleSummaryStatistics.html
DoubleSupplier	A										<section class="prog__container"><pre><code>public interface DoubleSupplier</code></pre>Represents a supplier of <code>double</code>-valued results. This is the <code>double</code>-producing primitive specialization of <code>Supplier</code>.</section>	https://developer.android.com/reference/java/util/function/DoubleSupplier.html
DoubleToIntFunction	A										<section class="prog__container"><pre><code>public interface DoubleToIntFunction</code></pre>Represents a function that accepts a double-valued argument and produces an int-valued result. This is the <code>double</code>-to-<code>int</code> primitive specialization for <code>Function</code>.</section>	https://developer.android.com/reference/java/util/function/DoubleToIntFunction.html
DoubleToLongFunction	A										<section class="prog__container"><pre><code>public interface DoubleToLongFunction</code></pre>Represents a function that accepts a double-valued argument and produces a long-valued result. This is the <code>double</code>-to-<code>long</code> primitive specialization for <code>Function</code>.</section>	https://developer.android.com/reference/java/util/function/DoubleToLongFunction.html
DoubleUnaryOperator	A										<section class="prog__container"><pre><code>public interface DoubleUnaryOperator</code></pre>Represents an operation on a single <code>double</code>-valued operand that produces a <code>double</code>-valued result. This is the primitive type specialization of <code>UnaryOperator</code> for <code>double</code>.</section>	https://developer.android.com/reference/java/util/function/DoubleUnaryOperator.html
DownloadListener	A										<section class="prog__container"><pre><code>public interface DownloadListener</code></pre></section>	https://developer.android.com/reference/android/webkit/DownloadListener.html
DownloadManager	A										<section class="prog__container"><pre><code>public class DownloadManager</code></pre>The download manager is a system service that handles long-running HTTP downloads. Clients may request that a URI be downloaded to a particular destination file. The download manager will conduct the download in the background, taking care of HTTP interactions and retrying downloads after failures or across connectivity changes and system reboots. Instances of this class should be obtained through <code>getSystemService(String)</code> by passing <code>DOWNLOAD_SERVICE</code>. Apps that request downloads through this API should register a broadcast receiver for <code>ACTION_NOTIFICATION_CLICKED</code> to appropriately handle when the user clicks on a running download in a notification or from the downloads UI. Note that the application must have the <code>INTERNET</code> permission to use this class.</section>	https://developer.android.com/reference/android/app/DownloadManager.html
DownloadManager.Query	A										<section class="prog__container"><pre><code>public static class DownloadManager.Query</code></pre>This class may be used to filter download manager queries.</section>	https://developer.android.com/reference/android/app/DownloadManager.Query.html
DownloadManager.Request	A										<section class="prog__container"><pre><code>public static class DownloadManager.Request</code></pre>This class contains all the information necessary to request a new download. The URI is the only required parameter. Note that the default download destination is a shared volume where the system might delete your file if it needs to reclaim space for system use. If this is a problem, use a location on external storage (see <code>setDestinationUri(Uri)</code>.</section>	https://developer.android.com/reference/android/app/DownloadManager.Request.html
DragAndDropPermissions	A										<section class="prog__container"><pre><code>public final class DragAndDropPermissions</code></pre><code>DragAndDropPermissions</code> controls the access permissions for the content URIs associated with a <code>DragEvent</code>.</section>	https://developer.android.com/reference/android/view/DragAndDropPermissions.html
DragAndDropPermissionsCompat	A										<section class="prog__container"><pre><code>public final class DragAndDropPermissionsCompat</code></pre>Helper for accessing features in <code>DragAndDropPermissions</code> introduced after API level 13 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v13/view/DragAndDropPermissionsCompat.html
DragEvent	A										<section class="prog__container"><pre><code>public class DragEvent</code></pre>Represents an event that is sent out by the system at various times during a drag and drop operation. It is a complex data structure that contains several important pieces of data about the operation and the underlying data.</section>	https://developer.android.com/reference/android/view/DragEvent.html
DragStartHelper	A										<section class="prog__container"><pre><code>public class DragStartHelper</code></pre>DragStartHelper is a utility class for implementing drag and drop support.</section>	https://developer.android.com/reference/android/support/v13/view/DragStartHelper.html
DragStartHelper.OnDragStartListener	A										<section class="prog__container"><pre><code>public static interface DragStartHelper.OnDragStartListener</code></pre>Interface definition for a callback to be invoked when a drag start gesture is detected.</section>	https://developer.android.com/reference/android/support/v13/view/DragStartHelper.OnDragStartListener.html
DrawFilter	A										<section class="prog__container"><pre><code>public class DrawFilter</code></pre>A DrawFilter subclass can be installed in a Canvas. When it is present, it can modify the paint that is used to draw (temporarily). With this, a filter can disable/enable antialiasing, or change the color for everything this is drawn.</section>	https://developer.android.com/reference/android/graphics/DrawFilter.html
Drawable	A										<section class="prog__container"><pre><code>public abstract class Drawable</code></pre>A Drawable is a general abstraction for "something that can be drawn." Most often you will deal with Drawable as the type of resource retrieved for drawing things to the screen; the Drawable class provides a generic API for dealing with an underlying visual resource that may take a variety of forms. Unlike a <code>View</code>, a Drawable does not have any facility to receive events or otherwise interact with the user.</section>	https://developer.android.com/reference/android/graphics/drawable/Drawable.html
Drawable.Callback	A										<section class="prog__container"><pre><code>public static interface Drawable.Callback</code></pre>Implement this interface if you want to create an animated drawable that extends <code>Drawable</code>. Upon retrieving a drawable, use <code>setCallback(android.graphics.drawable.Drawable.Callback)</code> to supply your implementation of the interface to the drawable; it uses this interface to schedule and execute animation changes.</section>	https://developer.android.com/reference/android/graphics/drawable/Drawable.Callback.html
Drawable.ConstantState	A										<section class="prog__container"><pre><code>public static abstract class Drawable.ConstantState</code></pre>This abstract class is used by <code>Drawable</code>s to store shared constant state and data between Drawables. <code>BitmapDrawable</code>s created from the same resource will for instance share a unique bitmap stored in their ConstantState.</section>	https://developer.android.com/reference/android/graphics/drawable/Drawable.ConstantState.html
DrawableCompat	A										<section class="prog__container"><pre><code>public final class DrawableCompat</code></pre>Helper for accessing features in <code>Drawable</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/graphics/drawable/DrawableCompat.html
DrawableContainer	A										<section class="prog__container"><pre><code>public class DrawableContainer</code></pre>A helper class that contains several <code>Drawable</code>s and selects which one to use. You can subclass it to create your own DrawableContainers or directly use one its child classes.</section>	https://developer.android.com/reference/android/graphics/drawable/DrawableContainer.html
DrawableContainer.DrawableContainerState	A										<section class="prog__container"><pre><code>public static abstract class DrawableContainer.DrawableContainerState</code></pre>A ConstantState that can contain several <code>Drawable</code>s. This class was made public to enable testing, and its visibility may change in a future release.</section>	https://developer.android.com/reference/android/graphics/drawable/DrawableContainer.DrawableContainerState.html
DrawableMarginSpan	A										<section class="prog__container"><pre><code>public class DrawableMarginSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/DrawableMarginSpan.html
DrawableRes	A										<section class="prog__container"><pre><code>public abstract @interface DrawableRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be a drawable resource reference (e.g. <code>android.R.attr.alertDialogIcon</code>).</section>	https://developer.android.com/reference/android/support/annotation/DrawableRes.html
DrawableWrapper	A										<section class="prog__container"><pre><code>public abstract class DrawableWrapper</code></pre>Drawable container with only one child element.</section>	https://developer.android.com/reference/android/graphics/drawable/DrawableWrapper.html
DrawerArrowDrawable	A										<section class="prog__container"><pre><code>public class DrawerArrowDrawable</code></pre>A drawable that can draw a "Drawer hamburger" menu or an arrow and animate between them.</section>	https://developer.android.com/reference/android/support/v7/graphics/drawable/DrawerArrowDrawable.html
DrawerLayout	A										<section class="prog__container"><pre><code>public class DrawerLayout</code></pre>DrawerLayout acts as a top-level container for window content that allows for interactive "drawer" views to be pulled out from one or both vertical edges of the window.</section>	https://developer.android.com/reference/android/support/v4/widget/DrawerLayout.html
DrawerLayout.DrawerListener	A										<section class="prog__container"><pre><code>public static interface DrawerLayout.DrawerListener</code></pre>Listener for monitoring events about drawers.</section>	https://developer.android.com/reference/android/support/v4/widget/DrawerLayout.DrawerListener.html
DrawerLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class DrawerLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/DrawerLayout.LayoutParams.html
DrawerLayout.SavedState	A										<section class="prog__container"><pre><code>protected static class DrawerLayout.SavedState</code></pre>State persisted across instances</section>	https://developer.android.com/reference/android/support/v4/widget/DrawerLayout.SavedState.html
DrawerLayout.SimpleDrawerListener	A										<section class="prog__container"><pre><code>public static abstract class DrawerLayout.SimpleDrawerListener</code></pre>Stub/no-op implementations of all methods of <code>DrawerLayout.DrawerListener</code>. Override this if you only care about a few of the available callback methods.</section>	https://developer.android.com/reference/android/support/v4/widget/DrawerLayout.SimpleDrawerListener.html
DreamService	A										<section class="prog__container"><pre><code>public class DreamService</code></pre>Extend this class to implement a custom dream (available to the user as a "Daydream").</section>	https://developer.android.com/reference/android/service/dreams/DreamService.html
Driver	D								*[[sql.Driver]], <section class="prog__container"><pre><code>public interface Driver</code></pre>The interface that every driver class must implement.</section>\n*[[sax2.Driver]], <section class="prog__container"><pre><code>public class Driver</code></pre>SAX2 Driver that pulls events from XmlPullParser and converts them into SAX2 callbacks.</section>			
DriverManager	A										<section class="prog__container"><pre><code>public class DriverManager</code></pre></section>	https://developer.android.com/reference/java/sql/DriverManager.html
DriverPropertyInfo	A										<section class="prog__container"><pre><code>public class DriverPropertyInfo</code></pre></section>	https://developer.android.com/reference/java/sql/DriverPropertyInfo.html
DrmConvertedStatus	A										<section class="prog__container"><pre><code>public class DrmConvertedStatus</code></pre>An entity class that wraps converted data, conversion status, and the offset for appending the header and body signature to the converted data. An instance of this class may be created two ways by the drm framework: a) a call to <code>DrmManagerClient.convertData()</code> and b) a call to <code>DrmManagerClient.closeConvertSession()</code>. An valid offset value is provided only from a success call to <code>DrmManagerClient.closeConvertSession()</code>.</section>	https://developer.android.com/reference/android/drm/DrmConvertedStatus.html
DrmErrorEvent	A										<section class="prog__container"><pre><code>public class DrmErrorEvent</code></pre>An entity class that is passed to the <code>onError()</code> callback.</section>	https://developer.android.com/reference/android/drm/DrmErrorEvent.html
DrmEvent	A										<section class="prog__container"><pre><code>public class DrmEvent</code></pre>A base class that is used to send asynchronous event information from the DRM framework.</section>	https://developer.android.com/reference/android/drm/DrmEvent.html
DrmInfo	A										<section class="prog__container"><pre><code>public class DrmInfo</code></pre>An entity class that describes the information required to send transactions between a device and an online DRM server. The DRM framework achieves server registration, license acquisition, and any other server-related transactions by passing an instance of this class to <code>processDrmInfo(DrmInfo)</code>.</section>	https://developer.android.com/reference/android/drm/DrmInfo.html
DrmInfoEvent	A										<section class="prog__container"><pre><code>public class DrmInfoEvent</code></pre>An entity class that is passed to the <code>onInfo()</code> callback.</section>	https://developer.android.com/reference/android/drm/DrmInfoEvent.html
DrmInfoRequest	A										<section class="prog__container"><pre><code>public class DrmInfoRequest</code></pre>An entity class that is used to pass information to an online DRM server. An instance of this class is passed to the <code>acquireDrmInfo()</code> method to get an instance of a <code>DrmInfo</code>.</section>	https://developer.android.com/reference/android/drm/DrmInfoRequest.html
DrmInfoStatus	A										<section class="prog__container"><pre><code>public class DrmInfoStatus</code></pre>An entity class that wraps the result of communication between a device and an online DRM server. Specifically, when the <code>DrmManagerClient.processDrmInfo()</code> method is called, an instance of <code>DrmInfoStatus</code> is returned.</section>	https://developer.android.com/reference/android/drm/DrmInfoStatus.html
DrmInitData	A										<section class="prog__container"><pre><code>public abstract class DrmInitData</code></pre>Encapsulates initialization data required by a <code>MediaDrm</code> instance.</section>	https://developer.android.com/reference/android/media/DrmInitData.html
DrmInitData.SchemeInitData	A										<section class="prog__container"><pre><code>public static final class DrmInitData.SchemeInitData</code></pre>Scheme initialization data.</section>	https://developer.android.com/reference/android/media/DrmInitData.SchemeInitData.html
DrmManagerClient	A										<section class="prog__container"><pre><code>public class DrmManagerClient</code></pre>The main programming interface for the DRM framework. An application must instantiate this class to access DRM agents through the DRM framework.</section>	https://developer.android.com/reference/android/drm/DrmManagerClient.html
DrmManagerClient.OnErrorListener	A										<section class="prog__container"><pre><code>public static interface DrmManagerClient.OnErrorListener</code></pre>Interface definition for a callback that receives information about DRM framework errors.</section>	https://developer.android.com/reference/android/drm/DrmManagerClient.OnErrorListener.html
DrmManagerClient.OnEventListener	A										<section class="prog__container"><pre><code>public static interface DrmManagerClient.OnEventListener</code></pre>Interface definition for a callback that receives information about DRM processing events.</section>	https://developer.android.com/reference/android/drm/DrmManagerClient.OnEventListener.html
DrmManagerClient.OnInfoListener	A										<section class="prog__container"><pre><code>public static interface DrmManagerClient.OnInfoListener</code></pre>Interface definition for a callback that receives status messages and warnings during registration and rights acquisition.</section>	https://developer.android.com/reference/android/drm/DrmManagerClient.OnInfoListener.html
DrmRights	A										<section class="prog__container"><pre><code>public class DrmRights</code></pre>An entity class that wraps the license information retrieved from the online DRM server.</section>	https://developer.android.com/reference/android/drm/DrmRights.html
DrmStore	A										<section class="prog__container"><pre><code>public class DrmStore</code></pre>Defines constants that are used by the DRM framework.</section>	https://developer.android.com/reference/android/drm/DrmStore.html
DrmStore.Action	A										<section class="prog__container"><pre><code>public static class DrmStore.Action</code></pre>Defines actions that can be performed on rights-protected content.</section>	https://developer.android.com/reference/android/drm/DrmStore.Action.html
DrmStore.ConstraintsColumns	A										<section class="prog__container"><pre><code>public static interface DrmStore.ConstraintsColumns</code></pre>Interface definition for the columns that represent DRM constraints. <code>DrmManagerClient.getConstraints()</code> can be called by an application to find out the contraints on the <code>actions</code> that can be performed on right-protected content. The constants defined in this interface represent three most common types of constraints: count-based, date-based, and duration-based. Two or more constraints can be used at the same time to represent more sophisticated constraints. In addition, user-defined constraint, <code>extended metadata</code>, can be used if these three types of constraints are not sufficient.</section>	https://developer.android.com/reference/android/drm/DrmStore.ConstraintsColumns.html
DrmStore.DrmObjectType	A										<section class="prog__container"><pre><code>public static class DrmStore.DrmObjectType</code></pre>Defines DRM object types.</section>	https://developer.android.com/reference/android/drm/DrmStore.DrmObjectType.html
DrmStore.Playback	A										<section class="prog__container"><pre><code>public static class DrmStore.Playback</code></pre>Defines playback states for content.</section>	https://developer.android.com/reference/android/drm/DrmStore.Playback.html
DrmStore.RightsStatus	A										<section class="prog__container"><pre><code>public static class DrmStore.RightsStatus</code></pre>Defines status notifications for digital rights.</section>	https://developer.android.com/reference/android/drm/DrmStore.RightsStatus.html
DrmSupportInfo	A										<section class="prog__container"><pre><code>public class DrmSupportInfo</code></pre>An entity class that wraps the capability of each DRM plug-in (agent), such as the MIME type and file suffix the DRM plug-in can handle.</section>	https://developer.android.com/reference/android/drm/DrmSupportInfo.html
DrmUtils	A										<section class="prog__container"><pre><code>public class DrmUtils</code></pre>A utility class that provides operations for parsing extended metadata embedded in DRM constraint information. If a DRM scheme has specific constraints beyond the standard constraints, the constraints will show up in the <code>EXTENDED_METADATA</code> key. You can use <code>DrmUtils.ExtendedMetadataParser</code> to iterate over those values.</section>	https://developer.android.com/reference/android/drm/DrmUtils.html
DrmUtils.ExtendedMetadataParser	A										<section class="prog__container"><pre><code>public static class DrmUtils.ExtendedMetadataParser</code></pre>Utility that parses extended metadata embedded in DRM constraint information.</section>	https://developer.android.com/reference/android/drm/DrmUtils.ExtendedMetadataParser.html
DropBoxManager	A										<section class="prog__container"><pre><code>public class DropBoxManager</code></pre>Enqueues chunks of data (from various sources -- application crashes, kernel log records, etc.). The queue is size bounded and will drop old data if the enqueued data exceeds the maximum size. You can think of this as a persistent, system-wide, blob-oriented "logcat".</section>	https://developer.android.com/reference/android/os/DropBoxManager.html
DropBoxManager.Entry	A										<section class="prog__container"><pre><code>public static class DropBoxManager.Entry</code></pre>A single entry retrieved from the drop box. This may include a reference to a stream, so you must call <code>close()</code> when you are done using it.</section>	https://developer.android.com/reference/android/os/DropBoxManager.Entry.html
DropDownPreference	A										<section class="prog__container"><pre><code>public class DropDownPreference</code></pre>A version of <code>ListPreference</code> that presents the options in a drop down menu rather than a dialog.</section>	https://developer.android.com/reference/android/support/v7/preference/DropDownPreference.html
DuplicateFormatFlagsException	A										<section class="prog__container"><pre><code>public class DuplicateFormatFlagsException</code></pre>Unchecked exception thrown when duplicate flags are provided in the format specifier.</section>	https://developer.android.com/reference/java/util/DuplicateFormatFlagsException.html
Duration	A										<section class="prog__container"><pre><code>public abstract class Duration</code></pre></section>	https://developer.android.com/reference/javax/xml/datatype/Duration.html
DynamicDrawableSpan	A										<section class="prog__container"><pre><code>public abstract class DynamicDrawableSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/DynamicDrawableSpan.html
DynamicLayout	A										<section class="prog__container"><pre><code>public class DynamicLayout</code></pre>DynamicLayout is a text layout that updates itself as the text is edited.</section>	https://developer.android.com/reference/android/text/DynamicLayout.html
ECField	A										<section class="prog__container"><pre><code>public interface ECField</code></pre>This interface represents an elliptic curve (EC) finite field. All specialized EC fields must implements this interface.</section>	https://developer.android.com/reference/java/security/spec/ECField.html
ECFieldF2m	A										<section class="prog__container"><pre><code>public class ECFieldF2m</code></pre>This immutable class defines an elliptic curve (EC) characteristic 2 finite field.</section>	https://developer.android.com/reference/java/security/spec/ECFieldF2m.html
ECFieldFp	A										<section class="prog__container"><pre><code>public class ECFieldFp</code></pre>This immutable class defines an elliptic curve (EC) prime finite field.</section>	https://developer.android.com/reference/java/security/spec/ECFieldFp.html
ECGenParameterSpec	A										<section class="prog__container"><pre><code>public class ECGenParameterSpec</code></pre>This immutable class specifies the set of parameters used for generating elliptic curve (EC) domain parameters.</section>	https://developer.android.com/reference/java/security/spec/ECGenParameterSpec.html
ECKey	A										<section class="prog__container"><pre><code>public interface ECKey</code></pre>The interface to an elliptic curve (EC) key.</section>	https://developer.android.com/reference/java/security/interfaces/ECKey.html
ECParameterSpec	A										<section class="prog__container"><pre><code>public class ECParameterSpec</code></pre>This immutable class specifies the set of domain parameters used with elliptic curve cryptography (ECC).</section>	https://developer.android.com/reference/java/security/spec/ECParameterSpec.html
ECPoint	A										<section class="prog__container"><pre><code>public class ECPoint</code></pre>This immutable class represents a point on an elliptic curve (EC) in affine coordinates. Other coordinate systems can extend this class to represent this point in other coordinates.</section>	https://developer.android.com/reference/java/security/spec/ECPoint.html
ECPrivateKey	A										<section class="prog__container"><pre><code>public interface ECPrivateKey</code></pre>The interface to an elliptic curve (EC) private key.</section>	https://developer.android.com/reference/java/security/interfaces/ECPrivateKey.html
ECPrivateKeySpec	A										<section class="prog__container"><pre><code>public class ECPrivateKeySpec</code></pre>This immutable class specifies an elliptic curve private key with its associated parameters.</section>	https://developer.android.com/reference/java/security/spec/ECPrivateKeySpec.html
ECPublicKey	A										<section class="prog__container"><pre><code>public interface ECPublicKey</code></pre>The interface to an elliptic curve (EC) public key.</section>	https://developer.android.com/reference/java/security/interfaces/ECPublicKey.html
ECPublicKeySpec	A										<section class="prog__container"><pre><code>public class ECPublicKeySpec</code></pre>This immutable class specifies an elliptic curve public key with its associated parameters.</section>	https://developer.android.com/reference/java/security/spec/ECPublicKeySpec.html
EGL	A										<section class="prog__container"><pre><code>public interface EGL</code></pre></section>	https://developer.android.com/reference/javax/microedition/khronos/egl/EGL.html
EGL10	A										<section class="prog__container"><pre><code>public interface EGL10</code></pre></section>	https://developer.android.com/reference/javax/microedition/khronos/egl/EGL10.html
EGL11	A										<section class="prog__container"><pre><code>public interface EGL11</code></pre></section>	https://developer.android.com/reference/javax/microedition/khronos/egl/EGL11.html
EGL14	A										<section class="prog__container"><pre><code>public class EGL14</code></pre>EGL 1.4</section>	https://developer.android.com/reference/android/opengl/EGL14.html
EGLConfig	D								*[[opengl.EGLConfig]], <section class="prog__container"><pre><code>public class EGLConfig</code></pre>Wrapper class for native EGLConfig objects.</section>\n*[[egl.EGLConfig]], <section class="prog__container"><pre><code>public abstract class EGLConfig</code></pre></section>			
EGLContext	D								*[[opengl.EGLContext]], <section class="prog__container"><pre><code>public class EGLContext</code></pre>Wrapper class for native EGLContext objects.</section>\n*[[egl.EGLContext]], <section class="prog__container"><pre><code>public abstract class EGLContext</code></pre></section>			
EGLDisplay	D								*[[opengl.EGLDisplay]], <section class="prog__container"><pre><code>public class EGLDisplay</code></pre>Wrapper class for native EGLDisplay objects.</section>\n*[[egl.EGLDisplay]], <section class="prog__container"><pre><code>public abstract class EGLDisplay</code></pre></section>			
EGLExt	A										<section class="prog__container"><pre><code>public class EGLExt</code></pre>EGL Extensions</section>	https://developer.android.com/reference/android/opengl/EGLExt.html
EGLObjectHandle	A										<section class="prog__container"><pre><code>public abstract class EGLObjectHandle</code></pre>Base class for wrapped EGL objects.</section>	https://developer.android.com/reference/android/opengl/EGLObjectHandle.html
EGLSurface	D								*[[opengl.EGLSurface]], <section class="prog__container"><pre><code>public class EGLSurface</code></pre>Wrapper class for native EGLSurface objects.</section>\n*[[egl.EGLSurface]], <section class="prog__container"><pre><code>public abstract class EGLSurface</code></pre></section>			
EOFException	A										<section class="prog__container"><pre><code>public class EOFException</code></pre>Signals that an end of file or end of stream has been reached unexpectedly during input.</section>	https://developer.android.com/reference/java/io/EOFException.html
ETC1	A										<section class="prog__container"><pre><code>public class ETC1</code></pre>Methods for encoding and decoding ETC1 textures.</section>	https://developer.android.com/reference/android/opengl/ETC1.html
ETC1Util	A										<section class="prog__container"><pre><code>public class ETC1Util</code></pre>Utility methods for using ETC1 compressed textures.</section>	https://developer.android.com/reference/android/opengl/ETC1Util.html
ETC1Util.ETC1Texture	A										<section class="prog__container"><pre><code>public static class ETC1Util.ETC1Texture</code></pre>A utility class encapsulating a compressed ETC1 texture.</section>	https://developer.android.com/reference/android/opengl/ETC1Util.ETC1Texture.html
EasyEditSpan	A										<section class="prog__container"><pre><code>public class EasyEditSpan</code></pre>Provides an easy way to edit a portion of text.</section>	https://developer.android.com/reference/android/text/style/EasyEditSpan.html
EdgeEffect	A										<section class="prog__container"><pre><code>public class EdgeEffect</code></pre>This class performs the graphical effect used at the edges of scrollable widgets when the user scrolls beyond the content bounds in 2D space.</section>	https://developer.android.com/reference/android/widget/EdgeEffect.html
EdgeEffectCompat	A										<section class="prog__container"><pre><code>public final class EdgeEffectCompat</code></pre>Helper for accessing <code>EdgeEffect</code> introduced after API level 4 in a backwards compatible fashion. This class is used to access <code>EdgeEffect</code> on platform versions that support it. When running on older platforms it will result in no-ops. It should be used by views that wish to use the standard Android visual effects at the edges of scrolling containers.</section>	https://developer.android.com/reference/android/support/v4/widget/EdgeEffectCompat.html
EditText	A										<section class="prog__container"><pre><code>public class EditText</code></pre>EditText is a thin veneer over TextView that configures itself to be editable.</section>	https://developer.android.com/reference/android/widget/EditText.html
EditTextPreference	D								*[[android.preference.EditTextPreference]], <section class="prog__container"><pre><code>public class EditTextPreference</code></pre>A <code>Preference</code> that allows for string input.</section>\n*[[v7.preference.EditTextPreference]], <section class="prog__container"><pre><code>public class EditTextPreference</code></pre>A <code>Preference</code> that allows for string input.</section>			
EditTextPreferenceDialogFragment	A										<section class="prog__container"><pre><code>public class EditTextPreferenceDialogFragment</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/EditTextPreferenceDialogFragment.html
EditTextPreferenceDialogFragmentCompat	A										<section class="prog__container"><pre><code>public class EditTextPreferenceDialogFragmentCompat</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/EditTextPreferenceDialogFragmentCompat.html
Editable	A										<section class="prog__container"><pre><code>public interface Editable</code></pre>This is the interface for text whose content and markup can be changed (as opposed to immutable text like Strings). If you make a <code>DynamicLayout</code> of an Editable, the layout will be reflowed as the text is changed.</section>	https://developer.android.com/reference/android/text/Editable.html
Editable.Factory	A										<section class="prog__container"><pre><code>public static class Editable.Factory</code></pre>Factory used by TextView to create new Editables. You can subclass it to provide something other than SpannableStringBuilder.</section>	https://developer.android.com/reference/android/text/Editable.Factory.html
EditorInfo	A										<section class="prog__container"><pre><code>public class EditorInfo</code></pre>An EditorInfo describes several attributes of a text editing object that an input method is communicating with (typically an EditText), most importantly the type of text content it contains and the current cursor position.</section>	https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html
EditorInfoCompat	A										<section class="prog__container"><pre><code>public final class EditorInfoCompat</code></pre>Helper for accessing features in <code>EditorInfo</code> introduced after API level 13 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v13/view/inputmethod/EditorInfoCompat.html
Effect	A										<section class="prog__container"><pre><code>public abstract class Effect</code></pre></section>	https://developer.android.com/reference/android/media/effect/Effect.html
EffectContext	A										<section class="prog__container"><pre><code>public class EffectContext</code></pre></section>	https://developer.android.com/reference/android/media/effect/EffectContext.html
EffectFactory	A										<section class="prog__container"><pre><code>public class EffectFactory</code></pre></section>	https://developer.android.com/reference/android/media/effect/EffectFactory.html
EffectUpdateListener	A										<section class="prog__container"><pre><code>public interface EffectUpdateListener</code></pre>Some effects may issue callbacks to inform the host of changes to the effect state. This is the listener interface for receiving those callbacks.</section>	https://developer.android.com/reference/android/media/effect/EffectUpdateListener.html
Element	D								*[[android.renderscript.Element]], <section class="prog__container"><pre><code>public class Element</code></pre></section>\n*[[sax.Element]], <section class="prog__container"><pre><code>public class Element</code></pre>An XML element. Provides access to child elements and hooks to listen for events related to this element.</section>\n*[[v8.renderscript.Element]], <section class="prog__container"><pre><code>public class Element</code></pre></section>\n*[[dom.Element]], <section class="prog__container"><pre><code>public interface Element</code></pre>The <code>Element</code> interface represents an element in an HTML or XML document. Elements may have attributes associated with them; since the <code>Element</code> interface inherits from <code>Node</code>, the generic <code>Node</code> interface attribute <code>attributes</code> may be used to retrieve the set of all attributes for an element. There are methods on the <code>Element</code> interface to retrieve either an <code>Attr</code> object by name or an attribute value by name. In XML, where an attribute value may contain entity references, an <code>Attr</code> object should be retrieved to examine the possibly fairly complex sub-tree representing the attribute value. On the other hand, in HTML, where all attributes have simple string values, methods to directly access an attribute value can safely be used as a convenience.</section>			
Element.Builder	D								*[[android.renderscript.Element.Builder]], <section class="prog__container"><pre><code>public static class Element.Builder</code></pre>Builder class for producing complex elements with matching field and name pairs. The builder starts empty. The order in which elements are added is retained for the layout in memory.</section>\n*[[v8.renderscript.Element.Builder]], <section class="prog__container"><pre><code>public static class Element.Builder</code></pre>Builder class for producing complex elements with matching field and name pairs. The builder starts empty. The order in which elements are added is retained for the layout in memory.</section>			
Element.DataKind	D								*[[android.renderscript.Element.DataKind]], <section class="prog__container"><pre><code>public static final enum Element.DataKind</code></pre>The special interpretation of the data if required. This is primarly useful for graphical data. USER indicates no special interpretation is expected. PIXEL is used in conjunction with the standard data types for representing texture formats.</section>\n*[[v8.renderscript.Element.DataKind]], <section class="prog__container"><pre><code>public static final enum Element.DataKind</code></pre>The special interpretation of the data if required. This is primarly useful for graphical data. USER indicates no special interpretation is expected. PIXEL is used in conjunction with the standard data types for representing texture formats.</section>			
Element.DataType	D								*[[android.renderscript.Element.DataType]], <section class="prog__container"><pre><code>public static final enum Element.DataType</code></pre>DataType represents the basic type information for a basic element. The naming convention follows. For numeric types it is FLOAT, SIGNED, or UNSIGNED followed by the _BITS where BITS is the size of the data. BOOLEAN is a true / false (1,0) represented in an 8 bit container. The UNSIGNED variants with multiple bit definitions are for packed graphical data formats and represent vectors with per vector member sizes which are treated as a single unit for packing and alignment purposes. MATRIX the three matrix types contain FLOAT_32 elements and are treated as 32 bits for alignment purposes. RS_* objects: opaque handles with implementation dependent sizes.</section>\n*[[v8.renderscript.Element.DataType]], <section class="prog__container"><pre><code>public static final enum Element.DataType</code></pre>DataType represents the basic type information for a basic element. The naming convention follows. For numeric types it is FLOAT, SIGNED, or UNSIGNED followed by the _BITS where BITS is the size of the data. BOOLEAN is a true / false (1,0) represented in an 8 bit container. The UNSIGNED variants with multiple bit definitions are for packed graphical data formats and represent vectors with per vector member sizes which are treated as a single unit for packing and alignment purposes. MATRIX the three matrix types contain FLOAT_32 elements and are treated as 32 bits for alignment purposes. RS_* objects. 32 bit opaque handles.</section>			
ElementListener	A										<section class="prog__container"><pre><code>public interface ElementListener</code></pre>Listens for the beginning and ending of elements.</section>	https://developer.android.com/reference/android/sax/ElementListener.html
ElementType	A										<section class="prog__container"><pre><code>public final enum ElementType</code></pre>A program element type. The constants of this enumerated type provide a simple classification of the declared elements in a Java program.</section>	https://developer.android.com/reference/java/lang/annotation/ElementType.html
EllipticCurve	A										<section class="prog__container"><pre><code>public class EllipticCurve</code></pre>This immutable class holds the necessary values needed to represent an elliptic curve.</section>	https://developer.android.com/reference/java/security/spec/EllipticCurve.html
EmbossMaskFilter	A										<section class="prog__container"><pre><code>public class EmbossMaskFilter</code></pre></section>	https://developer.android.com/reference/android/graphics/EmbossMaskFilter.html
EmptyStackException	A										<section class="prog__container"><pre><code>public class EmptyStackException</code></pre>Thrown by methods in the <code>Stack</code> class to indicate that the stack is empty.</section>	https://developer.android.com/reference/java/util/EmptyStackException.html
EncodedKeySpec	A										<section class="prog__container"><pre><code>public abstract class EncodedKeySpec</code></pre>This class represents a public or private key in encoded format.</section>	https://developer.android.com/reference/java/security/spec/EncodedKeySpec.html
EncryptedPrivateKeyInfo	A										<section class="prog__container"><pre><code>public class EncryptedPrivateKeyInfo</code></pre>This class implements the <code>EncryptedPrivateKeyInfo</code> type as defined in PKCS #8.</section>	https://developer.android.com/reference/javax/crypto/EncryptedPrivateKeyInfo.html
EndElementListener	A										<section class="prog__container"><pre><code>public interface EndElementListener</code></pre>Listens for the end of elements.</section>	https://developer.android.com/reference/android/sax/EndElementListener.html
EndTextElementListener	A										<section class="prog__container"><pre><code>public interface EndTextElementListener</code></pre>Listens for the end of text elements.</section>	https://developer.android.com/reference/android/sax/EndTextElementListener.html
Entity	D								*[[content.Entity]], <section class="prog__container"><pre><code>public final class Entity</code></pre>A representation of a item using ContentValues. It contains one top level ContentValue plus a collection of Uri, ContentValues tuples as subvalues. One example of its use is in Contacts, where the top level ContentValue contains the columns from the RawContacts table and the subvalues contain a ContentValues object for each row from the Data table that corresponds to that RawContact. The uri refers to the Data table uri for each row.</section>\n*[[dom.Entity]], <section class="prog__container"><pre><code>public interface Entity</code></pre>This interface represents a known entity, either parsed or unparsed, in an XML document. Note that this models the entity itself <em>not</em> the entity declaration.</section>			
Entity.NamedContentValues	A										<section class="prog__container"><pre><code>public static class Entity.NamedContentValues</code></pre></section>	https://developer.android.com/reference/android/content/Entity.NamedContentValues.html
EntityIterator	A										<section class="prog__container"><pre><code>public interface EntityIterator</code></pre>A specialization of <code>Iterator</code> that allows iterating over a collection of <code>Entity</code> objects. In addition to the iteration functionality it also allows resetting the iterator back to the beginning and provides for an explicit <code>close()</code> method to indicate that the iterator is no longer needed and that its resources can be released.</section>	https://developer.android.com/reference/android/content/EntityIterator.html
EntityReference	A										<section class="prog__container"><pre><code>public interface EntityReference</code></pre><code>EntityReference</code> nodes may be used to represent an entity reference in the tree. Note that character references and references to predefined entities are considered to be expanded by the HTML or XML processor so that characters are represented by their Unicode equivalent rather than by an entity reference. Moreover, the XML processor may completely expand references to entities while building the <code>Document</code>, instead of providing <code>EntityReference</code> nodes. If it does provide such nodes, then for an <code>EntityReference</code> node that represents a reference to a known entity an <code>Entity</code> exists, and the subtree of the <code>EntityReference</code> node is a copy of the <code>Entity</code> node subtree. However, the latter may not be true when an entity contains an unbound namespace prefix. In such a case, because the namespace prefix resolution depends on where the entity reference is, the descendants of the <code>EntityReference</code> node may be bound to different namespace URIs. When an <code>EntityReference</code> node represents a reference to an unknown entity, the node has no children and its replacement value, when used by <code>Attr.value</code> for example, is empty.</section>	https://developer.android.com/reference/org/w3c/dom/EntityReference.html
EntityResolver	A										<section class="prog__container"><pre><code>public interface EntityResolver</code></pre>Basic interface for resolving entities. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/EntityResolver.html
EntityResolver2	A										<section class="prog__container"><pre><code>public interface EntityResolver2</code></pre>Extended interface for mapping external entity references to input sources, or providing a missing external subset. The <code>XMLReader.setEntityResolver()</code> method is used to provide implementations of this interface to parsers. When a parser uses the methods in this interface, the <code>EntityResolver2.resolveEntity()</code> method (in this interface) is used <em>instead of</em> the older (SAX 1.0) <code>EntityResolver.resolveEntity()</code> method. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> </blockquote></section>	https://developer.android.com/reference/org/xml/sax/ext/EntityResolver2.html
EnumConstantNotPresentException	A										<section class="prog__container"><pre><code>public class EnumConstantNotPresentException</code></pre>Thrown when an application tries to access an enum constant by name and the enum type contains no constant with the specified name. This exception can be thrown by the API used to read annotations reflectively</section>	https://developer.android.com/reference/java/lang/EnumConstantNotPresentException.html
Enumeration	A										<section class="prog__container"><pre><code>public interface Enumeration</code></pre>An object that implements the Enumeration interface generates a series of elements, one at a time. Successive calls to the <code>nextElement</code> method return successive elements of the series.</section>	https://developer.android.com/reference/java/util/Enumeration.html
Environment	A										<section class="prog__container"><pre><code>public class Environment</code></pre>Provides access to environment variables.</section>	https://developer.android.com/reference/android/os/Environment.html
EnvironmentCompat	A										<section class="prog__container"><pre><code>public final class EnvironmentCompat</code></pre>Helper for accessing features in <code>Environment</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/os/EnvironmentCompat.html
EnvironmentalReverb	A										<section class="prog__container"><pre><code>public class EnvironmentalReverb</code></pre>A sound generated within a room travels in many directions. The listener first hears the direct sound from the source itself. Later, he or she hears discrete echoes caused by sound bouncing off nearby walls, the ceiling and the floor. As sound waves arrive after undergoing more and more reflections, individual reflections become indistinguishable and the listener hears continuous reverberation that decays over time. Reverb is vital for modeling a listener's environment. It can be used in music applications to simulate music being played back in various environments, or in games to immerse the listener within the game's environment. The EnvironmentalReverb class allows an application to control each reverb engine property in a global reverb environment and is more suitable for games. For basic control, more suitable for music applications, it is recommended to use the <code>PresetReverb</code> class.</section>	https://developer.android.com/reference/android/media/audiofx/EnvironmentalReverb.html
EnvironmentalReverb.OnParameterChangeListener	A										<section class="prog__container"><pre><code>public static interface EnvironmentalReverb.OnParameterChangeListener</code></pre>The OnParameterChangeListener interface defines a method called by the EnvironmentalReverb when a parameter value has changed.</section>	https://developer.android.com/reference/android/media/audiofx/EnvironmentalReverb.OnParameterChangeListener.html
EnvironmentalReverb.Settings	A										<section class="prog__container"><pre><code>public static class EnvironmentalReverb.Settings</code></pre>The Settings class regroups all environmental reverb parameters. It is used in conjuntion with getProperties() and setProperties() methods to backup and restore all parameters in a single call.</section>	https://developer.android.com/reference/android/media/audiofx/EnvironmentalReverb.Settings.html
Equalizer	A										<section class="prog__container"><pre><code>public class Equalizer</code></pre>An Equalizer is used to alter the frequency response of a particular music source or of the main output mix.</section>	https://developer.android.com/reference/android/media/audiofx/Equalizer.html
Equalizer.OnParameterChangeListener	A										<section class="prog__container"><pre><code>public static interface Equalizer.OnParameterChangeListener</code></pre>The OnParameterChangeListener interface defines a method called by the Equalizer when a parameter value has changed.</section>	https://developer.android.com/reference/android/media/audiofx/Equalizer.OnParameterChangeListener.html
Equalizer.Settings	A										<section class="prog__container"><pre><code>public static class Equalizer.Settings</code></pre>The Settings class regroups all equalizer parameters. It is used in conjuntion with getProperties() and setProperties() methods to backup and restore all parameters in a single call.</section>	https://developer.android.com/reference/android/media/audiofx/Equalizer.Settings.html
ErrnoException	A										<section class="prog__container"><pre><code>public final class ErrnoException</code></pre>A checked exception thrown when <code>Os</code> methods fail. This exception contains the native errno value, for comparison against the constants in <code>OsConstants</code>, should sophisticated callers need to adjust their behavior based on the exact failure.</section>	https://developer.android.com/reference/android/system/ErrnoException.html
Error	A										<section class="prog__container"><pre><code>public class Error</code></pre>An <code>Error</code> is a subclass of <code>Throwable</code> that indicates serious problems that a reasonable application should not try to catch. Most such errors are abnormal conditions. The <code>ThreadDeath</code> error, though a "normal" condition, is also a subclass of <code>Error</code> because most applications should not try to catch it.</section>	https://developer.android.com/reference/java/lang/Error.html
ErrorFragment	A										<section class="prog__container"><pre><code>public class ErrorFragment</code></pre>A fragment for displaying an error indication.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/ErrorFragment.html
ErrorHandler	A										<section class="prog__container"><pre><code>public interface ErrorHandler</code></pre>Basic interface for SAX error handlers. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/ErrorHandler.html
ErrorListener	A										<section class="prog__container"><pre><code>public interface ErrorListener</code></pre></section>	https://developer.android.com/reference/javax/xml/transform/ErrorListener.html
ErrorManager	A										<section class="prog__container"><pre><code>public class ErrorManager</code></pre>ErrorManager objects can be attached to Handlers to process any error that occurs on a Handler during Logging.</section>	https://developer.android.com/reference/java/util/logging/ErrorManager.html
ErrorSupportFragment	A										<section class="prog__container"><pre><code>public class ErrorSupportFragment</code></pre>A fragment for displaying an error indication.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/ErrorSupportFragment.html
EventListener	A										<section class="prog__container"><pre><code>public interface EventListener</code></pre>A tagging interface that all event listener interfaces must extend.</section>	https://developer.android.com/reference/java/util/EventListener.html
EventLog	A										<section class="prog__container"><pre><code>public class EventLog</code></pre>Access to the system diagnostic event record. System diagnostic events are used to record certain system-level events (such as garbage collection, activity manager state, system watchdogs, and other low level activity), which may be automatically collected and analyzed during system development.</section>	https://developer.android.com/reference/android/util/EventLog.html
EventLog.Event	A										<section class="prog__container"><pre><code>public static final class EventLog.Event</code></pre>A previously logged event read from the logs. Instances are thread safe.</section>	https://developer.android.com/reference/android/util/EventLog.Event.html
EventLogTags	A										<section class="prog__container"><pre><code>public class EventLogTags</code></pre><p class="caution"><strong> This class was deprecated in API level 8.</strong><br/> This class is no longer functional. Use <code>EventLog</code> instead.</section>	https://developer.android.com/reference/android/util/EventLogTags.html
EventLogTags.Description	A										<section class="prog__container"><pre><code>public static class EventLogTags.Description</code></pre></section>	https://developer.android.com/reference/android/util/EventLogTags.Description.html
EventObject	A										<section class="prog__container"><pre><code>public class EventObject</code></pre></section>	https://developer.android.com/reference/java/util/EventObject.html
Exception	A										<section class="prog__container"><pre><code>public class Exception</code></pre>The class <code>Exception</code> and its subclasses are a form of <code>Throwable</code> that indicates conditions that a reasonable application might want to catch.</section>	https://developer.android.com/reference/java/lang/Exception.html
ExceptionInInitializerError	A										<section class="prog__container"><pre><code>public class ExceptionInInitializerError</code></pre>Signals that an unexpected exception has occurred in a static initializer. An <code>ExceptionInInitializerError</code> is thrown to indicate that an exception occurred during evaluation of a static initializer or the initializer for a static variable.</section>	https://developer.android.com/reference/java/lang/ExceptionInInitializerError.html
Exchanger	A										<section class="prog__container"><pre><code>public class Exchanger</code></pre>A synchronization point at which threads can pair and swap elements within pairs. Each thread presents some object on entry to the <code>exchange</code> method, matches with a partner thread, and receives its partner's object on return. An Exchanger may be viewed as a bidirectional form of a <code>SynchronousQueue</code>. Exchangers may be useful in applications such as genetic algorithms and pipeline designs.</section>	https://developer.android.com/reference/java/util/concurrent/Exchanger.html
ExecutionException	A										<section class="prog__container"><pre><code>public class ExecutionException</code></pre>Exception thrown when attempting to retrieve the result of a task that aborted by throwing an exception. This exception can be inspected using the <code>getCause()</code> method.</section>	https://developer.android.com/reference/java/util/concurrent/ExecutionException.html
Executor	A										<section class="prog__container"><pre><code>public interface Executor</code></pre>An object that executes submitted <code>Runnable</code> tasks. This interface provides a way of decoupling task submission from the mechanics of how each task will be run, including details of thread use, scheduling, etc. An <code>Executor</code> is normally used instead of explicitly creating threads. For example, rather than invoking <code>new Thread(new RunnableTask()).start()</code> for each of a set of tasks, you might use: <pre> <code>Executor executor = anExecutor(); executor.execute(new RunnableTask1()); executor.execute(new RunnableTask2()); ...</code></pre> However, the <code>Executor</code> interface does not strictly require that execution be asynchronous. In the simplest case, an executor can run the submitted task immediately in the caller's thread: <pre> <code>class DirectExecutor implements Executor { public void execute(Runnable r) { r.run(); } }</code></pre> More typically, tasks are executed in some thread other than the caller's thread. The executor below spawns a new thread for each task. <pre> <code>class ThreadPerTaskExecutor implements Executor { public void execute(Runnable r) { new Thread(r).start(); } }</code></pre> Many <code>Executor</code> implementations impose some sort of limitation on how and when tasks are scheduled. The executor below serializes the submission of tasks to a second executor, illustrating a composite executor. <pre> <code>class SerialExecutor implements Executor { final Queue&lt;Runnable&gt; tasks = new ArrayDeque&lt;&gt;(); final Executor executor; Runnable active; SerialExecutor(Executor executor) { this.executor = executor; } public synchronized void execute(final Runnable r) { tasks.add(new Runnable() { public void run() { try { r.run(); } finally { scheduleNext(); } } }); if (active == null) { scheduleNext(); } } protected synchronized void scheduleNext() { if ((active = tasks.poll()) != null) { executor.execute(active); } } }</code></pre> The <code>Executor</code> implementations provided in this package implement <code>ExecutorService</code>, which is a more extensive interface. The <code>ThreadPoolExecutor</code> class provides an extensible thread pool implementation. The <code>Executors</code> class provides convenient factory methods for these Executors.</section>	https://developer.android.com/reference/java/util/concurrent/Executor.html
ExecutorCompletionService	A										<section class="prog__container"><pre><code>public class ExecutorCompletionService</code></pre>A <code>CompletionService</code> that uses a supplied <code>Executor</code> to execute tasks. This class arranges that submitted tasks are, upon completion, placed on a queue accessible using <code>take</code>. The class is lightweight enough to be suitable for transient use when processing groups of tasks.</section>	https://developer.android.com/reference/java/util/concurrent/ExecutorCompletionService.html
ExecutorService	A										<section class="prog__container"><pre><code>public interface ExecutorService</code></pre>An <code>Executor</code> that provides methods to manage termination and methods that can produce a <code>Future</code> for tracking progress of one or more asynchronous tasks.</section>	https://developer.android.com/reference/java/util/concurrent/ExecutorService.html
Executors	A										<section class="prog__container"><pre><code>public class Executors</code></pre>Factory and utility methods for <code>Executor</code>, <code>ExecutorService</code>, <code>ScheduledExecutorService</code>, <code>ThreadFactory</code>, and <code>Callable</code> classes defined in this package. This class supports the following kinds of methods: <ul> <li>Methods that create and return an <code>ExecutorService</code> set up with commonly useful configuration settings. <li>Methods that create and return a <code>ScheduledExecutorService</code> set up with commonly useful configuration settings. <li>Methods that create and return a "wrapped" ExecutorService, that disables reconfiguration by making implementation-specific methods inaccessible. <li>Methods that create and return a <code>ThreadFactory</code> that sets newly created threads to a known state. <li>Methods that create and return a <code>Callable</code> out of other closure-like forms, so they can be used in execution methods requiring <code>Callable</code>. </li></li></li></li></li></ul></section>	https://developer.android.com/reference/java/util/concurrent/Executors.html
ExemptionMechanism	A										<section class="prog__container"><pre><code>public class ExemptionMechanism</code></pre>This class provides the functionality of an exemption mechanism, examples of which are <i>key recovery</i>, <i>key weakening</i>, and <i>key escrow</i>.</section>	https://developer.android.com/reference/javax/crypto/ExemptionMechanism.html
ExemptionMechanismException	A										<section class="prog__container"><pre><code>public class ExemptionMechanismException</code></pre>This is the generic ExemptionMechanism exception.</section>	https://developer.android.com/reference/javax/crypto/ExemptionMechanismException.html
ExemptionMechanismSpi	A										<section class="prog__container"><pre><code>public abstract class ExemptionMechanismSpi</code></pre>This class defines the <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>ExemptionMechanism</code> class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a particular exemption mechanism.</section>	https://developer.android.com/reference/javax/crypto/ExemptionMechanismSpi.html
ExifInterface	A										<section class="prog__container"><pre><code>public class ExifInterface</code></pre>This is a class for reading and writing Exif tags in a JPEG file or a RAW image file.</section>	https://developer.android.com/reference/android/media/ExifInterface.html
ExpandableListActivity	A										<section class="prog__container"><pre><code>public class ExpandableListActivity</code></pre>An activity that displays an expandable list of items by binding to a data source implementing the ExpandableListAdapter, and exposes event handlers when the user selects an item.</section>	https://developer.android.com/reference/android/app/ExpandableListActivity.html
ExpandableListAdapter	A										<section class="prog__container"><pre><code>public interface ExpandableListAdapter</code></pre>An adapter that links a <code>ExpandableListView</code> with the underlying data. The implementation of this interface will provide access to the data of the children (categorized by groups), and also instantiate <code>View</code>s for children and groups.</section>	https://developer.android.com/reference/android/widget/ExpandableListAdapter.html
ExpandableListView	A										<section class="prog__container"><pre><code>public class ExpandableListView</code></pre>A view that shows items in a vertically scrolling two-level list. This differs from the <code>ListView</code> by allowing two levels: groups which can individually be expanded to show its children. The items come from the <code>ExpandableListAdapter</code> associated with this view.</section>	https://developer.android.com/reference/android/widget/ExpandableListView.html
ExpandableListView.ExpandableListContextMenuInfo	A										<section class="prog__container"><pre><code>public static class ExpandableListView.ExpandableListContextMenuInfo</code></pre>Extra menu information specific to an <code>ExpandableListView</code> provided to the <code>onCreateContextMenu(ContextMenu, View, ContextMenuInfo)</code> callback when a context menu is brought up for this AdapterView.</section>	https://developer.android.com/reference/android/widget/ExpandableListView.ExpandableListContextMenuInfo.html
ExpandableListView.OnChildClickListener	A										<section class="prog__container"><pre><code>public static interface ExpandableListView.OnChildClickListener</code></pre>Interface definition for a callback to be invoked when a child in this expandable list has been clicked.</section>	https://developer.android.com/reference/android/widget/ExpandableListView.OnChildClickListener.html
ExpandableListView.OnGroupClickListener	A										<section class="prog__container"><pre><code>public static interface ExpandableListView.OnGroupClickListener</code></pre>Interface definition for a callback to be invoked when a group in this expandable list has been clicked.</section>	https://developer.android.com/reference/android/widget/ExpandableListView.OnGroupClickListener.html
ExpandableListView.OnGroupCollapseListener	A										<section class="prog__container"><pre><code>public static interface ExpandableListView.OnGroupCollapseListener</code></pre>Used for being notified when a group is collapsed</section>	https://developer.android.com/reference/android/widget/ExpandableListView.OnGroupCollapseListener.html
ExpandableListView.OnGroupExpandListener	A										<section class="prog__container"><pre><code>public static interface ExpandableListView.OnGroupExpandListener</code></pre>Used for being notified when a group is expanded</section>	https://developer.android.com/reference/android/widget/ExpandableListView.OnGroupExpandListener.html
Explode	A										<section class="prog__container"><pre><code>public class Explode</code></pre>This transition tracks changes to the visibility of target views in the start and end scenes and moves views in or out from the edges of the scene. Visibility is determined by both the <code>setVisibility(int)</code> state of the view as well as whether it is parented in the current view hierarchy. Disappearing Views are limited as described in <code>onDisappear(android.view.ViewGroup, TransitionValues, int, TransitionValues, int)</code>.</section>	https://developer.android.com/reference/android/transition/Explode.html
ExploreByTouchHelper	D								*[[v4.widget.ExploreByTouchHelper]], <section class="prog__container"><pre><code>public abstract class ExploreByTouchHelper</code></pre>ExploreByTouchHelper is a utility class for implementing accessibility support in custom <code>View</code>s that represent a collection of View-like logical items. It extends <code>AccessibilityNodeProviderCompat</code> and simplifies many aspects of providing information to accessibility services and managing accessibility focus. This class does not currently support hierarchies of logical items.</section>\n*[[internal.widget.ExploreByTouchHelper]], ExploreByTouchHelper is a utility class for implementing accessibility support in custom <code><a href="https://developer.android.com/reference/android/view/View.html">View</a></code>s that represent a collection of View-like logical items.			
ExtendedSSLSession	A										<section class="prog__container"><pre><code>public abstract class ExtendedSSLSession</code></pre>Extends the <code>SSLSession</code> interface to support additional session attributes.</section>	https://developer.android.com/reference/javax/net/ssl/ExtendedSSLSession.html
Extension	A										<section class="prog__container"><pre><code>public interface Extension</code></pre>This interface represents an X.509 extension.</section>	https://developer.android.com/reference/java/security/cert/Extension.html
Externalizable	A										<section class="prog__container"><pre><code>public interface Externalizable</code></pre>Only the identity of the class of an Externalizable instance is written in the serialization stream and it is the responsibility of the class to save and restore the contents of its instances. The writeExternal and readExternal methods of the Externalizable interface are implemented by a class to give the class complete control over the format and contents of the stream for an object and its supertypes. These methods must explicitly coordinate with the supertype to save its state. These methods supersede customized implementations of writeObject and readObject methods.<br> Object Serialization uses the Serializable and Externalizable interfaces. Object persistence mechanisms can use them as well. Each object to be stored is tested for the Externalizable interface. If the object supports Externalizable, the writeExternal method is called. If the object does not support Externalizable and does implement Serializable, the object is saved using ObjectOutputStream. <br> When an Externalizable object is reconstructed, an instance is created using the public no-arg constructor, then the readExternal method called. Serializable objects are restored by reading them from an ObjectInputStream.<br> An Externalizable instance can designate a substitution object via the writeReplace and readResolve methods documented in the Serializable interface.<br/></br></br></br></section>	https://developer.android.com/reference/java/io/Externalizable.html
ExtractEditText	A										<section class="prog__container"><pre><code>public class ExtractEditText</code></pre>Specialization of <code>EditText</code> for showing and interacting with the extracted text in a full-screen input method.</section>	https://developer.android.com/reference/android/inputmethodservice/ExtractEditText.html
ExtractedText	A										<section class="prog__container"><pre><code>public class ExtractedText</code></pre>Information about text that has been extracted for use by an input method. This contains information about a portion of the currently edited text, that the IME should display into its own interface while in extracted mode.</section>	https://developer.android.com/reference/android/view/inputmethod/ExtractedText.html
ExtractedTextRequest	A										<section class="prog__container"><pre><code>public class ExtractedTextRequest</code></pre>Description of what an input method would like from an application when extract text from its input editor.</section>	https://developer.android.com/reference/android/view/inputmethod/ExtractedTextRequest.html
Face	A										<section class="prog__container"><pre><code>public final class Face</code></pre>Describes a face detected in an image.</section>	https://developer.android.com/reference/android/hardware/camera2/params/Face.html
FaceDetector	A										<section class="prog__container"><pre><code>public class FaceDetector</code></pre>Identifies the faces of people in a <code>Bitmap</code> graphic object.</section>	https://developer.android.com/reference/android/media/FaceDetector.html
FaceDetector.Face	A										<section class="prog__container"><pre><code>public class FaceDetector.Face</code></pre>A Face contains all the information identifying the location of a face in a bitmap.</section>	https://developer.android.com/reference/android/media/FaceDetector.Face.html
FacetProvider	A										<section class="prog__container"><pre><code>public interface FacetProvider</code></pre>This is the query interface to supply optional features(aka facets) on an object without the need of letting the object to subclass or implement java interfaces.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FacetProvider.html
FacetProviderAdapter	A										<section class="prog__container"><pre><code>public interface FacetProviderAdapter</code></pre>Optional interface that implemented by <code>RecyclerView.Adapter</code> to query <code>FacetProvider</code> for a given type within Adapter. Note that <code>RecyclerView.ViewHolder</code> may also implement <code>FacetProvider</code> which has a higher priority than the one returned from the FacetProviderAdapter.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FacetProviderAdapter.html
FactoryConfigurationError	A										<section class="prog__container"><pre><code>public class FactoryConfigurationError</code></pre>Thrown when a problem with configuration with the Parser Factories exists. This error will typically be thrown when the class of a parser factory specified in the system properties cannot be found or instantiated.</section>	https://developer.android.com/reference/javax/xml/parsers/FactoryConfigurationError.html
Fade	D								*[[support.transition.Fade]], <section class="prog__container"><pre><code>public class Fade</code></pre>This transition tracks changes to the visibility of target views in the start and end scenes and fades views in or out when they become visible or non-visible. Visibility is determined by both the <code>setVisibility(int)</code> state of the view as well as whether it is parented in the current view hierarchy.</section>\n*[[android.transition.Fade]], <section class="prog__container"><pre><code>public class Fade</code></pre>This transition tracks changes to the visibility of target views in the start and end scenes and fades views in or out when they become visible or non-visible. Visibility is determined by both the <code>setVisibility(int)</code> state of the view as well as whether it is parented in the current view hierarchy.</section>			
FastOutLinearInInterpolator	A										<section class="prog__container"><pre><code>public class FastOutLinearInInterpolator</code></pre>Interpolator corresponding to <code>fast_out_linear_in</code>. Uses a lookup table for the Bezier curve from (0,0) to (1,1) with control points: P0 (0, 0) P1 (0.4, 0) P2 (1.0, 1.0) P3 (1.0, 1.0)</section>	https://developer.android.com/reference/android/support/v4/view/animation/FastOutLinearInInterpolator.html
FastOutSlowInInterpolator	A										<section class="prog__container"><pre><code>public class FastOutSlowInInterpolator</code></pre>Interpolator corresponding to <code>fast_out_slow_in</code>. Uses a lookup table for the Bezier curve from (0,0) to (1,1) with control points: P0 (0, 0) P1 (0.4, 0) P2 (0.2, 1.0) P3 (1.0, 1.0)</section>	https://developer.android.com/reference/android/support/v4/view/animation/FastOutSlowInInterpolator.html
FeatureGroupInfo	A										<section class="prog__container"><pre><code>public final class FeatureGroupInfo</code></pre>A set of features that can be requested by an application. This corresponds to information collected from the AndroidManifest.xml's <code>&lt;feature-group&gt;</code> tag.</section>	https://developer.android.com/reference/android/content/pm/FeatureGroupInfo.html
FeatureInfo	A										<section class="prog__container"><pre><code>public class FeatureInfo</code></pre>Definition of a single optional hardware or software feature of an Android device.</section>	https://developer.android.com/reference/android/content/pm/FeatureInfo.html
Field	A										<section class="prog__container"><pre><code>public final class Field</code></pre>A <code>Field</code> provides information about, and dynamic access to, a single field of a class or an interface. The reflected field may be a class (static) field or an instance field.</section>	https://developer.android.com/reference/java/lang/reflect/Field.html
FieldPacker	D								*[[android.renderscript.FieldPacker]], <section class="prog__container"><pre><code>public class FieldPacker</code></pre>Utility class for packing arguments and structures from Android system objects to RenderScript objects. This class is only intended to be used to support the reflected code generated by the RS tool chain. It should not be called directly.</section>\n*[[v8.renderscript.FieldPacker]], <section class="prog__container"><pre><code>public class FieldPacker</code></pre>Utility class for packing arguments and structures from Android system objects to RenderScript objects. This class is only intended to be used to support the reflected code generated by the RS tool chain. It should not be called directly.</section>			
FieldPosition	A										<section class="prog__container"><pre><code>public class FieldPosition</code></pre><code>FieldPosition</code> is a simple class used by <code>Format</code> and its subclasses to identify fields in formatted output. Fields can be identified in two ways: <ul> <li>By an integer constant, whose names typically end with <code>_FIELD</code>. The constants are defined in the various subclasses of <code>Format</code>. <li>By a <code>Format.Field</code> constant, see <code>ERA_FIELD</code> and its friends in <code>DateFormat</code> for an example. </li></li></ul></section>	https://developer.android.com/reference/java/text/FieldPosition.html
File	A										<section class="prog__container"><pre><code>public class File</code></pre>An abstract representation of file and directory pathnames.</section>	https://developer.android.com/reference/java/io/File.html
FileBackupHelper	A										<section class="prog__container"><pre><code>public class FileBackupHelper</code></pre>A helper class that can be used in conjunction with <code>BackupAgentHelper</code> to manage the backup of a set of files. Whenever backup is performed, all files changed since the last backup will be saved in their entirety. When backup first occurs, every file in the list provided to <code>FileBackupHelper(Context, String...)</code> will be backed up.</section>	https://developer.android.com/reference/android/app/backup/FileBackupHelper.html
FileChannel	A										<section class="prog__container"><pre><code>public abstract class FileChannel</code></pre>A channel for reading, writing, mapping, and manipulating a file.</section>	https://developer.android.com/reference/java/nio/channels/FileChannel.html
FileChannel.MapMode	A										<section class="prog__container"><pre><code>public static class FileChannel.MapMode</code></pre>A typesafe enumeration for file-mapping modes.</section>	https://developer.android.com/reference/java/nio/channels/FileChannel.MapMode.html
FileDescriptor	A										<section class="prog__container"><pre><code>public final class FileDescriptor</code></pre>Instances of the file descriptor class serve as an opaque handle to the underlying machine-specific structure representing an open file, an open socket, or another source or sink of bytes. The main practical use for a file descriptor is to create a <code>FileInputStream</code> or <code>FileOutputStream</code> to contain it.</section>	https://developer.android.com/reference/java/io/FileDescriptor.html
FileFilter	A										<section class="prog__container"><pre><code>public interface FileFilter</code></pre>A filter for abstract pathnames.</section>	https://developer.android.com/reference/java/io/FileFilter.html
FileHandler	A										<section class="prog__container"><pre><code>public class FileHandler</code></pre>Simple file logging <tt>Handler</tt>.</section>	https://developer.android.com/reference/java/util/logging/FileHandler.html
FileInputStream	A										<section class="prog__container"><pre><code>public class FileInputStream</code></pre>A <code>FileInputStream</code> obtains input bytes from a file in a file system. What files are available depends on the host environment.</section>	https://developer.android.com/reference/java/io/FileInputStream.html
FileLock	A										<section class="prog__container"><pre><code>public abstract class FileLock</code></pre>A token representing a lock on a region of a file.</section>	https://developer.android.com/reference/java/nio/channels/FileLock.html
FileLockInterruptionException	A										<section class="prog__container"><pre><code>public class FileLockInterruptionException</code></pre>Checked exception received by a thread when another thread interrupts it while it is waiting to acquire a file lock. Before this exception is thrown the interrupt status of the previously-blocked thread will have been set.</section>	https://developer.android.com/reference/java/nio/channels/FileLockInterruptionException.html
FileNameMap	A										<section class="prog__container"><pre><code>public interface FileNameMap</code></pre>A simple interface which provides a mechanism to map between a file name and a MIME type string.</section>	https://developer.android.com/reference/java/net/FileNameMap.html
FileNotFoundException	A										<section class="prog__container"><pre><code>public class FileNotFoundException</code></pre>Signals that an attempt to open the file denoted by a specified pathname has failed.</section>	https://developer.android.com/reference/java/io/FileNotFoundException.html
FileObserver	A										<section class="prog__container"><pre><code>public abstract class FileObserver</code></pre>Monitors files (using inotify) to fire an event after files are accessed or changed by by any process on the device (including this one). FileObserver is an abstract class; subclasses must implement the event handler <code>onEvent(int, String)</code>.</section>	https://developer.android.com/reference/android/os/FileObserver.html
FileOutputStream	A										<section class="prog__container"><pre><code>public class FileOutputStream</code></pre>A file output stream is an output stream for writing data to a <code>File</code> or to a <code>FileDescriptor</code>. Whether or not a file is available or may be created depends upon the underlying platform. Some platforms, in particular, allow a file to be opened for writing by only one <tt>FileOutputStream</tt> (or other file-writing object) at a time. In such situations the constructors in this class will fail if the file involved is already open.</section>	https://developer.android.com/reference/java/io/FileOutputStream.html
FilePermission	A										<section class="prog__container"><pre><code>public final class FilePermission</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/io/FilePermission.html
FileProvider	A										<section class="prog__container"><pre><code>public class FileProvider</code></pre>FileProvider is a special subclass of <code>ContentProvider</code> that facilitates secure sharing of files associated with an app by creating a <code>content://</code> <code>Uri</code> for a file instead of a <code>file:///</code> <code>Uri</code>.</section>	https://developer.android.com/reference/android/support/v4/content/FileProvider.html
FileReader	A										<section class="prog__container"><pre><code>public class FileReader</code></pre>Convenience class for reading character files. The constructors of this class assume that the default character encoding and the default byte-buffer size are appropriate. To specify these values yourself, construct an InputStreamReader on a FileInputStream.</section>	https://developer.android.com/reference/java/io/FileReader.html
FileUriExposedException	A										<section class="prog__container"><pre><code>public class FileUriExposedException</code></pre>The exception that is thrown when an application exposes a <code>file://</code> <code>Uri</code> to another app.</section>	https://developer.android.com/reference/android/os/FileUriExposedException.html
FileWriter	A										<section class="prog__container"><pre><code>public class FileWriter</code></pre>Convenience class for writing character files. The constructors of this class assume that the default character encoding and the default byte-buffer size are acceptable. To specify these values yourself, construct an OutputStreamWriter on a FileOutputStream.</section>	https://developer.android.com/reference/java/io/FileWriter.html
FilenameFilter	A										<section class="prog__container"><pre><code>public interface FilenameFilter</code></pre>Instances of classes that implement this interface are used to filter filenames. These instances are used to filter directory listings in the <code>list</code> method of class <code>File</code>, and by the Abstract Window Toolkit's file dialog component.</section>	https://developer.android.com/reference/java/io/FilenameFilter.html
Filter	D								*[[widget.Filter]], <section class="prog__container"><pre><code>public abstract class Filter</code></pre></section>\n*[[logging.Filter]], <section class="prog__container"><pre><code>public interface Filter</code></pre>A Filter can be used to provide fine grain control over what is logged, beyond the control provided by log levels.</section>			
Filter.FilterListener	A										<section class="prog__container"><pre><code>public static interface Filter.FilterListener</code></pre></section>	https://developer.android.com/reference/android/widget/Filter.FilterListener.html
Filter.FilterResults	A										<section class="prog__container"><pre><code>protected static class Filter.FilterResults</code></pre></section>	https://developer.android.com/reference/android/widget/Filter.FilterResults.html
FilterInputStream	A										<section class="prog__container"><pre><code>public class FilterInputStream</code></pre>A <code>FilterInputStream</code> contains some other input stream, which it uses as its basic source of data, possibly transforming the data along the way or providing additional functionality. The class <code>FilterInputStream</code> itself simply overrides all methods of <code>InputStream</code> with versions that pass all requests to the contained input stream. Subclasses of <code>FilterInputStream</code> may further override some of these methods and may also provide additional methods and fields.</section>	https://developer.android.com/reference/java/io/FilterInputStream.html
FilterOutputStream	A										<section class="prog__container"><pre><code>public class FilterOutputStream</code></pre>This class is the superclass of all classes that filter output streams. These streams sit on top of an already existing output stream (the <i>underlying</i> output stream) which it uses as its basic sink of data, but possibly transforming the data along the way or providing additional functionality.</section>	https://developer.android.com/reference/java/io/FilterOutputStream.html
FilterQueryProvider	A										<section class="prog__container"><pre><code>public interface FilterQueryProvider</code></pre>This class can be used by external clients of CursorAdapter and CursorTreeAdapter to define how the content of the adapter should be filtered.</section>	https://developer.android.com/reference/android/widget/FilterQueryProvider.html
FilterReader	A										<section class="prog__container"><pre><code>public abstract class FilterReader</code></pre>Abstract class for reading filtered character streams. The abstract class <code>FilterReader</code> itself provides default methods that pass all requests to the contained stream. Subclasses of <code>FilterReader</code> should override some of these methods and may also provide additional methods and fields.</section>	https://developer.android.com/reference/java/io/FilterReader.html
FilterWriter	A										<section class="prog__container"><pre><code>public abstract class FilterWriter</code></pre>Abstract class for writing filtered character streams. The abstract class <code>FilterWriter</code> itself provides default methods that pass all requests to the contained stream. Subclasses of <code>FilterWriter</code> should override some of these methods and may also provide additional methods and fields.</section>	https://developer.android.com/reference/java/io/FilterWriter.html
Filterable	A										<section class="prog__container"><pre><code>public interface Filterable</code></pre></section>	https://developer.android.com/reference/android/widget/Filterable.html
FingerprintManager	A										<section class="prog__container"><pre><code>public class FingerprintManager</code></pre>A class that coordinates access to the fingerprint hardware.</section>	https://developer.android.com/reference/android/hardware/fingerprint/FingerprintManager.html
FingerprintManager.AuthenticationCallback	A										<section class="prog__container"><pre><code>public static abstract class FingerprintManager.AuthenticationCallback</code></pre>Callback structure provided to <code>authenticate(CryptoObject, CancellationSignal, int, AuthenticationCallback, Handler)</code>. Users of <code>authenticate(CryptoObject, CancellationSignal, int, AuthenticationCallback, Handler)</code> must provide an implementation of this for listening to fingerprint events.</section>	https://developer.android.com/reference/android/hardware/fingerprint/FingerprintManager.AuthenticationCallback.html
FingerprintManager.AuthenticationResult	A										<section class="prog__container"><pre><code>public static class FingerprintManager.AuthenticationResult</code></pre>Container for callback data from <code>authenticate(CryptoObject, CancellationSignal, int, AuthenticationCallback, Handler)</code>.</section>	https://developer.android.com/reference/android/hardware/fingerprint/FingerprintManager.AuthenticationResult.html
FingerprintManager.CryptoObject	A										<section class="prog__container"><pre><code>public static final class FingerprintManager.CryptoObject</code></pre>A wrapper class for the crypto objects supported by FingerprintManager. Currently the framework supports <code>Signature</code>, <code>Cipher</code> and <code>Mac</code> objects.</section>	https://developer.android.com/reference/android/hardware/fingerprint/FingerprintManager.CryptoObject.html
FingerprintManagerCompat	A										<section class="prog__container"><pre><code>public final class FingerprintManagerCompat</code></pre>A class that coordinates access to the fingerprint hardware.</section>	https://developer.android.com/reference/android/support/v4/hardware/fingerprint/FingerprintManagerCompat.html
FingerprintManagerCompat.AuthenticationCallback	A										<section class="prog__container"><pre><code>public static abstract class FingerprintManagerCompat.AuthenticationCallback</code></pre>Callback structure provided to <code>authenticate(CryptoObject, int, CancellationSignal, AuthenticationCallback, Handler)</code>. Users of <code>authenticate(CryptoObject, int, CancellationSignal, AuthenticationCallback, Handler)</code> must provide an implementation of this for listening to fingerprint events.</section>	https://developer.android.com/reference/android/support/v4/hardware/fingerprint/FingerprintManagerCompat.AuthenticationCallback.html
FingerprintManagerCompat.AuthenticationResult	A										<section class="prog__container"><pre><code>public static final class FingerprintManagerCompat.AuthenticationResult</code></pre>Container for callback data from <code>authenticate(CryptoObject, int, CancellationSignal, AuthenticationCallback, Handler)</code>.</section>	https://developer.android.com/reference/android/support/v4/hardware/fingerprint/FingerprintManagerCompat.AuthenticationResult.html
FingerprintManagerCompat.CryptoObject	A										<section class="prog__container"><pre><code>public static class FingerprintManagerCompat.CryptoObject</code></pre>A wrapper class for the crypto objects supported by FingerprintManager. Currently the framework supports <code>Signature</code> and <code>Cipher</code> objects.</section>	https://developer.android.com/reference/android/support/v4/hardware/fingerprint/FingerprintManagerCompat.CryptoObject.html
FlakyTest	A										<section class="prog__container"><pre><code>public abstract @interface FlakyTest</code></pre><p class="caution"><strong> This @interface was deprecated in API level 24.</strong><br/> Use FlakyTest instead. New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/FlakyTest.html
Float	A										<section class="prog__container"><pre><code>public final class Float</code></pre>The <code>Float</code> class wraps a value of primitive type <code>float</code> in an object. An object of type <code>Float</code> contains a single field whose type is <code>float</code>.</section>	https://developer.android.com/reference/java/lang/Float.html
Float2	D								*[[android.renderscript.Float2]], <section class="prog__container"><pre><code>public class Float2</code></pre>Vector version of the basic float type. Provides two float fields packed.</section>\n*[[v8.renderscript.Float2]], <section class="prog__container"><pre><code>public class Float2</code></pre>Class for exposing the native RenderScript float2 type back to the Android system.</section>			
Float3	D								*[[android.renderscript.Float3]], <section class="prog__container"><pre><code>public class Float3</code></pre>Vector version of the basic float type. Provides three float fields packed.</section>\n*[[v8.renderscript.Float3]], <section class="prog__container"><pre><code>public class Float3</code></pre>Class for exposing the native RenderScript float2 type back to the Android system.</section>			
Float4	D								*[[android.renderscript.Float4]], <section class="prog__container"><pre><code>public class Float4</code></pre>Vector version of the basic float type. Provides four float fields packed.</section>\n*[[v8.renderscript.Float4]], <section class="prog__container"><pre><code>public class Float4</code></pre>Class for exposing the native RenderScript float2 type back to the Android system.</section>			
FloatArrayEvaluator	A										<section class="prog__container"><pre><code>public class FloatArrayEvaluator</code></pre>This evaluator can be used to perform type interpolation between <code>float[]</code> values. Each index into the array is treated as a separate value to interpolate. For example, evaluating <code>{100, 200}</code> and <code>{300, 400}</code> will interpolate the value at the first index between 100 and 300 and the value at the second index value between 200 and 400.</section>	https://developer.android.com/reference/android/animation/FloatArrayEvaluator.html
FloatBuffer	A										<section class="prog__container"><pre><code>public abstract class FloatBuffer</code></pre>A float buffer.</section>	https://developer.android.com/reference/java/nio/FloatBuffer.html
FloatEvaluator	A										<section class="prog__container"><pre><code>public class FloatEvaluator</code></pre>This evaluator can be used to perform type interpolation between <code>float</code> values.</section>	https://developer.android.com/reference/android/animation/FloatEvaluator.html
FloatMath	A										<section class="prog__container"><pre><code>public class FloatMath</code></pre><p class="caution"><strong> This class was deprecated in API level 22.</strong><br/> Use <code>Math</code> instead.</section>	https://developer.android.com/reference/android/util/FloatMath.html
FloatProperty	A										<section class="prog__container"><pre><code>public abstract class FloatProperty</code></pre>An implementation of <code>Property</code> to be used specifically with fields of type <code>float</code>. This type-specific subclass enables performance benefit by allowing calls to a <code>setValue()</code> function that takes the primitive <code>float</code> type and avoids autoboxing and other overhead associated with the <code>Float</code> class.</section>	https://developer.android.com/reference/android/util/FloatProperty.html
FloatRange	A										<section class="prog__container"><pre><code>public abstract @interface FloatRange</code></pre>Denotes that the annotated element should be a float or double in the given range</section>	https://developer.android.com/reference/android/support/annotation/FloatRange.html
FloatingActionButton	A										<section class="prog__container"><pre><code>public class FloatingActionButton</code></pre>Floating action buttons are used for a special type of promoted action. They are distinguished by a circled icon floating above the UI and have special motion behaviors related to morphing, launching, and the transferring anchor point.</section>	https://developer.android.com/reference/android/support/design/widget/FloatingActionButton.html
FloatingActionButton.Behavior	A										<section class="prog__container"><pre><code>public static class FloatingActionButton.Behavior</code></pre>Behavior designed for use with <code>FloatingActionButton</code> instances. Its main function is to move <code>FloatingActionButton</code> views so that any displayed <code>Snackbar</code>s do not cover them.</section>	https://developer.android.com/reference/android/support/design/widget/FloatingActionButton.Behavior.html
FloatingActionButton.OnVisibilityChangedListener	A										<section class="prog__container"><pre><code>public static abstract class FloatingActionButton.OnVisibilityChangedListener</code></pre>Callback to be invoked when the visibility of a FloatingActionButton changes.</section>	https://developer.android.com/reference/android/support/design/widget/FloatingActionButton.OnVisibilityChangedListener.html
FloatingToolbar	A										A floating toolbar for showing contextual menu items.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
Flushable	A										<section class="prog__container"><pre><code>public interface Flushable</code></pre>A <tt>Flushable</tt> is a destination of data that can be flushed. The flush method is invoked to write any buffered output to the underlying stream.</section>	https://developer.android.com/reference/java/io/Flushable.html
FocusFinder	A										<section class="prog__container"><pre><code>public class FocusFinder</code></pre>The algorithm used for finding the next focusable view in a given direction from a view that currently has focus.</section>	https://developer.android.com/reference/android/view/FocusFinder.html
FocusHighlight	A										<section class="prog__container"><pre><code>public interface FocusHighlight</code></pre>Interface for highlighting the item that has focus.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FocusHighlight.html
FocusHighlightHelper	A										<section class="prog__container"><pre><code>public class FocusHighlightHelper</code></pre>Sets up the highlighting behavior when an item gains focus.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FocusHighlightHelper.html
ForegroundColorSpan	A										<section class="prog__container"><pre><code>public class ForegroundColorSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/ForegroundColorSpan.html
ForkJoinPool	A										<section class="prog__container"><pre><code>public class ForkJoinPool</code></pre>An <code>ExecutorService</code> for running <code>ForkJoinTask</code>s. A <code>ForkJoinPool</code> provides the entry point for submissions from non-<code>ForkJoinTask</code> clients, as well as management and monitoring operations.</section>	https://developer.android.com/reference/java/util/concurrent/ForkJoinPool.html
ForkJoinPool.ForkJoinWorkerThreadFactory	A										<section class="prog__container"><pre><code>public static interface ForkJoinPool.ForkJoinWorkerThreadFactory</code></pre>Factory for creating new <code>ForkJoinWorkerThread</code>s. A <code>ForkJoinWorkerThreadFactory</code> must be defined and used for <code>ForkJoinWorkerThread</code> subclasses that extend base functionality or initialize threads with different contexts.</section>	https://developer.android.com/reference/java/util/concurrent/ForkJoinPool.ForkJoinWorkerThreadFactory.html
ForkJoinPool.ManagedBlocker	A										<section class="prog__container"><pre><code>public static interface ForkJoinPool.ManagedBlocker</code></pre>Interface for extending managed parallelism for tasks running in <code>ForkJoinPool</code>s.</section>	https://developer.android.com/reference/java/util/concurrent/ForkJoinPool.ManagedBlocker.html
ForkJoinTask	A										<section class="prog__container"><pre><code>public abstract class ForkJoinTask</code></pre>Abstract base class for tasks that run within a <code>ForkJoinPool</code>. A <code>ForkJoinTask</code> is a thread-like entity that is much lighter weight than a normal thread. Huge numbers of tasks and subtasks may be hosted by a small number of actual threads in a ForkJoinPool, at the price of some usage limitations.</section>	https://developer.android.com/reference/java/util/concurrent/ForkJoinTask.html
ForkJoinWorkerThread	A										<section class="prog__container"><pre><code>public class ForkJoinWorkerThread</code></pre>A thread managed by a <code>ForkJoinPool</code>, which executes <code>ForkJoinTask</code>s. This class is subclassable solely for the sake of adding functionality -- there are no overridable methods dealing with scheduling or execution. However, you can override initialization and termination methods surrounding the main task processing loop. If you do create such a subclass, you will also need to supply a custom <code>ForkJoinPool.ForkJoinWorkerThreadFactory</code> to use it</section>	https://developer.android.com/reference/java/util/concurrent/ForkJoinWorkerThread.html
Format	A										<section class="prog__container"><pre><code>public abstract class Format</code></pre><code>Format</code> is an abstract base class for formatting locale-sensitive information such as dates, messages, and numbers.</section>	https://developer.android.com/reference/java/text/Format.html
Format.Field	A										<section class="prog__container"><pre><code>public static class Format.Field</code></pre>Defines constants that are used as attribute keys in the <code>AttributedCharacterIterator</code> returned from <code>Format.formatToCharacterIterator</code> and as field identifiers in <code>FieldPosition</code>.</section>	https://developer.android.com/reference/java/text/Format.Field.html
FormatException	A										<section class="prog__container"><pre><code>public class FormatException</code></pre></section>	https://developer.android.com/reference/android/nfc/FormatException.html
FormatFlagsConversionMismatchException	A										<section class="prog__container"><pre><code>public class FormatFlagsConversionMismatchException</code></pre>Unchecked exception thrown when a conversion and flag are incompatible.</section>	https://developer.android.com/reference/java/util/FormatFlagsConversionMismatchException.html
Formattable	A										<section class="prog__container"><pre><code>public interface Formattable</code></pre>The <tt>Formattable</tt> interface must be implemented by any class that needs to perform custom formatting using the <tt>'s'</tt> conversion specifier of <code>Formatter</code>. This interface allows basic control for formatting arbitrary objects. For example, the following class prints out different representations of a stock's name depending on the flags and length constraints: <blockquote><pre> import java.nio.CharBuffer; import java.util.Formatter; import java.util.Formattable; import java.util.Locale; import static java.util.FormattableFlags.*; ... public class StockName implements Formattable { private String symbol, companyName, frenchCompanyName; public StockName(String symbol, String companyName, String frenchCompanyName) { ... } ... public void formatTo(Formatter fmt, int f, int width, int precision) { StringBuilder sb = new StringBuilder(); // decide form of name String name = companyName; if (fmt.locale().equals(Locale.FRANCE)) name = frenchCompanyName; boolean alternate = (f &amp; ALTERNATE) == ALTERNATE; boolean usesymbol = alternate || (precision != -1 &amp;&amp; precision &lt; 10); String out = (usesymbol ? symbol : name); // apply precision if (precision == -1 || out.length() &lt; precision) { // write it all sb.append(out); } else { sb.append(out.substring(0, precision - 1)).append('*'); } // apply width and justification int len = sb.length(); if (len &lt; width) for (int i = 0; i &lt; width - len; i++) if ((f &amp; LEFT_JUSTIFY) == LEFT_JUSTIFY) sb.append(' '); else sb.insert(0, ' '); fmt.format(sb.toString()); } public String toString() { return String.format("%s - %s", symbol, companyName); } } </pre></blockquote></section>	https://developer.android.com/reference/java/util/Formattable.html
FormattableFlags	A										<section class="prog__container"><pre><code>public class FormattableFlags</code></pre>FomattableFlags are passed to the <code>Formattable.formatTo()</code> method and modify the output format for Formattables</section>	https://developer.android.com/reference/java/util/FormattableFlags.html
Formatter	D								*[[format.Formatter]], <section class="prog__container"><pre><code>public final class Formatter</code></pre>Utility class to aid in formatting common values that are not covered by the <code>Formatter</code> class in <code>java.util</code></section>\n*[[util.Formatter]], <section class="prog__container"><pre><code>public final class Formatter</code></pre>An interpreter for printf-style format strings. This class provides support for layout justification and alignment, common formats for numeric, string, and date/time data, and locale-specific output. Common Java types such as <code>byte</code>, <code>BigDecimal</code>, and <code>Calendar</code> are supported. Limited formatting customization for arbitrary user types is provided through the <code>Formattable</code> interface.</section>\n*[[logging.Formatter]], <section class="prog__container"><pre><code>public abstract class Formatter</code></pre>A Formatter provides support for formatting LogRecords.</section>			
Formatter.BigDecimalLayoutForm	A										<section class="prog__container"><pre><code>public static final enum Formatter.BigDecimalLayoutForm</code></pre></section>	https://developer.android.com/reference/java/util/Formatter.BigDecimalLayoutForm.html
FormatterClosedException	A										<section class="prog__container"><pre><code>public class FormatterClosedException</code></pre>Unchecked exception thrown when the formatter has been closed.</section>	https://developer.android.com/reference/java/util/FormatterClosedException.html
FractionRes	A										<section class="prog__container"><pre><code>public abstract @interface FractionRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be a fraction resource reference.</section>	https://developer.android.com/reference/android/support/annotation/FractionRes.html
Fragment	D								*[[android.app.Fragment]], <section class="prog__container"><pre><code>public class Fragment</code></pre>A Fragment is a piece of an application's user interface or behavior that can be placed in an <code>Activity</code>. Interaction with fragments is done through <code>FragmentManager</code>, which can be obtained via <code>Activity.getFragmentManager()</code> and <code>Fragment.getFragmentManager()</code>.</section>\n*[[v4.app.Fragment]], <section class="prog__container"><pre><code>public class Fragment</code></pre>Static library support version of the framework's <code>Fragment</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework <code>Fragment</code> documentation for a class overview.</section>			
Fragment.InstantiationException	D								*[[android.app.Fragment.InstantiationException]], <section class="prog__container"><pre><code>public static class Fragment.InstantiationException</code></pre>Thrown by <code>instantiate(Context, String, Bundle)</code> when there is an instantiation failure.</section>\n*[[v4.app.Fragment.InstantiationException]], <section class="prog__container"><pre><code>public static class Fragment.InstantiationException</code></pre>Thrown by <code>instantiate(Context, String, Bundle)</code> when there is an instantiation failure.</section>			
Fragment.SavedState	D								*[[android.app.Fragment.SavedState]], <section class="prog__container"><pre><code>public static class Fragment.SavedState</code></pre>State information that has been retrieved from a fragment instance through <code>FragmentManager.saveFragmentInstanceState</code>.</section>\n*[[v4.app.Fragment.SavedState]], <section class="prog__container"><pre><code>public static class Fragment.SavedState</code></pre>State information that has been retrieved from a fragment instance through <code>FragmentManager.saveFragmentInstanceState</code>.</section>			
FragmentActivity	A										<section class="prog__container"><pre><code>public class FragmentActivity</code></pre>Base class for activities that want to use the support-based <code>Fragment</code> and <code>Loader</code> APIs.</section>	https://developer.android.com/reference/android/support/v4/app/FragmentActivity.html
FragmentAnimationProvider	A										<section class="prog__container"><pre><code>public interface FragmentAnimationProvider</code></pre>FragmentAnimationProvider supplies animations for use during a fragment's onCreateAnimator callback. Animators added here will be added to an animation set and played together. This allows presenters used by a fragment to control their own fragment lifecycle animations.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FragmentAnimationProvider.html
FragmentBreadCrumbs	A										<section class="prog__container"><pre><code>public class FragmentBreadCrumbs</code></pre><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> This widget is no longer supported.</section>	https://developer.android.com/reference/android/app/FragmentBreadCrumbs.html
FragmentBreadCrumbs.OnBreadCrumbClickListener	A										<section class="prog__container"><pre><code>public static interface FragmentBreadCrumbs.OnBreadCrumbClickListener</code></pre>Interface to intercept clicks on the bread crumbs.</section>	https://developer.android.com/reference/android/app/FragmentBreadCrumbs.OnBreadCrumbClickListener.html
FragmentCompat	A										<section class="prog__container"><pre><code>public class FragmentCompat</code></pre>Helper for accessing features in <code>Fragment</code> introduced after API level 13 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v13/app/FragmentCompat.html
FragmentCompat.OnRequestPermissionsResultCallback	A										<section class="prog__container"><pre><code>public static interface FragmentCompat.OnRequestPermissionsResultCallback</code></pre>This interface is the contract for receiving the results for permission requests.</section>	https://developer.android.com/reference/android/support/v13/app/FragmentCompat.OnRequestPermissionsResultCallback.html
FragmentContainer	D								*[[android.app.FragmentContainer]], <section class="prog__container"><pre><code>public abstract class FragmentContainer</code></pre>Callbacks to a <code>Fragment</code>'s container.</section>\n*[[v4.app.FragmentContainer]], <section class="prog__container"><pre><code>public abstract class FragmentContainer</code></pre>Callbacks to a <code>Fragment</code>'s container.</section>			
FragmentController	D								*[[android.app.FragmentController]], <section class="prog__container"><pre><code>public class FragmentController</code></pre>Provides integration points with a <code>FragmentManager</code> for a fragment host.</section>\n*[[v4.app.FragmentController]], <section class="prog__container"><pre><code>public class FragmentController</code></pre>Provides integration points with a <code>FragmentManager</code> for a fragment host.</section>			
FragmentHostCallback	D								*[[android.app.FragmentHostCallback]], <section class="prog__container"><pre><code>public abstract class FragmentHostCallback</code></pre>Integration points with the Fragment host.</section>\n*[[v4.app.FragmentHostCallback]], <section class="prog__container"><pre><code>public abstract class FragmentHostCallback</code></pre>Integration points with the Fragment host.</section>			
FragmentManager	D								*[[android.app.FragmentManager]], <section class="prog__container"><pre><code>public abstract class FragmentManager</code></pre>Interface for interacting with <code>Fragment</code> objects inside of an <code>Activity</code> <div class="special reference"> <h3>Developer Guides</h3></section>\n*[[v4.app.FragmentManager]], <section class="prog__container"><pre><code>public abstract class FragmentManager</code></pre>Static library support version of the framework's <code>FragmentManager</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework <code>FragmentManager</code> documentation for a class overview.</section>			
FragmentManager.BackStackEntry	D								*[[android.app.FragmentManager.BackStackEntry]], <section class="prog__container"><pre><code>public static interface FragmentManager.BackStackEntry</code></pre>Representation of an entry on the fragment back stack, as created with <code>FragmentTransaction.addToBackStack()</code>. Entries can later be retrieved with <code>FragmentManager.getBackStackEntryAt()</code>.</section>\n*[[v4.app.FragmentManager.BackStackEntry]], <section class="prog__container"><pre><code>public static interface FragmentManager.BackStackEntry</code></pre>Representation of an entry on the fragment back stack, as created with <code>FragmentTransaction.addToBackStack()</code>. Entries can later be retrieved with <code>FragmentManager.getBackStackEntryAt()</code>.</section>			
FragmentManager.FragmentLifecycleCallbacks	A										<section class="prog__container"><pre><code>public static abstract class FragmentManager.FragmentLifecycleCallbacks</code></pre>Callback interface for listening to fragment state changes that happen within a given FragmentManager.</section>	https://developer.android.com/reference/android/support/v4/app/FragmentManager.FragmentLifecycleCallbacks.html
FragmentManager.OnBackStackChangedListener	D								*[[android.app.FragmentManager.OnBackStackChangedListener]], <section class="prog__container"><pre><code>public static interface FragmentManager.OnBackStackChangedListener</code></pre>Interface to watch for changes to the back stack.</section>\n*[[v4.app.FragmentManager.OnBackStackChangedListener]], <section class="prog__container"><pre><code>public static interface FragmentManager.OnBackStackChangedListener</code></pre>Interface to watch for changes to the back stack.</section>			
FragmentManagerNonConfig	D								*[[android.app.FragmentManagerNonConfig]], <section class="prog__container"><pre><code>public class FragmentManagerNonConfig</code></pre>FragmentManagerNonConfig stores the retained instance fragments across activity recreation events.</section>\n*[[v4.app.FragmentManagerNonConfig]], <section class="prog__container"><pre><code>public class FragmentManagerNonConfig</code></pre>FragmentManagerNonConfig stores the retained instance fragments across activity recreation events.</section>			
FragmentPagerAdapter	D								*[[v13.app.FragmentPagerAdapter]], <section class="prog__container"><pre><code>public abstract class FragmentPagerAdapter</code></pre>Implementation of <code>PagerAdapter</code> that represents each page as a <code>Fragment</code> that is persistently kept in the fragment manager as long as the user can return to the page.</section>\n*[[v4.app.FragmentPagerAdapter]], <section class="prog__container"><pre><code>public abstract class FragmentPagerAdapter</code></pre>Implementation of <code>PagerAdapter</code> that represents each page as a <code>Fragment</code> that is persistently kept in the fragment manager as long as the user can return to the page.</section>			
FragmentStatePagerAdapter	D								*[[v13.app.FragmentStatePagerAdapter]], <section class="prog__container"><pre><code>public abstract class FragmentStatePagerAdapter</code></pre>Implementation of <code>PagerAdapter</code> that uses a <code>Fragment</code> to manage each page. This class also handles saving and restoring of fragment's state.</section>\n*[[v4.app.FragmentStatePagerAdapter]], <section class="prog__container"><pre><code>public abstract class FragmentStatePagerAdapter</code></pre>Implementation of <code>PagerAdapter</code> that uses a <code>Fragment</code> to manage each page. This class also handles saving and restoring of fragment's state.</section>			
FragmentTabHost	D								*[[v13.app.FragmentTabHost]], <section class="prog__container"><pre><code>public class FragmentTabHost</code></pre>Version of <code>FragmentTabHost</code> that can be used with the platform <code>Fragment</code> APIs. You will not normally use this, instead using action bar tabs.</section>\n*[[v4.app.FragmentTabHost]], <section class="prog__container"><pre><code>public class FragmentTabHost</code></pre>Special TabHost that allows the use of <code>Fragment</code> objects for its tab content. When placing this in a view hierarchy, after inflating the hierarchy you must call <code>setup(Context, FragmentManager, int)</code> to complete the initialization of the tab host.</section>			
FragmentTransaction	D								*[[android.app.FragmentTransaction]], <section class="prog__container"><pre><code>public abstract class FragmentTransaction</code></pre>API for performing a set of Fragment operations. <div class="special reference"> <h3>Developer Guides</h3></section>\n*[[v4.app.FragmentTransaction]], <section class="prog__container"><pre><code>public abstract class FragmentTransaction</code></pre>Static library support version of the framework's <code>FragmentTransaction</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>			
FrameLayout	A										<section class="prog__container"><pre><code>public class FrameLayout</code></pre>FrameLayout is designed to block out an area on the screen to display a single item. Generally, FrameLayout should be used to hold a single child view, because it can be difficult to organize child views in a way that's scalable to different screen sizes without the children overlapping each other. You can, however, add multiple children to a FrameLayout and control their position within the FrameLayout by assigning gravity to each child, using the <code>android:layout_gravity</code> attribute.</section>	https://developer.android.com/reference/android/widget/FrameLayout.html
FrameLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class FrameLayout.LayoutParams</code></pre>Per-child layout information for layouts that support margins. See <code>FrameLayout Layout Attributes</code> for a list of all child view attributes that this class supports.</section>	https://developer.android.com/reference/android/widget/FrameLayout.LayoutParams.html
FrameMetrics	A										<section class="prog__container"><pre><code>public final class FrameMetrics</code></pre>Class containing timing data for various milestones in a frame lifecycle reported by the rendering subsystem.</section>	https://developer.android.com/reference/android/view/FrameMetrics.html
FrameStats	A										<section class="prog__container"><pre><code>public abstract class FrameStats</code></pre>This is the base class for frame statistics.</section>	https://developer.android.com/reference/android/view/FrameStats.html
Freezable	A										<section class="prog__container"><pre><code>public interface Freezable</code></pre>Provides a flexible mechanism for controlling access, without requiring that a class be immutable. Once frozen, an object can never be unfrozen, so it is thread-safe from that point onward. Once the object has been frozen, it must guarantee that no changes can be made to it. Any attempt to alter it must raise an UnsupportedOperationException exception. This means that when the object returns internal objects, or if anyone has references to those internal objects, that those internal objects must either be immutable, or must also raise exceptions if any attempt to modify them is made. Of course, the object can return clones of internal objects, since those are safe. <h2>Background</h2></section>	https://developer.android.com/reference/android/icu/util/Freezable.html
FullBackupDataOutput	A										<section class="prog__container"><pre><code>public class FullBackupDataOutput</code></pre>Provides the interface through which a <code>BackupAgent</code> writes entire files to a full backup data set, via its <code>onFullBackup(FullBackupDataOutput)</code> method.</section>	https://developer.android.com/reference/android/app/backup/FullBackupDataOutput.html
FullWidthDetailsOverviewRowPresenter	A										<section class="prog__container"><pre><code>public class FullWidthDetailsOverviewRowPresenter</code></pre>Renders a <code>DetailsOverviewRow</code> to display an overview of an item. Typically this row will be the first row in a fragment such as the <code>DetailsFragment</code>. The View created by the FullWidthDetailsOverviewRowPresenter is made in three parts: logo view on the left, action list view on the top and a customizable detailed description view on the right.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FullWidthDetailsOverviewRowPresenter.html
FullWidthDetailsOverviewRowPresenter.Listener	A										<section class="prog__container"><pre><code>public static abstract class FullWidthDetailsOverviewRowPresenter.Listener</code></pre>Listeners for events on ViewHolder.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FullWidthDetailsOverviewRowPresenter.Listener.html
FullWidthDetailsOverviewRowPresenter.ViewHolder	A										<section class="prog__container"><pre><code>public class FullWidthDetailsOverviewRowPresenter.ViewHolder</code></pre>A ViewHolder for the DetailsOverviewRow.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FullWidthDetailsOverviewRowPresenter.ViewHolder.html
FullWidthDetailsOverviewRowPresenter.ViewHolder.DetailsOverviewRowListener	A										<section class="prog__container"><pre><code>public class FullWidthDetailsOverviewRowPresenter.ViewHolder.DetailsOverviewRowListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FullWidthDetailsOverviewRowPresenter.ViewHolder.DetailsOverviewRowListener.html
FullWidthDetailsOverviewSharedElementHelper	A										<section class="prog__container"><pre><code>public class FullWidthDetailsOverviewSharedElementHelper</code></pre>Helper class to assist delayed shared element activity transition for view created by <code>FullWidthDetailsOverviewRowPresenter</code>. User must call <code>setSharedElementEnterTransition(Activity, String, long)</code> during activity onCreate() and call <code>setListener(FullWidthDetailsOverviewRowPresenter.Listener)</code>. The helper implements <code>FullWidthDetailsOverviewRowPresenter.Listener</code> and starts delayed activity transition once <code>onBindLogo(ViewHolder)</code> is called.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/FullWidthDetailsOverviewSharedElementHelper.html
Function	A										<section class="prog__container"><pre><code>public interface Function</code></pre>Represents a function that accepts one argument and produces a result.</section>	https://developer.android.com/reference/java/util/function/Function.html
FunctionalInterface	A										<section class="prog__container"><pre><code>public abstract @interface FunctionalInterface</code></pre>An informative annotation type used to indicate that an interface type declaration is intended to be a <i>functional interface</i> as defined by the Java Language Specification. Conceptually, a functional interface has exactly one abstract method. Since default methods</section>	https://developer.android.com/reference/java/lang/FunctionalInterface.html
Future	A										<section class="prog__container"><pre><code>public interface Future</code></pre>A <code>Future</code> represents the result of an asynchronous computation. Methods are provided to check if the computation is complete, to wait for its completion, and to retrieve the result of the computation. The result can only be retrieved using method <code>get</code> when the computation has completed, blocking if necessary until it is ready. Cancellation is performed by the <code>cancel</code> method. Additional methods are provided to determine if the task completed normally or was cancelled. Once a computation has completed, the computation cannot be cancelled. If you would like to use a <code>Future</code> for the sake of cancellability but not provide a usable result, you can declare types of the form <code>Future&lt;?&gt;</code> and return <code>null</code> as a result of the underlying task.</section>	https://developer.android.com/reference/java/util/concurrent/Future.html
FutureTask	A										<section class="prog__container"><pre><code>public class FutureTask</code></pre>A cancellable asynchronous computation. This class provides a base implementation of <code>Future</code>, with methods to start and cancel a computation, query to see if the computation is complete, and retrieve the result of the computation. The result can only be retrieved when the computation has completed; the <code>get</code> methods will block if the computation has not yet completed. Once the computation has completed, the computation cannot be restarted or cancelled (unless the computation is invoked using <code>runAndReset()</code>).</section>	https://developer.android.com/reference/java/util/concurrent/FutureTask.html
GCMParameterSpec	A										<section class="prog__container"><pre><code>public class GCMParameterSpec</code></pre>Specifies the set of parameters required by a <code>Cipher</code> using the Galois/Counter Mode (GCM) mode.</section>	https://developer.android.com/reference/javax/crypto/spec/GCMParameterSpec.html
GL	A										<section class="prog__container"><pre><code>public interface GL</code></pre></section>	https://developer.android.com/reference/javax/microedition/khronos/opengles/GL.html
GL10	A										<section class="prog__container"><pre><code>public interface GL10</code></pre></section>	https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10.html
GL10Ext	A										<section class="prog__container"><pre><code>public interface GL10Ext</code></pre></section>	https://developer.android.com/reference/javax/microedition/khronos/opengles/GL10Ext.html
GL11	A										<section class="prog__container"><pre><code>public interface GL11</code></pre></section>	https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11.html
GL11Ext	A										<section class="prog__container"><pre><code>public interface GL11Ext</code></pre></section>	https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11Ext.html
GL11ExtensionPack	A										<section class="prog__container"><pre><code>public interface GL11ExtensionPack</code></pre></section>	https://developer.android.com/reference/javax/microedition/khronos/opengles/GL11ExtensionPack.html
GLDebugHelper	A										<section class="prog__container"><pre><code>public class GLDebugHelper</code></pre>A helper class for debugging OpenGL ES applications. Wraps the supplied GL interface with a new GL interface that adds support for error checking and logging.</section>	https://developer.android.com/reference/android/opengl/GLDebugHelper.html
GLES10	A										<section class="prog__container"><pre><code>public class GLES10</code></pre></section>	https://developer.android.com/reference/android/opengl/GLES10.html
GLES10Ext	A										<section class="prog__container"><pre><code>public class GLES10Ext</code></pre></section>	https://developer.android.com/reference/android/opengl/GLES10Ext.html
GLES11	A										<section class="prog__container"><pre><code>public class GLES11</code></pre></section>	https://developer.android.com/reference/android/opengl/GLES11.html
GLES11Ext	A										<section class="prog__container"><pre><code>public class GLES11Ext</code></pre></section>	https://developer.android.com/reference/android/opengl/GLES11Ext.html
GLES20	A										<section class="prog__container"><pre><code>public class GLES20</code></pre>OpenGL ES 2.0</section>	https://developer.android.com/reference/android/opengl/GLES20.html
GLES30	A										<section class="prog__container"><pre><code>public class GLES30</code></pre>OpenGL ES 3.0</section>	https://developer.android.com/reference/android/opengl/GLES30.html
GLES31	A										<section class="prog__container"><pre><code>public class GLES31</code></pre>OpenGL ES 3.1</section>	https://developer.android.com/reference/android/opengl/GLES31.html
GLES31Ext	A										<section class="prog__container"><pre><code>public class GLES31Ext</code></pre></section>	https://developer.android.com/reference/android/opengl/GLES31Ext.html
GLES31Ext.DebugProcKHR	A										<section class="prog__container"><pre><code>public static interface GLES31Ext.DebugProcKHR</code></pre></section>	https://developer.android.com/reference/android/opengl/GLES31Ext.DebugProcKHR.html
GLES32	A										<section class="prog__container"><pre><code>public class GLES32</code></pre>OpenGL ES 3.2</section>	https://developer.android.com/reference/android/opengl/GLES32.html
GLES32.DebugProc	A										<section class="prog__container"><pre><code>public static interface GLES32.DebugProc</code></pre></section>	https://developer.android.com/reference/android/opengl/GLES32.DebugProc.html
GLException	A										<section class="prog__container"><pre><code>public class GLException</code></pre>An exception class for OpenGL errors.</section>	https://developer.android.com/reference/android/opengl/GLException.html
GLSurfaceView	A										<section class="prog__container"><pre><code>public class GLSurfaceView</code></pre>An implementation of SurfaceView that uses the dedicated surface for displaying OpenGL rendering.</section>	https://developer.android.com/reference/android/opengl/GLSurfaceView.html
GLSurfaceView.EGLConfigChooser	A										<section class="prog__container"><pre><code>public static interface GLSurfaceView.EGLConfigChooser</code></pre>An interface for choosing an EGLConfig configuration from a list of potential configurations.</section>	https://developer.android.com/reference/android/opengl/GLSurfaceView.EGLConfigChooser.html
GLSurfaceView.EGLContextFactory	A										<section class="prog__container"><pre><code>public static interface GLSurfaceView.EGLContextFactory</code></pre>An interface for customizing the eglCreateContext and eglDestroyContext calls.</section>	https://developer.android.com/reference/android/opengl/GLSurfaceView.EGLContextFactory.html
GLSurfaceView.EGLWindowSurfaceFactory	A										<section class="prog__container"><pre><code>public static interface GLSurfaceView.EGLWindowSurfaceFactory</code></pre>An interface for customizing the eglCreateWindowSurface and eglDestroySurface calls.</section>	https://developer.android.com/reference/android/opengl/GLSurfaceView.EGLWindowSurfaceFactory.html
GLSurfaceView.GLWrapper	A										<section class="prog__container"><pre><code>public static interface GLSurfaceView.GLWrapper</code></pre>An interface used to wrap a GL interface.</section>	https://developer.android.com/reference/android/opengl/GLSurfaceView.GLWrapper.html
GLSurfaceView.Renderer	A										<section class="prog__container"><pre><code>public static interface GLSurfaceView.Renderer</code></pre>A generic renderer interface.</section>	https://developer.android.com/reference/android/opengl/GLSurfaceView.Renderer.html
GLU	A										<section class="prog__container"><pre><code>public class GLU</code></pre>A set of GL utilities inspired by the OpenGL Utility Toolkit.</section>	https://developer.android.com/reference/android/opengl/GLU.html
GLUtils	A										<section class="prog__container"><pre><code>public final class GLUtils</code></pre>Utility class to help bridging OpenGL ES and Android APIs.</section>	https://developer.android.com/reference/android/opengl/GLUtils.html
GZIPInputStream	A										<section class="prog__container"><pre><code>public class GZIPInputStream</code></pre>This class implements a stream filter for reading compressed data in the GZIP file format.</section>	https://developer.android.com/reference/java/util/zip/GZIPInputStream.html
GZIPOutputStream	A										<section class="prog__container"><pre><code>public class GZIPOutputStream</code></pre>This class implements a stream filter for writing compressed data in the GZIP file format.</section>	https://developer.android.com/reference/java/util/zip/GZIPOutputStream.html
Gallery	A										<section class="prog__container"><pre><code>public class Gallery</code></pre><p class="caution"><strong> This class was deprecated in API level 16.</strong><br/> This widget is no longer supported. Other horizontally scrolling widgets include <code>HorizontalScrollView</code> and <code>ViewPager</code> from the support library.</section>	https://developer.android.com/reference/android/widget/Gallery.html
Gallery.LayoutParams	A										<section class="prog__container"><pre><code>public static class Gallery.LayoutParams</code></pre>Gallery extends LayoutParams to provide a place to hold current Transformation information along with previous position/transformation info.</section>	https://developer.android.com/reference/android/widget/Gallery.LayoutParams.html
GatewayInfo	A										<section class="prog__container"><pre><code>public class GatewayInfo</code></pre>Encapsulated gateway address information for outgoing call. When calls are made, the system provides a facility to specify two addresses for the call: one to display as the address being dialed and a separate (gateway) address to actually dial. Telecom provides this information to <code>ConnectionService</code>s when placing the call as an instance of <code>GatewayInfo</code>.</section>	https://developer.android.com/reference/android/telecom/GatewayInfo.html
GatheringByteChannel	A										<section class="prog__container"><pre><code>public interface GatheringByteChannel</code></pre>A channel that can write bytes from a sequence of buffers.</section>	https://developer.android.com/reference/java/nio/channels/GatheringByteChannel.html
GeneralSecurityException	A										<section class="prog__container"><pre><code>public class GeneralSecurityException</code></pre>The <code>GeneralSecurityException</code> class is a generic security exception class that provides type safety for all the security-related exception classes that extend from it.</section>	https://developer.android.com/reference/java/security/GeneralSecurityException.html
GenericArrayType	A										<section class="prog__container"><pre><code>public interface GenericArrayType</code></pre><code>GenericArrayType</code> represents an array type whose component type is either a parameterized type or a type variable.</section>	https://developer.android.com/reference/java/lang/reflect/GenericArrayType.html
GenericDeclaration	A										<section class="prog__container"><pre><code>public interface GenericDeclaration</code></pre>A common interface for all entities that declare type variables.</section>	https://developer.android.com/reference/java/lang/reflect/GenericDeclaration.html
GenericSignatureFormatError	A										<section class="prog__container"><pre><code>public class GenericSignatureFormatError</code></pre>Thrown when a syntactically malformed signature attribute is encountered by a reflective method that needs to interpret the generic signature information for a type, method or constructor.</section>	https://developer.android.com/reference/java/lang/reflect/GenericSignatureFormatError.html
Geocoder	A										<section class="prog__container"><pre><code>public final class Geocoder</code></pre>A class for handling geocoding and reverse geocoding. Geocoding is the process of transforming a street address or other description of a location into a (latitude, longitude) coordinate. Reverse geocoding is the process of transforming a (latitude, longitude) coordinate into a (partial) address. The amount of detail in a reverse geocoded location description may vary, for example one might contain the full street address of the closest building, while another might contain only a city name and postal code. The Geocoder class requires a backend service that is not included in the core android framework. The Geocoder query methods will return an empty list if there no backend service in the platform. Use the isPresent() method to determine whether a Geocoder implementation exists.</section>	https://developer.android.com/reference/android/location/Geocoder.html
GeolocationPermissions	A										<section class="prog__container"><pre><code>public class GeolocationPermissions</code></pre>This class is used to manage permissions for the WebView's Geolocation JavaScript API. Geolocation permissions are applied to an origin, which consists of the host, scheme and port of a URI. In order for web content to use the Geolocation API, permission must be granted for that content's origin. This class stores Geolocation permissions. An origin's permission state can be either allowed or denied. This class uses Strings to represent an origin. When an origin attempts to use the Geolocation API, but no permission state is currently set for that origin, <code>WebChromeClient.onGeolocationPermissionsShowPrompt()</code> is called. This allows the permission state to be set for that origin. The methods of this class can be used to modify and interrogate the stored Geolocation permissions at any time.</section>	https://developer.android.com/reference/android/webkit/GeolocationPermissions.html
GeolocationPermissions.Callback	A										<section class="prog__container"><pre><code>public static interface GeolocationPermissions.Callback</code></pre>A callback interface used by the host application to set the Geolocation permission state for an origin.</section>	https://developer.android.com/reference/android/webkit/GeolocationPermissions.Callback.html
GeomagneticField	A										<section class="prog__container"><pre><code>public class GeomagneticField</code></pre>Estimates magnetic field at a given point on Earth, and in particular, to compute the magnetic declination from true north.</section>	https://developer.android.com/reference/android/hardware/GeomagneticField.html
Gesture	A										<section class="prog__container"><pre><code>public class Gesture</code></pre>A gesture is a hand-drawn shape on a touch screen. It can have one or multiple strokes. Each stroke is a sequence of timed points. A user-defined gesture can be recognized by a GestureLibrary.</section>	https://developer.android.com/reference/android/gesture/Gesture.html
GestureDescription	A										<section class="prog__container"><pre><code>public final class GestureDescription</code></pre>Accessibility services with the <code>AccessibilityService_canPerformGestures</code> property can dispatch gestures. This class describes those gestures. Gestures are made up of one or more strokes. Gestures are immutable once built.</section>	https://developer.android.com/reference/android/accessibilityservice/GestureDescription.html
GestureDescription.Builder	A										<section class="prog__container"><pre><code>public static class GestureDescription.Builder</code></pre>Builder for a <code>GestureDescription</code></section>	https://developer.android.com/reference/android/accessibilityservice/GestureDescription.Builder.html
GestureDescription.StrokeDescription	A										<section class="prog__container"><pre><code>public static class GestureDescription.StrokeDescription</code></pre>Immutable description of stroke that can be part of a gesture.</section>	https://developer.android.com/reference/android/accessibilityservice/GestureDescription.StrokeDescription.html
GestureDetector	A										<section class="prog__container"><pre><code>public class GestureDetector</code></pre>Detects various gestures and events using the supplied <code>MotionEvent</code>s. The <code>GestureDetector.OnGestureListener</code> callback will notify users when a particular motion event has occurred. This class should only be used with <code>MotionEvent</code>s reported via touch (don't use for trackball events). To use this class: <ul> <li>Create an instance of the <code>GestureDetector</code> for your <code>View</code> <li>In the <code>onTouchEvent(MotionEvent)</code> method ensure you call <code>onTouchEvent(MotionEvent)</code>. The methods defined in your callback will be executed when the events occur. <li>If listening for <code>onContextClick(MotionEvent)</code> you must call <code>onGenericMotionEvent(MotionEvent)</code> in <code>onGenericMotionEvent(MotionEvent)</code>. </li></li></li></ul></section>	https://developer.android.com/reference/android/view/GestureDetector.html
GestureDetector.OnContextClickListener	A										<section class="prog__container"><pre><code>public static interface GestureDetector.OnContextClickListener</code></pre>The listener that is used to notify when a context click occurs. When listening for a context click ensure that you call <code>onGenericMotionEvent(MotionEvent)</code> in <code>onGenericMotionEvent(MotionEvent)</code>.</section>	https://developer.android.com/reference/android/view/GestureDetector.OnContextClickListener.html
GestureDetector.OnDoubleTapListener	A										<section class="prog__container"><pre><code>public static interface GestureDetector.OnDoubleTapListener</code></pre>The listener that is used to notify when a double-tap or a confirmed single-tap occur.</section>	https://developer.android.com/reference/android/view/GestureDetector.OnDoubleTapListener.html
GestureDetector.OnGestureListener	A										<section class="prog__container"><pre><code>public static interface GestureDetector.OnGestureListener</code></pre>The listener that is used to notify when gestures occur. If you want to listen for all the different gestures then implement this interface. If you only want to listen for a subset it might be easier to extend <code>GestureDetector.SimpleOnGestureListener</code>.</section>	https://developer.android.com/reference/android/view/GestureDetector.OnGestureListener.html
GestureDetector.SimpleOnGestureListener	A										<section class="prog__container"><pre><code>public static class GestureDetector.SimpleOnGestureListener</code></pre>A convenience class to extend when you only want to listen for a subset of all the gestures. This implements all methods in the <code>GestureDetector.OnGestureListener</code>, <code>GestureDetector.OnDoubleTapListener</code>, and <code>GestureDetector.OnContextClickListener</code> but does nothing and return <code>false</code> for all applicable methods.</section>	https://developer.android.com/reference/android/view/GestureDetector.SimpleOnGestureListener.html
GestureDetectorCompat	A										<section class="prog__container"><pre><code>public final class GestureDetectorCompat</code></pre>Detects various gestures and events using the supplied <code>MotionEvent</code>s. The <code>GestureDetector.OnGestureListener</code> callback will notify users when a particular motion event has occurred. This class should only be used with <code>MotionEvent</code>s reported via touch (don't use for trackball events).</section>	https://developer.android.com/reference/android/support/v4/view/GestureDetectorCompat.html
GestureLibraries	A										<section class="prog__container"><pre><code>public final class GestureLibraries</code></pre></section>	https://developer.android.com/reference/android/gesture/GestureLibraries.html
GestureLibrary	A										<section class="prog__container"><pre><code>public abstract class GestureLibrary</code></pre></section>	https://developer.android.com/reference/android/gesture/GestureLibrary.html
GestureOverlayView	A										<section class="prog__container"><pre><code>public class GestureOverlayView</code></pre>A transparent overlay for gesture input that can be placed on top of other widgets or contain other widgets.</section>	https://developer.android.com/reference/android/gesture/GestureOverlayView.html
GestureOverlayView.OnGestureListener	A										<section class="prog__container"><pre><code>public static interface GestureOverlayView.OnGestureListener</code></pre></section>	https://developer.android.com/reference/android/gesture/GestureOverlayView.OnGestureListener.html
GestureOverlayView.OnGesturePerformedListener	A										<section class="prog__container"><pre><code>public static interface GestureOverlayView.OnGesturePerformedListener</code></pre></section>	https://developer.android.com/reference/android/gesture/GestureOverlayView.OnGesturePerformedListener.html
GestureOverlayView.OnGesturingListener	A										<section class="prog__container"><pre><code>public static interface GestureOverlayView.OnGesturingListener</code></pre></section>	https://developer.android.com/reference/android/gesture/GestureOverlayView.OnGesturingListener.html
GesturePoint	A										<section class="prog__container"><pre><code>public class GesturePoint</code></pre>A timed point of a gesture stroke. Multiple points form a stroke.</section>	https://developer.android.com/reference/android/gesture/GesturePoint.html
GestureStore	A										<section class="prog__container"><pre><code>public class GestureStore</code></pre>GestureLibrary maintains gesture examples and makes predictions on a new gesture</section>	https://developer.android.com/reference/android/gesture/GestureStore.html
GestureStroke	A										<section class="prog__container"><pre><code>public class GestureStroke</code></pre>A gesture stroke started on a touch down and ended on a touch up. A stroke consists of a sequence of timed points. One or multiple strokes form a gesture.</section>	https://developer.android.com/reference/android/gesture/GestureStroke.html
GestureUtils	A										<section class="prog__container"><pre><code>public final class GestureUtils</code></pre>Utility functions for gesture processing &amp; analysis, including methods for: <ul> <li>feature extraction (e.g., samplers and those for calculating bounding boxes and gesture path lengths); <li>geometric transformation (e.g., translation, rotation and scaling); <li>gesture similarity comparison (e.g., calculating Euclidean or Cosine distances between two gestures). </li></li></li></ul></section>	https://developer.android.com/reference/android/gesture/GestureUtils.html
GetChars	A										<section class="prog__container"><pre><code>public interface GetChars</code></pre>Please implement this interface if your CharSequence has a getChars() method like the one in String that is faster than calling charAt() multiple times.</section>	https://developer.android.com/reference/android/text/GetChars.html
GnssClock	A										<section class="prog__container"><pre><code>public final class GnssClock</code></pre>A class containing a GPS clock timestamp.</section>	https://developer.android.com/reference/android/location/GnssClock.html
GnssMeasurement	A										<section class="prog__container"><pre><code>public final class GnssMeasurement</code></pre>A class representing a GNSS satellite measurement, containing raw and computed information.</section>	https://developer.android.com/reference/android/location/GnssMeasurement.html
GnssMeasurementsEvent	A										<section class="prog__container"><pre><code>public final class GnssMeasurementsEvent</code></pre>A class implementing a container for data associated with a measurement event. Events are delivered to registered instances of <code>GnssMeasurementsEvent.Callback</code>.</section>	https://developer.android.com/reference/android/location/GnssMeasurementsEvent.html
GnssMeasurementsEvent.Callback	A										<section class="prog__container"><pre><code>public static abstract class GnssMeasurementsEvent.Callback</code></pre>Used for receiving GNSS satellite measurements from the GNSS engine. Each measurement contains raw and computed data identifying a satellite. You can implement this interface and call <code>registerGnssMeasurementsCallback(GnssMeasurementsEvent.Callback)</code>.</section>	https://developer.android.com/reference/android/location/GnssMeasurementsEvent.Callback.html
GnssNavigationMessage	A										<section class="prog__container"><pre><code>public final class GnssNavigationMessage</code></pre>A class containing a GNSS satellite Navigation Message.</section>	https://developer.android.com/reference/android/location/GnssNavigationMessage.html
GnssNavigationMessage.Callback	A										<section class="prog__container"><pre><code>public static abstract class GnssNavigationMessage.Callback</code></pre>Used for receiving GNSS satellite Navigation Messages from the GNSS engine.</section>	https://developer.android.com/reference/android/location/GnssNavigationMessage.Callback.html
GnssStatus	A										<section class="prog__container"><pre><code>public final class GnssStatus</code></pre>This class represents the current state of the GNSS engine. This class is used in conjunction with the <code>GnssStatus.Callback</code>.</section>	https://developer.android.com/reference/android/location/GnssStatus.html
GnssStatus.Callback	A										<section class="prog__container"><pre><code>public static abstract class GnssStatus.Callback</code></pre>Used for receiving notifications when GNSS events happen.</section>	https://developer.android.com/reference/android/location/GnssStatus.Callback.html
GpsSatellite	A										<section class="prog__container"><pre><code>public final class GpsSatellite</code></pre><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> use <code>GnssStatus</code> and <code>GnssStatus.Callback</code>.</section>	https://developer.android.com/reference/android/location/GpsSatellite.html
GpsStatus	A										<section class="prog__container"><pre><code>public final class GpsStatus</code></pre><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> use <code>GnssStatus</code> and <code>GnssStatus.Callback</code>.</section>	https://developer.android.com/reference/android/location/GpsStatus.html
GpsStatus.Listener	A										<section class="prog__container"><pre><code>public static interface GpsStatus.Listener</code></pre><p class="caution"><strong> This interface was deprecated in API level 24.</strong><br/> use <code>GnssStatus.Callback</code> instead.</section>	https://developer.android.com/reference/android/location/GpsStatus.Listener.html
GpsStatus.NmeaListener	A										<section class="prog__container"><pre><code>public static interface GpsStatus.NmeaListener</code></pre><p class="caution"><strong> This interface was deprecated in API level 24.</strong><br/> use <code>OnNmeaMessageListener</code> instead.</section>	https://developer.android.com/reference/android/location/GpsStatus.NmeaListener.html
GradientDrawable	A										<section class="prog__container"><pre><code>public class GradientDrawable</code></pre>A Drawable with a color gradient for buttons, backgrounds, etc.</section>	https://developer.android.com/reference/android/graphics/drawable/GradientDrawable.html
GradientDrawable.Orientation	A										<section class="prog__container"><pre><code>public static final enum GradientDrawable.Orientation</code></pre>Controls how the gradient is oriented relative to the drawable's bounds</section>	https://developer.android.com/reference/android/graphics/drawable/GradientDrawable.Orientation.html
Gravity	A										<section class="prog__container"><pre><code>public class Gravity</code></pre>Standard constants and tools for placing an object within a potentially larger container.</section>	https://developer.android.com/reference/android/view/Gravity.html
GravityCompat	A										<section class="prog__container"><pre><code>public final class GravityCompat</code></pre>Compatibility shim for accessing newer functionality from <code>Gravity</code>.</section>	https://developer.android.com/reference/android/support/v4/view/GravityCompat.html
GregorianCalendar	D								*[[icu.util.GregorianCalendar]], <section class="prog__container"><pre><code>public class GregorianCalendar</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>GregorianCalendar</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.</section>\n*[[java.util.GregorianCalendar]], <section class="prog__container"><pre><code>public class GregorianCalendar</code></pre><code>GregorianCalendar</code> is a concrete subclass of <code>Calendar</code> and provides the standard calendar system used by most of the world.</section>			
GridLayout	D								*[[v7.widget.GridLayout]], <section class="prog__container"><pre><code>public class GridLayout</code></pre>A layout that places its children in a rectangular <em>grid</em>.</section>\n*[[android.widget.GridLayout]], <section class="prog__container"><pre><code>public class GridLayout</code></pre>A layout that places its children in a rectangular <em>grid</em>.</section>			
GridLayout.Alignment	D								*[[v7.widget.GridLayout.Alignment]], <section class="prog__container"><pre><code>public static abstract class GridLayout.Alignment</code></pre>Alignments specify where a view should be placed within a cell group and what size it should be.</section>\n*[[android.widget.GridLayout.Alignment]], <section class="prog__container"><pre><code>public static abstract class GridLayout.Alignment</code></pre>Alignments specify where a view should be placed within a cell group and what size it should be.</section>			
GridLayout.LayoutParams	D								*[[v7.widget.GridLayout.LayoutParams]], <section class="prog__container"><pre><code>public static class GridLayout.LayoutParams</code></pre>Layout information associated with each of the children of a GridLayout.</section>\n*[[android.widget.GridLayout.LayoutParams]], <section class="prog__container"><pre><code>public static class GridLayout.LayoutParams</code></pre>Layout information associated with each of the children of a GridLayout.</section>			
GridLayout.Spec	D								*[[v7.widget.GridLayout.Spec]], <section class="prog__container"><pre><code>public static class GridLayout.Spec</code></pre>A Spec defines the horizontal or vertical characteristics of a group of cells. Each spec. defines the <em>grid indices</em> and <em>alignment</em> along the appropriate axis.</section>\n*[[android.widget.GridLayout.Spec]], <section class="prog__container"><pre><code>public static class GridLayout.Spec</code></pre>A Spec defines the horizontal or vertical characteristics of a group of cells. Each spec. defines the <em>grid indices</em> and <em>alignment</em> along the appropriate axis.</section>			
GridLayoutAnimationController	A										<section class="prog__container"><pre><code>public class GridLayoutAnimationController</code></pre>A layout animation controller is used to animated a grid layout's children. While <code>LayoutAnimationController</code> relies only on the index of the child in the view group to compute the animation delay, this class uses both the X and Y coordinates of the child within a grid. In addition, the animation direction can be controlled. The default direction is <code>DIRECTION_LEFT_TO_RIGHT | DIRECTION_TOP_TO_BOTTOM</code>. You can also set the animation priority to columns or rows. The default priority is none. Information used to compute the animation delay of each child are stored in an instance of <code>GridLayoutAnimationController.AnimationParameters</code>, itself stored in the <code>ViewGroup.LayoutParams</code> of the view.</section>	https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.html
GridLayoutAnimationController.AnimationParameters	A										<section class="prog__container"><pre><code>public static class GridLayoutAnimationController.AnimationParameters</code></pre>The set of parameters that has to be attached to each view contained in the view group animated by the grid layout animation controller. These parameters are used to compute the start time of each individual view's animation.</section>	https://developer.android.com/reference/android/view/animation/GridLayoutAnimationController.AnimationParameters.html
GridLayoutManager	A										<section class="prog__container"><pre><code>public class GridLayoutManager</code></pre>A <code>RecyclerView.LayoutManager</code> implementations that lays out items in a grid.</section>	https://developer.android.com/reference/android/support/v7/widget/GridLayoutManager.html
GridLayoutManager.DefaultSpanSizeLookup	A										<section class="prog__container"><pre><code>public static final class GridLayoutManager.DefaultSpanSizeLookup</code></pre>Default implementation for <code>GridLayoutManager.SpanSizeLookup</code>. Each item occupies 1 span.</section>	https://developer.android.com/reference/android/support/v7/widget/GridLayoutManager.DefaultSpanSizeLookup.html
GridLayoutManager.LayoutParams	A										<section class="prog__container"><pre><code>public static class GridLayoutManager.LayoutParams</code></pre>LayoutParams used by GridLayoutManager.</section>	https://developer.android.com/reference/android/support/v7/widget/GridLayoutManager.LayoutParams.html
GridLayoutManager.SpanSizeLookup	A										<section class="prog__container"><pre><code>public static abstract class GridLayoutManager.SpanSizeLookup</code></pre>A helper class to provide the number of spans each item occupies.</section>	https://developer.android.com/reference/android/support/v7/widget/GridLayoutManager.SpanSizeLookup.html
GridView	A										<section class="prog__container"><pre><code>public class GridView</code></pre>A view that shows items in two-dimensional scrolling grid. The items in the grid come from the <code>ListAdapter</code> associated with this view.</section>	https://developer.android.com/reference/android/widget/GridView.html
Group	A										<section class="prog__container"><pre><code>public interface Group</code></pre>This interface is used to represent a group of principals. (A principal represents an entity such as an individual user or a company).</section>	https://developer.android.com/reference/java/security/acl/Group.html
GsmCellLocation	A										<section class="prog__container"><pre><code>public class GsmCellLocation</code></pre>Represents the cell location on a GSM phone.</section>	https://developer.android.com/reference/android/telephony/gsm/GsmCellLocation.html
Guard	A										<section class="prog__container"><pre><code>public interface Guard</code></pre></section>	https://developer.android.com/reference/java/security/Guard.html
GuardedObject	A										<section class="prog__container"><pre><code>public class GuardedObject</code></pre>A GuardedObject is an object that is used to protect access to another object.</section>	https://developer.android.com/reference/java/security/GuardedObject.html
GuidanceStylist	A										<section class="prog__container"><pre><code>public class GuidanceStylist</code></pre>GuidanceStylist is used within a <code>GuidedStepFragment</code> to display contextual information for the decision(s) required at that step.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidanceStylist.html
GuidanceStylist.Guidance	A										<section class="prog__container"><pre><code>public static class GuidanceStylist.Guidance</code></pre>A data class representing contextual information for a <code>GuidedStepFragment</code>. Guidance consists of a short title, a longer description, a breadcrumb to help with global navigation (often indicating where the back button will lead), and an optional icon. All this information is intended to provide users with the appropriate context to make the decision(s) required by the current step.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidanceStylist.Guidance.html
GuidedAction	A										<section class="prog__container"><pre><code>public class GuidedAction</code></pre>A data class which represents an action within a <code>GuidedStepFragment</code>. GuidedActions contain at minimum a title and a description, and typically also an icon.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidedAction.html
GuidedAction.Builder	A										<section class="prog__container"><pre><code>public static class GuidedAction.Builder</code></pre>Builds a <code>GuidedAction</code> object.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidedAction.Builder.html
GuidedActionEditText	A										<section class="prog__container"><pre><code>public class GuidedActionEditText</code></pre>A custom EditText that satisfies the IME key monitoring requirements of GuidedStepFragment.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidedActionEditText.html
GuidedActionsStylist	A										<section class="prog__container"><pre><code>public class GuidedActionsStylist</code></pre>GuidedActionsStylist is used within a <code>GuidedStepFragment</code> to supply the right-side panel where users can take actions. It consists of a container for the list of actions, and a stationary selector view that indicates visually the location of focus. GuidedActionsStylist has two different layouts: default is for normal actions including text, radio, checkbox, DatePicker, etc, the other when <code>setAsButtonActions()</code> is called is recommended for button actions such as "yes", "no".</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidedActionsStylist.html
GuidedActionsStylist.ViewHolder	A										<section class="prog__container"><pre><code>public static class GuidedActionsStylist.ViewHolder</code></pre>ViewHolder caches information about the action item layouts' subviews. Subclasses of <code>GuidedActionsStylist</code> may also wish to subclass this in order to add fields.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidedActionsStylist.ViewHolder.html
GuidedDatePickerAction	A										<section class="prog__container"><pre><code>public class GuidedDatePickerAction</code></pre>Subclass of GuidedAction that can choose a date. The Action is editable by default; to make it read only, call hasEditableActivatorView(false) on the Builder.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidedDatePickerAction.html
GuidedDatePickerAction.Builder	A										<section class="prog__container"><pre><code>public static final class GuidedDatePickerAction.Builder</code></pre>Builder class to build a GuidedDatePickerAction.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/GuidedDatePickerAction.Builder.html
GuidedStepFragment	A										<section class="prog__container"><pre><code>public class GuidedStepFragment</code></pre>A GuidedStepFragment is used to guide the user through a decision or series of decisions. It is composed of a guidance view on the left and a view on the right containing a list of possible actions.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/GuidedStepFragment.html
GuidedStepSupportFragment	A										<section class="prog__container"><pre><code>public class GuidedStepSupportFragment</code></pre>A GuidedStepSupportFragment is used to guide the user through a decision or series of decisions. It is composed of a guidance view on the left and a view on the right containing a list of possible actions.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/GuidedStepSupportFragment.html
Handler	D								*[[os.Handler]], <section class="prog__container"><pre><code>public class Handler</code></pre>A Handler allows you to send and process <code>Message</code> and Runnable objects associated with a thread's <code>MessageQueue</code>. Each Handler instance is associated with a single thread and that thread's message queue. When you create a new Handler, it is bound to the thread / message queue of the thread that is creating it -- from that point on, it will deliver messages and runnables to that message queue and execute them as they come out of the message queue.</section>\n*[[logging.Handler]], <section class="prog__container"><pre><code>public abstract class Handler</code></pre>A <tt>Handler</tt> object takes log messages from a <tt>Logger</tt> and exports them. It might for example, write them to a console or write them to a file, or send them to a network logging service, or forward them to an OS log, or whatever.</section>			
Handler.Callback	A										<section class="prog__container"><pre><code>public static interface Handler.Callback</code></pre>Callback interface you can use when instantiating a Handler to avoid having to implement your own subclass of Handler.</section>	https://developer.android.com/reference/android/os/Handler.Callback.html
HandlerBase	A										<section class="prog__container"><pre><code>public class HandlerBase</code></pre><p class="caution"><strong> This class was deprecated in API level 1.</strong><br/> This class works with the deprecated <code>DocumentHandler</code> interface. It has been replaced by the SAX2 <code>DefaultHandler</code> class.</section>	https://developer.android.com/reference/org/xml/sax/HandlerBase.html
HandlerThread	A										<section class="prog__container"><pre><code>public class HandlerThread</code></pre>Handy class for starting a new thread that has a looper. The looper can then be used to create handler classes. Note that start() must still be called.</section>	https://developer.android.com/reference/android/os/HandlerThread.html
HandshakeCompletedEvent	A										<section class="prog__container"><pre><code>public class HandshakeCompletedEvent</code></pre>This event indicates that an SSL handshake completed on a given SSL connection. All of the core information about that handshake's result is captured through an "SSLSession" object. As a convenience, this event class provides direct access to some important session attributes.</section>	https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html
HandshakeCompletedListener	A										<section class="prog__container"><pre><code>public interface HandshakeCompletedListener</code></pre>This interface is implemented by any class which wants to receive notifications about the completion of an SSL protocol handshake on a given SSL connection.</section>	https://developer.android.com/reference/javax/net/ssl/HandshakeCompletedListener.html
HapticFeedbackConstants	A										<section class="prog__container"><pre><code>public class HapticFeedbackConstants</code></pre>Constants to be used to perform haptic feedback effects via <code>performHapticFeedback(int)</code></section>	https://developer.android.com/reference/android/view/HapticFeedbackConstants.html
HardwarePropertiesManager	A										<section class="prog__container"><pre><code>public class HardwarePropertiesManager</code></pre>The HardwarePropertiesManager class provides a mechanism of accessing hardware state of a device: CPU, GPU and battery temperatures, CPU usage per core, fan speed, etc.</section>	https://developer.android.com/reference/android/os/HardwarePropertiesManager.html
HashMap	A										<section class="prog__container"><pre><code>public class HashMap</code></pre>Hash table based implementation of the <tt>Map</tt> interface. This implementation provides all of the optional map operations, and permits <tt>null</tt> values and the <tt>null</tt> key. (The <tt>HashMap</tt> class is roughly equivalent to <tt>Hashtable</tt>, except that it is unsynchronized and permits nulls.) This class makes no guarantees as to the order of the map; in particular, it does not guarantee that the order will remain constant over time.</section>	https://developer.android.com/reference/java/util/HashMap.html
HashSet	A										<section class="prog__container"><pre><code>public class HashSet</code></pre>This class implements the <tt>Set</tt> interface, backed by a hash table (actually a <tt>HashMap</tt> instance). It makes no guarantees as to the iteration order of the set; in particular, it does not guarantee that the order will remain constant over time. This class permits the <tt>null</tt> element.</section>	https://developer.android.com/reference/java/util/HashSet.html
Hashtable	A										<section class="prog__container"><pre><code>public class Hashtable</code></pre>This class implements a hash table, which maps keys to values. Any non-<code>null</code> object can be used as a key or as a value.</section>	https://developer.android.com/reference/java/util/Hashtable.html
HeaderItem	A										<section class="prog__container"><pre><code>public class HeaderItem</code></pre>A header item describes the metadata of a <code>Row</code>, such as a category of media items. May be subclassed to add more information.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/HeaderItem.html
HeaderViewListAdapter	A										<section class="prog__container"><pre><code>public class HeaderViewListAdapter</code></pre>ListAdapter used when a ListView has header views. This ListAdapter wraps another one and also keeps track of the header views and their associated data objects.</section>	https://developer.android.com/reference/android/widget/HeaderViewListAdapter.html
HeadersFragment	A										<section class="prog__container"><pre><code>public class HeadersFragment</code></pre>An internal fragment containing a list of row headers.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/HeadersFragment.html
HeadersFragment.OnHeaderClickedListener	A										<section class="prog__container"><pre><code>public static interface HeadersFragment.OnHeaderClickedListener</code></pre>Interface definition for a callback to be invoked when a header item is clicked.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/HeadersFragment.OnHeaderClickedListener.html
HeadersFragment.OnHeaderViewSelectedListener	A										<section class="prog__container"><pre><code>public static interface HeadersFragment.OnHeaderViewSelectedListener</code></pre>Interface definition for a callback to be invoked when a header item is selected.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/HeadersFragment.OnHeaderViewSelectedListener.html
HeadersSupportFragment	A										<section class="prog__container"><pre><code>public class HeadersSupportFragment</code></pre>An internal fragment containing a list of row headers.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/HeadersSupportFragment.html
HeadersSupportFragment.OnHeaderClickedListener	A										<section class="prog__container"><pre><code>public static interface HeadersSupportFragment.OnHeaderClickedListener</code></pre>Interface definition for a callback to be invoked when a header item is clicked.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/HeadersSupportFragment.OnHeaderClickedListener.html
HeadersSupportFragment.OnHeaderViewSelectedListener	A										<section class="prog__container"><pre><code>public static interface HeadersSupportFragment.OnHeaderViewSelectedListener</code></pre>Interface definition for a callback to be invoked when a header item is selected.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/HeadersSupportFragment.OnHeaderViewSelectedListener.html
HealthStats	A										<section class="prog__container"><pre><code>public class HealthStats</code></pre>A HealthStats object contains system health data about an application.</section>	https://developer.android.com/reference/android/os/health/HealthStats.html
HebrewCalendar	A										<section class="prog__container"><pre><code>public class HebrewCalendar</code></pre><code>HebrewCalendar</code> is a subclass of <code>Calendar</code> that that implements the traditional Hebrew calendar. This is the civil calendar in Israel and the liturgical calendar of the Jewish faith worldwide.</section>	https://developer.android.com/reference/android/icu/util/HebrewCalendar.html
HeterogeneousExpandableList	A										<section class="prog__container"><pre><code>public interface HeterogeneousExpandableList</code></pre>Additional methods that when implemented make an <code>ExpandableListAdapter</code> take advantage of the <code>Adapter</code> view type mechanism.</section>	https://developer.android.com/reference/android/widget/HeterogeneousExpandableList.html
HideReturnsTransformationMethod	A										<section class="prog__container"><pre><code>public class HideReturnsTransformationMethod</code></pre>This transformation method causes any carriage return characters (\r) to be hidden by displaying them as zero-width non-breaking space characters (﻿).</section>	https://developer.android.com/reference/android/text/method/HideReturnsTransformationMethod.html
HorizontalGridView	A										<section class="prog__container"><pre><code>public class HorizontalGridView</code></pre>A <code>ViewGroup</code> that shows items in a horizontal scrolling list. The items come from the <code>RecyclerView.Adapter</code> associated with this view.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/HorizontalGridView.html
HorizontalHoverCardSwitcher	A										<section class="prog__container"><pre><code>public final class HorizontalHoverCardSwitcher</code></pre>A helper class for showing a hover card view below a <code>HorizontalGridView</code>. The hover card is aligned to the starting edge of the selected child view. If there is no space when scrolling to the end, the ending edge of the hover card will be aligned to the ending edge of the parent view, excluding padding.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/HorizontalHoverCardSwitcher.html
HorizontalScrollView	A										<section class="prog__container"><pre><code>public class HorizontalScrollView</code></pre>Layout container for a view hierarchy that can be scrolled by the user, allowing it to be larger than the physical display. A HorizontalScrollView is a <code>FrameLayout</code>, meaning you should place one child in it containing the entire contents to scroll; this child may itself be a layout manager with a complex hierarchy of objects. A child that is often used is a <code>LinearLayout</code> in a horizontal orientation, presenting a horizontal array of top-level items that the user can scroll through.</section>	https://developer.android.com/reference/android/widget/HorizontalScrollView.html
HostApduService	A										<section class="prog__container"><pre><code>public abstract class HostApduService</code></pre></section>	https://developer.android.com/reference/android/nfc/cardemulation/HostApduService.html
HostNameResolver	A										<section class="prog__container"><pre><code>public interface HostNameResolver</code></pre><p class="caution"><strong> This interface was deprecated in API level 22.</strong><br/> Please use <code>openConnection()</code> instead. Please visit this webpage for further details.</section>	https://developer.android.com/reference/org/apache/http/conn/scheme/HostNameResolver.html
HostNfcFService	A										<section class="prog__container"><pre><code>public abstract class HostNfcFService</code></pre></section>	https://developer.android.com/reference/android/nfc/cardemulation/HostNfcFService.html
HostnameVerifier	A										<section class="prog__container"><pre><code>public interface HostnameVerifier</code></pre>This class is the base interface for hostname verification.</section>	https://developer.android.com/reference/javax/net/ssl/HostnameVerifier.html
Html	A										<section class="prog__container"><pre><code>public class Html</code></pre>This class processes HTML strings into displayable styled text. Not all HTML tags are supported.</section>	https://developer.android.com/reference/android/text/Html.html
Html.ImageGetter	A										<section class="prog__container"><pre><code>public static interface Html.ImageGetter</code></pre>Retrieves images for HTML &lt;img&gt; tags.</section>	https://developer.android.com/reference/android/text/Html.ImageGetter.html
Html.TagHandler	A										<section class="prog__container"><pre><code>public static interface Html.TagHandler</code></pre>Is notified when HTML tags are encountered that the parser does not know how to interpret.</section>	https://developer.android.com/reference/android/text/Html.TagHandler.html
HttpAuthHandler	A										<section class="prog__container"><pre><code>public class HttpAuthHandler</code></pre>Represents a request for HTTP authentication. Instances of this class are created by the WebView and passed to <code>onReceivedHttpAuthRequest(WebView, HttpAuthHandler, String, String)</code>. The host application must call either <code>proceed(String, String)</code> or <code>cancel()</code> to set the WebView's response to the request.</section>	https://developer.android.com/reference/android/webkit/HttpAuthHandler.html
HttpConnectionParams	A										<section class="prog__container"><pre><code>public final class HttpConnectionParams</code></pre><p class="caution"><strong> This class was deprecated in API level 22.</strong><br/> Please use <code>openConnection()</code> instead. Please visit this webpage for further details.</section>	https://developer.android.com/reference/org/apache/http/params/HttpConnectionParams.html
HttpCookie	A										<section class="prog__container"><pre><code>public final class HttpCookie</code></pre>An HttpCookie object represents an http cookie, which carries state information between server and user agent. Cookie is widely adopted to create stateful sessions.</section>	https://developer.android.com/reference/java/net/HttpCookie.html
HttpParams	A										<section class="prog__container"><pre><code>public interface HttpParams</code></pre><p class="caution"><strong> This interface was deprecated in API level 22.</strong><br/> Please use <code>openConnection()</code> instead. Please visit this webpage for further details.</section>	https://developer.android.com/reference/org/apache/http/params/HttpParams.html
HttpResponseCache	A										<section class="prog__container"><pre><code>public final class HttpResponseCache</code></pre>Caches HTTP and HTTPS responses to the filesystem so they may be reused, saving time and bandwidth. This class supports <code>HttpURLConnection</code> and <code>HttpsURLConnection</code>; there is no platform-provided cache for <code>DefaultHttpClient</code> or <code>AndroidHttpClient</code>. Installation and instances are thread safe. <h3>Installing an HTTP response cache</h3> Enable caching of all of your application's HTTP requests by installing the cache at application startup. For example, this code installs a 10 MiB cache in the <code>application-specific cache directory</code> of the filesystem}: <pre> <code>protected void onCreate(Bundle savedInstanceState) { ... try { File httpCacheDir = new File(context.getCacheDir(), "http"); long httpCacheSize = 10 * 1024 * 1024; // 10 MiB HttpResponseCache.install(httpCacheDir, httpCacheSize); } catch (IOException e) { Log.i(TAG, "HTTP response cache installation failed:" + e); } } protected void onStop() { ... HttpResponseCache cache = HttpResponseCache.getInstalled(); if (cache != null) { cache.flush(); } }</code></pre> This cache will evict entries as necessary to keep its size from exceeding 10 MiB. The best cache size is application specific and depends on the size and frequency of the files being downloaded. Increasing the limit may improve the hit rate, but it may also just waste filesystem space!</section>	https://developer.android.com/reference/android/net/http/HttpResponseCache.html
HttpRetryException	A										<section class="prog__container"><pre><code>public class HttpRetryException</code></pre>Thrown to indicate that a HTTP request needs to be retried but cannot be retried automatically, due to streaming mode being enabled.</section>	https://developer.android.com/reference/java/net/HttpRetryException.html
HttpURLConnection	A										<section class="prog__container"><pre><code>public abstract class HttpURLConnection</code></pre>A URLConnection with support for HTTP-specific features. See the spec for details.</section>	https://developer.android.com/reference/java/net/HttpURLConnection.html
HttpsURLConnection	A										<section class="prog__container"><pre><code>public abstract class HttpsURLConnection</code></pre><code>HttpsURLConnection</code> extends <code>HttpURLConnection</code> with support for https-specific features.</section>	https://developer.android.com/reference/javax/net/ssl/HttpsURLConnection.html
IBinder	A										<section class="prog__container"><pre><code>public interface IBinder</code></pre>Base interface for a remotable object, the core part of a lightweight remote procedure call mechanism designed for high performance when performing in-process and cross-process calls. This interface describes the abstract protocol for interacting with a remotable object. Do not implement this interface directly, instead extend from <code>Binder</code>.</section>	https://developer.android.com/reference/android/os/IBinder.html
IBinder.DeathRecipient	A										<section class="prog__container"><pre><code>public static interface IBinder.DeathRecipient</code></pre>Interface for receiving a callback when the process hosting an IBinder has gone away.</section>	https://developer.android.com/reference/android/os/IBinder.DeathRecipient.html
ICUCompat	A										<section class="prog__container"><pre><code>public final class ICUCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/text/ICUCompat.html
ICUUncheckedIOException	A										<section class="prog__container"><pre><code>public class ICUUncheckedIOException</code></pre>Unchecked version of <code>IOException</code>. Some ICU APIs do not throw the standard exception but instead wrap it into this unchecked version.</section>	https://developer.android.com/reference/android/icu/util/ICUUncheckedIOException.html
IDN	A										<section class="prog__container"><pre><code>public final class IDN</code></pre>Provides methods to convert internationalized domain names (IDNs) between a normal Unicode representation and an ASCII Compatible Encoding (ACE) representation. Internationalized domain names can use characters from the entire range of Unicode, while traditional domain names are restricted to ASCII characters. ACE is an encoding of Unicode strings that uses only ASCII characters and can be used with software (such as the Domain Name System) that only understands traditional domain names.</section>	https://developer.android.com/reference/java/net/IDN.html
IDNA	A										<section class="prog__container"><pre><code>public abstract class IDNA</code></pre>Abstract base class for IDNA processing. See http://www.unicode.org/reports/tr46/ and http://www.ietf.org/rfc/rfc3490.txt</section>	https://developer.android.com/reference/android/icu/text/IDNA.html
IDNA.Error	A										<section class="prog__container"><pre><code>public static final enum IDNA.Error</code></pre>IDNA error bit set values. When a domain name or label fails a processing step or does not meet the validity criteria, then one or more of these error bits are set.</section>	https://developer.android.com/reference/android/icu/text/IDNA.Error.html
IDNA.Info	A										<section class="prog__container"><pre><code>public static final class IDNA.Info</code></pre>Output container for IDNA processing errors. The Info class is not suitable for subclassing.</section>	https://developer.android.com/reference/android/icu/text/IDNA.Info.html
IInterface	A										<section class="prog__container"><pre><code>public interface IInterface</code></pre>Base class for Binder interfaces. When defining a new interface, you must derive it from IInterface.</section>	https://developer.android.com/reference/android/os/IInterface.html
IOError	A										<section class="prog__container"><pre><code>public class IOError</code></pre>Thrown when a serious I/O error has occurred.</section>	https://developer.android.com/reference/java/io/IOError.html
IOException	A										<section class="prog__container"><pre><code>public class IOException</code></pre>Signals that an I/O exception of some sort has occurred. This class is the general class of exceptions produced by failed or interrupted I/O operations.</section>	https://developer.android.com/reference/java/io/IOException.html
IccOpenLogicalChannelResponse	A										<section class="prog__container"><pre><code>public class IccOpenLogicalChannelResponse</code></pre>Response to the <code>iccOpenLogicalChannel(String)</code> command.</section>	https://developer.android.com/reference/android/telephony/IccOpenLogicalChannelResponse.html
Icon	A										<section class="prog__container"><pre><code>public final class Icon</code></pre>An umbrella container for several serializable graphics representations, including Bitmaps, compressed bitmap images (e.g. JPG or PNG), and drawable resources (including vectors). Much ink has been spilled on the best way to load images, and many clients may have different needs when it comes to threading and fetching. This class is therefore focused on encapsulation rather than behavior.</section>	https://developer.android.com/reference/android/graphics/drawable/Icon.html
Icon.OnDrawableLoadedListener	A										<section class="prog__container"><pre><code>public static interface Icon.OnDrawableLoadedListener</code></pre>Implement this interface to receive a callback when <code>loadDrawableAsync</code> is finished and your Drawable is ready.</section>	https://developer.android.com/reference/android/graphics/drawable/Icon.OnDrawableLoadedListener.html
IconMarginSpan	A										<section class="prog__container"><pre><code>public class IconMarginSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/IconMarginSpan.html
IdRes	A										<section class="prog__container"><pre><code>public abstract @interface IdRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be an id resource reference (e.g. <code>android.R.id.copy</code>).</section>	https://developer.android.com/reference/android/support/annotation/IdRes.html
Identity	A										<section class="prog__container"><pre><code>public abstract class Identity</code></pre><p class="caution"><strong> This class was deprecated in API level 1.</strong><br/> This class is no longer used. Its functionality has been replaced by <code>java.security.KeyStore</code>, the <code>java.security.cert</code> package, and <code>java.security.Principal</code>.</section>	https://developer.android.com/reference/java/security/Identity.html
IdentityHashMap	A										<section class="prog__container"><pre><code>public class IdentityHashMap</code></pre>This class implements the <tt>Map</tt> interface with a hash table, using reference-equality in place of object-equality when comparing keys (and values). In other words, in an <tt>IdentityHashMap</tt>, two keys <tt>k1</tt> and <tt>k2</tt> are considered equal if and only if <tt>(k1==k2)</tt>. (In normal <tt>Map</tt> implementations (like <tt>HashMap</tt>) two keys <tt>k1</tt> and <tt>k2</tt> are considered equal if and only if <tt>(k1==null ? k2==null : k1.equals(k2))</tt>.)</section>	https://developer.android.com/reference/java/util/IdentityHashMap.html
IdentityScope	A										<section class="prog__container"><pre><code>public abstract class IdentityScope</code></pre><p class="caution"><strong> This class was deprecated in API level 1.</strong><br/> This class is no longer used. Its functionality has been replaced by <code>java.security.KeyStore</code>, the <code>java.security.cert</code> package, and <code>java.security.Principal</code>.</section>	https://developer.android.com/reference/java/security/IdentityScope.html
IllegalAccessError	A										<section class="prog__container"><pre><code>public class IllegalAccessError</code></pre>Thrown if an application attempts to access or modify a field, or to call a method that it does not have access to.</section>	https://developer.android.com/reference/java/lang/IllegalAccessError.html
IllegalAccessException	A										<section class="prog__container"><pre><code>public class IllegalAccessException</code></pre>An IllegalAccessException is thrown when an application tries to reflectively create an instance (other than an array), set or get a field, or invoke a method, but the currently executing method does not have access to the definition of the specified class, field, method or constructor.</section>	https://developer.android.com/reference/java/lang/IllegalAccessException.html
IllegalArgumentException	A										<section class="prog__container"><pre><code>public class IllegalArgumentException</code></pre>Thrown to indicate that a method has been passed an illegal or inappropriate argument.</section>	https://developer.android.com/reference/java/lang/IllegalArgumentException.html
IllegalBlockSizeException	A										<section class="prog__container"><pre><code>public class IllegalBlockSizeException</code></pre>This exception is thrown when the length of data provided to a block cipher is incorrect, i.e., does not match the block size of the cipher.</section>	https://developer.android.com/reference/javax/crypto/IllegalBlockSizeException.html
IllegalBlockingModeException	A										<section class="prog__container"><pre><code>public class IllegalBlockingModeException</code></pre>Unchecked exception thrown when a blocking-mode-specific operation is invoked upon a channel in the incorrect blocking mode.</section>	https://developer.android.com/reference/java/nio/channels/IllegalBlockingModeException.html
IllegalCharsetNameException	A										<section class="prog__container"><pre><code>public class IllegalCharsetNameException</code></pre>Unchecked exception thrown when a string that is not a legal charset name is used as such.</section>	https://developer.android.com/reference/java/nio/charset/IllegalCharsetNameException.html
IllegalFormatCodePointException	A										<section class="prog__container"><pre><code>public class IllegalFormatCodePointException</code></pre>Unchecked exception thrown when a character with an invalid Unicode code point as defined by <code>isValidCodePoint(int)</code> is passed to the <code>Formatter</code>.</section>	https://developer.android.com/reference/java/util/IllegalFormatCodePointException.html
IllegalFormatConversionException	A										<section class="prog__container"><pre><code>public class IllegalFormatConversionException</code></pre>Unchecked exception thrown when the argument corresponding to the format specifier is of an incompatible type.</section>	https://developer.android.com/reference/java/util/IllegalFormatConversionException.html
IllegalFormatException	A										<section class="prog__container"><pre><code>public class IllegalFormatException</code></pre>Unchecked exception thrown when a format string contains an illegal syntax or a format specifier that is incompatible with the given arguments. Only explicit subtypes of this exception which correspond to specific errors should be instantiated.</section>	https://developer.android.com/reference/java/util/IllegalFormatException.html
IllegalFormatFlagsException	A										<section class="prog__container"><pre><code>public class IllegalFormatFlagsException</code></pre>Unchecked exception thrown when an illegal combination flags is given.</section>	https://developer.android.com/reference/java/util/IllegalFormatFlagsException.html
IllegalFormatPrecisionException	A										<section class="prog__container"><pre><code>public class IllegalFormatPrecisionException</code></pre>Unchecked exception thrown when the precision is a negative value other than <tt>-1</tt>, the conversion does not support a precision, or the value is otherwise unsupported.</section>	https://developer.android.com/reference/java/util/IllegalFormatPrecisionException.html
IllegalFormatWidthException	A										<section class="prog__container"><pre><code>public class IllegalFormatWidthException</code></pre>Unchecked exception thrown when the format width is a negative value other than <tt>-1</tt> or is otherwise unsupported.</section>	https://developer.android.com/reference/java/util/IllegalFormatWidthException.html
IllegalMonitorStateException	A										<section class="prog__container"><pre><code>public class IllegalMonitorStateException</code></pre>Thrown to indicate that a thread has attempted to wait on an object's monitor or to notify other threads waiting on an object's monitor without owning the specified monitor.</section>	https://developer.android.com/reference/java/lang/IllegalMonitorStateException.html
IllegalSelectorException	A										<section class="prog__container"><pre><code>public class IllegalSelectorException</code></pre>Unchecked exception thrown when an attempt is made to register a channel with a selector that was not created by the provider that created the channel.</section>	https://developer.android.com/reference/java/nio/channels/IllegalSelectorException.html
IllegalStateException	A										<section class="prog__container"><pre><code>public class IllegalStateException</code></pre>Signals that a method has been invoked at an illegal or inappropriate time. In other words, the Java environment or Java application is not in an appropriate state for the requested operation.</section>	https://developer.android.com/reference/java/lang/IllegalStateException.html
IllegalThreadStateException	A										<section class="prog__container"><pre><code>public class IllegalThreadStateException</code></pre>Thrown to indicate that a thread is not in an appropriate state for the requested operation. See, for example, the <code>suspend</code> and <code>resume</code> methods in class <code>Thread</code>.</section>	https://developer.android.com/reference/java/lang/IllegalThreadStateException.html
IllformedLocaleException	A										<section class="prog__container"><pre><code>public class IllformedLocaleException</code></pre>Thrown by methods in <code>Locale</code> and <code>Locale.Builder</code> to indicate that an argument is not a well-formed BCP 47 tag.</section>	https://developer.android.com/reference/java/util/IllformedLocaleException.html
Image	A										<section class="prog__container"><pre><code>public abstract class Image</code></pre></section>	https://developer.android.com/reference/android/media/Image.html
Image.Plane	A										<section class="prog__container"><pre><code>public static abstract class Image.Plane</code></pre></section>	https://developer.android.com/reference/android/media/Image.Plane.html
ImageButton	A										<section class="prog__container"><pre><code>public class ImageButton</code></pre></section>	https://developer.android.com/reference/android/widget/ImageButton.html
ImageCardView	A										<section class="prog__container"><pre><code>public class ImageCardView</code></pre>A subclass of <code>BaseCardView</code> with an <code>ImageView</code> as its main region. The <code>ImageCardView</code> is highly customizable and can be used for various use-cases by adjusting the ImageViewCard's type to any combination of Title, Content, Badge or ImageOnly.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ImageCardView.html
ImageFormat	A										<section class="prog__container"><pre><code>public class ImageFormat</code></pre></section>	https://developer.android.com/reference/android/graphics/ImageFormat.html
ImageReader	A										<section class="prog__container"><pre><code>public class ImageReader</code></pre></section>	https://developer.android.com/reference/android/media/ImageReader.html
ImageReader.OnImageAvailableListener	A										<section class="prog__container"><pre><code>public static interface ImageReader.OnImageAvailableListener</code></pre>Callback interface for being notified that a new image is available.</section>	https://developer.android.com/reference/android/media/ImageReader.OnImageAvailableListener.html
ImageSpan	A										<section class="prog__container"><pre><code>public class ImageSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/ImageSpan.html
ImageSwitcher	A										<section class="prog__container"><pre><code>public class ImageSwitcher</code></pre></section>	https://developer.android.com/reference/android/widget/ImageSwitcher.html
ImageView	A										<section class="prog__container"><pre><code>public class ImageView</code></pre>Displays an arbitrary image, such as an icon. The ImageView class can load images from various sources (such as resources or content providers), takes care of computing its measurement from the image so that it can be used in any layout manager, and provides various display options such as scaling and tinting.</section>	https://developer.android.com/reference/android/widget/ImageView.html
ImageView.ScaleType	A										<section class="prog__container"><pre><code>public static final enum ImageView.ScaleType</code></pre>Options for scaling the bounds of an image to the bounds of this view.</section>	https://developer.android.com/reference/android/widget/ImageView.ScaleType.html
ImageWriter	A										<section class="prog__container"><pre><code>public class ImageWriter</code></pre></section>	https://developer.android.com/reference/android/media/ImageWriter.html
ImageWriter.OnImageReleasedListener	A										<section class="prog__container"><pre><code>public static interface ImageWriter.OnImageReleasedListener</code></pre>ImageWriter callback interface, used to to asynchronously notify the application of various ImageWriter events.</section>	https://developer.android.com/reference/android/media/ImageWriter.OnImageReleasedListener.html
ImeKeyMonitor	A										<section class="prog__container"><pre><code>public interface ImeKeyMonitor</code></pre>Interface for an EditText subclass that can delegate calls to onKeyPreIme up to a registered listener.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ImeKeyMonitor.html
ImeKeyMonitor.ImeKeyListener	A										<section class="prog__container"><pre><code>public static interface ImeKeyMonitor.ImeKeyListener</code></pre>Listener interface for key events intercepted pre-IME by edit text objects.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ImeKeyMonitor.ImeKeyListener.html
InCallService	A										<section class="prog__container"><pre><code>public abstract class InCallService</code></pre>This service is implemented by any app that wishes to provide the user-interface for managing phone calls. Telecom binds to this service while there exists a live (active or incoming) call, and uses it to notify the in-call app of any live and recently disconnected calls. An app must first be set as the default phone app (See <code>getDefaultDialerPackage()</code>) before the telecom service will bind to its <code>InCallService</code> implementation.</section>	https://developer.android.com/reference/android/telecom/InCallService.html
InCallService.VideoCall	A										<section class="prog__container"><pre><code>public static abstract class InCallService.VideoCall</code></pre>Used to issue commands to the <code>Connection.VideoProvider</code> associated with a <code>Call</code>.</section>	https://developer.android.com/reference/android/telecom/InCallService.VideoCall.html
InCallService.VideoCall.Callback	A										<section class="prog__container"><pre><code>public static abstract class InCallService.VideoCall.Callback</code></pre>The <code>InCallService</code> extends this class to provide a means of receiving callbacks from the <code>Connection.VideoProvider</code>.</section>	https://developer.android.com/reference/android/telecom/InCallService.VideoCall.Callback.html
IncompatibleClassChangeError	A										<section class="prog__container"><pre><code>public class IncompatibleClassChangeError</code></pre>Thrown when an incompatible class change has occurred to some class definition. The definition of some class, on which the currently executing method depends, has since changed.</section>	https://developer.android.com/reference/java/lang/IncompatibleClassChangeError.html
IncompleteAnnotationException	A										<section class="prog__container"><pre><code>public class IncompleteAnnotationException</code></pre>Thrown to indicate that a program has attempted to access an element of an annotation type that was added to the annotation type definition after the annotation was compiled (or serialized). This exception will not be thrown if the new element has a default value. This exception can be thrown by the API used to read annotations reflectively</section>	https://developer.android.com/reference/java/lang/annotation/IncompleteAnnotationException.html
IndexOutOfBoundsException	A										<section class="prog__container"><pre><code>public class IndexOutOfBoundsException</code></pre>Thrown to indicate that an index of some sort (such as to an array, to a string, or to a vector) is out of range.</section>	https://developer.android.com/reference/java/lang/IndexOutOfBoundsException.html
IndexedPropertyChangeEvent	A										<section class="prog__container"><pre><code>public class IndexedPropertyChangeEvent</code></pre>An "IndexedPropertyChange" event gets delivered whenever a component that conforms to the JavaBeans&trade; specification (a "bean") changes a bound indexed property. This class is an extension of <code>PropertyChangeEvent</code> but contains the index of the property that has changed.</section>	https://developer.android.com/reference/java/beans/IndexedPropertyChangeEvent.html
IndianCalendar	A										<section class="prog__container"><pre><code>public class IndianCalendar</code></pre><code>IndianCalendar</code> is a subclass of <code>GregorianCalendar</code> that numbers years since the birth of the Buddha. This is the civil calendar which is accepted by government of India as Indian National Calendar. The two calendars most widely used in India today are the Vikrama calendar followed in North India and the Shalivahana or Saka calendar which is followed in South India and Maharashtra. A variant of the Shalivahana Calendar was reformed and standardized as the Indian National calendar in 1957.</section>	https://developer.android.com/reference/android/icu/util/IndianCalendar.html
Inet4Address	A										<section class="prog__container"><pre><code>public final class Inet4Address</code></pre>This class represents an Internet Protocol version 4 (IPv4) address. Defined by <i>RFC&nbsp;790: Assigned Numbers</i>, <i>RFC&nbsp;1918: Address Allocation for Private Internets</i>, and <i>RFC&nbsp;2365: Administratively Scoped IP Multicast</i> <h4> Textual representation of IP addresses </h4> Textual representation of IPv4 address used as input to methods takes one of the following forms: <blockquote><table cellpadding="0" cellspacing="0" summary="layout"> <tr><td><tt>d.d.d.d</tt></td></tr> <tr><td><tt>d.d.d</tt></td></tr> <tr><td><tt>d.d</tt></td></tr> <tr><td><tt>d</tt></td></tr> </table></blockquote></section>	https://developer.android.com/reference/java/net/Inet4Address.html
Inet6Address	A										<section class="prog__container"><pre><code>public final class Inet6Address</code></pre>This class represents an Internet Protocol version 6 (IPv6) address. Defined by <i>RFC&nbsp;2373: IP Version 6 Addressing Architecture</i>. <h4> Textual representation of IP addresses </h4> Textual representation of IPv6 address used as input to methods takes one of the following forms: <ol> <li></section>	https://developer.android.com/reference/java/net/Inet6Address.html
InetAddress	A										<section class="prog__container"><pre><code>public class InetAddress</code></pre>This class represents an Internet Protocol (IP) address.</section>	https://developer.android.com/reference/java/net/InetAddress.html
InetSocketAddress	A										<section class="prog__container"><pre><code>public class InetSocketAddress</code></pre>This class implements an IP Socket Address (IP address + port number) It can also be a pair (hostname + port number), in which case an attempt will be made to resolve the hostname. If resolution fails then the address is said to be <i>unresolved</i> but can still be used on some circumstances like connecting through a proxy.</section>	https://developer.android.com/reference/java/net/InetSocketAddress.html
InflateException	A										<section class="prog__container"><pre><code>public class InflateException</code></pre>This exception is thrown by an inflater on error conditions.</section>	https://developer.android.com/reference/android/view/InflateException.html
Inflater	A										<section class="prog__container"><pre><code>public class Inflater</code></pre>This class provides support for general purpose decompression using the popular ZLIB compression library. The ZLIB compression library was initially developed as part of the PNG graphics standard and is not protected by patents. It is fully described in the specifications at the java.util.zip package description.</section>	https://developer.android.com/reference/java/util/zip/Inflater.html
InflaterInputStream	A										<section class="prog__container"><pre><code>public class InflaterInputStream</code></pre>This class implements a stream filter for uncompressing data in the "deflate" compression format. It is also used as the basis for other decompression filters, such as GZIPInputStream.</section>	https://developer.android.com/reference/java/util/zip/InflaterInputStream.html
InflaterOutputStream	A										<section class="prog__container"><pre><code>public class InflaterOutputStream</code></pre>Implements an output stream filter for uncompressing data stored in the "deflate" compression format.</section>	https://developer.android.com/reference/java/util/zip/InflaterOutputStream.html
InheritableThreadLocal	A										<section class="prog__container"><pre><code>public class InheritableThreadLocal</code></pre>This class extends <tt>ThreadLocal</tt> to provide inheritance of values from parent thread to child thread: when a child thread is created, the child receives initial values for all inheritable thread-local variables for which the parent has values. Normally the child's values will be identical to the parent's; however, the child's value can be made an arbitrary function of the parent's by overriding the <tt>childValue</tt> method in this class.</section>	https://developer.android.com/reference/java/lang/InheritableThreadLocal.html
Inherited	A										<section class="prog__container"><pre><code>public abstract @interface Inherited</code></pre>Indicates that an annotation type is automatically inherited. If an Inherited meta-annotation is present on an annotation type declaration, and the user queries the annotation type on a class declaration, and the class declaration has no annotation for this type, then the class's superclass will automatically be queried for the annotation type. This process will be repeated until an annotation for this type is found, or the top of the class hierarchy (Object) is reached. If no superclass has an annotation for this type, then the query will indicate that the class in question has no such annotation.</section>	https://developer.android.com/reference/java/lang/annotation/Inherited.html
InputBinding	A										<section class="prog__container"><pre><code>public final class InputBinding</code></pre>Information given to an <code>InputMethod</code> about a client connecting to it.</section>	https://developer.android.com/reference/android/view/inputmethod/InputBinding.html
InputConfiguration	A										<section class="prog__container"><pre><code>public final class InputConfiguration</code></pre>Immutable class to store an input configuration that is used to create a reprocessable capture session.</section>	https://developer.android.com/reference/android/hardware/camera2/params/InputConfiguration.html
InputConnection	A										<section class="prog__container"><pre><code>public interface InputConnection</code></pre>The InputConnection interface is the communication channel from an <code>InputMethod</code> back to the application that is receiving its input. It is used to perform such things as reading text around the cursor, committing text to the text box, and sending raw key events to the application.</section>	https://developer.android.com/reference/android/view/inputmethod/InputConnection.html
InputConnectionCompat	A										<section class="prog__container"><pre><code>public final class InputConnectionCompat</code></pre>Helper for accessing features in <code>InputConnection</code> introduced after API level 13 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v13/view/inputmethod/InputConnectionCompat.html
InputConnectionCompat.OnCommitContentListener	A										<section class="prog__container"><pre><code>public static interface InputConnectionCompat.OnCommitContentListener</code></pre>Listener for commitContent method call, in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v13/view/inputmethod/InputConnectionCompat.OnCommitContentListener.html
InputConnectionWrapper	A										<section class="prog__container"><pre><code>public class InputConnectionWrapper</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/InputConnectionWrapper.html
InputContentInfo	A										<section class="prog__container"><pre><code>public final class InputContentInfo</code></pre>A container object with which input methods can send content files to the target application.</section>	https://developer.android.com/reference/android/view/inputmethod/InputContentInfo.html
InputContentInfoCompat	A										<section class="prog__container"><pre><code>public final class InputContentInfoCompat</code></pre>Helper for accessing features in InputContentInfo introduced after API level 13 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v13/view/inputmethod/InputContentInfoCompat.html
InputDevice	A										<section class="prog__container"><pre><code>public final class InputDevice</code></pre>Describes the capabilities of a particular input device.</section>	https://developer.android.com/reference/android/view/InputDevice.html
InputDevice.MotionRange	A										<section class="prog__container"><pre><code>public static final class InputDevice.MotionRange</code></pre>Provides information about the range of values for a particular <code>MotionEvent</code> axis.</section>	https://developer.android.com/reference/android/view/InputDevice.MotionRange.html
InputDeviceCompat	A										<section class="prog__container"><pre><code>public final class InputDeviceCompat</code></pre>Helper class for accessing values in <code>InputDevice</code>.</section>	https://developer.android.com/reference/android/support/v4/view/InputDeviceCompat.html
InputEvent	A										<section class="prog__container"><pre><code>public abstract class InputEvent</code></pre>Common base class for input events.</section>	https://developer.android.com/reference/android/view/InputEvent.html
InputFilter	A										<section class="prog__container"><pre><code>public interface InputFilter</code></pre>InputFilters can be attached to <code>Editable</code>s to constrain the changes that can be made to them.</section>	https://developer.android.com/reference/android/text/InputFilter.html
InputFilter.AllCaps	A										<section class="prog__container"><pre><code>public static class InputFilter.AllCaps</code></pre>This filter will capitalize all the lower case letters that are added through edits.</section>	https://developer.android.com/reference/android/text/InputFilter.AllCaps.html
InputFilter.LengthFilter	A										<section class="prog__container"><pre><code>public static class InputFilter.LengthFilter</code></pre>This filter will constrain edits not to make the length of the text greater than the specified length.</section>	https://developer.android.com/reference/android/text/InputFilter.LengthFilter.html
InputManager	A										<section class="prog__container"><pre><code>public final class InputManager</code></pre>Provides information about input devices and available key layouts.</section>	https://developer.android.com/reference/android/hardware/input/InputManager.html
InputManager.InputDeviceListener	A										<section class="prog__container"><pre><code>public static interface InputManager.InputDeviceListener</code></pre>Listens for changes in input devices.</section>	https://developer.android.com/reference/android/hardware/input/InputManager.InputDeviceListener.html
InputMethod	A										<section class="prog__container"><pre><code>public interface InputMethod</code></pre>The InputMethod interface represents an input method which can generate key events and text, such as digital, email addresses, CJK characters, other language characters, and etc., while handling various input events, and send the text back to the application that requests text input. See <code>InputMethodManager</code> for more general information about the architecture.</section>	https://developer.android.com/reference/android/view/inputmethod/InputMethod.html
InputMethod.SessionCallback	A										<section class="prog__container"><pre><code>public static interface InputMethod.SessionCallback</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/InputMethod.SessionCallback.html
InputMethodInfo	A										<section class="prog__container"><pre><code>public final class InputMethodInfo</code></pre>This class is used to specify meta information of an input method.</section>	https://developer.android.com/reference/android/view/inputmethod/InputMethodInfo.html
InputMethodManager	A										<section class="prog__container"><pre><code>public final class InputMethodManager</code></pre>Central system API to the overall input method framework (IMF) architecture, which arbitrates interaction between applications and the current input method. You can retrieve an instance of this interface with <code>Context.getSystemService()</code>.</section>	https://developer.android.com/reference/android/view/inputmethod/InputMethodManager.html
InputMethodService	A										<section class="prog__container"><pre><code>public class InputMethodService</code></pre>InputMethodService provides a standard implementation of an InputMethod, which final implementations can derive from and customize. See the base class <code>AbstractInputMethodService</code> and the <code>InputMethod</code> interface for more information on the basics of writing input methods.</section>	https://developer.android.com/reference/android/inputmethodservice/InputMethodService.html
InputMethodService.InputMethodImpl	A										<section class="prog__container"><pre><code>public class InputMethodService.InputMethodImpl</code></pre>Concrete implementation of <code>AbstractInputMethodService.AbstractInputMethodImpl</code> that provides all of the standard behavior for an input method.</section>	https://developer.android.com/reference/android/inputmethodservice/InputMethodService.InputMethodImpl.html
InputMethodService.InputMethodSessionImpl	A										<section class="prog__container"><pre><code>public class InputMethodService.InputMethodSessionImpl</code></pre>Concrete implementation of <code>AbstractInputMethodService.AbstractInputMethodSessionImpl</code> that provides all of the standard behavior for an input method session.</section>	https://developer.android.com/reference/android/inputmethodservice/InputMethodService.InputMethodSessionImpl.html
InputMethodService.Insets	A										<section class="prog__container"><pre><code>public static final class InputMethodService.Insets</code></pre>Information about where interesting parts of the input method UI appear.</section>	https://developer.android.com/reference/android/inputmethodservice/InputMethodService.Insets.html
InputMethodSession	A										<section class="prog__container"><pre><code>public interface InputMethodSession</code></pre>The InputMethodSession interface provides the per-client functionality of <code>InputMethod</code> that is safe to expose to applications.</section>	https://developer.android.com/reference/android/view/inputmethod/InputMethodSession.html
InputMethodSession.EventCallback	A										<section class="prog__container"><pre><code>public static interface InputMethodSession.EventCallback</code></pre></section>	https://developer.android.com/reference/android/view/inputmethod/InputMethodSession.EventCallback.html
InputMethodSubtype	A										<section class="prog__container"><pre><code>public final class InputMethodSubtype</code></pre>This class is used to specify meta information of a subtype contained in an input method editor (IME). Subtype can describe locale (e.g. en_US, fr_FR...) and mode (e.g. voice, keyboard...), and is used for IME switch and settings. The input method subtype allows the system to bring up the specified subtype of the designated IME directly.</section>	https://developer.android.com/reference/android/view/inputmethod/InputMethodSubtype.html
InputMethodSubtype.InputMethodSubtypeBuilder	A										<section class="prog__container"><pre><code>public static class InputMethodSubtype.InputMethodSubtypeBuilder</code></pre>InputMethodSubtypeBuilder is a builder class of InputMethodSubtype. This class is designed to be used with <code>setAdditionalInputMethodSubtypes(String, InputMethodSubtype[])</code>. The developer needs to be aware of what each parameter means.</section>	https://developer.android.com/reference/android/view/inputmethod/InputMethodSubtype.InputMethodSubtypeBuilder.html
InputMethodUtils	A										InputMethodManagerUtils contains some static methods that provides IME informations.	https://developer.android.com/reference/com/android/internal/inputmethod/package-summary.html
InputMethodUtils.InputMethodSettings	A										Utility class for putting and getting settings for InputMethod TODO: Move all putters and getters of settings to this class.	https://developer.android.com/reference/com/android/internal/inputmethod/package-summary.html
InputMismatchException	A										<section class="prog__container"><pre><code>public class InputMismatchException</code></pre>Thrown by a <code>Scanner</code> to indicate that the token retrieved does not match the pattern for the expected type, or that the token is out of range for the expected type.</section>	https://developer.android.com/reference/java/util/InputMismatchException.html
InputQueue	A										<section class="prog__container"><pre><code>public final class InputQueue</code></pre>An input queue provides a mechanism for an application to receive incoming input events. Currently only usable from native code.</section>	https://developer.android.com/reference/android/view/InputQueue.html
InputQueue.Callback	A										<section class="prog__container"><pre><code>public static interface InputQueue.Callback</code></pre>Interface to receive notification of when an InputQueue is associated and dissociated with a thread.</section>	https://developer.android.com/reference/android/view/InputQueue.Callback.html
InputSource	A										<section class="prog__container"><pre><code>public class InputSource</code></pre>A single input source for an XML entity. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/InputSource.html
InputStream	A										<section class="prog__container"><pre><code>public abstract class InputStream</code></pre>This abstract class is the superclass of all classes representing an input stream of bytes.</section>	https://developer.android.com/reference/java/io/InputStream.html
InputStreamReader	A										<section class="prog__container"><pre><code>public class InputStreamReader</code></pre>An InputStreamReader is a bridge from byte streams to character streams: It reads bytes and decodes them into characters using a specified <code><code>charset</code></code>. The charset that it uses may be specified by name or may be given explicitly, or the platform's default charset may be accepted.</section>	https://developer.android.com/reference/java/io/InputStreamReader.html
InputType	A										<section class="prog__container"><pre><code>public interface InputType</code></pre>Bit definitions for an integer defining the basic content type of text held in an <code>Editable</code> object. Supported classes may be combined with variations and flags to indicate desired behaviors. <h3>Examples</h3> <dl> <dt>A password field with with the password visible to the user: <dd>inputType = TYPE_CLASS_TEXT | TYPE_TEXT_VARIATION_VISIBLE_PASSWORD <dt>A multi-line postal address with automatic capitalization: <dd>inputType = TYPE_CLASS_TEXT | TYPE_TEXT_VARIATION_POSTAL_ADDRESS | TYPE_TEXT_FLAG_MULTI_LINE <dt>A time field: <dd>inputType = TYPE_CLASS_DATETIME | TYPE_DATETIME_VARIATION_TIME </dd></dt></dd></dt></dd></dt></dl></section>	https://developer.android.com/reference/android/text/InputType.html
InsetDrawable	A										<section class="prog__container"><pre><code>public class InsetDrawable</code></pre>A Drawable that insets another Drawable by a specified distance. This is used when a View needs a background that is smaller than the View's actual bounds.</section>	https://developer.android.com/reference/android/graphics/drawable/InsetDrawable.html
InstantiationError	A										<section class="prog__container"><pre><code>public class InstantiationError</code></pre>Thrown when an application tries to use the Java <code>new</code> construct to instantiate an abstract class or an interface.</section>	https://developer.android.com/reference/java/lang/InstantiationError.html
InstantiationException	A										<section class="prog__container"><pre><code>public class InstantiationException</code></pre>Thrown when an application tries to create an instance of a class using the <code>newInstance</code> method in class <code>Class</code>, but the specified class object cannot be instantiated. The instantiation can fail for a variety of reasons including but not limited to: <ul> <li> the class object represents an abstract class, an interface, an array class, a primitive type, or <code>void</code> <li> the class has no nullary constructor </li></li></ul></section>	https://developer.android.com/reference/java/lang/InstantiationException.html
Instrumentation	A										<section class="prog__container"><pre><code>public class Instrumentation</code></pre>Base class for implementing application instrumentation code. When running with instrumentation turned on, this class will be instantiated for you before any of the application code, allowing you to monitor all of the interaction the system has with the application. An Instrumentation implementation is described to the system through an AndroidManifest.xml's &lt;instrumentation&gt; tag.</section>	https://developer.android.com/reference/android/app/Instrumentation.html
Instrumentation.ActivityMonitor	A										<section class="prog__container"><pre><code>public static class Instrumentation.ActivityMonitor</code></pre>Information about a particular kind of Intent that is being monitored. An instance of this class is added to the current instrumentation through <code>addMonitor(Instrumentation.ActivityMonitor)</code>; after being added, when a new activity is being started the monitor will be checked and, if matching, its hit count updated and (optionally) the call stopped and a canned result returned.</section>	https://developer.android.com/reference/android/app/Instrumentation.ActivityMonitor.html
Instrumentation.ActivityResult	A										<section class="prog__container"><pre><code>public static final class Instrumentation.ActivityResult</code></pre>Description of a Activity execution result to return to the original activity.</section>	https://developer.android.com/reference/android/app/Instrumentation.ActivityResult.html
InstrumentationInfo	A										<section class="prog__container"><pre><code>public class InstrumentationInfo</code></pre>Information you can retrieve about a particular piece of test instrumentation. This corresponds to information collected from the AndroidManifest.xml's &lt;instrumentation&gt; tag.</section>	https://developer.android.com/reference/android/content/pm/InstrumentationInfo.html
InstrumentationTestCase	A										<section class="prog__container"><pre><code>public class InstrumentationTestCase</code></pre><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use InstrumentationRegistry instead. New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/InstrumentationTestCase.html
InstrumentationTestRunner	A										<section class="prog__container"><pre><code>public class InstrumentationTestRunner</code></pre><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use AndroidJUnitRunner instead. New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/InstrumentationTestRunner.html
InstrumentationTestSuite	A										<section class="prog__container"><pre><code>public class InstrumentationTestSuite</code></pre><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use InstrumentationRegistry instead. New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/InstrumentationTestSuite.html
Int2	D								*[[android.renderscript.Int2]], <section class="prog__container"><pre><code>public class Int2</code></pre>Vector version of the basic int type. Provides two int fields packed.</section>\n*[[v8.renderscript.Int2]], <section class="prog__container"><pre><code>public class Int2</code></pre>Class for exposing the native RenderScript int2 type back to the Android system.</section>			
Int3	D								*[[android.renderscript.Int3]], <section class="prog__container"><pre><code>public class Int3</code></pre>Vector version of the basic int type. Provides three int fields packed.</section>\n*[[v8.renderscript.Int3]], <section class="prog__container"><pre><code>public class Int3</code></pre>Class for exposing the native RenderScript int3 type back to the Android system.</section>			
Int4	D								*[[android.renderscript.Int4]], <section class="prog__container"><pre><code>public class Int4</code></pre>Vector version of the basic int type. Provides four int fields packed.</section>\n*[[v8.renderscript.Int4]], <section class="prog__container"><pre><code>public class Int4</code></pre>Class for exposing the native RenderScript int4 type back to the Android system.</section>			
IntArrayEvaluator	A										<section class="prog__container"><pre><code>public class IntArrayEvaluator</code></pre>This evaluator can be used to perform type interpolation between <code>int[]</code> values. Each index into the array is treated as a separate value to interpolate. For example, evaluating <code>{100, 200}</code> and <code>{300, 400}</code> will interpolate the value at the first index between 100 and 300 and the value at the second index value between 200 and 400.</section>	https://developer.android.com/reference/android/animation/IntArrayEvaluator.html
IntBinaryOperator	A										<section class="prog__container"><pre><code>public interface IntBinaryOperator</code></pre>Represents an operation upon two <code>int</code>-valued operands and producing an <code>int</code>-valued result. This is the primitive type specialization of <code>BinaryOperator</code> for <code>int</code>.</section>	https://developer.android.com/reference/java/util/function/IntBinaryOperator.html
IntBuffer	A										<section class="prog__container"><pre><code>public abstract class IntBuffer</code></pre>An int buffer.</section>	https://developer.android.com/reference/java/nio/IntBuffer.html
IntConsumer	A										<section class="prog__container"><pre><code>public interface IntConsumer</code></pre>Represents an operation that accepts a single <code>int</code>-valued argument and returns no result. This is the primitive type specialization of <code>Consumer</code> for <code>int</code>. Unlike most other functional interfaces, <code>IntConsumer</code> is expected to operate via side-effects.</section>	https://developer.android.com/reference/java/util/function/IntConsumer.html
IntDef	A										<section class="prog__container"><pre><code>public abstract @interface IntDef</code></pre>Denotes that the annotated element of integer type, represents a logical type and that its value should be one of the explicitly named constants. If the IntDef#flag() attribute is set to true, multiple constants can be combined.</section>	https://developer.android.com/reference/android/support/annotation/IntDef.html
IntEvaluator	A										<section class="prog__container"><pre><code>public class IntEvaluator</code></pre>This evaluator can be used to perform type interpolation between <code>int</code> values.</section>	https://developer.android.com/reference/android/animation/IntEvaluator.html
IntFunction	A										<section class="prog__container"><pre><code>public interface IntFunction</code></pre>Represents a function that accepts an int-valued argument and produces a result. This is the <code>int</code>-consuming primitive specialization for <code>Function</code>.</section>	https://developer.android.com/reference/java/util/function/IntFunction.html
IntPredicate	A										<section class="prog__container"><pre><code>public interface IntPredicate</code></pre>Represents a predicate (boolean-valued function) of one <code>int</code>-valued argument. This is the <code>int</code>-consuming primitive type specialization of <code>Predicate</code>.</section>	https://developer.android.com/reference/java/util/function/IntPredicate.html
IntProperty	A										<section class="prog__container"><pre><code>public abstract class IntProperty</code></pre>An implementation of <code>Property</code> to be used specifically with fields of type <code>int</code>. This type-specific subclass enables performance benefit by allowing calls to a <code>setValue()</code> function that takes the primitive <code>int</code> type and avoids autoboxing and other overhead associated with the <code>Integer</code> class.</section>	https://developer.android.com/reference/android/util/IntProperty.html
IntRange	A										<section class="prog__container"><pre><code>public abstract @interface IntRange</code></pre>Denotes that the annotated element should be an int or long in the given range</section>	https://developer.android.com/reference/android/support/annotation/IntRange.html
IntStream	A										<section class="prog__container"><pre><code>public interface IntStream</code></pre>A sequence of primitive int-valued elements supporting sequential and parallel aggregate operations. This is the <code>int</code> primitive specialization of <code>Stream</code>.</section>	https://developer.android.com/reference/java/util/stream/IntStream.html
IntStream.Builder	A										<section class="prog__container"><pre><code>public static interface IntStream.Builder</code></pre>A mutable builder for an <code>IntStream</code>.</section>	https://developer.android.com/reference/java/util/stream/IntStream.Builder.html
IntSummaryStatistics	A										<section class="prog__container"><pre><code>public class IntSummaryStatistics</code></pre>A state object for collecting statistics such as count, min, max, sum, and average.</section>	https://developer.android.com/reference/java/util/IntSummaryStatistics.html
IntSupplier	A										<section class="prog__container"><pre><code>public interface IntSupplier</code></pre>Represents a supplier of <code>int</code>-valued results. This is the <code>int</code>-producing primitive specialization of <code>Supplier</code>.</section>	https://developer.android.com/reference/java/util/function/IntSupplier.html
IntToDoubleFunction	A										<section class="prog__container"><pre><code>public interface IntToDoubleFunction</code></pre>Represents a function that accepts an int-valued argument and produces a double-valued result. This is the <code>int</code>-to-<code>double</code> primitive specialization for <code>Function</code>.</section>	https://developer.android.com/reference/java/util/function/IntToDoubleFunction.html
IntToLongFunction	A										<section class="prog__container"><pre><code>public interface IntToLongFunction</code></pre>Represents a function that accepts an int-valued argument and produces a long-valued result. This is the <code>int</code>-to-<code>long</code> primitive specialization for <code>Function</code>.</section>	https://developer.android.com/reference/java/util/function/IntToLongFunction.html
IntUnaryOperator	A										<section class="prog__container"><pre><code>public interface IntUnaryOperator</code></pre>Represents an operation on a single <code>int</code>-valued operand that produces an <code>int</code>-valued result. This is the primitive type specialization of <code>UnaryOperator</code> for <code>int</code>.</section>	https://developer.android.com/reference/java/util/function/IntUnaryOperator.html
Integer	A										<section class="prog__container"><pre><code>public final class Integer</code></pre>The <code>Integer</code> class wraps a value of the primitive type <code>int</code> in an object. An object of type <code>Integer</code> contains a single field whose type is <code>int</code>.</section>	https://developer.android.com/reference/java/lang/Integer.html
IntegerRes	A										<section class="prog__container"><pre><code>public abstract @interface IntegerRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be an integer resource reference (e.g. <code>android.R.integer.config_shortAnimTime</code>).</section>	https://developer.android.com/reference/android/support/annotation/IntegerRes.html
Intent	A										<section class="prog__container"><pre><code>public class Intent</code></pre>An intent is an abstract description of an operation to be performed. It can be used with <code>startActivity</code> to launch an <code>Activity</code>, <code>broadcastIntent</code> to send it to any interested <code>BroadcastReceiver</code> components, and <code>startService(Intent)</code> or <code>bindService(Intent, ServiceConnection, int)</code> to communicate with a background <code>Service</code>.</section>	https://developer.android.com/reference/android/content/Intent.html
Intent.FilterComparison	A										<section class="prog__container"><pre><code>public static final class Intent.FilterComparison</code></pre>Wrapper class holding an Intent and implementing comparisons on it for the purpose of filtering. The class implements its <code>equals()</code> and <code>hashCode()</code> methods as simple calls to <code>filterEquals(Intent)</code> filterEquals()} and <code>filterHashCode()</code> filterHashCode()} on the wrapped Intent.</section>	https://developer.android.com/reference/android/content/Intent.FilterComparison.html
Intent.ShortcutIconResource	A										<section class="prog__container"><pre><code>public static class Intent.ShortcutIconResource</code></pre>Represents a shortcut/live folder icon resource.</section>	https://developer.android.com/reference/android/content/Intent.ShortcutIconResource.html
IntentCompat	A										<section class="prog__container"><pre><code>public final class IntentCompat</code></pre>Helper for accessing features in <code>Intent</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/content/IntentCompat.html
IntentFilter	A										<section class="prog__container"><pre><code>public class IntentFilter</code></pre>Structured description of Intent values to be matched. An IntentFilter can match against actions, categories, and data (either via its type, scheme, and/or path) in an Intent. It also includes a "priority" value which is used to order multiple matching filters.</section>	https://developer.android.com/reference/android/content/IntentFilter.html
IntentFilter.AuthorityEntry	A										<section class="prog__container"><pre><code>public static final class IntentFilter.AuthorityEntry</code></pre>This is an entry for a single authority in the Iterator returned by <code>authoritiesIterator()</code>.</section>	https://developer.android.com/reference/android/content/IntentFilter.AuthorityEntry.html
IntentFilter.MalformedMimeTypeException	A										<section class="prog__container"><pre><code>public static class IntentFilter.MalformedMimeTypeException</code></pre>This exception is thrown when a given MIME type does not have a valid syntax.</section>	https://developer.android.com/reference/android/content/IntentFilter.MalformedMimeTypeException.html
IntentSender	A										<section class="prog__container"><pre><code>public class IntentSender</code></pre>A description of an Intent and target action to perform with it. The returned object can be handed to other applications so that they can perform the action you described on your behalf at a later time.</section>	https://developer.android.com/reference/android/content/IntentSender.html
IntentSender.OnFinished	A										<section class="prog__container"><pre><code>public static interface IntentSender.OnFinished</code></pre>Callback interface for discovering when a send operation has completed. Primarily for use with a IntentSender that is performing a broadcast, this provides the same information as calling <code>Context.sendBroadcast()</code> with a final BroadcastReceiver.</section>	https://developer.android.com/reference/android/content/IntentSender.OnFinished.html
IntentSender.SendIntentException	A										<section class="prog__container"><pre><code>public static class IntentSender.SendIntentException</code></pre>Exception thrown when trying to send through a PendingIntent that has been canceled or is otherwise no longer able to execute the request.</section>	https://developer.android.com/reference/android/content/IntentSender.SendIntentException.html
IntentService	A										<section class="prog__container"><pre><code>public abstract class IntentService</code></pre>IntentService is a base class for <code>Service</code>s that handle asynchronous requests (expressed as <code>Intent</code>s) on demand. Clients send requests through <code>startService(Intent)</code> calls; the service is started as needed, handles each Intent in turn using a worker thread, and stops itself when it runs out of work.</section>	https://developer.android.com/reference/android/app/IntentService.html
InterfaceAddress	A										<section class="prog__container"><pre><code>public class InterfaceAddress</code></pre>This class represents a Network Interface address. In short it's an IP address, a subnet mask and a broadcast address when the address is an IPv4 one. An IP address and a network prefix length in the case of IPv6 address.</section>	https://developer.android.com/reference/java/net/InterfaceAddress.html
InternalError	A										<section class="prog__container"><pre><code>public class InternalError</code></pre>Thrown to indicate some unexpected internal error has occurred in the Java Virtual Machine.</section>	https://developer.android.com/reference/java/lang/InternalError.html
Interpolator	D								*[[graphics.Interpolator]], <section class="prog__container"><pre><code>public class Interpolator</code></pre></section>\n*[[animation.Interpolator]], <section class="prog__container"><pre><code>public interface Interpolator</code></pre>An interpolator defines the rate of change of an animation. This allows the basic animation effects (alpha, scale, translate, rotate) to be accelerated, decelerated, repeated, etc.</section>			
Interpolator.Result	A										<section class="prog__container"><pre><code>public static final enum Interpolator.Result</code></pre></section>	https://developer.android.com/reference/android/graphics/Interpolator.Result.html
InterpolatorRes	A										<section class="prog__container"><pre><code>public abstract @interface InterpolatorRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be an interpolator resource reference (e.g. <code>android.R.interpolator.cycle</code>).</section>	https://developer.android.com/reference/android/support/annotation/InterpolatorRes.html
InterruptedException	A										<section class="prog__container"><pre><code>public class InterruptedException</code></pre>Thrown when a thread is waiting, sleeping, or otherwise occupied, and the thread is interrupted, either before or during the activity. Occasionally a method may wish to test whether the current thread has been interrupted, and if so, to immediately throw this exception. The following code can be used to achieve this effect: <pre> if (Thread.interrupted()) // Clears interrupted status! throw new InterruptedException(); </pre></section>	https://developer.android.com/reference/java/lang/InterruptedException.html
InterruptedIOException	A										<section class="prog__container"><pre><code>public class InterruptedIOException</code></pre>Signals that an I/O operation has been interrupted. An <code>InterruptedIOException</code> is thrown to indicate that an input or output transfer has been terminated because the thread performing it was interrupted. The field <code>bytesTransferred</code> indicates how many bytes were successfully transferred before the interruption occurred.</section>	https://developer.android.com/reference/java/io/InterruptedIOException.html
InterruptibleChannel	A										<section class="prog__container"><pre><code>public interface InterruptibleChannel</code></pre>A channel that can be asynchronously closed and interrupted.</section>	https://developer.android.com/reference/java/nio/channels/InterruptibleChannel.html
InvalidAlgorithmParameterException	A										<section class="prog__container"><pre><code>public class InvalidAlgorithmParameterException</code></pre>This is the exception for invalid or inappropriate algorithm parameters.</section>	https://developer.android.com/reference/java/security/InvalidAlgorithmParameterException.html
InvalidClassException	A										<section class="prog__container"><pre><code>public class InvalidClassException</code></pre>Thrown when the Serialization runtime detects one of the following problems with a Class. <ul> <li> The serial version of the class does not match that of the class descriptor read from the stream <li> The class contains unknown datatypes <li> The class does not have an accessible no-arg constructor </li></li></li></ul></section>	https://developer.android.com/reference/java/io/InvalidClassException.html
InvalidKeyException	A										<section class="prog__container"><pre><code>public class InvalidKeyException</code></pre>This is the exception for invalid Keys (invalid encoding, wrong length, uninitialized, etc).</section>	https://developer.android.com/reference/java/security/InvalidKeyException.html
InvalidKeySpecException	A										<section class="prog__container"><pre><code>public class InvalidKeySpecException</code></pre>This is the exception for invalid key specifications.</section>	https://developer.android.com/reference/java/security/spec/InvalidKeySpecException.html
InvalidMarkException	A										<section class="prog__container"><pre><code>public class InvalidMarkException</code></pre>Unchecked exception thrown when an attempt is made to reset a buffer when its mark is not defined.</section>	https://developer.android.com/reference/java/nio/InvalidMarkException.html
InvalidObjectException	A										<section class="prog__container"><pre><code>public class InvalidObjectException</code></pre>Indicates that one or more deserialized objects failed validation tests. The argument should provide the reason for the failure.</section>	https://developer.android.com/reference/java/io/InvalidObjectException.html
InvalidParameterException	A										<section class="prog__container"><pre><code>public class InvalidParameterException</code></pre>This exception, designed for use by the JCA/JCE engine classes, is thrown when an invalid parameter is passed to a method.</section>	https://developer.android.com/reference/java/security/InvalidParameterException.html
InvalidParameterSpecException	A										<section class="prog__container"><pre><code>public class InvalidParameterSpecException</code></pre>This is the exception for invalid parameter specifications.</section>	https://developer.android.com/reference/java/security/spec/InvalidParameterSpecException.html
InvalidPreferencesFormatException	A										<section class="prog__container"><pre><code>public class InvalidPreferencesFormatException</code></pre>Thrown to indicate that an operation could not complete because the input did not conform to the appropriate XML document type for a collection of preferences, as per the <code>Preferences</code> specification.</section>	https://developer.android.com/reference/java/util/prefs/InvalidPreferencesFormatException.html
InvalidPropertiesFormatException	A										<section class="prog__container"><pre><code>public class InvalidPropertiesFormatException</code></pre>Thrown to indicate that an operation could not complete because the input did not conform to the appropriate XML document type for a collection of properties, as per the <code>Properties</code> specification.</section>	https://developer.android.com/reference/java/util/InvalidPropertiesFormatException.html
InverseBindingAdapter	A										<section class="prog__container"><pre><code>public abstract @interface InverseBindingAdapter</code></pre>InverseBindingAdapter is associated with a method used to retrieve the value for a View when setting values gathered from the View. This is similar to <code>BindingAdapter</code>s: <pre> &amp;commat;InverseBindingAdapter(attribute = "android:text", event = "android:textAttrChanged") public static String captureTextValue(TextView view, CharSequence originalValue) { CharSequence newValue = view.getText(); CharSequence oldValue = value.get(); if (oldValue == null) { value.set(newValue); } else if (!contentEquals(newValue, oldValue)) { value.set(newValue); } } </pre></section>	https://developer.android.com/reference/android/databinding/InverseBindingAdapter.html
InverseBindingListener	A										<section class="prog__container"><pre><code>public interface InverseBindingListener</code></pre>A listener implemented by all two-way bindings to be notified when a triggering change happens. For example, when there is a two-way binding for android:text, an implementation of <code>InverseBindingListener</code> will be generated in the layout's binding class. <pre> private static class InverseListenerTextView implements InverseBindingListener { &amp;commat;Override public void onChange() { mObj.setTextValue(mTextView.getText()); } } </pre></section>	https://developer.android.com/reference/android/databinding/InverseBindingListener.html
InverseBindingMethod	A										<section class="prog__container"><pre><code>public abstract @interface InverseBindingMethod</code></pre>InverseBindingMethod is used to identify how to listen for changes to a View property and which getter method to call. InverseBindingMethod should be associated with any class as part of <code>InverseBindingMethods</code>.</section>	https://developer.android.com/reference/android/databinding/InverseBindingMethod.html
InverseBindingMethods	A										<section class="prog__container"><pre><code>public abstract @interface InverseBindingMethods</code></pre>Used to enumerate attribute, getter, and event association. The value is an array of <code>InverseBindingMethod</code>s.</section>	https://developer.android.com/reference/android/databinding/InverseBindingMethods.html
InvocationHandler	A										<section class="prog__container"><pre><code>public interface InvocationHandler</code></pre><code>InvocationHandler</code> is the interface implemented by the <i>invocation handler</i> of a proxy instance.</section>	https://developer.android.com/reference/java/lang/reflect/InvocationHandler.html
InvocationTargetException	A										<section class="prog__container"><pre><code>public class InvocationTargetException</code></pre>InvocationTargetException is a checked exception that wraps an exception thrown by an invoked method or constructor.</section>	https://developer.android.com/reference/java/lang/reflect/InvocationTargetException.html
IpPrefix	A										<section class="prog__container"><pre><code>public final class IpPrefix</code></pre>This class represents an IP prefix, i.e., a contiguous block of IP addresses aligned on a power of two boundary (also known as an "IP subnet"). A prefix is specified by two pieces of information: <ul> <li>A starting IP address (IPv4 or IPv6). This is the first IP address of the prefix. <li>A prefix length. This specifies the length of the prefix by specifing the number of bits in the IP address, starting from the most significant bit in network byte order, that are constant for all addresses in the prefix. </li></li></ul> For example, the prefix <code>192.0.2.0/24</code> covers the 256 IPv4 addresses from <code>192.0.2.0</code> to <code>192.0.2.255</code>, inclusive, and the prefix <code>2001:db8:1:2</code> covers the 2^64 IPv6 addresses from <code>2001:db8:1:2::</code> to <code>2001:db8:1:2:ffff:ffff:ffff:ffff</code>, inclusive. Objects of this class are immutable.</section>	https://developer.android.com/reference/android/net/IpPrefix.html
IslamicCalendar	A										<section class="prog__container"><pre><code>public class IslamicCalendar</code></pre><code>IslamicCalendar</code> is a subclass of <code>Calendar</code> that that implements the Islamic civil and religious calendars. It is used as the civil calendar in most of the Arab world and the liturgical calendar of the Islamic faith worldwide. This calendar is also known as the "Hijri" calendar, since it starts at the time of Mohammed's emigration (or "hijra") to Medinah on Thursday, July 15, 622 AD (Julian).</section>	https://developer.android.com/reference/android/icu/util/IslamicCalendar.html
IslamicCalendar.CalculationType	A										<section class="prog__container"><pre><code>public static final enum IslamicCalendar.CalculationType</code></pre>enumeration of available calendar calculation types</section>	https://developer.android.com/reference/android/icu/util/IslamicCalendar.CalculationType.html
IsoDep	A										<section class="prog__container"><pre><code>public final class IsoDep</code></pre>Provides access to ISO-DEP (ISO 14443-4) properties and I/O operations on a <code>Tag</code>.</section>	https://developer.android.com/reference/android/nfc/tech/IsoDep.html
IsolatedContext	A										<section class="prog__container"><pre><code>public class IsolatedContext</code></pre><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/IsolatedContext.html
ItemAlignmentFacet	A										<section class="prog__container"><pre><code>public final class ItemAlignmentFacet</code></pre>Optional facet provided by <code>RecyclerView.Adapter</code> or <code>RecyclerView.ViewHolder</code> for use in <code>HorizontalGridView</code> and <code>VerticalGridView</code>. Apps using <code>Presenter</code> may set facet using <code>setFacet(Class, Object)</code> or <code>setFacet(Class, Object)</code>. Facet on ViewHolder has a higher priority than Presenter or Adapter.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ItemAlignmentFacet.html
ItemAlignmentFacet.ItemAlignmentDef	A										<section class="prog__container"><pre><code>public static class ItemAlignmentFacet.ItemAlignmentDef</code></pre>Definition of an alignment position under a view.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ItemAlignmentFacet.ItemAlignmentDef.html
ItemBridgeAdapter	A										<section class="prog__container"><pre><code>public class ItemBridgeAdapter</code></pre>Bridge from <code>Presenter</code> to <code>RecyclerView.Adapter</code>. Public to allow use by third party Presenters.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ItemBridgeAdapter.html
ItemBridgeAdapter.AdapterListener	A										<section class="prog__container"><pre><code>public static class ItemBridgeAdapter.AdapterListener</code></pre>Interface for listening to ViewHolder operations.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ItemBridgeAdapter.AdapterListener.html
ItemBridgeAdapter.ViewHolder	A										<section class="prog__container"><pre><code>public class ItemBridgeAdapter.ViewHolder</code></pre>ViewHolder for the ItemBridgeAdapter.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ItemBridgeAdapter.ViewHolder.html
ItemBridgeAdapter.Wrapper	A										<section class="prog__container"><pre><code>public static abstract class ItemBridgeAdapter.Wrapper</code></pre>Interface for wrapping a view created by a Presenter into another view. The wrapper must be the immediate parent of the wrapped view.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ItemBridgeAdapter.Wrapper.html
ItemBridgeAdapterShadowOverlayWrapper	A										<section class="prog__container"><pre><code>public class ItemBridgeAdapterShadowOverlayWrapper</code></pre>A wrapper class working with <code>ItemBridgeAdapter</code> to wrap item view in a <code>ShadowOverlayContainer</code>. The ShadowOverlayContainer is created from conditions of <code>ShadowOverlayHelper</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ItemBridgeAdapterShadowOverlayWrapper.html
ItemTouchHelper	A										<section class="prog__container"><pre><code>public class ItemTouchHelper</code></pre>This is a utility class to add swipe to dismiss and drag &amp; drop support to RecyclerView.</section>	https://developer.android.com/reference/android/support/v7/widget/helper/ItemTouchHelper.html
ItemTouchHelper.Callback	A										<section class="prog__container"><pre><code>public static abstract class ItemTouchHelper.Callback</code></pre>This class is the contract between ItemTouchHelper and your application. It lets you control which touch behaviors are enabled per each ViewHolder and also receive callbacks when user performs these actions.</section>	https://developer.android.com/reference/android/support/v7/widget/helper/ItemTouchHelper.Callback.html
ItemTouchHelper.SimpleCallback	A										<section class="prog__container"><pre><code>public static abstract class ItemTouchHelper.SimpleCallback</code></pre>A simple wrapper to the default Callback which you can construct with drag and swipe directions and this class will handle the flag callbacks. You should still override onMove or onSwiped depending on your use case. <pre> ItemTouchHelper mIth = new ItemTouchHelper( new ItemTouchHelper.SimpleCallback(ItemTouchHelper.UP | ItemTouchHelper.DOWN, ItemTouchHelper.LEFT) { public abstract boolean onMove(RecyclerView recyclerView, ViewHolder viewHolder, ViewHolder target) { final int fromPos = viewHolder.getAdapterPosition(); final int toPos = target.getAdapterPosition(); // move item in `fromPos` to `toPos` in adapter. return true;// true if moved, false otherwise } public void onSwiped(ViewHolder viewHolder, int direction) { // remove from adapter } }); </pre></section>	https://developer.android.com/reference/android/support/v7/widget/helper/ItemTouchHelper.SimpleCallback.html
ItemTouchHelper.ViewDropHandler	A										<section class="prog__container"><pre><code>public static interface ItemTouchHelper.ViewDropHandler</code></pre>An interface which can be implemented by LayoutManager for better integration with <code>ItemTouchHelper</code>.</section>	https://developer.android.com/reference/android/support/v7/widget/helper/ItemTouchHelper.ViewDropHandler.html
ItemTouchUIUtil	A										<section class="prog__container"><pre><code>public interface ItemTouchUIUtil</code></pre>Utility class for <code>ItemTouchHelper</code> which handles item transformations for different API versions.</section>	https://developer.android.com/reference/android/support/v7/widget/helper/ItemTouchUIUtil.html
Iterable	A										<section class="prog__container"><pre><code>public interface Iterable</code></pre>Implementing this interface allows an object to be the target of the "for-each loop" statement. See <strong> For-each Loop </strong></section>	https://developer.android.com/reference/java/lang/Iterable.html
Iterator	A										<section class="prog__container"><pre><code>public interface Iterator</code></pre>An iterator over a collection. <code>Iterator</code> takes the place of <code>Enumeration</code> in the Java Collections Framework. Iterators differ from enumerations in two ways: <ul> <li> Iterators allow the caller to remove elements from the underlying collection during the iteration with well-defined semantics. <li> Method names have been improved. </li></li></ul></section>	https://developer.android.com/reference/java/util/Iterator.html
IvParameterSpec	A										<section class="prog__container"><pre><code>public class IvParameterSpec</code></pre>This class specifies an <i>initialization vector</i> (IV). Examples which use IVs are ciphers in feedback mode, e.g., DES in CBC mode and RSA ciphers with OAEP encoding operation.</section>	https://developer.android.com/reference/javax/crypto/spec/IvParameterSpec.html
JSONArray	A										<section class="prog__container"><pre><code>public class JSONArray</code></pre>A dense indexed sequence of values. Values may be any mix of <code>JSONObjects</code>, other <code>JSONArrays</code>, Strings, Booleans, Integers, Longs, Doubles, <code>null</code> or <code>NULL</code>. Values may not be <code>NaNs</code>, <code>infinities</code>, or of any type not listed here.</section>	https://developer.android.com/reference/org/json/JSONArray.html
JSONException	A										<section class="prog__container"><pre><code>public class JSONException</code></pre>Thrown to indicate a problem with the JSON API. Such problems include: <ul> <li>Attempts to parse or construct malformed documents <li>Use of null as a name <li>Use of numeric types not available to JSON, such as <code>NaNs</code> or <code>infinities</code>. <li>Lookups using an out of range index or nonexistent name <li>Type mismatches on lookups </li></li></li></li></li></ul></section>	https://developer.android.com/reference/org/json/JSONException.html
JSONObject	A										<section class="prog__container"><pre><code>public class JSONObject</code></pre>A modifiable set of name/value mappings. Names are unique, non-null strings. Values may be any mix of <code>JSONObjects</code>, <code>JSONArrays</code>, Strings, Booleans, Integers, Longs, Doubles or <code>NULL</code>. Values may not be <code>null</code>, <code>NaNs</code>, <code>infinities</code>, or of any type not listed here.</section>	https://developer.android.com/reference/org/json/JSONObject.html
JSONStringer	A										<section class="prog__container"><pre><code>public class JSONStringer</code></pre>Implements <code>toString()</code> and <code>toString()</code>. Most application developers should use those methods directly and disregard this API. For example:<pre> JSONObject object = ... String json = object.toString();</pre></section>	https://developer.android.com/reference/org/json/JSONStringer.html
JSONTokener	A										<section class="prog__container"><pre><code>public class JSONTokener</code></pre>Parses a JSON (RFC 4627) encoded string into the corresponding object. Most clients of this class will use only need the <code>constructor</code> and <code>nextValue()</code> method. Example usage: <pre> String json = "{" + " \"query\": \"Pizza\", " + " \"locations\": [ 94043, 90210 ] " + "}"; JSONObject object = (JSONObject) new JSONTokener(json).nextValue(); String query = object.getString("query"); JSONArray locations = object.getJSONArray("locations");</pre></section>	https://developer.android.com/reference/org/json/JSONTokener.html
JapaneseCalendar	A										<section class="prog__container"><pre><code>public class JapaneseCalendar</code></pre><code>JapaneseCalendar</code> is a subclass of <code>GregorianCalendar</code> that numbers years and eras based on the reigns of the Japanese emperors. The Japanese calendar is identical to the Gregorian calendar in all respects except for the year and era. The ascension of each emperor to the throne begins a new era, and the years of that era are numbered starting with the year of ascension as year 1.</section>	https://developer.android.com/reference/android/icu/util/JapaneseCalendar.html
JarEntry	A										<section class="prog__container"><pre><code>public class JarEntry</code></pre>This class is used to represent a JAR file entry.</section>	https://developer.android.com/reference/java/util/jar/JarEntry.html
JarException	A										<section class="prog__container"><pre><code>public class JarException</code></pre>Signals that an error of some sort has occurred while reading from or writing to a JAR file.</section>	https://developer.android.com/reference/java/util/jar/JarException.html
JarFile	A										<section class="prog__container"><pre><code>public class JarFile</code></pre>The <code>JarFile</code> class is used to read the contents of a jar file from any file that can be opened with <code>java.io.RandomAccessFile</code>. It extends the class <code>java.util.zip.ZipFile</code> with support for reading an optional <code>Manifest</code> entry. The <code>Manifest</code> can be used to specify meta-information about the jar file and its entries.</section>	https://developer.android.com/reference/java/util/jar/JarFile.html
JarInputStream	A										<section class="prog__container"><pre><code>public class JarInputStream</code></pre>The <code>JarInputStream</code> class is used to read the contents of a JAR file from any input stream. It extends the class <code>java.util.zip.ZipInputStream</code> with support for reading an optional <code>Manifest</code> entry. The <code>Manifest</code> can be used to store meta-information about the JAR file and its entries.</section>	https://developer.android.com/reference/java/util/jar/JarInputStream.html
JarOutputStream	A										<section class="prog__container"><pre><code>public class JarOutputStream</code></pre>The <code>JarOutputStream</code> class is used to write the contents of a JAR file to any output stream. It extends the class <code>java.util.zip.ZipOutputStream</code> with support for writing an optional <code>Manifest</code> entry. The <code>Manifest</code> can be used to specify meta-information about the JAR file and its entries.</section>	https://developer.android.com/reference/java/util/jar/JarOutputStream.html
JarURLConnection	A										<section class="prog__container"><pre><code>public abstract class JarURLConnection</code></pre>A URL Connection to a Java ARchive (JAR) file or an entry in a JAR file.</section>	https://developer.android.com/reference/java/net/JarURLConnection.html
JavascriptInterface	A										<section class="prog__container"><pre><code>public abstract @interface JavascriptInterface</code></pre>Annotation that allows exposing methods to JavaScript. Starting from API level <code>JELLY_BEAN_MR1</code> and above, only methods explicitly marked with this annotation are available to the Javascript code. See <code>addJavascriptInterface(Object, String)</code> for more information about it.</section>	https://developer.android.com/reference/android/webkit/JavascriptInterface.html
JetPlayer	A										<section class="prog__container"><pre><code>public class JetPlayer</code></pre>JetPlayer provides access to JET content playback and control.</section>	https://developer.android.com/reference/android/media/JetPlayer.html
JetPlayer.OnJetEventListener	A										<section class="prog__container"><pre><code>public static interface JetPlayer.OnJetEventListener</code></pre>Handles the notification when the JET engine generates an event.</section>	https://developer.android.com/reference/android/media/JetPlayer.OnJetEventListener.html
JobInfo	A										<section class="prog__container"><pre><code>public class JobInfo</code></pre>Container of data passed to the <code>JobScheduler</code> fully encapsulating the parameters required to schedule work against the calling application. These are constructed using the <code>JobInfo.Builder</code>. You must specify at least one sort of constraint on the JobInfo object that you are creating. The goal here is to provide the scheduler with high-level semantics about the work you want to accomplish. Doing otherwise with throw an exception in your app.</section>	https://developer.android.com/reference/android/app/job/JobInfo.html
JobInfo.Builder	A										<section class="prog__container"><pre><code>public static final class JobInfo.Builder</code></pre>Builder class for constructing <code>JobInfo</code> objects.</section>	https://developer.android.com/reference/android/app/job/JobInfo.Builder.html
JobInfo.TriggerContentUri	A										<section class="prog__container"><pre><code>public static final class JobInfo.TriggerContentUri</code></pre>Information about a content URI modification that a job would like to trigger on.</section>	https://developer.android.com/reference/android/app/job/JobInfo.TriggerContentUri.html
JobParameters	A										<section class="prog__container"><pre><code>public class JobParameters</code></pre>Contains the parameters used to configure/identify your job. You do not create this object yourself, instead it is handed in to your application by the System.</section>	https://developer.android.com/reference/android/app/job/JobParameters.html
JobScheduler	A										<section class="prog__container"><pre><code>public abstract class JobScheduler</code></pre>This is an API for scheduling various types of jobs against the framework that will be executed in your application's own process.</section>	https://developer.android.com/reference/android/app/job/JobScheduler.html
JobService	A										<section class="prog__container"><pre><code>public abstract class JobService</code></pre></section>	https://developer.android.com/reference/android/app/job/JobService.html
JsPromptResult	A										<section class="prog__container"><pre><code>public class JsPromptResult</code></pre>Public class for handling JavaScript prompt requests. The WebChromeClient will receive a <code>onJsPrompt(WebView, String, String, String, JsPromptResult)</code> call with a JsPromptResult instance as a parameter. This parameter is used to return the result of this user dialog prompt back to the WebView instance. The client can call cancel() to cancel the dialog or confirm() with the user's input to confirm the dialog.</section>	https://developer.android.com/reference/android/webkit/JsPromptResult.html
JsResult	A										<section class="prog__container"><pre><code>public class JsResult</code></pre>An instance of this class is passed as a parameter in various <code>WebChromeClient</code> action notifications. The object is used as a handle onto the underlying JavaScript-originated request, and provides a means for the client to indicate whether this action should proceed.</section>	https://developer.android.com/reference/android/webkit/JsResult.html
JsonReader	A										<section class="prog__container"><pre><code>public final class JsonReader</code></pre>Reads a JSON (RFC 4627) encoded value as a stream of tokens. This stream includes both literal values (strings, numbers, booleans, and nulls) as well as the begin and end delimiters of objects and arrays. The tokens are traversed in depth-first order, the same order that they appear in the JSON document. Within JSON objects, name/value pairs are represented by a single token. <h3>Parsing JSON</h3> To create a recursive descent parser for your own JSON streams, first create an entry point method that creates a <code>JsonReader</code>.</section>	https://developer.android.com/reference/android/util/JsonReader.html
JsonToken	A										<section class="prog__container"><pre><code>public final enum JsonToken</code></pre>A structure, name or value type in a JSON-encoded string.</section>	https://developer.android.com/reference/android/util/JsonToken.html
JsonWriter	A										<section class="prog__container"><pre><code>public final class JsonWriter</code></pre>Writes a JSON (RFC 4627) encoded value to a stream, one token at a time. The stream includes both literal values (strings, numbers, booleans and nulls) as well as the begin and end delimiters of objects and arrays. <h3>Encoding JSON</h3> To encode your data as JSON, create a new <code>JsonWriter</code>. Each JSON document must contain one top-level array or object. Call methods on the writer as you walk the structure's contents, nesting arrays and objects as necessary: <ul> <li>To write <strong>arrays</strong>, first call <code>beginArray()</code>. Write each of the array's elements with the appropriate <code>value(boolean)</code> methods or by nesting other arrays and objects. Finally close the array using <code>endArray()</code>. <li>To write <strong>objects</strong>, first call <code>beginObject()</code>. Write each of the object's properties by alternating calls to <code>name(String)</code> with the property's value. Write property values with the appropriate <code>value(boolean)</code> method or by nesting other objects or arrays. Finally close the object using <code>endObject()</code>. </li></li></ul> <h3>Example</h3> Suppose we'd like to encode a stream of messages such as the following: <pre> <code>[ { "id": 912345678901, "text": "How do I write JSON on Android?", "geo": null, "user": { "name": "android_newb", "followers_count": 41 } }, { "id": 912345678902, "text": "@android_newb just use android.util.JsonWriter!", "geo": [50.454722, -104.606667], "user": { "name": "jesse", "followers_count": 2 } } ]</code></pre> This code encodes the above structure: <pre> <code>public void writeJsonStream(OutputStream out, List&lt;Message&gt; messages) throws IOException { JsonWriter writer = new JsonWriter(new OutputStreamWriter(out, "UTF-8")); writer.setIndent(" "); writeMessagesArray(writer, messages); writer.close(); } public void writeMessagesArray(JsonWriter writer, List&lt;Message&gt; messages) throws IOException { writer.beginArray(); for (Message message : messages) { writeMessage(writer, message); } writer.endArray(); } public void writeMessage(JsonWriter writer, Message message) throws IOException { writer.beginObject(); writer.name("id").value(message.getId()); writer.name("text").value(message.getText()); if (message.getGeo() != null) { writer.name("geo"); writeDoublesArray(writer, message.getGeo()); } else { writer.name("geo").nullValue(); } writer.name("user"); writeUser(writer, message.getUser()); writer.endObject(); } public void writeUser(JsonWriter writer, User user) throws IOException { writer.beginObject(); writer.name("name").value(user.getName()); writer.name("followers_count").value(user.getFollowersCount()); writer.endObject(); } public void writeDoublesArray(JsonWriter writer, List&lt;Double&gt; doubles) throws IOException { writer.beginArray(); for (Double value : doubles) { writer.value(value); } writer.endArray(); }</code></pre></section>	https://developer.android.com/reference/android/util/JsonWriter.html
Keep	A										<section class="prog__container"><pre><code>public abstract @interface Keep</code></pre>Denotes that the annotated element should not be removed when the code is minified at build time. This is typically used on methods and classes that are accessed only via reflection so a compiler may think that the code is unused.</section>	https://developer.android.com/reference/android/support/annotation/Keep.html
KernelCpuSpeedReader	A										Reads CPU time of a specific core spent at various frequencies and provides a delta from the last call to <code><a href="https://developer.android.com/reference/com/android/internal/os/KernelCpuSpeedReader.html#readDelta()">readDelta()</a></code>.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
KernelUidCpuTimeReader	A										Reads /proc/uid_cputime/show_uid_stat which has the line format: uid: user_time_micro_seconds system_time_micro_seconds power_in_milli-amp-micro_seconds This provides the time a UID's processes spent executing in user-space and kernel-space.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
KernelUidCpuTimeReader.Callback	A										Callback interface for processing each line of the proc file.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
KernelWakelockReader	A										Reads and parses wakelock stats from the kernel (/proc/wakelocks).	https://developer.android.com/reference/com/android/internal/os/package-summary.html
KernelWakelockStats	A										Kernel wakelock stats object.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
Key	A										<section class="prog__container"><pre><code>public interface Key</code></pre>The Key interface is the top-level interface for all keys. It defines the functionality shared by all key objects. All keys have three characteristics: <ul> <li>An Algorithm</section>	https://developer.android.com/reference/java/security/Key.html
KeyAgreement	A										<section class="prog__container"><pre><code>public class KeyAgreement</code></pre>This class provides the functionality of a key agreement (or key exchange) protocol.</section>	https://developer.android.com/reference/javax/crypto/KeyAgreement.html
KeyAgreementSpi	A										<section class="prog__container"><pre><code>public abstract class KeyAgreementSpi</code></pre>This class defines the <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>KeyAgreement</code> class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a particular key agreement algorithm.</section>	https://developer.android.com/reference/javax/crypto/KeyAgreementSpi.html
KeyChain	A										<section class="prog__container"><pre><code>public final class KeyChain</code></pre>The <code>KeyChain</code> class provides access to private keys and their corresponding certificate chains in credential storage.</section>	https://developer.android.com/reference/android/security/KeyChain.html
KeyChainAliasCallback	A										<section class="prog__container"><pre><code>public interface KeyChainAliasCallback</code></pre>The KeyChainAliasCallback is the callback for <code>choosePrivateKeyAlias(Activity, KeyChainAliasCallback, String[], Principal[], Uri, String)</code>.</section>	https://developer.android.com/reference/android/security/KeyChainAliasCallback.html
KeyChainException	A										<section class="prog__container"><pre><code>public class KeyChainException</code></pre>Thrown on problems accessing the <code>KeyChain</code>.</section>	https://developer.android.com/reference/android/security/KeyChainException.html
KeyCharacterMap	A										<section class="prog__container"><pre><code>public class KeyCharacterMap</code></pre>Describes the keys provided by a keyboard device and their associated labels.</section>	https://developer.android.com/reference/android/view/KeyCharacterMap.html
KeyCharacterMap.KeyData	A										<section class="prog__container"><pre><code>public static class KeyCharacterMap.KeyData</code></pre><p class="caution"><strong> This class was deprecated in API level 11.</strong><br/> instead use <code>getDisplayLabel(int)</code>, <code>getNumber(int)</code> and <code>get(int, int)</code>.</section>	https://developer.android.com/reference/android/view/KeyCharacterMap.KeyData.html
KeyCharacterMap.UnavailableException	A										<section class="prog__container"><pre><code>public static class KeyCharacterMap.UnavailableException</code></pre>Thrown by <code>load(int)</code> when a key character map could not be loaded.</section>	https://developer.android.com/reference/android/view/KeyCharacterMap.UnavailableException.html
KeyEvent	A										<section class="prog__container"><pre><code>public class KeyEvent</code></pre>Object used to report key and button events.</section>	https://developer.android.com/reference/android/view/KeyEvent.html
KeyEvent.Callback	A										<section class="prog__container"><pre><code>public static interface KeyEvent.Callback</code></pre></section>	https://developer.android.com/reference/android/view/KeyEvent.Callback.html
KeyEvent.DispatcherState	A										<section class="prog__container"><pre><code>public static class KeyEvent.DispatcherState</code></pre>Use with <code>dispatch(Callback, DispatcherState, Object)</code> for more advanced key dispatching, such as long presses.</section>	https://developer.android.com/reference/android/view/KeyEvent.DispatcherState.html
KeyEventCompat	A										<section class="prog__container"><pre><code>public final class KeyEventCompat</code></pre>Helper for accessing features in <code>KeyEvent</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/view/KeyEventCompat.html
KeyException	A										<section class="prog__container"><pre><code>public class KeyException</code></pre>This is the basic key exception.</section>	https://developer.android.com/reference/java/security/KeyException.html
KeyExpiredException	A										<section class="prog__container"><pre><code>public class KeyExpiredException</code></pre>Indicates that a cryptographic operation failed because the employed key's validity end date is in the past.</section>	https://developer.android.com/reference/android/security/keystore/KeyExpiredException.html
KeyFactory	A										<section class="prog__container"><pre><code>public class KeyFactory</code></pre>Key factories are used to convert <i>keys</i> (opaque cryptographic keys of type <code>Key</code>) into <i>key specifications</i> (transparent representations of the underlying key material), and vice versa.</section>	https://developer.android.com/reference/java/security/KeyFactory.html
KeyFactorySpi	A										<section class="prog__container"><pre><code>public abstract class KeyFactorySpi</code></pre>This class defines the <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>KeyFactory</code> class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a key factory for a particular algorithm.</section>	https://developer.android.com/reference/java/security/KeyFactorySpi.html
KeyGenParameterSpec	A										<section class="prog__container"><pre><code>public final class KeyGenParameterSpec</code></pre><code>AlgorithmParameterSpec</code> for initializing a <code>KeyPairGenerator</code> or a <code>KeyGenerator</code> of the Android Keystore system. The spec determines authorized uses of the key, such as whether user authentication is required for using the key, what operations are authorized (e.g., signing, but not decryption), with what parameters (e.g., only with a particular padding scheme or digest), and the key's validity start and end dates. Key use authorizations expressed in the spec apply only to secret keys and private keys -- public keys can be used for any supported operations.</section>	https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.html
KeyGenParameterSpec.Builder	A										<section class="prog__container"><pre><code>public static final class KeyGenParameterSpec.Builder</code></pre>Builder of <code>KeyGenParameterSpec</code> instances.</section>	https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.Builder.html
KeyGenerator	A										<section class="prog__container"><pre><code>public class KeyGenerator</code></pre>This class provides the functionality of a secret (symmetric) key generator.</section>	https://developer.android.com/reference/javax/crypto/KeyGenerator.html
KeyGeneratorSpi	A										<section class="prog__container"><pre><code>public abstract class KeyGeneratorSpi</code></pre>This class defines the <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>KeyGenerator</code> class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a key generator for a particular algorithm.</section>	https://developer.android.com/reference/javax/crypto/KeyGeneratorSpi.html
KeyInfo	A										<section class="prog__container"><pre><code>public class KeyInfo</code></pre>Information about a key from the Android Keystore system. This class describes whether the key material is available in plaintext outside of secure hardware, whether user authentication is required for using the key and whether this requirement is enforced by secure hardware, the key's origin, what uses the key is authorized for (e.g., only in <code>GCM</code> mode, or signing only), whether the key should be encrypted at rest, the key's and validity start and end dates.</section>	https://developer.android.com/reference/android/security/keystore/KeyInfo.html
KeyListener	A										<section class="prog__container"><pre><code>public interface KeyListener</code></pre>Interface for converting text key events into edit operations on an Editable class. Note that for most cases this interface has been superceded by general soft input methods as defined by <code>InputMethod</code>; it should only be used for cases where an application has its own on-screen keypad and also wants to process hard keyboard events to match it.</section>	https://developer.android.com/reference/android/text/method/KeyListener.html
KeyManagementException	A										<section class="prog__container"><pre><code>public class KeyManagementException</code></pre>This is the general key management exception for all operations dealing with key management. Examples of subclasses of KeyManagementException that developers might create for giving more detailed information could include: <ul> <li>KeyIDConflictException <li>KeyAuthorizationFailureException <li>ExpiredKeyException </li></li></li></ul></section>	https://developer.android.com/reference/java/security/KeyManagementException.html
KeyManager	A										<section class="prog__container"><pre><code>public interface KeyManager</code></pre>This is the base interface for JSSE key managers.</section>	https://developer.android.com/reference/javax/net/ssl/KeyManager.html
KeyManagerFactory	A										<section class="prog__container"><pre><code>public class KeyManagerFactory</code></pre>This class acts as a factory for key managers based on a source of key material. Each key manager manages a specific type of key material for use by secure sockets. The key material is based on a KeyStore and/or provider specific sources.</section>	https://developer.android.com/reference/javax/net/ssl/KeyManagerFactory.html
KeyManagerFactorySpi	A										<section class="prog__container"><pre><code>public abstract class KeyManagerFactorySpi</code></pre>This class defines the <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>KeyManagerFactory</code> class.</section>	https://developer.android.com/reference/javax/net/ssl/KeyManagerFactorySpi.html
KeyNotYetValidException	A										<section class="prog__container"><pre><code>public class KeyNotYetValidException</code></pre>Indicates that a cryptographic operation failed because the employed key's validity start date is in the future.</section>	https://developer.android.com/reference/android/security/keystore/KeyNotYetValidException.html
KeyPair	A										<section class="prog__container"><pre><code>public final class KeyPair</code></pre>This class is a simple holder for a key pair (a public key and a private key). It does not enforce any security, and, when initialized, should be treated like a PrivateKey.</section>	https://developer.android.com/reference/java/security/KeyPair.html
KeyPairGenerator	A										<section class="prog__container"><pre><code>public abstract class KeyPairGenerator</code></pre>The KeyPairGenerator class is used to generate pairs of public and private keys. Key pair generators are constructed using the <code>getInstance</code> factory methods (static methods that return instances of a given class).</section>	https://developer.android.com/reference/java/security/KeyPairGenerator.html
KeyPairGeneratorSpec	A										<section class="prog__container"><pre><code>public final class KeyPairGeneratorSpec</code></pre><p class="caution"><strong> This class was deprecated in API level 23.</strong><br/> Use <code>KeyGenParameterSpec</code> instead.</section>	https://developer.android.com/reference/android/security/KeyPairGeneratorSpec.html
KeyPairGeneratorSpec.Builder	A										<section class="prog__container"><pre><code>public static final class KeyPairGeneratorSpec.Builder</code></pre><p class="caution"><strong> This class was deprecated in API level 23.</strong><br/> Use <code>KeyGenParameterSpec.Builder</code> instead.</section>	https://developer.android.com/reference/android/security/KeyPairGeneratorSpec.Builder.html
KeyPairGeneratorSpi	A										<section class="prog__container"><pre><code>public abstract class KeyPairGeneratorSpi</code></pre></section>	https://developer.android.com/reference/java/security/KeyPairGeneratorSpi.html
KeyPermanentlyInvalidatedException	A										<section class="prog__container"><pre><code>public class KeyPermanentlyInvalidatedException</code></pre>Indicates that the key can no longer be used because it has been permanently invalidated.</section>	https://developer.android.com/reference/android/security/keystore/KeyPermanentlyInvalidatedException.html
KeyProperties	A										<section class="prog__container"><pre><code>public abstract class KeyProperties</code></pre>Properties of Android Keystore keys.</section>	https://developer.android.com/reference/android/security/keystore/KeyProperties.html
KeyProtection	A										<section class="prog__container"><pre><code>public final class KeyProtection</code></pre>Specification of how a key or key pair is secured when imported into the Android Keystore system. This class specifies authorized uses of the imported key, such as whether user authentication is required for using the key, what operations the key is authorized for (e.g., decryption, but not signing) with what parameters (e.g., only with a particular padding scheme or digest), and the key's validity start and end dates. Key use authorizations expressed in this class apply only to secret keys and private keys -- public keys can be used for any supported operations.</section>	https://developer.android.com/reference/android/security/keystore/KeyProtection.html
KeyProtection.Builder	A										<section class="prog__container"><pre><code>public static final class KeyProtection.Builder</code></pre>Builder of <code>KeyProtection</code> instances.</section>	https://developer.android.com/reference/android/security/keystore/KeyProtection.Builder.html
KeyRep	A										<section class="prog__container"><pre><code>public class KeyRep</code></pre>Standardized representation for serialized Key objects.</section>	https://developer.android.com/reference/java/security/KeyRep.html
KeyRep.Type	A										<section class="prog__container"><pre><code>public static final enum KeyRep.Type</code></pre>Key type.</section>	https://developer.android.com/reference/java/security/KeyRep.Type.html
KeySpec	A										<section class="prog__container"><pre><code>public interface KeySpec</code></pre>A (transparent) specification of the key material that constitutes a cryptographic key.</section>	https://developer.android.com/reference/java/security/spec/KeySpec.html
KeyStore	A										<section class="prog__container"><pre><code>public class KeyStore</code></pre>This class represents a storage facility for cryptographic keys and certificates.</section>	https://developer.android.com/reference/java/security/KeyStore.html
KeyStore.Builder	A										<section class="prog__container"><pre><code>public static abstract class KeyStore.Builder</code></pre>A description of a to-be-instantiated KeyStore object.</section>	https://developer.android.com/reference/java/security/KeyStore.Builder.html
KeyStore.CallbackHandlerProtection	A										<section class="prog__container"><pre><code>public static class KeyStore.CallbackHandlerProtection</code></pre>A ProtectionParameter encapsulating a CallbackHandler.</section>	https://developer.android.com/reference/java/security/KeyStore.CallbackHandlerProtection.html
KeyStore.Entry	A										<section class="prog__container"><pre><code>public static interface KeyStore.Entry</code></pre>A marker interface for <code>KeyStore</code> entry types.</section>	https://developer.android.com/reference/java/security/KeyStore.Entry.html
KeyStore.LoadStoreParameter	A										<section class="prog__container"><pre><code>public static interface KeyStore.LoadStoreParameter</code></pre>A marker interface for <code>KeyStore</code> <code>load</code> and <code>store</code> parameters.</section>	https://developer.android.com/reference/java/security/KeyStore.LoadStoreParameter.html
KeyStore.PasswordProtection	A										<section class="prog__container"><pre><code>public static class KeyStore.PasswordProtection</code></pre>A password-based implementation of <code>ProtectionParameter</code>.</section>	https://developer.android.com/reference/java/security/KeyStore.PasswordProtection.html
KeyStore.PrivateKeyEntry	A										<section class="prog__container"><pre><code>public static final class KeyStore.PrivateKeyEntry</code></pre>A <code>KeyStore</code> entry that holds a <code>PrivateKey</code> and corresponding certificate chain.</section>	https://developer.android.com/reference/java/security/KeyStore.PrivateKeyEntry.html
KeyStore.ProtectionParameter	A										<section class="prog__container"><pre><code>public static interface KeyStore.ProtectionParameter</code></pre>A marker interface for keystore protection parameters.</section>	https://developer.android.com/reference/java/security/KeyStore.ProtectionParameter.html
KeyStore.SecretKeyEntry	A										<section class="prog__container"><pre><code>public static final class KeyStore.SecretKeyEntry</code></pre>A <code>KeyStore</code> entry that holds a <code>SecretKey</code>.</section>	https://developer.android.com/reference/java/security/KeyStore.SecretKeyEntry.html
KeyStore.TrustedCertificateEntry	A										<section class="prog__container"><pre><code>public static final class KeyStore.TrustedCertificateEntry</code></pre>A <code>KeyStore</code> entry that holds a trusted <code>Certificate</code>.</section>	https://developer.android.com/reference/java/security/KeyStore.TrustedCertificateEntry.html
KeyStoreBuilderParameters	A										<section class="prog__container"><pre><code>public class KeyStoreBuilderParameters</code></pre>A parameters object for X509KeyManagers that encapsulates a List of KeyStore.Builders.</section>	https://developer.android.com/reference/javax/net/ssl/KeyStoreBuilderParameters.html
KeyStoreException	A										<section class="prog__container"><pre><code>public class KeyStoreException</code></pre>This is the generic KeyStore exception.</section>	https://developer.android.com/reference/java/security/KeyStoreException.html
KeyStoreParameter	A										<section class="prog__container"><pre><code>public final class KeyStoreParameter</code></pre><p class="caution"><strong> This class was deprecated in API level 23.</strong><br/> Use <code>KeyProtection</code> instead.</section>	https://developer.android.com/reference/android/security/KeyStoreParameter.html
KeyStoreParameter.Builder	A										<section class="prog__container"><pre><code>public static final class KeyStoreParameter.Builder</code></pre><p class="caution"><strong> This class was deprecated in API level 23.</strong><br/> Use <code>KeyProtection.Builder</code> instead.</section>	https://developer.android.com/reference/android/security/KeyStoreParameter.Builder.html
KeyStoreSpi	A										<section class="prog__container"><pre><code>public abstract class KeyStoreSpi</code></pre>This class defines the <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>KeyStore</code> class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a keystore for a particular keystore type.</section>	https://developer.android.com/reference/java/security/KeyStoreSpi.html
Keyboard	A										<section class="prog__container"><pre><code>public class Keyboard</code></pre>Loads an XML description of a keyboard and stores the attributes of the keys. A keyboard consists of rows of keys.</section>	https://developer.android.com/reference/android/inputmethodservice/Keyboard.html
Keyboard.Key	A										<section class="prog__container"><pre><code>public static class Keyboard.Key</code></pre>Class for describing the position and characteristics of a single key in the keyboard.</section>	https://developer.android.com/reference/android/inputmethodservice/Keyboard.Key.html
Keyboard.Row	A										<section class="prog__container"><pre><code>public static class Keyboard.Row</code></pre>Container for keys in the keyboard. All keys in a row are at the same Y-coordinate. Some of the key size defaults can be overridden per row from what the <code>Keyboard</code> defines.</section>	https://developer.android.com/reference/android/inputmethodservice/Keyboard.Row.html
KeyboardShortcutGroup	A										<section class="prog__container"><pre><code>public final class KeyboardShortcutGroup</code></pre>A group of <code>KeyboardShortcutInfo</code>.</section>	https://developer.android.com/reference/android/view/KeyboardShortcutGroup.html
KeyboardShortcutInfo	A										<section class="prog__container"><pre><code>public final class KeyboardShortcutInfo</code></pre>Information about a Keyboard Shortcut.</section>	https://developer.android.com/reference/android/view/KeyboardShortcutInfo.html
KeyboardView	A										<section class="prog__container"><pre><code>public class KeyboardView</code></pre>A view that renders a virtual <code>Keyboard</code>. It handles rendering of keys and detecting key presses and touch movements.</section>	https://developer.android.com/reference/android/inputmethodservice/KeyboardView.html
KeyboardView.OnKeyboardActionListener	A										<section class="prog__container"><pre><code>public static interface KeyboardView.OnKeyboardActionListener</code></pre>Listener for virtual keyboard events.</section>	https://developer.android.com/reference/android/inputmethodservice/KeyboardView.OnKeyboardActionListener.html
Keyframe	A										<section class="prog__container"><pre><code>public abstract class Keyframe</code></pre>This class holds a time/value pair for an animation. The Keyframe class is used by <code>ValueAnimator</code> to define the values that the animation target will have over the course of the animation. As the time proceeds from one keyframe to the other, the value of the target object will animate between the value at the previous keyframe and the value at the next keyframe. Each keyframe also holds an optional <code>TimeInterpolator</code> object, which defines the time interpolation over the intervalue preceding the keyframe.</section>	https://developer.android.com/reference/android/animation/Keyframe.html
KeyguardManager	A										<section class="prog__container"><pre><code>public class KeyguardManager</code></pre>Class that can be used to lock and unlock the keyboard. Get an instance of this class by calling <code>getSystemService(java.lang.String)</code> with argument <code>KEYGUARD_SERVICE</code>. The actual class to control the keyboard locking is <code>KeyguardManager.KeyguardLock</code>.</section>	https://developer.android.com/reference/android/app/KeyguardManager.html
KeyguardManager.KeyguardLock	A										<section class="prog__container"><pre><code>public class KeyguardManager.KeyguardLock</code></pre><p class="caution"><strong> This class was deprecated in API level 13.</strong><br/> Use <code>FLAG_DISMISS_KEYGUARD</code> and/or <code>FLAG_SHOW_WHEN_LOCKED</code> instead; this allows you to seamlessly hide the keyguard as your application moves in and out of the foreground and does not require that any special permissions be requested. Handle returned by <code>newKeyguardLock(String)</code> that allows you to disable / reenable the keyguard.</section>	https://developer.android.com/reference/android/app/KeyguardManager.KeyguardLock.html
KeyguardManager.OnKeyguardExitResult	A										<section class="prog__container"><pre><code>public static interface KeyguardManager.OnKeyguardExitResult</code></pre>Callback passed to <code>exitKeyguardSecurely(KeyguardManager.OnKeyguardExitResult)</code> to notify caller of result.</section>	https://developer.android.com/reference/android/app/KeyguardManager.OnKeyguardExitResult.html
LDAPCertStoreParameters	A										<section class="prog__container"><pre><code>public class LDAPCertStoreParameters</code></pre>Parameters used as input for the LDAP <code>CertStore</code> algorithm.</section>	https://developer.android.com/reference/java/security/cert/LDAPCertStoreParameters.html
LSException	A										<section class="prog__container"><pre><code>public class LSException</code></pre>Parser or write operations may throw an <code>LSException</code> if the processing is stopped. The processing can be stopped due to a <code>DOMError</code> with a severity of <code>DOMError.SEVERITY_FATAL_ERROR</code> or a non recovered <code>DOMError.SEVERITY_ERROR</code>, or if <code>DOMErrorHandler.handleError()</code> returned <code>false</code>.</section>	https://developer.android.com/reference/org/w3c/dom/ls/LSException.html
LSInput	A										<section class="prog__container"><pre><code>public interface LSInput</code></pre>This interface represents an input source for data.</section>	https://developer.android.com/reference/org/w3c/dom/ls/LSInput.html
LSOutput	A										<section class="prog__container"><pre><code>public interface LSOutput</code></pre>This interface represents an output destination for data.</section>	https://developer.android.com/reference/org/w3c/dom/ls/LSOutput.html
LSParser	A										<section class="prog__container"><pre><code>public interface LSParser</code></pre>An interface to an object that is able to build, or augment, a DOM tree from various input sources.</section>	https://developer.android.com/reference/org/w3c/dom/ls/LSParser.html
LSParserFilter	A										<section class="prog__container"><pre><code>public interface LSParserFilter</code></pre><code>LSParserFilter</code>s provide applications the ability to examine nodes as they are being constructed while parsing. As each node is examined, it may be modified or removed, or the entire parse may be terminated early.</section>	https://developer.android.com/reference/org/w3c/dom/ls/LSParserFilter.html
LSResourceResolver	A										<section class="prog__container"><pre><code>public interface LSResourceResolver</code></pre><code>LSResourceResolver</code> provides a way for applications to redirect references to external resources.</section>	https://developer.android.com/reference/org/w3c/dom/ls/LSResourceResolver.html
LSSerializer	A										<section class="prog__container"><pre><code>public interface LSSerializer</code></pre>A <code>LSSerializer</code> provides an API for serializing (writing) a DOM document out into XML. The XML data is written to a string or an output stream. Any changes or fixups made during the serialization affect only the serialized data. The <code>Document</code> object and its children are never altered by the serialization operation.</section>	https://developer.android.com/reference/org/w3c/dom/ls/LSSerializer.html
LabeledIntent	A										<section class="prog__container"><pre><code>public class LabeledIntent</code></pre>A special subclass of Intent that can have a custom label/icon associated with it. Primarily for use with <code>ACTION_CHOOSER</code>.</section>	https://developer.android.com/reference/android/content/pm/LabeledIntent.html
LargeTest	A										<section class="prog__container"><pre><code>public abstract @interface LargeTest</code></pre><p class="caution"><strong> This @interface was deprecated in API level 24.</strong><br/> Use LargeTest instead. New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/suitebuilder/annotation/LargeTest.html
LastOwnerException	A										<section class="prog__container"><pre><code>public class LastOwnerException</code></pre>This is an exception that is thrown whenever an attempt is made to delete the last owner of an Access Control List.</section>	https://developer.android.com/reference/java/security/acl/LastOwnerException.html
LauncherActivity	A										<section class="prog__container"><pre><code>public abstract class LauncherActivity</code></pre>Displays a list of all activities which can be performed for a given intent. Launches when clicked.</section>	https://developer.android.com/reference/android/app/LauncherActivity.html
LauncherActivity.IconResizer	A										<section class="prog__container"><pre><code>public class LauncherActivity.IconResizer</code></pre>Utility class to resize icons to match default icon size.</section>	https://developer.android.com/reference/android/app/LauncherActivity.IconResizer.html
LauncherActivity.ListItem	A										<section class="prog__container"><pre><code>public static class LauncherActivity.ListItem</code></pre>An item in the list</section>	https://developer.android.com/reference/android/app/LauncherActivity.ListItem.html
LauncherActivityInfo	A										<section class="prog__container"><pre><code>public class LauncherActivityInfo</code></pre>A representation of an activity that can belong to this user or a managed profile associated with this user. It can be used to query the label, icon and badged icon for the activity.</section>	https://developer.android.com/reference/android/content/pm/LauncherActivityInfo.html
LauncherApps	A										<section class="prog__container"><pre><code>public class LauncherApps</code></pre>Class for retrieving a list of launchable activities for the current user and any associated managed profiles. This is mainly for use by launchers. Apps can be queried for each user profile. Since the PackageManager will not deliver package broadcasts for other profiles, you can register for package changes here.</section>	https://developer.android.com/reference/android/content/pm/LauncherApps.html
LauncherApps.Callback	A										<section class="prog__container"><pre><code>public static abstract class LauncherApps.Callback</code></pre>Callbacks for package changes to this and related managed profiles.</section>	https://developer.android.com/reference/android/content/pm/LauncherApps.Callback.html
LauncherApps.ShortcutQuery	A										<section class="prog__container"><pre><code>public static class LauncherApps.ShortcutQuery</code></pre>Represents a query passed to <code>getShortcuts(ShortcutQuery, UserHandle)</code>.</section>	https://developer.android.com/reference/android/content/pm/LauncherApps.ShortcutQuery.html
LayerDrawable	A										<section class="prog__container"><pre><code>public class LayerDrawable</code></pre>A Drawable that manages an array of other Drawables. These are drawn in array order, so the element with the largest index will be drawn on top.</section>	https://developer.android.com/reference/android/graphics/drawable/LayerDrawable.html
LayerRasterizer	A										<section class="prog__container"><pre><code>public class LayerRasterizer</code></pre></section>	https://developer.android.com/reference/android/graphics/LayerRasterizer.html
LayeredSocketFactory	A										<section class="prog__container"><pre><code>public interface LayeredSocketFactory</code></pre><p class="caution"><strong> This interface was deprecated in API level 22.</strong><br/> Please use <code>openConnection()</code> instead. Please visit this webpage for further details.</section>	https://developer.android.com/reference/org/apache/http/conn/scheme/LayeredSocketFactory.html
Layout	A										<section class="prog__container"><pre><code>public abstract class Layout</code></pre>A base class that manages text layout in visual elements on the screen.</section>	https://developer.android.com/reference/android/text/Layout.html
Layout.Alignment	A										<section class="prog__container"><pre><code>public static final enum Layout.Alignment</code></pre></section>	https://developer.android.com/reference/android/text/Layout.Alignment.html
Layout.Directions	A										<section class="prog__container"><pre><code>public static class Layout.Directions</code></pre>Stores information about bidirectional (left-to-right or right-to-left) text within the layout of a line.</section>	https://developer.android.com/reference/android/text/Layout.Directions.html
LayoutAnimationController	A										<section class="prog__container"><pre><code>public class LayoutAnimationController</code></pre>A layout animation controller is used to animated a layout's, or a view group's, children. Each child uses the same animation but for every one of them, the animation starts at a different time. A layout animation controller is used by <code>ViewGroup</code> to compute the delay by which each child's animation start must be offset. The delay is computed by using characteristics of each child, like its index in the view group. This standard implementation computes the delay by multiplying a fixed amount of miliseconds by the index of the child in its parent view group. Subclasses are supposed to override <code>getDelayForView(android.view.View)</code> to implement a different way of computing the delay. For instance, a <code>GridLayoutAnimationController</code> will compute the delay based on the column and row indices of the child in its parent view group. Information used to compute the animation delay of each child are stored in an instance of <code>LayoutAnimationController.AnimationParameters</code>, itself stored in the <code>ViewGroup.LayoutParams</code> of the view.</section>	https://developer.android.com/reference/android/view/animation/LayoutAnimationController.html
LayoutAnimationController.AnimationParameters	A										<section class="prog__container"><pre><code>public static class LayoutAnimationController.AnimationParameters</code></pre>The set of parameters that has to be attached to each view contained in the view group animated by the layout animation controller. These parameters are used to compute the start time of each individual view's animation.</section>	https://developer.android.com/reference/android/view/animation/LayoutAnimationController.AnimationParameters.html
LayoutDirection	A										<section class="prog__container"><pre><code>public final class LayoutDirection</code></pre>A class for defining layout directions. A layout direction can be left-to-right (LTR) or right-to-left (RTL). It can also be inherited (from a parent) or deduced from the default language script of a locale.</section>	https://developer.android.com/reference/android/util/LayoutDirection.html
LayoutInflater	A										<section class="prog__container"><pre><code>public abstract class LayoutInflater</code></pre>Instantiates a layout XML file into its corresponding <code>View</code> objects. It is never used directly. Instead, use <code>getLayoutInflater()</code> or <code>getSystemService(Class<t>)</t></code> to retrieve a standard LayoutInflater instance that is already hooked up to the current context and correctly configured for the device you are running on. For example: <pre>LayoutInflater inflater = (LayoutInflater)context.getSystemService (Context.LAYOUT_INFLATER_SERVICE);</pre></section>	https://developer.android.com/reference/android/view/LayoutInflater.html
LayoutInflater.Factory	A										<section class="prog__container"><pre><code>public static interface LayoutInflater.Factory</code></pre></section>	https://developer.android.com/reference/android/view/LayoutInflater.Factory.html
LayoutInflater.Factory2	A										<section class="prog__container"><pre><code>public static interface LayoutInflater.Factory2</code></pre></section>	https://developer.android.com/reference/android/view/LayoutInflater.Factory2.html
LayoutInflater.Filter	A										<section class="prog__container"><pre><code>public static interface LayoutInflater.Filter</code></pre>Hook to allow clients of the LayoutInflater to restrict the set of Views that are allowed to be inflated.</section>	https://developer.android.com/reference/android/view/LayoutInflater.Filter.html
LayoutInflaterCompat	A										<section class="prog__container"><pre><code>public final class LayoutInflaterCompat</code></pre>Helper for accessing features in <code>LayoutInflater</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/view/LayoutInflaterCompat.html
LayoutInflaterFactory	A										<section class="prog__container"><pre><code>public interface LayoutInflaterFactory</code></pre>Used with <code>LayoutInflaterCompat.setFactory()</code>. Offers the same API as <code>LayoutInflater.Factory2</code>.</section>	https://developer.android.com/reference/android/support/v4/view/LayoutInflaterFactory.html
LayoutRes	A										<section class="prog__container"><pre><code>public abstract @interface LayoutRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be a layout resource reference (e.g. <code>android.R.layout.list_content</code>).</section>	https://developer.android.com/reference/android/support/annotation/LayoutRes.html
LayoutTransition	A										<section class="prog__container"><pre><code>public class LayoutTransition</code></pre>This class enables automatic animations on layout changes in ViewGroup objects. To enable transitions for a layout container, create a LayoutTransition object and set it on any ViewGroup by calling <code>setLayoutTransition(LayoutTransition)</code>. This will cause default animations to run whenever items are added to or removed from that container. To specify custom animations, use the <code>setAnimator()</code> method.</section>	https://developer.android.com/reference/android/animation/LayoutTransition.html
LayoutTransition.TransitionListener	A										<section class="prog__container"><pre><code>public static interface LayoutTransition.TransitionListener</code></pre>This interface is used for listening to starting and ending events for transitions.</section>	https://developer.android.com/reference/android/animation/LayoutTransition.TransitionListener.html
LeadingMarginSpan	A										<section class="prog__container"><pre><code>public interface LeadingMarginSpan</code></pre>A paragraph style affecting the leading margin. There can be multiple leading margin spans on a single paragraph; they will be rendered in order, each adding its margin to the ones before it. The leading margin is on the right for lines in a right-to-left paragraph.</section>	https://developer.android.com/reference/android/text/style/LeadingMarginSpan.html
LeadingMarginSpan.LeadingMarginSpan2	A										<section class="prog__container"><pre><code>public static interface LeadingMarginSpan.LeadingMarginSpan2</code></pre>An extended version of <code>LeadingMarginSpan</code>, which allows the implementor to specify the number of lines of the paragraph to which this object is attached that the "first line of paragraph" margin width will be applied to.</section>	https://developer.android.com/reference/android/text/style/LeadingMarginSpan.LeadingMarginSpan2.html
LeadingMarginSpan.Standard	A										<section class="prog__container"><pre><code>public static class LeadingMarginSpan.Standard</code></pre>The standard implementation of LeadingMarginSpan, which adjusts the margin but does not do any rendering.</section>	https://developer.android.com/reference/android/text/style/LeadingMarginSpan.Standard.html
LeanbackListPreferenceDialogFragment	A										<section class="prog__container"><pre><code>public class LeanbackListPreferenceDialogFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/LeanbackListPreferenceDialogFragment.html
LeanbackListPreferenceDialogFragment.AdapterMulti	A										<section class="prog__container"><pre><code>public class LeanbackListPreferenceDialogFragment.AdapterMulti</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/LeanbackListPreferenceDialogFragment.AdapterMulti.html
LeanbackListPreferenceDialogFragment.AdapterSingle	A										<section class="prog__container"><pre><code>public class LeanbackListPreferenceDialogFragment.AdapterSingle</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/LeanbackListPreferenceDialogFragment.AdapterSingle.html
LeanbackListPreferenceDialogFragment.ViewHolder	A										<section class="prog__container"><pre><code>public static class LeanbackListPreferenceDialogFragment.ViewHolder</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/LeanbackListPreferenceDialogFragment.ViewHolder.html
LeanbackListPreferenceDialogFragment.ViewHolder.OnItemClickListener	A										<section class="prog__container"><pre><code>public static interface LeanbackListPreferenceDialogFragment.ViewHolder.OnItemClickListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/LeanbackListPreferenceDialogFragment.ViewHolder.OnItemClickListener.html
LeanbackPreferenceDialogFragment	A										<section class="prog__container"><pre><code>public class LeanbackPreferenceDialogFragment</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/LeanbackPreferenceDialogFragment.html
LeanbackPreferenceFragment	A										<section class="prog__container"><pre><code>public abstract class LeanbackPreferenceFragment</code></pre>This fragment provides a fully decorated leanback-style preference fragment, including a list background and header.</section>	https://developer.android.com/reference/android/support/v17/preference/LeanbackPreferenceFragment.html
LeanbackSettingsFragment	A										<section class="prog__container"><pre><code>public abstract class LeanbackSettingsFragment</code></pre>This fragment provides a container for displaying a <code>LeanbackPreferenceFragment</code></section>	https://developer.android.com/reference/android/support/v17/preference/LeanbackSettingsFragment.html
LensShadingMap	A										<section class="prog__container"><pre><code>public final class LensShadingMap</code></pre>Immutable class for describing a <code>4 x N x M</code> lens shading map of floats.</section>	https://developer.android.com/reference/android/hardware/camera2/params/LensShadingMap.html
Level	A										<section class="prog__container"><pre><code>public class Level</code></pre>The Level class defines a set of standard logging levels that can be used to control logging output. The logging Level objects are ordered and are specified by ordered integers. Enabling logging at a given level also enables logging at all higher levels.</section>	https://developer.android.com/reference/java/util/logging/Level.html
LevelListDrawable	A										<section class="prog__container"><pre><code>public class LevelListDrawable</code></pre>A resource that manages a number of alternate Drawables, each assigned a maximum numerical value. Setting the level value of the object with <code>setLevel(int)</code> will load the image with the next greater or equal value assigned to its max attribute. A good example use of a LevelListDrawable would be a battery level indicator icon, with different images to indicate the current battery level.</section>	https://developer.android.com/reference/android/graphics/drawable/LevelListDrawable.html
LexicalHandler	A										<section class="prog__container"><pre><code>public interface LexicalHandler</code></pre>SAX2 extension handler for lexical events. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/ext/LexicalHandler.html
LightingColorFilter	A										<section class="prog__container"><pre><code>public class LightingColorFilter</code></pre>A color filter that can be used to simulate simple lighting effects. A <code>LightingColorFilter</code> is defined by two parameters, one used to multiply the source color (called <code>colorMultiply</code>) and one used to add to the source color (called <code>colorAdd</code>). The alpha channel is left untouched by this color filter. Given a source color RGB, the resulting R'G'B' color is computed thusly: <pre> R' = R * colorMultiply.R + colorAdd.R G' = G * colorMultiply.G + colorAdd.G B' = B * colorMultiply.B + colorAdd.B </pre> The result is pinned to the <code>[0..255]</code> range for each channel.</section>	https://developer.android.com/reference/android/graphics/LightingColorFilter.html
LineBackgroundSpan	A										<section class="prog__container"><pre><code>public interface LineBackgroundSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/LineBackgroundSpan.html
LineHeightSpan	A										<section class="prog__container"><pre><code>public interface LineHeightSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/LineHeightSpan.html
LineHeightSpan.WithDensity	A										<section class="prog__container"><pre><code>public static interface LineHeightSpan.WithDensity</code></pre></section>	https://developer.android.com/reference/android/text/style/LineHeightSpan.WithDensity.html
LineNumberInputStream	A										<section class="prog__container"><pre><code>public class LineNumberInputStream</code></pre><p class="caution"><strong> This class was deprecated in API level 1.</strong><br/> This class incorrectly assumes that bytes adequately represent characters. As of JDK&nbsp;1.1, the preferred way to operate on character streams is via the new character-stream classes, which include a class for counting line numbers.</section>	https://developer.android.com/reference/java/io/LineNumberInputStream.html
LineNumberReader	A										<section class="prog__container"><pre><code>public class LineNumberReader</code></pre>A buffered character-input stream that keeps track of line numbers. This class defines methods <code>setLineNumber(int)</code> and <code>getLineNumber()</code> for setting and getting the current line number respectively.</section>	https://developer.android.com/reference/java/io/LineNumberReader.html
LinearGradient	A										<section class="prog__container"><pre><code>public class LinearGradient</code></pre></section>	https://developer.android.com/reference/android/graphics/LinearGradient.html
LinearInterpolator	A										<section class="prog__container"><pre><code>public class LinearInterpolator</code></pre>An interpolator where the rate of change is constant</section>	https://developer.android.com/reference/android/view/animation/LinearInterpolator.html
LinearLayout	A										<section class="prog__container"><pre><code>public class LinearLayout</code></pre>A Layout that arranges its children in a single column or a single row. The direction of the row can be set by calling <code>setOrientation()</code>. You can also specify gravity, which specifies the alignment of all the child elements by calling <code>setGravity()</code> or specify that specific children grow to fill up any remaining space in the layout by setting the <em>weight</em> member of <code>LinearLayout.LayoutParams</code>. The default orientation is horizontal.</section>	https://developer.android.com/reference/android/widget/LinearLayout.html
LinearLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class LinearLayout.LayoutParams</code></pre>Per-child layout information associated with ViewLinearLayout.</section>	https://developer.android.com/reference/android/widget/LinearLayout.LayoutParams.html
LinearLayoutCompat	A										<section class="prog__container"><pre><code>public class LinearLayoutCompat</code></pre>A Layout that arranges its children in a single column or a single row. The direction of the row can be set by calling <code>setOrientation()</code>. You can also specify gravity, which specifies the alignment of all the child elements by calling <code>setGravity()</code> or specify that specific children grow to fill up any remaining space in the layout by setting the <em>weight</em> member of <code>LinearLayoutCompat.LayoutParams</code>. The default orientation is horizontal.</section>	https://developer.android.com/reference/android/support/v7/widget/LinearLayoutCompat.html
LinearLayoutCompat.LayoutParams	A										<section class="prog__container"><pre><code>public static class LinearLayoutCompat.LayoutParams</code></pre>Per-child layout information associated with ViewLinearLayout.</section>	https://developer.android.com/reference/android/support/v7/widget/LinearLayoutCompat.LayoutParams.html
LinearLayoutManager	A										<section class="prog__container"><pre><code>public class LinearLayoutManager</code></pre>A <code>RecyclerView.LayoutManager</code> implementation which provides similar functionality to <code>ListView</code>.</section>	https://developer.android.com/reference/android/support/v7/widget/LinearLayoutManager.html
LinearLayoutManager.LayoutChunkResult	A										<section class="prog__container"><pre><code>protected static class LinearLayoutManager.LayoutChunkResult</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/LinearLayoutManager.LayoutChunkResult.html
LinearOutSlowInInterpolator	A										<section class="prog__container"><pre><code>public class LinearOutSlowInInterpolator</code></pre>Interpolator corresponding to <code>linear_out_slow_in</code>. Uses a lookup table for the Bezier curve from (0,0) to (1,1) with control points: P0 (0, 0) P1 (0, 0) P2 (0.2, 1.0) P3 (1.0, 1.0)</section>	https://developer.android.com/reference/android/support/v4/view/animation/LinearOutSlowInInterpolator.html
LinearSmoothScroller	A										<section class="prog__container"><pre><code>public class LinearSmoothScroller</code></pre><code>RecyclerView.SmoothScroller</code> implementation which uses a <code>LinearInterpolator</code> until the target position becomes a child of the RecyclerView and then uses a <code>DecelerateInterpolator</code> to slowly approach to target position.</section>	https://developer.android.com/reference/android/support/v7/widget/LinearSmoothScroller.html
LinearSnapHelper	A										<section class="prog__container"><pre><code>public class LinearSnapHelper</code></pre>Implementation of the <code>SnapHelper</code> supporting snapping in either vertical or horizontal orientation.</section>	https://developer.android.com/reference/android/support/v7/widget/LinearSnapHelper.html
LinkAddress	A										<section class="prog__container"><pre><code>public class LinkAddress</code></pre>Identifies an IP address on a network link. A <code>LinkAddress</code> consists of: <ul> <li>An IP address and prefix length (e.g., <code>2001:db8::1/64</code> or <code>192.0.2.1/24</code>). The address must be unicast, as multicast addresses cannot be assigned to interfaces. <li>Address flags: A bitmask of <code>OsConstants.IFA_F_*</code> values representing properties of the address (e.g., <code>android.system.OsConstants.IFA_F_OPTIMISTIC</code>). <li>Address scope: One of the <code>OsConstants.IFA_F_*</code> values; defines the scope in which the address is unique (e.g., <code>android.system.OsConstants.RT_SCOPE_LINK</code> or <code>android.system.OsConstants.RT_SCOPE_UNIVERSE</code>). </li></li></li></ul></section>	https://developer.android.com/reference/android/net/LinkAddress.html
LinkMovementMethod	A										<section class="prog__container"><pre><code>public class LinkMovementMethod</code></pre>A movement method that traverses links in the text buffer and scrolls if necessary. Supports clicking on links with DPad Center or Enter.</section>	https://developer.android.com/reference/android/text/method/LinkMovementMethod.html
LinkProperties	A										<section class="prog__container"><pre><code>public final class LinkProperties</code></pre>Describes the properties of a network link. A link represents a connection to a network. It may have multiple addresses and multiple gateways, multiple dns servers but only one http proxy and one network interface. Note that this is just a holder of data. Modifying it does not affect live networks.</section>	https://developer.android.com/reference/android/net/LinkProperties.html
LinkageError	A										<section class="prog__container"><pre><code>public class LinkageError</code></pre>Subclasses of <code>LinkageError</code> indicate that a class has some dependency on another class; however, the latter class has incompatibly changed after the compilation of the former class.</section>	https://developer.android.com/reference/java/lang/LinkageError.html
LinkedBlockingDeque	A										<section class="prog__container"><pre><code>public class LinkedBlockingDeque</code></pre>An optionally-bounded blocking deque</section>	https://developer.android.com/reference/java/util/concurrent/LinkedBlockingDeque.html
LinkedBlockingQueue	A										<section class="prog__container"><pre><code>public class LinkedBlockingQueue</code></pre>An optionally-bounded blocking queue</section>	https://developer.android.com/reference/java/util/concurrent/LinkedBlockingQueue.html
LinkedHashMap	A										<section class="prog__container"><pre><code>public class LinkedHashMap</code></pre></section>	https://developer.android.com/reference/java/util/LinkedHashMap.html
LinkedHashSet	A										<section class="prog__container"><pre><code>public class LinkedHashSet</code></pre></section>	https://developer.android.com/reference/java/util/LinkedHashSet.html
LinkedList	A										<section class="prog__container"><pre><code>public class LinkedList</code></pre>Doubly-linked list implementation of the <code>List</code> and <code>Deque</code> interfaces. Implements all optional list operations, and permits all elements (including <code>null</code>).</section>	https://developer.android.com/reference/java/util/LinkedList.html
LinkedTransferQueue	A										<section class="prog__container"><pre><code>public class LinkedTransferQueue</code></pre>An unbounded <code>TransferQueue</code> based on linked nodes. This queue orders elements FIFO (first-in-first-out) with respect to any given producer. The <em>head</em> of the queue is that element that has been on the queue the longest time for some producer. The <em>tail</em> of the queue is that element that has been on the queue the shortest time for some producer.</section>	https://developer.android.com/reference/java/util/concurrent/LinkedTransferQueue.html
Linkify	A										<section class="prog__container"><pre><code>public class Linkify</code></pre>Linkify take a piece of text and a regular expression and turns all of the regex matches in the text into clickable links. This is particularly useful for matching things like email addresses, web URLs, etc. and making them actionable. Alone with the pattern that is to be matched, a URL scheme prefix is also required. Any pattern match that does not begin with the supplied scheme will have the scheme prepended to the matched text when the clickable URL is created. For instance, if you are matching web URLs you would supply the scheme <code>http://</code>. If the pattern matches example.com, which does not have a URL scheme prefix, the supplied scheme will be prepended to create <code>http://example.com</code> when the clickable URL link is created.</section>	https://developer.android.com/reference/android/text/util/Linkify.html
Linkify.MatchFilter	A										<section class="prog__container"><pre><code>public static interface Linkify.MatchFilter</code></pre>MatchFilter enables client code to have more control over what is allowed to match and become a link, and what is not. For example: when matching web URLs you would like things like http://www.example.com to match, as well as just example.com itelf. However, you would not want to match against the domain in support@example.com. So, when matching against a web URL pattern you might also include a MatchFilter that disallows the match if it is immediately preceded by an at-sign (@).</section>	https://developer.android.com/reference/android/text/util/Linkify.MatchFilter.html
Linkify.TransformFilter	A										<section class="prog__container"><pre><code>public static interface Linkify.TransformFilter</code></pre>TransformFilter enables client code to have more control over how matched patterns are represented as URLs. For example: when converting a phone number such as (919) 555-1212 into a tel: URL the parentheses, white space, and hyphen need to be removed to produce tel:9195551212.</section>	https://developer.android.com/reference/android/text/util/Linkify.TransformFilter.html
LinkifyCompat	A										<section class="prog__container"><pre><code>public final class LinkifyCompat</code></pre>LinkifyCompat brings in <code>Linkify</code> improvements for URLs and email addresses to older API levels.</section>	https://developer.android.com/reference/android/support/v4/text/util/LinkifyCompat.html
LinkifyCompat.LinkifyMask	A										<section class="prog__container"><pre><code>public static abstract @interface LinkifyCompat.LinkifyMask</code></pre></section>	https://developer.android.com/reference/android/support/v4/text/util/LinkifyCompat.LinkifyMask.html
List	A										<section class="prog__container"><pre><code>public interface List</code></pre>An ordered collection (also known as a <i>sequence</i>). The user of this interface has precise control over where in the list each element is inserted. The user can access elements by their integer index (position in the list), and search for elements in the list.</section>	https://developer.android.com/reference/java/util/List.html
ListActivity	A										<section class="prog__container"><pre><code>public class ListActivity</code></pre>An activity that displays a list of items by binding to a data source such as an array or Cursor, and exposes event handlers when the user selects an item.</section>	https://developer.android.com/reference/android/app/ListActivity.html
ListAdapter	A										<section class="prog__container"><pre><code>public interface ListAdapter</code></pre>Extended <code>Adapter</code> that is the bridge between a <code>ListView</code> and the data that backs the list. Frequently that data comes from a Cursor, but that is not required. The ListView can display any data provided that it is wrapped in a ListAdapter.</section>	https://developer.android.com/reference/android/widget/ListAdapter.html
ListChangeRegistry	A										<section class="prog__container"><pre><code>public class ListChangeRegistry</code></pre>Utility class for managing ObservableList callbacks.</section>	https://developer.android.com/reference/android/databinding/ListChangeRegistry.html
ListFragment	D								*[[android.app.ListFragment]], <section class="prog__container"><pre><code>public class ListFragment</code></pre>A fragment that displays a list of items by binding to a data source such as an array or Cursor, and exposes event handlers when the user selects an item.</section>\n*[[v4.app.ListFragment]], <section class="prog__container"><pre><code>public class ListFragment</code></pre>Static library support version of the framework's <code>ListFragment</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>			
ListIterator	A										<section class="prog__container"><pre><code>public interface ListIterator</code></pre>An iterator for lists that allows the programmer to traverse the list in either direction, modify the list during iteration, and obtain the iterator's current position in the list. A <code>ListIterator</code> has no current element; its <i>cursor position</i> always lies between the element that would be returned by a call to <code>previous()</code> and the element that would be returned by a call to <code>next()</code>. An iterator for a list of length <code>n</code> has <code>n+1</code> possible cursor positions, as illustrated by the carets (<code>^</code>) below: <pre> Element(0) Element(1) Element(2) ... Element(n-1) cursor positions: ^ ^ ^ ^ ^ </pre> Note that the <code>remove()</code> and <code>set(Object)</code> methods are <i>not</i> defined in terms of the cursor position; they are defined to operate on the last element returned by a call to <code>next()</code> or <code>previous()</code>.</section>	https://developer.android.com/reference/java/util/ListIterator.html
ListPopupWindow	D								*[[v7.widget.ListPopupWindow]], <section class="prog__container"><pre><code>public class ListPopupWindow</code></pre>Static library support version of the framework's <code>ListPopupWindow</code>. Used to write apps that run on platforms prior to Android L. When running on Android L or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>\n*[[android.widget.ListPopupWindow]], <section class="prog__container"><pre><code>public class ListPopupWindow</code></pre>A ListPopupWindow anchors itself to a host view and displays a list of choices.</section>			
ListPopupWindowCompat	A										<section class="prog__container"><pre><code>public final class ListPopupWindowCompat</code></pre>Helper for accessing features in ListPopupWindow introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/widget/ListPopupWindowCompat.html
ListPreference	D								*[[android.preference.ListPreference]], <section class="prog__container"><pre><code>public class ListPreference</code></pre>A <code>Preference</code> that displays a list of entries as a dialog.</section>\n*[[v7.preference.ListPreference]], <section class="prog__container"><pre><code>public class ListPreference</code></pre>A <code>Preference</code> that displays a list of entries as a dialog.</section>			
ListPreferenceDialogFragment	A										<section class="prog__container"><pre><code>public class ListPreferenceDialogFragment</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/ListPreferenceDialogFragment.html
ListPreferenceDialogFragmentCompat	A										<section class="prog__container"><pre><code>public class ListPreferenceDialogFragmentCompat</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/ListPreferenceDialogFragmentCompat.html
ListResourceBundle	A										<section class="prog__container"><pre><code>public abstract class ListResourceBundle</code></pre><code>ListResourceBundle</code> is an abstract subclass of <code>ResourceBundle</code> that manages resources for a locale in a convenient and easy to use list. See <code>ResourceBundle</code> for more information about resource bundles in general.</section>	https://developer.android.com/reference/java/util/ListResourceBundle.html
ListRow	A										<section class="prog__container"><pre><code>public class ListRow</code></pre>A <code>Row</code> composed of a optional <code>HeaderItem</code>, and an <code>ObjectAdapter</code> describing the items in the list.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ListRow.html
ListRowHoverCardView	A										<section class="prog__container"><pre><code>public final class ListRowHoverCardView</code></pre>ListRowHoverCardView contains a title and description.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ListRowHoverCardView.html
ListRowPresenter	A										<section class="prog__container"><pre><code>public class ListRowPresenter</code></pre>ListRowPresenter renders <code>ListRow</code> using a <code>HorizontalGridView</code> hosted in a <code>ListRowView</code>. <h3>Hover card</h3> Optionally, <code>setHoverCardPresenterSelector(PresenterSelector)</code> can be used to display a view for the currently focused list item below the rendered list. This view is known as a hover card. <h3>Selection animation</h3> ListRowPresenter disables <code>RowPresenter</code>'s default dimming effect and draws a dim overlay on each view individually. A subclass may override and disable <code>isUsingDefaultListSelectEffect()</code> and write its own dim effect in <code>onSelectLevelChanged(RowPresenter.ViewHolder)</code>. <h3>Shadow</h3> ListRowPresenter applies a default shadow to each child view. Call <code>setShadowEnabled(boolean)</code> to disable shadows. A subclass may override and return false in <code>isUsingDefaultShadow()</code> and replace with its own shadow implementation.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ListRowPresenter.html
ListRowPresenter.SelectItemViewHolderTask	A										<section class="prog__container"><pre><code>public static class ListRowPresenter.SelectItemViewHolderTask</code></pre>A task on the ListRowPresenter.ViewHolder that can select an item by position in the HorizontalGridView and perform an optional item task on it.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ListRowPresenter.SelectItemViewHolderTask.html
ListRowPresenter.ViewHolder	A										<section class="prog__container"><pre><code>public static class ListRowPresenter.ViewHolder</code></pre>ViewHolder for the ListRowPresenter.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ListRowPresenter.ViewHolder.html
ListRowView	A										<section class="prog__container"><pre><code>public final class ListRowView</code></pre>ListRowView is a <code>ViewGroup</code> which always contains a <code>HorizontalGridView</code>, and may optionally include a hover card.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ListRowView.html
ListUpdateCallback	A										<section class="prog__container"><pre><code>public interface ListUpdateCallback</code></pre>An interface that can receive Update operations that are applied to a list.</section>	https://developer.android.com/reference/android/support/v7/util/ListUpdateCallback.html
ListView	A										<section class="prog__container"><pre><code>public class ListView</code></pre>A view that shows items in a vertically scrolling list. The items come from the <code>ListAdapter</code> associated with this view.</section>	https://developer.android.com/reference/android/widget/ListView.html
ListView.FixedViewInfo	A										<section class="prog__container"><pre><code>public class ListView.FixedViewInfo</code></pre>A class that represents a fixed view in a list, for example a header at the top or a footer at the bottom.</section>	https://developer.android.com/reference/android/widget/ListView.FixedViewInfo.html
ListViewAutoScrollHelper	A										<section class="prog__container"><pre><code>public class ListViewAutoScrollHelper</code></pre>An implementation of <code>AutoScrollHelper</code> that knows how to scroll through a <code>ListView</code>.</section>	https://developer.android.com/reference/android/support/v4/widget/ListViewAutoScrollHelper.html
ListViewCompat	A										<section class="prog__container"><pre><code>public final class ListViewCompat</code></pre>Helper for accessing features in <code>ListView</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/widget/ListViewCompat.html
LiveFolders	A										<section class="prog__container"><pre><code>public final class LiveFolders</code></pre><p class="caution"><strong> This class was deprecated in API level 14.</strong><br/> Live folders are no longer supported by Android. These have been replaced by the new AppWidget Collection APIs introduced in <code>HONEYCOMB</code>. These provide all of the features of live folders plus many more. The use of live folders is greatly discouraged because of security issues they introduce -- publishing a live folder requires making all data show for the live folder available to all applications with no permissions protecting it.</section>	https://developer.android.com/reference/android/provider/LiveFolders.html
Loader	D								*[[android.content.Loader]], <section class="prog__container"><pre><code>public class Loader</code></pre>A class that performs asynchronous loading of data. While Loaders are active they should monitor the source of their data and deliver new results when the contents change. See <code>LoaderManager</code> for more detail.</section>\n*[[v4.content.Loader]], <section class="prog__container"><pre><code>public class Loader</code></pre>Static library support version of the framework's <code>Loader</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>			
Loader.ForceLoadContentObserver	D								*[[android.content.Loader.ForceLoadContentObserver]], <section class="prog__container"><pre><code>public final class Loader.ForceLoadContentObserver</code></pre>An implementation of a ContentObserver that takes care of connecting it to the Loader to have the loader re-load its data when the observer is told it has changed. You do not normally need to use this yourself; it is used for you by <code>CursorLoader</code> to take care of executing an update when the cursor's backing data changes.</section>\n*[[v4.content.Loader.ForceLoadContentObserver]], <section class="prog__container"><pre><code>public final class Loader.ForceLoadContentObserver</code></pre>An implementation of a ContentObserver that takes care of connecting it to the Loader to have the loader re-load its data when the observer is told it has changed. You do not normally need to use this yourself; it is used for you by <code>CursorLoader</code> to take care of executing an update when the cursor's backing data changes.</section>			
Loader.OnLoadCanceledListener	D								*[[android.content.Loader.OnLoadCanceledListener]], <section class="prog__container"><pre><code>public static interface Loader.OnLoadCanceledListener</code></pre>Interface that is implemented to discover when a Loader has been canceled before it finished loading its data. You do not normally need to implement this yourself; it is used in the implementation of <code>LoaderManager</code> to find out when a Loader it is managing has been canceled so that it can schedule the next Loader. This interface should only be used if a Loader is not being used in conjunction with LoaderManager.</section>\n*[[v4.content.Loader.OnLoadCanceledListener]], <section class="prog__container"><pre><code>public static interface Loader.OnLoadCanceledListener</code></pre>Interface that is implemented to discover when a Loader has been canceled before it finished loading its data. You do not normally need to implement this yourself; it is used in the implementation of <code>LoaderManager</code> to find out when a Loader it is managing has been canceled so that it can schedule the next Loader. This interface should only be used if a Loader is not being used in conjunction with LoaderManager.</section>			
Loader.OnLoadCompleteListener	D								*[[android.content.Loader.OnLoadCompleteListener]], <section class="prog__container"><pre><code>public static interface Loader.OnLoadCompleteListener</code></pre>Interface that is implemented to discover when a Loader has finished loading its data. You do not normally need to implement this yourself; it is used in the implementation of <code>LoaderManager</code> to find out when a Loader it is managing has completed so that this can be reported to its client. This interface should only be used if a Loader is not being used in conjunction with LoaderManager.</section>\n*[[v4.content.Loader.OnLoadCompleteListener]], <section class="prog__container"><pre><code>public static interface Loader.OnLoadCompleteListener</code></pre>Interface that is implemented to discover when a Loader has finished loading its data. You do not normally need to implement this yourself; it is used in the implementation of <code>LoaderManager</code> to find out when a Loader it is managing has completed so that this can be reported to its client. This interface should only be used if a Loader is not being used in conjunction with LoaderManager.</section>			
LoaderManager	D								*[[android.app.LoaderManager]], <section class="prog__container"><pre><code>public abstract class LoaderManager</code></pre>Interface associated with an <code>Activity</code> or <code>Fragment</code> for managing one or more <code>Loader</code> instances associated with it. This helps an application manage longer-running operations in conjunction with the Activity or Fragment lifecycle; the most common use of this is with a <code>CursorLoader</code>, however applications are free to write their own loaders for loading other types of data. While the LoaderManager API was introduced in <code>HONEYCOMB</code>, a version of the API at is also available for use on older platforms through <code>FragmentActivity</code>. See the blog post Fragments For All for more details.</section>\n*[[v4.app.LoaderManager]], <section class="prog__container"><pre><code>public abstract class LoaderManager</code></pre>Static library support version of the framework's <code>LoaderManager</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>			
LoaderManager.LoaderCallbacks	D								*[[android.app.LoaderManager.LoaderCallbacks]], <section class="prog__container"><pre><code>public static interface LoaderManager.LoaderCallbacks</code></pre>Callback interface for a client to interact with the manager.</section>\n*[[v4.app.LoaderManager.LoaderCallbacks]], <section class="prog__container"><pre><code>public static interface LoaderManager.LoaderCallbacks</code></pre>Callback interface for a client to interact with the manager.</section>			
LoaderTestCase	A										<section class="prog__container"><pre><code>public class LoaderTestCase</code></pre>A convenience class for testing <code>Loader</code>s. This test case provides a simple way to synchronously get the result from a Loader making it easy to assert that the Loader returns the expected result.</section>	https://developer.android.com/reference/android/test/LoaderTestCase.html
LocalActivityManager	A										<section class="prog__container"><pre><code>public class LocalActivityManager</code></pre><p class="caution"><strong> This class was deprecated in API level 13.</strong><br/> Use the new <code>Fragment</code> and <code>FragmentManager</code> APIs instead; these are also available on older platforms through the Android compatibility package.</section>	https://developer.android.com/reference/android/app/LocalActivityManager.html
LocalBroadcastManager	A										<section class="prog__container"><pre><code>public final class LocalBroadcastManager</code></pre>Helper to register for and send broadcasts of Intents to local objects within your process. This has a number of advantages over sending global broadcasts with <code>sendBroadcast(Intent)</code>: <ul> <li> You know that the data you are broadcasting won't leave your app, so don't need to worry about leaking private data. <li> It is not possible for other applications to send these broadcasts to your app, so you don't need to worry about having security holes they can exploit. <li> It is more efficient than sending a global broadcast through the system. </li></li></li></ul></section>	https://developer.android.com/reference/android/support/v4/content/LocalBroadcastManager.html
LocalServerSocket	A										<section class="prog__container"><pre><code>public class LocalServerSocket</code></pre>Non-standard class for creating an inbound UNIX-domain socket in the Linux abstract namespace.</section>	https://developer.android.com/reference/android/net/LocalServerSocket.html
LocalSocket	A										<section class="prog__container"><pre><code>public class LocalSocket</code></pre>Creates a (non-server) socket in the UNIX-domain namespace. The interface here is not entirely unlike that of java.net.Socket. This class and the streams returned from it may be used from multiple threads.</section>	https://developer.android.com/reference/android/net/LocalSocket.html
LocalSocketAddress	A										<section class="prog__container"><pre><code>public class LocalSocketAddress</code></pre>A UNIX-domain (AF_LOCAL) socket address. For use with android.net.LocalSocket and android.net.LocalServerSocket. On the Android system, these names refer to names in the Linux abstract (non-filesystem) UNIX domain namespace.</section>	https://developer.android.com/reference/android/net/LocalSocketAddress.html
LocalSocketAddress.Namespace	A										<section class="prog__container"><pre><code>public static final enum LocalSocketAddress.Namespace</code></pre>The namespace that this address exists in. See also include/cutils/sockets.h ANDROID_SOCKET_NAMESPACE_*</section>	https://developer.android.com/reference/android/net/LocalSocketAddress.Namespace.html
LocalTransport	A										Backup transport for stashing stuff into a known location on disk, and later restoring from there.	https://developer.android.com/reference/com/android/internal/backup/package-summary.html
Locale	A										<section class="prog__container"><pre><code>public final class Locale</code></pre>A <code>Locale</code> object represents a specific geographical, political, or cultural region. An operation that requires a <code>Locale</code> to perform its task is called <em>locale-sensitive</em> and uses the <code>Locale</code> to tailor information for the user. For example, displaying a number is a locale-sensitive operation&mdash; the number should be formatted according to the customs and conventions of the user's native country, region, or culture.</section>	https://developer.android.com/reference/java/util/Locale.html
Locale.Builder	A										<section class="prog__container"><pre><code>public static final class Locale.Builder</code></pre><code>Builder</code> is used to build instances of <code>Locale</code> from values configured by the setters. Unlike the <code>Locale</code> constructors, the <code>Builder</code> checks if a value configured by a setter satisfies the syntax requirements defined by the <code>Locale</code> class. A <code>Locale</code> object created by a <code>Builder</code> is well-formed and can be transformed to a well-formed IETF BCP 47 language tag without losing information.</section>	https://developer.android.com/reference/java/util/Locale.Builder.html
Locale.Category	A										<section class="prog__container"><pre><code>public static final enum Locale.Category</code></pre>Enum for locale categories. These locale categories are used to get/set the default locale for the specific functionality represented by the category.</section>	https://developer.android.com/reference/java/util/Locale.Category.html
LocaleDisplayNames	A										<section class="prog__container"><pre><code>public abstract class LocaleDisplayNames</code></pre>Returns display names of ULocales and components of ULocales. For more information on language, script, region, variant, key, and values, see <code>ULocale</code>.</section>	https://developer.android.com/reference/android/icu/text/LocaleDisplayNames.html
LocaleDisplayNames.DialectHandling	A										<section class="prog__container"><pre><code>public static final enum LocaleDisplayNames.DialectHandling</code></pre>Enum used in <code>getInstance(ULocale, DialectHandling)</code>.</section>	https://developer.android.com/reference/android/icu/text/LocaleDisplayNames.DialectHandling.html
LocaleList	A										<section class="prog__container"><pre><code>public final class LocaleList</code></pre>LocaleList is an immutable list of Locales, typically used to keep an ordered list of user preferences for locales.</section>	https://developer.android.com/reference/android/os/LocaleList.html
LocaleSpan	A										<section class="prog__container"><pre><code>public class LocaleSpan</code></pre>Changes the <code>Locale</code> of the text to which the span is attached.</section>	https://developer.android.com/reference/android/text/style/LocaleSpan.html
Location	A										<section class="prog__container"><pre><code>public class Location</code></pre>A data class representing a geographic location.</section>	https://developer.android.com/reference/android/location/Location.html
LocationListener	A										<section class="prog__container"><pre><code>public interface LocationListener</code></pre>Used for receiving notifications from the LocationManager when the location has changed. These methods are called if the LocationListener has been registered with the location manager service using the <code>requestLocationUpdates(String, long, float, LocationListener)</code> method. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/location/LocationListener.html
LocationManager	A										<section class="prog__container"><pre><code>public class LocationManager</code></pre>This class provides access to the system location services. These services allow applications to obtain periodic updates of the device's geographical location, or to fire an application-specified <code>Intent</code> when the device enters the proximity of a given geographical location.</section>	https://developer.android.com/reference/android/location/LocationManager.html
LocationProvider	A										<section class="prog__container"><pre><code>public class LocationProvider</code></pre>An abstract superclass for location providers. A location provider provides periodic reports on the geographical location of the device.</section>	https://developer.android.com/reference/android/location/LocationProvider.html
Locator	A										<section class="prog__container"><pre><code>public interface Locator</code></pre>Interface for associating a SAX event with a document location. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/Locator.html
Locator2	A										<section class="prog__container"><pre><code>public interface Locator2</code></pre>SAX2 extension to augment the entity information provided though a <code>Locator</code>. If an implementation supports this extension, the Locator provided in <code>ContentHandler.setDocumentLocator() </code> will implement this interface, and the <em>http://xml.org/sax/features/use-locator2</em> feature flag will have the value <em>true</em>. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> </blockquote></section>	https://developer.android.com/reference/org/xml/sax/ext/Locator2.html
Locator2Impl	A										<section class="prog__container"><pre><code>public class Locator2Impl</code></pre>SAX2 extension helper for holding additional Entity information, implementing the <code>Locator2</code> interface. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> </blockquote></section>	https://developer.android.com/reference/org/xml/sax/ext/Locator2Impl.html
LocatorImpl	A										<section class="prog__container"><pre><code>public class LocatorImpl</code></pre>Provide an optional convenience implementation of Locator. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/helpers/LocatorImpl.html
Lock	A										<section class="prog__container"><pre><code>public interface Lock</code></pre><code>Lock</code> implementations provide more extensive locking operations than can be obtained using <code>synchronized</code> methods and statements. They allow more flexible structuring, may have quite different properties, and may support multiple associated <code>Condition</code> objects.</section>	https://developer.android.com/reference/java/util/concurrent/locks/Lock.html
LockPatternUtils	A										Utilities for the lock pattern and its settings.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
LockPatternUtils.CheckCredentialProgressCallback	A										Callback to be notified about progress when checking credentials.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
LockPatternUtils.StrongAuthTracker	A										Tracks the global strong authentication state.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
LockPatternView	A										Displays and detects the user's unlock attempt, which is a drag of a finger across 9 regions of the screen.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
LockPatternView.Cell	A										Represents a cell in the 3 X 3 matrix of the unlock pattern view.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
LockPatternView.DisplayMode	A										How to display the current pattern.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
LockPatternView.OnPatternListener	A										The call back interface for detecting patterns entered by the user.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
LockScreenWidgetCallback	A										An interface used by LockScreenWidgets to send messages to lock screen.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
LockSupport	A										<section class="prog__container"><pre><code>public class LockSupport</code></pre>Basic thread blocking primitives for creating locks and other synchronization classes.</section>	https://developer.android.com/reference/java/util/concurrent/locks/LockSupport.html
Log	A										<section class="prog__container"><pre><code>public final class Log</code></pre>API for sending log output.</section>	https://developer.android.com/reference/android/util/Log.html
LogManager	A										<section class="prog__container"><pre><code>public class LogManager</code></pre>There is a single global LogManager object that is used to maintain a set of shared state about Loggers and log services.</section>	https://developer.android.com/reference/java/util/logging/LogManager.html
LogPrinter	A										<section class="prog__container"><pre><code>public class LogPrinter</code></pre>Implementation of a <code>Printer</code> that sends its output to the system log.</section>	https://developer.android.com/reference/android/util/LogPrinter.html
LogRecord	A										<section class="prog__container"><pre><code>public class LogRecord</code></pre>LogRecord objects are used to pass logging requests between the logging framework and individual log Handlers.</section>	https://developer.android.com/reference/java/util/logging/LogRecord.html
Logger	A										<section class="prog__container"><pre><code>public class Logger</code></pre>A Logger object is used to log messages for a specific system or application component. Loggers are normally named, using a hierarchical dot-separated namespace. Logger names can be arbitrary strings, but they should normally be based on the package name or class name of the logged component, such as java.net or javax.swing. In addition it is possible to create "anonymous" Loggers that are not stored in the Logger namespace.</section>	https://developer.android.com/reference/java/util/logging/Logger.html
LoggingMXBean	A										<section class="prog__container"><pre><code>public interface LoggingMXBean</code></pre>The management interface for the logging facility.</section>	https://developer.android.com/reference/java/util/logging/LoggingMXBean.html
LoggingPermission	A										<section class="prog__container"><pre><code>public final class LoggingPermission</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/util/logging/LoggingPermission.html
LoginException	A										<section class="prog__container"><pre><code>public class LoginException</code></pre>This is the basic login exception.</section>	https://developer.android.com/reference/javax/security/auth/login/LoginException.html
LoginFilter	A										<section class="prog__container"><pre><code>public abstract class LoginFilter</code></pre>Abstract class for filtering login-related text (user names and passwords)</section>	https://developer.android.com/reference/android/text/LoginFilter.html
LoginFilter.PasswordFilterGMail	A										<section class="prog__container"><pre><code>public static class LoginFilter.PasswordFilterGMail</code></pre>This filter is compatible with GMail passwords which restricts characters to the Latin-1 (ISO8859-1) char set.</section>	https://developer.android.com/reference/android/text/LoginFilter.PasswordFilterGMail.html
LoginFilter.UsernameFilterGMail	A										<section class="prog__container"><pre><code>public static class LoginFilter.UsernameFilterGMail</code></pre>This filter rejects characters in the user name that are not compatible with GMail account creation. It prevents the user from entering user names with characters other than [a-zA-Z0-9.].</section>	https://developer.android.com/reference/android/text/LoginFilter.UsernameFilterGMail.html
LoginFilter.UsernameFilterGeneric	A										<section class="prog__container"><pre><code>public static class LoginFilter.UsernameFilterGeneric</code></pre>This filter rejects characters in the user name that are not compatible with Google login. It is slightly less restrictive than the above filter in that it allows [a-zA-Z0-9._-+].</section>	https://developer.android.com/reference/android/text/LoginFilter.UsernameFilterGeneric.html
Long	A										<section class="prog__container"><pre><code>public final class Long</code></pre>The <code>Long</code> class wraps a value of the primitive type <code>long</code> in an object. An object of type <code>Long</code> contains a single field whose type is <code>long</code>.</section>	https://developer.android.com/reference/java/lang/Long.html
Long2	D								*[[android.renderscript.Long2]], <section class="prog__container"><pre><code>public class Long2</code></pre>Vector version of the basic long type. Provides two long fields packed.</section>\n*[[v8.renderscript.Long2]], <section class="prog__container"><pre><code>public class Long2</code></pre>Class for exposing the native RenderScript long2 type back to the Android system.</section>			
Long3	D								*[[android.renderscript.Long3]], <section class="prog__container"><pre><code>public class Long3</code></pre>Vector version of the basic long type. Provides three long fields packed.</section>\n*[[v8.renderscript.Long3]], <section class="prog__container"><pre><code>public class Long3</code></pre>Class for exposing the native RenderScript long3 type back to the Android system.</section>			
Long4	D								*[[android.renderscript.Long4]], <section class="prog__container"><pre><code>public class Long4</code></pre>Vector version of the basic long type. Provides four long fields packed.</section>\n*[[v8.renderscript.Long4]], <section class="prog__container"><pre><code>public class Long4</code></pre>Class for exposing the native RenderScript long4 type back to the Android system.</section>			
LongAccumulator	A										<section class="prog__container"><pre><code>public class LongAccumulator</code></pre>One or more variables that together maintain a running <code>long</code> value updated using a supplied function. When updates (method <code>accumulate(long)</code>) are contended across threads, the set of variables may grow dynamically to reduce contention. Method <code>get()</code> (or, equivalently, <code>longValue()</code>) returns the current value across the variables maintaining updates.</section>	https://developer.android.com/reference/java/util/concurrent/atomic/LongAccumulator.html
LongAdder	A										<section class="prog__container"><pre><code>public class LongAdder</code></pre>One or more variables that together maintain an initially zero <code>long</code> sum. When updates (method <code>add(long)</code>) are contended across threads, the set of variables may grow dynamically to reduce contention. Method <code>sum()</code> (or, equivalently, <code>longValue()</code>) returns the current total combined across the variables maintaining the sum.</section>	https://developer.android.com/reference/java/util/concurrent/atomic/LongAdder.html
LongBinaryOperator	A										<section class="prog__container"><pre><code>public interface LongBinaryOperator</code></pre>Represents an operation upon two <code>long</code>-valued operands and producing a <code>long</code>-valued result. This is the primitive type specialization of <code>BinaryOperator</code> for <code>long</code>.</section>	https://developer.android.com/reference/java/util/function/LongBinaryOperator.html
LongBuffer	A										<section class="prog__container"><pre><code>public abstract class LongBuffer</code></pre>A long buffer.</section>	https://developer.android.com/reference/java/nio/LongBuffer.html
LongConsumer	A										<section class="prog__container"><pre><code>public interface LongConsumer</code></pre>Represents an operation that accepts a single <code>long</code>-valued argument and returns no result. This is the primitive type specialization of <code>Consumer</code> for <code>long</code>. Unlike most other functional interfaces, <code>LongConsumer</code> is expected to operate via side-effects.</section>	https://developer.android.com/reference/java/util/function/LongConsumer.html
LongFunction	A										<section class="prog__container"><pre><code>public interface LongFunction</code></pre>Represents a function that accepts a long-valued argument and produces a result. This is the <code>long</code>-consuming primitive specialization for <code>Function</code>.</section>	https://developer.android.com/reference/java/util/function/LongFunction.html
LongPredicate	A										<section class="prog__container"><pre><code>public interface LongPredicate</code></pre>Represents a predicate (boolean-valued function) of one <code>long</code>-valued argument. This is the <code>long</code>-consuming primitive type specialization of <code>Predicate</code>.</section>	https://developer.android.com/reference/java/util/function/LongPredicate.html
LongSparseArray	D								*[[v4.util.LongSparseArray]], <section class="prog__container"><pre><code>public class LongSparseArray</code></pre>SparseArray mapping longs to Objects, a version of the platform's <code>LongSparseArray</code> that can be used on older versions of the platform. Unlike a normal array of Objects, there can be gaps in the indices. It is intended to be more memory efficient than using a HashMap to map Longs to Objects, both because it avoids auto-boxing keys and its data structure doesn't rely on an extra entry object for each mapping.</section>\n*[[android.util.LongSparseArray]], <section class="prog__container"><pre><code>public class LongSparseArray</code></pre>SparseArray mapping longs to Objects. Unlike a normal array of Objects, there can be gaps in the indices. It is intended to be more memory efficient than using a HashMap to map Longs to Objects, both because it avoids auto-boxing keys and its data structure doesn't rely on an extra entry object for each mapping.</section>			
LongStream	A										<section class="prog__container"><pre><code>public interface LongStream</code></pre>A sequence of primitive long-valued elements supporting sequential and parallel aggregate operations. This is the <code>long</code> primitive specialization of <code>Stream</code>.</section>	https://developer.android.com/reference/java/util/stream/LongStream.html
LongStream.Builder	A										<section class="prog__container"><pre><code>public static interface LongStream.Builder</code></pre>A mutable builder for a <code>LongStream</code>.</section>	https://developer.android.com/reference/java/util/stream/LongStream.Builder.html
LongSummaryStatistics	A										<section class="prog__container"><pre><code>public class LongSummaryStatistics</code></pre>A state object for collecting statistics such as count, min, max, sum, and average.</section>	https://developer.android.com/reference/java/util/LongSummaryStatistics.html
LongSupplier	A										<section class="prog__container"><pre><code>public interface LongSupplier</code></pre>Represents a supplier of <code>long</code>-valued results. This is the <code>long</code>-producing primitive specialization of <code>Supplier</code>.</section>	https://developer.android.com/reference/java/util/function/LongSupplier.html
LongToDoubleFunction	A										<section class="prog__container"><pre><code>public interface LongToDoubleFunction</code></pre>Represents a function that accepts a long-valued argument and produces a double-valued result. This is the <code>long</code>-to-<code>double</code> primitive specialization for <code>Function</code>.</section>	https://developer.android.com/reference/java/util/function/LongToDoubleFunction.html
LongToIntFunction	A										<section class="prog__container"><pre><code>public interface LongToIntFunction</code></pre>Represents a function that accepts a long-valued argument and produces an int-valued result. This is the <code>long</code>-to-<code>int</code> primitive specialization for <code>Function</code>.</section>	https://developer.android.com/reference/java/util/function/LongToIntFunction.html
LongUnaryOperator	A										<section class="prog__container"><pre><code>public interface LongUnaryOperator</code></pre>Represents an operation on a single <code>long</code>-valued operand that produces a <code>long</code>-valued result. This is the primitive type specialization of <code>UnaryOperator</code> for <code>long</code>.</section>	https://developer.android.com/reference/java/util/function/LongUnaryOperator.html
Looper	A										<section class="prog__container"><pre><code>public final class Looper</code></pre>Class used to run a message loop for a thread. Threads by default do not have a message loop associated with them; to create one, call <code>prepare()</code> in the thread that is to run the loop, and then <code>loop()</code> to have it process messages until the loop is stopped.</section>	https://developer.android.com/reference/android/os/Looper.html
LoudnessEnhancer	A										<section class="prog__container"><pre><code>public class LoudnessEnhancer</code></pre>LoudnessEnhancer is an audio effect for increasing audio loudness. The processing is parametrized by a target gain value, which determines the maximum amount by which an audio signal will be amplified; signals amplified outside of the sample range supported by the platform are compressed. An application creates a LoudnessEnhancer object to instantiate and control a this audio effect in the audio framework. To attach the LoudnessEnhancer to a particular AudioTrack or MediaPlayer, specify the audio session ID of this AudioTrack or MediaPlayer when constructing the effect (see <code>getAudioSessionId()</code> and <code>getAudioSessionId()</code>).</section>	https://developer.android.com/reference/android/media/audiofx/LoudnessEnhancer.html
LruCache	D								*[[v4.util.LruCache]], <section class="prog__container"><pre><code>public class LruCache</code></pre>Static library version of <code>LruCache</code>. Used to write apps that run on API levels prior to 12. When running on API level 12 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>\n*[[android.util.LruCache]], <section class="prog__container"><pre><code>public class LruCache</code></pre>A cache that holds strong references to a limited number of values. Each time a value is accessed, it is moved to the head of a queue. When a value is added to a full cache, the value at the end of that queue is evicted and may become eligible for garbage collection.</section>			
MGF1ParameterSpec	A										<section class="prog__container"><pre><code>public class MGF1ParameterSpec</code></pre>This class specifies the set of parameters used with mask generation function MGF1 in OAEP Padding and RSA-PSS signature scheme, as defined in the PKCS #1 v2.1 standard.</section>	https://developer.android.com/reference/java/security/spec/MGF1ParameterSpec.html
Mac	A										<section class="prog__container"><pre><code>public class Mac</code></pre>This class provides the functionality of a "Message Authentication Code" (MAC) algorithm.</section>	https://developer.android.com/reference/javax/crypto/Mac.html
MacSpi	A										<section class="prog__container"><pre><code>public abstract class MacSpi</code></pre>This class defines the <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>Mac</code> class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a particular MAC algorithm.</section>	https://developer.android.com/reference/javax/crypto/MacSpi.html
MailTo	A										<section class="prog__container"><pre><code>public class MailTo</code></pre>MailTo URL parser This class parses a mailto scheme URL and then can be queried for the parsed parameters. This implements RFC 2368.</section>	https://developer.android.com/reference/android/net/MailTo.html
MainThread	A										<section class="prog__container"><pre><code>public abstract @interface MainThread</code></pre>Denotes that the annotated method should only be called on the main thread. If the annotated element is a class, then all methods in the class should be called on the main thread.</section>	https://developer.android.com/reference/android/support/annotation/MainThread.html
MalformedInputException	A										<section class="prog__container"><pre><code>public class MalformedInputException</code></pre>Checked exception thrown when an input byte sequence is not legal for given charset, or an input character sequence is not a legal sixteen-bit Unicode sequence.</section>	https://developer.android.com/reference/java/nio/charset/MalformedInputException.html
MalformedJsonException	A										<section class="prog__container"><pre><code>public final class MalformedJsonException</code></pre>Thrown when a reader encounters malformed JSON. Some syntax errors can be ignored by calling <code>setLenient(boolean)</code>.</section>	https://developer.android.com/reference/android/util/MalformedJsonException.html
MalformedParameterizedTypeException	A										<section class="prog__container"><pre><code>public class MalformedParameterizedTypeException</code></pre>Thrown when a semantically malformed parameterized type is encountered by a reflective method that needs to instantiate it. For example, if the number of type arguments to a parameterized type is wrong.</section>	https://developer.android.com/reference/java/lang/reflect/MalformedParameterizedTypeException.html
MalformedURLException	A										<section class="prog__container"><pre><code>public class MalformedURLException</code></pre>Thrown to indicate that a malformed URL has occurred. Either no legal protocol could be found in a specification string or the string could not be parsed.</section>	https://developer.android.com/reference/java/net/MalformedURLException.html
ManagerFactoryParameters	A										<section class="prog__container"><pre><code>public interface ManagerFactoryParameters</code></pre>This class is the base interface for providing algorithm-specific information to a KeyManagerFactory or TrustManagerFactory.</section>	https://developer.android.com/reference/javax/net/ssl/ManagerFactoryParameters.html
Manifest	D								*[[android.Manifest]], <section class="prog__container"><pre><code>public final class Manifest</code></pre></section>\n*[[jar.Manifest]], <section class="prog__container"><pre><code>public class Manifest</code></pre>The Manifest class is used to maintain Manifest entry names and their associated Attributes. There are main Manifest Attributes as well as per-entry Attributes. For information on the Manifest format, please see the Manifest format specification.</section>			
Manifest.permission	A										<section class="prog__container"><pre><code>public static final class Manifest.permission</code></pre></section>	https://developer.android.com/reference/android/Manifest.permission.html
Manifest.permission_group	A										<section class="prog__container"><pre><code>public static final class Manifest.permission_group</code></pre></section>	https://developer.android.com/reference/android/Manifest.permission_group.html
Map	A										<section class="prog__container"><pre><code>public interface Map</code></pre>An object that maps keys to values. A map cannot contain duplicate keys; each key can map to at most one value.</section>	https://developer.android.com/reference/java/util/Map.html
Map.Entry	A										<section class="prog__container"><pre><code>public static interface Map.Entry</code></pre>A map entry (key-value pair). The <code>Map.entrySet</code> method returns a collection-view of the map, whose elements are of this class. The <i>only</i> way to obtain a reference to a map entry is from the iterator of this collection-view. These <code>Map.Entry</code> objects are valid <i>only</i> for the duration of the iteration; more formally, the behavior of a map entry is undefined if the backing map has been modified after the entry was returned by the iterator, except through the <code>setValue</code> operation on the map entry.</section>	https://developer.android.com/reference/java/util/Map.Entry.html
MapChangeRegistry	A										<section class="prog__container"><pre><code>public class MapChangeRegistry</code></pre>Utility class for managing ObservableMap callbacks.</section>	https://developer.android.com/reference/android/databinding/MapChangeRegistry.html
MappedByteBuffer	A										<section class="prog__container"><pre><code>public abstract class MappedByteBuffer</code></pre>A direct byte buffer whose content is a memory-mapped region of a file.</section>	https://developer.android.com/reference/java/nio/MappedByteBuffer.html
MarginLayoutParamsCompat	A										<section class="prog__container"><pre><code>public final class MarginLayoutParamsCompat</code></pre>Helper for accessing API features in <code>MarginLayoutParams</code> added after API 4.</section>	https://developer.android.com/reference/android/support/v4/view/MarginLayoutParamsCompat.html
MaskFilter	A										<section class="prog__container"><pre><code>public class MaskFilter</code></pre>MaskFilter is the base class for object that perform transformations on an alpha-channel mask before drawing it. A subclass of MaskFilter may be installed into a Paint. Blur and emboss are implemented as subclasses of MaskFilter.</section>	https://developer.android.com/reference/android/graphics/MaskFilter.html
MaskFilterSpan	A										<section class="prog__container"><pre><code>public class MaskFilterSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/MaskFilterSpan.html
MatchResult	A										<section class="prog__container"><pre><code>public interface MatchResult</code></pre>The result of a match operation.</section>	https://developer.android.com/reference/java/util/regex/MatchResult.html
Matcher	A										<section class="prog__container"><pre><code>public final class Matcher</code></pre>An engine that performs match operations on a <code></code>character sequence<code></code></section>	https://developer.android.com/reference/java/util/regex/Matcher.html
Math	A										<section class="prog__container"><pre><code>public final class Math</code></pre>The class <code>Math</code> contains methods for performing basic numeric operations such as the elementary exponential, logarithm, square root, and trigonometric functions.</section>	https://developer.android.com/reference/java/lang/Math.html
MathContext	D								*[[icu.math.MathContext]], <section class="prog__container"><pre><code>public final class MathContext</code></pre>The <code>MathContext</code> immutable class encapsulates the settings understood by the operator methods of the <code>BigDecimal</code> class (and potentially other classes). Operator methods are those that effect an operation on a number or a pair of numbers.</section>\n*[[java.math.MathContext]], <section class="prog__container"><pre><code>public final class MathContext</code></pre>Immutable objects describing settings such as rounding mode and digit precision for the numerical operations provided by class <code>BigDecimal</code>.</section>			
Matrix	D								*[[graphics.Matrix]], <section class="prog__container"><pre><code>public class Matrix</code></pre>The Matrix class holds a 3x3 matrix for transforming coordinates.</section>\n*[[opengl.Matrix]], <section class="prog__container"><pre><code>public class Matrix</code></pre>Matrix math utilities. These methods operate on OpenGL ES format matrices and vectors stored in float arrays.</section>			
Matrix.ScaleToFit	A										<section class="prog__container"><pre><code>public static final enum Matrix.ScaleToFit</code></pre>Controlls how the src rect should align into the dst rect for setRectToRect().</section>	https://developer.android.com/reference/android/graphics/Matrix.ScaleToFit.html
Matrix2f	D								*[[android.renderscript.Matrix2f]], <section class="prog__container"><pre><code>public class Matrix2f</code></pre>Class for exposing the native RenderScript rs_matrix2x2 type back to the Android system.</section>\n*[[v8.renderscript.Matrix2f]], <section class="prog__container"><pre><code>public class Matrix2f</code></pre>Class for exposing the native RenderScript rs_matrix2x2 type back to the Android system.</section>			
Matrix3f	D								*[[android.renderscript.Matrix3f]], <section class="prog__container"><pre><code>public class Matrix3f</code></pre>Class for exposing the native RenderScript rs_matrix3x3 type back to the Android system.</section>\n*[[v8.renderscript.Matrix3f]], <section class="prog__container"><pre><code>public class Matrix3f</code></pre>Class for exposing the native RenderScript rs_matrix3x3 type back to the Android system.</section>			
Matrix4f	D								*[[android.renderscript.Matrix4f]], <section class="prog__container"><pre><code>public class Matrix4f</code></pre>Class for exposing the native RenderScript rs_matrix4x4 type back to the Android system.</section>\n*[[v8.renderscript.Matrix4f]], <section class="prog__container"><pre><code>public class Matrix4f</code></pre>Class for exposing the native RenderScript rs_matrix4x4 type back to the Android system.</section>			
MatrixCursor	A										<section class="prog__container"><pre><code>public class MatrixCursor</code></pre>A mutable cursor implementation backed by an array of <code>Object</code>s. Use <code>newRow()</code> to add rows. Automatically expands internal capacity as needed.</section>	https://developer.android.com/reference/android/database/MatrixCursor.html
MatrixCursor.RowBuilder	A										<section class="prog__container"><pre><code>public class MatrixCursor.RowBuilder</code></pre>Builds a row of values using either of these approaches: <ul> <li>Values can be added with explicit column ordering using <code>add(Object)</code>, which starts from the left-most column and adds one column value at a time. This follows the same ordering as the column names specified at cursor construction time. <li>Column and value pairs can be offered for possible inclusion using <code>add(String, Object)</code>. If the cursor includes the given column, the value will be set for that column, otherwise the value is ignored. This approach is useful when matching data to a custom projection. </li></li></ul> Undefined values are left as <code>null</code>.</section>	https://developer.android.com/reference/android/database/MatrixCursor.RowBuilder.html
Measure	A										<section class="prog__container"><pre><code>public class Measure</code></pre>An amount of a specified unit, consisting of a Number and a Unit. For example, a length measure consists of a Number and a length unit, such as feet or meters.</section>	https://developer.android.com/reference/android/icu/util/Measure.html
MeasureFormat	A										<section class="prog__container"><pre><code>public class MeasureFormat</code></pre>A formatter for Measure objects.</section>	https://developer.android.com/reference/android/icu/text/MeasureFormat.html
MeasureFormat.FormatWidth	A										<section class="prog__container"><pre><code>public static final enum MeasureFormat.FormatWidth</code></pre>Formatting width enum.</section>	https://developer.android.com/reference/android/icu/text/MeasureFormat.FormatWidth.html
MeasureUnit	A										<section class="prog__container"><pre><code>public class MeasureUnit</code></pre>A unit such as length, mass, volume, currency, etc. A unit is coupled with a numeric amount to produce a Measure. MeasureUnit objects are immutable. All subclasses must guarantee that. (However, subclassing is discouraged.)</section>	https://developer.android.com/reference/android/icu/util/MeasureUnit.html
MediaActionSound	A										<section class="prog__container"><pre><code>public class MediaActionSound</code></pre></section>	https://developer.android.com/reference/android/media/MediaActionSound.html
MediaBrowser	A										<section class="prog__container"><pre><code>public final class MediaBrowser</code></pre>Browses media content offered by a link MediaBrowserService.</section>	https://developer.android.com/reference/android/media/browse/MediaBrowser.html
MediaBrowser.ConnectionCallback	A										<section class="prog__container"><pre><code>public static class MediaBrowser.ConnectionCallback</code></pre>Callbacks for connection related events.</section>	https://developer.android.com/reference/android/media/browse/MediaBrowser.ConnectionCallback.html
MediaBrowser.ItemCallback	A										<section class="prog__container"><pre><code>public static abstract class MediaBrowser.ItemCallback</code></pre>Callback for receiving the result of <code>getItem(String, MediaBrowser.ItemCallback)</code>.</section>	https://developer.android.com/reference/android/media/browse/MediaBrowser.ItemCallback.html
MediaBrowser.MediaItem	A										<section class="prog__container"><pre><code>public static class MediaBrowser.MediaItem</code></pre>A class with information on a single media item for use in browsing media.</section>	https://developer.android.com/reference/android/media/browse/MediaBrowser.MediaItem.html
MediaBrowser.SubscriptionCallback	A										<section class="prog__container"><pre><code>public static abstract class MediaBrowser.SubscriptionCallback</code></pre>Callbacks for subscription related events.</section>	https://developer.android.com/reference/android/media/browse/MediaBrowser.SubscriptionCallback.html
MediaBrowserCompat	A										<section class="prog__container"><pre><code>public final class MediaBrowserCompat</code></pre>Browses media content offered by a <code>MediaBrowserServiceCompat</code>.</section>	https://developer.android.com/reference/android/support/v4/media/MediaBrowserCompat.html
MediaBrowserCompat.ConnectionCallback	A										<section class="prog__container"><pre><code>public static class MediaBrowserCompat.ConnectionCallback</code></pre>Callbacks for connection related events.</section>	https://developer.android.com/reference/android/support/v4/media/MediaBrowserCompat.ConnectionCallback.html
MediaBrowserCompat.ItemCallback	A										<section class="prog__container"><pre><code>public static abstract class MediaBrowserCompat.ItemCallback</code></pre>Callback for receiving the result of <code>getItem(String, MediaBrowserCompat.ItemCallback)</code>.</section>	https://developer.android.com/reference/android/support/v4/media/MediaBrowserCompat.ItemCallback.html
MediaBrowserCompat.MediaItem	A										<section class="prog__container"><pre><code>public static class MediaBrowserCompat.MediaItem</code></pre>A class with information on a single media item for use in browsing media.</section>	https://developer.android.com/reference/android/support/v4/media/MediaBrowserCompat.MediaItem.html
MediaBrowserCompat.SubscriptionCallback	A										<section class="prog__container"><pre><code>public static abstract class MediaBrowserCompat.SubscriptionCallback</code></pre>Callbacks for subscription related events.</section>	https://developer.android.com/reference/android/support/v4/media/MediaBrowserCompat.SubscriptionCallback.html
MediaBrowserService	A										<section class="prog__container"><pre><code>public abstract class MediaBrowserService</code></pre>Base class for media browse services.</section>	https://developer.android.com/reference/android/service/media/MediaBrowserService.html
MediaBrowserService.BrowserRoot	A										<section class="prog__container"><pre><code>public static final class MediaBrowserService.BrowserRoot</code></pre>Contains information that the browser service needs to send to the client when first connected.</section>	https://developer.android.com/reference/android/service/media/MediaBrowserService.BrowserRoot.html
MediaBrowserService.Result	A										<section class="prog__container"><pre><code>public class MediaBrowserService.Result</code></pre>Completion handler for asynchronous callback methods in <code>MediaBrowserService</code>.</section>	https://developer.android.com/reference/android/service/media/MediaBrowserService.Result.html
MediaBrowserServiceCompat	A										<section class="prog__container"><pre><code>public abstract class MediaBrowserServiceCompat</code></pre>Base class for media browse services.</section>	https://developer.android.com/reference/android/support/v4/media/MediaBrowserServiceCompat.html
MediaBrowserServiceCompat.BrowserRoot	A										<section class="prog__container"><pre><code>public static final class MediaBrowserServiceCompat.BrowserRoot</code></pre>Contains information that the browser service needs to send to the client when first connected.</section>	https://developer.android.com/reference/android/support/v4/media/MediaBrowserServiceCompat.BrowserRoot.html
MediaBrowserServiceCompat.Result	A										<section class="prog__container"><pre><code>public static class MediaBrowserServiceCompat.Result</code></pre>Completion handler for asynchronous callback methods in <code>MediaBrowserServiceCompat</code>.</section>	https://developer.android.com/reference/android/support/v4/media/MediaBrowserServiceCompat.Result.html
MediaButtonReceiver	A										<section class="prog__container"><pre><code>public class MediaButtonReceiver</code></pre>A media button receiver receives and helps translate hardware media playback buttons, such as those found on wired and wireless headsets, into the appropriate callbacks in your app.</section>	https://developer.android.com/reference/android/support/v4/media/session/MediaButtonReceiver.html
MediaCodec	A										<section class="prog__container"><pre><code>public final class MediaCodec</code></pre>MediaCodec class can be used to access low-level media codecs, i.e. encoder/decoder components. It is part of the Android low-level multimedia support infrastructure (normally used together with <code>MediaExtractor</code>, <code>MediaSync</code>, <code>MediaMuxer</code>, <code>MediaCrypto</code>, <code>MediaDrm</code>, <code>Image</code>, <code>Surface</code>, and <code>AudioTrack</code>.)</section>	https://developer.android.com/reference/android/media/MediaCodec.html
MediaCodec.BufferInfo	A										<section class="prog__container"><pre><code>public static final class MediaCodec.BufferInfo</code></pre>Per buffer metadata includes an offset and size specifying the range of valid data in the associated codec (output) buffer.</section>	https://developer.android.com/reference/android/media/MediaCodec.BufferInfo.html
MediaCodec.Callback	A										<section class="prog__container"><pre><code>public static abstract class MediaCodec.Callback</code></pre>MediaCodec callback interface. Used to notify the user asynchronously of various MediaCodec events.</section>	https://developer.android.com/reference/android/media/MediaCodec.Callback.html
MediaCodec.CodecException	A										<section class="prog__container"><pre><code>public static final class MediaCodec.CodecException</code></pre>Thrown when an internal codec error occurs.</section>	https://developer.android.com/reference/android/media/MediaCodec.CodecException.html
MediaCodec.CryptoException	A										<section class="prog__container"><pre><code>public static final class MediaCodec.CryptoException</code></pre>Thrown when a crypto error occurs while queueing a secure input buffer.</section>	https://developer.android.com/reference/android/media/MediaCodec.CryptoException.html
MediaCodec.CryptoInfo	A										<section class="prog__container"><pre><code>public static final class MediaCodec.CryptoInfo</code></pre>Metadata describing the structure of a (at least partially) encrypted input sample. A buffer's data is considered to be partitioned into "subSamples", each subSample starts with a (potentially empty) run of plain, unencrypted bytes followed by a (also potentially empty) run of encrypted bytes. If pattern encryption applies, each of the latter runs is encrypted only partly, according to a repeating pattern of "encrypt" and "skip" blocks. numBytesOfClearData can be null to indicate that all data is encrypted. This information encapsulates per-sample metadata as outlined in ISO/IEC FDIS 23001-7:2011 "Common encryption in ISO base media file format files".</section>	https://developer.android.com/reference/android/media/MediaCodec.CryptoInfo.html
MediaCodec.CryptoInfo.Pattern	A										<section class="prog__container"><pre><code>public static final class MediaCodec.CryptoInfo.Pattern</code></pre>Metadata describing an encryption pattern for the protected bytes in a subsample. An encryption pattern consists of a repeating sequence of crypto blocks comprised of a number of encrypted blocks followed by a number of unencrypted, or skipped, blocks.</section>	https://developer.android.com/reference/android/media/MediaCodec.CryptoInfo.Pattern.html
MediaCodec.OnFrameRenderedListener	A										<section class="prog__container"><pre><code>public static interface MediaCodec.OnFrameRenderedListener</code></pre>Listener to be called when an output frame has rendered on the output surface</section>	https://developer.android.com/reference/android/media/MediaCodec.OnFrameRenderedListener.html
MediaCodecInfo	A										<section class="prog__container"><pre><code>public final class MediaCodecInfo</code></pre>Provides information about a given media codec available on the device. You can iterate through all codecs available by querying <code>MediaCodecList</code>. For example, here's how to find an encoder that supports a given MIME type: <pre> private static MediaCodecInfo selectCodec(String mimeType) { int numCodecs = MediaCodecList.getCodecCount(); for (int i = 0; i &lt; numCodecs; i++) { MediaCodecInfo codecInfo = MediaCodecList.getCodecInfoAt(i); if (!codecInfo.isEncoder()) { continue; } String[] types = codecInfo.getSupportedTypes(); for (int j = 0; j &lt; types.length; j++) { if (types[j].equalsIgnoreCase(mimeType)) { return codecInfo; } } } return null; }</pre></section>	https://developer.android.com/reference/android/media/MediaCodecInfo.html
MediaCodecInfo.AudioCapabilities	A										<section class="prog__container"><pre><code>public static final class MediaCodecInfo.AudioCapabilities</code></pre>A class that supports querying the audio capabilities of a codec.</section>	https://developer.android.com/reference/android/media/MediaCodecInfo.AudioCapabilities.html
MediaCodecInfo.CodecCapabilities	A										<section class="prog__container"><pre><code>public static final class MediaCodecInfo.CodecCapabilities</code></pre>Encapsulates the capabilities of a given codec component. For example, what profile/level combinations it supports and what colorspaces it is capable of providing the decoded data in, as well as some codec-type specific capability flags.</section>	https://developer.android.com/reference/android/media/MediaCodecInfo.CodecCapabilities.html
MediaCodecInfo.CodecProfileLevel	A										<section class="prog__container"><pre><code>public static final class MediaCodecInfo.CodecProfileLevel</code></pre>Encapsulates the profiles available for a codec component.</section>	https://developer.android.com/reference/android/media/MediaCodecInfo.CodecProfileLevel.html
MediaCodecInfo.EncoderCapabilities	A										<section class="prog__container"><pre><code>public static final class MediaCodecInfo.EncoderCapabilities</code></pre>A class that supports querying the encoding capabilities of a codec.</section>	https://developer.android.com/reference/android/media/MediaCodecInfo.EncoderCapabilities.html
MediaCodecInfo.VideoCapabilities	A										<section class="prog__container"><pre><code>public static final class MediaCodecInfo.VideoCapabilities</code></pre>A class that supports querying the video capabilities of a codec.</section>	https://developer.android.com/reference/android/media/MediaCodecInfo.VideoCapabilities.html
MediaCodecList	A										<section class="prog__container"><pre><code>public final class MediaCodecList</code></pre>Allows you to enumerate available codecs, each specified as a <code>MediaCodecInfo</code> object, find a codec supporting a given format and query the capabilities of a given codec.</section>	https://developer.android.com/reference/android/media/MediaCodecList.html
MediaControlIntent	A										<section class="prog__container"><pre><code>public final class MediaControlIntent</code></pre>Constants for media control intents.</section>	https://developer.android.com/reference/android/support/v7/media/MediaControlIntent.html
MediaController	D								*[[session.MediaController]], <section class="prog__container"><pre><code>public final class MediaController</code></pre>Allows an app to interact with an ongoing media session. Media buttons and other commands can be sent to the session. A callback may be registered to receive updates from the session, such as metadata and play state changes.</section>\n*[[widget.MediaController]], <section class="prog__container"><pre><code>public class MediaController</code></pre>A view containing controls for a MediaPlayer. Typically contains the buttons like "Play/Pause", "Rewind", "Fast Forward" and a progress slider. It takes care of synchronizing the controls with the state of the MediaPlayer.</section>			
MediaController.Callback	A										<section class="prog__container"><pre><code>public static abstract class MediaController.Callback</code></pre>Callback for receiving updates from the session. A Callback can be registered using <code>registerCallback(MediaController.Callback)</code>.</section>	https://developer.android.com/reference/android/media/session/MediaController.Callback.html
MediaController.MediaPlayerControl	A										<section class="prog__container"><pre><code>public static interface MediaController.MediaPlayerControl</code></pre></section>	https://developer.android.com/reference/android/widget/MediaController.MediaPlayerControl.html
MediaController.PlaybackInfo	A										<section class="prog__container"><pre><code>public static final class MediaController.PlaybackInfo</code></pre>Holds information about the current playback and how audio is handled for this session.</section>	https://developer.android.com/reference/android/media/session/MediaController.PlaybackInfo.html
MediaController.TransportControls	A										<section class="prog__container"><pre><code>public final class MediaController.TransportControls</code></pre>Interface for controlling media playback on a session. This allows an app to send media transport commands to the session.</section>	https://developer.android.com/reference/android/media/session/MediaController.TransportControls.html
MediaControllerCompat	A										<section class="prog__container"><pre><code>public final class MediaControllerCompat</code></pre>Allows an app to interact with an ongoing media session. Media buttons and other commands can be sent to the session. A callback may be registered to receive updates from the session, such as metadata and play state changes.</section>	https://developer.android.com/reference/android/support/v4/media/session/MediaControllerCompat.html
MediaControllerCompat.Callback	A										<section class="prog__container"><pre><code>public static abstract class MediaControllerCompat.Callback</code></pre>Callback for receiving updates on from the session. A Callback can be registered using <code>registerCallback(MediaControllerCompat.Callback)</code></section>	https://developer.android.com/reference/android/support/v4/media/session/MediaControllerCompat.Callback.html
MediaControllerCompat.PlaybackInfo	A										<section class="prog__container"><pre><code>public static final class MediaControllerCompat.PlaybackInfo</code></pre>Holds information about the way volume is handled for this session.</section>	https://developer.android.com/reference/android/support/v4/media/session/MediaControllerCompat.PlaybackInfo.html
MediaControllerCompat.TransportControls	A										<section class="prog__container"><pre><code>public static abstract class MediaControllerCompat.TransportControls</code></pre>Interface for controlling media playback on a session. This allows an app to send media transport commands to the session.</section>	https://developer.android.com/reference/android/support/v4/media/session/MediaControllerCompat.TransportControls.html
MediaControllerGlue	A										<section class="prog__container"><pre><code>public abstract class MediaControllerGlue</code></pre><p class="caution"><strong> This class is deprecated.</strong><br/> Use <code>MediaControllerGlue</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/MediaControllerGlue.html
MediaCrypto	A										<section class="prog__container"><pre><code>public final class MediaCrypto</code></pre>MediaCrypto class can be used in conjunction with <code>MediaCodec</code> to decode encrypted media data. Crypto schemes are assigned 16 byte UUIDs, the method <code>isCryptoSchemeSupported(UUID)</code> can be used to query if a given scheme is supported on the device.</section>	https://developer.android.com/reference/android/media/MediaCrypto.html
MediaCryptoException	A										<section class="prog__container"><pre><code>public final class MediaCryptoException</code></pre>Exception thrown if MediaCrypto object could not be instantiated or if unable to perform an operation on the MediaCrypto object.</section>	https://developer.android.com/reference/android/media/MediaCryptoException.html
MediaDataSource	A										<section class="prog__container"><pre><code>public abstract class MediaDataSource</code></pre>For supplying media data to the framework. Implement this if your app has special requirements for the way media data is obtained. <p class="note">Methods of this interface may be called on multiple different threads. There will be a thread synchronization point between each call to ensure that modifications to the state of your MediaDataSource are visible to future calls. This means you don't need to do your own synchronization unless you're modifying the MediaDataSource from another thread while it's being used by the framework.</section>	https://developer.android.com/reference/android/media/MediaDataSource.html
MediaDescription	A										<section class="prog__container"><pre><code>public class MediaDescription</code></pre>A simple set of metadata for a media item suitable for display. This can be created using the Builder or retrieved from existing metadata using <code>getDescription()</code>.</section>	https://developer.android.com/reference/android/media/MediaDescription.html
MediaDescription.Builder	A										<section class="prog__container"><pre><code>public static class MediaDescription.Builder</code></pre>Builder for <code>MediaDescription</code> objects.</section>	https://developer.android.com/reference/android/media/MediaDescription.Builder.html
MediaDescriptionCompat	A										<section class="prog__container"><pre><code>public final class MediaDescriptionCompat</code></pre>A simple set of metadata for a media item suitable for display. This can be created using the Builder or retrieved from existing metadata using <code>getDescription()</code>.</section>	https://developer.android.com/reference/android/support/v4/media/MediaDescriptionCompat.html
MediaDescriptionCompat.Builder	A										<section class="prog__container"><pre><code>public static final class MediaDescriptionCompat.Builder</code></pre>Builder for <code>MediaDescriptionCompat</code> objects.</section>	https://developer.android.com/reference/android/support/v4/media/MediaDescriptionCompat.Builder.html
MediaDrm	A										<section class="prog__container"><pre><code>public final class MediaDrm</code></pre>MediaDrm can be used to obtain keys for decrypting protected media streams, in conjunction with <code>MediaCrypto</code>. The MediaDrm APIs are designed to support the ISO/IEC 23001-7: Common Encryption standard, but may also be used to implement other encryption schemes.</section>	https://developer.android.com/reference/android/media/MediaDrm.html
MediaDrm.CryptoSession	A										<section class="prog__container"><pre><code>public final class MediaDrm.CryptoSession</code></pre>In addition to supporting decryption of DASH Common Encrypted Media, the MediaDrm APIs provide the ability to securely deliver session keys from an operator's session key server to a client device, based on the factory-installed root of trust, and then perform encrypt, decrypt, sign and verify operations with the session key on arbitrary user data.</section>	https://developer.android.com/reference/android/media/MediaDrm.CryptoSession.html
MediaDrm.KeyRequest	A										<section class="prog__container"><pre><code>public static final class MediaDrm.KeyRequest</code></pre>Contains the opaque data an app uses to request keys from a license server</section>	https://developer.android.com/reference/android/media/MediaDrm.KeyRequest.html
MediaDrm.KeyStatus	A										<section class="prog__container"><pre><code>public static final class MediaDrm.KeyStatus</code></pre>Defines the status of a key. A KeyStatus for each key in a session is provided to the <code>onKeyStatusChange(MediaDrm, byte[], List<mediadrm.keystatus>, boolean)</mediadrm.keystatus></code> listener.</section>	https://developer.android.com/reference/android/media/MediaDrm.KeyStatus.html
MediaDrm.MediaDrmStateException	A										<section class="prog__container"><pre><code>public static final class MediaDrm.MediaDrmStateException</code></pre>Thrown when an unrecoverable failure occurs during a MediaDrm operation. Extends java.lang.IllegalStateException with the addition of an error code that may be useful in diagnosing the failure.</section>	https://developer.android.com/reference/android/media/MediaDrm.MediaDrmStateException.html
MediaDrm.OnEventListener	A										<section class="prog__container"><pre><code>public static interface MediaDrm.OnEventListener</code></pre>Interface definition for a callback to be invoked when a drm event occurs</section>	https://developer.android.com/reference/android/media/MediaDrm.OnEventListener.html
MediaDrm.OnExpirationUpdateListener	A										<section class="prog__container"><pre><code>public static interface MediaDrm.OnExpirationUpdateListener</code></pre>Interface definition for a callback to be invoked when a drm session expiration update occurs</section>	https://developer.android.com/reference/android/media/MediaDrm.OnExpirationUpdateListener.html
MediaDrm.OnKeyStatusChangeListener	A										<section class="prog__container"><pre><code>public static interface MediaDrm.OnKeyStatusChangeListener</code></pre>Interface definition for a callback to be invoked when the keys in a drm session change states.</section>	https://developer.android.com/reference/android/media/MediaDrm.OnKeyStatusChangeListener.html
MediaDrm.ProvisionRequest	A										<section class="prog__container"><pre><code>public static final class MediaDrm.ProvisionRequest</code></pre>Contains the opaque data an app uses to request a certificate from a provisioning server</section>	https://developer.android.com/reference/android/media/MediaDrm.ProvisionRequest.html
MediaDrmException	A										<section class="prog__container"><pre><code>public class MediaDrmException</code></pre>Base class for MediaDrm exceptions</section>	https://developer.android.com/reference/android/media/MediaDrmException.html
MediaDrmResetException	A										<section class="prog__container"><pre><code>public class MediaDrmResetException</code></pre>This exception is thrown when the MediaDrm instance has become unusable due to a restart of the mediaserver process. To continue, the app must release the MediaDrm object, then create and initialize a new one.</section>	https://developer.android.com/reference/android/media/MediaDrmResetException.html
MediaExtractor	A										<section class="prog__container"><pre><code>public final class MediaExtractor</code></pre>MediaExtractor facilitates extraction of demuxed, typically encoded, media data from a data source.</section>	https://developer.android.com/reference/android/media/MediaExtractor.html
MediaFormat	A										<section class="prog__container"><pre><code>public final class MediaFormat</code></pre>Encapsulates the information describing the format of media data, be it audio or video. The format of the media data is specified as string/value pairs. Keys common to all audio/video formats, <b>all keys not marked optional are mandatory</b>: <table> <tr><th>Name</th><th>Value Type</th><th>Description</th></tr> <tr><td><code>KEY_MIME</code></td><td>String</td><td>The type of the format.</td></tr> <tr><td><code>KEY_MAX_INPUT_SIZE</code></td><td>Integer</td><td>optional, maximum size of a buffer of input data</td></tr> <tr><td><code>KEY_BIT_RATE</code></td><td>Integer</td><td><b>encoder-only</b>, desired bitrate in bits/second</td></tr> </table> Video formats have the following keys: <table> <tr><th>Name</th><th>Value Type</th><th>Description</th></tr> <tr><td><code>KEY_WIDTH</code></td><td>Integer</td><td></td></tr> <tr><td><code>KEY_HEIGHT</code></td><td>Integer</td><td></td></tr> <tr><td><code>KEY_COLOR_FORMAT</code></td><td>Integer</td><td>set by the user for encoders, readable in the output format of decoders</td></tr></table></section>	https://developer.android.com/reference/android/media/MediaFormat.html
MediaItemMetadata	A										<section class="prog__container"><pre><code>public final class MediaItemMetadata</code></pre>Constants for specifying metadata about a media item as a <code>Bundle</code>.</section>	https://developer.android.com/reference/android/support/v7/media/MediaItemMetadata.html
MediaItemStatus	A										<section class="prog__container"><pre><code>public final class MediaItemStatus</code></pre>Describes the playback status of a media item.</section>	https://developer.android.com/reference/android/support/v7/media/MediaItemStatus.html
MediaItemStatus.Builder	A										<section class="prog__container"><pre><code>public static final class MediaItemStatus.Builder</code></pre>Builder for <code>media item status objects</code>.</section>	https://developer.android.com/reference/android/support/v7/media/MediaItemStatus.Builder.html
MediaMetadata	A										<section class="prog__container"><pre><code>public final class MediaMetadata</code></pre>Contains metadata about an item, such as the title, artist, etc.</section>	https://developer.android.com/reference/android/media/MediaMetadata.html
MediaMetadata.Builder	A										<section class="prog__container"><pre><code>public static final class MediaMetadata.Builder</code></pre>Use to build MediaMetadata objects. The system defined metadata keys must use the appropriate data type.</section>	https://developer.android.com/reference/android/media/MediaMetadata.Builder.html
MediaMetadataCompat	A										<section class="prog__container"><pre><code>public final class MediaMetadataCompat</code></pre>Contains metadata about an item, such as the title, artist, etc.</section>	https://developer.android.com/reference/android/support/v4/media/MediaMetadataCompat.html
MediaMetadataCompat.Builder	A										<section class="prog__container"><pre><code>public static final class MediaMetadataCompat.Builder</code></pre>Use to build MediaMetadata objects. The system defined metadata keys must use the appropriate data type.</section>	https://developer.android.com/reference/android/support/v4/media/MediaMetadataCompat.Builder.html
MediaMetadataEditor	A										<section class="prog__container"><pre><code>public abstract class MediaMetadataEditor</code></pre><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> Use <code>MediaMetadata</code> instead together with <code>MediaSession</code>.</section>	https://developer.android.com/reference/android/media/MediaMetadataEditor.html
MediaMetadataRetriever	A										<section class="prog__container"><pre><code>public class MediaMetadataRetriever</code></pre>MediaMetadataRetriever class provides a unified interface for retrieving frame and meta data from an input media file.</section>	https://developer.android.com/reference/android/media/MediaMetadataRetriever.html
MediaMuxer	A										<section class="prog__container"><pre><code>public final class MediaMuxer</code></pre>MediaMuxer facilitates muxing elementary streams. Currently supports mp4 or webm file as the output and at most one audio and/or one video elementary stream. MediaMuxer does not support muxing B-frames.</section>	https://developer.android.com/reference/android/media/MediaMuxer.html
MediaMuxer.OutputFormat	A										<section class="prog__container"><pre><code>public static final class MediaMuxer.OutputFormat</code></pre>Defines the output format. These constants are used with constructor.</section>	https://developer.android.com/reference/android/media/MediaMuxer.OutputFormat.html
MediaPlayer	A										<section class="prog__container"><pre><code>public class MediaPlayer</code></pre>MediaPlayer class can be used to control playback of audio/video files and streams. An example on how to use the methods in this class can be found in <code>VideoView</code>.</section>	https://developer.android.com/reference/android/media/MediaPlayer.html
MediaPlayer.OnBufferingUpdateListener	A										<section class="prog__container"><pre><code>public static interface MediaPlayer.OnBufferingUpdateListener</code></pre>Interface definition of a callback to be invoked indicating buffering status of a media resource being streamed over the network.</section>	https://developer.android.com/reference/android/media/MediaPlayer.OnBufferingUpdateListener.html
MediaPlayer.OnCompletionListener	A										<section class="prog__container"><pre><code>public static interface MediaPlayer.OnCompletionListener</code></pre>Interface definition for a callback to be invoked when playback of a media source has completed.</section>	https://developer.android.com/reference/android/media/MediaPlayer.OnCompletionListener.html
MediaPlayer.OnErrorListener	A										<section class="prog__container"><pre><code>public static interface MediaPlayer.OnErrorListener</code></pre>Interface definition of a callback to be invoked when there has been an error during an asynchronous operation (other errors will throw exceptions at method call time).</section>	https://developer.android.com/reference/android/media/MediaPlayer.OnErrorListener.html
MediaPlayer.OnInfoListener	A										<section class="prog__container"><pre><code>public static interface MediaPlayer.OnInfoListener</code></pre>Interface definition of a callback to be invoked to communicate some info and/or warning about the media or its playback.</section>	https://developer.android.com/reference/android/media/MediaPlayer.OnInfoListener.html
MediaPlayer.OnPreparedListener	A										<section class="prog__container"><pre><code>public static interface MediaPlayer.OnPreparedListener</code></pre>Interface definition for a callback to be invoked when the media source is ready for playback.</section>	https://developer.android.com/reference/android/media/MediaPlayer.OnPreparedListener.html
MediaPlayer.OnSeekCompleteListener	A										<section class="prog__container"><pre><code>public static interface MediaPlayer.OnSeekCompleteListener</code></pre>Interface definition of a callback to be invoked indicating the completion of a seek operation.</section>	https://developer.android.com/reference/android/media/MediaPlayer.OnSeekCompleteListener.html
MediaPlayer.OnTimedMetaDataAvailableListener	A										<section class="prog__container"><pre><code>public static interface MediaPlayer.OnTimedMetaDataAvailableListener</code></pre>Interface definition of a callback to be invoked when a track has timed metadata available.</section>	https://developer.android.com/reference/android/media/MediaPlayer.OnTimedMetaDataAvailableListener.html
MediaPlayer.OnTimedTextListener	A										<section class="prog__container"><pre><code>public static interface MediaPlayer.OnTimedTextListener</code></pre>Interface definition of a callback to be invoked when a timed text is available for display.</section>	https://developer.android.com/reference/android/media/MediaPlayer.OnTimedTextListener.html
MediaPlayer.OnVideoSizeChangedListener	A										<section class="prog__container"><pre><code>public static interface MediaPlayer.OnVideoSizeChangedListener</code></pre>Interface definition of a callback to be invoked when the video size is first known or updated</section>	https://developer.android.com/reference/android/media/MediaPlayer.OnVideoSizeChangedListener.html
MediaPlayer.TrackInfo	A										<section class="prog__container"><pre><code>public static class MediaPlayer.TrackInfo</code></pre>Class for MediaPlayer to return each audio/video/subtitle track's metadata.</section>	https://developer.android.com/reference/android/media/MediaPlayer.TrackInfo.html
MediaProjection	A										<section class="prog__container"><pre><code>public final class MediaProjection</code></pre>A token granting applications the ability to capture screen contents and/or record system audio. The exact capabilities granted depend on the type of MediaProjection.</section>	https://developer.android.com/reference/android/media/projection/MediaProjection.html
MediaProjection.Callback	A										<section class="prog__container"><pre><code>public static abstract class MediaProjection.Callback</code></pre>Callbacks for the projection session.</section>	https://developer.android.com/reference/android/media/projection/MediaProjection.Callback.html
MediaProjectionManager	A										<section class="prog__container"><pre><code>public final class MediaProjectionManager</code></pre>Manages the retrieval of certain types of <code>MediaProjection</code> tokens.</section>	https://developer.android.com/reference/android/media/projection/MediaProjectionManager.html
MediaRecorder	A										<section class="prog__container"><pre><code>public class MediaRecorder</code></pre>Used to record audio and video. The recording control is based on a simple state machine (see below).</section>	https://developer.android.com/reference/android/media/MediaRecorder.html
MediaRecorder.AudioEncoder	A										<section class="prog__container"><pre><code>public final class MediaRecorder.AudioEncoder</code></pre>Defines the audio encoding. These constants are used with <code>setAudioEncoder(int)</code>.</section>	https://developer.android.com/reference/android/media/MediaRecorder.AudioEncoder.html
MediaRecorder.AudioSource	A										<section class="prog__container"><pre><code>public final class MediaRecorder.AudioSource</code></pre>Defines the audio source. An audio source defines both a default physical source of audio signal, and a recording configuration. These constants are for instance used in <code>setAudioSource(int)</code> or <code>setAudioSource(int)</code>.</section>	https://developer.android.com/reference/android/media/MediaRecorder.AudioSource.html
MediaRecorder.OnErrorListener	A										<section class="prog__container"><pre><code>public static interface MediaRecorder.OnErrorListener</code></pre>Interface definition for a callback to be invoked when an error occurs while recording.</section>	https://developer.android.com/reference/android/media/MediaRecorder.OnErrorListener.html
MediaRecorder.OnInfoListener	A										<section class="prog__container"><pre><code>public static interface MediaRecorder.OnInfoListener</code></pre>Interface definition for a callback to be invoked when an error occurs while recording.</section>	https://developer.android.com/reference/android/media/MediaRecorder.OnInfoListener.html
MediaRecorder.OutputFormat	A										<section class="prog__container"><pre><code>public final class MediaRecorder.OutputFormat</code></pre>Defines the output format. These constants are used with <code>setOutputFormat(int)</code>.</section>	https://developer.android.com/reference/android/media/MediaRecorder.OutputFormat.html
MediaRecorder.VideoEncoder	A										<section class="prog__container"><pre><code>public final class MediaRecorder.VideoEncoder</code></pre>Defines the video encoding. These constants are used with <code>setVideoEncoder(int)</code>.</section>	https://developer.android.com/reference/android/media/MediaRecorder.VideoEncoder.html
MediaRecorder.VideoSource	A										<section class="prog__container"><pre><code>public final class MediaRecorder.VideoSource</code></pre>Defines the video source. These constants are used with <code>setVideoSource(int)</code>.</section>	https://developer.android.com/reference/android/media/MediaRecorder.VideoSource.html
MediaRouteActionProvider	D								*[[android.app.MediaRouteActionProvider]], <section class="prog__container"><pre><code>public class MediaRouteActionProvider</code></pre>The media route action provider displays a <code>media route button</code> in the application's <code>ActionBar</code> to allow the user to select routes and to control the currently selected route.</section>\n*[[v7.app.MediaRouteActionProvider]], <section class="prog__container"><pre><code>public class MediaRouteActionProvider</code></pre>The media route action provider displays a <code>media route button</code> in the application's <code>ActionBar</code> to allow the user to select routes and to control the currently selected route.</section>			
MediaRouteButton	D								*[[android.app.MediaRouteButton]], <section class="prog__container"><pre><code>public class MediaRouteButton</code></pre></section>\n*[[v7.app.MediaRouteButton]], <section class="prog__container"><pre><code>public class MediaRouteButton</code></pre>The media route button allows the user to select routes and to control the currently selected route.</section>			
MediaRouteChooserDialog	A										<section class="prog__container"><pre><code>public class MediaRouteChooserDialog</code></pre>This class implements the route chooser dialog for <code>MediaRouter</code>.</section>	https://developer.android.com/reference/android/support/v7/app/MediaRouteChooserDialog.html
MediaRouteChooserDialogFragment	A										<section class="prog__container"><pre><code>public class MediaRouteChooserDialogFragment</code></pre>Media route chooser dialog fragment.</section>	https://developer.android.com/reference/android/support/v7/app/MediaRouteChooserDialogFragment.html
MediaRouteControllerDialog	A										<section class="prog__container"><pre><code>public class MediaRouteControllerDialog</code></pre>This class implements the route controller dialog for <code>MediaRouter</code>.</section>	https://developer.android.com/reference/android/support/v7/app/MediaRouteControllerDialog.html
MediaRouteControllerDialogFragment	A										<section class="prog__container"><pre><code>public class MediaRouteControllerDialogFragment</code></pre>Media route controller dialog fragment.</section>	https://developer.android.com/reference/android/support/v7/app/MediaRouteControllerDialogFragment.html
MediaRouteDescriptor	A										<section class="prog__container"><pre><code>public final class MediaRouteDescriptor</code></pre>Describes the properties of a route.</section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteDescriptor.html
MediaRouteDescriptor.Builder	A										<section class="prog__container"><pre><code>public static final class MediaRouteDescriptor.Builder</code></pre>Builder for <code>media route descriptors</code>.</section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteDescriptor.Builder.html
MediaRouteDialogFactory	A										<section class="prog__container"><pre><code>public class MediaRouteDialogFactory</code></pre>The media route dialog factory is responsible for creating the media route chooser and controller dialogs as needed.</section>	https://developer.android.com/reference/android/support/v7/app/MediaRouteDialogFactory.html
MediaRouteDiscoveryFragment	A										<section class="prog__container"><pre><code>public class MediaRouteDiscoveryFragment</code></pre>Media route discovery fragment.</section>	https://developer.android.com/reference/android/support/v7/app/MediaRouteDiscoveryFragment.html
MediaRouteDiscoveryRequest	A										<section class="prog__container"><pre><code>public final class MediaRouteDiscoveryRequest</code></pre>Describes the kinds of routes that the media router would like to discover and whether to perform active scanning.</section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteDiscoveryRequest.html
MediaRouteProvider	A										<section class="prog__container"><pre><code>public abstract class MediaRouteProvider</code></pre>Media route providers are used to publish additional media routes for use within an application. Media route providers may also be declared as a service to publish additional media routes to all applications in the system.</section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteProvider.html
MediaRouteProvider.Callback	A										<section class="prog__container"><pre><code>public static abstract class MediaRouteProvider.Callback</code></pre>Callback which is invoked when route information becomes available or changes.</section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteProvider.Callback.html
MediaRouteProvider.ProviderMetadata	A										<section class="prog__container"><pre><code>public static final class MediaRouteProvider.ProviderMetadata</code></pre>Describes properties of the route provider's implementation.</section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteProvider.ProviderMetadata.html
MediaRouteProvider.RouteController	A										<section class="prog__container"><pre><code>public static abstract class MediaRouteProvider.RouteController</code></pre>Provides control over a particular route.</section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteProvider.RouteController.html
MediaRouteProviderDescriptor	A										<section class="prog__container"><pre><code>public final class MediaRouteProviderDescriptor</code></pre>Describes the state of a media route provider and the routes that it publishes.</section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteProviderDescriptor.html
MediaRouteProviderDescriptor.Builder	A										<section class="prog__container"><pre><code>public static final class MediaRouteProviderDescriptor.Builder</code></pre>Builder for <code>media route provider descriptors</code>.</section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteProviderDescriptor.Builder.html
MediaRouteProviderService	A										<section class="prog__container"><pre><code>public abstract class MediaRouteProviderService</code></pre>Base class for media route provider services.</section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteProviderService.html
MediaRouteSelector	A										<section class="prog__container"><pre><code>public final class MediaRouteSelector</code></pre>Describes the capabilities of routes that applications would like to discover and use.</section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteSelector.html
MediaRouteSelector.Builder	A										<section class="prog__container"><pre><code>public static final class MediaRouteSelector.Builder</code></pre>Builder for <code>media route selectors</code>.</section>	https://developer.android.com/reference/android/support/v7/media/MediaRouteSelector.Builder.html
MediaRouter	D								*[[android.media.MediaRouter]], <section class="prog__container"><pre><code>public class MediaRouter</code></pre>MediaRouter allows applications to control the routing of media channels and streams from the current device to external speakers and destination devices.</section>\n*[[v7.media.MediaRouter]], <section class="prog__container"><pre><code>public final class MediaRouter</code></pre>MediaRouter allows applications to control the routing of media channels and streams from the current device to external speakers and destination devices.</section>			
MediaRouter.Callback	D								*[[android.media.MediaRouter.Callback]], <section class="prog__container"><pre><code>public static abstract class MediaRouter.Callback</code></pre>Interface for receiving events about media routing changes. All methods of this interface will be called from the application's main thread.</section>\n*[[v7.media.MediaRouter.Callback]], <section class="prog__container"><pre><code>public static abstract class MediaRouter.Callback</code></pre>Interface for receiving events about media routing changes. All methods of this interface will be called from the application's main thread.</section>			
MediaRouter.ControlRequestCallback	A										<section class="prog__container"><pre><code>public static abstract class MediaRouter.ControlRequestCallback</code></pre>Callback which is invoked with the result of a media control request.</section>	https://developer.android.com/reference/android/support/v7/media/MediaRouter.ControlRequestCallback.html
MediaRouter.ProviderInfo	A										<section class="prog__container"><pre><code>public static final class MediaRouter.ProviderInfo</code></pre>Provides information about a media route provider.</section>	https://developer.android.com/reference/android/support/v7/media/MediaRouter.ProviderInfo.html
MediaRouter.RouteCategory	A										<section class="prog__container"><pre><code>public static class MediaRouter.RouteCategory</code></pre>Definition of a category of routes. All routes belong to a category.</section>	https://developer.android.com/reference/android/media/MediaRouter.RouteCategory.html
MediaRouter.RouteGroup	A										<section class="prog__container"><pre><code>public static class MediaRouter.RouteGroup</code></pre>Information about a route that consists of multiple other routes in a group.</section>	https://developer.android.com/reference/android/media/MediaRouter.RouteGroup.html
MediaRouter.RouteInfo	D								*[[android.media.MediaRouter.RouteInfo]], <section class="prog__container"><pre><code>public static class MediaRouter.RouteInfo</code></pre>Information about a media route.</section>\n*[[v7.media.MediaRouter.RouteInfo]], <section class="prog__container"><pre><code>public static class MediaRouter.RouteInfo</code></pre>Provides information about a media route.</section>			
MediaRouter.SimpleCallback	A										<section class="prog__container"><pre><code>public static class MediaRouter.SimpleCallback</code></pre>Stub implementation of <code>MediaRouter.Callback</code>. Each abstract method is defined as a no-op. Override just the ones you need.</section>	https://developer.android.com/reference/android/media/MediaRouter.SimpleCallback.html
MediaRouter.UserRouteInfo	A										<section class="prog__container"><pre><code>public static class MediaRouter.UserRouteInfo</code></pre>Information about a route that the application may define and modify. A user route defaults to <code>PLAYBACK_TYPE_REMOTE</code> and <code>PLAYBACK_VOLUME_FIXED</code>.</section>	https://developer.android.com/reference/android/media/MediaRouter.UserRouteInfo.html
MediaRouter.VolumeCallback	A										<section class="prog__container"><pre><code>public static abstract class MediaRouter.VolumeCallback</code></pre>Interface for receiving events about volume changes. All methods of this interface will be called from the application's main thread.</section>	https://developer.android.com/reference/android/media/MediaRouter.VolumeCallback.html
MediaScannerConnection	A										<section class="prog__container"><pre><code>public class MediaScannerConnection</code></pre>MediaScannerConnection provides a way for applications to pass a newly created or downloaded media file to the media scanner service. The media scanner service will read metadata from the file and add the file to the media content provider. The MediaScannerConnectionClient provides an interface for the media scanner service to return the Uri for a newly scanned file to the client of the MediaScannerConnection class.</section>	https://developer.android.com/reference/android/media/MediaScannerConnection.html
MediaScannerConnection.MediaScannerConnectionClient	A										<section class="prog__container"><pre><code>public static interface MediaScannerConnection.MediaScannerConnectionClient</code></pre>An interface for notifying clients of MediaScannerConnection when a connection to the MediaScanner service has been established and when the scanning of a file has completed.</section>	https://developer.android.com/reference/android/media/MediaScannerConnection.MediaScannerConnectionClient.html
MediaScannerConnection.OnScanCompletedListener	A										<section class="prog__container"><pre><code>public static interface MediaScannerConnection.OnScanCompletedListener</code></pre>Interface for notifying clients of the result of scanning a requested media file.</section>	https://developer.android.com/reference/android/media/MediaScannerConnection.OnScanCompletedListener.html
MediaSession	A										<section class="prog__container"><pre><code>public final class MediaSession</code></pre>Allows interaction with media controllers, volume keys, media buttons, and transport controls.</section>	https://developer.android.com/reference/android/media/session/MediaSession.html
MediaSession.Callback	A										<section class="prog__container"><pre><code>public static abstract class MediaSession.Callback</code></pre>Receives media buttons, transport controls, and commands from controllers and the system. A callback may be set using <code>setCallback(MediaSession.Callback)</code>.</section>	https://developer.android.com/reference/android/media/session/MediaSession.Callback.html
MediaSession.QueueItem	A										<section class="prog__container"><pre><code>public static final class MediaSession.QueueItem</code></pre>A single item that is part of the play queue. It contains a description of the item and its id in the queue.</section>	https://developer.android.com/reference/android/media/session/MediaSession.QueueItem.html
MediaSession.Token	A										<section class="prog__container"><pre><code>public static final class MediaSession.Token</code></pre>Represents an ongoing session. This may be passed to apps by the session owner to allow them to create a <code>MediaController</code> to communicate with the session.</section>	https://developer.android.com/reference/android/media/session/MediaSession.Token.html
MediaSessionCompat	A										<section class="prog__container"><pre><code>public class MediaSessionCompat</code></pre>Allows interaction with media controllers, volume keys, media buttons, and transport controls.</section>	https://developer.android.com/reference/android/support/v4/media/session/MediaSessionCompat.html
MediaSessionCompat.Callback	A										<section class="prog__container"><pre><code>public static abstract class MediaSessionCompat.Callback</code></pre>Receives transport controls, media buttons, and commands from controllers and the system. The callback may be set using <code>setCallback(MediaSessionCompat.Callback)</code>.</section>	https://developer.android.com/reference/android/support/v4/media/session/MediaSessionCompat.Callback.html
MediaSessionCompat.OnActiveChangeListener	A										<section class="prog__container"><pre><code>public static interface MediaSessionCompat.OnActiveChangeListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/media/session/MediaSessionCompat.OnActiveChangeListener.html
MediaSessionCompat.QueueItem	A										<section class="prog__container"><pre><code>public static final class MediaSessionCompat.QueueItem</code></pre>A single item that is part of the play queue. It contains a description of the item and its id in the queue.</section>	https://developer.android.com/reference/android/support/v4/media/session/MediaSessionCompat.QueueItem.html
MediaSessionCompat.Token	A										<section class="prog__container"><pre><code>public static final class MediaSessionCompat.Token</code></pre>Represents an ongoing session. This may be passed to apps by the session owner to allow them to create a <code>MediaControllerCompat</code> to communicate with the session.</section>	https://developer.android.com/reference/android/support/v4/media/session/MediaSessionCompat.Token.html
MediaSessionManager	A										<section class="prog__container"><pre><code>public final class MediaSessionManager</code></pre>Provides support for interacting with <code>media sessions</code> that applications have published to express their ongoing media playback state.</section>	https://developer.android.com/reference/android/media/session/MediaSessionManager.html
MediaSessionManager.OnActiveSessionsChangedListener	A										<section class="prog__container"><pre><code>public static interface MediaSessionManager.OnActiveSessionsChangedListener</code></pre>Listens for changes to the list of active sessions. This can be added using <code>addOnActiveSessionsChangedListener(MediaSessionManager.OnActiveSessionsChangedListener, ComponentName)</code>.</section>	https://developer.android.com/reference/android/media/session/MediaSessionManager.OnActiveSessionsChangedListener.html
MediaSessionStatus	A										<section class="prog__container"><pre><code>public final class MediaSessionStatus</code></pre>Describes the playback status of a media session.</section>	https://developer.android.com/reference/android/support/v7/media/MediaSessionStatus.html
MediaSessionStatus.Builder	A										<section class="prog__container"><pre><code>public static final class MediaSessionStatus.Builder</code></pre>Builder for <code>media session status objects</code>.</section>	https://developer.android.com/reference/android/support/v7/media/MediaSessionStatus.Builder.html
MediaStore	A										<section class="prog__container"><pre><code>public final class MediaStore</code></pre>The Media provider contains meta data for all available media on both internal and external storage devices.</section>	https://developer.android.com/reference/android/provider/MediaStore.html
MediaStore.Audio	A										<section class="prog__container"><pre><code>public static final class MediaStore.Audio</code></pre>Container for all audio content.</section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.html
MediaStore.Audio.AlbumColumns	A										<section class="prog__container"><pre><code>public static interface MediaStore.Audio.AlbumColumns</code></pre>Columns representing an album</section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.AlbumColumns.html
MediaStore.Audio.Albums	A										<section class="prog__container"><pre><code>public static final class MediaStore.Audio.Albums</code></pre>Contains artists for audio files</section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.Albums.html
MediaStore.Audio.ArtistColumns	A										<section class="prog__container"><pre><code>public static interface MediaStore.Audio.ArtistColumns</code></pre>Columns representing an artist</section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.ArtistColumns.html
MediaStore.Audio.Artists	A										<section class="prog__container"><pre><code>public static final class MediaStore.Audio.Artists</code></pre>Contains artists for audio files</section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.Artists.html
MediaStore.Audio.Artists.Albums	A										<section class="prog__container"><pre><code>public static final class MediaStore.Audio.Artists.Albums</code></pre>Sub-directory of each artist containing all albums on which a song by the artist appears.</section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.Artists.Albums.html
MediaStore.Audio.AudioColumns	A										<section class="prog__container"><pre><code>public static interface MediaStore.Audio.AudioColumns</code></pre>Columns for audio file that show up in multiple tables.</section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.AudioColumns.html
MediaStore.Audio.Genres	A										<section class="prog__container"><pre><code>public static final class MediaStore.Audio.Genres</code></pre>Contains all genres for audio files</section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.Genres.html
MediaStore.Audio.Genres.Members	A										<section class="prog__container"><pre><code>public static final class MediaStore.Audio.Genres.Members</code></pre>Sub-directory of each genre containing all members.</section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.Genres.Members.html
MediaStore.Audio.GenresColumns	A										<section class="prog__container"><pre><code>public static interface MediaStore.Audio.GenresColumns</code></pre>Columns representing an audio genre</section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.GenresColumns.html
MediaStore.Audio.Media	A										<section class="prog__container"><pre><code>public static final class MediaStore.Audio.Media</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.Media.html
MediaStore.Audio.Playlists	A										<section class="prog__container"><pre><code>public static final class MediaStore.Audio.Playlists</code></pre>Contains playlists for audio files</section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.Playlists.html
MediaStore.Audio.Playlists.Members	A										<section class="prog__container"><pre><code>public static final class MediaStore.Audio.Playlists.Members</code></pre>Sub-directory of each playlist containing all members.</section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.Playlists.Members.html
MediaStore.Audio.PlaylistsColumns	A										<section class="prog__container"><pre><code>public static interface MediaStore.Audio.PlaylistsColumns</code></pre>Columns representing a playlist</section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.PlaylistsColumns.html
MediaStore.Audio.Radio	A										<section class="prog__container"><pre><code>public static final class MediaStore.Audio.Radio</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Audio.Radio.html
MediaStore.Files	A										<section class="prog__container"><pre><code>public static final class MediaStore.Files</code></pre>Media provider table containing an index of all files in the media storage, including non-media files. This should be used by applications that work with non-media file types (text, HTML, PDF, etc) as well as applications that need to work with multiple media file types in a single query.</section>	https://developer.android.com/reference/android/provider/MediaStore.Files.html
MediaStore.Files.FileColumns	A										<section class="prog__container"><pre><code>public static interface MediaStore.Files.FileColumns</code></pre>Fields for master table for all media files. Table also contains MediaColumns._ID, DATA, SIZE and DATE_MODIFIED.</section>	https://developer.android.com/reference/android/provider/MediaStore.Files.FileColumns.html
MediaStore.Images	A										<section class="prog__container"><pre><code>public static final class MediaStore.Images</code></pre>Contains meta data for all available images.</section>	https://developer.android.com/reference/android/provider/MediaStore.Images.html
MediaStore.Images.ImageColumns	A										<section class="prog__container"><pre><code>public static interface MediaStore.Images.ImageColumns</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Images.ImageColumns.html
MediaStore.Images.Media	A										<section class="prog__container"><pre><code>public static final class MediaStore.Images.Media</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Images.Media.html
MediaStore.Images.Thumbnails	A										<section class="prog__container"><pre><code>public static class MediaStore.Images.Thumbnails</code></pre>This class allows developers to query and get two kinds of thumbnails: MINI_KIND: 512 x 384 thumbnail MICRO_KIND: 96 x 96 thumbnail</section>	https://developer.android.com/reference/android/provider/MediaStore.Images.Thumbnails.html
MediaStore.MediaColumns	A										<section class="prog__container"><pre><code>public static interface MediaStore.MediaColumns</code></pre>Common fields for most MediaProvider tables</section>	https://developer.android.com/reference/android/provider/MediaStore.MediaColumns.html
MediaStore.Video	A										<section class="prog__container"><pre><code>public static final class MediaStore.Video</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Video.html
MediaStore.Video.Media	A										<section class="prog__container"><pre><code>public static final class MediaStore.Video.Media</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Video.Media.html
MediaStore.Video.Thumbnails	A										<section class="prog__container"><pre><code>public static class MediaStore.Video.Thumbnails</code></pre>This class allows developers to query and get two kinds of thumbnails: MINI_KIND: 512 x 384 thumbnail MICRO_KIND: 96 x 96 thumbnail</section>	https://developer.android.com/reference/android/provider/MediaStore.Video.Thumbnails.html
MediaStore.Video.VideoColumns	A										<section class="prog__container"><pre><code>public static interface MediaStore.Video.VideoColumns</code></pre></section>	https://developer.android.com/reference/android/provider/MediaStore.Video.VideoColumns.html
MediaSync	A										<section class="prog__container"><pre><code>public final class MediaSync</code></pre>MediaSync class can be used to synchronously playback audio and video streams. It can be used to play audio-only or video-only stream, too.</section>	https://developer.android.com/reference/android/media/MediaSync.html
MediaSync.Callback	A										<section class="prog__container"><pre><code>public static abstract class MediaSync.Callback</code></pre>MediaSync callback interface. Used to notify the user asynchronously of various MediaSync events.</section>	https://developer.android.com/reference/android/media/MediaSync.Callback.html
MediaSync.OnErrorListener	A										<section class="prog__container"><pre><code>public static interface MediaSync.OnErrorListener</code></pre>Interface definition of a callback to be invoked when there has been an error during an asynchronous operation (other errors will throw exceptions at method call time).</section>	https://developer.android.com/reference/android/media/MediaSync.OnErrorListener.html
MediaSyncEvent	A										<section class="prog__container"><pre><code>public class MediaSyncEvent</code></pre>The MediaSyncEvent class defines events that can be used to synchronize playback or capture actions between different players and recorders.</section>	https://developer.android.com/reference/android/media/MediaSyncEvent.html
MediaTimestamp	A										<section class="prog__container"><pre><code>public final class MediaTimestamp</code></pre>An immutable object that represents the linear correlation between the media time and the system time. It contains the media clock rate, together with the media timestamp of an anchor frame and the system time when that frame was presented or is committed to be presented.</section>	https://developer.android.com/reference/android/media/MediaTimestamp.html
MediumTest	A										<section class="prog__container"><pre><code>public abstract @interface MediumTest</code></pre><p class="caution"><strong> This @interface was deprecated in API level 24.</strong><br/> Use MediumTest instead. New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/suitebuilder/annotation/MediumTest.html
Member	A										<section class="prog__container"><pre><code>public interface Member</code></pre>Member is an interface that reflects identifying information about a single member (a field or a method) or a constructor.</section>	https://developer.android.com/reference/java/lang/reflect/Member.html
MemoryFile	A										<section class="prog__container"><pre><code>public class MemoryFile</code></pre>MemoryFile is a wrapper for the Linux ashmem driver. MemoryFiles are backed by shared memory, which can be optionally set to be purgeable. Purgeable files may have their contents reclaimed by the kernel in low memory conditions (only if allowPurging is set to true). After a file is purged, attempts to read or write the file will cause an IOException to be thrown.</section>	https://developer.android.com/reference/android/os/MemoryFile.html
MemoryHandler	A										<section class="prog__container"><pre><code>public class MemoryHandler</code></pre><tt>Handler</tt> that buffers requests in a circular buffer in memory.</section>	https://developer.android.com/reference/java/util/logging/MemoryHandler.html
Menu	A										<section class="prog__container"><pre><code>public interface Menu</code></pre>Interface for managing the items in a menu.</section>	https://developer.android.com/reference/android/view/Menu.html
MenuCompat	A										<section class="prog__container"><pre><code>public final class MenuCompat</code></pre>Helper for accessing features in <code>Menu</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/view/MenuCompat.html
MenuInflater	A										<section class="prog__container"><pre><code>public class MenuInflater</code></pre>This class is used to instantiate menu XML files into Menu objects.</section>	https://developer.android.com/reference/android/view/MenuInflater.html
MenuItem	A										<section class="prog__container"><pre><code>public interface MenuItem</code></pre>Interface for direct access to a previously created menu item.</section>	https://developer.android.com/reference/android/view/MenuItem.html
MenuItem.OnActionExpandListener	A										<section class="prog__container"><pre><code>public static interface MenuItem.OnActionExpandListener</code></pre>Interface definition for a callback to be invoked when a menu item marked with <code>SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW</code> is expanded or collapsed.</section>	https://developer.android.com/reference/android/view/MenuItem.OnActionExpandListener.html
MenuItem.OnMenuItemClickListener	A										<section class="prog__container"><pre><code>public static interface MenuItem.OnMenuItemClickListener</code></pre>Interface definition for a callback to be invoked when a menu item is clicked.</section>	https://developer.android.com/reference/android/view/MenuItem.OnMenuItemClickListener.html
MenuItemCompat	A										<section class="prog__container"><pre><code>public final class MenuItemCompat</code></pre>Helper for accessing features in <code>MenuItem</code> introduced after API level 4 in a backwards compatible fashion. <p class="note"><strong>Note:</strong> You cannot get an instance of this class. Instead, it provides <em>static</em> methods that correspond to the methods in <code>MenuItem</code>, but take a <code>MenuItem</code> object as an additional argument.</section>	https://developer.android.com/reference/android/support/v4/view/MenuItemCompat.html
MenuItemCompat.OnActionExpandListener	A										<section class="prog__container"><pre><code>public static interface MenuItemCompat.OnActionExpandListener</code></pre>Interface definition for a callback to be invoked when a menu item marked with <code>SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW</code> is expanded or collapsed.</section>	https://developer.android.com/reference/android/support/v4/view/MenuItemCompat.OnActionExpandListener.html
MenuRes	A										<section class="prog__container"><pre><code>public abstract @interface MenuRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be a menu resource reference.</section>	https://developer.android.com/reference/android/support/annotation/MenuRes.html
MergeCursor	A										<section class="prog__container"><pre><code>public class MergeCursor</code></pre>A convience class that lets you present an array of Cursors as a single linear Cursor. The schema of the cursors presented is entirely up to the creator of the MergeCursor, and may be different if that is desired. Calls to getColumns, getColumnIndex, etc will return the value for the row that the MergeCursor is currently pointing at.</section>	https://developer.android.com/reference/android/database/MergeCursor.html
Message	A										<section class="prog__container"><pre><code>public final class Message</code></pre>Defines a message containing a description and arbitrary data object that can be sent to a <code>Handler</code>. This object contains two extra int fields and an extra object field that allow you to not do allocations in many cases. <p class="note">While the constructor of Message is public, the best way to get one of these is to call <code>Message.obtain()</code> or one of the <code>Handler.obtainMessage()</code> methods, which will pull them from a pool of recycled objects.</section>	https://developer.android.com/reference/android/os/Message.html
MessageDigest	A										<section class="prog__container"><pre><code>public abstract class MessageDigest</code></pre>This MessageDigest class provides applications the functionality of a message digest algorithm, such as SHA-1 or SHA-256. Message digests are secure one-way hash functions that take arbitrary-sized data and output a fixed-length hash value.</section>	https://developer.android.com/reference/java/security/MessageDigest.html
MessageDigestSpi	A										<section class="prog__container"><pre><code>public abstract class MessageDigestSpi</code></pre>This class defines the <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>MessageDigest</code> class, which provides the functionality of a message digest algorithm, such as MD5 or SHA. Message digests are secure one-way hash functions that take arbitrary-sized data and output a fixed-length hash value.</section>	https://developer.android.com/reference/java/security/MessageDigestSpi.html
MessageFormat	D								*[[icu.text.MessageFormat]], <section class="prog__container"><pre><code>public class MessageFormat</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>MessageFormat</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.</section>\n*[[java.text.MessageFormat]], <section class="prog__container"><pre><code>public class MessageFormat</code></pre><code>MessageFormat</code> provides a means to produce concatenated messages in a language-neutral way. Use this to construct messages displayed for end users.</section>			
MessageFormat.Field	D								*[[icu.text.MessageFormat.Field]], <section class="prog__container"><pre><code>public static class MessageFormat.Field</code></pre>Defines constants that are used as attribute keys in the <code>AttributedCharacterIterator</code> returned from <code>MessageFormat.formatToCharacterIterator</code>.</section>\n*[[java.text.MessageFormat.Field]], <section class="prog__container"><pre><code>public static class MessageFormat.Field</code></pre>Defines constants that are used as attribute keys in the <code>AttributedCharacterIterator</code> returned from <code>MessageFormat.formatToCharacterIterator</code>.</section>			
MessagePattern	A										<section class="prog__container"><pre><code>public final class MessagePattern</code></pre>Parses and represents ICU MessageFormat patterns. Also handles patterns for ChoiceFormat, PluralFormat and SelectFormat. Used in the implementations of those classes as well as in tools for message validation, translation and format conversion.</section>	https://developer.android.com/reference/android/icu/text/MessagePattern.html
MessagePattern.ApostropheMode	A										<section class="prog__container"><pre><code>public static final enum MessagePattern.ApostropheMode</code></pre>Mode for when an apostrophe starts quoted literal text for MessageFormat output. The default is DOUBLE_OPTIONAL unless overridden via ICUConfig (/com/ibm/icu/ICUConfig.properties).</section>	https://developer.android.com/reference/android/icu/text/MessagePattern.ApostropheMode.html
MessagePattern.ArgType	A										<section class="prog__container"><pre><code>public static final enum MessagePattern.ArgType</code></pre>Argument type constants. Returned by Part.getArgType() for ARG_START and ARG_LIMIT parts. Messages nested inside an argument are each delimited by MSG_START and MSG_LIMIT, with a nesting level one greater than the surrounding message.</section>	https://developer.android.com/reference/android/icu/text/MessagePattern.ArgType.html
MessagePattern.Part	A										<section class="prog__container"><pre><code>public static final class MessagePattern.Part</code></pre>A message pattern "part", representing a pattern parsing event. There is a part for the start and end of a message or argument, for quoting and escaping of and with ASCII apostrophes, and for syntax elements of "complex" arguments.</section>	https://developer.android.com/reference/android/icu/text/MessagePattern.Part.html
MessagePattern.Part.Type	A										<section class="prog__container"><pre><code>public static final enum MessagePattern.Part.Type</code></pre>Part type constants.</section>	https://developer.android.com/reference/android/icu/text/MessagePattern.Part.Type.html
MessagePdu	A										<section class="prog__container"><pre><code>public final class MessagePdu</code></pre>A parcelable list of PDUs representing contents of a possibly multi-part SMS.</section>	https://developer.android.com/reference/android/service/carrier/MessagePdu.html
MessageQueue	A										<section class="prog__container"><pre><code>public final class MessageQueue</code></pre>Low-level class holding the list of messages to be dispatched by a <code>Looper</code>. Messages are not added directly to a MessageQueue, but rather through <code>Handler</code> objects associated with the Looper.</section>	https://developer.android.com/reference/android/os/MessageQueue.html
MessageQueue.IdleHandler	A										<section class="prog__container"><pre><code>public static interface MessageQueue.IdleHandler</code></pre>Callback interface for discovering when a thread is going to block waiting for more messages.</section>	https://developer.android.com/reference/android/os/MessageQueue.IdleHandler.html
MessageQueue.OnFileDescriptorEventListener	A										<section class="prog__container"><pre><code>public static interface MessageQueue.OnFileDescriptorEventListener</code></pre>A listener which is invoked when file descriptor related events occur.</section>	https://developer.android.com/reference/android/os/MessageQueue.OnFileDescriptorEventListener.html
Messenger	A										<section class="prog__container"><pre><code>public final class Messenger</code></pre>Reference to a Handler, which others can use to send messages to it. This allows for the implementation of message-based communication across processes, by creating a Messenger pointing to a Handler in one process, and handing that Messenger to another process.</section>	https://developer.android.com/reference/android/os/Messenger.html
MetaKeyKeyListener	A										<section class="prog__container"><pre><code>public abstract class MetaKeyKeyListener</code></pre>This base class encapsulates the behavior for tracking the state of meta keys such as SHIFT, ALT and SYM as well as the pseudo-meta state of selecting text.</section>	https://developer.android.com/reference/android/text/method/MetaKeyKeyListener.html
MeteringRectangle	A										<section class="prog__container"><pre><code>public final class MeteringRectangle</code></pre>An immutable class to represent a rectangle <code>(x, y, width, height)</code> with an additional weight component.</section>	https://developer.android.com/reference/android/hardware/camera2/params/MeteringRectangle.html
Method	A										<section class="prog__container"><pre><code>public final class Method</code></pre>A <code>Method</code> provides information about, and access to, a single method on a class or interface. The reflected method may be a class method or an instance method (including an abstract method).</section>	https://developer.android.com/reference/java/lang/reflect/Method.html
MetricAffectingSpan	A										<section class="prog__container"><pre><code>public abstract class MetricAffectingSpan</code></pre>The classes that affect character-level text formatting in a way that changes the width or height of characters extend this class.</section>	https://developer.android.com/reference/android/text/style/MetricAffectingSpan.html
MidiDevice	A										<section class="prog__container"><pre><code>public final class MidiDevice</code></pre>This class is used for sending and receiving data to and from a MIDI device Instances of this class are created by <code>openDevice(MidiDeviceInfo, MidiManager.OnDeviceOpenedListener, Handler)</code>.</section>	https://developer.android.com/reference/android/media/midi/MidiDevice.html
MidiDevice.MidiConnection	A										<section class="prog__container"><pre><code>public class MidiDevice.MidiConnection</code></pre>This class represents a connection between the output port of one device and the input port of another. Created by <code>connectPorts(MidiInputPort, int)</code>. Close this object to terminate the connection.</section>	https://developer.android.com/reference/android/media/midi/MidiDevice.MidiConnection.html
MidiDeviceInfo	A										<section class="prog__container"><pre><code>public final class MidiDeviceInfo</code></pre>This class contains information to describe a MIDI device. For now we only have information that can be retrieved easily for USB devices, but we will probably expand this in the future. This class is just an immutable object to encapsulate the MIDI device description. Use the MidiDevice class to actually communicate with devices.</section>	https://developer.android.com/reference/android/media/midi/MidiDeviceInfo.html
MidiDeviceInfo.PortInfo	A										<section class="prog__container"><pre><code>public static final class MidiDeviceInfo.PortInfo</code></pre>Contains information about an input or output port.</section>	https://developer.android.com/reference/android/media/midi/MidiDeviceInfo.PortInfo.html
MidiDeviceService	A										<section class="prog__container"><pre><code>public abstract class MidiDeviceService</code></pre>A service that implements a virtual MIDI device. Subclasses must implement the <code>onGetInputPortReceivers()</code> method to provide a list of <code>MidiReceiver</code>s to receive data sent to the device's input ports. Similarly, subclasses can call <code>getOutputPortReceivers()</code> to fetch a list of <code>MidiReceiver</code>s for sending data out the output ports.</section>	https://developer.android.com/reference/android/media/midi/MidiDeviceService.html
MidiDeviceStatus	A										<section class="prog__container"><pre><code>public final class MidiDeviceStatus</code></pre>This is an immutable class that describes the current status of a MIDI device's ports.</section>	https://developer.android.com/reference/android/media/midi/MidiDeviceStatus.html
MidiInputPort	A										<section class="prog__container"><pre><code>public final class MidiInputPort</code></pre>This class is used for sending data to a port on a MIDI device</section>	https://developer.android.com/reference/android/media/midi/MidiInputPort.html
MidiManager	A										<section class="prog__container"><pre><code>public final class MidiManager</code></pre>This class is the public application interface to the MIDI service.</section>	https://developer.android.com/reference/android/media/midi/MidiManager.html
MidiManager.DeviceCallback	A										<section class="prog__container"><pre><code>public static class MidiManager.DeviceCallback</code></pre>Callback class used for clients to receive MIDI device added and removed notifications</section>	https://developer.android.com/reference/android/media/midi/MidiManager.DeviceCallback.html
MidiManager.OnDeviceOpenedListener	A										<section class="prog__container"><pre><code>public static interface MidiManager.OnDeviceOpenedListener</code></pre>Listener class used for receiving the results of <code>openDevice(MidiDeviceInfo, MidiManager.OnDeviceOpenedListener, Handler)</code> and <code>openBluetoothDevice(BluetoothDevice, MidiManager.OnDeviceOpenedListener, Handler)</code></section>	https://developer.android.com/reference/android/media/midi/MidiManager.OnDeviceOpenedListener.html
MidiOutputPort	A										<section class="prog__container"><pre><code>public final class MidiOutputPort</code></pre>This class is used for receiving data from a port on a MIDI device</section>	https://developer.android.com/reference/android/media/midi/MidiOutputPort.html
MidiReceiver	A										<section class="prog__container"><pre><code>public abstract class MidiReceiver</code></pre>Interface for sending and receiving data to and from a MIDI device.</section>	https://developer.android.com/reference/android/media/midi/MidiReceiver.html
MidiSender	A										<section class="prog__container"><pre><code>public abstract class MidiSender</code></pre>Interface provided by a device to allow attaching MidiReceivers to a MIDI device.</section>	https://developer.android.com/reference/android/media/midi/MidiSender.html
MifareClassic	A										<section class="prog__container"><pre><code>public final class MifareClassic</code></pre>Provides access to MIFARE Classic properties and I/O operations on a <code>Tag</code>.</section>	https://developer.android.com/reference/android/nfc/tech/MifareClassic.html
MifareUltralight	A										<section class="prog__container"><pre><code>public final class MifareUltralight</code></pre>Provides access to MIFARE Ultralight properties and I/O operations on a <code>Tag</code>.</section>	https://developer.android.com/reference/android/nfc/tech/MifareUltralight.html
MimeTypeMap	A										<section class="prog__container"><pre><code>public class MimeTypeMap</code></pre>Two-way map that maps MIME-types to file extensions and vice versa.</section>	https://developer.android.com/reference/android/webkit/MimeTypeMap.html
MissingFormatArgumentException	A										<section class="prog__container"><pre><code>public class MissingFormatArgumentException</code></pre>Unchecked exception thrown when there is a format specifier which does not have a corresponding argument or if an argument index refers to an argument that does not exist.</section>	https://developer.android.com/reference/java/util/MissingFormatArgumentException.html
MissingFormatWidthException	A										<section class="prog__container"><pre><code>public class MissingFormatWidthException</code></pre>Unchecked exception thrown when the format width is required.</section>	https://developer.android.com/reference/java/util/MissingFormatWidthException.html
MissingResourceException	A										<section class="prog__container"><pre><code>public class MissingResourceException</code></pre>Signals that a resource is missing.</section>	https://developer.android.com/reference/java/util/MissingResourceException.html
MockApplication	A										<section class="prog__container"><pre><code>public class MockApplication</code></pre><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use a mocking framework like Mockito. New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/mock/MockApplication.html
MockContentProvider	A										<section class="prog__container"><pre><code>public class MockContentProvider</code></pre>Mock implementation of ContentProvider. All methods are non-functional and throw <code>UnsupportedOperationException</code>. Tests can extend this class to implement behavior needed for tests.</section>	https://developer.android.com/reference/android/test/mock/MockContentProvider.html
MockContentResolver	A										<section class="prog__container"><pre><code>public class MockContentResolver</code></pre></section>	https://developer.android.com/reference/android/test/mock/MockContentResolver.html
MockContext	A										<section class="prog__container"><pre><code>public class MockContext</code></pre>A mock <code>Context</code> class. All methods are non-functional and throw <code>UnsupportedOperationException</code>. You can use this to inject other dependencies, mocks, or monitors into the classes you are testing.</section>	https://developer.android.com/reference/android/test/mock/MockContext.html
MockCursor	A										<section class="prog__container"><pre><code>public class MockCursor</code></pre><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use a mocking framework like Mockito. New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/mock/MockCursor.html
MockDialogInterface	A										<section class="prog__container"><pre><code>public class MockDialogInterface</code></pre><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use a mocking framework like Mockito. New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/mock/MockDialogInterface.html
MockPackageManager	A										<section class="prog__container"><pre><code>public class MockPackageManager</code></pre><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use a mocking framework like Mockito. New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/mock/MockPackageManager.html
MockResources	A										<section class="prog__container"><pre><code>public class MockResources</code></pre><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use a mocking framework like Mockito. New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/mock/MockResources.html
Modifier	A										<section class="prog__container"><pre><code>public class Modifier</code></pre>The Modifier class provides <code>static</code> methods and constants to decode class and member access modifiers. The sets of modifiers are represented as integers with distinct bit positions representing different modifiers. The values for the constants representing the modifiers are taken from the tables in sections 4.1, 4.4, 4.5, and 4.7 of <cite>The Java&trade; Virtual Machine Specification</cite>.</section>	https://developer.android.com/reference/java/lang/reflect/Modifier.html
MonthDisplayHelper	A										<section class="prog__container"><pre><code>public class MonthDisplayHelper</code></pre>Helps answer common questions that come up when displaying a month in a 6 row calendar grid format. Not thread safe.</section>	https://developer.android.com/reference/android/util/MonthDisplayHelper.html
MoreAsserts	A										<section class="prog__container"><pre><code>public final class MoreAsserts</code></pre><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use Hamcrest matchers instead.</section>	https://developer.android.com/reference/android/test/MoreAsserts.html
MotionEvent	A										<section class="prog__container"><pre><code>public final class MotionEvent</code></pre>Object used to report movement (mouse, pen, finger, trackball) events. Motion events may hold either absolute or relative movements and other data, depending on the type of device. <h3>Overview</h3></section>	https://developer.android.com/reference/android/view/MotionEvent.html
MotionEvent.PointerCoords	A										<section class="prog__container"><pre><code>public static final class MotionEvent.PointerCoords</code></pre>Transfer object for pointer coordinates. Objects of this type can be used to specify the pointer coordinates when creating new <code>MotionEvent</code> objects and to query pointer coordinates in bulk. Refer to <code>InputDevice</code> for information about how different kinds of input devices and sources represent pointer coordinates.</section>	https://developer.android.com/reference/android/view/MotionEvent.PointerCoords.html
MotionEvent.PointerProperties	A										<section class="prog__container"><pre><code>public static final class MotionEvent.PointerProperties</code></pre>Transfer object for pointer properties. Objects of this type can be used to specify the pointer id and tool type when creating new <code>MotionEvent</code> objects and to query pointer properties in bulk.</section>	https://developer.android.com/reference/android/view/MotionEvent.PointerProperties.html
MotionEventCompat	A										<section class="prog__container"><pre><code>public final class MotionEventCompat</code></pre>Helper for accessing features in <code>MotionEvent</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/view/MotionEventCompat.html
MovementMethod	A										<section class="prog__container"><pre><code>public interface MovementMethod</code></pre>Provides cursor positioning, scrolling and text selection functionality in a <code>TextView</code>.</section>	https://developer.android.com/reference/android/text/method/MovementMethod.html
Movie	A										<section class="prog__container"><pre><code>public class Movie</code></pre></section>	https://developer.android.com/reference/android/graphics/Movie.html
MtpConstants	A										<section class="prog__container"><pre><code>public final class MtpConstants</code></pre>A class containing constants in the MTP and PTP specifications.</section>	https://developer.android.com/reference/android/mtp/MtpConstants.html
MtpDevice	A										<section class="prog__container"><pre><code>public final class MtpDevice</code></pre>This class represents an MTP or PTP device connected on the USB host bus. An application can instantiate an object of this type, by referencing an attached <code>UsbDevice</code> and then use methods in this class to get information about the device and objects stored on it, as well as open the connection and transfer data.</section>	https://developer.android.com/reference/android/mtp/MtpDevice.html
MtpDeviceInfo	A										<section class="prog__container"><pre><code>public class MtpDeviceInfo</code></pre>This class encapsulates information about an MTP device. This corresponds to the DeviceInfo Dataset described in section 5.1.1 of the MTP specification.</section>	https://developer.android.com/reference/android/mtp/MtpDeviceInfo.html
MtpEvent	A										<section class="prog__container"><pre><code>public class MtpEvent</code></pre>This class encapsulates information about a MTP event. This corresponds to the events described in appendix G of the MTP specification.</section>	https://developer.android.com/reference/android/mtp/MtpEvent.html
MtpObjectInfo	A										<section class="prog__container"><pre><code>public final class MtpObjectInfo</code></pre>This class encapsulates information about an object on an MTP device. This corresponds to the ObjectInfo Dataset described in section 5.3.1 of the MTP specification.</section>	https://developer.android.com/reference/android/mtp/MtpObjectInfo.html
MtpObjectInfo.Builder	A										<section class="prog__container"><pre><code>public static class MtpObjectInfo.Builder</code></pre>Builds a new object info instance.</section>	https://developer.android.com/reference/android/mtp/MtpObjectInfo.Builder.html
MtpStorageInfo	A										<section class="prog__container"><pre><code>public final class MtpStorageInfo</code></pre>This class encapsulates information about a storage unit on an MTP device. This corresponds to the StorageInfo Dataset described in section 5.2.2 of the MTP specification.</section>	https://developer.android.com/reference/android/mtp/MtpStorageInfo.html
MultiActionsProvider	A										<section class="prog__container"><pre><code>public interface MultiActionsProvider</code></pre>An interface implemented by the user if they wish to provide actions for a media item row to be displayed by an <code>AbstractMediaItemPresenter</code>. A media row consists of media item details together with a number of custom actions, following the media item details. Classes implementing <code>MultiActionsProvider</code> can define their own media data model within their derived classes.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/MultiActionsProvider.html
MultiActionsProvider.MultiAction	A										<section class="prog__container"><pre><code>public static class MultiActionsProvider.MultiAction</code></pre>MultiAction represents an action that can have multiple states. <code>getIndex()</code> returns the current index within the drawables. Both list of drawables and index can be updated dynamically in the program, and the UI could be updated by notifying the listeners provided in <code>AbstractMediaItemPresenter.ViewHolder</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/MultiActionsProvider.MultiAction.html
MultiAutoCompleteTextView	A										<section class="prog__container"><pre><code>public class MultiAutoCompleteTextView</code></pre>An editable text view, extending <code>AutoCompleteTextView</code>, that can show completion suggestions for the substring of the text where the user is typing instead of necessarily for the entire thing.</section>	https://developer.android.com/reference/android/widget/MultiAutoCompleteTextView.html
MultiAutoCompleteTextView.CommaTokenizer	A										<section class="prog__container"><pre><code>public static class MultiAutoCompleteTextView.CommaTokenizer</code></pre>This simple Tokenizer can be used for lists where the items are separated by a comma and one or more spaces.</section>	https://developer.android.com/reference/android/widget/MultiAutoCompleteTextView.CommaTokenizer.html
MultiAutoCompleteTextView.Tokenizer	A										<section class="prog__container"><pre><code>public static interface MultiAutoCompleteTextView.Tokenizer</code></pre></section>	https://developer.android.com/reference/android/widget/MultiAutoCompleteTextView.Tokenizer.html
MultiDex	A										<section class="prog__container"><pre><code>public final class MultiDex</code></pre>MultiDex patches <code>the application context class loader</code> in order to load classes from more than one dex file. The primary <code>classes.dex</code> must contain the classes necessary for calling this class methods. Secondary dex files named classes2.dex, classes3.dex... found in the application apk will be added to the classloader after first call to <code>install(Context)</code>.</section>	https://developer.android.com/reference/android/support/multidex/MultiDex.html
MultiDexApplication	A										<section class="prog__container"><pre><code>public class MultiDexApplication</code></pre>Minimal MultiDex capable application. To use the legacy multidex library there is 3 possibility: <ul> <li>Declare this class as the application in your AndroidManifest.xml.</li> <li>Have your <code>Application</code> extends this class.</li> <li>Have your <code>Application</code> override attachBaseContext starting with<br> <code> protected void attachBaseContext(Context base) {<br> super.attachBaseContext(base);<br> MultiDex.install(this); </br></br></code></br></li> <ul> </ul></ul></section>	https://developer.android.com/reference/android/support/multidex/MultiDexApplication.html
MultiDexTestRunner	A										<section class="prog__container"><pre><code>public class MultiDexTestRunner</code></pre><code>InstrumentationTestRunner</code> for testing application needing multidex support.</section>	https://developer.android.com/reference/com/android/test/runner/MultiDexTestRunner.html
MultiSelectListPreference	D								*[[android.preference.MultiSelectListPreference]], <section class="prog__container"><pre><code>public class MultiSelectListPreference</code></pre>A <code>Preference</code> that displays a list of entries as a dialog.</section>\n*[[v14.preference.MultiSelectListPreference]], <section class="prog__container"><pre><code>public class MultiSelectListPreference</code></pre>A <code>Preference</code> that displays a list of entries as a dialog.</section>			
MultiSelectListPreferenceDialogFragment	A										<section class="prog__container"><pre><code>public class MultiSelectListPreferenceDialogFragment</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/MultiSelectListPreferenceDialogFragment.html
MultiSelectListPreferenceDialogFragmentCompat	A										<section class="prog__container"><pre><code>public class MultiSelectListPreferenceDialogFragmentCompat</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/MultiSelectListPreferenceDialogFragmentCompat.html
MultiTapKeyListener	A										<section class="prog__container"><pre><code>public class MultiTapKeyListener</code></pre>This is the standard key listener for alphabetic input on 12-key keyboards. You should generally not need to instantiate this yourself; TextKeyListener will do it for you.</section>	https://developer.android.com/reference/android/text/method/MultiTapKeyListener.html
MulticastSocket	A										<section class="prog__container"><pre><code>public class MulticastSocket</code></pre>The multicast datagram socket class is useful for sending and receiving IP multicast packets. A MulticastSocket is a (UDP) DatagramSocket, with additional capabilities for joining "groups" of other multicast hosts on the internet.</section>	https://developer.android.com/reference/java/net/MulticastSocket.html
MutableBoolean	A										<section class="prog__container"><pre><code>public final class MutableBoolean</code></pre></section>	https://developer.android.com/reference/android/util/MutableBoolean.html
MutableByte	A										<section class="prog__container"><pre><code>public final class MutableByte</code></pre></section>	https://developer.android.com/reference/android/util/MutableByte.html
MutableChar	A										<section class="prog__container"><pre><code>public final class MutableChar</code></pre></section>	https://developer.android.com/reference/android/util/MutableChar.html
MutableContextWrapper	A										<section class="prog__container"><pre><code>public class MutableContextWrapper</code></pre>Special version of <code>ContextWrapper</code> that allows the base context to be modified after it is initially set.</section>	https://developer.android.com/reference/android/content/MutableContextWrapper.html
MutableDouble	A										<section class="prog__container"><pre><code>public final class MutableDouble</code></pre></section>	https://developer.android.com/reference/android/util/MutableDouble.html
MutableFloat	A										<section class="prog__container"><pre><code>public final class MutableFloat</code></pre></section>	https://developer.android.com/reference/android/util/MutableFloat.html
MutableInt	A										<section class="prog__container"><pre><code>public final class MutableInt</code></pre></section>	https://developer.android.com/reference/android/util/MutableInt.html
MutableLong	A										<section class="prog__container"><pre><code>public final class MutableLong</code></pre></section>	https://developer.android.com/reference/android/util/MutableLong.html
MutableShort	A										<section class="prog__container"><pre><code>public final class MutableShort</code></pre></section>	https://developer.android.com/reference/android/util/MutableShort.html
NClob	A										<section class="prog__container"><pre><code>public interface NClob</code></pre>The mapping in the Java<sup><font size="-2">TM</font></sup> programming language for the SQL <code>NCLOB</code> type. An SQL <code>NCLOB</code> is a built-in type that stores a Character Large Object using the National Character Set as a column value in a row of a database table.</section>	https://developer.android.com/reference/java/sql/NClob.html
NameList	A										<section class="prog__container"><pre><code>public interface NameList</code></pre>The <code>NameList</code> interface provides the abstraction of an ordered collection of parallel pairs of name and namespace values (which could be null values), without defining or constraining how this collection is implemented. The items in the <code>NameList</code> are accessible via an integral index, starting from 0.</section>	https://developer.android.com/reference/org/w3c/dom/NameList.html
NamedNodeMap	A										<section class="prog__container"><pre><code>public interface NamedNodeMap</code></pre>Objects implementing the <code>NamedNodeMap</code> interface are used to represent collections of nodes that can be accessed by name. Note that <code>NamedNodeMap</code> does not inherit from <code>NodeList</code>; <code>NamedNodeMaps</code> are not maintained in any particular order. Objects contained in an object implementing <code>NamedNodeMap</code> may also be accessed by an ordinal index, but this is simply to allow convenient enumeration of the contents of a <code>NamedNodeMap</code>, and does not imply that the DOM specifies an order to these Nodes.</section>	https://developer.android.com/reference/org/w3c/dom/NamedNodeMap.html
NamespaceContext	A										<section class="prog__container"><pre><code>public interface NamespaceContext</code></pre></section>	https://developer.android.com/reference/javax/xml/namespace/NamespaceContext.html
NamespaceSupport	A										<section class="prog__container"><pre><code>public class NamespaceSupport</code></pre>Encapsulate Namespace logic for use by applications using SAX, or internally by SAX drivers. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/helpers/NamespaceSupport.html
NativeActivity	A										<section class="prog__container"><pre><code>public class NativeActivity</code></pre>Convenience for implementing an activity that will be implemented purely in native code. That is, a game (or game-like thing). There is no need to derive from this class; you can simply declare it in your manifest, and use the NDK APIs from there.</section>	https://developer.android.com/reference/android/app/NativeActivity.html
NavUtils	A										<section class="prog__container"><pre><code>public final class NavUtils</code></pre>NavUtils provides helper functionality for applications implementing recommended Android UI navigation patterns. For information about recommended navigation patterns see Tasks and Back Stack from the developer guide and Navigation from the design guide.</section>	https://developer.android.com/reference/android/support/v4/app/NavUtils.html
NavigableMap	A										<section class="prog__container"><pre><code>public interface NavigableMap</code></pre>A <code>SortedMap</code> extended with navigation methods returning the closest matches for given search targets. Methods <code>lowerEntry(K)</code>, <code>floorEntry(K)</code>, <code>ceilingEntry(K)</code>, and <code>higherEntry(K)</code> return <code>Map.Entry</code> objects associated with keys respectively less than, less than or equal, greater than or equal, and greater than a given key, returning <code>null</code> if there is no such key. Similarly, methods <code>lowerKey(K)</code>, <code>floorKey(K)</code>, <code>ceilingKey(K)</code>, and <code>higherKey(K)</code> return only the associated keys. All of these methods are designed for locating, not traversing entries.</section>	https://developer.android.com/reference/java/util/NavigableMap.html
NavigableSet	A										<section class="prog__container"><pre><code>public interface NavigableSet</code></pre>A <code>SortedSet</code> extended with navigation methods reporting closest matches for given search targets. Methods <code>lower(E)</code>, <code>floor(E)</code>, <code>ceiling(E)</code>, and <code>higher(E)</code> return elements respectively less than, less than or equal, greater than or equal, and greater than a given element, returning <code>null</code> if there is no such element.</section>	https://developer.android.com/reference/java/util/NavigableSet.html
NavigationView	A										<section class="prog__container"><pre><code>public class NavigationView</code></pre>Represents a standard navigation menu for application. The menu contents can be populated by a menu resource file.</section>	https://developer.android.com/reference/android/support/design/widget/NavigationView.html
NavigationView.OnNavigationItemSelectedListener	A										<section class="prog__container"><pre><code>public static interface NavigationView.OnNavigationItemSelectedListener</code></pre>Listener for handling events on navigation items.</section>	https://developer.android.com/reference/android/support/design/widget/NavigationView.OnNavigationItemSelectedListener.html
NavigationView.SavedState	A										<section class="prog__container"><pre><code>public static class NavigationView.SavedState</code></pre>User interface state that is stored by NavigationView for implementing onSaveInstanceState().</section>	https://developer.android.com/reference/android/support/design/widget/NavigationView.SavedState.html
Ndef	A										<section class="prog__container"><pre><code>public final class Ndef</code></pre>Provides access to NDEF content and operations on a <code>Tag</code>.</section>	https://developer.android.com/reference/android/nfc/tech/Ndef.html
NdefFormatable	A										<section class="prog__container"><pre><code>public final class NdefFormatable</code></pre>Provide access to NDEF format operations on a <code>Tag</code>.</section>	https://developer.android.com/reference/android/nfc/tech/NdefFormatable.html
NdefMessage	A										<section class="prog__container"><pre><code>public final class NdefMessage</code></pre>Represents an immutable NDEF Message.</section>	https://developer.android.com/reference/android/nfc/NdefMessage.html
NdefRecord	A										<section class="prog__container"><pre><code>public final class NdefRecord</code></pre>Represents an immutable NDEF Record.</section>	https://developer.android.com/reference/android/nfc/NdefRecord.html
NegativeArraySizeException	A										<section class="prog__container"><pre><code>public class NegativeArraySizeException</code></pre>Thrown if an application tries to create an array with negative size.</section>	https://developer.android.com/reference/java/lang/NegativeArraySizeException.html
NeighboringCellInfo	A										<section class="prog__container"><pre><code>public class NeighboringCellInfo</code></pre>Represents the neighboring cell information, including Received Signal Strength and Cell ID location.</section>	https://developer.android.com/reference/android/telephony/NeighboringCellInfo.html
NestedScrollView	A										<section class="prog__container"><pre><code>public class NestedScrollView</code></pre>NestedScrollView is just like <code>ScrollView</code>, but it supports acting as both a nested scrolling parent and child on both new and old versions of Android. Nested scrolling is enabled by default.</section>	https://developer.android.com/reference/android/support/v4/widget/NestedScrollView.html
NestedScrollView.OnScrollChangeListener	A										<section class="prog__container"><pre><code>public static interface NestedScrollView.OnScrollChangeListener</code></pre>Interface definition for a callback to be invoked when the scroll X or Y positions of a view change.</section>	https://developer.android.com/reference/android/support/v4/widget/NestedScrollView.OnScrollChangeListener.html
NestedScrollingChild	A										<section class="prog__container"><pre><code>public interface NestedScrollingChild</code></pre>This interface should be implemented by <code>View</code> subclasses that wish to support dispatching nested scrolling operations to a cooperating parent <code>ViewGroup</code>.</section>	https://developer.android.com/reference/android/support/v4/view/NestedScrollingChild.html
NestedScrollingChildHelper	A										<section class="prog__container"><pre><code>public class NestedScrollingChildHelper</code></pre>Helper class for implementing nested scrolling child views compatible with Android platform versions earlier than Android 5.0 Lollipop (API 21).</section>	https://developer.android.com/reference/android/support/v4/view/NestedScrollingChildHelper.html
NestedScrollingParent	A										<section class="prog__container"><pre><code>public interface NestedScrollingParent</code></pre>This interface should be implemented by <code>ViewGroup</code> subclasses that wish to support scrolling operations delegated by a nested child view.</section>	https://developer.android.com/reference/android/support/v4/view/NestedScrollingParent.html
NestedScrollingParentHelper	A										<section class="prog__container"><pre><code>public class NestedScrollingParentHelper</code></pre>Helper class for implementing nested scrolling parent views compatible with Android platform versions earlier than Android 5.0 Lollipop (API 21).</section>	https://developer.android.com/reference/android/support/v4/view/NestedScrollingParentHelper.html
NetPermission	A										<section class="prog__container"><pre><code>public final class NetPermission</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/net/NetPermission.html
Network	A										<section class="prog__container"><pre><code>public class Network</code></pre>Identifies a <code>Network</code>. This is supplied to applications via <code>ConnectivityManager.NetworkCallback</code> in response to the active <code>requestNetwork(NetworkRequest, PendingIntent)</code> or passive <code>registerNetworkCallback(NetworkRequest, PendingIntent)</code> calls. It is used to direct traffic to the given <code>Network</code>, either on a <code>Socket</code> basis through a targeted <code>SocketFactory</code> or process-wide via <code>bindProcessToNetwork(Network)</code>.</section>	https://developer.android.com/reference/android/net/Network.html
NetworkCapabilities	A										<section class="prog__container"><pre><code>public final class NetworkCapabilities</code></pre>This class represents the capabilities of a network. This is used both to specify needs to <code>ConnectivityManager</code> and when inspecting a network. Note that this replaces the old <code>TYPE_MOBILE</code> method of network selection. Rather than indicate a need for Wi-Fi because an application needs high bandwidth and risk obsolescence when a new, fast network appears (like LTE), the application should specify it needs high bandwidth. Similarly if an application needs an unmetered network for a bulk transfer it can specify that rather than assuming all cellular based connections are metered and all Wi-Fi based connections are not.</section>	https://developer.android.com/reference/android/net/NetworkCapabilities.html
NetworkChannel	A										<section class="prog__container"><pre><code>public interface NetworkChannel</code></pre>A channel to a network socket.</section>	https://developer.android.com/reference/java/nio/channels/NetworkChannel.html
NetworkErrorException	A										<section class="prog__container"><pre><code>public class NetworkErrorException</code></pre></section>	https://developer.android.com/reference/android/accounts/NetworkErrorException.html
NetworkInfo	A										<section class="prog__container"><pre><code>public class NetworkInfo</code></pre>Describes the status of a network interface.</section>	https://developer.android.com/reference/android/net/NetworkInfo.html
NetworkInfo.DetailedState	A										<section class="prog__container"><pre><code>public static final enum NetworkInfo.DetailedState</code></pre>The fine-grained state of a network connection. This level of detail is probably of interest to few applications. Most should use <code>State</code> instead.</section>	https://developer.android.com/reference/android/net/NetworkInfo.DetailedState.html
NetworkInfo.State	A										<section class="prog__container"><pre><code>public static final enum NetworkInfo.State</code></pre>Coarse-grained network state. This is probably what most applications should use, rather than <code>DetailedState</code>. The mapping between the two is as follows: <br/><br/> <table> <tr><td><b>Detailed state</b></td><td><b>Coarse-grained state</b></td></tr> <tr><td><code>IDLE</code></td><td><code>DISCONNECTED</code></td></tr> <tr><td><code>SCANNING</code></td><td><code>CONNECTING</code></td></tr> <tr><td><code>CONNECTING</code></td><td><code>CONNECTING</code></td></tr> <tr><td><code>AUTHENTICATING</code></td><td><code>CONNECTING</code></td></tr> <tr><td><code>CONNECTED</code></td><td><code>CONNECTED</code></td></tr> <tr><td><code>DISCONNECTING</code></td><td><code>DISCONNECTING</code></td></tr> <tr><td><code>DISCONNECTED</code></td><td><code>DISCONNECTED</code></td></tr> <tr><td><code>UNAVAILABLE</code></td><td><code>DISCONNECTED</code></td></tr> <tr><td><code>FAILED</code></td><td><code>DISCONNECTED</code></td></tr> </table></section>	https://developer.android.com/reference/android/net/NetworkInfo.State.html
NetworkInterface	A										<section class="prog__container"><pre><code>public final class NetworkInterface</code></pre>This class represents a Network Interface made up of a name, and a list of IP addresses assigned to this interface. It is used to identify the local interface on which a multicast group is joined. Interfaces are normally known by names such as "le0".</section>	https://developer.android.com/reference/java/net/NetworkInterface.html
NetworkOnMainThreadException	A										<section class="prog__container"><pre><code>public class NetworkOnMainThreadException</code></pre>The exception that is thrown when an application attempts to perform a networking operation on its main thread.</section>	https://developer.android.com/reference/android/os/NetworkOnMainThreadException.html
NetworkRequest	A										<section class="prog__container"><pre><code>public class NetworkRequest</code></pre>Defines a request for a network, made through <code>NetworkRequest.Builder</code> and used to request a network via <code>requestNetwork(NetworkRequest, PendingIntent)</code> or listen for changes via <code>registerNetworkCallback(NetworkRequest, PendingIntent)</code>.</section>	https://developer.android.com/reference/android/net/NetworkRequest.html
NetworkRequest.Builder	A										<section class="prog__container"><pre><code>public static class NetworkRequest.Builder</code></pre>Builder used to create <code>NetworkRequest</code> objects. Specify the Network features needed in terms of <code>NetworkCapabilities</code> features</section>	https://developer.android.com/reference/android/net/NetworkRequest.Builder.html
NetworkSecurityPolicy	A										<section class="prog__container"><pre><code>public class NetworkSecurityPolicy</code></pre>Network security policy.</section>	https://developer.android.com/reference/android/security/NetworkSecurityPolicy.html
NetworkStats	A										<section class="prog__container"><pre><code>public final class NetworkStats</code></pre>Class providing enumeration over buckets of network usage statistics. <code>NetworkStats</code> objects are returned as results to various queries in <code>NetworkStatsManager</code>.</section>	https://developer.android.com/reference/android/app/usage/NetworkStats.html
NetworkStats.Bucket	A										<section class="prog__container"><pre><code>public static class NetworkStats.Bucket</code></pre>Buckets are the smallest elements of a query result. As some dimensions of a result may be aggregated (e.g. time or state) some values may be equal across all buckets.</section>	https://developer.android.com/reference/android/app/usage/NetworkStats.Bucket.html
NetworkStatsManager	A										<section class="prog__container"><pre><code>public class NetworkStatsManager</code></pre>Provides access to network usage history and statistics. Usage data is collected in discrete bins of time called 'Buckets'. See <code>NetworkStats.Bucket</code> for details.</section>	https://developer.android.com/reference/android/app/usage/NetworkStatsManager.html
NetworkStatsManager.UsageCallback	A										<section class="prog__container"><pre><code>public static abstract class NetworkStatsManager.UsageCallback</code></pre>Base class for usage callbacks. Should be extended by applications wanting notifications.</section>	https://developer.android.com/reference/android/app/usage/NetworkStatsManager.UsageCallback.html
NfcA	A										<section class="prog__container"><pre><code>public final class NfcA</code></pre>Provides access to NFC-A (ISO 14443-3A) properties and I/O operations on a <code>Tag</code>.</section>	https://developer.android.com/reference/android/nfc/tech/NfcA.html
NfcAdapter	A										<section class="prog__container"><pre><code>public final class NfcAdapter</code></pre>Represents the local NFC adapter.</section>	https://developer.android.com/reference/android/nfc/NfcAdapter.html
NfcAdapter.CreateBeamUrisCallback	A										<section class="prog__container"><pre><code>public static interface NfcAdapter.CreateBeamUrisCallback</code></pre></section>	https://developer.android.com/reference/android/nfc/NfcAdapter.CreateBeamUrisCallback.html
NfcAdapter.CreateNdefMessageCallback	A										<section class="prog__container"><pre><code>public static interface NfcAdapter.CreateNdefMessageCallback</code></pre>A callback to be invoked when another NFC device capable of NDEF push (Android Beam) is within range.</section>	https://developer.android.com/reference/android/nfc/NfcAdapter.CreateNdefMessageCallback.html
NfcAdapter.OnNdefPushCompleteCallback	A										<section class="prog__container"><pre><code>public static interface NfcAdapter.OnNdefPushCompleteCallback</code></pre>A callback to be invoked when the system successfully delivers your <code>NdefMessage</code> to another device.</section>	https://developer.android.com/reference/android/nfc/NfcAdapter.OnNdefPushCompleteCallback.html
NfcAdapter.OnTagRemovedListener	A										<section class="prog__container"><pre><code>public static interface NfcAdapter.OnTagRemovedListener</code></pre>A callback that is invoked when a tag is removed from the field.</section>	https://developer.android.com/reference/android/nfc/NfcAdapter.OnTagRemovedListener.html
NfcAdapter.ReaderCallback	A										<section class="prog__container"><pre><code>public static interface NfcAdapter.ReaderCallback</code></pre>A callback to be invoked when the system finds a tag while the foreground activity is operating in reader mode.</section>	https://developer.android.com/reference/android/nfc/NfcAdapter.ReaderCallback.html
NfcB	A										<section class="prog__container"><pre><code>public final class NfcB</code></pre>Provides access to NFC-B (ISO 14443-3B) properties and I/O operations on a <code>Tag</code>.</section>	https://developer.android.com/reference/android/nfc/tech/NfcB.html
NfcBarcode	A										<section class="prog__container"><pre><code>public final class NfcBarcode</code></pre>Provides access to tags containing just a barcode.</section>	https://developer.android.com/reference/android/nfc/tech/NfcBarcode.html
NfcEvent	A										<section class="prog__container"><pre><code>public final class NfcEvent</code></pre>Wraps information associated with any NFC event.</section>	https://developer.android.com/reference/android/nfc/NfcEvent.html
NfcF	A										<section class="prog__container"><pre><code>public final class NfcF</code></pre>Provides access to NFC-F (JIS 6319-4) properties and I/O operations on a <code>Tag</code>.</section>	https://developer.android.com/reference/android/nfc/tech/NfcF.html
NfcFCardEmulation	A										<section class="prog__container"><pre><code>public final class NfcFCardEmulation</code></pre>This class can be used to query the state of NFC-F card emulation services. For a general introduction into NFC card emulation, please read the NFC card emulation developer guide.</section>	https://developer.android.com/reference/android/nfc/cardemulation/NfcFCardEmulation.html
NfcManager	A										<section class="prog__container"><pre><code>public final class NfcManager</code></pre>High level manager used to obtain an instance of an <code>NfcAdapter</code>.</section>	https://developer.android.com/reference/android/nfc/NfcManager.html
NfcV	A										<section class="prog__container"><pre><code>public final class NfcV</code></pre>Provides access to NFC-V (ISO 15693) properties and I/O operations on a <code>Tag</code>.</section>	https://developer.android.com/reference/android/nfc/tech/NfcV.html
NinePatch	A										<section class="prog__container"><pre><code>public class NinePatch</code></pre>The NinePatch class permits drawing a bitmap in nine or more sections. Essentially, it allows the creation of custom graphics that will scale the way that you define, when content added within the image exceeds the normal bounds of the graphic. For a thorough explanation of a NinePatch image, read the discussion in the 2D Graphics document.</section>	https://developer.android.com/reference/android/graphics/NinePatch.html
NinePatchDrawable	A										<section class="prog__container"><pre><code>public class NinePatchDrawable</code></pre>A resizeable bitmap, with stretchable areas that you define. This type of image is defined in a .png file with a special format. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/graphics/drawable/NinePatchDrawable.html
NoClassDefFoundError	A										<section class="prog__container"><pre><code>public class NoClassDefFoundError</code></pre>Thrown if the Java Virtual Machine or a <code>ClassLoader</code> instance tries to load in the definition of a class (as part of a normal method call or as part of creating a new instance using the <code>new</code> expression) and no definition of the class could be found.</section>	https://developer.android.com/reference/java/lang/NoClassDefFoundError.html
NoConnectionPendingException	A										<section class="prog__container"><pre><code>public class NoConnectionPendingException</code></pre>Unchecked exception thrown when the <code>finishConnect</code> method of a <code>SocketChannel</code> is invoked without first successfully invoking its <code>connect</code> method.</section>	https://developer.android.com/reference/java/nio/channels/NoConnectionPendingException.html
NoCopySpan	A										<section class="prog__container"><pre><code>public interface NoCopySpan</code></pre>This interface should be added to a span object that should not be copied into a new Spanned when performing a slice or copy operation on the original Spanned it was placed in.</section>	https://developer.android.com/reference/android/text/NoCopySpan.html
NoCopySpan.Concrete	A										<section class="prog__container"><pre><code>public static class NoCopySpan.Concrete</code></pre>Convenience equivalent for when you would just want a new Object() for a span but want it to be no-copy. Use this instead.</section>	https://developer.android.com/reference/android/text/NoCopySpan.Concrete.html
NoRouteToHostException	A										<section class="prog__container"><pre><code>public class NoRouteToHostException</code></pre>Signals that an error occurred while attempting to connect a socket to a remote address and port. Typically, the remote host cannot be reached because of an intervening firewall, or if an intermediate router is down.</section>	https://developer.android.com/reference/java/net/NoRouteToHostException.html
NoSuchAlgorithmException	A										<section class="prog__container"><pre><code>public class NoSuchAlgorithmException</code></pre>This exception is thrown when a particular cryptographic algorithm is requested but is not available in the environment.</section>	https://developer.android.com/reference/java/security/NoSuchAlgorithmException.html
NoSuchElementException	A										<section class="prog__container"><pre><code>public class NoSuchElementException</code></pre>Thrown by the <code>nextElement</code> method of an <code>Enumeration</code> to indicate that there are no more elements in the enumeration.</section>	https://developer.android.com/reference/java/util/NoSuchElementException.html
NoSuchFieldError	A										<section class="prog__container"><pre><code>public class NoSuchFieldError</code></pre>Thrown if an application tries to access or modify a specified field of an object, and that object no longer has that field.</section>	https://developer.android.com/reference/java/lang/NoSuchFieldError.html
NoSuchFieldException	A										<section class="prog__container"><pre><code>public class NoSuchFieldException</code></pre>Signals that the class doesn't have a field of a specified name.</section>	https://developer.android.com/reference/java/lang/NoSuchFieldException.html
NoSuchMethodError	A										<section class="prog__container"><pre><code>public class NoSuchMethodError</code></pre>Thrown if an application tries to call a specified method of a class (either static or instance), and that class no longer has a definition of that method.</section>	https://developer.android.com/reference/java/lang/NoSuchMethodError.html
NoSuchMethodException	A										<section class="prog__container"><pre><code>public class NoSuchMethodException</code></pre>Thrown when a particular method cannot be found.</section>	https://developer.android.com/reference/java/lang/NoSuchMethodException.html
NoSuchPaddingException	A										<section class="prog__container"><pre><code>public class NoSuchPaddingException</code></pre>This exception is thrown when a particular padding mechanism is requested but is not available in the environment.</section>	https://developer.android.com/reference/javax/crypto/NoSuchPaddingException.html
NoSuchPropertyException	A										<section class="prog__container"><pre><code>public class NoSuchPropertyException</code></pre>Thrown when code requests a <code>Property</code> on a class that does not expose the appropriate method or field.</section>	https://developer.android.com/reference/android/util/NoSuchPropertyException.html
NoSuchProviderException	A										<section class="prog__container"><pre><code>public class NoSuchProviderException</code></pre>This exception is thrown when a particular security provider is requested but is not available in the environment.</section>	https://developer.android.com/reference/java/security/NoSuchProviderException.html
Node	A										<section class="prog__container"><pre><code>public interface Node</code></pre>The <code>Node</code> interface is the primary datatype for the entire Document Object Model. It represents a single node in the document tree. While all objects implementing the <code>Node</code> interface expose methods for dealing with children, not all objects implementing the <code>Node</code> interface may have children. For example, <code>Text</code> nodes may not have children, and adding children to such nodes results in a <code>DOMException</code> being raised.</section>	https://developer.android.com/reference/org/w3c/dom/Node.html
NodeChangeEvent	A										<section class="prog__container"><pre><code>public class NodeChangeEvent</code></pre>An event emitted by a <tt>Preferences</tt> node to indicate that a child of that node has been added or removed.</section>	https://developer.android.com/reference/java/util/prefs/NodeChangeEvent.html
NodeChangeListener	A										<section class="prog__container"><pre><code>public interface NodeChangeListener</code></pre>A listener for receiving preference node change events.</section>	https://developer.android.com/reference/java/util/prefs/NodeChangeListener.html
NodeList	A										<section class="prog__container"><pre><code>public interface NodeList</code></pre>The <code>NodeList</code> interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. <code>NodeList</code> objects in the DOM are live.</section>	https://developer.android.com/reference/org/w3c/dom/NodeList.html
NoiseSuppressor	A										<section class="prog__container"><pre><code>public class NoiseSuppressor</code></pre>Noise Suppressor (NS).</section>	https://developer.android.com/reference/android/media/audiofx/NoiseSuppressor.html
NonNull	A										<section class="prog__container"><pre><code>public abstract @interface NonNull</code></pre>Denotes that a parameter, field or method return value can never be null.</section>	https://developer.android.com/reference/android/support/annotation/NonNull.html
NonReadableChannelException	A										<section class="prog__container"><pre><code>public class NonReadableChannelException</code></pre>Unchecked exception thrown when an attempt is made to read from a channel that was not originally opened for reading.</section>	https://developer.android.com/reference/java/nio/channels/NonReadableChannelException.html
NonWritableChannelException	A										<section class="prog__container"><pre><code>public class NonWritableChannelException</code></pre>Unchecked exception thrown when an attempt is made to write to a channel that was not originally opened for writing.</section>	https://developer.android.com/reference/java/nio/channels/NonWritableChannelException.html
Normalizer	D								*[[icu.text.Normalizer]], <section class="prog__container"><pre><code>public final class Normalizer</code></pre>Old Unicode normalization API.</section>\n*[[java.text.Normalizer]], <section class="prog__container"><pre><code>public final class Normalizer</code></pre>This class provides the method <code>normalize</code> which transforms Unicode text into an equivalent composed or decomposed form, allowing for easier sorting and searching of text. The <code>normalize</code> method supports the standard normalization forms described in Unicode Standard Annex #15 &mdash; Unicode Normalization Forms.</section>			
Normalizer.Form	A										<section class="prog__container"><pre><code>public static final enum Normalizer.Form</code></pre>This enum provides constants of the four Unicode normalization forms that are described in Unicode Standard Annex #15 &mdash; Unicode Normalization Forms and two methods to access them.</section>	https://developer.android.com/reference/java/text/Normalizer.Form.html
Normalizer.QuickCheckResult	A										<section class="prog__container"><pre><code>public static final class Normalizer.QuickCheckResult</code></pre>Result values for quickCheck(). For details see Unicode Technical Report 15.</section>	https://developer.android.com/reference/android/icu/text/Normalizer.QuickCheckResult.html
Normalizer2	A										<section class="prog__container"><pre><code>public abstract class Normalizer2</code></pre>Unicode normalization functionality for standard Unicode normalization or for using custom mapping tables. All instances of this class are unmodifiable/immutable. The Normalizer2 class is not intended for public subclassing.</section>	https://developer.android.com/reference/android/icu/text/Normalizer2.html
Normalizer2.Mode	A										<section class="prog__container"><pre><code>public static final enum Normalizer2.Mode</code></pre>Constants for normalization modes. For details about standard Unicode normalization forms and about the algorithms which are also used with custom mapping tables see http://www.unicode.org/unicode/reports/tr15/</section>	https://developer.android.com/reference/android/icu/text/Normalizer2.Mode.html
NotActiveException	A										<section class="prog__container"><pre><code>public class NotActiveException</code></pre>Thrown when serialization or deserialization is not active.</section>	https://developer.android.com/reference/java/io/NotActiveException.html
NotOwnerException	A										<section class="prog__container"><pre><code>public class NotOwnerException</code></pre>This is an exception that is thrown whenever the modification of an object (such as an Access Control List) is only allowed to be done by an owner of the object, but the Principal attempting the modification is not an owner.</section>	https://developer.android.com/reference/java/security/acl/NotOwnerException.html
NotProvisionedException	A										<section class="prog__container"><pre><code>public final class NotProvisionedException</code></pre>Exception thrown when an operation on a MediaDrm object is attempted and the device does not have a certificate. The app should obtain and install a certificate using the MediaDrm provisioning methods then retry the operation.</section>	https://developer.android.com/reference/android/media/NotProvisionedException.html
NotSerializableException	A										<section class="prog__container"><pre><code>public class NotSerializableException</code></pre>Thrown when an instance is required to have a Serializable interface. The serialization runtime or the class of the instance can throw this exception. The argument should be the name of the class.</section>	https://developer.android.com/reference/java/io/NotSerializableException.html
NotYetBoundException	A										<section class="prog__container"><pre><code>public class NotYetBoundException</code></pre>Unchecked exception thrown when an attempt is made to invoke an I/O operation upon a server socket channel that is not yet bound.</section>	https://developer.android.com/reference/java/nio/channels/NotYetBoundException.html
NotYetConnectedException	A										<section class="prog__container"><pre><code>public class NotYetConnectedException</code></pre>Unchecked exception thrown when an attempt is made to invoke an I/O operation upon a socket channel that is not yet connected.</section>	https://developer.android.com/reference/java/nio/channels/NotYetConnectedException.html
Notation	A										<section class="prog__container"><pre><code>public interface Notation</code></pre>This interface represents a notation declared in the DTD. A notation either declares, by name, the format of an unparsed entity (see section 4.7 of the XML 1.0 specification [XML 1.0]), or is used for formal declaration of processing instruction targets (see section 2.6 of the XML 1.0 specification [XML 1.0]). The <code>nodeName</code> attribute inherited from <code>Node</code> is set to the declared name of the notation.</section>	https://developer.android.com/reference/org/w3c/dom/Notation.html
Notification	A										<section class="prog__container"><pre><code>public class Notification</code></pre>A class that represents how a persistent notification is to be presented to the user using the <code>NotificationManager</code>.</section>	https://developer.android.com/reference/android/app/Notification.html
Notification.Action	A										<section class="prog__container"><pre><code>public static class Notification.Action</code></pre>Structure to encapsulate a named action that can be shown as part of this notification. It must include an icon, a label, and a <code>PendingIntent</code> to be fired when the action is selected by the user.</section>	https://developer.android.com/reference/android/app/Notification.Action.html
Notification.Action.Builder	A										<section class="prog__container"><pre><code>public static final class Notification.Action.Builder</code></pre>Builder class for <code>Notification.Action</code> objects.</section>	https://developer.android.com/reference/android/app/Notification.Action.Builder.html
Notification.Action.Extender	A										<section class="prog__container"><pre><code>public static interface Notification.Action.Extender</code></pre>Extender interface for use with <code>extend(Notification.Action.Extender)</code>. Extenders may be used to add metadata or change options on an action builder.</section>	https://developer.android.com/reference/android/app/Notification.Action.Extender.html
Notification.Action.WearableExtender	A										<section class="prog__container"><pre><code>public static final class Notification.Action.WearableExtender</code></pre>Wearable extender for notification actions. To add extensions to an action, create a new <code>Notification.Action.WearableExtender</code> object using the <code>WearableExtender()</code> constructor and apply it to a <code>Notification.Action.Builder</code> using <code>extend(Notification.Action.Extender)</code>. <pre class="prettyprint"> Notification.Action action = new Notification.Action.Builder( R.drawable.archive_all, "Archive all", actionIntent) .extend(new Notification.Action.WearableExtender() .setAvailableOffline(false)) .build();</pre></section>	https://developer.android.com/reference/android/app/Notification.Action.WearableExtender.html
Notification.BigPictureStyle	A										<section class="prog__container"><pre><code>public static class Notification.BigPictureStyle</code></pre>Helper class for generating large-format notifications that include a large image attachment. Here's how you'd set the <code>BigPictureStyle</code> on a notification: <pre class="prettyprint"> Notification notif = new Notification.Builder(mContext) .setContentTitle("New photo from " + sender.toString()) .setContentText(subject) .setSmallIcon(R.drawable.new_post) .setLargeIcon(aBitmap) .setStyle(new Notification.BigPictureStyle() .bigPicture(aBigBitmap)) .build(); </pre></section>	https://developer.android.com/reference/android/app/Notification.BigPictureStyle.html
Notification.BigTextStyle	A										<section class="prog__container"><pre><code>public static class Notification.BigTextStyle</code></pre>Helper class for generating large-format notifications that include a lot of text. Here's how you'd set the <code>BigTextStyle</code> on a notification: <pre class="prettyprint"> Notification notif = new Notification.Builder(mContext) .setContentTitle("New mail from " + sender.toString()) .setContentText(subject) .setSmallIcon(R.drawable.new_mail) .setLargeIcon(aBitmap) .setStyle(new Notification.BigTextStyle() .bigText(aVeryLongString)) .build(); </pre></section>	https://developer.android.com/reference/android/app/Notification.BigTextStyle.html
Notification.Builder	A										<section class="prog__container"><pre><code>public static class Notification.Builder</code></pre>Builder class for <code>Notification</code> objects. Provides a convenient way to set the various fields of a <code>Notification</code> and generate content views using the platform's notification layout template. If your app supports versions of Android as old as API level 4, you can instead use <code>NotificationCompat.Builder</code>, available in the Android Support library.</section>	https://developer.android.com/reference/android/app/Notification.Builder.html
Notification.CarExtender	A										<section class="prog__container"><pre><code>public static final class Notification.CarExtender</code></pre></section>	https://developer.android.com/reference/android/app/Notification.CarExtender.html
Notification.CarExtender.Builder	A										<section class="prog__container"><pre><code>public static class Notification.CarExtender.Builder</code></pre>Builder class for <code>Notification.CarExtender.UnreadConversation</code> objects.</section>	https://developer.android.com/reference/android/app/Notification.CarExtender.Builder.html
Notification.CarExtender.UnreadConversation	A										<section class="prog__container"><pre><code>public static class Notification.CarExtender.UnreadConversation</code></pre>A class which holds the unread messages from a conversation.</section>	https://developer.android.com/reference/android/app/Notification.CarExtender.UnreadConversation.html
Notification.DecoratedCustomViewStyle	A										<section class="prog__container"><pre><code>public static class Notification.DecoratedCustomViewStyle</code></pre>Notification style for custom views that are decorated by the system</section>	https://developer.android.com/reference/android/app/Notification.DecoratedCustomViewStyle.html
Notification.DecoratedMediaCustomViewStyle	A										<section class="prog__container"><pre><code>public static class Notification.DecoratedMediaCustomViewStyle</code></pre>Notification style for media custom views that are decorated by the system</section>	https://developer.android.com/reference/android/app/Notification.DecoratedMediaCustomViewStyle.html
Notification.Extender	A										<section class="prog__container"><pre><code>public static interface Notification.Extender</code></pre>Extender interface for use with <code>extend(Notification.Action.Extender)</code>. Extenders may be used to add metadata or change options on a notification builder.</section>	https://developer.android.com/reference/android/app/Notification.Extender.html
Notification.InboxStyle	A										<section class="prog__container"><pre><code>public static class Notification.InboxStyle</code></pre>Helper class for generating large-format notifications that include a list of (up to 5) strings. Here's how you'd set the <code>InboxStyle</code> on a notification: <pre class="prettyprint"> Notification notif = new Notification.Builder(mContext) .setContentTitle("5 New mails from " + sender.toString()) .setContentText(subject) .setSmallIcon(R.drawable.new_mail) .setLargeIcon(aBitmap) .setStyle(new Notification.InboxStyle() .addLine(str1) .addLine(str2) .setContentTitle("") .setSummaryText("+3 more")) .build(); </pre></section>	https://developer.android.com/reference/android/app/Notification.InboxStyle.html
Notification.MediaStyle	A										<section class="prog__container"><pre><code>public static class Notification.MediaStyle</code></pre>Notification style for media playback notifications. In the expanded form, <code>bigContentView</code>, up to 5 <code>Notification.Action</code>s specified with <code>addAction</code> will be shown as icon-only pushbuttons, suitable for transport controls. The Bitmap given to <code>setLargeIcon()</code> will be treated as album artwork. Unlike the other styles provided here, MediaStyle can also modify the standard-size <code>contentView</code>; by providing action indices to <code>setShowActionsInCompactView(int)</code> you can promote up to 3 actions to be displayed in the standard view alongside the usual content. Notifications created with MediaStyle will have their category set to <code>CATEGORY_TRANSPORT</code> unless you set a different category using <code>setCategory()</code>. Finally, if you attach a <code>MediaSession.Token</code> using <code>setMediaSession(MediaSession.Token)</code>, the System UI can identify this as a notification representing an active media session and respond accordingly (by showing album artwork in the lockscreen, for example). To use this style with your Notification, feed it to <code>setStyle(android.app.Notification.Style)</code> like so: <pre class="prettyprint"> Notification noti = new Notification.Builder() .setSmallIcon(R.drawable.ic_stat_player) .setContentTitle("Track title") .setContentText("Artist - Album") .setLargeIcon(albumArtBitmap)) .setStyle(<b>new Notification.MediaStyle()</b> .setMediaSession(mySession)) .build(); </pre></section>	https://developer.android.com/reference/android/app/Notification.MediaStyle.html
Notification.MessagingStyle	A										<section class="prog__container"><pre><code>public static class Notification.MessagingStyle</code></pre>Helper class for generating large-format notifications that include multiple back-and-forth messages of varying types between any number of people. <br> If the platform does not provide large-format notifications, this method has no effect. The user will always see the normal notification view. <br> This class is a "rebuilder": It attaches to a Builder object and modifies its behavior, like so: <pre class="prettyprint"> Notification noti = new Notification.Builder() .setContentTitle("2 new messages wtih " + sender.toString()) .setContentText(subject) .setSmallIcon(R.drawable.new_message) .setLargeIcon(aBitmap) .setStyle(new Notification.MessagingStyle(resources.getString(R.string.reply_name)) .addMessage(messages[0].getText(), messages[0].getTime(), messages[0].getSender()) .addMessage(messages[1].getText(), messages[1].getTime(), messages[1].getSender())) .build(); </pre> </br></br></section>	https://developer.android.com/reference/android/app/Notification.MessagingStyle.html
Notification.MessagingStyle.Message	A										<section class="prog__container"><pre><code>public static final class Notification.MessagingStyle.Message</code></pre></section>	https://developer.android.com/reference/android/app/Notification.MessagingStyle.Message.html
Notification.Style	A										<section class="prog__container"><pre><code>public static abstract class Notification.Style</code></pre>An object that can apply a rich notification style to a <code>Notification.Builder</code> object.</section>	https://developer.android.com/reference/android/app/Notification.Style.html
Notification.WearableExtender	A										<section class="prog__container"><pre><code>public static final class Notification.WearableExtender</code></pre>Helper class to add wearable extensions to notifications. <p class="note"> See Creating Notifications for Android Wear for more information on how to use this class.</section>	https://developer.android.com/reference/android/app/Notification.WearableExtender.html
NotificationCompat	D								*[[v4.app.NotificationCompat]], <section class="prog__container"><pre><code>public class NotificationCompat</code></pre>Helper for accessing features in <code>Notification</code> introduced after API level 4 in a backwards compatible fashion.</section>\n*[[v7.app.NotificationCompat]], <section class="prog__container"><pre><code>public class NotificationCompat</code></pre>An extension of <code>NotificationCompat</code> which supports <code>NotificationCompat.MediaStyle</code>, <code>NotificationCompat.DecoratedCustomViewStyle</code>, and <code>NotificationCompat.DecoratedMediaCustomViewStyle</code>. You should start using this variant if you need support any of these styles.</section>			
NotificationCompat.Action	A										<section class="prog__container"><pre><code>public static class NotificationCompat.Action</code></pre>Structure to encapsulate a named action that can be shown as part of this notification. It must include an icon, a label, and a <code>PendingIntent</code> to be fired when the action is selected by the user. Action buttons won't appear on platforms prior to Android 4.1.</section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.html
NotificationCompat.Action.Builder	A										<section class="prog__container"><pre><code>public static final class NotificationCompat.Action.Builder</code></pre>Builder class for <code>NotificationCompat.Action</code> objects.</section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.Builder.html
NotificationCompat.Action.Extender	A										<section class="prog__container"><pre><code>public static interface NotificationCompat.Action.Extender</code></pre>Extender interface for use with <code>extend(NotificationCompat.Extender)</code>. Extenders may be used to add metadata or change options on an action builder.</section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.Extender.html
NotificationCompat.Action.WearableExtender	A										<section class="prog__container"><pre><code>public static final class NotificationCompat.Action.WearableExtender</code></pre>Wearable extender for notification actions. To add extensions to an action, create a new <code>NotificationCompat.Action.WearableExtender</code> object using the <code>WearableExtender()</code> constructor and apply it to a <code>NotificationCompat.Action.Builder</code> using <code>extend(NotificationCompat.Action.Extender)</code>. <pre class="prettyprint"> NotificationCompat.Action action = new NotificationCompat.Action.Builder( R.drawable.archive_all, "Archive all", actionIntent) .extend(new NotificationCompat.Action.WearableExtender() .setAvailableOffline(false)) .build();</pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.Action.WearableExtender.html
NotificationCompat.BigPictureStyle	A										<section class="prog__container"><pre><code>public static class NotificationCompat.BigPictureStyle</code></pre>Helper class for generating large-format notifications that include a large image attachment. <br> If the platform does not provide large-format notifications, this method has no effect. The user will always see the normal notification view. <br> This class is a "rebuilder": It attaches to a Builder object and modifies its behavior, like so: <pre class="prettyprint"> Notification notif = new Notification.Builder(mContext) .setContentTitle("New photo from " + sender.toString()) .setContentText(subject) .setSmallIcon(R.drawable.new_post) .setLargeIcon(aBitmap) .setStyle(new Notification.BigPictureStyle() .bigPicture(aBigBitmap)) .build(); </pre></br></br></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.BigPictureStyle.html
NotificationCompat.BigTextStyle	A										<section class="prog__container"><pre><code>public static class NotificationCompat.BigTextStyle</code></pre>Helper class for generating large-format notifications that include a lot of text. <br> If the platform does not provide large-format notifications, this method has no effect. The user will always see the normal notification view. <br> This class is a "rebuilder": It attaches to a Builder object and modifies its behavior, like so: <pre class="prettyprint"> Notification notif = new Notification.Builder(mContext) .setContentTitle("New mail from " + sender.toString()) .setContentText(subject) .setSmallIcon(R.drawable.new_mail) .setLargeIcon(aBitmap) .setStyle(new Notification.BigTextStyle() .bigText(aVeryLongString)) .build(); </pre></br></br></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.BigTextStyle.html
NotificationCompat.Builder	D								*[[v4.app.NotificationCompat.Builder]], <section class="prog__container"><pre><code>public static class NotificationCompat.Builder</code></pre>Builder class for <code>NotificationCompat</code> objects. Allows easier control over all the flags, as well as help constructing the typical notification layouts.</section>\n*[[v7.app.NotificationCompat.Builder]], <section class="prog__container"><pre><code>public static class NotificationCompat.Builder</code></pre>See <code>NotificationCompat</code>. In addition to the builder in v4, this builder also supports <code>NotificationCompat.MediaStyle</code>.</section>			
NotificationCompat.CarExtender	A										<section class="prog__container"><pre><code>public static final class NotificationCompat.CarExtender</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.html
NotificationCompat.CarExtender.UnreadConversation	A										<section class="prog__container"><pre><code>public static class NotificationCompat.CarExtender.UnreadConversation</code></pre>A class which holds the unread messages from a conversation.</section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.UnreadConversation.html
NotificationCompat.CarExtender.UnreadConversation.Builder	A										<section class="prog__container"><pre><code>public static class NotificationCompat.CarExtender.UnreadConversation.Builder</code></pre>Builder class for <code>NotificationCompat.CarExtender.UnreadConversation</code> objects.</section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.CarExtender.UnreadConversation.Builder.html
NotificationCompat.DecoratedCustomViewStyle	A										<section class="prog__container"><pre><code>public static class NotificationCompat.DecoratedCustomViewStyle</code></pre>Notification style for custom views that are decorated by the system.</section>	https://developer.android.com/reference/android/support/v7/app/NotificationCompat.DecoratedCustomViewStyle.html
NotificationCompat.DecoratedMediaCustomViewStyle	A										<section class="prog__container"><pre><code>public static class NotificationCompat.DecoratedMediaCustomViewStyle</code></pre>Notification style for media custom views that are decorated by the system.</section>	https://developer.android.com/reference/android/support/v7/app/NotificationCompat.DecoratedMediaCustomViewStyle.html
NotificationCompat.Extender	A										<section class="prog__container"><pre><code>public static interface NotificationCompat.Extender</code></pre>Extender interface for use with <code>extend(NotificationCompat.Extender)</code>. Extenders may be used to add metadata or change options on a notification builder.</section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.Extender.html
NotificationCompat.InboxStyle	A										<section class="prog__container"><pre><code>public static class NotificationCompat.InboxStyle</code></pre>Helper class for generating large-format notifications that include a list of (up to 5) strings. <br> If the platform does not provide large-format notifications, this method has no effect. The user will always see the normal notification view. <br> This class is a "rebuilder": It attaches to a Builder object and modifies its behavior, like so: <pre class="prettyprint"> Notification noti = new Notification.Builder() .setContentTitle("5 New mails from " + sender.toString()) .setContentText(subject) .setSmallIcon(R.drawable.new_mail) .setLargeIcon(aBitmap) .setStyle(new Notification.InboxStyle() .addLine(str1) .addLine(str2) .setContentTitle("") .setSummaryText("+3 more")) .build(); </pre></br></br></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.InboxStyle.html
NotificationCompat.MediaStyle	A										<section class="prog__container"><pre><code>public static class NotificationCompat.MediaStyle</code></pre>Notification style for media playback notifications. In the expanded form, <code>bigContentView</code>, up to 5 <code>NotificationCompat.Action</code>s specified with <code>addAction</code> will be shown as icon-only pushbuttons, suitable for transport controls. The Bitmap given to <code>setLargeIcon()</code> will be treated as album artwork. Unlike the other styles provided here, MediaStyle can also modify the standard-size <code>contentView</code>; by providing action indices to <code>setShowActionsInCompactView(int)</code> you can promote up to 3 actions to be displayed in the standard view alongside the usual content. Notifications created with MediaStyle will have their category set to <code>CATEGORY_TRANSPORT</code> unless you set a different category using <code>setCategory()</code>. Finally, if you attach a <code>MediaSession.Token</code> using <code>setMediaSession(MediaSessionCompat.Token)</code>, the System UI can identify this as a notification representing an active media session and respond accordingly (by showing album artwork in the lockscreen, for example). To use this style with your Notification, feed it to <code>setStyle(NotificationCompat.Style)</code> like so: <pre class="prettyprint"> Notification noti = new NotificationCompat.Builder() .setSmallIcon(R.drawable.ic_stat_player) .setContentTitle("Track title") .setContentText("Artist - Album") .setLargeIcon(albumArtBitmap)) .setStyle(<b>new NotificationCompat.MediaStyle()</b> .setMediaSession(mySession)) .build(); </pre></section>	https://developer.android.com/reference/android/support/v7/app/NotificationCompat.MediaStyle.html
NotificationCompat.MessagingStyle	A										<section class="prog__container"><pre><code>public static class NotificationCompat.MessagingStyle</code></pre>Helper class for generating large-format notifications that include multiple back-and-forth messages of varying types between any number of people. <br> In order to get a backwards compatible behavior, the app needs to use the v7 version of the notification builder together with this style, otherwise the user will see the normal notification view. <br> Use <code>setConversationTitle(CharSequence)</code> to set a conversation title for group chats with more than two people. This could be the user-created name of the group or, if it doesn't have a specific name, a list of the participants in the conversation. Do not set a conversation title for one-on-one chats, since platforms use the existence of this field as a hint that the conversation is a group. <br> This class is a "rebuilder": It attaches to a Builder object and modifies its behavior, like so: <pre class="prettyprint"> Notification noti = new Notification.Builder() .setContentTitle("2 new messages wtih " + sender.toString()) .setContentText(subject) .setSmallIcon(R.drawable.new_message) .setLargeIcon(aBitmap) .setStyle(new Notification.MessagingStyle(resources.getString(R.string.reply_name)) .addMessage(messages[0].getText(), messages[0].getTime(), messages[0].getSender()) .addMessage(messages[1].getText(), messages[1].getTime(), messages[1].getSender())) .build(); </pre> </br></br></br></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.MessagingStyle.html
NotificationCompat.MessagingStyle.Message	A										<section class="prog__container"><pre><code>public static final class NotificationCompat.MessagingStyle.Message</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.MessagingStyle.Message.html
NotificationCompat.Style	A										<section class="prog__container"><pre><code>public static abstract class NotificationCompat.Style</code></pre>An object that can apply a rich notification style to a <code>Notification.Action.Builder</code> object. <br> If the platform does not provide rich notification styles, methods in this class have no effect. </br></section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.Style.html
NotificationCompat.WearableExtender	A										<section class="prog__container"><pre><code>public static final class NotificationCompat.WearableExtender</code></pre>Helper class to add wearable extensions to notifications. <p class="note"> See Creating Notifications for Android Wear for more information on how to use this class.</section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.WearableExtender.html
NotificationCompatExtras	A										<section class="prog__container"><pre><code>public final class NotificationCompatExtras</code></pre>Well-known extras used by <code>NotificationCompat</code> for backwards compatibility.</section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompatExtras.html
NotificationCompatSideChannelService	A										<section class="prog__container"><pre><code>public abstract class NotificationCompatSideChannelService</code></pre>Abstract service to receive side channel notifications sent from <code>NotificationManagerCompat</code>.</section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompatSideChannelService.html
NotificationListenerService	A										<section class="prog__container"><pre><code>public abstract class NotificationListenerService</code></pre>A service that receives calls from the system when new notifications are posted or removed, or their ranking changed.</section>	https://developer.android.com/reference/android/service/notification/NotificationListenerService.html
NotificationListenerService.Ranking	A										<section class="prog__container"><pre><code>public static class NotificationListenerService.Ranking</code></pre>Stores ranking related information on a currently active notification.</section>	https://developer.android.com/reference/android/service/notification/NotificationListenerService.Ranking.html
NotificationListenerService.RankingMap	A										<section class="prog__container"><pre><code>public static class NotificationListenerService.RankingMap</code></pre>Provides access to ranking information on currently active notifications.</section>	https://developer.android.com/reference/android/service/notification/NotificationListenerService.RankingMap.html
NotificationManager	A										<section class="prog__container"><pre><code>public class NotificationManager</code></pre>Class to notify the user of events that happen. This is how you tell the user that something has happened in the background.</section>	https://developer.android.com/reference/android/app/NotificationManager.html
NotificationManager.Policy	A										<section class="prog__container"><pre><code>public static class NotificationManager.Policy</code></pre>Notification policy configuration. Represents user-preferences for notification filtering.</section>	https://developer.android.com/reference/android/app/NotificationManager.Policy.html
NotificationManagerCompat	A										<section class="prog__container"><pre><code>public final class NotificationManagerCompat</code></pre>Compatibility library for NotificationManager with fallbacks for older platforms.</section>	https://developer.android.com/reference/android/support/v4/app/NotificationManagerCompat.html
NsdManager	A										<section class="prog__container"><pre><code>public final class NsdManager</code></pre>The Network Service Discovery Manager class provides the API to discover services on a network. As an example, if device A and device B are connected over a Wi-Fi network, a game registered on device A can be discovered by a game on device B. Another example use case is an application discovering printers on the network.</section>	https://developer.android.com/reference/android/net/nsd/NsdManager.html
NsdManager.DiscoveryListener	A										<section class="prog__container"><pre><code>public static interface NsdManager.DiscoveryListener</code></pre>Interface for callback invocation for service discovery</section>	https://developer.android.com/reference/android/net/nsd/NsdManager.DiscoveryListener.html
NsdManager.RegistrationListener	A										<section class="prog__container"><pre><code>public static interface NsdManager.RegistrationListener</code></pre>Interface for callback invocation for service registration</section>	https://developer.android.com/reference/android/net/nsd/NsdManager.RegistrationListener.html
NsdManager.ResolveListener	A										<section class="prog__container"><pre><code>public static interface NsdManager.ResolveListener</code></pre>Interface for callback invocation for service resolution</section>	https://developer.android.com/reference/android/net/nsd/NsdManager.ResolveListener.html
NsdServiceInfo	A										<section class="prog__container"><pre><code>public final class NsdServiceInfo</code></pre>A class representing service information for network service discovery</section>	https://developer.android.com/reference/android/net/nsd/NsdServiceInfo.html
NullCipher	A										<section class="prog__container"><pre><code>public class NullCipher</code></pre>The NullCipher class is a class that provides an "identity cipher" -- one that does not tranform the plaintext. As a consequence, the ciphertext is identical to the plaintext. All initialization methods do nothing, while the blocksize is set to 1 byte.</section>	https://developer.android.com/reference/javax/crypto/NullCipher.html
NullPointerException	A										<section class="prog__container"><pre><code>public class NullPointerException</code></pre>Thrown when an application attempts to use <code>null</code> in a case where an object is required. These include: <ul> <li>Calling the instance method of a <code>null</code> object. <li>Accessing or modifying the field of a <code>null</code> object. <li>Taking the length of <code>null</code> as if it were an array. <li>Accessing or modifying the slots of <code>null</code> as if it were an array. <li>Throwing <code>null</code> as if it were a <code>Throwable</code> value. </li></li></li></li></li></ul></section>	https://developer.android.com/reference/java/lang/NullPointerException.html
Nullable	A										<section class="prog__container"><pre><code>public abstract @interface Nullable</code></pre>Denotes that a parameter, field or method return value can be null.</section>	https://developer.android.com/reference/android/support/annotation/Nullable.html
Number	A										<section class="prog__container"><pre><code>public abstract class Number</code></pre>The abstract class <code>Number</code> is the superclass of classes <code>BigDecimal</code>, <code>BigInteger</code>, <code>Byte</code>, <code>Double</code>, <code>Float</code>, <code>Integer</code>, <code>Long</code>, and <code>Short</code>.</section>	https://developer.android.com/reference/java/lang/Number.html
NumberFormat	D								*[[icu.text.NumberFormat]], <section class="prog__container"><pre><code>public abstract class NumberFormat</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>NumberFormat</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'. <code>NumberFormat</code> is the abstract base class for all number formats. This class provides the interface for formatting and parsing numbers. <code>NumberFormat</code> also provides methods for determining which locales have number formats, and what their names are. <code>NumberFormat</code> helps you to format and parse numbers for any locale. Your code can be completely independent of the locale conventions for decimal points, thousands-separators, or even the particular decimal digits used, or whether the number format is even decimal.</section>\n*[[java.text.NumberFormat]], <section class="prog__container"><pre><code>public abstract class NumberFormat</code></pre><code>NumberFormat</code> is the abstract base class for all number formats. This class provides the interface for formatting and parsing numbers. <code>NumberFormat</code> also provides methods for determining which locales have number formats, and what their names are.</section>			
NumberFormat.Field	D								*[[icu.text.NumberFormat.Field]], <section class="prog__container"><pre><code>public static class NumberFormat.Field</code></pre>The instances of this inner class are used as attribute keys and values in AttributedCharacterIterator that NumberFormat.formatToCharacterIterator() method returns.</section>\n*[[java.text.NumberFormat.Field]], <section class="prog__container"><pre><code>public static class NumberFormat.Field</code></pre>Defines constants that are used as attribute keys in the <code>AttributedCharacterIterator</code> returned from <code>NumberFormat.formatToCharacterIterator</code> and as field identifiers in <code>FieldPosition</code>.</section>			
NumberFormatException	A										<section class="prog__container"><pre><code>public class NumberFormatException</code></pre>Thrown to indicate that the application has attempted to convert a string to one of the numeric types, but that the string does not have the appropriate format.</section>	https://developer.android.com/reference/java/lang/NumberFormatException.html
NumberKeyListener	A										<section class="prog__container"><pre><code>public abstract class NumberKeyListener</code></pre>For numeric text entry</section>	https://developer.android.com/reference/android/text/method/NumberKeyListener.html
NumberPicker	A										<section class="prog__container"><pre><code>public class NumberPicker</code></pre>A widget that enables the user to select a number from a predefined range. There are two flavors of this widget and which one is presented to the user depends on the current theme. <ul> <li> If the current theme is derived from <code>Theme</code> the widget presents the current value as an editable input field with an increment button above and a decrement button below. Long pressing the buttons allows for a quick change of the current value. Tapping on the input field allows to type in a desired value. </li> <li> If the current theme is derived from <code>Theme_Holo</code> or <code>Theme_Holo_Light</code> the widget presents the current value as an editable input field with a lesser value above and a greater value below. Tapping on the lesser or greater value selects it by animating the number axis up or down to make the chosen value current. Flinging up or down allows for multiple increments or decrements of the current value. Long pressing on the lesser and greater values also allows for a quick change of the current value. Tapping on the current value allows to type in a desired value. </li> </ul></section>	https://developer.android.com/reference/android/widget/NumberPicker.html
NumberPicker.Formatter	A										<section class="prog__container"><pre><code>public static interface NumberPicker.Formatter</code></pre>Interface used to format current value into a string for presentation.</section>	https://developer.android.com/reference/android/widget/NumberPicker.Formatter.html
NumberPicker.OnScrollListener	A										<section class="prog__container"><pre><code>public static interface NumberPicker.OnScrollListener</code></pre>Interface to listen for the picker scroll state.</section>	https://developer.android.com/reference/android/widget/NumberPicker.OnScrollListener.html
NumberPicker.OnValueChangeListener	A										<section class="prog__container"><pre><code>public static interface NumberPicker.OnValueChangeListener</code></pre>Interface to listen for changes of the current value.</section>	https://developer.android.com/reference/android/widget/NumberPicker.OnValueChangeListener.html
NumberingSystem	A										<section class="prog__container"><pre><code>public class NumberingSystem</code></pre><code>NumberingSystem</code> is the base class for all number systems. This class provides the interface for setting different numbering system types, whether it be a simple alternate digit system such as Thai digits or Devanagari digits, or an algorithmic numbering system such as Hebrew numbering or Chinese numbering.</section>	https://developer.android.com/reference/android/icu/text/NumberingSystem.html
NumericShaper	A										<section class="prog__container"><pre><code>public final class NumericShaper</code></pre>The <code>NumericShaper</code> class is used to convert Latin-1 (European) digits to other Unicode decimal digits. Users of this class will primarily be people who wish to present data using national digit shapes, but find it more convenient to represent the data internally using Latin-1 (European) digits. This does not interpret the deprecated numeric shape selector character (U+206E).</section>	https://developer.android.com/reference/java/awt/font/NumericShaper.html
NumericShaper.Range	A										<section class="prog__container"><pre><code>public static enum NumericShaper.Range</code></pre>A <code>NumericShaper.Range</code> represents a Unicode range of a script having its own decimal digits. For example, the <code>THAI</code> range has the Thai digits, THAI DIGIT ZERO (U+0E50) to THAI DIGIT NINE (U+0E59).</section>	https://developer.android.com/reference/java/awt/font/NumericShaper.Range.html
NumericTextView	A										Extension of TextView that can handle displaying and inputting a range of numbers.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
OAEPParameterSpec	A										<section class="prog__container"><pre><code>public class OAEPParameterSpec</code></pre>This class specifies the set of parameters used with OAEP Padding, as defined in the PKCS #1 standard. Its ASN.1 definition in PKCS#1 standard is described below: <pre> RSAES-OAEP-params ::= SEQUENCE { hashAlgorithm [0] OAEP-PSSDigestAlgorithms DEFAULT sha1, maskGenAlgorithm [1] PKCS1MGFAlgorithms DEFAULT mgf1SHA1, pSourceAlgorithm [2] PKCS1PSourceAlgorithms DEFAULT pSpecifiedEmpty } </pre> where <pre> OAEP-PSSDigestAlgorithms ALGORITHM-IDENTIFIER ::= { { OID id-sha1 PARAMETERS NULL }| { OID id-sha256 PARAMETERS NULL }| { OID id-sha384 PARAMETERS NULL }| { OID id-sha512 PARAMETERS NULL }, ... -- Allows for future expansion -- } PKCS1MGFAlgorithms ALGORITHM-IDENTIFIER ::= { { OID id-mgf1 PARAMETERS OAEP-PSSDigestAlgorithms }, ... -- Allows for future expansion -- } PKCS1PSourceAlgorithms ALGORITHM-IDENTIFIER ::= { { OID id-pSpecified PARAMETERS OCTET STRING }, ... -- Allows for future expansion -- } </pre></section>	https://developer.android.com/reference/javax/crypto/spec/OAEPParameterSpec.html
ObbInfo	A										<section class="prog__container"><pre><code>public class ObbInfo</code></pre>Basic information about a Opaque Binary Blob (OBB) that reflects the info from the footer on the OBB file. This information may be manipulated by a developer with the <code>obbtool</code> program in the Android SDK.</section>	https://developer.android.com/reference/android/content/res/ObbInfo.html
ObbScanner	A										<section class="prog__container"><pre><code>public class ObbScanner</code></pre>Class to scan Opaque Binary Blob (OBB) files. Use this to get information about an OBB file for use in a program via <code>ObbInfo</code>.</section>	https://developer.android.com/reference/android/content/res/ObbScanner.html
ObjDoubleConsumer	A										<section class="prog__container"><pre><code>public interface ObjDoubleConsumer</code></pre>Represents an operation that accepts an object-valued and a <code>double</code>-valued argument, and returns no result. This is the <code>(reference, double)</code> specialization of <code>BiConsumer</code>. Unlike most other functional interfaces, <code>ObjDoubleConsumer</code> is expected to operate via side-effects.</section>	https://developer.android.com/reference/java/util/function/ObjDoubleConsumer.html
ObjIntConsumer	A										<section class="prog__container"><pre><code>public interface ObjIntConsumer</code></pre>Represents an operation that accepts an object-valued and a <code>int</code>-valued argument, and returns no result. This is the <code>(reference, int)</code> specialization of <code>BiConsumer</code>. Unlike most other functional interfaces, <code>ObjIntConsumer</code> is expected to operate via side-effects.</section>	https://developer.android.com/reference/java/util/function/ObjIntConsumer.html
ObjLongConsumer	A										<section class="prog__container"><pre><code>public interface ObjLongConsumer</code></pre>Represents an operation that accepts an object-valued and a <code>long</code>-valued argument, and returns no result. This is the <code>(reference, long)</code> specialization of <code>BiConsumer</code>. Unlike most other functional interfaces, <code>ObjLongConsumer</code> is expected to operate via side-effects.</section>	https://developer.android.com/reference/java/util/function/ObjLongConsumer.html
Object	A										<section class="prog__container"><pre><code>public class Object</code></pre>Class <code>Object</code> is the root of the class hierarchy. Every class has <code>Object</code> as a superclass. All objects, including arrays, implement the methods of this class.</section>	https://developer.android.com/reference/java/lang/Object.html
ObjectAdapter	A										<section class="prog__container"><pre><code>public abstract class ObjectAdapter</code></pre>Base class adapter to be used in leanback activities. Provides access to a data model and is decoupled from the presentation of the items via <code>PresenterSelector</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ObjectAdapter.html
ObjectAdapter.DataObserver	A										<section class="prog__container"><pre><code>public static abstract class ObjectAdapter.DataObserver</code></pre>A DataObserver can be notified when an ObjectAdapter's underlying data changes. Separate methods provide notifications about different types of changes.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ObjectAdapter.DataObserver.html
ObjectAnimator	A										<section class="prog__container"><pre><code>public final class ObjectAnimator</code></pre>This subclass of <code>ValueAnimator</code> provides support for animating properties on target objects. The constructors of this class take parameters to define the target object that will be animated as well as the name of the property that will be animated. Appropriate set/get functions are then determined internally and the animation will call these functions as necessary to animate the property.</section>	https://developer.android.com/reference/android/animation/ObjectAnimator.html
ObjectInput	A										<section class="prog__container"><pre><code>public interface ObjectInput</code></pre>ObjectInput extends the DataInput interface to include the reading of objects. DataInput includes methods for the input of primitive types, ObjectInput extends that interface to include objects, arrays, and Strings.</section>	https://developer.android.com/reference/java/io/ObjectInput.html
ObjectInputStream	A										<section class="prog__container"><pre><code>public class ObjectInputStream</code></pre>An ObjectInputStream deserializes primitive data and objects previously written using an ObjectOutputStream.</section>	https://developer.android.com/reference/java/io/ObjectInputStream.html
ObjectInputStream.GetField	A										<section class="prog__container"><pre><code>public static abstract class ObjectInputStream.GetField</code></pre>Provide access to the persistent fields read from the input stream.</section>	https://developer.android.com/reference/java/io/ObjectInputStream.GetField.html
ObjectInputValidation	A										<section class="prog__container"><pre><code>public interface ObjectInputValidation</code></pre>Callback interface to allow validation of objects within a graph. Allows an object to be called when a complete graph of objects has been deserialized.</section>	https://developer.android.com/reference/java/io/ObjectInputValidation.html
ObjectOutput	A										<section class="prog__container"><pre><code>public interface ObjectOutput</code></pre>ObjectOutput extends the DataOutput interface to include writing of objects. DataOutput includes methods for output of primitive types, ObjectOutput extends that interface to include objects, arrays, and Strings.</section>	https://developer.android.com/reference/java/io/ObjectOutput.html
ObjectOutputStream	A										<section class="prog__container"><pre><code>public class ObjectOutputStream</code></pre>An ObjectOutputStream writes primitive data types and graphs of Java objects to an OutputStream. The objects can be read (reconstituted) using an ObjectInputStream. Persistent storage of objects can be accomplished by using a file for the stream. If the stream is a network socket stream, the objects can be reconstituted on another host or in another process.</section>	https://developer.android.com/reference/java/io/ObjectOutputStream.html
ObjectOutputStream.PutField	A										<section class="prog__container"><pre><code>public static abstract class ObjectOutputStream.PutField</code></pre>Provide programmatic access to the persistent fields to be written to ObjectOutput.</section>	https://developer.android.com/reference/java/io/ObjectOutputStream.PutField.html
ObjectStreamClass	A										<section class="prog__container"><pre><code>public class ObjectStreamClass</code></pre>Serialization's descriptor for classes. It contains the name and serialVersionUID of the class. The ObjectStreamClass for a specific class loaded in this Java VM can be found/created using the lookup method.</section>	https://developer.android.com/reference/java/io/ObjectStreamClass.html
ObjectStreamConstants	A										<section class="prog__container"><pre><code>public interface ObjectStreamConstants</code></pre>Constants written into the Object Serialization Stream.</section>	https://developer.android.com/reference/java/io/ObjectStreamConstants.html
ObjectStreamException	A										<section class="prog__container"><pre><code>public abstract class ObjectStreamException</code></pre>Superclass of all exceptions specific to Object Stream classes.</section>	https://developer.android.com/reference/java/io/ObjectStreamException.html
ObjectStreamField	A										<section class="prog__container"><pre><code>public class ObjectStreamField</code></pre>A description of a Serializable field from a Serializable class. An array of ObjectStreamFields is used to declare the Serializable fields of a class.</section>	https://developer.android.com/reference/java/io/ObjectStreamField.html
Objects	A										<section class="prog__container"><pre><code>public final class Objects</code></pre>This class consists of <code>static</code> utility methods for operating on objects. These utilities include <code>null</code>-safe or <code>null</code>-tolerant methods for computing the hash code of an object, returning a string for an object, and comparing two objects.</section>	https://developer.android.com/reference/java/util/Objects.html
Observable	D								*[[database.Observable]], <section class="prog__container"><pre><code>public abstract class Observable</code></pre>Provides methods for registering or unregistering arbitrary observers in an <code>ArrayList</code>. This abstract class is intended to be subclassed and specialized to maintain a registry of observers of specific types and dispatch notifications to them.</section>\n*[[databinding.Observable]], <section class="prog__container"><pre><code>public interface Observable</code></pre>Observable classes provide a way in which data bound UI can be notified of changes. <code>ObservableList</code> and <code>ObservableMap</code> also provide the ability to notify when changes occur. ObservableField, ObservableParcelable, ObservableBoolean, ObservableByte, ObservableShort, ObservableInt, ObservableLong, ObservableFloat, and ObservableDouble provide a means by which properties may be notified without implementing Observable.</section>\n*[[util.Observable]], <section class="prog__container"><pre><code>public class Observable</code></pre>This class represents an observable object, or "data" in the model-view paradigm. It can be subclassed to represent an object that the application wants to have observed.</section>			
Observable.OnPropertyChangedCallback	A										<section class="prog__container"><pre><code>public static abstract class Observable.OnPropertyChangedCallback</code></pre>The callback that is called by Observable when an observable property has changed.</section>	https://developer.android.com/reference/android/databinding/Observable.OnPropertyChangedCallback.html
ObservableArrayList	A										<section class="prog__container"><pre><code>public class ObservableArrayList</code></pre>An <code>ObservableList</code> implementation using ArrayList as an implementation.</section>	https://developer.android.com/reference/android/databinding/ObservableArrayList.html
ObservableArrayMap	A										<section class="prog__container"><pre><code>public class ObservableArrayMap</code></pre></section>	https://developer.android.com/reference/android/databinding/ObservableArrayMap.html
ObservableBoolean	A										<section class="prog__container"><pre><code>public class ObservableBoolean</code></pre>An observable class that holds a primitive boolean.</section>	https://developer.android.com/reference/android/databinding/ObservableBoolean.html
ObservableByte	A										<section class="prog__container"><pre><code>public class ObservableByte</code></pre>An observable class that holds a primitive byte.</section>	https://developer.android.com/reference/android/databinding/ObservableByte.html
ObservableChar	A										<section class="prog__container"><pre><code>public class ObservableChar</code></pre>An observable class that holds a primitive char.</section>	https://developer.android.com/reference/android/databinding/ObservableChar.html
ObservableDouble	A										<section class="prog__container"><pre><code>public class ObservableDouble</code></pre>An observable class that holds a primitive double.</section>	https://developer.android.com/reference/android/databinding/ObservableDouble.html
ObservableField	A										<section class="prog__container"><pre><code>public class ObservableField</code></pre>An object wrapper to make it observable.</section>	https://developer.android.com/reference/android/databinding/ObservableField.html
ObservableFloat	A										<section class="prog__container"><pre><code>public class ObservableFloat</code></pre>An observable class that holds a primitive float.</section>	https://developer.android.com/reference/android/databinding/ObservableFloat.html
ObservableInt	A										<section class="prog__container"><pre><code>public class ObservableInt</code></pre>An observable class that holds a primitive int.</section>	https://developer.android.com/reference/android/databinding/ObservableInt.html
ObservableList	A										<section class="prog__container"><pre><code>public interface ObservableList</code></pre>A <code>List</code> that notifies when changes are made. An ObservableList bound to the UI will keep the it up-to-date when changes occur.</section>	https://developer.android.com/reference/android/databinding/ObservableList.html
ObservableLong	A										<section class="prog__container"><pre><code>public class ObservableLong</code></pre>An observable class that holds a primitive long.</section>	https://developer.android.com/reference/android/databinding/ObservableLong.html
ObservableMap	A										<section class="prog__container"><pre><code>public interface ObservableMap</code></pre>A <code>Map</code> that notifies when items change. This kind of Map may be data bound and have the UI update as the map changes.</section>	https://developer.android.com/reference/android/databinding/ObservableMap.html
ObservableShort	A										<section class="prog__container"><pre><code>public class ObservableShort</code></pre>An observable class that holds a primitive short.</section>	https://developer.android.com/reference/android/databinding/ObservableShort.html
Observer	A										<section class="prog__container"><pre><code>public interface Observer</code></pre>A class can implement the <code>Observer</code> interface when it wants to be informed of changes in observable objects.</section>	https://developer.android.com/reference/java/util/Observer.html
OffHostApduService	A										<section class="prog__container"><pre><code>public abstract class OffHostApduService</code></pre></section>	https://developer.android.com/reference/android/nfc/cardemulation/OffHostApduService.html
OnAccountsUpdateListener	A										<section class="prog__container"><pre><code>public interface OnAccountsUpdateListener</code></pre>An interface that contains the callback used by the AccountManager</section>	https://developer.android.com/reference/android/accounts/OnAccountsUpdateListener.html
OnActionClickedListener	A										<section class="prog__container"><pre><code>public interface OnActionClickedListener</code></pre>Interface for receiving notification when an <code>Action</code> is clicked.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/OnActionClickedListener.html
OnApplyWindowInsetsListener	A										<section class="prog__container"><pre><code>public interface OnApplyWindowInsetsListener</code></pre>Listener for applying window insets on a view in a custom way.</section>	https://developer.android.com/reference/android/support/v4/view/OnApplyWindowInsetsListener.html
OnChildLaidOutListener	A										<section class="prog__container"><pre><code>public interface OnChildLaidOutListener</code></pre>Interface for receiving notification when a child of this ViewGroup has been laid out.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/OnChildLaidOutListener.html
OnChildSelectedListener	A										<section class="prog__container"><pre><code>public interface OnChildSelectedListener</code></pre><p class="caution"><strong> This interface is deprecated.</strong><br/> Use <code>OnChildViewHolderSelectedListener</code></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/OnChildSelectedListener.html
OnChildViewHolderSelectedListener	A										<section class="prog__container"><pre><code>public abstract class OnChildViewHolderSelectedListener</code></pre>Interface for receiving notification when a child of this ViewGroup has been selected. There are two methods: <li> {link <code>onChildViewHolderSelected(RecyclerView, RecyclerView.ViewHolder, int, int)</code>} is called when the view holder is about to be selected. The listener could change size of the view holder in this callback. </li> <li> {link <code>onChildViewHolderSelectedAndPositioned(RecyclerView, RecyclerView.ViewHolder, int, int)</code> is called when view holder has been selected and laid out in RecyclerView. </li></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/OnChildViewHolderSelectedListener.html
OnItemViewClickedListener	A										<section class="prog__container"><pre><code>public interface OnItemViewClickedListener</code></pre>Interface for receiving notification when a item view holder is clicked. This interface expects row object to be sub class of <code>Row</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/OnItemViewClickedListener.html
OnItemViewSelectedListener	A										<section class="prog__container"><pre><code>public interface OnItemViewSelectedListener</code></pre>Interface for receiving notification when a row or item becomes selected. The concept of current selection is different than focus. A row or item can be selected without having focus; for example, when a row header view gains focus then the corresponding row view becomes selected. This interface expects row object to be sub class of <code>Row</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/OnItemViewSelectedListener.html
OnNmeaMessageListener	A										<section class="prog__container"><pre><code>public interface OnNmeaMessageListener</code></pre>Used for receiving NMEA sentences from the GNSS. NMEA 0183 is a standard for communicating with marine electronic devices and is a common method for receiving data from a GNSS, typically over a serial port. See NMEA 0183 for more details. You can implement this interface and call <code>addNmeaListener(GpsStatus.NmeaListener)</code> to receive NMEA data from the GNSS engine.</section>	https://developer.android.com/reference/android/location/OnNmeaMessageListener.html
OnObbStateChangeListener	A										<section class="prog__container"><pre><code>public abstract class OnObbStateChangeListener</code></pre>Used for receiving notifications from <code>StorageManager</code> about OBB file states.</section>	https://developer.android.com/reference/android/os/storage/OnObbStateChangeListener.html
OnboardingFragment	A										<section class="prog__container"><pre><code>public abstract class OnboardingFragment</code></pre>An OnboardingFragment provides a common and simple way to build onboarding screen for applications.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/OnboardingFragment.html
OnboardingSupportFragment	A										<section class="prog__container"><pre><code>public abstract class OnboardingSupportFragment</code></pre>An OnboardingSupportFragment provides a common and simple way to build onboarding screen for applications.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/OnboardingSupportFragment.html
OpcodeInfo	A										<section class="prog__container"><pre><code>public final class OpcodeInfo</code></pre>Information about Dalvik opcodes.</section>	https://developer.android.com/reference/dalvik/bytecode/OpcodeInfo.html
Opcodes	A										<section class="prog__container"><pre><code>public interface Opcodes</code></pre>A list of all normal (not implementation-specific) Dalvik opcodes.</section>	https://developer.android.com/reference/dalvik/bytecode/Opcodes.html
OpenableColumns	A										<section class="prog__container"><pre><code>public interface OpenableColumns</code></pre>These are standard columns for openable URIs. Providers that serve openable URIs <em>must</em> support at least these columns when queried.</section>	https://developer.android.com/reference/android/provider/OpenableColumns.html
OperationApplicationException	A										<section class="prog__container"><pre><code>public class OperationApplicationException</code></pre>Thrown when an application of a <code>ContentProviderOperation</code> fails due the specified constraints.</section>	https://developer.android.com/reference/android/content/OperationApplicationException.html
OperationCanceledException	D								*[[accounts.OperationCanceledException]], <section class="prog__container"><pre><code>public class OperationCanceledException</code></pre></section>\n*[[android.os.OperationCanceledException]], <section class="prog__container"><pre><code>public class OperationCanceledException</code></pre>An exception type that is thrown when an operation in progress is canceled.</section>\n*[[v4.os.OperationCanceledException]], <section class="prog__container"><pre><code>public class OperationCanceledException</code></pre>An exception type that is thrown when an operation in progress is canceled.</section>			
Optional	A										<section class="prog__container"><pre><code>public final class Optional</code></pre>A container object which may or may not contain a non-null value. If a value is present, <code>isPresent()</code> will return <code>true</code> and <code>get()</code> will return the value.</section>	https://developer.android.com/reference/java/util/Optional.html
OptionalDataException	A										<section class="prog__container"><pre><code>public class OptionalDataException</code></pre>Exception indicating the failure of an object read operation due to unread primitive data, or the end of data belonging to a serialized object in the stream. This exception may be thrown in two cases: <ul> <li>An attempt was made to read an object when the next element in the stream is primitive data. In this case, the OptionalDataException's length field is set to the number of bytes of primitive data immediately readable from the stream, and the eof field is set to false. <li>An attempt was made to read past the end of data consumable by a class-defined readObject or readExternal method. In this case, the OptionalDataException's eof field is set to true, and the length field is set to 0. </li></li></ul></section>	https://developer.android.com/reference/java/io/OptionalDataException.html
OptionalDouble	A										<section class="prog__container"><pre><code>public final class OptionalDouble</code></pre>A container object which may or may not contain a <code>double</code> value. If a value is present, <code>isPresent()</code> will return <code>true</code> and <code>getAsDouble()</code> will return the value.</section>	https://developer.android.com/reference/java/util/OptionalDouble.html
OptionalInt	A										<section class="prog__container"><pre><code>public final class OptionalInt</code></pre>A container object which may or may not contain a <code>int</code> value. If a value is present, <code>isPresent()</code> will return <code>true</code> and <code>getAsInt()</code> will return the value.</section>	https://developer.android.com/reference/java/util/OptionalInt.html
OptionalLong	A										<section class="prog__container"><pre><code>public final class OptionalLong</code></pre>A container object which may or may not contain a <code>long</code> value. If a value is present, <code>isPresent()</code> will return <code>true</code> and <code>getAsLong()</code> will return the value.</section>	https://developer.android.com/reference/java/util/OptionalLong.html
OrientationEventListener	A										<section class="prog__container"><pre><code>public abstract class OrientationEventListener</code></pre>Helper class for receiving notifications from the SensorManager when the orientation of the device has changed.</section>	https://developer.android.com/reference/android/view/OrientationEventListener.html
OrientationHelper	A										<section class="prog__container"><pre><code>public abstract class OrientationHelper</code></pre>Helper class for LayoutManagers to abstract measurements depending on the View's orientation.</section>	https://developer.android.com/reference/android/support/v7/widget/OrientationHelper.html
OrientationListener	A										<section class="prog__container"><pre><code>public abstract class OrientationListener</code></pre><p class="caution"><strong> This class was deprecated in API level 3.</strong><br/> use <code>OrientationEventListener</code> instead. This class internally uses the OrientationEventListener.</section>	https://developer.android.com/reference/android/view/OrientationListener.html
OrientedBoundingBox	A										<section class="prog__container"><pre><code>public class OrientedBoundingBox</code></pre>An oriented bounding box</section>	https://developer.android.com/reference/android/gesture/OrientedBoundingBox.html
Os	A										<section class="prog__container"><pre><code>public final class Os</code></pre>Access to low-level system functionality. Most of these are system calls. Most users will want to use higher-level APIs where available, but this class provides access to the underlying primitives used to implement the higher-level APIs.</section>	https://developer.android.com/reference/android/system/Os.html
OsConstants	A										<section class="prog__container"><pre><code>public final class OsConstants</code></pre>Constants and helper functions for use with <code>Os</code>.</section>	https://developer.android.com/reference/android/system/OsConstants.html
OutOfMemoryError	A										<section class="prog__container"><pre><code>public class OutOfMemoryError</code></pre>Thrown when the Java Virtual Machine cannot allocate an object because it is out of memory, and no more memory could be made available by the garbage collector. <code>OutOfMemoryError</code> objects may be constructed by the virtual machine as if suppression were disabled and/or the stack trace was not writable</section>	https://developer.android.com/reference/java/lang/OutOfMemoryError.html
Outline	A										<section class="prog__container"><pre><code>public final class Outline</code></pre>Defines a simple shape, used for bounding graphical regions.</section>	https://developer.android.com/reference/android/graphics/Outline.html
Output	A										<section class="prog__container"><pre><code>public class Output</code></pre>Simple struct-like class for output parameters.</section>	https://developer.android.com/reference/android/icu/util/Output.html
OutputConfiguration	A										<section class="prog__container"><pre><code>public final class OutputConfiguration</code></pre>A class for describing camera output, which contains a <code>Surface</code> and its specific configuration for creating capture session.</section>	https://developer.android.com/reference/android/hardware/camera2/params/OutputConfiguration.html
OutputKeys	A										<section class="prog__container"><pre><code>public class OutputKeys</code></pre>Provides string constants that can be used to set output properties for a Transformer, or to retrieve output properties from a Transformer or Templates object.</section>	https://developer.android.com/reference/javax/xml/transform/OutputKeys.html
OutputStream	A										<section class="prog__container"><pre><code>public abstract class OutputStream</code></pre>This abstract class is the superclass of all classes representing an output stream of bytes. An output stream accepts output bytes and sends them to some sink.</section>	https://developer.android.com/reference/java/io/OutputStream.html
OutputStreamWriter	A										<section class="prog__container"><pre><code>public class OutputStreamWriter</code></pre>An OutputStreamWriter is a bridge from character streams to byte streams: Characters written to it are encoded into bytes using a specified <code><code>charset</code></code>. The charset that it uses may be specified by name or may be given explicitly, or the platform's default charset may be accepted.</section>	https://developer.android.com/reference/java/io/OutputStreamWriter.html
OvalShape	A										<section class="prog__container"><pre><code>public class OvalShape</code></pre>Defines an oval shape. The oval can be drawn to a Canvas with its own draw() method, but more graphical control is available if you instead pass the OvalShape to a <code>ShapeDrawable</code>.</section>	https://developer.android.com/reference/android/graphics/drawable/shapes/OvalShape.html
OverScroller	A										<section class="prog__container"><pre><code>public class OverScroller</code></pre>This class encapsulates scrolling with the ability to overshoot the bounds of a scrolling operation. This class is a drop-in replacement for <code>Scroller</code> in most cases.</section>	https://developer.android.com/reference/android/widget/OverScroller.html
OverlappingFileLockException	A										<section class="prog__container"><pre><code>public class OverlappingFileLockException</code></pre>Unchecked exception thrown when an attempt is made to acquire a lock on a region of a file that overlaps a region already locked by the same Java virtual machine, or when another thread is already waiting to lock an overlapping region of the same file.</section>	https://developer.android.com/reference/java/nio/channels/OverlappingFileLockException.html
Override	A										<section class="prog__container"><pre><code>public abstract @interface Override</code></pre>Indicates that a method declaration is intended to override a method declaration in a supertype. If a method is annotated with this annotation type compilers are required to generate an error message unless at least one of the following conditions hold: <ul><li> The method does override or implement a method declared in a supertype. </li><li> The method has a signature that is override-equivalent to that of any public method declared in Object</li></ul></section>	https://developer.android.com/reference/java/lang/Override.html
OvershootInterpolator	A										<section class="prog__container"><pre><code>public class OvershootInterpolator</code></pre>An interpolator where the change flings forward and overshoots the last value then comes back.</section>	https://developer.android.com/reference/android/view/animation/OvershootInterpolator.html
Owner	A										<section class="prog__container"><pre><code>public interface Owner</code></pre>Interface for managing owners of Access Control Lists (ACLs) or ACL configurations. (Note that the Acl interface in the <code> java.security.acl </code> package extends this Owner interface.) The initial owner Principal should be specified as an argument to the constructor of the class implementing this interface.</section>	https://developer.android.com/reference/java/security/acl/Owner.html
PBEKey	A										<section class="prog__container"><pre><code>public interface PBEKey</code></pre>The interface to a PBE key.</section>	https://developer.android.com/reference/javax/crypto/interfaces/PBEKey.html
PBEKeySpec	A										<section class="prog__container"><pre><code>public class PBEKeySpec</code></pre>A user-chosen password that can be used with password-based encryption (<i>PBE</i>).</section>	https://developer.android.com/reference/javax/crypto/spec/PBEKeySpec.html
PBEParameterSpec	A										<section class="prog__container"><pre><code>public class PBEParameterSpec</code></pre>This class specifies the set of parameters used with password-based encryption (PBE), as defined in the PKCS #5 standard.</section>	https://developer.android.com/reference/javax/crypto/spec/PBEParameterSpec.html
PKCS8EncodedKeySpec	A										<section class="prog__container"><pre><code>public class PKCS8EncodedKeySpec</code></pre>This class represents the ASN.1 encoding of a private key, encoded according to the ASN.1 type <code>PrivateKeyInfo</code>. The <code>PrivateKeyInfo</code> syntax is defined in the PKCS#8 standard as follows: <pre> PrivateKeyInfo ::= SEQUENCE { version Version, privateKeyAlgorithm PrivateKeyAlgorithmIdentifier, privateKey PrivateKey, attributes [0] IMPLICIT Attributes OPTIONAL } Version ::= INTEGER PrivateKeyAlgorithmIdentifier ::= AlgorithmIdentifier PrivateKey ::= OCTET STRING Attributes ::= SET OF Attribute </pre></section>	https://developer.android.com/reference/java/security/spec/PKCS8EncodedKeySpec.html
PKIXBuilderParameters	A										<section class="prog__container"><pre><code>public class PKIXBuilderParameters</code></pre>Parameters used as input for the PKIX <code>CertPathBuilder</code> algorithm.</section>	https://developer.android.com/reference/java/security/cert/PKIXBuilderParameters.html
PKIXCertPathBuilderResult	A										<section class="prog__container"><pre><code>public class PKIXCertPathBuilderResult</code></pre>This class represents the successful result of the PKIX certification path builder algorithm. All certification paths that are built and returned using this algorithm are also validated according to the PKIX certification path validation algorithm.</section>	https://developer.android.com/reference/java/security/cert/PKIXCertPathBuilderResult.html
PKIXCertPathChecker	A										<section class="prog__container"><pre><code>public abstract class PKIXCertPathChecker</code></pre>An abstract class that performs one or more checks on an <code>X509Certificate</code>.</section>	https://developer.android.com/reference/java/security/cert/PKIXCertPathChecker.html
PKIXCertPathValidatorResult	A										<section class="prog__container"><pre><code>public class PKIXCertPathValidatorResult</code></pre>This class represents the successful result of the PKIX certification path validation algorithm.</section>	https://developer.android.com/reference/java/security/cert/PKIXCertPathValidatorResult.html
PKIXParameters	A										<section class="prog__container"><pre><code>public class PKIXParameters</code></pre>Parameters used as input for the PKIX <code>CertPathValidator</code> algorithm.</section>	https://developer.android.com/reference/java/security/cert/PKIXParameters.html
PKIXReason	A										<section class="prog__container"><pre><code>public final enum PKIXReason</code></pre>The <code>PKIXReason</code> enumerates the potential PKIX-specific reasons that an X.509 certification path may be invalid according to the PKIX (RFC 3280) standard. These reasons are in addition to those of the <code>CertPathValidatorException.BasicReason</code> enumeration.</section>	https://developer.android.com/reference/java/security/cert/PKIXReason.html
PKIXRevocationChecker	A										<section class="prog__container"><pre><code>public abstract class PKIXRevocationChecker</code></pre>A <code>PKIXCertPathChecker</code> for checking the revocation status of certificates with the PKIX algorithm.</section>	https://developer.android.com/reference/java/security/cert/PKIXRevocationChecker.html
PKIXRevocationChecker.Option	A										<section class="prog__container"><pre><code>public static final enum PKIXRevocationChecker.Option</code></pre>Various revocation options that can be specified for the revocation checking mechanism.</section>	https://developer.android.com/reference/java/security/cert/PKIXRevocationChecker.Option.html
PSSParameterSpec	A										<section class="prog__container"><pre><code>public class PSSParameterSpec</code></pre>This class specifies a parameter spec for RSA-PSS signature scheme, as defined in the PKCS#1 v2.1 standard.</section>	https://developer.android.com/reference/java/security/spec/PSSParameterSpec.html
PSource	A										<section class="prog__container"><pre><code>public class PSource</code></pre>This class specifies the source for encoding input P in OAEP Padding, as defined in the PKCS #1 standard. <pre> PKCS1PSourceAlgorithms ALGORITHM-IDENTIFIER ::= { { OID id-pSpecified PARAMETERS OCTET STRING }, ... -- Allows for future expansion -- } </pre></section>	https://developer.android.com/reference/javax/crypto/spec/PSource.html
PSource.PSpecified	A										<section class="prog__container"><pre><code>public static final class PSource.PSpecified</code></pre>This class is used to explicitly specify the value for encoding input P in OAEP Padding.</section>	https://developer.android.com/reference/javax/crypto/spec/PSource.PSpecified.html
Pack200	A										<section class="prog__container"><pre><code>public abstract class Pack200</code></pre>Transforms a JAR file to or from a packed stream in Pack200 format. Please refer to Network Transfer Format JSR 200 Specification at http://jcp.org/aboutJava/communityprocess/review/jsr200/index.html</section>	https://developer.android.com/reference/java/util/jar/Pack200.html
Pack200.Packer	A										<section class="prog__container"><pre><code>public static interface Pack200.Packer</code></pre>The packer engine applies various transformations to the input JAR file, making the pack stream highly compressible by a compressor such as gzip or zip. An instance of the engine can be obtained using <code>newPacker()</code>. The high degree of compression is achieved by using a number of techniques described in the JSR 200 specification. Some of the techniques are sorting, re-ordering and co-location of the constant pool.</section>	https://developer.android.com/reference/java/util/jar/Pack200.Packer.html
Pack200.Unpacker	A										<section class="prog__container"><pre><code>public static interface Pack200.Unpacker</code></pre>The unpacker engine converts the packed stream to a JAR file. An instance of the engine can be obtained using <code>newUnpacker()</code>.</section>	https://developer.android.com/reference/java/util/jar/Pack200.Unpacker.html
Package	A										<section class="prog__container"><pre><code>public class Package</code></pre><code>Package</code> objects contain version information about the implementation and specification of a Java package. This versioning information is retrieved and made available by the <code>ClassLoader</code> instance that loaded the class(es). Typically, it is stored in the manifest that is distributed with the classes.</section>	https://developer.android.com/reference/java/lang/Package.html
PackageHealthStats	A										<section class="prog__container"><pre><code>public final class PackageHealthStats</code></pre>Keys for <code>HealthStats</code> returned from <code>HealthStats.getStats(int)</code> with the <code>UidHealthStats.STATS_PACKAGES</code> key.</section>	https://developer.android.com/reference/android/os/health/PackageHealthStats.html
PackageInfo	A										<section class="prog__container"><pre><code>public class PackageInfo</code></pre>Overall information about the contents of a package. This corresponds to all of the information collected from AndroidManifest.xml.</section>	https://developer.android.com/reference/android/content/pm/PackageInfo.html
PackageInstaller	A										<section class="prog__container"><pre><code>public class PackageInstaller</code></pre>Offers the ability to install, upgrade, and remove applications on the device. This includes support for apps packaged either as a single "monolithic" APK, or apps packaged as multiple "split" APKs.</section>	https://developer.android.com/reference/android/content/pm/PackageInstaller.html
PackageInstaller.Session	A										<section class="prog__container"><pre><code>public static class PackageInstaller.Session</code></pre>An installation that is being actively staged. For an install to succeed, all existing and new packages must have identical package names, version codes, and signing certificates.</section>	https://developer.android.com/reference/android/content/pm/PackageInstaller.Session.html
PackageInstaller.SessionCallback	A										<section class="prog__container"><pre><code>public static abstract class PackageInstaller.SessionCallback</code></pre>Events for observing session lifecycle.</section>	https://developer.android.com/reference/android/content/pm/PackageInstaller.SessionCallback.html
PackageInstaller.SessionInfo	A										<section class="prog__container"><pre><code>public static class PackageInstaller.SessionInfo</code></pre>Details for an active install session.</section>	https://developer.android.com/reference/android/content/pm/PackageInstaller.SessionInfo.html
PackageInstaller.SessionParams	A										<section class="prog__container"><pre><code>public static class PackageInstaller.SessionParams</code></pre>Parameters for creating a new <code>PackageInstaller.Session</code>.</section>	https://developer.android.com/reference/android/content/pm/PackageInstaller.SessionParams.html
PackageItemInfo	A										<section class="prog__container"><pre><code>public class PackageItemInfo</code></pre>Base class containing information common to all package items held by the package manager. This provides a very common basic set of attributes: a label, icon, and meta-data. This class is not intended to be used by itself; it is simply here to share common definitions between all items returned by the package manager. As such, it does not itself implement Parcelable, but does provide convenience methods to assist in the implementation of Parcelable in subclasses.</section>	https://developer.android.com/reference/android/content/pm/PackageItemInfo.html
PackageItemInfo.DisplayNameComparator	A										<section class="prog__container"><pre><code>public static class PackageItemInfo.DisplayNameComparator</code></pre></section>	https://developer.android.com/reference/android/content/pm/PackageItemInfo.DisplayNameComparator.html
PackageManager	A										<section class="prog__container"><pre><code>public abstract class PackageManager</code></pre>Class for retrieving various kinds of information related to the application packages that are currently installed on the device. You can find this class through <code>getPackageManager()</code>.</section>	https://developer.android.com/reference/android/content/pm/PackageManager.html
PackageManager.NameNotFoundException	A										<section class="prog__container"><pre><code>public static class PackageManager.NameNotFoundException</code></pre>This exception is thrown when a given package, application, or component name cannot be found.</section>	https://developer.android.com/reference/android/content/pm/PackageManager.NameNotFoundException.html
PackageStats	A										<section class="prog__container"><pre><code>public class PackageStats</code></pre>implementation of PackageStats associated with a application package.</section>	https://developer.android.com/reference/android/content/pm/PackageStats.html
PageRange	A										<section class="prog__container"><pre><code>public final class PageRange</code></pre>Represents a range of pages. The start and end page indices of the range are zero based and inclusive.</section>	https://developer.android.com/reference/android/print/PageRange.html
PageRow	A										<section class="prog__container"><pre><code>public class PageRow</code></pre>Used to represent content spanning full page.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PageRow.html
PagerAdapter	D								*[[view.PagerAdapter]], <section class="prog__container"><pre><code>public abstract class PagerAdapter</code></pre>Base class providing the adapter to populate pages inside of a <code>ViewPager</code>. You will most likely want to use a more specific implementation of this, such as <code>FragmentPagerAdapter</code> or <code>FragmentStatePagerAdapter</code>.</section>\n*[[widget.PagerAdapter]], Base class providing the adapter to populate pages inside of a <code><a href="https://developer.android.com/reference/android/support/v4/view/ViewPager.html">ViewPager</a></code>.			
PagerSnapHelper	A										<section class="prog__container"><pre><code>public class PagerSnapHelper</code></pre>Implementation of the <code>SnapHelper</code> supporting pager style snapping in either vertical or horizontal orientation.</section>	https://developer.android.com/reference/android/support/v7/widget/PagerSnapHelper.html
PagerTabStrip	A										<section class="prog__container"><pre><code>public class PagerTabStrip</code></pre>PagerTabStrip is an interactive indicator of the current, next, and previous pages of a <code>ViewPager</code>. It is intended to be used as a child view of a ViewPager widget in your XML layout. Add it as a child of a ViewPager in your layout file and set its android:layout_gravity to TOP or BOTTOM to pin it to the top or bottom of the ViewPager. The title from each page is supplied by the method <code>getPageTitle(int)</code> in the adapter supplied to the ViewPager.</section>	https://developer.android.com/reference/android/support/v4/view/PagerTabStrip.html
PagerTitleStrip	A										<section class="prog__container"><pre><code>public class PagerTitleStrip</code></pre>PagerTitleStrip is a non-interactive indicator of the current, next, and previous pages of a <code>ViewPager</code>. It is intended to be used as a child view of a ViewPager widget in your XML layout. Add it as a child of a ViewPager in your layout file and set its android:layout_gravity to TOP or BOTTOM to pin it to the top or bottom of the ViewPager. The title from each page is supplied by the method <code>getPageTitle(int)</code> in the adapter supplied to the ViewPager.</section>	https://developer.android.com/reference/android/support/v4/view/PagerTitleStrip.html
Paint	A										<section class="prog__container"><pre><code>public class Paint</code></pre>The Paint class holds the style and color information about how to draw geometries, text and bitmaps.</section>	https://developer.android.com/reference/android/graphics/Paint.html
Paint.Align	A										<section class="prog__container"><pre><code>public static final enum Paint.Align</code></pre>Align specifies how drawText aligns its text relative to the [x,y] coordinates. The default is LEFT.</section>	https://developer.android.com/reference/android/graphics/Paint.Align.html
Paint.Cap	A										<section class="prog__container"><pre><code>public static final enum Paint.Cap</code></pre>The Cap specifies the treatment for the beginning and ending of stroked lines and paths. The default is BUTT.</section>	https://developer.android.com/reference/android/graphics/Paint.Cap.html
Paint.FontMetrics	A										<section class="prog__container"><pre><code>public static class Paint.FontMetrics</code></pre>Class that describes the various metrics for a font at a given text size. Remember, Y values increase going down, so those values will be positive, and values that measure distances going up will be negative. This class is returned by getFontMetrics().</section>	https://developer.android.com/reference/android/graphics/Paint.FontMetrics.html
Paint.FontMetricsInt	A										<section class="prog__container"><pre><code>public static class Paint.FontMetricsInt</code></pre>Convenience method for callers that want to have FontMetrics values as integers.</section>	https://developer.android.com/reference/android/graphics/Paint.FontMetricsInt.html
Paint.Join	A										<section class="prog__container"><pre><code>public static final enum Paint.Join</code></pre>The Join specifies the treatment where lines and curve segments join on a stroked path. The default is MITER.</section>	https://developer.android.com/reference/android/graphics/Paint.Join.html
Paint.Style	A										<section class="prog__container"><pre><code>public static final enum Paint.Style</code></pre>The Style specifies if the primitive being drawn is filled, stroked, or both (in the same color). The default is FILL.</section>	https://developer.android.com/reference/android/graphics/Paint.Style.html
PaintDrawable	A										<section class="prog__container"><pre><code>public class PaintDrawable</code></pre>Drawable that draws its bounds in the given paint, with optional rounded corners.</section>	https://developer.android.com/reference/android/graphics/drawable/PaintDrawable.html
PaintFlagsDrawFilter	A										<section class="prog__container"><pre><code>public class PaintFlagsDrawFilter</code></pre></section>	https://developer.android.com/reference/android/graphics/PaintFlagsDrawFilter.html
Pair	D								*[[v4.util.Pair]], <section class="prog__container"><pre><code>public class Pair</code></pre>Container to ease passing around a tuple of two objects. This object provides a sensible implementation of equals(), returning true if equals() is true on each of the contained objects.</section>\n*[[android.util.Pair]], <section class="prog__container"><pre><code>public class Pair</code></pre>Container to ease passing around a tuple of two objects. This object provides a sensible implementation of equals(), returning true if equals() is true on each of the contained objects.</section>			
Palette	A										<section class="prog__container"><pre><code>public final class Palette</code></pre>A helper class to extract prominent colors from an image.</section>	https://developer.android.com/reference/android/support/v7/graphics/Palette.html
Palette.Builder	A										<section class="prog__container"><pre><code>public static final class Palette.Builder</code></pre>Builder class for generating <code>Palette</code> instances.</section>	https://developer.android.com/reference/android/support/v7/graphics/Palette.Builder.html
Palette.Filter	A										<section class="prog__container"><pre><code>public static interface Palette.Filter</code></pre>A Filter provides a mechanism for exercising fine-grained control over which colors are valid within a resulting <code>Palette</code>.</section>	https://developer.android.com/reference/android/support/v7/graphics/Palette.Filter.html
Palette.PaletteAsyncListener	A										<section class="prog__container"><pre><code>public static interface Palette.PaletteAsyncListener</code></pre>Listener to be used with <code>generateAsync(Bitmap, PaletteAsyncListener)</code> or <code>generateAsync(Bitmap, int, PaletteAsyncListener)</code></section>	https://developer.android.com/reference/android/support/v7/graphics/Palette.PaletteAsyncListener.html
Palette.Swatch	A										<section class="prog__container"><pre><code>public static final class Palette.Swatch</code></pre>Represents a color swatch generated from an image's palette. The RGB color can be retrieved by calling <code>getRgb()</code>.</section>	https://developer.android.com/reference/android/support/v7/graphics/Palette.Swatch.html
ParagraphStyle	A										<section class="prog__container"><pre><code>public interface ParagraphStyle</code></pre>The classes that affect paragraph-level text formatting implement this interface.</section>	https://developer.android.com/reference/android/text/style/ParagraphStyle.html
ParallelExecutorCompat	A										<section class="prog__container"><pre><code>public final class ParallelExecutorCompat</code></pre>Helper for accessing a shared parallel Executor instance introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/content/ParallelExecutorCompat.html
ParameterMetaData	A										<section class="prog__container"><pre><code>public interface ParameterMetaData</code></pre>An object that can be used to get information about the types and properties for each parameter marker in a <code>PreparedStatement</code> object. For some queries and driver implementations, the data that would be returned by a <code>ParameterMetaData</code> object may not be available until the <code>PreparedStatement</code> has been executed.</section>	https://developer.android.com/reference/java/sql/ParameterMetaData.html
ParameterizedType	A										<section class="prog__container"><pre><code>public interface ParameterizedType</code></pre>ParameterizedType represents a parameterized type such as Collection&lt;String&gt;.</section>	https://developer.android.com/reference/java/lang/reflect/ParameterizedType.html
Parcel	A										<section class="prog__container"><pre><code>public final class Parcel</code></pre>Container for a message (data and object references) that can be sent through an IBinder. A Parcel can contain both flattened data that will be unflattened on the other side of the IPC (using the various methods here for writing specific types, or the general <code>Parcelable</code> interface), and references to live <code>IBinder</code> objects that will result in the other side receiving a proxy IBinder connected with the original IBinder in the Parcel. <p class="note">Parcel is <strong>not</strong> a general-purpose serialization mechanism. This class (and the corresponding <code>Parcelable</code> API for placing arbitrary objects into a Parcel) is designed as a high-performance IPC transport. As such, it is not appropriate to place any Parcel data in to persistent storage: changes in the underlying implementation of any of the data in the Parcel can render older data unreadable.</section>	https://developer.android.com/reference/android/os/Parcel.html
ParcelFileDescriptor	A										<section class="prog__container"><pre><code>public class ParcelFileDescriptor</code></pre>The FileDescriptor returned by <code>readFileDescriptor()</code>, allowing you to close it when done with it.</section>	https://developer.android.com/reference/android/os/ParcelFileDescriptor.html
ParcelFileDescriptor.AutoCloseInputStream	A										<section class="prog__container"><pre><code>public static class ParcelFileDescriptor.AutoCloseInputStream</code></pre>An InputStream you can create on a ParcelFileDescriptor, which will take care of calling <code>ParcelFileDescriptor.close()</code> for you when the stream is closed.</section>	https://developer.android.com/reference/android/os/ParcelFileDescriptor.AutoCloseInputStream.html
ParcelFileDescriptor.AutoCloseOutputStream	A										<section class="prog__container"><pre><code>public static class ParcelFileDescriptor.AutoCloseOutputStream</code></pre>An OutputStream you can create on a ParcelFileDescriptor, which will take care of calling <code>ParcelFileDescriptor.close()</code> for you when the stream is closed.</section>	https://developer.android.com/reference/android/os/ParcelFileDescriptor.AutoCloseOutputStream.html
ParcelFileDescriptor.FileDescriptorDetachedException	A										<section class="prog__container"><pre><code>public static class ParcelFileDescriptor.FileDescriptorDetachedException</code></pre>Exception that indicates that the file descriptor was detached.</section>	https://developer.android.com/reference/android/os/ParcelFileDescriptor.FileDescriptorDetachedException.html
ParcelFileDescriptor.OnCloseListener	A										<section class="prog__container"><pre><code>public static interface ParcelFileDescriptor.OnCloseListener</code></pre>Callback indicating that a ParcelFileDescriptor has been closed.</section>	https://developer.android.com/reference/android/os/ParcelFileDescriptor.OnCloseListener.html
ParcelFormatException	A										<section class="prog__container"><pre><code>public class ParcelFormatException</code></pre>The contents of a Parcel (usually during unmarshalling) does not contain the expected data.</section>	https://developer.android.com/reference/android/os/ParcelFormatException.html
ParcelUuid	A										<section class="prog__container"><pre><code>public final class ParcelUuid</code></pre>This class is a Parcelable wrapper around <code>UUID</code> which is an immutable representation of a 128-bit universally unique identifier.</section>	https://developer.android.com/reference/android/os/ParcelUuid.html
Parcelable	A										<section class="prog__container"><pre><code>public interface Parcelable</code></pre>Interface for classes whose instances can be written to and restored from a <code>Parcel</code>. Classes implementing the Parcelable interface must also have a non-null static field called <code>CREATOR</code> of a type that implements the <code>Parcelable.Creator</code> interface.</section>	https://developer.android.com/reference/android/os/Parcelable.html
Parcelable.ClassLoaderCreator	A										<section class="prog__container"><pre><code>public static interface Parcelable.ClassLoaderCreator</code></pre>Specialization of <code>Parcelable.Creator</code> that allows you to receive the ClassLoader the object is being created in.</section>	https://developer.android.com/reference/android/os/Parcelable.ClassLoaderCreator.html
Parcelable.Creator	A										<section class="prog__container"><pre><code>public static interface Parcelable.Creator</code></pre>Interface that must be implemented and provided as a public CREATOR field that generates instances of your Parcelable class from a Parcel.</section>	https://developer.android.com/reference/android/os/Parcelable.Creator.html
ParcelableCompat	A										<section class="prog__container"><pre><code>public final class ParcelableCompat</code></pre>Helper for accessing features in <code>Parcelable</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/os/ParcelableCompat.html
ParcelableCompatCreatorCallbacks	A										<section class="prog__container"><pre><code>public interface ParcelableCompatCreatorCallbacks</code></pre>Callbacks a <code>Parcelable</code> creator should implement.</section>	https://developer.android.com/reference/android/support/v4/os/ParcelableCompatCreatorCallbacks.html
ParcelableSpan	A										<section class="prog__container"><pre><code>public interface ParcelableSpan</code></pre>A special kind of Parcelable for objects that will serve as text spans. This can only be used by code in the framework; it is not intended for applications to implement their own Parcelable spans.</section>	https://developer.android.com/reference/android/text/ParcelableSpan.html
ParcelableVolumeInfo	A										<section class="prog__container"><pre><code>public class ParcelableVolumeInfo</code></pre>Convenience class for passing information about the audio configuration of a <code>MediaSessionCompat</code>.</section>	https://developer.android.com/reference/android/support/v4/media/session/ParcelableVolumeInfo.html
ParseException	D								*[[net.ParseException]], <section class="prog__container"><pre><code>public class ParseException</code></pre>Thrown when parsing a URL fails.</section>\n*[[text.ParseException]], <section class="prog__container"><pre><code>public class ParseException</code></pre>Signals that an error has been reached unexpectedly while parsing.</section>			
ParsePosition	A										<section class="prog__container"><pre><code>public class ParsePosition</code></pre><code>ParsePosition</code> is a simple class used by <code>Format</code> and its subclasses to keep track of the current position during parsing. The <code>parseObject</code> method in the various <code>Format</code> classes requires a <code>ParsePosition</code> object as an argument.</section>	https://developer.android.com/reference/java/text/ParsePosition.html
Parser	A										<section class="prog__container"><pre><code>public interface Parser</code></pre><p class="caution"><strong> This interface was deprecated in API level 1.</strong><br/> This interface has been replaced by the SAX2 <code>XMLReader</code> interface, which includes Namespace support.</section>	https://developer.android.com/reference/org/xml/sax/Parser.html
ParserAdapter	A										<section class="prog__container"><pre><code>public class ParserAdapter</code></pre>Adapt a SAX1 Parser as a SAX2 XMLReader. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/helpers/ParserAdapter.html
ParserConfigurationException	A										<section class="prog__container"><pre><code>public class ParserConfigurationException</code></pre>Indicates a serious configuration error.</section>	https://developer.android.com/reference/javax/xml/parsers/ParserConfigurationException.html
ParserFactory	A										<section class="prog__container"><pre><code>public class ParserFactory</code></pre><p class="caution"><strong> This class was deprecated in API level 1.</strong><br/> This class works with the deprecated <code>Parser</code> interface.</section>	https://developer.android.com/reference/org/xml/sax/helpers/ParserFactory.html
PasswordAuthentication	A										<section class="prog__container"><pre><code>public final class PasswordAuthentication</code></pre>The class PasswordAuthentication is a data holder that is used by Authenticator. It is simply a repository for a user name and a password.</section>	https://developer.android.com/reference/java/net/PasswordAuthentication.html
PasswordCallback	A										<section class="prog__container"><pre><code>public class PasswordCallback</code></pre></section>	https://developer.android.com/reference/javax/security/auth/callback/PasswordCallback.html
PasswordEntryKeyboard	A										A basic, embed-able keyboard designed for password entry.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
PasswordTransformationMethod	A										<section class="prog__container"><pre><code>public class PasswordTransformationMethod</code></pre></section>	https://developer.android.com/reference/android/text/method/PasswordTransformationMethod.html
Path	A										<section class="prog__container"><pre><code>public class Path</code></pre>The Path class encapsulates compound (multiple contour) geometric paths consisting of straight line segments, quadratic curves, and cubic curves. It can be drawn with canvas.drawPath(path, paint), either filled or stroked (based on the paint's Style), or it can be used for clipping or to draw text on a path.</section>	https://developer.android.com/reference/android/graphics/Path.html
Path.Direction	A										<section class="prog__container"><pre><code>public static final enum Path.Direction</code></pre>Specifies how closed shapes (e.g. rects, ovals) are oriented when they are added to a path.</section>	https://developer.android.com/reference/android/graphics/Path.Direction.html
Path.FillType	A										<section class="prog__container"><pre><code>public static final enum Path.FillType</code></pre>Enum for the ways a path may be filled.</section>	https://developer.android.com/reference/android/graphics/Path.FillType.html
Path.Op	A										<section class="prog__container"><pre><code>public static final enum Path.Op</code></pre>The logical operations that can be performed when combining two paths.</section>	https://developer.android.com/reference/android/graphics/Path.Op.html
PathClassLoader	A										<section class="prog__container"><pre><code>public class PathClassLoader</code></pre>Provides a simple <code>ClassLoader</code> implementation that operates on a list of files and directories in the local file system, but does not attempt to load classes from the network. Android uses this class for its system class loader and for its application class loader(s).</section>	https://developer.android.com/reference/dalvik/system/PathClassLoader.html
PathDashPathEffect	A										<section class="prog__container"><pre><code>public class PathDashPathEffect</code></pre></section>	https://developer.android.com/reference/android/graphics/PathDashPathEffect.html
PathDashPathEffect.Style	A										<section class="prog__container"><pre><code>public static final enum PathDashPathEffect.Style</code></pre></section>	https://developer.android.com/reference/android/graphics/PathDashPathEffect.Style.html
PathEffect	A										<section class="prog__container"><pre><code>public class PathEffect</code></pre>PathEffect is the base class for objects in the Paint that affect the geometry of a drawing primitive before it is transformed by the canvas' matrix and drawn.</section>	https://developer.android.com/reference/android/graphics/PathEffect.html
PathInterpolator	A										<section class="prog__container"><pre><code>public class PathInterpolator</code></pre>An interpolator that can traverse a Path that extends from <code>Point</code> <code>(0, 0)</code> to <code>(1, 1)</code>. The x coordinate along the <code>Path</code> is the input value and the output is the y coordinate of the line at that point. This means that the Path must conform to a function <code>y = f(x)</code>.</section>	https://developer.android.com/reference/android/view/animation/PathInterpolator.html
PathInterpolatorCompat	A										<section class="prog__container"><pre><code>public final class PathInterpolatorCompat</code></pre>Helper for creating path-based <code>Interpolator</code> instances. On API 21 or newer, the platform implementation will be used and on older platforms a compatible alternative implementation will be used.</section>	https://developer.android.com/reference/android/support/v4/view/animation/PathInterpolatorCompat.html
PathMeasure	A										<section class="prog__container"><pre><code>public class PathMeasure</code></pre></section>	https://developer.android.com/reference/android/graphics/PathMeasure.html
PathMotion	A										<section class="prog__container"><pre><code>public abstract class PathMotion</code></pre>This base class can be extended to provide motion along a Path to Transitions.</section>	https://developer.android.com/reference/android/transition/PathMotion.html
PathPermission	A										<section class="prog__container"><pre><code>public class PathPermission</code></pre>Description of permissions needed to access a particular path in a <code>ProviderInfo</code>.</section>	https://developer.android.com/reference/android/content/pm/PathPermission.html
PathShape	A										<section class="prog__container"><pre><code>public class PathShape</code></pre>Creates geometric paths, utilizing the <code>Path</code> class. The path can be drawn to a Canvas with its own draw() method, but more graphical control is available if you instead pass the PathShape to a <code>ShapeDrawable</code>.</section>	https://developer.android.com/reference/android/graphics/drawable/shapes/PathShape.html
Pattern	A										<section class="prog__container"><pre><code>public final class Pattern</code></pre>A compiled representation of a regular expression.</section>	https://developer.android.com/reference/java/util/regex/Pattern.html
PatternMatcher	A										<section class="prog__container"><pre><code>public class PatternMatcher</code></pre>A simple pattern matcher, which is safe to use on untrusted data: it does not provide full reg-exp support, only simple globbing that can not be used maliciously.</section>	https://developer.android.com/reference/android/os/PatternMatcher.html
PatternPathMotion	A										<section class="prog__container"><pre><code>public class PatternPathMotion</code></pre>A PathMotion that takes a Path pattern and applies it to the separation between two points. The starting point of the Path will be moved to the origin and the end point will be scaled and rotated so that it matches with the target end point.</section>	https://developer.android.com/reference/android/transition/PatternPathMotion.html
PatternSyntaxException	A										<section class="prog__container"><pre><code>public class PatternSyntaxException</code></pre>Unchecked exception thrown to indicate a syntax error in a regular-expression pattern.</section>	https://developer.android.com/reference/java/util/regex/PatternSyntaxException.html
Patterns	A										<section class="prog__container"><pre><code>public class Patterns</code></pre>Commonly used regular expression patterns.</section>	https://developer.android.com/reference/android/util/Patterns.html
PatternsCompat	A										<section class="prog__container"><pre><code>public final class PatternsCompat</code></pre>Commonly used regular expression patterns.</section>	https://developer.android.com/reference/android/support/v4/util/PatternsCompat.html
PdfDocument	A										<section class="prog__container"><pre><code>public class PdfDocument</code></pre></section>	https://developer.android.com/reference/android/graphics/pdf/PdfDocument.html
PdfDocument.Page	A										<section class="prog__container"><pre><code>public static final class PdfDocument.Page</code></pre>This class represents a PDF document page. It has associated a canvas on which you can draw content and is acquired by a call to <code>getCanvas()</code>. It also has associated a <code>PdfDocument.PageInfo</code> instance that describes its attributes. Also a page has</section>	https://developer.android.com/reference/android/graphics/pdf/PdfDocument.Page.html
PdfDocument.PageInfo	A										<section class="prog__container"><pre><code>public static final class PdfDocument.PageInfo</code></pre>This class represents meta-data that describes a PDF <code>PdfDocument.Page</code>.</section>	https://developer.android.com/reference/android/graphics/pdf/PdfDocument.PageInfo.html
PdfDocument.PageInfo.Builder	A										<section class="prog__container"><pre><code>public static final class PdfDocument.PageInfo.Builder</code></pre>Builder for creating a <code>PdfDocument.PageInfo</code>.</section>	https://developer.android.com/reference/android/graphics/pdf/PdfDocument.PageInfo.Builder.html
PdfRenderer	A										<section class="prog__container"><pre><code>public final class PdfRenderer</code></pre></section>	https://developer.android.com/reference/android/graphics/pdf/PdfRenderer.html
PdfRenderer.Page	A										<section class="prog__container"><pre><code>public final class PdfRenderer.Page</code></pre>This class represents a PDF document page for rendering.</section>	https://developer.android.com/reference/android/graphics/pdf/PdfRenderer.Page.html
PendingIntent	A										<section class="prog__container"><pre><code>public final class PendingIntent</code></pre>A description of an Intent and target action to perform with it. Instances of this class are created with <code>getActivity(Context, int, Intent, int)</code>, <code>getActivities(Context, int, Intent[], int)</code>, <code>getBroadcast(Context, int, Intent, int)</code>, and <code>getService(Context, int, Intent, int)</code>; the returned object can be handed to other applications so that they can perform the action you described on your behalf at a later time.</section>	https://developer.android.com/reference/android/app/PendingIntent.html
PendingIntent.CanceledException	A										<section class="prog__container"><pre><code>public static class PendingIntent.CanceledException</code></pre>Exception thrown when trying to send through a PendingIntent that has been canceled or is otherwise no longer able to execute the request.</section>	https://developer.android.com/reference/android/app/PendingIntent.CanceledException.html
PendingIntent.OnFinished	A										<section class="prog__container"><pre><code>public static interface PendingIntent.OnFinished</code></pre>Callback interface for discovering when a send operation has completed. Primarily for use with a PendingIntent that is performing a broadcast, this provides the same information as calling <code>Context.sendBroadcast()</code> with a final BroadcastReceiver.</section>	https://developer.android.com/reference/android/app/PendingIntent.OnFinished.html
PercentFrameLayout	A										<section class="prog__container"><pre><code>public class PercentFrameLayout</code></pre>Subclass of <code>FrameLayout</code> that supports percentage based dimensions and margins. You can specify dimension or a margin of child by using attributes with "Percent" suffix. Follow this example: <pre class="prettyprint"> &lt;android.support.percent.PercentFrameLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:app="http://schemas.android.com/apk/res-auto" android:layout_width="match_parent" android:layout_height="match_parent"&gt; &lt;ImageView app:layout_widthPercent="50%" app:layout_heightPercent="50%" app:layout_marginTopPercent="25%" app:layout_marginLeftPercent="25%"/&gt; &lt;/android.support.percent.PercentFrameLayout&gt; </pre> The attributes that you can use are: <ul> <li><code>layout_widthPercent</code> <li><code>layout_heightPercent</code> <li><code>layout_marginPercent</code> <li><code>layout_marginLeftPercent</code> <li><code>layout_marginTopPercent</code> <li><code>layout_marginRightPercent</code> <li><code>layout_marginBottomPercent</code> <li><code>layout_marginStartPercent</code> <li><code>layout_marginEndPercent</code> <li><code>layout_aspectRatio</code> </li></li></li></li></li></li></li></li></li></li></ul> It is not necessary to specify <code>layout_width/height</code> if you specify <code>layout_widthPercent.</code> However, if you want the view to be able to take up more space than what percentage value permits, you can add <code>layout_width/height="wrap_content"</code>. In that case if the percentage size is too small for the View's content, it will be resized using <code>wrap_content</code> rule.</section>	https://developer.android.com/reference/android/support/percent/PercentFrameLayout.html
PercentFrameLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class PercentFrameLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/percent/PercentFrameLayout.LayoutParams.html
PercentLayoutHelper	A										<section class="prog__container"><pre><code>public class PercentLayoutHelper</code></pre>Helper for layouts that want to support percentage based dimensions.</section>	https://developer.android.com/reference/android/support/percent/PercentLayoutHelper.html
PercentLayoutHelper.PercentLayoutInfo	A										<section class="prog__container"><pre><code>public static class PercentLayoutHelper.PercentLayoutInfo</code></pre>Container for information about percentage dimensions and margins. It acts as an extension for <code>LayoutParams</code>.</section>	https://developer.android.com/reference/android/support/percent/PercentLayoutHelper.PercentLayoutInfo.html
PercentLayoutHelper.PercentLayoutParams	A										<section class="prog__container"><pre><code>public static interface PercentLayoutHelper.PercentLayoutParams</code></pre>If a layout wants to support percentage based dimensions and use this helper class, its <code>LayoutParams</code> subclass must implement this interface. Your <code>LayoutParams</code> subclass should contain an instance of <code>PercentLayoutInfo</code> and the implementation of this interface should be a simple accessor.</section>	https://developer.android.com/reference/android/support/percent/PercentLayoutHelper.PercentLayoutParams.html
PercentRelativeLayout	A										<section class="prog__container"><pre><code>public class PercentRelativeLayout</code></pre>Subclass of <code>RelativeLayout</code> that supports percentage based dimensions and margins. You can specify dimension or a margin of child by using attributes with "Percent" suffix. Follow this example: <pre class="prettyprint"> &lt;android.support.percent.PercentRelativeLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:app="http://schemas.android.com/apk/res-auto" android:layout_width="match_parent" android:layout_height="match_parent"&gt; &lt;ImageView app:layout_widthPercent="50%" app:layout_heightPercent="50%" app:layout_marginTopPercent="25%" app:layout_marginLeftPercent="25%"/&gt; &lt;/android.support.percent.PercentRelativeLayout&gt; </pre> The attributes that you can use are: <ul> <li><code>layout_widthPercent</code> <li><code>layout_heightPercent</code> <li><code>layout_marginPercent</code> <li><code>layout_marginLeftPercent</code> <li><code>layout_marginTopPercent</code> <li><code>layout_marginRightPercent</code> <li><code>layout_marginBottomPercent</code> <li><code>layout_marginStartPercent</code> <li><code>layout_marginEndPercent</code> <li><code>layout_aspectRatio</code> </li></li></li></li></li></li></li></li></li></li></ul> It is not necessary to specify <code>layout_width/height</code> if you specify <code>layout_widthPercent.</code> However, if you want the view to be able to take up more space than what percentage value permits, you can add <code>layout_width/height="wrap_content"</code>. In that case if the percentage size is too small for the View's content, it will be resized using <code>wrap_content</code> rule.</section>	https://developer.android.com/reference/android/support/percent/PercentRelativeLayout.html
PercentRelativeLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class PercentRelativeLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/percent/PercentRelativeLayout.LayoutParams.html
PerformanceTestCase	A										<section class="prog__container"><pre><code>public interface PerformanceTestCase</code></pre>More complex interface performance for test cases. If you want your test to be used as a performance test, you must implement this interface.</section>	https://developer.android.com/reference/android/test/PerformanceTestCase.html
PerformanceTestCase.Intermediates	A										<section class="prog__container"><pre><code>public static interface PerformanceTestCase.Intermediates</code></pre>Callbacks for <code>PerformanceTestCase</code>.</section>	https://developer.android.com/reference/android/test/PerformanceTestCase.Intermediates.html
PeriodicSync	A										<section class="prog__container"><pre><code>public class PeriodicSync</code></pre>Value type that contains information about a periodic sync.</section>	https://developer.android.com/reference/android/content/PeriodicSync.html
Permission	D								*[[security.Permission]], <section class="prog__container"><pre><code>public abstract class Permission</code></pre>Legacy security code; do not use.</section>\n*[[acl.Permission]], <section class="prog__container"><pre><code>public interface Permission</code></pre>Legacy security code; do not use.</section>			
PermissionChecker	A										<section class="prog__container"><pre><code>public final class PermissionChecker</code></pre>This class provides permission check APIs that verify both the permission and the associated app op for this permission if such is defined.</section>	https://developer.android.com/reference/android/support/v4/content/PermissionChecker.html
PermissionChecker.PermissionResult	A										<section class="prog__container"><pre><code>public static abstract @interface PermissionChecker.PermissionResult</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/PermissionChecker.PermissionResult.html
PermissionCollection	A										<section class="prog__container"><pre><code>public abstract class PermissionCollection</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/security/PermissionCollection.html
PermissionGroupInfo	A										<section class="prog__container"><pre><code>public class PermissionGroupInfo</code></pre>Information you can retrieve about a particular security permission group known to the system. This corresponds to information collected from the AndroidManifest.xml's &lt;permission-group&gt; tags.</section>	https://developer.android.com/reference/android/content/pm/PermissionGroupInfo.html
PermissionInfo	A										<section class="prog__container"><pre><code>public class PermissionInfo</code></pre>Information you can retrieve about a particular security permission known to the system. This corresponds to information collected from the AndroidManifest.xml's &lt;permission&gt; tags.</section>	https://developer.android.com/reference/android/content/pm/PermissionInfo.html
PermissionRequest	A										<section class="prog__container"><pre><code>public abstract class PermissionRequest</code></pre>This class defines a permission request and is used when web content requests access to protected resources. The permission request related events are delivered via <code>onPermissionRequest(PermissionRequest)</code> and <code>onPermissionRequestCanceled(PermissionRequest)</code>. Either <code>grant()</code> or <code>deny()</code> must be called in UI thread to respond to the request. New protected resources whose names are not defined here may be requested in future versions of WebView, even when running on an older Android release. To avoid unintentionally granting requests for new permissions, you should pass the specific permissions you intend to grant to <code>grant()</code>, and avoid writing code like this example: <pre> permissionRequest.grant(permissionRequest.getResources()) // This is wrong!!! </pre> See the WebView's release notes for information about new protected resources.</section>	https://developer.android.com/reference/android/webkit/PermissionRequest.html
Permissions	A										<section class="prog__container"><pre><code>public final class Permissions</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/security/Permissions.html
PersistableBundle	A										<section class="prog__container"><pre><code>public final class PersistableBundle</code></pre>A mapping from String keys to values of various types. The set of types supported by this class is purposefully restricted to simple objects that can safely be persisted to and restored from disk.</section>	https://developer.android.com/reference/android/os/PersistableBundle.html
PhantomReference	A										<section class="prog__container"><pre><code>public class PhantomReference</code></pre>Phantom reference objects, which are enqueued after the collector determines that their referents may otherwise be reclaimed. Phantom references are most often used for scheduling pre-mortem cleanup actions in a more flexible way than is possible with the Java finalization mechanism.</section>	https://developer.android.com/reference/java/lang/ref/PhantomReference.html
Phaser	A										<section class="prog__container"><pre><code>public class Phaser</code></pre>A reusable synchronization barrier, similar in functionality to <code>CyclicBarrier</code> and <code>CountDownLatch</code> but supporting more flexible usage.</section>	https://developer.android.com/reference/java/util/concurrent/Phaser.html
PhoneAccount	A										<section class="prog__container"><pre><code>public final class PhoneAccount</code></pre>Represents a distinct method to place or receive a phone call. Apps which can place calls and want those calls to be integrated into the dialer and in-call UI should build an instance of this class and register it with the system using <code>TelecomManager</code>.</section>	https://developer.android.com/reference/android/telecom/PhoneAccount.html
PhoneAccount.Builder	A										<section class="prog__container"><pre><code>public static class PhoneAccount.Builder</code></pre>Helper class for creating a <code>PhoneAccount</code>.</section>	https://developer.android.com/reference/android/telecom/PhoneAccount.Builder.html
PhoneAccountHandle	A										<section class="prog__container"><pre><code>public final class PhoneAccountHandle</code></pre>The unique identifier for a <code>PhoneAccount</code>. A <code>PhoneAccountHandle</code> is made of two parts: <ul> <li>The component name of the associated connection service.</li> <li>A string identifier that is unique across <code>PhoneAccountHandle</code>s with the same component name.</li> </ul> Note: This Class requires a non-null <code>ComponentName</code> and <code>UserHandle</code> to operate properly. Passing in invalid parameters will generate a log warning. See <code>PhoneAccount</code>, <code>TelecomManager</code>.</section>	https://developer.android.com/reference/android/telecom/PhoneAccountHandle.html
PhoneNumberFormattingTextWatcher	A										<section class="prog__container"><pre><code>public class PhoneNumberFormattingTextWatcher</code></pre>Watches a <code>TextView</code> and if a phone number is entered will format it.</section>	https://developer.android.com/reference/android/telephony/PhoneNumberFormattingTextWatcher.html
PhoneNumberUtils	A										<section class="prog__container"><pre><code>public class PhoneNumberUtils</code></pre>Various utilities for dealing with phone number strings.</section>	https://developer.android.com/reference/android/telephony/PhoneNumberUtils.html
PhoneStateListener	A										<section class="prog__container"><pre><code>public class PhoneStateListener</code></pre>A listener class for monitoring changes in specific telephony states on the device, including service state, signal strength, message waiting indicator (voicemail), and others.</section>	https://developer.android.com/reference/android/telephony/PhoneStateListener.html
Picker	A										<section class="prog__container"><pre><code>public class Picker</code></pre>Picker is a widget showing multiple customized <code>PickerColumn</code>s. The PickerColumns are initialized in <code>setColumns(List)</code>. Call <code>setColumnAt(int, PickerColumn)</code> if the column value range or labels change. Call <code>setColumnValue(int, int, boolean)</code> to update the current value of PickerColumn.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/picker/Picker.html
Picker.PickerValueListener	A										<section class="prog__container"><pre><code>public static interface Picker.PickerValueListener</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/picker/Picker.PickerValueListener.html
PickerColumn	A										<section class="prog__container"><pre><code>public class PickerColumn</code></pre>Picker column class used by <code>Picker</code>, defines a contiguous value ranges and associated labels. A PickerColumn has a minValue and maxValue to choose between. The Picker column has a current value. The labels can be dynamically generated from value by <code>setLabelFormat(String)</code> or a list of static labels set by <code>setStaticLabels(CharSequence[])</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/picker/PickerColumn.html
Picture	A										<section class="prog__container"><pre><code>public class Picture</code></pre>A Picture records drawing calls (via the canvas returned by beginRecording) and can then play them back into Canvas (via <code>draw(Canvas)</code> or <code>drawPicture(Picture)</code>).For most content (e.g. text, lines, rectangles), drawing a sequence from a picture can be faster than the equivalent API calls, since the picture performs its playback without incurring any method-call overhead. <p class="note"><strong>Note:</strong> Prior to API level 23 a picture cannot be replayed on a hardware accelerated canvas.</section>	https://developer.android.com/reference/android/graphics/Picture.html
PictureDrawable	A										<section class="prog__container"><pre><code>public class PictureDrawable</code></pre>Drawable subclass that wraps a Picture, allowing the picture to be used wherever a Drawable is supported.</section>	https://developer.android.com/reference/android/graphics/drawable/PictureDrawable.html
PidHealthStats	A										<section class="prog__container"><pre><code>public final class PidHealthStats</code></pre>Keys for <code>HealthStats</code> returned from <code>HealthStats.getStats(int)</code> with the <code>UidHealthStats.STATS_PIDS</code> key.</section>	https://developer.android.com/reference/android/os/health/PidHealthStats.html
Pipe	A										<section class="prog__container"><pre><code>public abstract class Pipe</code></pre>A pair of channels that implements a unidirectional pipe.</section>	https://developer.android.com/reference/java/nio/channels/Pipe.html
Pipe.SinkChannel	A										<section class="prog__container"><pre><code>public static abstract class Pipe.SinkChannel</code></pre>A channel representing the writable end of a <code>Pipe</code>.</section>	https://developer.android.com/reference/java/nio/channels/Pipe.SinkChannel.html
Pipe.SourceChannel	A										<section class="prog__container"><pre><code>public static abstract class Pipe.SourceChannel</code></pre>A channel representing the readable end of a <code>Pipe</code>.</section>	https://developer.android.com/reference/java/nio/channels/Pipe.SourceChannel.html
PipedInputStream	A										<section class="prog__container"><pre><code>public class PipedInputStream</code></pre>A piped input stream should be connected to a piped output stream; the piped input stream then provides whatever data bytes are written to the piped output stream. Typically, data is read from a <code>PipedInputStream</code> object by one thread and data is written to the corresponding <code>PipedOutputStream</code> by some other thread. Attempting to use both objects from a single thread is not recommended, as it may deadlock the thread. The piped input stream contains a buffer, decoupling read operations from write operations, within limits. A pipe is said to be <i>broken</i> if a thread that was providing data bytes to the connected piped output stream is no longer alive.</section>	https://developer.android.com/reference/java/io/PipedInputStream.html
PipedOutputStream	A										<section class="prog__container"><pre><code>public class PipedOutputStream</code></pre>A piped output stream can be connected to a piped input stream to create a communications pipe. The piped output stream is the sending end of the pipe. Typically, data is written to a <code>PipedOutputStream</code> object by one thread and data is read from the connected <code>PipedInputStream</code> by some other thread. Attempting to use both objects from a single thread is not recommended as it may deadlock the thread. The pipe is said to be <i>broken</i> if a thread that was reading data bytes from the connected piped input stream is no longer alive.</section>	https://developer.android.com/reference/java/io/PipedOutputStream.html
PipedReader	A										<section class="prog__container"><pre><code>public class PipedReader</code></pre>Piped character-input streams.</section>	https://developer.android.com/reference/java/io/PipedReader.html
PipedWriter	A										<section class="prog__container"><pre><code>public class PipedWriter</code></pre>Piped character-output streams.</section>	https://developer.android.com/reference/java/io/PipedWriter.html
PixelCopy	A										<section class="prog__container"><pre><code>public final class PixelCopy</code></pre>Provides a mechanisms to issue pixel copy requests to allow for copy operations from <code>Surface</code> to <code>Bitmap</code></section>	https://developer.android.com/reference/android/view/PixelCopy.html
PixelCopy.OnPixelCopyFinishedListener	A										<section class="prog__container"><pre><code>public static interface PixelCopy.OnPixelCopyFinishedListener</code></pre>Listener for observing the completion of a PixelCopy request.</section>	https://developer.android.com/reference/android/view/PixelCopy.OnPixelCopyFinishedListener.html
PixelFormat	A										<section class="prog__container"><pre><code>public class PixelFormat</code></pre></section>	https://developer.android.com/reference/android/graphics/PixelFormat.html
PlaybackControlGlue	A										<section class="prog__container"><pre><code>public abstract class PlaybackControlGlue</code></pre><p class="caution"><strong> This class is deprecated.</strong><br/> Use <code>PlaybackControlGlue</code></section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackControlGlue.html
PlaybackControlGlue.InputEventHandler	A										<section class="prog__container"><pre><code>public static interface PlaybackControlGlue.InputEventHandler</code></pre><p class="caution"><strong> This interface is deprecated.</strong><br/> Use <code>setOnKeyInterceptListener(View.OnKeyListener)</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackControlGlue.InputEventHandler.html
PlaybackControlSupportGlue	A										<section class="prog__container"><pre><code>public abstract class PlaybackControlSupportGlue</code></pre><p class="caution"><strong> This class is deprecated.</strong><br/> Use <code>PlaybackControlGlue</code> and <code>PlaybackSupportFragmentGlueHost</code> for <code>PlaybackSupportFragment</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackControlSupportGlue.html
PlaybackControlsRow	A										<section class="prog__container"><pre><code>public class PlaybackControlsRow</code></pre>A <code>Row</code> of playback controls to be displayed by a <code>PlaybackControlsRowPresenter</code>. This row consists of some optional item detail, a series of primary actions, and an optional series of secondary actions.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.html
PlaybackControlsRow.ClosedCaptioningAction	A										<section class="prog__container"><pre><code>public static class PlaybackControlsRow.ClosedCaptioningAction</code></pre>An action for displaying a CC (Closed Captioning) icon.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.ClosedCaptioningAction.html
PlaybackControlsRow.FastForwardAction	A										<section class="prog__container"><pre><code>public static class PlaybackControlsRow.FastForwardAction</code></pre>An action displaying an icon for fast forward.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.FastForwardAction.html
PlaybackControlsRow.HighQualityAction	A										<section class="prog__container"><pre><code>public static class PlaybackControlsRow.HighQualityAction</code></pre>An action for displaying a HQ (High Quality) icon.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.HighQualityAction.html
PlaybackControlsRow.MoreActions	A										<section class="prog__container"><pre><code>public static class PlaybackControlsRow.MoreActions</code></pre>An action displaying an icon for "more actions".</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.MoreActions.html
PlaybackControlsRow.MultiAction	A										<section class="prog__container"><pre><code>public static abstract class PlaybackControlsRow.MultiAction</code></pre>Base class for an action comprised of a series of icons.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.MultiAction.html
PlaybackControlsRow.PictureInPictureAction	A										<section class="prog__container"><pre><code>public static class PlaybackControlsRow.PictureInPictureAction</code></pre>An action displaying an icon for picture-in-picture.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.PictureInPictureAction.html
PlaybackControlsRow.PlayPauseAction	A										<section class="prog__container"><pre><code>public static class PlaybackControlsRow.PlayPauseAction</code></pre>An action displaying icons for play and pause.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.PlayPauseAction.html
PlaybackControlsRow.RepeatAction	A										<section class="prog__container"><pre><code>public static class PlaybackControlsRow.RepeatAction</code></pre>An action for displaying three repeat states: none, one, or all.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.RepeatAction.html
PlaybackControlsRow.RewindAction	A										<section class="prog__container"><pre><code>public static class PlaybackControlsRow.RewindAction</code></pre>An action displaying an icon for rewind.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.RewindAction.html
PlaybackControlsRow.ShuffleAction	A										<section class="prog__container"><pre><code>public static class PlaybackControlsRow.ShuffleAction</code></pre>An action for displaying a shuffle icon.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.ShuffleAction.html
PlaybackControlsRow.SkipNextAction	A										<section class="prog__container"><pre><code>public static class PlaybackControlsRow.SkipNextAction</code></pre>An action displaying an icon for skip next.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.SkipNextAction.html
PlaybackControlsRow.SkipPreviousAction	A										<section class="prog__container"><pre><code>public static class PlaybackControlsRow.SkipPreviousAction</code></pre>An action displaying an icon for skip previous.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.SkipPreviousAction.html
PlaybackControlsRow.ThumbsAction	A										<section class="prog__container"><pre><code>public static abstract class PlaybackControlsRow.ThumbsAction</code></pre>A base class for displaying a thumbs action.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.ThumbsAction.html
PlaybackControlsRow.ThumbsDownAction	A										<section class="prog__container"><pre><code>public static class PlaybackControlsRow.ThumbsDownAction</code></pre>An action displaying an icon for thumbs down.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.ThumbsDownAction.html
PlaybackControlsRow.ThumbsUpAction	A										<section class="prog__container"><pre><code>public static class PlaybackControlsRow.ThumbsUpAction</code></pre>An action displaying an icon for thumbs up.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRow.ThumbsUpAction.html
PlaybackControlsRowPresenter	A										<section class="prog__container"><pre><code>public class PlaybackControlsRowPresenter</code></pre>A PlaybackControlsRowPresenter renders a <code>PlaybackControlsRow</code> to display a series of playback control buttons. Typically this row will be the first row in a fragment such as the <code>PlaybackOverlayFragment</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRowPresenter.html
PlaybackControlsRowPresenter.ViewHolder	A										<section class="prog__container"><pre><code>public class PlaybackControlsRowPresenter.ViewHolder</code></pre>A ViewHolder for the PlaybackControlsRow.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackControlsRowPresenter.ViewHolder.html
PlaybackFragment	A										<section class="prog__container"><pre><code>public class PlaybackFragment</code></pre>A fragment for displaying playback controls and related content.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackFragment.html
PlaybackFragmentGlueHost	A										<section class="prog__container"><pre><code>public class PlaybackFragmentGlueHost</code></pre><code>PlaybackGlueHost</code> implementation the interaction between this class and <code>PlaybackFragment</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackFragmentGlueHost.html
PlaybackOverlayFragment	A										<section class="prog__container"><pre><code>public class PlaybackOverlayFragment</code></pre><p class="caution"><strong> This class is deprecated.</strong><br/> Use <code>PlaybackFragment</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackOverlayFragment.html
PlaybackOverlayFragment.InputEventHandler	A										<section class="prog__container"><pre><code>public static interface PlaybackOverlayFragment.InputEventHandler</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackOverlayFragment.InputEventHandler.html
PlaybackOverlayFragment.OnFadeCompleteListener	A										<section class="prog__container"><pre><code>public static class PlaybackOverlayFragment.OnFadeCompleteListener</code></pre>Listener allowing the application to receive notification of fade in and/or fade out completion events.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackOverlayFragment.OnFadeCompleteListener.html
PlaybackOverlaySupportFragment	A										<section class="prog__container"><pre><code>public class PlaybackOverlaySupportFragment</code></pre><p class="caution"><strong> This class is deprecated.</strong><br/> Use <code>PlaybackSupportFragment</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackOverlaySupportFragment.html
PlaybackOverlaySupportFragment.InputEventHandler	A										<section class="prog__container"><pre><code>public static interface PlaybackOverlaySupportFragment.InputEventHandler</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackOverlaySupportFragment.InputEventHandler.html
PlaybackOverlaySupportFragment.OnFadeCompleteListener	A										<section class="prog__container"><pre><code>public static class PlaybackOverlaySupportFragment.OnFadeCompleteListener</code></pre>Listener allowing the application to receive notification of fade in and/or fade out completion events.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackOverlaySupportFragment.OnFadeCompleteListener.html
PlaybackParams	A										<section class="prog__container"><pre><code>public final class PlaybackParams</code></pre>Structure for common playback params. Used by <code>AudioTrack</code> <code>getPlaybackParams()</code> and <code>setPlaybackParams(PlaybackParams)</code> to control playback behavior.</section>	https://developer.android.com/reference/android/media/PlaybackParams.html
PlaybackRowPresenter	A										<section class="prog__container"><pre><code>public abstract class PlaybackRowPresenter</code></pre>Subclass of <code>RowPresenter</code> that can define the desired behavior when the view reappears. This is presently used by <code>PlaybackControlsRowPresenter</code> to update the UI after we show/hide the controls view.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackRowPresenter.html
PlaybackRowPresenter.ViewHolder	A										<section class="prog__container"><pre><code>public static class PlaybackRowPresenter.ViewHolder</code></pre>This container is used for trapping click events and passing them to the playback controls.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PlaybackRowPresenter.ViewHolder.html
PlaybackState	A										<section class="prog__container"><pre><code>public final class PlaybackState</code></pre>Playback state for a <code>MediaSession</code>. This includes a state like <code>STATE_PLAYING</code>, the current playback position, and the current control capabilities.</section>	https://developer.android.com/reference/android/media/session/PlaybackState.html
PlaybackState.Builder	A										<section class="prog__container"><pre><code>public static final class PlaybackState.Builder</code></pre>Builder for <code>PlaybackState</code> objects.</section>	https://developer.android.com/reference/android/media/session/PlaybackState.Builder.html
PlaybackState.CustomAction	A										<section class="prog__container"><pre><code>public static final class PlaybackState.CustomAction</code></pre><code>CustomActions</code> can be used to extend the capabilities of the standard transport controls by exposing app specific actions to <code>MediaControllers</code>.</section>	https://developer.android.com/reference/android/media/session/PlaybackState.CustomAction.html
PlaybackState.CustomAction.Builder	A										<section class="prog__container"><pre><code>public static final class PlaybackState.CustomAction.Builder</code></pre>Builder for <code>PlaybackState.CustomAction</code> objects.</section>	https://developer.android.com/reference/android/media/session/PlaybackState.CustomAction.Builder.html
PlaybackStateCompat	A										<section class="prog__container"><pre><code>public final class PlaybackStateCompat</code></pre>Playback state for a <code>MediaSessionCompat</code>. This includes a state like <code>STATE_PLAYING</code>, the current playback position, and the current control capabilities.</section>	https://developer.android.com/reference/android/support/v4/media/session/PlaybackStateCompat.html
PlaybackStateCompat.Builder	A										<section class="prog__container"><pre><code>public static final class PlaybackStateCompat.Builder</code></pre>Builder for <code>PlaybackStateCompat</code> objects.</section>	https://developer.android.com/reference/android/support/v4/media/session/PlaybackStateCompat.Builder.html
PlaybackStateCompat.CustomAction	A										<section class="prog__container"><pre><code>public static final class PlaybackStateCompat.CustomAction</code></pre><code>CustomActions</code> can be used to extend the capabilities of the standard transport controls by exposing app specific actions to <code>Controllers</code>.</section>	https://developer.android.com/reference/android/support/v4/media/session/PlaybackStateCompat.CustomAction.html
PlaybackStateCompat.CustomAction.Builder	A										<section class="prog__container"><pre><code>public static final class PlaybackStateCompat.CustomAction.Builder</code></pre>Builder for <code>PlaybackStateCompat.CustomAction</code> objects.</section>	https://developer.android.com/reference/android/support/v4/media/session/PlaybackStateCompat.CustomAction.Builder.html
PlaybackSupportFragment	A										<section class="prog__container"><pre><code>public class PlaybackSupportFragment</code></pre>A fragment for displaying playback controls and related content.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackSupportFragment.html
PlaybackSupportFragmentGlueHost	A										<section class="prog__container"><pre><code>public class PlaybackSupportFragmentGlueHost</code></pre><code>PlaybackGlueHost</code> implementation the interaction between this class and <code>PlaybackSupportFragment</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/PlaybackSupportFragmentGlueHost.html
PluginStub	A										<section class="prog__container"><pre><code>public interface PluginStub</code></pre>This interface is used to implement plugins in a WebView. A plugin package may extend this class and implement the abstract functions to create embedded or fullscreeen views displayed in a WebView. The PluginStub implementation will be provided the same NPP instance that is created through the native interface.</section>	https://developer.android.com/reference/android/webkit/PluginStub.html
PluralFormat	A										<section class="prog__container"><pre><code>public class PluralFormat</code></pre><code>PluralFormat</code> supports the creation of internationalized messages with plural inflection. It is based on <i>plural selection</i>, i.e. the caller specifies messages for each plural case that can appear in the user's language and the <code>PluralFormat</code> selects the appropriate message based on the number. <h3>The Problem of Plural Forms in Internationalized Messages</h3></section>	https://developer.android.com/reference/android/icu/text/PluralFormat.html
PluralRules	A										<section class="prog__container"><pre><code>public class PluralRules</code></pre></section>	https://developer.android.com/reference/android/icu/text/PluralRules.html
PluralRules.PluralType	A										<section class="prog__container"><pre><code>public static final enum PluralRules.PluralType</code></pre>Type of plurals and PluralRules.</section>	https://developer.android.com/reference/android/icu/text/PluralRules.PluralType.html
PluralsRes	A										<section class="prog__container"><pre><code>public abstract @interface PluralsRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be a plurals resource reference.</section>	https://developer.android.com/reference/android/support/annotation/PluralsRes.html
Point	A										<section class="prog__container"><pre><code>public class Point</code></pre>Point holds two integer coordinates</section>	https://developer.android.com/reference/android/graphics/Point.html
PointF	A										<section class="prog__container"><pre><code>public class PointF</code></pre>PointF holds two float coordinates</section>	https://developer.android.com/reference/android/graphics/PointF.html
PointFEvaluator	A										<section class="prog__container"><pre><code>public class PointFEvaluator</code></pre>This evaluator can be used to perform type interpolation between <code>PointF</code> values.</section>	https://developer.android.com/reference/android/animation/PointFEvaluator.html
PointerIcon	A										<section class="prog__container"><pre><code>public final class PointerIcon</code></pre>Represents an icon that can be used as a mouse pointer.</section>	https://developer.android.com/reference/android/view/PointerIcon.html
PointerIconCompat	A										<section class="prog__container"><pre><code>public final class PointerIconCompat</code></pre>Helper for accessing features in <code>PointerIcon</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/view/PointerIconCompat.html
Policy	A										<section class="prog__container"><pre><code>public abstract class Policy</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/security/Policy.html
Policy.Parameters	A										<section class="prog__container"><pre><code>public static interface Policy.Parameters</code></pre></section>	https://developer.android.com/reference/java/security/Policy.Parameters.html
PolicyNode	A										<section class="prog__container"><pre><code>public interface PolicyNode</code></pre>An immutable valid policy tree node as defined by the PKIX certification path validation algorithm.</section>	https://developer.android.com/reference/java/security/cert/PolicyNode.html
PolicyQualifierInfo	A										<section class="prog__container"><pre><code>public class PolicyQualifierInfo</code></pre>An immutable policy qualifier represented by the ASN.1 PolicyQualifierInfo structure.</section>	https://developer.android.com/reference/java/security/cert/PolicyQualifierInfo.html
PolicySpi	A										<section class="prog__container"><pre><code>public abstract class PolicySpi</code></pre>This class defines the <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>Policy</code> class. All the abstract methods in this class must be implemented by each service provider who wishes to supply a Policy implementation.</section>	https://developer.android.com/reference/java/security/PolicySpi.html
PooledConnection	A										<section class="prog__container"><pre><code>public interface PooledConnection</code></pre>An object that provides hooks for connection pool management. A <code>PooledConnection</code> object represents a physical connection to a data source. The connection can be recycled rather than being closed when an application is finished with it, thus reducing the number of connections that need to be made.</section>	https://developer.android.com/reference/javax/sql/PooledConnection.html
Pools	A										<section class="prog__container"><pre><code>public final class Pools</code></pre>Helper class for creating pools of objects. An example use looks like this: <pre> public class MyPooledClass { private static final SynchronizedPool<mypooledclass> sPool = new SynchronizedPool<mypooledclass>(10); public static MyPooledClass obtain() { MyPooledClass instance = sPool.acquire(); return (instance != null) ? instance : new MyPooledClass(); } public void recycle() { // Clear state if needed. sPool.release(this); } . . . } </mypooledclass></mypooledclass></pre></section>	https://developer.android.com/reference/android/support/v4/util/Pools.html
Pools.Pool	A										<section class="prog__container"><pre><code>public static interface Pools.Pool</code></pre>Interface for managing a pool of objects.</section>	https://developer.android.com/reference/android/support/v4/util/Pools.Pool.html
Pools.SimplePool	A										<section class="prog__container"><pre><code>public static class Pools.SimplePool</code></pre>Simple (non-synchronized) pool of objects.</section>	https://developer.android.com/reference/android/support/v4/util/Pools.SimplePool.html
Pools.SynchronizedPool	A										<section class="prog__container"><pre><code>public static class Pools.SynchronizedPool</code></pre>Synchronized) pool of objects.</section>	https://developer.android.com/reference/android/support/v4/util/Pools.SynchronizedPool.html
PopupMenu	D								*[[v7.widget.PopupMenu]], <section class="prog__container"><pre><code>public class PopupMenu</code></pre>Static library support version of the framework's <code>PopupMenu</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>\n*[[android.widget.PopupMenu]], <section class="prog__container"><pre><code>public class PopupMenu</code></pre>A PopupMenu displays a <code>Menu</code> in a modal popup window anchored to a <code>View</code>. The popup will appear below the anchor view if there is room, or above it if there is not. If the IME is visible the popup will not overlap it until it is touched. Touching outside of the popup will dismiss it.</section>			
PopupMenu.OnDismissListener	D								*[[v7.widget.PopupMenu.OnDismissListener]], <section class="prog__container"><pre><code>public static interface PopupMenu.OnDismissListener</code></pre>Callback interface used to notify the application that the menu has closed.</section>\n*[[android.widget.PopupMenu.OnDismissListener]], <section class="prog__container"><pre><code>public static interface PopupMenu.OnDismissListener</code></pre>Callback interface used to notify the application that the menu has closed.</section>			
PopupMenu.OnMenuItemClickListener	D								*[[v7.widget.PopupMenu.OnMenuItemClickListener]], <section class="prog__container"><pre><code>public static interface PopupMenu.OnMenuItemClickListener</code></pre>Interface responsible for receiving menu item click events if the items themselves do not have individual item click listeners.</section>\n*[[android.widget.PopupMenu.OnMenuItemClickListener]], <section class="prog__container"><pre><code>public static interface PopupMenu.OnMenuItemClickListener</code></pre>Interface responsible for receiving menu item click events if the items themselves do not have individual item click listeners.</section>			
PopupMenuCompat	A										<section class="prog__container"><pre><code>public final class PopupMenuCompat</code></pre>Helper for accessing features in PopupMenu introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/widget/PopupMenuCompat.html
PopupWindow	A										<section class="prog__container"><pre><code>public class PopupWindow</code></pre></section>	https://developer.android.com/reference/android/widget/PopupWindow.html
PopupWindow.OnDismissListener	A										<section class="prog__container"><pre><code>public static interface PopupWindow.OnDismissListener</code></pre>Listener that is called when this popup window is dismissed.</section>	https://developer.android.com/reference/android/widget/PopupWindow.OnDismissListener.html
PopupWindowCompat	A										<section class="prog__container"><pre><code>public final class PopupWindowCompat</code></pre>Helper for accessing features in PopupWindow introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/widget/PopupWindowCompat.html
PortUnreachableException	A										<section class="prog__container"><pre><code>public class PortUnreachableException</code></pre>Signals that an ICMP Port Unreachable message has been received on a connected datagram.</section>	https://developer.android.com/reference/java/net/PortUnreachableException.html
PorterDuff	A										<section class="prog__container"><pre><code>public class PorterDuff</code></pre></section>	https://developer.android.com/reference/android/graphics/PorterDuff.html
PorterDuff.Mode	A										<section class="prog__container"><pre><code>public static final enum PorterDuff.Mode</code></pre></section>	https://developer.android.com/reference/android/graphics/PorterDuff.Mode.html
PorterDuffColorFilter	A										<section class="prog__container"><pre><code>public class PorterDuffColorFilter</code></pre>A color filter that can be used to tint the source pixels using a single color and a specific <code>Porter-Duff composite mode</code>.</section>	https://developer.android.com/reference/android/graphics/PorterDuffColorFilter.html
PorterDuffXfermode	A										<section class="prog__container"><pre><code>public class PorterDuffXfermode</code></pre></section>	https://developer.android.com/reference/android/graphics/PorterDuffXfermode.html
PowerCalculator	A										Calculates power use of a device subsystem for an app.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
PowerManager	A										<section class="prog__container"><pre><code>public final class PowerManager</code></pre>This class gives you control of the power state of the device.</section>	https://developer.android.com/reference/android/os/PowerManager.html
PowerManager.WakeLock	A										<section class="prog__container"><pre><code>public final class PowerManager.WakeLock</code></pre>A wake lock is a mechanism to indicate that your application needs to have the device stay on.</section>	https://developer.android.com/reference/android/os/PowerManager.WakeLock.html
PowerProfile	A										Reports power consumption values for various device activities.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
Predicate	A										<section class="prog__container"><pre><code>public interface Predicate</code></pre>Represents a predicate (boolean-valued function) of one argument.</section>	https://developer.android.com/reference/java/util/function/Predicate.html
Prediction	A										<section class="prog__container"><pre><code>public class Prediction</code></pre></section>	https://developer.android.com/reference/android/gesture/Prediction.html
Preference	D								*[[android.preference.Preference]], <section class="prog__container"><pre><code>public class Preference</code></pre>Represents the basic Preference UI building block displayed by a <code>PreferenceActivity</code> in the form of a <code>ListView</code>. This class provides the <code>View</code> to be displayed in the activity and associates with a <code>SharedPreferences</code> to store/retrieve the preference data.</section>\n*[[v7.preference.Preference]], <section class="prog__container"><pre><code>public class Preference</code></pre>Represents the basic Preference UI building block displayed by a <code>PreferenceFragmentCompat</code> in the form of a <code>RecyclerView</code>. This class provides data for the <code>View</code> to be displayed in the list and associates with a <code>SharedPreferences</code> to store/retrieve the preference data.</section>			
Preference.BaseSavedState	D								*[[android.preference.Preference.BaseSavedState]], <section class="prog__container"><pre><code>public static class Preference.BaseSavedState</code></pre>A base class for managing the instance state of a <code>Preference</code>.</section>\n*[[v7.preference.Preference.BaseSavedState]], <section class="prog__container"><pre><code>public static class Preference.BaseSavedState</code></pre>A base class for managing the instance state of a <code>Preference</code>.</section>			
Preference.OnPreferenceChangeListener	D								*[[android.preference.Preference.OnPreferenceChangeListener]], <section class="prog__container"><pre><code>public static interface Preference.OnPreferenceChangeListener</code></pre>Interface definition for a callback to be invoked when the value of this <code>Preference</code> has been changed by the user and is about to be set and/or persisted. This gives the client a chance to prevent setting and/or persisting the value.</section>\n*[[v7.preference.Preference.OnPreferenceChangeListener]], <section class="prog__container"><pre><code>public static interface Preference.OnPreferenceChangeListener</code></pre>Interface definition for a callback to be invoked when the value of this <code>Preference</code> has been changed by the user and is about to be set and/or persisted. This gives the client a chance to prevent setting and/or persisting the value.</section>			
Preference.OnPreferenceClickListener	D								*[[android.preference.Preference.OnPreferenceClickListener]], <section class="prog__container"><pre><code>public static interface Preference.OnPreferenceClickListener</code></pre>Interface definition for a callback to be invoked when a <code>Preference</code> is clicked.</section>\n*[[v7.preference.Preference.OnPreferenceClickListener]], <section class="prog__container"><pre><code>public static interface Preference.OnPreferenceClickListener</code></pre>Interface definition for a callback to be invoked when a <code>Preference</code> is clicked.</section>			
PreferenceActivity	A										<section class="prog__container"><pre><code>public abstract class PreferenceActivity</code></pre>This is the base class for an activity to show a hierarchy of preferences to the user. Prior to <code>HONEYCOMB</code> this class only allowed the display of a single set of preference; this functionality should now be found in the new <code>PreferenceFragment</code> class. If you are using PreferenceActivity in its old mode, the documentation there applies to the deprecated APIs here.</section>	https://developer.android.com/reference/android/preference/PreferenceActivity.html
PreferenceActivity.Header	A										<section class="prog__container"><pre><code>public static final class PreferenceActivity.Header</code></pre>Description of a single Header item that the user can select.</section>	https://developer.android.com/reference/android/preference/PreferenceActivity.Header.html
PreferenceCategory	D								*[[android.preference.PreferenceCategory]], <section class="prog__container"><pre><code>public class PreferenceCategory</code></pre>Used to group <code>Preference</code> objects and provide a disabled title above the group. <div class="special reference"> <h3>Developer Guides</h3></section>\n*[[v7.preference.PreferenceCategory]], <section class="prog__container"><pre><code>public class PreferenceCategory</code></pre>Used to group <code>Preference</code> objects and provide a disabled title above the group. <div class="special reference"> <h3>Developer Guides</h3></section>			
PreferenceChangeEvent	A										<section class="prog__container"><pre><code>public class PreferenceChangeEvent</code></pre>An event emitted by a <tt>Preferences</tt> node to indicate that a preference has been added, removed or has had its value changed.</section>	https://developer.android.com/reference/java/util/prefs/PreferenceChangeEvent.html
PreferenceChangeListener	A										<section class="prog__container"><pre><code>public interface PreferenceChangeListener</code></pre>A listener for receiving preference change events.</section>	https://developer.android.com/reference/java/util/prefs/PreferenceChangeListener.html
PreferenceDialogFragment	A										<section class="prog__container"><pre><code>public abstract class PreferenceDialogFragment</code></pre>Abstract base class which presents a dialog associated with a <code>DialogPreference</code>. Since the preference object may not be available during fragment re-creation, the necessary information for displaying the dialog is read once during the initial call to <code>onCreate(Bundle)</code> and saved/restored in the saved instance state. Custom subclasses should also follow this pattern.</section>	https://developer.android.com/reference/android/support/v14/preference/PreferenceDialogFragment.html
PreferenceDialogFragmentCompat	A										<section class="prog__container"><pre><code>public abstract class PreferenceDialogFragmentCompat</code></pre>Abstract base class which presents a dialog associated with a <code>DialogPreference</code>. Since the preference object may not be available during fragment re-creation, the necessary information for displaying the dialog is read once during the initial call to <code>onCreate(Bundle)</code> and saved/restored in the saved instance state. Custom subclasses should also follow this pattern.</section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceDialogFragmentCompat.html
PreferenceFragment	D								*[[android.preference.PreferenceFragment]], <section class="prog__container"><pre><code>public abstract class PreferenceFragment</code></pre>Shows a hierarchy of <code>Preference</code> objects as lists. These preferences will automatically save to <code>SharedPreferences</code> as the user interacts with them. To retrieve an instance of <code>SharedPreferences</code> that the preference hierarchy in this fragment will use, call <code>getDefaultSharedPreferences(android.content.Context)</code> with a context in the same package as this fragment.</section>\n*[[v14.preference.PreferenceFragment]], <section class="prog__container"><pre><code>public abstract class PreferenceFragment</code></pre>Shows a hierarchy of <code>Preference</code> objects as lists. These preferences will automatically save to <code>SharedPreferences</code> as the user interacts with them. To retrieve an instance of <code>SharedPreferences</code> that the preference hierarchy in this fragment will use, call <code>getDefaultSharedPreferences(android.content.Context)</code> with a context in the same package as this fragment.</section>			
PreferenceFragment.OnPreferenceDisplayDialogCallback	A										<section class="prog__container"><pre><code>public static interface PreferenceFragment.OnPreferenceDisplayDialogCallback</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/PreferenceFragment.OnPreferenceDisplayDialogCallback.html
PreferenceFragment.OnPreferenceStartFragmentCallback	D								*[[android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback]], <section class="prog__container"><pre><code>public static interface PreferenceFragment.OnPreferenceStartFragmentCallback</code></pre>Interface that PreferenceFragment's containing activity should implement to be able to process preference items that wish to switch to a new fragment.</section>\n*[[v14.preference.PreferenceFragment.OnPreferenceStartFragmentCallback]], <section class="prog__container"><pre><code>public static interface PreferenceFragment.OnPreferenceStartFragmentCallback</code></pre>Interface that PreferenceFragment's containing activity should implement to be able to process preference items that wish to switch to a specified fragment.</section>			
PreferenceFragment.OnPreferenceStartScreenCallback	A										<section class="prog__container"><pre><code>public static interface PreferenceFragment.OnPreferenceStartScreenCallback</code></pre>Interface that PreferenceFragment's containing activity should implement to be able to process preference items that wish to switch to a new screen of preferences.</section>	https://developer.android.com/reference/android/support/v14/preference/PreferenceFragment.OnPreferenceStartScreenCallback.html
PreferenceFragmentCompat	A										<section class="prog__container"><pre><code>public abstract class PreferenceFragmentCompat</code></pre>Shows a hierarchy of <code>Preference</code> objects as lists. These preferences will automatically save to <code>SharedPreferences</code> as the user interacts with them. To retrieve an instance of <code>SharedPreferences</code> that the preference hierarchy in this fragment will use, call <code>getDefaultSharedPreferences(android.content.Context)</code> with a context in the same package as this fragment.</section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceFragmentCompat.html
PreferenceFragmentCompat.OnPreferenceDisplayDialogCallback	A										<section class="prog__container"><pre><code>public static interface PreferenceFragmentCompat.OnPreferenceDisplayDialogCallback</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceFragmentCompat.OnPreferenceDisplayDialogCallback.html
PreferenceFragmentCompat.OnPreferenceStartFragmentCallback	A										<section class="prog__container"><pre><code>public static interface PreferenceFragmentCompat.OnPreferenceStartFragmentCallback</code></pre>Interface that PreferenceFragment's containing activity should implement to be able to process preference items that wish to switch to a specified fragment.</section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceFragmentCompat.OnPreferenceStartFragmentCallback.html
PreferenceFragmentCompat.OnPreferenceStartScreenCallback	A										<section class="prog__container"><pre><code>public static interface PreferenceFragmentCompat.OnPreferenceStartScreenCallback</code></pre>Interface that PreferenceFragment's containing activity should implement to be able to process preference items that wish to switch to a new screen of preferences.</section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceFragmentCompat.OnPreferenceStartScreenCallback.html
PreferenceGroup	D								*[[android.preference.PreferenceGroup]], <section class="prog__container"><pre><code>public abstract class PreferenceGroup</code></pre>A container for multiple <code>Preference</code> objects. It is a base class for Preference objects that are parents, such as <code>PreferenceCategory</code> and <code>PreferenceScreen</code>. <div class="special reference"> <h3>Developer Guides</h3></section>\n*[[v7.preference.PreferenceGroup]], <section class="prog__container"><pre><code>public abstract class PreferenceGroup</code></pre>A container for multiple <code>Preference</code> objects. It is a base class for Preference objects that are parents, such as <code>PreferenceCategory</code> and <code>PreferenceScreen</code>. <div class="special reference"> <h3>Developer Guides</h3></section>			
PreferenceGroup.PreferencePositionCallback	A										<section class="prog__container"><pre><code>public static interface PreferenceGroup.PreferencePositionCallback</code></pre>Interface for PreferenceGroup Adapters to implement so that <code>scrollToPreference(String)</code> and <code>scrollToPreference(Preference)</code> or <code>scrollToPreference(String)</code> and <code>scrollToPreference(Preference)</code> can determine the correct scroll position to request.</section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceGroup.PreferencePositionCallback.html
PreferenceManager	D								*[[android.preference.PreferenceManager]], <section class="prog__container"><pre><code>public class PreferenceManager</code></pre>Used to help create <code>Preference</code> hierarchies from activities or XML.</section>\n*[[v7.preference.PreferenceManager]], <section class="prog__container"><pre><code>public class PreferenceManager</code></pre>Used to help create <code>Preference</code> hierarchies from activities or XML.</section>			
PreferenceManager.OnActivityDestroyListener	A										<section class="prog__container"><pre><code>public static interface PreferenceManager.OnActivityDestroyListener</code></pre>Interface definition for a class that will be called when the container's activity is destroyed.</section>	https://developer.android.com/reference/android/preference/PreferenceManager.OnActivityDestroyListener.html
PreferenceManager.OnActivityResultListener	A										<section class="prog__container"><pre><code>public static interface PreferenceManager.OnActivityResultListener</code></pre>Interface definition for a class that will be called when the container's activity receives an activity result.</section>	https://developer.android.com/reference/android/preference/PreferenceManager.OnActivityResultListener.html
PreferenceManager.OnActivityStopListener	A										<section class="prog__container"><pre><code>public static interface PreferenceManager.OnActivityStopListener</code></pre>Interface definition for a class that will be called when the container's activity is stopped.</section>	https://developer.android.com/reference/android/preference/PreferenceManager.OnActivityStopListener.html
PreferenceManager.OnDisplayPreferenceDialogListener	A										<section class="prog__container"><pre><code>public static interface PreferenceManager.OnDisplayPreferenceDialogListener</code></pre>Interface definition for a class that will be called when a <code>Preference</code> requests to display a dialog.</section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceManager.OnDisplayPreferenceDialogListener.html
PreferenceManager.OnNavigateToScreenListener	A										<section class="prog__container"><pre><code>public static interface PreferenceManager.OnNavigateToScreenListener</code></pre>Interface definition for a class that will be called when a <code>PreferenceScreen</code> requests navigation.</section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceManager.OnNavigateToScreenListener.html
PreferenceManager.OnPreferenceTreeClickListener	A										<section class="prog__container"><pre><code>public static interface PreferenceManager.OnPreferenceTreeClickListener</code></pre>Interface definition for a callback to be invoked when a <code>Preference</code> in the hierarchy rooted at this <code>PreferenceScreen</code> is clicked.</section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceManager.OnPreferenceTreeClickListener.html
PreferenceManager.PreferenceComparisonCallback	A										<section class="prog__container"><pre><code>public static abstract class PreferenceManager.PreferenceComparisonCallback</code></pre>Callback class to be used by the <code>RecyclerView.Adapter</code> associated with the <code>PreferenceScreen</code>, used to determine when two <code>Preference</code> objects are semantically and visually the same.</section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceManager.PreferenceComparisonCallback.html
PreferenceManager.SimplePreferenceComparisonCallback	A										<section class="prog__container"><pre><code>public static class PreferenceManager.SimplePreferenceComparisonCallback</code></pre>A basic implementation of <code>PreferenceManager.PreferenceComparisonCallback</code> suitable for use with the default <code>Preference</code> classes. If the <code>PreferenceScreen</code> contains custom <code>Preference</code> subclasses, you must override <code>arePreferenceContentsTheSame(Preference, Preference)</code></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceManager.SimplePreferenceComparisonCallback.html
PreferenceScreen	D								*[[android.preference.PreferenceScreen]], <section class="prog__container"><pre><code>public final class PreferenceScreen</code></pre>Represents a top-level <code>Preference</code> that is the root of a Preference hierarchy. A <code>PreferenceActivity</code> points to an instance of this class to show the preferences. To instantiate this class, use <code>createPreferenceScreen(Context)</code>. <ul> This class can appear in two places: <li> When a <code>PreferenceActivity</code> points to this, it is used as the root and is not shown (only the contained preferences are shown). <li> When it appears inside another preference hierarchy, it is shown and serves as the gateway to another screen of preferences (either by showing another screen of preferences as a <code>Dialog</code> or via a <code>startActivity(android.content.Intent)</code> from the <code>getIntent()</code>). The children of this <code>PreferenceScreen</code> are NOT shown in the screen that this <code>PreferenceScreen</code> is shown in. Instead, a separate screen will be shown when this preference is clicked. </li></li></ul></section>\n*[[v7.preference.PreferenceScreen]], <section class="prog__container"><pre><code>public final class PreferenceScreen</code></pre>Represents a top-level <code>Preference</code> that is the root of a Preference hierarchy. A <code>PreferenceFragmentCompat</code> points to an instance of this class to show the preferences. To instantiate this class, use <code>createPreferenceScreen(android.content.Context)</code>. <ul> This class can appear in two places: <li> When a <code>PreferenceFragmentCompat</code> points to this, it is used as the root and is not shown (only the contained preferences are shown). <li> When it appears inside another preference hierarchy, it is shown and serves as the gateway to another screen of preferences (either by showing another screen of preferences as a <code>Dialog</code> or via a <code>startActivity(android.content.Intent)</code> from the <code>getIntent()</code>). The children of this <code>PreferenceScreen</code> are NOT shown in the screen that this <code>PreferenceScreen</code> is shown in. Instead, a separate screen will be shown when this preference is clicked. </li></li></ul></section>			
PreferenceViewHolder	A										<section class="prog__container"><pre><code>public class PreferenceViewHolder</code></pre>A <code>RecyclerView.ViewHolder</code> class which caches views associated with the default <code>Preference</code> layouts. Cached views can be retrieved by calling <code>findViewById(int)</code>.</section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceViewHolder.html
Preferences	A										<section class="prog__container"><pre><code>public abstract class Preferences</code></pre>A node in a hierarchical collection of preference data. This class allows applications to store and retrieve user and system preference and configuration data. This data is stored persistently in an implementation-dependent backing store. Typical implementations include flat files, OS-specific registries, directory servers and SQL databases. The user of this class needn't be concerned with details of the backing store.</section>	https://developer.android.com/reference/java/util/prefs/Preferences.html
PreferencesFactory	A										<section class="prog__container"><pre><code>public interface PreferencesFactory</code></pre>A factory object that generates Preferences objects. Providers of new <code>Preferences</code> implementations should provide corresponding <tt>PreferencesFactory</tt> implementations so that the new <tt>Preferences</tt> implementation can be installed in place of the platform-specific default implementation.</section>	https://developer.android.com/reference/java/util/prefs/PreferencesFactory.html
PreparedStatement	A										<section class="prog__container"><pre><code>public interface PreparedStatement</code></pre>An object that represents a precompiled SQL statement.</section>	https://developer.android.com/reference/java/sql/PreparedStatement.html
Presentation	A										<section class="prog__container"><pre><code>public class Presentation</code></pre>Base class for presentations.</section>	https://developer.android.com/reference/android/app/Presentation.html
Presenter	A										<section class="prog__container"><pre><code>public abstract class Presenter</code></pre>A Presenter is used to generate <code>View</code>s and bind Objects to them on demand. It is closely related to the concept of an <code>RecyclerView.Adapter</code>, but is not position-based. The leanback framework implements the adapter concept using <code>ObjectAdapter</code> which refers to a Presenter (or <code>PresenterSelector</code>) instance.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/Presenter.html
Presenter.ViewHolder	A										<section class="prog__container"><pre><code>public static class Presenter.ViewHolder</code></pre>ViewHolder can be subclassed and used to cache any view accessors needed to improve binding performance (for example, results of findViewById) without needing to subclass a View.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/Presenter.ViewHolder.html
Presenter.ViewHolderTask	A										<section class="prog__container"><pre><code>public static abstract class Presenter.ViewHolderTask</code></pre>Base class to perform a task on Presenter.ViewHolder.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/Presenter.ViewHolderTask.html
PresenterSelector	A										<section class="prog__container"><pre><code>public abstract class PresenterSelector</code></pre>A PresenterSelector is used to obtain a <code>Presenter</code> for a given Object. Similar to <code>Presenter</code>, PresenterSelector is stateless.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PresenterSelector.html
PresenterSwitcher	A										<section class="prog__container"><pre><code>public abstract class PresenterSwitcher</code></pre>An abstract helper class that switches a view in its parent view using a <code>PresenterSelector</code>. A subclass should implement <code>insertView(View)</code> to define how to add the view in parent, and may optionally override <code>onViewSelected(View)</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/PresenterSwitcher.html
PresetReverb	A										<section class="prog__container"><pre><code>public class PresetReverb</code></pre>A sound generated within a room travels in many directions. The listener first hears the direct sound from the source itself. Later, he or she hears discrete echoes caused by sound bouncing off nearby walls, the ceiling and the floor. As sound waves arrive after undergoing more and more reflections, individual reflections become indistinguishable and the listener hears continuous reverberation that decays over time. Reverb is vital for modeling a listener's environment. It can be used in music applications to simulate music being played back in various environments, or in games to immerse the listener within the game's environment. The PresetReverb class allows an application to configure the global reverb using a reverb preset. This is primarily used for adding some reverb in a music playback context. Applications requiring control over a more advanced environmental reverb are advised to use the <code>EnvironmentalReverb</code> class.</section>	https://developer.android.com/reference/android/media/audiofx/PresetReverb.html
PresetReverb.OnParameterChangeListener	A										<section class="prog__container"><pre><code>public static interface PresetReverb.OnParameterChangeListener</code></pre>The OnParameterChangeListener interface defines a method called by the PresetReverb when a parameter value has changed.</section>	https://developer.android.com/reference/android/media/audiofx/PresetReverb.OnParameterChangeListener.html
PresetReverb.Settings	A										<section class="prog__container"><pre><code>public static class PresetReverb.Settings</code></pre>The Settings class regroups all preset reverb parameters. It is used in conjuntion with getProperties() and setProperties() methods to backup and restore all parameters in a single call.</section>	https://developer.android.com/reference/android/media/audiofx/PresetReverb.Settings.html
PrimitiveIterator	A										<section class="prog__container"><pre><code>public interface PrimitiveIterator</code></pre>A base type for primitive specializations of <code>Iterator</code>. Specialized subtypes are provided for <code>int</code>, <code>long</code>, and <code>double</code> values.</section>	https://developer.android.com/reference/java/util/PrimitiveIterator.html
PrimitiveIterator.OfDouble	A										<section class="prog__container"><pre><code>public static interface PrimitiveIterator.OfDouble</code></pre>An Iterator specialized for <code>double</code> values.</section>	https://developer.android.com/reference/java/util/PrimitiveIterator.OfDouble.html
PrimitiveIterator.OfInt	A										<section class="prog__container"><pre><code>public static interface PrimitiveIterator.OfInt</code></pre>An Iterator specialized for <code>int</code> values.</section>	https://developer.android.com/reference/java/util/PrimitiveIterator.OfInt.html
PrimitiveIterator.OfLong	A										<section class="prog__container"><pre><code>public static interface PrimitiveIterator.OfLong</code></pre>An Iterator specialized for <code>long</code> values.</section>	https://developer.android.com/reference/java/util/PrimitiveIterator.OfLong.html
Principal	A										<section class="prog__container"><pre><code>public interface Principal</code></pre>This interface represents the abstract notion of a principal, which can be used to represent any entity, such as an individual, a corporation, and a login id.</section>	https://developer.android.com/reference/java/security/Principal.html
PrintAttributes	A										<section class="prog__container"><pre><code>public final class PrintAttributes</code></pre>This class represents the attributes of a print job. These attributes describe how the printed content should be laid out. For example, the print attributes may state that the content should be laid out on a letter size with 300 DPI (dots per inch) resolution, have a margin of 10 mills (thousand of an inch) on all sides, and be black and white.</section>	https://developer.android.com/reference/android/print/PrintAttributes.html
PrintAttributes.Builder	A										<section class="prog__container"><pre><code>public static final class PrintAttributes.Builder</code></pre>Builder for creating <code>PrintAttributes</code>.</section>	https://developer.android.com/reference/android/print/PrintAttributes.Builder.html
PrintAttributes.Margins	A										<section class="prog__container"><pre><code>public static final class PrintAttributes.Margins</code></pre>This class specifies content margins. Margins define the white space around the content where the left margin defines the amount of white space on the left of the content and so on.</section>	https://developer.android.com/reference/android/print/PrintAttributes.Margins.html
PrintAttributes.MediaSize	A										<section class="prog__container"><pre><code>public static final class PrintAttributes.MediaSize</code></pre>This class specifies a supported media size. Media size is the dimension of the media on which the content is printed. For example, the <code>NA_LETTER</code> media size designates a page with size 8.5" x 11".</section>	https://developer.android.com/reference/android/print/PrintAttributes.MediaSize.html
PrintAttributes.Resolution	A										<section class="prog__container"><pre><code>public static final class PrintAttributes.Resolution</code></pre>This class specifies a supported resolution in DPI (dots per inch). Resolution defines how many points with different color can be placed on one inch in horizontal or vertical direction of the target media. For example, a printer with 600 DPI can produce higher quality images the one with 300 DPI resolution.</section>	https://developer.android.com/reference/android/print/PrintAttributes.Resolution.html
PrintDocument	A										<section class="prog__container"><pre><code>public final class PrintDocument</code></pre>This class represents a printed document from the perspective of a print service. It exposes APIs to query the document and obtain its data.</section>	https://developer.android.com/reference/android/printservice/PrintDocument.html
PrintDocumentAdapter	A										<section class="prog__container"><pre><code>public abstract class PrintDocumentAdapter</code></pre>Base class that provides the content of a document to be printed. <h3>Lifecycle</h3></section>	https://developer.android.com/reference/android/print/PrintDocumentAdapter.html
PrintDocumentAdapter.LayoutResultCallback	A										<section class="prog__container"><pre><code>public static abstract class PrintDocumentAdapter.LayoutResultCallback</code></pre>Base class for implementing a callback for the result of <code>onLayout(PrintAttributes, PrintAttributes, CancellationSignal, LayoutResultCallback, Bundle)</code>.</section>	https://developer.android.com/reference/android/print/PrintDocumentAdapter.LayoutResultCallback.html
PrintDocumentAdapter.WriteResultCallback	A										<section class="prog__container"><pre><code>public static abstract class PrintDocumentAdapter.WriteResultCallback</code></pre>Base class for implementing a callback for the result of <code>onWrite(PageRange[], ParcelFileDescriptor, CancellationSignal, WriteResultCallback)</code>.</section>	https://developer.android.com/reference/android/print/PrintDocumentAdapter.WriteResultCallback.html
PrintDocumentInfo	A										<section class="prog__container"><pre><code>public final class PrintDocumentInfo</code></pre>This class encapsulates information about a document for printing purposes. This meta-data is used by the platform and print services, components that interact with printers. For example, this class contains the number of pages contained in the document it describes and this number of pages is shown to the user allowing him/her to select the range to print. Also a print service may optimize the printing process based on the content type, such as document or photo.</section>	https://developer.android.com/reference/android/print/PrintDocumentInfo.html
PrintDocumentInfo.Builder	A										<section class="prog__container"><pre><code>public static final class PrintDocumentInfo.Builder</code></pre>Builder for creating a <code>PrintDocumentInfo</code>.</section>	https://developer.android.com/reference/android/print/PrintDocumentInfo.Builder.html
PrintHelper	A										<section class="prog__container"><pre><code>public final class PrintHelper</code></pre>Helper for printing bitmaps.</section>	https://developer.android.com/reference/android/support/v4/print/PrintHelper.html
PrintHelper.OnPrintFinishCallback	A										<section class="prog__container"><pre><code>public static interface PrintHelper.OnPrintFinishCallback</code></pre>Callback for observing when a print operation is completed. When print is finished either the system acquired the document to print or printing was cancelled.</section>	https://developer.android.com/reference/android/support/v4/print/PrintHelper.OnPrintFinishCallback.html
PrintJob	D								*[[print.PrintJob]], <section class="prog__container"><pre><code>public final class PrintJob</code></pre>This class represents a print job from the perspective of an application. It contains behavior methods for performing operations on it as well as methods for querying its state. A snapshot of the print job state is represented by the <code>PrintJobInfo</code> class. The state of a print job may change over time. An application receives instances of this class when creating a print job or querying for its print jobs.</section>\n*[[printservice.PrintJob]], <section class="prog__container"><pre><code>public final class PrintJob</code></pre>This class represents a print job from the perspective of a print service. It provides APIs for observing the print job state and performing operations on the print job.</section>			
PrintJobId	A										<section class="prog__container"><pre><code>public final class PrintJobId</code></pre>This class represents the id of a print job.</section>	https://developer.android.com/reference/android/print/PrintJobId.html
PrintJobInfo	A										<section class="prog__container"><pre><code>public final class PrintJobInfo</code></pre>This class represents the description of a print job. The print job state includes properties such as its id, print attributes used for generating the content, and so on. Note that the print jobs state may change over time and this class represents a snapshot of this state.</section>	https://developer.android.com/reference/android/print/PrintJobInfo.html
PrintJobInfo.Builder	A										<section class="prog__container"><pre><code>public static final class PrintJobInfo.Builder</code></pre>Builder for creating a <code>PrintJobInfo</code>.</section>	https://developer.android.com/reference/android/print/PrintJobInfo.Builder.html
PrintManager	A										<section class="prog__container"><pre><code>public final class PrintManager</code></pre>System level service for accessing the printing capabilities of the platform.</section>	https://developer.android.com/reference/android/print/PrintManager.html
PrintService	A										<section class="prog__container"><pre><code>public abstract class PrintService</code></pre></section>	https://developer.android.com/reference/android/printservice/PrintService.html
PrintStream	A										<section class="prog__container"><pre><code>public class PrintStream</code></pre>A <code>PrintStream</code> adds functionality to another output stream, namely the ability to print representations of various data values conveniently. Two other features are provided as well. Unlike other output streams, a <code>PrintStream</code> never throws an <code>IOException</code>; instead, exceptional situations merely set an internal flag that can be tested via the <code>checkError</code> method. Optionally, a <code>PrintStream</code> can be created so as to flush automatically; this means that the <code>flush</code> method is automatically invoked after a byte array is written, one of the <code>println</code> methods is invoked, or a newline character or byte (<code>'\n'</code>) is written.</section>	https://developer.android.com/reference/java/io/PrintStream.html
PrintStreamPrinter	A										<section class="prog__container"><pre><code>public class PrintStreamPrinter</code></pre>Implementation of a <code>Printer</code> that sends its output to a <code>PrintStream</code>.</section>	https://developer.android.com/reference/android/util/PrintStreamPrinter.html
PrintWriter	A										<section class="prog__container"><pre><code>public class PrintWriter</code></pre>Prints formatted representations of objects to a text-output stream. This class implements all of the <tt>print</tt> methods found in <code>PrintStream</code>. It does not contain methods for writing raw bytes, for which a program should use unencoded byte streams.</section>	https://developer.android.com/reference/java/io/PrintWriter.html
PrintWriterPrinter	A										<section class="prog__container"><pre><code>public class PrintWriterPrinter</code></pre>Implementation of a <code>Printer</code> that sends its output to a <code>PrintWriter</code>.</section>	https://developer.android.com/reference/android/util/PrintWriterPrinter.html
PrintedPdfDocument	A										<section class="prog__container"><pre><code>public class PrintedPdfDocument</code></pre>This class is a helper for creating a PDF file for given print attributes. It is useful for implementing printing via the native Android graphics APIs.</section>	https://developer.android.com/reference/android/print/pdf/PrintedPdfDocument.html
Printer	A										<section class="prog__container"><pre><code>public interface Printer</code></pre>Simple interface for printing text, allowing redirection to various targets. Standard implementations are <code>LogPrinter</code>, <code>StringBuilderPrinter</code>, and <code>PrintWriterPrinter</code>.</section>	https://developer.android.com/reference/android/util/Printer.html
PrinterCapabilitiesInfo	A										<section class="prog__container"><pre><code>public final class PrinterCapabilitiesInfo</code></pre>This class represents the capabilities of a printer. Instances of this class are created by a print service to report the capabilities of a printer it manages. The capabilities of a printer specify how it can print content. For example, what are the media sizes supported by the printer, what are the minimal margins of the printer based on its technical design, etc.</section>	https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.html
PrinterCapabilitiesInfo.Builder	A										<section class="prog__container"><pre><code>public static final class PrinterCapabilitiesInfo.Builder</code></pre>Builder for creating of a <code>PrinterCapabilitiesInfo</code>. This class is responsible to enforce that all required attributes have at least one default value. In other words, this class creates only well-formed <code>PrinterCapabilitiesInfo</code>s.</section>	https://developer.android.com/reference/android/print/PrinterCapabilitiesInfo.Builder.html
PrinterDiscoverySession	A										<section class="prog__container"><pre><code>public abstract class PrinterDiscoverySession</code></pre>This class encapsulates the interaction between a print service and the system during printer discovery. During printer discovery you are responsible for adding discovered printers, removing previously added printers that disappeared, and updating already added printers.</section>	https://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html
PrinterId	A										<section class="prog__container"><pre><code>public final class PrinterId</code></pre>This class represents the unique id of a printer.</section>	https://developer.android.com/reference/android/print/PrinterId.html
PrinterInfo	A										<section class="prog__container"><pre><code>public final class PrinterInfo</code></pre>This class represents the description of a printer. Instances of this class are created by print services to report to the system the printers they manage. The information of this class has two major components, printer properties such as name, id, status, description and printer capabilities which describe the various print modes a printer supports such as media sizes, margins, etc.</section>	https://developer.android.com/reference/android/print/PrinterInfo.html
PrinterInfo.Builder	A										<section class="prog__container"><pre><code>public static final class PrinterInfo.Builder</code></pre>Builder for creating of a <code>PrinterInfo</code>.</section>	https://developer.android.com/reference/android/print/PrinterInfo.Builder.html
PriorityBlockingQueue	A										<section class="prog__container"><pre><code>public class PriorityBlockingQueue</code></pre>An unbounded blocking queue</section>	https://developer.android.com/reference/java/util/concurrent/PriorityBlockingQueue.html
PriorityQueue	A										<section class="prog__container"><pre><code>public class PriorityQueue</code></pre>An unbounded priority queue</section>	https://developer.android.com/reference/java/util/PriorityQueue.html
PrivateCredentialPermission	A										<section class="prog__container"><pre><code>public final class PrivateCredentialPermission</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/javax/security/auth/PrivateCredentialPermission.html
PrivateKey	A										<section class="prog__container"><pre><code>public interface PrivateKey</code></pre></section>	https://developer.android.com/reference/java/security/PrivateKey.html
PrivilegedAction	A										<section class="prog__container"><pre><code>public interface PrivilegedAction</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/security/PrivilegedAction.html
PrivilegedActionException	A										<section class="prog__container"><pre><code>public class PrivilegedActionException</code></pre>Legacy security code; do not use. This exception is thrown by <code>doPrivileged(PrivilegedExceptionAction)</code> and <code>doPrivileged(PrivilegedExceptionAction, AccessControlContext context)</code> to indicate that the action being performed threw a checked exception. The exception thrown by the action can be obtained by calling the <code>getException</code> method. In effect, an <code>PrivilegedActionException</code> is a "wrapper" for an exception thrown by a privileged action.</section>	https://developer.android.com/reference/java/security/PrivilegedActionException.html
PrivilegedExceptionAction	A										<section class="prog__container"><pre><code>public interface PrivilegedExceptionAction</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/security/PrivilegedExceptionAction.html
Process	D								*[[os.Process]], <section class="prog__container"><pre><code>public class Process</code></pre>Tools for managing OS processes.</section>\n*[[lang.Process]], <section class="prog__container"><pre><code>public abstract class Process</code></pre>The <code>start()</code> and <code>Runtime.exec</code> methods create a native process and return an instance of a subclass of <code>Process</code> that can be used to control the process and obtain information about it. The class <code>Process</code> provides methods for performing input from the process, performing output to the process, waiting for the process to complete, checking the exit status of the process, and destroying (killing) the process.</section>			
ProcessBuilder	A										<section class="prog__container"><pre><code>public final class ProcessBuilder</code></pre>This class is used to create operating system processes.</section>	https://developer.android.com/reference/java/lang/ProcessBuilder.html
ProcessHealthStats	A										<section class="prog__container"><pre><code>public final class ProcessHealthStats</code></pre>Keys for <code>HealthStats</code> returned from <code>HealthStats.getStats(int)</code> with the <code>UidHealthStats.STATS_PROCESSES</code> key.</section>	https://developer.android.com/reference/android/os/health/ProcessHealthStats.html
ProcessedData	A										<section class="prog__container"><pre><code>public class ProcessedData</code></pre>An entity class that wraps the result of a <code>processDrmInfo()</code> transaction between a device and a DRM server. In a license acquisition scenario this class holds the rights information in binary form.</section>	https://developer.android.com/reference/android/drm/ProcessedData.html
ProcessingInstruction	A										<section class="prog__container"><pre><code>public interface ProcessingInstruction</code></pre>The <code>ProcessingInstruction</code> interface represents a "processing instruction", used in XML as a way to keep processor-specific information in the text of the document.</section>	https://developer.android.com/reference/org/w3c/dom/ProcessingInstruction.html
ProgressBar	A										<section class="prog__container"><pre><code>public class ProgressBar</code></pre></section>	https://developer.android.com/reference/android/widget/ProgressBar.html
ProgressBarManager	A										<section class="prog__container"><pre><code>public final class ProgressBarManager</code></pre>Manager for showing/hiding progress bar widget. This class lets user specify an initial delay after which the progress bar will be shown. This is currently being used in <code>BrowseFragment</code> &amp; <code>VerticalGridFragment</code> to show <code>ProgressBar</code> while the data is being loaded.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/ProgressBarManager.html
ProgressDialog	A										<section class="prog__container"><pre><code>public class ProgressDialog</code></pre></section>	https://developer.android.com/reference/android/app/ProgressDialog.html
Properties	A										<section class="prog__container"><pre><code>public class Properties</code></pre>The <code>Properties</code> class represents a persistent set of properties. The <code>Properties</code> can be saved to a stream or loaded from a stream. Each key and its corresponding value in the property list is a string.</section>	https://developer.android.com/reference/java/util/Properties.html
Property	A										<section class="prog__container"><pre><code>public abstract class Property</code></pre>A property is an abstraction that can be used to represent a <emb>mutable</emb></section>	https://developer.android.com/reference/android/util/Property.html
PropertyChangeEvent	A										<section class="prog__container"><pre><code>public class PropertyChangeEvent</code></pre>A "PropertyChange" event gets delivered whenever a bean changes a "bound" or "constrained" property. A PropertyChangeEvent object is sent as an argument to the PropertyChangeListener and VetoableChangeListener methods.</section>	https://developer.android.com/reference/java/beans/PropertyChangeEvent.html
PropertyChangeListener	A										<section class="prog__container"><pre><code>public interface PropertyChangeListener</code></pre>A "PropertyChange" event gets fired whenever a bean changes a "bound" property. You can register a PropertyChangeListener with a source bean so as to be notified of any bound property updates.</section>	https://developer.android.com/reference/java/beans/PropertyChangeListener.html
PropertyChangeListenerProxy	A										<section class="prog__container"><pre><code>public class PropertyChangeListenerProxy</code></pre>A class which extends the <code>EventListenerProxy</code> specifically for adding a <code>PropertyChangeListener</code> with a "bound" property. Instances of this class can be added as <code>PropertyChangeListener</code>s to a bean which supports firing property change events.</section>	https://developer.android.com/reference/java/beans/PropertyChangeListenerProxy.html
PropertyChangeRegistry	A										<section class="prog__container"><pre><code>public class PropertyChangeRegistry</code></pre>Utility class for managing Observable callbacks.</section>	https://developer.android.com/reference/android/databinding/PropertyChangeRegistry.html
PropertyChangeSupport	A										<section class="prog__container"><pre><code>public class PropertyChangeSupport</code></pre>This is a utility class that can be used by beans that support bound properties. It manages a list of listeners and dispatches <code>PropertyChangeEvent</code>s to them. You can use an instance of this class as a member field of your bean and delegate these types of work to it. The <code>PropertyChangeListener</code> can be registered for all properties or for a property specified by name.</section>	https://developer.android.com/reference/java/beans/PropertyChangeSupport.html
PropertyPermission	A										<section class="prog__container"><pre><code>public final class PropertyPermission</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/util/PropertyPermission.html
PropertyResourceBundle	A										<section class="prog__container"><pre><code>public class PropertyResourceBundle</code></pre><code>PropertyResourceBundle</code> is a concrete subclass of <code>ResourceBundle</code> that manages resources for a locale using a set of static strings from a property file. See <code>ResourceBundle</code> for more information about resource bundles.</section>	https://developer.android.com/reference/java/util/PropertyResourceBundle.html
PropertyValuesHolder	A										<section class="prog__container"><pre><code>public class PropertyValuesHolder</code></pre>This class holds information about a property and the values that that property should take on during an animation. PropertyValuesHolder objects can be used to create animations with ValueAnimator or ObjectAnimator that operate on several different properties in parallel.</section>	https://developer.android.com/reference/android/animation/PropertyValuesHolder.html
Protectable	A										<section class="prog__container"><pre><code>public interface Protectable</code></pre>A <em>Protectable</em> can be run and can throw a Throwable.</section>	https://developer.android.com/reference/junit/framework/Protectable.html
ProtectionDomain	A										<section class="prog__container"><pre><code>public class ProtectionDomain</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/security/ProtectionDomain.html
ProtocolException	A										<section class="prog__container"><pre><code>public class ProtocolException</code></pre>Thrown to indicate that there is an error in the underlying protocol, such as a TCP error.</section>	https://developer.android.com/reference/java/net/ProtocolException.html
ProtocolFamily	A										<section class="prog__container"><pre><code>public interface ProtocolFamily</code></pre>Represents a family of communication protocols.</section>	https://developer.android.com/reference/java/net/ProtocolFamily.html
Provider	A										<section class="prog__container"><pre><code>public abstract class Provider</code></pre>This class represents a "provider" for the Java Security API, where a provider implements some or all parts of Java Security. Services that a provider may implement include: <ul> <li>Algorithms (such as DSA, RSA, MD5 or SHA-1). <li>Key generation, conversion, and management facilities (such as for algorithm-specific keys). </li></li></ul></section>	https://developer.android.com/reference/java/security/Provider.html
Provider.Service	A										<section class="prog__container"><pre><code>public static class Provider.Service</code></pre>The description of a security service. It encapsulates the properties of a service and contains a factory method to obtain new implementation instances of this service.</section>	https://developer.android.com/reference/java/security/Provider.Service.html
ProviderException	A										<section class="prog__container"><pre><code>public class ProviderException</code></pre>A runtime exception for Provider exceptions (such as misconfiguration errors or unrecoverable internal errors), which may be subclassed by Providers to throw specialized, provider-specific runtime errors.</section>	https://developer.android.com/reference/java/security/ProviderException.html
ProviderInfo	A										<section class="prog__container"><pre><code>public final class ProviderInfo</code></pre>Holds information about a specific <code>content provider</code>. This is returned by <code>PackageManager.resolveContentProvider()</code>.</section>	https://developer.android.com/reference/android/content/pm/ProviderInfo.html
Proxy	D								*[[android.net.Proxy]], <section class="prog__container"><pre><code>public final class Proxy</code></pre>A convenience class for accessing the user and default proxy settings.</section>\n*[[reflect.Proxy]], <section class="prog__container"><pre><code>public class Proxy</code></pre><code>Proxy</code> provides static methods for creating dynamic proxy classes and instances, and it is also the superclass of all dynamic proxy classes created by those methods.</section>\n*[[java.net.Proxy]], <section class="prog__container"><pre><code>public class Proxy</code></pre>This class represents a proxy setting, typically a type (http, socks) and a socket address. A <code>Proxy</code> is an immutable object.</section>			
Proxy.Type	A										<section class="prog__container"><pre><code>public static final enum Proxy.Type</code></pre>Represents the proxy type.</section>	https://developer.android.com/reference/java/net/Proxy.Type.html
ProxyInfo	A										<section class="prog__container"><pre><code>public class ProxyInfo</code></pre>Describes a proxy configuration. Proxy configurations are already integrated within the <code>java.net</code> and Apache HTTP stack. So <code>URLConnection</code> and Apache's <code>HttpClient</code> will use them automatically. Other HTTP stacks will need to obtain the proxy info from <code>PROXY_CHANGE_ACTION</code> broadcast as the extra <code>EXTRA_PROXY_INFO</code>.</section>	https://developer.android.com/reference/android/net/ProxyInfo.html
ProxySelector	A										<section class="prog__container"><pre><code>public abstract class ProxySelector</code></pre>Selects the proxy server to use, if any, when connecting to the network resource referenced by a URL. A proxy selector is a concrete sub-class of this class and is registered by invoking the <code>setDefault</code> method. The currently registered proxy selector can be retrieved by calling <code>getDefault</code> method.</section>	https://developer.android.com/reference/java/net/ProxySelector.html
PskKeyManager	A										<section class="prog__container"><pre><code>public abstract class PskKeyManager</code></pre>Provider of key material for pre-shared key (PSK) key exchange used in TLS-PSK cipher suites. <h3>Overview of TLS-PSK</h3></section>	https://developer.android.com/reference/android/net/PskKeyManager.html
PublicKey	A										<section class="prog__container"><pre><code>public interface PublicKey</code></pre></section>	https://developer.android.com/reference/java/security/PublicKey.html
PushbackInputStream	A										<section class="prog__container"><pre><code>public class PushbackInputStream</code></pre>A <code>PushbackInputStream</code> adds functionality to another input stream, namely the ability to "push back" or "unread" one byte. This is useful in situations where it is convenient for a fragment of code to read an indefinite number of data bytes that are delimited by a particular byte value; after reading the terminating byte, the code fragment can "unread" it, so that the next read operation on the input stream will reread the byte that was pushed back. For example, bytes representing the characters constituting an identifier might be terminated by a byte representing an operator character; a method whose job is to read just an identifier can read until it sees the operator and then push the operator back to be re-read.</section>	https://developer.android.com/reference/java/io/PushbackInputStream.html
PushbackReader	A										<section class="prog__container"><pre><code>public class PushbackReader</code></pre>A character-stream reader that allows characters to be pushed back into the stream.</section>	https://developer.android.com/reference/java/io/PushbackReader.html
Px	A										<section class="prog__container"><pre><code>public abstract @interface Px</code></pre>Denotes that an integer parameter, field or method return value is expected to represent a pixel dimension.</section>	https://developer.android.com/reference/android/support/annotation/Px.html
QName	A										<section class="prog__container"><pre><code>public class QName</code></pre></section>	https://developer.android.com/reference/javax/xml/namespace/QName.html
Queue	A										<section class="prog__container"><pre><code>public interface Queue</code></pre>A collection designed for holding elements prior to processing. Besides basic <code>Collection</code> operations, queues provide additional insertion, extraction, and inspection operations. Each of these methods exists in two forms: one throws an exception if the operation fails, the other returns a special value (either <code>null</code> or <code>false</code>, depending on the operation). The latter form of the insert operation is designed specifically for use with capacity-restricted <code>Queue</code> implementations; in most implementations, insert operations cannot fail. <table border="" cellpadding="3" cellspacing="1"> <caption>Summary of Queue methods</caption> <tr> <td></td> <td align="CENTER"><em>Throws exception</em></td> <td align="CENTER"><em>Returns special value</em></td> </tr> <tr> <td><b>Insert</b></td> <td><code>add(e)</code></td> <td><code>offer(e)</code></td> </tr> <tr> <td><b>Remove</b></td> <td><code>remove()</code></td> <td><code>poll()</code></td> </tr> <tr> <td><b>Examine</b></td> <td><code>element()</code></td> <td><code>peek()</code></td> </tr> </table></section>	https://developer.android.com/reference/java/util/Queue.html
QuickContactBadge	A										<section class="prog__container"><pre><code>public class QuickContactBadge</code></pre>Widget used to show an image with the standard QuickContact badge and on-click behavior.</section>	https://developer.android.com/reference/android/widget/QuickContactBadge.html
QuoteSpan	A										<section class="prog__container"><pre><code>public class QuoteSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/QuoteSpan.html
QwertyKeyListener	A										<section class="prog__container"><pre><code>public class QwertyKeyListener</code></pre>This is the standard key listener for alphabetic input on qwerty keyboards. You should generally not need to instantiate this yourself; TextKeyListener will do it for you.</section>	https://developer.android.com/reference/android/text/method/QwertyKeyListener.html
R	D								*[[android.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[annotation.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[annotations.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[compat.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[coreui.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[coreutils.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[customtabs.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[design.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[fragment.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[drawable.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[mediacompat.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[percent.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[provider.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[transition.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[v13.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[v14.preference.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[leanback.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[v17.preference.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[v4.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[appcompat.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[cardview.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[gridlayout.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[mediarouter.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[palette.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[v7.preference.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>\n*[[recyclerview.R]], <section class="prog__container"><pre><code>public final class R</code></pre></section>			
R.anim	D								*[[android.R.anim]], <section class="prog__container"><pre><code>public static final class R.anim</code></pre></section>\n*[[design.R.anim]], <section class="prog__container"><pre><code>public static final class R.anim</code></pre></section>\n*[[appcompat.R.anim]], <section class="prog__container"><pre><code>public static final class R.anim</code></pre></section>			
R.animator	D								*[[android.R.animator]], <section class="prog__container"><pre><code>public static final class R.animator</code></pre></section>\n*[[design.R.animator]], <section class="prog__container"><pre><code>public static final class R.animator</code></pre></section>\n*[[leanback.R.animator]], <section class="prog__container"><pre><code>public static final class R.animator</code></pre></section>			
R.array	A										<section class="prog__container"><pre><code>public static final class R.array</code></pre></section>	https://developer.android.com/reference/android/R.array.html
R.attr	D								*[[android.R.attr]], <section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>\n*[[design.R.attr]], <section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>\n*[[percent.R.attr]], <section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>\n*[[v14.preference.R.attr]], <section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>\n*[[leanback.R.attr]], <section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>\n*[[appcompat.R.attr]], <section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>\n*[[cardview.R.attr]], <section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>\n*[[gridlayout.R.attr]], <section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>\n*[[mediarouter.R.attr]], <section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>\n*[[v7.preference.R.attr]], <section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>\n*[[recyclerview.R.attr]], <section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>			
R.bool	D								*[[android.R.bool]], <section class="prog__container"><pre><code>public static final class R.bool</code></pre></section>\n*[[appcompat.R.bool]], <section class="prog__container"><pre><code>public static final class R.bool</code></pre></section>			
R.color	D								*[[android.R.color]], <section class="prog__container"><pre><code>public static final class R.color</code></pre></section>\n*[[design.R.color]], <section class="prog__container"><pre><code>public static final class R.color</code></pre></section>\n*[[v14.preference.R.color]], <section class="prog__container"><pre><code>public static final class R.color</code></pre></section>\n*[[leanback.R.color]], <section class="prog__container"><pre><code>public static final class R.color</code></pre></section>\n*[[v17.preference.R.color]], <section class="prog__container"><pre><code>public static final class R.color</code></pre></section>\n*[[appcompat.R.color]], <section class="prog__container"><pre><code>public static final class R.color</code></pre></section>\n*[[cardview.R.color]], <section class="prog__container"><pre><code>public static final class R.color</code></pre></section>			
R.dimen	D								*[[android.R.dimen]], <section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>\n*[[design.R.dimen]], <section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>\n*[[leanback.R.dimen]], <section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>\n*[[v17.preference.R.dimen]], <section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>\n*[[appcompat.R.dimen]], <section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>\n*[[cardview.R.dimen]], <section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>\n*[[gridlayout.R.dimen]], <section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>\n*[[mediarouter.R.dimen]], <section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>\n*[[v7.preference.R.dimen]], <section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>\n*[[recyclerview.R.dimen]], <section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>			
R.drawable	D								*[[android.R.drawable]], <section class="prog__container"><pre><code>public static final class R.drawable</code></pre></section>\n*[[design.R.drawable]], <section class="prog__container"><pre><code>public static final class R.drawable</code></pre></section>\n*[[preference.R.drawable]], <section class="prog__container"><pre><code>public static final class R.drawable</code></pre></section>\n*[[leanback.R.drawable]], <section class="prog__container"><pre><code>public static final class R.drawable</code></pre></section>\n*[[appcompat.R.drawable]], <section class="prog__container"><pre><code>public static final class R.drawable</code></pre></section>\n*[[mediarouter.R.drawable]], <section class="prog__container"><pre><code>public static final class R.drawable</code></pre></section>			
R.fraction	D								*[[android.R.fraction]], <section class="prog__container"><pre><code>public static final class R.fraction</code></pre></section>\n*[[leanback.R.fraction]], <section class="prog__container"><pre><code>public static final class R.fraction</code></pre></section>			
R.id	D								*[[android.R.id]], <section class="prog__container"><pre><code>public static final class R.id</code></pre></section>\n*[[design.R.id]], <section class="prog__container"><pre><code>public static final class R.id</code></pre></section>\n*[[transition.R.id]], <section class="prog__container"><pre><code>public static final class R.id</code></pre></section>\n*[[v14.preference.R.id]], <section class="prog__container"><pre><code>public static final class R.id</code></pre></section>\n*[[leanback.R.id]], <section class="prog__container"><pre><code>public static final class R.id</code></pre></section>\n*[[v17.preference.R.id]], <section class="prog__container"><pre><code>public static final class R.id</code></pre></section>\n*[[appcompat.R.id]], <section class="prog__container"><pre><code>public static final class R.id</code></pre></section>\n*[[gridlayout.R.id]], <section class="prog__container"><pre><code>public static final class R.id</code></pre></section>\n*[[mediarouter.R.id]], <section class="prog__container"><pre><code>public static final class R.id</code></pre></section>\n*[[v7.preference.R.id]], <section class="prog__container"><pre><code>public static final class R.id</code></pre></section>\n*[[recyclerview.R.id]], <section class="prog__container"><pre><code>public static final class R.id</code></pre></section>			
R.integer	D								*[[android.R.integer]], <section class="prog__container"><pre><code>public static final class R.integer</code></pre></section>\n*[[design.R.integer]], <section class="prog__container"><pre><code>public static final class R.integer</code></pre></section>\n*[[leanback.R.integer]], <section class="prog__container"><pre><code>public static final class R.integer</code></pre></section>\n*[[appcompat.R.integer]], <section class="prog__container"><pre><code>public static final class R.integer</code></pre></section>\n*[[mediarouter.R.integer]], <section class="prog__container"><pre><code>public static final class R.integer</code></pre></section>			
R.interpolator	D								*[[android.R.interpolator]], <section class="prog__container"><pre><code>public static final class R.interpolator</code></pre></section>\n*[[mediarouter.R.interpolator]], <section class="prog__container"><pre><code>public static final class R.interpolator</code></pre></section>			
R.layout	D								*[[android.R.layout]], <section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>\n*[[design.R.layout]], <section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>\n*[[v14.preference.R.layout]], <section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>\n*[[leanback.R.layout]], <section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>\n*[[v17.preference.R.layout]], <section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>\n*[[appcompat.R.layout]], <section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>\n*[[mediarouter.R.layout]], <section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>\n*[[v7.preference.R.layout]], <section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>			
R.menu	A										<section class="prog__container"><pre><code>public static final class R.menu</code></pre></section>	https://developer.android.com/reference/android/R.menu.html
R.mipmap	A										<section class="prog__container"><pre><code>public static final class R.mipmap</code></pre></section>	https://developer.android.com/reference/android/R.mipmap.html
R.plurals	A										<section class="prog__container"><pre><code>public static final class R.plurals</code></pre></section>	https://developer.android.com/reference/android/R.plurals.html
R.raw	D								*[[android.R.raw]], <section class="prog__container"><pre><code>public static final class R.raw</code></pre></section>\n*[[leanback.R.raw]], <section class="prog__container"><pre><code>public static final class R.raw</code></pre></section>			
R.string	D								*[[android.R.string]], <section class="prog__container"><pre><code>public static final class R.string</code></pre></section>\n*[[design.R.string]], <section class="prog__container"><pre><code>public static final class R.string</code></pre></section>\n*[[leanback.R.string]], <section class="prog__container"><pre><code>public static final class R.string</code></pre></section>\n*[[appcompat.R.string]], <section class="prog__container"><pre><code>public static final class R.string</code></pre></section>\n*[[mediarouter.R.string]], <section class="prog__container"><pre><code>public static final class R.string</code></pre></section>\n*[[preference.R.string]], <section class="prog__container"><pre><code>public static final class R.string</code></pre></section>			
R.style	D								*[[android.R.style]], <section class="prog__container"><pre><code>public static final class R.style</code></pre></section>\n*[[design.R.style]], <section class="prog__container"><pre><code>public static final class R.style</code></pre></section>\n*[[v14.preference.R.style]], <section class="prog__container"><pre><code>public static final class R.style</code></pre></section>\n*[[leanback.R.style]], <section class="prog__container"><pre><code>public static final class R.style</code></pre></section>\n*[[v17.preference.R.style]], <section class="prog__container"><pre><code>public static final class R.style</code></pre></section>\n*[[appcompat.R.style]], <section class="prog__container"><pre><code>public static final class R.style</code></pre></section>\n*[[cardview.R.style]], <section class="prog__container"><pre><code>public static final class R.style</code></pre></section>\n*[[mediarouter.R.style]], <section class="prog__container"><pre><code>public static final class R.style</code></pre></section>\n*[[v7.preference.R.style]], <section class="prog__container"><pre><code>public static final class R.style</code></pre></section>			
R.styleable	D								*[[android.R.styleable]], <section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>\n*[[design.R.styleable]], <section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>\n*[[percent.R.styleable]], <section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>\n*[[v14.preference.R.styleable]], <section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>\n*[[leanback.R.styleable]], <section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>\n*[[appcompat.R.styleable]], <section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>\n*[[cardview.R.styleable]], <section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>\n*[[gridlayout.R.styleable]], <section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>\n*[[mediarouter.R.styleable]], <section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>\n*[[v7.preference.R.styleable]], <section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>\n*[[recyclerview.R.styleable]], <section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>			
R.transition	D								*[[android.R.transition]], <section class="prog__container"><pre><code>public static final class R.transition</code></pre></section>\n*[[leanback.R.transition]], <section class="prog__container"><pre><code>public static final class R.transition</code></pre></section>			
R.xml	A										<section class="prog__container"><pre><code>public static final class R.xml</code></pre></section>	https://developer.android.com/reference/android/R.xml.html
RC2ParameterSpec	A										<section class="prog__container"><pre><code>public class RC2ParameterSpec</code></pre>This class specifies the parameters used with the <i>RC2</i> algorithm.</section>	https://developer.android.com/reference/javax/crypto/spec/RC2ParameterSpec.html
RC5ParameterSpec	A										<section class="prog__container"><pre><code>public class RC5ParameterSpec</code></pre>This class specifies the parameters used with the <i>RC5</i> algorithm.</section>	https://developer.android.com/reference/javax/crypto/spec/RC5ParameterSpec.html
RSAKey	A										<section class="prog__container"><pre><code>public interface RSAKey</code></pre>The interface to an RSA public or private key.</section>	https://developer.android.com/reference/java/security/interfaces/RSAKey.html
RSAKeyGenParameterSpec	A										<section class="prog__container"><pre><code>public class RSAKeyGenParameterSpec</code></pre>This class specifies the set of parameters used to generate an RSA key pair.</section>	https://developer.android.com/reference/java/security/spec/RSAKeyGenParameterSpec.html
RSAMultiPrimePrivateCrtKey	A										<section class="prog__container"><pre><code>public interface RSAMultiPrimePrivateCrtKey</code></pre>The interface to an RSA multi-prime private key, as defined in the PKCS#1 v2.1, using the <i>Chinese Remainder Theorem</i> (CRT) information values.</section>	https://developer.android.com/reference/java/security/interfaces/RSAMultiPrimePrivateCrtKey.html
RSAMultiPrimePrivateCrtKeySpec	A										<section class="prog__container"><pre><code>public class RSAMultiPrimePrivateCrtKeySpec</code></pre>This class specifies an RSA multi-prime private key, as defined in the PKCS#1 v2.1, using the Chinese Remainder Theorem (CRT) information values for efficiency.</section>	https://developer.android.com/reference/java/security/spec/RSAMultiPrimePrivateCrtKeySpec.html
RSAOtherPrimeInfo	A										<section class="prog__container"><pre><code>public class RSAOtherPrimeInfo</code></pre>This class represents the triplet (prime, exponent, and coefficient) inside RSA's OtherPrimeInfo structure, as defined in the PKCS#1 v2.1. The ASN.1 syntax of RSA's OtherPrimeInfo is as follows: <pre> OtherPrimeInfo ::= SEQUENCE { prime INTEGER, exponent INTEGER, coefficient INTEGER } </pre></section>	https://developer.android.com/reference/java/security/spec/RSAOtherPrimeInfo.html
RSAPrivateCrtKey	A										<section class="prog__container"><pre><code>public interface RSAPrivateCrtKey</code></pre>The interface to an RSA private key, as defined in the PKCS#1 standard, using the <i>Chinese Remainder Theorem</i> (CRT) information values.</section>	https://developer.android.com/reference/java/security/interfaces/RSAPrivateCrtKey.html
RSAPrivateCrtKeySpec	A										<section class="prog__container"><pre><code>public class RSAPrivateCrtKeySpec</code></pre>This class specifies an RSA private key, as defined in the PKCS#1 standard, using the Chinese Remainder Theorem (CRT) information values for efficiency.</section>	https://developer.android.com/reference/java/security/spec/RSAPrivateCrtKeySpec.html
RSAPrivateKey	A										<section class="prog__container"><pre><code>public interface RSAPrivateKey</code></pre>The interface to an RSA private key.</section>	https://developer.android.com/reference/java/security/interfaces/RSAPrivateKey.html
RSAPrivateKeySpec	A										<section class="prog__container"><pre><code>public class RSAPrivateKeySpec</code></pre>This class specifies an RSA private key.</section>	https://developer.android.com/reference/java/security/spec/RSAPrivateKeySpec.html
RSAPublicKey	A										<section class="prog__container"><pre><code>public interface RSAPublicKey</code></pre>The interface to an RSA public key.</section>	https://developer.android.com/reference/java/security/interfaces/RSAPublicKey.html
RSAPublicKeySpec	A										<section class="prog__container"><pre><code>public class RSAPublicKeySpec</code></pre>This class specifies an RSA public key.</section>	https://developer.android.com/reference/java/security/spec/RSAPublicKeySpec.html
RSDriverException	D								*[[android.renderscript.RSDriverException]], <section class="prog__container"><pre><code>public class RSDriverException</code></pre>Base class for all exceptions thrown by the Android RenderScript</section>\n*[[v8.renderscript.RSDriverException]], <section class="prog__container"><pre><code>public class RSDriverException</code></pre>Base class for all exceptions thrown by the Android RenderScript</section>			
RSIllegalArgumentException	D								*[[android.renderscript.RSIllegalArgumentException]], <section class="prog__container"><pre><code>public class RSIllegalArgumentException</code></pre>Base class for all exceptions thrown by the Android RenderScript</section>\n*[[v8.renderscript.RSIllegalArgumentException]], <section class="prog__container"><pre><code>public class RSIllegalArgumentException</code></pre>Base class for all exceptions thrown by the Android RenderScript</section>			
RSInvalidStateException	D								*[[android.renderscript.RSInvalidStateException]], <section class="prog__container"><pre><code>public class RSInvalidStateException</code></pre>Base class for all exceptions thrown by the Android RenderScript</section>\n*[[v8.renderscript.RSInvalidStateException]], <section class="prog__container"><pre><code>public class RSInvalidStateException</code></pre>Base class for all exceptions thrown by the Android RenderScript</section>			
RSRuntimeException	D								*[[android.renderscript.RSRuntimeException]], <section class="prog__container"><pre><code>public class RSRuntimeException</code></pre>Base class for all exceptions thrown by the Android RenderScript</section>\n*[[v8.renderscript.RSRuntimeException]], <section class="prog__container"><pre><code>public class RSRuntimeException</code></pre>Base class for all exceptions thrown by the Android RenderScript</section>			
RadialGradient	A										<section class="prog__container"><pre><code>public class RadialGradient</code></pre></section>	https://developer.android.com/reference/android/graphics/RadialGradient.html
RadioButton	A										<section class="prog__container"><pre><code>public class RadioButton</code></pre></section>	https://developer.android.com/reference/android/widget/RadioButton.html
RadioGroup	A										<section class="prog__container"><pre><code>public class RadioGroup</code></pre></section>	https://developer.android.com/reference/android/widget/RadioGroup.html
RadioGroup.LayoutParams	A										<section class="prog__container"><pre><code>public static class RadioGroup.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/widget/RadioGroup.LayoutParams.html
RadioGroup.OnCheckedChangeListener	A										<section class="prog__container"><pre><code>public static interface RadioGroup.OnCheckedChangeListener</code></pre></section>	https://developer.android.com/reference/android/widget/RadioGroup.OnCheckedChangeListener.html
Random	A										<section class="prog__container"><pre><code>public class Random</code></pre>An instance of this class is used to generate a stream of pseudorandom numbers. The class uses a 48-bit seed, which is modified using a linear congruential formula. (See Donald Knuth, <i>The Art of Computer Programming, Volume 2</i>, Section 3.2.1.)</section>	https://developer.android.com/reference/java/util/Random.html
RandomAccess	A										<section class="prog__container"><pre><code>public interface RandomAccess</code></pre>Marker interface used by <tt>List</tt> implementations to indicate that they support fast (generally constant time) random access. The primary purpose of this interface is to allow generic algorithms to alter their behavior to provide good performance when applied to either random or sequential access lists.</section>	https://developer.android.com/reference/java/util/RandomAccess.html
RandomAccessFile	A										<section class="prog__container"><pre><code>public class RandomAccessFile</code></pre>Instances of this class support both reading and writing to a random access file. A random access file behaves like a large array of bytes stored in the file system. There is a kind of cursor, or index into the implied array, called the <em>file pointer</em>; input operations read bytes starting at the file pointer and advance the file pointer past the bytes read. If the random access file is created in read/write mode, then output operations are also available; output operations write bytes starting at the file pointer and advance the file pointer past the bytes written. Output operations that write past the current end of the implied array cause the array to be extended. The file pointer can be read by the <code>getFilePointer</code> method and set by the <code>seek</code> method.</section>	https://developer.android.com/reference/java/io/RandomAccessFile.html
RangeValueIterator	A										<section class="prog__container"><pre><code>public interface RangeValueIterator</code></pre></section>	https://developer.android.com/reference/android/icu/util/RangeValueIterator.html
RangeValueIterator.Element	A										<section class="prog__container"><pre><code>public static class RangeValueIterator.Element</code></pre>Return result wrapper for android.icu.util.RangeValueIterator. Stores the start and limit of the continous result range and the common value all integers between [start, limit - 1] has.</section>	https://developer.android.com/reference/android/icu/util/RangeValueIterator.Element.html
Rasterizer	A										<section class="prog__container"><pre><code>public class Rasterizer</code></pre></section>	https://developer.android.com/reference/android/graphics/Rasterizer.html
RasterizerSpan	A										<section class="prog__container"><pre><code>public class RasterizerSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/RasterizerSpan.html
Rating	A										<section class="prog__container"><pre><code>public final class Rating</code></pre>A class to encapsulate rating information used as content metadata. A rating is defined by its rating style (see <code>RATING_HEART</code>, <code>RATING_THUMB_UP_DOWN</code>, <code>RATING_3_STARS</code>, <code>RATING_4_STARS</code>, <code>RATING_5_STARS</code> or <code>RATING_PERCENTAGE</code>) and the actual rating value (which may be defined as "unrated"), both of which are defined when the rating instance is constructed through one of the factory methods.</section>	https://developer.android.com/reference/android/media/Rating.html
RatingBar	A										<section class="prog__container"><pre><code>public class RatingBar</code></pre>A RatingBar is an extension of SeekBar and ProgressBar that shows a rating in stars. The user can touch/drag or use arrow keys to set the rating when using the default size RatingBar. The smaller RatingBar style ( <code>ratingBarStyleSmall</code>) and the larger indicator-only style (<code>ratingBarStyleIndicator</code>) do not support user interaction and should only be used as indicators.</section>	https://developer.android.com/reference/android/widget/RatingBar.html
RatingBar.OnRatingBarChangeListener	A										<section class="prog__container"><pre><code>public static interface RatingBar.OnRatingBarChangeListener</code></pre>A callback that notifies clients when the rating has been changed. This includes changes that were initiated by the user through a touch gesture or arrow key/trackball as well as changes that were initiated programmatically.</section>	https://developer.android.com/reference/android/widget/RatingBar.OnRatingBarChangeListener.html
RatingCompat	A										<section class="prog__container"><pre><code>public final class RatingCompat</code></pre>A class to encapsulate rating information used as content metadata. A rating is defined by its rating style (see <code>RATING_HEART</code>, <code>RATING_THUMB_UP_DOWN</code>, <code>RATING_3_STARS</code>, <code>RATING_4_STARS</code>, <code>RATING_5_STARS</code> or <code>RATING_PERCENTAGE</code>) and the actual rating value (which may be defined as "unrated"), both of which are defined when the rating instance is constructed through one of the factory methods.</section>	https://developer.android.com/reference/android/support/v4/media/RatingCompat.html
Rational	A										<section class="prog__container"><pre><code>public final class Rational</code></pre></section>	https://developer.android.com/reference/android/util/Rational.html
RawRes	A										<section class="prog__container"><pre><code>public abstract @interface RawRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be a raw resource reference.</section>	https://developer.android.com/reference/android/support/annotation/RawRes.html
ReadOnlyBufferException	A										<section class="prog__container"><pre><code>public class ReadOnlyBufferException</code></pre>Unchecked exception thrown when a content-mutation method such as <tt>put</tt> or <tt>compact</tt> is invoked upon a read-only buffer.</section>	https://developer.android.com/reference/java/nio/ReadOnlyBufferException.html
ReadWriteLock	A										<section class="prog__container"><pre><code>public interface ReadWriteLock</code></pre>A <code>ReadWriteLock</code> maintains a pair of associated <code>locks</code>, one for read-only operations and one for writing. The read lock</section>	https://developer.android.com/reference/java/util/concurrent/locks/ReadWriteLock.html
Readable	A										<section class="prog__container"><pre><code>public interface Readable</code></pre>A <tt>Readable</tt> is a source of characters. Characters from a <tt>Readable</tt> are made available to callers of the read method via a <code>CharBuffer</code>.</section>	https://developer.android.com/reference/java/lang/Readable.html
ReadableByteChannel	A										<section class="prog__container"><pre><code>public interface ReadableByteChannel</code></pre>A channel that can read bytes.</section>	https://developer.android.com/reference/java/nio/channels/ReadableByteChannel.html
Reader	A										<section class="prog__container"><pre><code>public abstract class Reader</code></pre>Abstract class for reading character streams. The only methods that a subclass must implement are read(char[], int, int) and close(). Most subclasses, however, will override some of the methods defined here in order to provide higher efficiency, additional functionality, or both.</section>	https://developer.android.com/reference/java/io/Reader.html
ReceiverCallNotAllowedException	A										<section class="prog__container"><pre><code>public class ReceiverCallNotAllowedException</code></pre>This exception is thrown from <code>registerReceiver(BroadcastReceiver, IntentFilter)</code> and <code>bindService(Intent, ServiceConnection, int)</code> when these methods are being used from an <code>BroadcastReceiver</code> component. In this case, the component will no longer be active upon returning from receiving the Intent, so it is not valid to use asynchronous APIs.</section>	https://developer.android.com/reference/android/content/ReceiverCallNotAllowedException.html
RecognitionListener	A										<section class="prog__container"><pre><code>public interface RecognitionListener</code></pre>Used for receiving notifications from the SpeechRecognizer when the recognition related events occur. All the callbacks are executed on the Application main thread.</section>	https://developer.android.com/reference/android/speech/RecognitionListener.html
RecognitionService	A										<section class="prog__container"><pre><code>public abstract class RecognitionService</code></pre>This class provides a base class for recognition service implementations. This class should be extended only in case you wish to implement a new speech recognizer. Please note that the implementation of this service is stateless.</section>	https://developer.android.com/reference/android/speech/RecognitionService.html
RecognitionService.Callback	A										<section class="prog__container"><pre><code>public class RecognitionService.Callback</code></pre>This class receives callbacks from the speech recognition service and forwards them to the user. An instance of this class is passed to the <code>onStartListening(Intent, Callback)</code> method. Recognizers may call these methods on any thread.</section>	https://developer.android.com/reference/android/speech/RecognitionService.Callback.html
RecognizerIntent	A										<section class="prog__container"><pre><code>public class RecognizerIntent</code></pre>Constants for supporting speech recognition through starting an <code>Intent</code></section>	https://developer.android.com/reference/android/speech/RecognizerIntent.html
RecognizerResultsIntent	A										<section class="prog__container"><pre><code>public class RecognizerResultsIntent</code></pre>Constants for intents related to showing speech recognition results. These constants should not be needed for normal utilization of speech recognition. They would only be called if you wanted to trigger a view of voice search results in your application, or implemented if you wanted to offer a different view for voice search results with your application. The standard behavior here for someone receiving an <code>ACTION_VOICE_SEARCH_RESULTS</code> is to first retrieve the list of <code>EXTRA_VOICE_SEARCH_RESULT_STRINGS</code>, and use any provided HTML for that result in <code>EXTRA_VOICE_SEARCH_RESULT_HTML</code>, if available, to display the search results. If that is not available, then the corresponding url for that result in <code>EXTRA_VOICE_SEARCH_RESULT_URLS</code> should be used. And if even that is not available, then a search url should be constructed from the actual recognition result string.</section>	https://developer.android.com/reference/android/speech/RecognizerResultsIntent.html
RecommendationExtender	A										<section class="prog__container"><pre><code>public final class RecommendationExtender</code></pre></section>	https://developer.android.com/reference/android/support/app/recommendation/RecommendationExtender.html
RecoverySystem	A										<section class="prog__container"><pre><code>public class RecoverySystem</code></pre>RecoverySystem contains methods for interacting with the Android recovery system (the separate partition that can be used to install system updates, wipe user data, etc.)</section>	https://developer.android.com/reference/android/os/RecoverySystem.html
RecoverySystem.ProgressListener	A										<section class="prog__container"><pre><code>public static interface RecoverySystem.ProgressListener</code></pre>Interface definition for a callback to be invoked regularly as verification proceeds.</section>	https://developer.android.com/reference/android/os/RecoverySystem.ProgressListener.html
Rect	A										<section class="prog__container"><pre><code>public final class Rect</code></pre>Rect holds four integer coordinates for a rectangle. The rectangle is represented by the coordinates of its 4 edges (left, top, right bottom). These fields can be accessed directly. Use width() and height() to retrieve the rectangle's width and height. Note: most methods do not check to see that the coordinates are sorted correctly (i.e. left &lt;= right and top &lt;= bottom).</section>	https://developer.android.com/reference/android/graphics/Rect.html
RectEvaluator	A										<section class="prog__container"><pre><code>public class RectEvaluator</code></pre>This evaluator can be used to perform type interpolation between <code>Rect</code> values.</section>	https://developer.android.com/reference/android/animation/RectEvaluator.html
RectF	A										<section class="prog__container"><pre><code>public class RectF</code></pre>RectF holds four float coordinates for a rectangle. The rectangle is represented by the coordinates of its 4 edges (left, top, right bottom). These fields can be accessed directly. Use width() and height() to retrieve the rectangle's width and height. Note: most methods do not check to see that the coordinates are sorted correctly (i.e. left &lt;= right and top &lt;= bottom).</section>	https://developer.android.com/reference/android/graphics/RectF.html
RectShape	A										<section class="prog__container"><pre><code>public class RectShape</code></pre>Defines a rectangle shape. The rectangle can be drawn to a Canvas with its own draw() method, but more graphical control is available if you instead pass the RectShape to a <code>ShapeDrawable</code>.</section>	https://developer.android.com/reference/android/graphics/drawable/shapes/RectShape.html
RecursiveAction	A										<section class="prog__container"><pre><code>public abstract class RecursiveAction</code></pre>A recursive resultless <code>ForkJoinTask</code>. This class establishes conventions to parameterize resultless actions as <code>Void</code> <code>ForkJoinTask</code>s. Because <code>null</code> is the only valid value of type <code>Void</code>, methods such as <code>join</code> always return <code>null</code> upon completion.</section>	https://developer.android.com/reference/java/util/concurrent/RecursiveAction.html
RecursiveTask	A										<section class="prog__container"><pre><code>public abstract class RecursiveTask</code></pre>A recursive result-bearing <code>ForkJoinTask</code>.</section>	https://developer.android.com/reference/java/util/concurrent/RecursiveTask.html
RecyclerView	A										<section class="prog__container"><pre><code>public class RecyclerView</code></pre>A flexible view for providing a limited window into a large data set. <h3>Glossary of terms:</h3> <ul> <li><em>Adapter:</em> A subclass of <code>RecyclerView.Adapter</code> responsible for providing views that represent items in a data set.</li> <li><em>Position:</em> The position of a data item within an <em>Adapter</em>.</li> <li><em>Index:</em> The index of an attached child view as used in a call to <code>getChildAt(int)</code>. Contrast with <em>Position.</em></li> <li><em>Binding:</em> The process of preparing a child view to display data corresponding to a <em>position</em> within the adapter.</li> <li><em>Recycle (view):</em> A view previously used to display data for a specific adapter position may be placed in a cache for later reuse to display the same type of data again later. This can drastically improve performance by skipping initial layout inflation or construction.</li> <li><em>Scrap (view):</em> A child view that has entered into a temporarily detached state during layout. Scrap views may be reused without becoming fully detached from the parent RecyclerView, either unmodified if no rebinding is required or modified by the adapter if the view was considered <em>dirty</em>.</li> <li><em>Dirty (view):</em> A child view that must be rebound by the adapter before being displayed.</li> </ul> <h4>Positions in RecyclerView:</h4></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.html
RecyclerView.AdapterDataObserver	A										<section class="prog__container"><pre><code>public static abstract class RecyclerView.AdapterDataObserver</code></pre>Observer base class for watching changes to an <code>RecyclerView.Adapter</code>. See <code>registerAdapterDataObserver(AdapterDataObserver)</code>.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.AdapterDataObserver.html
RecyclerView.ChildDrawingOrderCallback	A										<section class="prog__container"><pre><code>public static interface RecyclerView.ChildDrawingOrderCallback</code></pre>A callback interface that can be used to alter the drawing order of RecyclerView children.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.ChildDrawingOrderCallback.html
RecyclerView.ItemAnimator	A										<section class="prog__container"><pre><code>public static abstract class RecyclerView.ItemAnimator</code></pre>This class defines the animations that take place on items as changes are made to the adapter. Subclasses of ItemAnimator can be used to implement custom animations for actions on ViewHolder items. The RecyclerView will manage retaining these items while they are being animated, but implementors must call <code>dispatchAnimationFinished(ViewHolder)</code> when a ViewHolder's animation is finished. In other words, there must be a matching <code>dispatchAnimationFinished(ViewHolder)</code> call for each <code>animateAppearance()</code>, <code>animateChange()</code> <code>animatePersistence()</code>, and <code>animateDisappearance()</code> call.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.ItemAnimator.html
RecyclerView.ItemAnimator.AdapterChanges	A										<section class="prog__container"><pre><code>public static abstract @interface RecyclerView.ItemAnimator.AdapterChanges</code></pre>The set of flags that might be passed to <code>recordPreLayoutInformation(State, ViewHolder, int, List)</code>.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.ItemAnimator.AdapterChanges.html
RecyclerView.ItemAnimator.ItemAnimatorFinishedListener	A										<section class="prog__container"><pre><code>public static interface RecyclerView.ItemAnimator.ItemAnimatorFinishedListener</code></pre>This interface is used to inform listeners when all pending or running animations in an ItemAnimator are finished. This can be used, for example, to delay an action in a data set until currently-running animations are complete.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.ItemAnimator.ItemAnimatorFinishedListener.html
RecyclerView.ItemAnimator.ItemHolderInfo	A										<section class="prog__container"><pre><code>public static class RecyclerView.ItemAnimator.ItemHolderInfo</code></pre>A simple data structure that holds information about an item's bounds. This information is used in calculating item animations. Default implementation of <code>recordPreLayoutInformation(RecyclerView.State, ViewHolder, int, List)</code> and <code>recordPostLayoutInformation(RecyclerView.State, ViewHolder)</code> returns this data structure. You can extend this class if you would like to keep more information about the Views.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.ItemAnimator.ItemHolderInfo.html
RecyclerView.ItemDecoration	A										<section class="prog__container"><pre><code>public static abstract class RecyclerView.ItemDecoration</code></pre>An ItemDecoration allows the application to add a special drawing and layout offset to specific item views from the adapter's data set. This can be useful for drawing dividers between items, highlights, visual grouping boundaries and more.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.ItemDecoration.html
RecyclerView.LayoutManager	A										<section class="prog__container"><pre><code>public static abstract class RecyclerView.LayoutManager</code></pre>A <code>LayoutManager</code> is responsible for measuring and positioning item views within a <code>RecyclerView</code> as well as determining the policy for when to recycle item views that are no longer visible to the user. By changing the <code>LayoutManager</code> a <code>RecyclerView</code> can be used to implement a standard vertically scrolling list, a uniform grid, staggered grids, horizontally scrolling collections and more. Several stock layout managers are provided for general use.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.LayoutManager.html
RecyclerView.LayoutManager.LayoutPrefetchRegistry	A										<section class="prog__container"><pre><code>public static interface RecyclerView.LayoutManager.LayoutPrefetchRegistry</code></pre>Interface for LayoutManagers to request items to be prefetched, based on position, with specified distance from viewport, which indicates priority.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.LayoutManager.LayoutPrefetchRegistry.html
RecyclerView.LayoutManager.Properties	A										<section class="prog__container"><pre><code>public static class RecyclerView.LayoutManager.Properties</code></pre>Some general properties that a LayoutManager may want to use.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.LayoutManager.Properties.html
RecyclerView.LayoutParams	A										<section class="prog__container"><pre><code>public static class RecyclerView.LayoutParams</code></pre><code>LayoutParams</code> subclass for children of <code>RecyclerView</code>. Custom <code>layout managers</code> are encouraged to create their own subclass of this <code>LayoutParams</code> class to store any additional required per-child view metadata about the layout.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.LayoutParams.html
RecyclerView.OnChildAttachStateChangeListener	A										<section class="prog__container"><pre><code>public static interface RecyclerView.OnChildAttachStateChangeListener</code></pre>A Listener interface that can be attached to a RecylcerView to get notified whenever a ViewHolder is attached to or detached from RecyclerView.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.OnChildAttachStateChangeListener.html
RecyclerView.OnFlingListener	A										<section class="prog__container"><pre><code>public static abstract class RecyclerView.OnFlingListener</code></pre>This class defines the behavior of fling if the developer wishes to handle it.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.OnFlingListener.html
RecyclerView.OnItemTouchListener	A										<section class="prog__container"><pre><code>public static interface RecyclerView.OnItemTouchListener</code></pre>An OnItemTouchListener allows the application to intercept touch events in progress at the view hierarchy level of the RecyclerView before those touch events are considered for RecyclerView's own scrolling behavior.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.OnItemTouchListener.html
RecyclerView.OnScrollListener	A										<section class="prog__container"><pre><code>public static abstract class RecyclerView.OnScrollListener</code></pre>An OnScrollListener can be added to a RecyclerView to receive messages when a scrolling event has occurred on that RecyclerView.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.OnScrollListener.html
RecyclerView.RecycledViewPool	A										<section class="prog__container"><pre><code>public static class RecyclerView.RecycledViewPool</code></pre>RecycledViewPool lets you share Views between multiple RecyclerViews.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.RecycledViewPool.html
RecyclerView.Recycler	A										<section class="prog__container"><pre><code>public final class RecyclerView.Recycler</code></pre>A Recycler is responsible for managing scrapped or detached item views for reuse.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.Recycler.html
RecyclerView.RecyclerListener	A										<section class="prog__container"><pre><code>public static interface RecyclerView.RecyclerListener</code></pre>A RecyclerListener can be set on a RecyclerView to receive messages whenever a view is recycled.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.RecyclerListener.html
RecyclerView.SimpleOnItemTouchListener	A										<section class="prog__container"><pre><code>public static class RecyclerView.SimpleOnItemTouchListener</code></pre>An implementation of <code>RecyclerView.OnItemTouchListener</code> that has empty method bodies and default return values.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.SimpleOnItemTouchListener.html
RecyclerView.SmoothScroller	A										<section class="prog__container"><pre><code>public static abstract class RecyclerView.SmoothScroller</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.SmoothScroller.html
RecyclerView.SmoothScroller.Action	A										<section class="prog__container"><pre><code>public static class RecyclerView.SmoothScroller.Action</code></pre>Holds information about a smooth scroll request by a <code>RecyclerView.SmoothScroller</code>.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.SmoothScroller.Action.html
RecyclerView.SmoothScroller.ScrollVectorProvider	A										<section class="prog__container"><pre><code>public static interface RecyclerView.SmoothScroller.ScrollVectorProvider</code></pre>An interface which is optionally implemented by custom <code>RecyclerView.LayoutManager</code> to provide a hint to a <code>RecyclerView.SmoothScroller</code> about the location of the target position.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.SmoothScroller.ScrollVectorProvider.html
RecyclerView.State	A										<section class="prog__container"><pre><code>public static class RecyclerView.State</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.State.html
RecyclerView.ViewCacheExtension	A										<section class="prog__container"><pre><code>public static abstract class RecyclerView.ViewCacheExtension</code></pre>ViewCacheExtension is a helper class to provide an additional layer of view caching that can be controlled by the developer.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.ViewCacheExtension.html
RecyclerView.ViewHolder	A										<section class="prog__container"><pre><code>public static abstract class RecyclerView.ViewHolder</code></pre>A ViewHolder describes an item view and metadata about its place within the RecyclerView.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerView.ViewHolder.html
RecyclerViewAccessibilityDelegate	A										<section class="prog__container"><pre><code>public class RecyclerViewAccessibilityDelegate</code></pre>The AccessibilityDelegate used by RecyclerView.</section>	https://developer.android.com/reference/android/support/v7/widget/RecyclerViewAccessibilityDelegate.html
ReentrantLock	A										<section class="prog__container"><pre><code>public class ReentrantLock</code></pre>A reentrant mutual exclusion <code>Lock</code> with the same basic behavior and semantics as the implicit monitor lock accessed using <code>synchronized</code> methods and statements, but with extended capabilities.</section>	https://developer.android.com/reference/java/util/concurrent/locks/ReentrantLock.html
ReentrantReadWriteLock	A										<section class="prog__container"><pre><code>public class ReentrantReadWriteLock</code></pre>An implementation of <code>ReadWriteLock</code> supporting similar semantics to <code>ReentrantLock</code>.</section>	https://developer.android.com/reference/java/util/concurrent/locks/ReentrantReadWriteLock.html
ReentrantReadWriteLock.ReadLock	A										<section class="prog__container"><pre><code>public static class ReentrantReadWriteLock.ReadLock</code></pre>The lock returned by method <code>readLock()</code>.</section>	https://developer.android.com/reference/java/util/concurrent/locks/ReentrantReadWriteLock.ReadLock.html
ReentrantReadWriteLock.WriteLock	A										<section class="prog__container"><pre><code>public static class ReentrantReadWriteLock.WriteLock</code></pre>The lock returned by method <code>writeLock()</code>.</section>	https://developer.android.com/reference/java/util/concurrent/locks/ReentrantReadWriteLock.WriteLock.html
Ref	A										<section class="prog__container"><pre><code>public interface Ref</code></pre>The mapping in the Java programming language of an SQL <code>REF</code> value, which is a reference to an SQL structured type value in the database.</section>	https://developer.android.com/reference/java/sql/Ref.html
Reference	A										<section class="prog__container"><pre><code>public abstract class Reference</code></pre>Abstract base class for reference objects. This class defines the operations common to all reference objects. Because reference objects are implemented in close cooperation with the garbage collector, this class may not be subclassed directly.</section>	https://developer.android.com/reference/java/lang/ref/Reference.html
ReferenceQueue	A										<section class="prog__container"><pre><code>public class ReferenceQueue</code></pre>Reference queues, to which registered reference objects are appended by the garbage collector after the appropriate reachability changes are detected.</section>	https://developer.android.com/reference/java/lang/ref/ReferenceQueue.html
ReflectPermission	A										<section class="prog__container"><pre><code>public final class ReflectPermission</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/lang/reflect/ReflectPermission.html
ReflectiveOperationException	A										<section class="prog__container"><pre><code>public class ReflectiveOperationException</code></pre>Common superclass of exceptions thrown by reflective operations in core reflection.</section>	https://developer.android.com/reference/java/lang/ReflectiveOperationException.html
Region	A										<section class="prog__container"><pre><code>public class Region</code></pre></section>	https://developer.android.com/reference/android/graphics/Region.html
Region.Op	A										<section class="prog__container"><pre><code>public static final enum Region.Op</code></pre></section>	https://developer.android.com/reference/android/graphics/Region.Op.html
RegionIterator	A										<section class="prog__container"><pre><code>public class RegionIterator</code></pre></section>	https://developer.android.com/reference/android/graphics/RegionIterator.html
RejectedExecutionException	A										<section class="prog__container"><pre><code>public class RejectedExecutionException</code></pre>Exception thrown by an <code>Executor</code> when a task cannot be accepted for execution.</section>	https://developer.android.com/reference/java/util/concurrent/RejectedExecutionException.html
RejectedExecutionHandler	A										<section class="prog__container"><pre><code>public interface RejectedExecutionHandler</code></pre>A handler for tasks that cannot be executed by a <code>ThreadPoolExecutor</code>.</section>	https://developer.android.com/reference/java/util/concurrent/RejectedExecutionHandler.html
RelativeDateTimeFormatter	A										<section class="prog__container"><pre><code>public final class RelativeDateTimeFormatter</code></pre>Formats simple relative dates. There are two types of relative dates that it handles: <ul> <li>relative dates with a quantity e.g "in 5 days"</li> <li>relative dates without a quantity e.g "next Tuesday"</li> </ul></section>	https://developer.android.com/reference/android/icu/text/RelativeDateTimeFormatter.html
RelativeDateTimeFormatter.AbsoluteUnit	A										<section class="prog__container"><pre><code>public static final enum RelativeDateTimeFormatter.AbsoluteUnit</code></pre>Represents an absolute unit.</section>	https://developer.android.com/reference/android/icu/text/RelativeDateTimeFormatter.AbsoluteUnit.html
RelativeDateTimeFormatter.Direction	A										<section class="prog__container"><pre><code>public static final enum RelativeDateTimeFormatter.Direction</code></pre>Represents a direction for an absolute unit e.g "Next Tuesday" or "Last Tuesday"</section>	https://developer.android.com/reference/android/icu/text/RelativeDateTimeFormatter.Direction.html
RelativeDateTimeFormatter.RelativeUnit	A										<section class="prog__container"><pre><code>public static final enum RelativeDateTimeFormatter.RelativeUnit</code></pre>Represents the unit for formatting a relative date. e.g "in 5 days" or "in 3 months"</section>	https://developer.android.com/reference/android/icu/text/RelativeDateTimeFormatter.RelativeUnit.html
RelativeDateTimeFormatter.Style	A										<section class="prog__container"><pre><code>public static final enum RelativeDateTimeFormatter.Style</code></pre>The formatting style</section>	https://developer.android.com/reference/android/icu/text/RelativeDateTimeFormatter.Style.html
RelativeLayout	A										<section class="prog__container"><pre><code>public class RelativeLayout</code></pre>A Layout where the positions of the children can be described in relation to each other or to the parent.</section>	https://developer.android.com/reference/android/widget/RelativeLayout.html
RelativeLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class RelativeLayout.LayoutParams</code></pre>Per-child layout information associated with RelativeLayout.</section>	https://developer.android.com/reference/android/widget/RelativeLayout.LayoutParams.html
RelativeSizeSpan	A										<section class="prog__container"><pre><code>public class RelativeSizeSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/RelativeSizeSpan.html
RemoteConference	A										<section class="prog__container"><pre><code>public final class RemoteConference</code></pre>A conference provided to a <code>ConnectionService</code> by another <code>ConnectionService</code> through <code>conferenceRemoteConnections(RemoteConnection, RemoteConnection)</code>. Once created, a <code>RemoteConference</code> can be used to control the conference call or monitor changes through <code>RemoteConnection.Callback</code>.</section>	https://developer.android.com/reference/android/telecom/RemoteConference.html
RemoteConference.Callback	A										<section class="prog__container"><pre><code>public static abstract class RemoteConference.Callback</code></pre>Callback base class for <code>RemoteConference</code>.</section>	https://developer.android.com/reference/android/telecom/RemoteConference.Callback.html
RemoteConnection	A										<section class="prog__container"><pre><code>public final class RemoteConnection</code></pre>A connection provided to a <code>ConnectionService</code> by another <code>ConnectionService</code> running in a different process.</section>	https://developer.android.com/reference/android/telecom/RemoteConnection.html
RemoteConnection.Callback	A										<section class="prog__container"><pre><code>public static abstract class RemoteConnection.Callback</code></pre>Callback base class for <code>RemoteConnection</code>.</section>	https://developer.android.com/reference/android/telecom/RemoteConnection.Callback.html
RemoteConnection.VideoProvider	A										<section class="prog__container"><pre><code>public static class RemoteConnection.VideoProvider</code></pre><code>RemoteConnection.VideoProvider</code> associated with a <code>RemoteConnection</code>. Used to receive video related events and control the video associated with a <code>RemoteConnection</code>.</section>	https://developer.android.com/reference/android/telecom/RemoteConnection.VideoProvider.html
RemoteConnection.VideoProvider.Callback	A										<section class="prog__container"><pre><code>public static abstract class RemoteConnection.VideoProvider.Callback</code></pre>Callback class used by the <code>RemoteConnection.VideoProvider</code> to relay events from the <code>Connection.VideoProvider</code>.</section>	https://developer.android.com/reference/android/telecom/RemoteConnection.VideoProvider.Callback.html
RemoteControlClient	A										<section class="prog__container"><pre><code>public class RemoteControlClient</code></pre><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> Use <code>MediaSession</code> instead.</section>	https://developer.android.com/reference/android/media/RemoteControlClient.html
RemoteControlClient.MetadataEditor	A										<section class="prog__container"><pre><code>public class RemoteControlClient.MetadataEditor</code></pre><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> Use <code>MediaMetadata</code> and <code>MediaSession</code> instead.</section>	https://developer.android.com/reference/android/media/RemoteControlClient.MetadataEditor.html
RemoteControlClient.OnGetPlaybackPositionListener	A										<section class="prog__container"><pre><code>public static interface RemoteControlClient.OnGetPlaybackPositionListener</code></pre>Interface definition for a callback to be invoked when the media playback position is queried.</section>	https://developer.android.com/reference/android/media/RemoteControlClient.OnGetPlaybackPositionListener.html
RemoteControlClient.OnMetadataUpdateListener	A										<section class="prog__container"><pre><code>public static interface RemoteControlClient.OnMetadataUpdateListener</code></pre>Interface definition for a callback to be invoked when one of the metadata values has been updated. Implement this interface to receive metadata updates after registering your listener through <code>setMetadataUpdateListener(OnMetadataUpdateListener)</code>.</section>	https://developer.android.com/reference/android/media/RemoteControlClient.OnMetadataUpdateListener.html
RemoteControlClient.OnPlaybackPositionUpdateListener	A										<section class="prog__container"><pre><code>public static interface RemoteControlClient.OnPlaybackPositionUpdateListener</code></pre>Interface definition for a callback to be invoked when the media playback position is requested to be updated.</section>	https://developer.android.com/reference/android/media/RemoteControlClient.OnPlaybackPositionUpdateListener.html
RemoteController	A										<section class="prog__container"><pre><code>public final class RemoteController</code></pre><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> Use <code>MediaController</code> instead.</section>	https://developer.android.com/reference/android/media/RemoteController.html
RemoteController.MetadataEditor	A										<section class="prog__container"><pre><code>public class RemoteController.MetadataEditor</code></pre>A class to read the metadata published by a <code>RemoteControlClient</code>, or send a <code>RemoteControlClient</code> new values for keys that can be edited.</section>	https://developer.android.com/reference/android/media/RemoteController.MetadataEditor.html
RemoteController.OnClientUpdateListener	A										<section class="prog__container"><pre><code>public static interface RemoteController.OnClientUpdateListener</code></pre>Interface definition for the callbacks to be invoked whenever media events, metadata and playback status are available.</section>	https://developer.android.com/reference/android/media/RemoteController.OnClientUpdateListener.html
RemoteException	A										<section class="prog__container"><pre><code>public class RemoteException</code></pre>Parent exception for all Binder remote-invocation errors</section>	https://developer.android.com/reference/android/os/RemoteException.html
RemoteInput	D								*[[android.app.RemoteInput]], <section class="prog__container"><pre><code>public final class RemoteInput</code></pre>A <code>RemoteInput</code> object specifies input to be collected from a user to be passed along with an intent inside a <code>PendingIntent</code> that is sent. Always use <code>RemoteInput.Builder</code> to create instances of this class. <p class="note"> See Receiving Voice Input from a Notification for more information on how to use this class.</section>\n*[[v4.app.RemoteInput]], <section class="prog__container"><pre><code>public final class RemoteInput</code></pre>Helper for using the <code>RemoteInput</code> API introduced after API level 4 in a backwards compatible fashion.</section>			
RemoteInput.Builder	D								*[[android.app.RemoteInput.Builder]], <section class="prog__container"><pre><code>public static final class RemoteInput.Builder</code></pre>Builder class for <code>RemoteInput</code> objects.</section>\n*[[v4.app.RemoteInput.Builder]], <section class="prog__container"><pre><code>public static final class RemoteInput.Builder</code></pre>Builder class for <code>RemoteInput</code> objects.</section>			
RemotePlaybackClient	A										<section class="prog__container"><pre><code>public class RemotePlaybackClient</code></pre>A helper class for playing media on remote routes using the remote playback protocol defined by <code>MediaControlIntent</code>.</section>	https://developer.android.com/reference/android/support/v7/media/RemotePlaybackClient.html
RemotePlaybackClient.ActionCallback	A										<section class="prog__container"><pre><code>public static abstract class RemotePlaybackClient.ActionCallback</code></pre>Base callback type for remote playback requests.</section>	https://developer.android.com/reference/android/support/v7/media/RemotePlaybackClient.ActionCallback.html
RemotePlaybackClient.ItemActionCallback	A										<section class="prog__container"><pre><code>public static abstract class RemotePlaybackClient.ItemActionCallback</code></pre>Callback for remote playback requests that operate on items.</section>	https://developer.android.com/reference/android/support/v7/media/RemotePlaybackClient.ItemActionCallback.html
RemotePlaybackClient.OnMessageReceivedListener	A										<section class="prog__container"><pre><code>public static interface RemotePlaybackClient.OnMessageReceivedListener</code></pre>A callback that will receive messages from media sessions.</section>	https://developer.android.com/reference/android/support/v7/media/RemotePlaybackClient.OnMessageReceivedListener.html
RemotePlaybackClient.SessionActionCallback	A										<section class="prog__container"><pre><code>public static abstract class RemotePlaybackClient.SessionActionCallback</code></pre>Callback for remote playback requests that operate on sessions.</section>	https://developer.android.com/reference/android/support/v7/media/RemotePlaybackClient.SessionActionCallback.html
RemotePlaybackClient.StatusCallback	A										<section class="prog__container"><pre><code>public static abstract class RemotePlaybackClient.StatusCallback</code></pre>A callback that will receive media status updates.</section>	https://developer.android.com/reference/android/support/v7/media/RemotePlaybackClient.StatusCallback.html
RemoteViews	A										<section class="prog__container"><pre><code>public class RemoteViews</code></pre>A class that describes a view hierarchy that can be displayed in another process. The hierarchy is inflated from a layout resource file, and this class provides some basic operations for modifying the content of the inflated hierarchy.</section>	https://developer.android.com/reference/android/widget/RemoteViews.html
RemoteViews.ActionException	A										<section class="prog__container"><pre><code>public static class RemoteViews.ActionException</code></pre>Exception to send when something goes wrong executing an action</section>	https://developer.android.com/reference/android/widget/RemoteViews.ActionException.html
RemoteViews.RemoteView	A										<section class="prog__container"><pre><code>public static abstract @interface RemoteViews.RemoteView</code></pre>This annotation indicates that a subclass of View is alllowed to be used with the <code>RemoteViews</code> mechanism.</section>	https://developer.android.com/reference/android/widget/RemoteViews.RemoteView.html
RemoteViewsService	A										<section class="prog__container"><pre><code>public abstract class RemoteViewsService</code></pre>The service to be connected to for a remote adapter to request RemoteViews. Users should extend the RemoteViewsService to provide the appropriate RemoteViewsFactory's used to populate the remote collection view (ListView, GridView, etc).</section>	https://developer.android.com/reference/android/widget/RemoteViewsService.html
RemoteViewsService.RemoteViewsFactory	A										<section class="prog__container"><pre><code>public static interface RemoteViewsService.RemoteViewsFactory</code></pre>An interface for an adapter between a remote collection view (ListView, GridView, etc) and the underlying data for that view. The implementor is responsible for making a RemoteView for each item in the data set. This interface is a thin wrapper around <code>Adapter</code>.</section>	https://developer.android.com/reference/android/widget/RemoteViewsService.RemoteViewsFactory.html
RenamingDelegatingContext	A										<section class="prog__container"><pre><code>public class RenamingDelegatingContext</code></pre><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/RenamingDelegatingContext.html
RenderScript	D								*[[android.renderscript.RenderScript]], <section class="prog__container"><pre><code>public class RenderScript</code></pre>This class provides access to a RenderScript context, which controls RenderScript initialization, resource management, and teardown. An instance of the RenderScript class must be created before any other RS objects can be created. <div class="special reference"> <h3>Developer Guides</h3></section>\n*[[v8.renderscript.RenderScript]], <section class="prog__container"><pre><code>public class RenderScript</code></pre>This class provides access to a RenderScript context, which controls RenderScript initialization, resource management, and teardown. An instance of the RenderScript class must be created before any other RS objects can be created. <div class="special reference"> <h3>Developer Guides</h3></section>			
RenderScript.ContextType	D								*[[android.renderscript.RenderScript.ContextType]], <section class="prog__container"><pre><code>public static final enum RenderScript.ContextType</code></pre>ContextType specifies the specific type of context to be created.</section>\n*[[v8.renderscript.RenderScript.ContextType]], <section class="prog__container"><pre><code>public static final enum RenderScript.ContextType</code></pre>ContextType specifies the specific type of context to be created.</section>			
RenderScript.Priority	D								*[[android.renderscript.RenderScript.Priority]], <section class="prog__container"><pre><code>public static final enum RenderScript.Priority</code></pre>RenderScript worker thread priority enumeration. The default value is NORMAL. Applications wishing to do background processing should set their priority to LOW to avoid starving forground processes.</section>\n*[[v8.renderscript.RenderScript.Priority]], <section class="prog__container"><pre><code>public static final enum RenderScript.Priority</code></pre>RenderScript worker thread priority enumeration. The default value is NORMAL. Applications wishing to do background processing should set their priority to LOW to avoid starving forground processes.</section>			
RenderScript.RSErrorHandler	D								*[[android.renderscript.RenderScript.RSErrorHandler]], <section class="prog__container"><pre><code>public static class RenderScript.RSErrorHandler</code></pre>The runtime error handler base class. An application should derive from this class if it wishes to install an error handler. When errors occur at runtime, the fields in this class will be filled, and the run method will be called.</section>\n*[[v8.renderscript.RenderScript.RSErrorHandler]], <section class="prog__container"><pre><code>public static class RenderScript.RSErrorHandler</code></pre>The runtime error handler base class. An application should derive from this class if it wishes to install an error handler. When errors occur at runtime, the fields in this class will be filled, and the run method will be called.</section>			
RenderScript.RSMessageHandler	D								*[[android.renderscript.RenderScript.RSMessageHandler]], <section class="prog__container"><pre><code>public static class RenderScript.RSMessageHandler</code></pre>The base class from which an application should derive in order to receive RS messages from scripts. When a script calls <code>rsSendToClient</code>, the data fields will be filled, and the run method will be called on a separate thread. This will occur some time after <code>rsSendToClient</code> completes in the script, as <code>rsSendToClient</code> is asynchronous. Message handlers are not guaranteed to have completed when <code>finish()</code> returns.</section>\n*[[v8.renderscript.RenderScript.RSMessageHandler]], <section class="prog__container"><pre><code>public static class RenderScript.RSMessageHandler</code></pre>The base class from which an application should derive in order to receive RS messages from scripts. When a script calls <code>rsSendToClient</code>, the data fields will be filled, and the run method will be called on a separate thread. This will occur some time after <code>rsSendToClient</code> completes in the script, as <code>rsSendToClient</code> is asynchronous. Message handlers are not guaranteed to have completed when <code>finish()</code> returns.</section>			
Repeatable	A										<section class="prog__container"><pre><code>public abstract @interface Repeatable</code></pre>The annotation type <code>java.lang.annotation.Repeatable</code> is used to indicate that the annotation type whose declaration it (meta-)annotates is <em>repeatable</em>. The value of <code>@Repeatable</code> indicates the <em>containing annotation type</em> for the repeatable annotation type.</section>	https://developer.android.com/reference/java/lang/annotation/Repeatable.html
Replaceable	A										<section class="prog__container"><pre><code>public interface Replaceable</code></pre><code>Replaceable</code> is an interface representing a string of characters that supports the replacement of a range of itself with a new string of characters. It is used by APIs that change a piece of text while retaining metadata. Metadata is data other than the Unicode characters returned by char32At(). One example of metadata is style attributes; another is an edit history, marking each character with an author and revision number.</section>	https://developer.android.com/reference/android/icu/text/Replaceable.html
ReplacementSpan	A										<section class="prog__container"><pre><code>public abstract class ReplacementSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/ReplacementSpan.html
ReplacementTransformationMethod	A										<section class="prog__container"><pre><code>public abstract class ReplacementTransformationMethod</code></pre>This transformation method causes the characters in the <code>getOriginal()</code> array to be replaced by the corresponding characters in the <code>getReplacement()</code> array.</section>	https://developer.android.com/reference/android/text/method/ReplacementTransformationMethod.html
RequiresApi	A										<section class="prog__container"><pre><code>public abstract @interface RequiresApi</code></pre>Denotes that the annotated element should only be called on the given API level or higher.</section>	https://developer.android.com/reference/android/support/annotation/RequiresApi.html
RequiresPermission	A										<section class="prog__container"><pre><code>public abstract @interface RequiresPermission</code></pre>Denotes that the annotated element requires (or may require) one or more permissions.</section>	https://developer.android.com/reference/android/support/annotation/RequiresPermission.html
RequiresPermission.Read	A										<section class="prog__container"><pre><code>public static abstract @interface RequiresPermission.Read</code></pre>Specifies that the given permission is required for read operations.</section>	https://developer.android.com/reference/android/support/annotation/RequiresPermission.Read.html
RequiresPermission.Write	A										<section class="prog__container"><pre><code>public static abstract @interface RequiresPermission.Write</code></pre>Specifies that the given permission is required for write operations.</section>	https://developer.android.com/reference/android/support/annotation/RequiresPermission.Write.html
ResolveInfo	A										<section class="prog__container"><pre><code>public class ResolveInfo</code></pre>Information that is returned from resolving an intent against an IntentFilter. This partially corresponds to information collected from the AndroidManifest.xml's &lt;intent&gt; tags.</section>	https://developer.android.com/reference/android/content/pm/ResolveInfo.html
ResolveInfo.DisplayNameComparator	A										<section class="prog__container"><pre><code>public static class ResolveInfo.DisplayNameComparator</code></pre></section>	https://developer.android.com/reference/android/content/pm/ResolveInfo.DisplayNameComparator.html
ResourceBundle	A										<section class="prog__container"><pre><code>public abstract class ResourceBundle</code></pre>Resource bundles contain locale-specific objects. When your program needs a locale-specific resource, a <code>String</code> for example, your program can load it from the resource bundle that is appropriate for the current user's locale. In this way, you can write program code that is largely independent of the user's locale isolating most, if not all, of the locale-specific information in resource bundles.</section>	https://developer.android.com/reference/java/util/ResourceBundle.html
ResourceBundle.Control	A										<section class="prog__container"><pre><code>public static class ResourceBundle.Control</code></pre><code>ResourceBundle.Control</code> defines a set of callback methods that are invoked by the <code>ResourceBundle.getBundle</code> factory methods during the bundle loading process. In other words, a <code>ResourceBundle.Control</code> collaborates with the factory methods for loading resource bundles. The default implementation of the callback methods provides the information necessary for the factory methods to perform the default behavior.</section>	https://developer.android.com/reference/java/util/ResourceBundle.Control.html
ResourceBusyException	A										<section class="prog__container"><pre><code>public final class ResourceBusyException</code></pre>Exception thrown when an operation on a MediaDrm object is attempted and hardware resources are not available, due to being in use.</section>	https://developer.android.com/reference/android/media/ResourceBusyException.html
ResourceCursorAdapter	D								*[[v4.widget.ResourceCursorAdapter]], <section class="prog__container"><pre><code>public abstract class ResourceCursorAdapter</code></pre>Static library support version of the framework's <code>ResourceCursorAdapter</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>\n*[[android.widget.ResourceCursorAdapter]], <section class="prog__container"><pre><code>public abstract class ResourceCursorAdapter</code></pre>An easy adapter that creates views defined in an XML file. You can specify the XML file that defines the appearance of the views.</section>			
ResourceCursorTreeAdapter	A										<section class="prog__container"><pre><code>public abstract class ResourceCursorTreeAdapter</code></pre>A fairly simple ExpandableListAdapter that creates views defined in an XML file. You can specify the XML file that defines the appearance of the views.</section>	https://developer.android.com/reference/android/widget/ResourceCursorTreeAdapter.html
Resources	A										<section class="prog__container"><pre><code>public class Resources</code></pre>Class for accessing an application's resources. This sits on top of the asset manager of the application (accessible through <code>getAssets()</code>) and provides a high-level API for getting typed data from the assets.</section>	https://developer.android.com/reference/android/content/res/Resources.html
Resources.NotFoundException	A										<section class="prog__container"><pre><code>public static class Resources.NotFoundException</code></pre>This exception is thrown by the resource APIs when a requested resource can not be found.</section>	https://developer.android.com/reference/android/content/res/Resources.NotFoundException.html
Resources.Theme	A										<section class="prog__container"><pre><code>public final class Resources.Theme</code></pre>This class holds the current attribute values for a particular theme. In other words, a Theme is a set of values for resource attributes; these are used in conjunction with <code>TypedArray</code> to resolve the final value for an attribute.</section>	https://developer.android.com/reference/android/content/res/Resources.Theme.html
ResourcesCompat	A										<section class="prog__container"><pre><code>public final class ResourcesCompat</code></pre>Helper for accessing features in <code>Resources</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/content/res/ResourcesCompat.html
ResponseCache	A										<section class="prog__container"><pre><code>public abstract class ResponseCache</code></pre>Represents implementations of URLConnection caches. An instance of such a class can be registered with the system by doing ResponseCache.setDefault(ResponseCache), and the system will call this object in order to: <ul><li>store resource data which has been retrieved from an external source into the cache</li> <li>try to fetch a requested resource that may have been stored in the cache</li> </ul> The ResponseCache implementation decides which resources should be cached, and for how long they should be cached. If a request resource cannot be retrieved from the cache, then the protocol handlers will fetch the resource from its original location. The settings for URLConnection#useCaches controls whether the protocol is allowed to use a cached response. For more information on HTTP caching, see <i>RFC&nbsp;2616: Hypertext Transfer Protocol -- HTTP/1.1</i></section>	https://developer.android.com/reference/java/net/ResponseCache.html
RestoreObserver	A										<section class="prog__container"><pre><code>public abstract class RestoreObserver</code></pre>Callback class for receiving progress reports during a restore operation. These methods will all be called on your application's main thread.</section>	https://developer.android.com/reference/android/app/backup/RestoreObserver.html
RestrictTo	A										<section class="prog__container"><pre><code>public abstract @interface RestrictTo</code></pre>Denotes that the annotated element should only be accessed from within a specific scope (as defined by <code>RestrictTo.Scope</code>).</section>	https://developer.android.com/reference/android/support/annotation/RestrictTo.html
RestrictTo.Scope	A										<section class="prog__container"><pre><code>public static final enum RestrictTo.Scope</code></pre></section>	https://developer.android.com/reference/android/support/annotation/RestrictTo.Scope.html
RestrictionEntry	A										<section class="prog__container"><pre><code>public class RestrictionEntry</code></pre>Applications can expose restrictions for a restricted user on a multiuser device. The administrator can configure these restrictions that will then be applied to the restricted user. Each RestrictionsEntry is one configurable restriction.</section>	https://developer.android.com/reference/android/content/RestrictionEntry.html
RestrictionsManager	A										<section class="prog__container"><pre><code>public class RestrictionsManager</code></pre>Provides a mechanism for apps to query restrictions imposed by an entity that manages the user. Apps can also send permission requests to a local or remote device administrator to override default app-specific restrictions or any other operation that needs explicit authorization from the administrator.</section>	https://developer.android.com/reference/android/content/RestrictionsManager.html
RestrictionsReceiver	A										<section class="prog__container"><pre><code>public abstract class RestrictionsReceiver</code></pre>Abstract implementation of a Restrictions Provider BroadcastReceiver. To implement a Restrictions Provider, extend from this class and implement the abstract methods. Export this receiver in the manifest. A profile owner device admin can then register this component as a Restrictions Provider using <code>setRestrictionsProvider(ComponentName, ComponentName)</code>.</section>	https://developer.android.com/reference/android/service/restrictions/RestrictionsReceiver.html
Result	A										<section class="prog__container"><pre><code>public interface Result</code></pre></section>	https://developer.android.com/reference/javax/xml/transform/Result.html
ResultReceiver	A										<section class="prog__container"><pre><code>public class ResultReceiver</code></pre>Generic interface for receiving a callback result from someone. Use this by creating a subclass and implement <code>onReceiveResult(int, Bundle)</code>, which you can then pass to others and send through IPC, and receive results they supply with <code>send(int, Bundle)</code>.</section>	https://developer.android.com/reference/android/os/ResultReceiver.html
ResultSet	A										<section class="prog__container"><pre><code>public interface ResultSet</code></pre>A table of data representing a database result set, which is usually generated by executing a statement that queries the database.</section>	https://developer.android.com/reference/java/sql/ResultSet.html
ResultSetMetaData	A										<section class="prog__container"><pre><code>public interface ResultSetMetaData</code></pre>An object that can be used to get information about the types and properties of the columns in a <code>ResultSet</code> object. The following code fragment creates the <code>ResultSet</code> object rs, creates the <code>ResultSetMetaData</code> object rsmd, and uses rsmd to find out how many columns rs has and whether the first column in rs can be used in a <code>WHERE</code> clause. <pre> ResultSet rs = stmt.executeQuery("SELECT a, b, c FROM TABLE2"); ResultSetMetaData rsmd = rs.getMetaData(); int numberOfColumns = rsmd.getColumnCount(); boolean b = rsmd.isSearchable(1); </pre></section>	https://developer.android.com/reference/java/sql/ResultSetMetaData.html
Retention	A										<section class="prog__container"><pre><code>public abstract @interface Retention</code></pre>Indicates how long annotations with the annotated type are to be retained. If no Retention annotation is present on an annotation type declaration, the retention policy defaults to <code>RetentionPolicy.CLASS</code>.</section>	https://developer.android.com/reference/java/lang/annotation/Retention.html
RetentionPolicy	A										<section class="prog__container"><pre><code>public final enum RetentionPolicy</code></pre>Annotation retention policy. The constants of this enumerated type describe the various policies for retaining annotations. They are used in conjunction with the <code>Retention</code> meta-annotation type to specify how long annotations are to be retained.</section>	https://developer.android.com/reference/java/lang/annotation/RetentionPolicy.html
Rfc822Token	A										<section class="prog__container"><pre><code>public class Rfc822Token</code></pre>This class stores an RFC 822-like name, address, and comment, and provides methods to convert them to quoted strings.</section>	https://developer.android.com/reference/android/text/util/Rfc822Token.html
Rfc822Tokenizer	A										<section class="prog__container"><pre><code>public class Rfc822Tokenizer</code></pre>This class works as a Tokenizer for MultiAutoCompleteTextView for address list fields, and also provides a method for converting a string of addresses (such as might be typed into such a field) into a series of Rfc822Tokens.</section>	https://developer.android.com/reference/android/text/util/Rfc822Tokenizer.html
RggbChannelVector	A										<section class="prog__container"><pre><code>public final class RggbChannelVector</code></pre>Immutable class to store a 4-element vector of floats indexable by a bayer RAW 2x2 pixel block.</section>	https://developer.android.com/reference/android/hardware/camera2/params/RggbChannelVector.html
Ringtone	A										<section class="prog__container"><pre><code>public class Ringtone</code></pre>Ringtone provides a quick method for playing a ringtone, notification, or other similar types of sounds.</section>	https://developer.android.com/reference/android/media/Ringtone.html
RingtoneManager	A										<section class="prog__container"><pre><code>public class RingtoneManager</code></pre>RingtoneManager provides access to ringtones, notification, and other types of sounds. It manages querying the different media providers and combines the results into a single cursor. It also provides a <code>Ringtone</code> for each ringtone. We generically call these sounds ringtones, however the <code>TYPE_RINGTONE</code> refers to the type of sounds that are suitable for the phone ringer.</section>	https://developer.android.com/reference/android/media/RingtoneManager.html
RingtonePreference	A										<section class="prog__container"><pre><code>public class RingtonePreference</code></pre>A <code>Preference</code> that allows the user to choose a ringtone from those on the device. The chosen ringtone's URI will be persisted as a string.</section>	https://developer.android.com/reference/android/preference/RingtonePreference.html
RippleDrawable	A										<section class="prog__container"><pre><code>public class RippleDrawable</code></pre>Drawable that shows a ripple effect in response to state changes. The anchoring position of the ripple for a given state may be specified by calling <code>setHotspot(float, float)</code> with the corresponding state attribute identifier.</section>	https://developer.android.com/reference/android/graphics/drawable/RippleDrawable.html
RootElement	A										<section class="prog__container"><pre><code>public class RootElement</code></pre>The root XML element. The entry point for this API. Not safe for concurrent use.</section>	https://developer.android.com/reference/android/sax/RootElement.html
RotateAnimation	A										<section class="prog__container"><pre><code>public class RotateAnimation</code></pre>An animation that controls the rotation of an object. This rotation takes place in the X-Y plane. You can specify the point to use for the center of the rotation, where (0,0) is the top left point. If not specified, (0,0) is the default rotation point.</section>	https://developer.android.com/reference/android/view/animation/RotateAnimation.html
RotateDrawable	A										<section class="prog__container"><pre><code>public class RotateDrawable</code></pre></section>	https://developer.android.com/reference/android/graphics/drawable/RotateDrawable.html
RoundRectShape	A										<section class="prog__container"><pre><code>public class RoundRectShape</code></pre>Creates a rounded-corner rectangle. Optionally, an inset (rounded) rectangle can be included (to make a sort of "O" shape). The rounded rectangle can be drawn to a Canvas with its own draw() method, but more graphical control is available if you instead pass the RoundRectShape to a <code>ShapeDrawable</code>.</section>	https://developer.android.com/reference/android/graphics/drawable/shapes/RoundRectShape.html
RoundedBitmapDrawable	A										<section class="prog__container"><pre><code>public abstract class RoundedBitmapDrawable</code></pre>A Drawable that wraps a bitmap and can be drawn with rounded corners. You can create a RoundedBitmapDrawable from a file path, an input stream, or from a <code>Bitmap</code> object.</section>	https://developer.android.com/reference/android/support/v4/graphics/drawable/RoundedBitmapDrawable.html
RoundedBitmapDrawableFactory	A										<section class="prog__container"><pre><code>public final class RoundedBitmapDrawableFactory</code></pre>Constructs <code>RoundedBitmapDrawable</code> objects, either from Bitmaps directly, or from streams and files.</section>	https://developer.android.com/reference/android/support/v4/graphics/drawable/RoundedBitmapDrawableFactory.html
RoundingMode	A										<section class="prog__container"><pre><code>public final enum RoundingMode</code></pre>Specifies the rounding behavior for operations whose results cannot be represented exactly.</section>	https://developer.android.com/reference/java/math/RoundingMode.html
RouteInfo	A										<section class="prog__container"><pre><code>public final class RouteInfo</code></pre>Represents a network route.</section>	https://developer.android.com/reference/android/net/RouteInfo.html
Row	A										<section class="prog__container"><pre><code>public class Row</code></pre>The base class for all rows. A commonly used subclass is the <code>ListRow</code>. Custom subclasses may define other types of rows.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/Row.html
RowHeaderPresenter	A										<section class="prog__container"><pre><code>public class RowHeaderPresenter</code></pre>RowHeaderPresenter provides a default presentation for <code>HeaderItem</code> using a <code>RowHeaderView</code> and optionally a TextView for description. If a subclass creates its own view, the subclass must also override <code>onCreateViewHolder(ViewGroup)</code>, <code>onSelectLevelChanged(ViewHolder)</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/RowHeaderPresenter.html
RowHeaderPresenter.ViewHolder	A										<section class="prog__container"><pre><code>public static class RowHeaderPresenter.ViewHolder</code></pre>A ViewHolder for the RowHeaderPresenter.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/RowHeaderPresenter.ViewHolder.html
RowHeaderView	A										<section class="prog__container"><pre><code>public final class RowHeaderView</code></pre>RowHeaderView is a header text view.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/RowHeaderView.html
RowId	A										<section class="prog__container"><pre><code>public interface RowId</code></pre>The representation (mapping) in the Java programming language of an SQL ROWID value. An SQL ROWID is a built-in type, a value of which can be thought of as an address for its identified row in a database table. Whether that address is logical or, in any respects, physical is determined by its originating data source.</section>	https://developer.android.com/reference/java/sql/RowId.html
RowIdLifetime	A										<section class="prog__container"><pre><code>public final enum RowIdLifetime</code></pre>Enumeration for RowId life-time values.</section>	https://developer.android.com/reference/java/sql/RowIdLifetime.html
RowPresenter	A										<section class="prog__container"><pre><code>public abstract class RowPresenter</code></pre>An abstract <code>Presenter</code> that renders an Object in RowsFragment, the object can be subclass <code>Row</code> or a generic one. When the object is not <code>Row</code> class, <code>getRow()</code> returns null. <h3>Customize UI widgets</h3> When a subclass of RowPresenter adds UI widgets, it should subclass <code>RowPresenter.ViewHolder</code> and override <code>createRowViewHolder(ViewGroup)</code> and <code>initializeRowViewHolder(ViewHolder)</code>. The subclass must use layout id "row_content" for the widget that will be aligned to the title of any <code>HeadersFragment</code> that may exist in the parent fragment. RowPresenter contains an optional and replaceable <code>RowHeaderPresenter</code> that renders the header. You can disable the default rendering or replace the Presenter with a new header presenter by calling <code>setHeaderPresenter(RowHeaderPresenter)</code>. <h3>UI events from fragments</h3> RowPresenter receives calls from its parent (typically a Fragment) when: <ul> <li> A row is selected via <code>setRowViewSelected(Presenter.ViewHolder, boolean)</code>. The event is triggered immediately when there is a row selection change before the selection animation is started. Selected status may control activated status of the row (see "Activated status" below). Subclasses of RowPresenter may override <code>onRowViewSelected(ViewHolder, boolean)</code>. </li> <li> A row is expanded to full height via <code>setRowViewExpanded(Presenter.ViewHolder, boolean)</code> when BrowseFragment hides fast lane on the left. The event is triggered immediately before the expand animation is started. Row title is shown when row is expanded. Expanded status may control activated status of the row (see "Activated status" below). Subclasses of RowPresenter may override <code>onRowViewExpanded(ViewHolder, boolean)</code>. </li> </ul> <h3>Activated status</h3> The activated status of a row is applied to the row view and it's children via <code>setActivated(boolean)</code>. The activated status is typically used to control <code>BaseCardView</code> info region visibility. The row's activated status can be controlled by selected status and/or expanded status. Call <code>setSyncActivatePolicy(int)</code> and choose one of the four policies: <ul> <li><code>SYNC_ACTIVATED_TO_EXPANDED</code> Activated status is synced with row expanded status</li> <li><code>SYNC_ACTIVATED_TO_SELECTED</code> Activated status is synced with row selected status</li> <li><code>SYNC_ACTIVATED_TO_EXPANDED_AND_SELECTED</code> Activated status is set to true when both expanded and selected status are true</li> <li><code>SYNC_ACTIVATED_CUSTOM</code> Activated status is not controlled by selected status or expanded status, application can control activated status by its own. Application should call <code>setActivated(boolean)</code> to change activated status of row view. </li> </ul> <h3>User events</h3> RowPresenter provides <code>OnItemViewSelectedListener</code> and <code>OnItemViewClickedListener</code>. If a subclass wants to add its own <code>View.OnFocusChangeListener</code> or <code>View.OnClickListener</code>, it must do that in <code>createRowViewHolder(ViewGroup)</code> to be properly chained by the library. Adding View listeners after <code>createRowViewHolder(ViewGroup)</code> is undefined and may result in incorrect behavior by the library's listeners. <h3>Selection animation</h3></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/RowPresenter.html
RowPresenter.ViewHolder	A										<section class="prog__container"><pre><code>public static class RowPresenter.ViewHolder</code></pre>A ViewHolder for a <code>Row</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/RowPresenter.ViewHolder.html
RowSet	A										<section class="prog__container"><pre><code>public interface RowSet</code></pre>The interface that adds support to the JDBC API for the JavaBeans<sup><font size="-2">TM</font></sup> component model. A rowset, which can be used as a JavaBeans component in a visual Bean development environment, can be created and configured at design time and executed at run time.</section>	https://developer.android.com/reference/javax/sql/RowSet.html
RowSetEvent	A										<section class="prog__container"><pre><code>public class RowSetEvent</code></pre>An <code>Event</code> object generated when an event occurs to a <code>RowSet</code> object. A <code>RowSetEvent</code> object is generated when a single row in a rowset is changed, the whole rowset is changed, or the rowset cursor moves.</section>	https://developer.android.com/reference/javax/sql/RowSetEvent.html
RowSetInternal	A										<section class="prog__container"><pre><code>public interface RowSetInternal</code></pre>The interface that a <code>RowSet</code> object implements in order to present itself to a <code>RowSetReader</code> or <code>RowSetWriter</code> object. The <code>RowSetInternal</code> interface contains methods that let the reader or writer access and modify the internal state of the rowset.</section>	https://developer.android.com/reference/javax/sql/RowSetInternal.html
RowSetListener	A										<section class="prog__container"><pre><code>public interface RowSetListener</code></pre>An interface that must be implemented by a component that wants to be notified when a significant event happens in the life of a <code>RowSet</code> object. A component becomes a listener by being registered with a <code>RowSet</code> object via the method <code>RowSet.addRowSetListener</code>. How a registered component implements this interface determines what it does when it is notified of an event.</section>	https://developer.android.com/reference/javax/sql/RowSetListener.html
RowSetMetaData	A										<section class="prog__container"><pre><code>public interface RowSetMetaData</code></pre>An object that contains information about the columns in a <code>RowSet</code> object. This interface is an extension of the <code>ResultSetMetaData</code> interface with methods for setting the values in a <code>RowSetMetaData</code> object. When a <code>RowSetReader</code> object reads data into a <code>RowSet</code> object, it creates a <code>RowSetMetaData</code> object and initializes it using the methods in the <code>RowSetMetaData</code> interface. Then the reader passes the <code>RowSetMetaData</code> object to the rowset.</section>	https://developer.android.com/reference/javax/sql/RowSetMetaData.html
RowSetReader	A										<section class="prog__container"><pre><code>public interface RowSetReader</code></pre>The facility that a disconnected <code>RowSet</code> object calls on to populate itself with rows of data. A reader (an object implementing the <code>RowSetReader</code> interface) may be registered with a <code>RowSet</code> object that supports the reader/writer paradigm. When the <code>RowSet</code> object's <code>execute</code> method is called, it in turn calls the reader's <code>readData</code> method.</section>	https://developer.android.com/reference/javax/sql/RowSetReader.html
RowSetWriter	A										<section class="prog__container"><pre><code>public interface RowSetWriter</code></pre>An object that implements the <code>RowSetWriter</code> interface, called a <i>writer</i>. A writer may be registered with a <code>RowSet</code> object that supports the reader/writer paradigm.</section>	https://developer.android.com/reference/javax/sql/RowSetWriter.html
RowsFragment	A										<section class="prog__container"><pre><code>public class RowsFragment</code></pre>An ordered set of rows of leanback widgets.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/RowsFragment.html
RowsFragment.MainFragmentAdapter	A										<section class="prog__container"><pre><code>public static class RowsFragment.MainFragmentAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/RowsFragment.MainFragmentAdapter.html
RowsFragment.MainFragmentRowsAdapter	A										<section class="prog__container"><pre><code>public static class RowsFragment.MainFragmentRowsAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/RowsFragment.MainFragmentRowsAdapter.html
RowsSupportFragment	A										<section class="prog__container"><pre><code>public class RowsSupportFragment</code></pre>An ordered set of rows of leanback widgets.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/RowsSupportFragment.html
RowsSupportFragment.MainFragmentAdapter	A										<section class="prog__container"><pre><code>public static class RowsSupportFragment.MainFragmentAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/RowsSupportFragment.MainFragmentAdapter.html
RowsSupportFragment.MainFragmentRowsAdapter	A										<section class="prog__container"><pre><code>public static class RowsSupportFragment.MainFragmentRowsAdapter</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/app/RowsSupportFragment.MainFragmentRowsAdapter.html
RtpStream	A										<section class="prog__container"><pre><code>public class RtpStream</code></pre>RtpStream represents the base class of streams which send and receive network packets with media payloads over Real-time Transport Protocol (RTP). <p class="note">Using this class requires <code>INTERNET</code> permission.</section>	https://developer.android.com/reference/android/net/rtp/RtpStream.html
RuleBasedCollator	D								*[[icu.text.RuleBasedCollator]], <section class="prog__container"><pre><code>public final class RuleBasedCollator</code></pre></section>\n*[[java.text.RuleBasedCollator]], <section class="prog__container"><pre><code>public class RuleBasedCollator</code></pre>The <code>RuleBasedCollator</code> class is a concrete subclass of <code>Collator</code> that provides a simple, data-driven, table collator. With this class you can create a customized table-based <code>Collator</code>. <code>RuleBasedCollator</code> maps characters to sort keys.</section>			
Runnable	A										<section class="prog__container"><pre><code>public interface Runnable</code></pre>The <code>Runnable</code> interface should be implemented by any class whose instances are intended to be executed by a thread. The class must define a method of no arguments called <code>run</code>.</section>	https://developer.android.com/reference/java/lang/Runnable.html
RunnableFuture	A										<section class="prog__container"><pre><code>public interface RunnableFuture</code></pre>A <code>Future</code> that is <code>Runnable</code>. Successful execution of the <code>run</code> method causes completion of the <code>Future</code> and allows access to its results.</section>	https://developer.android.com/reference/java/util/concurrent/RunnableFuture.html
RunnableScheduledFuture	A										<section class="prog__container"><pre><code>public interface RunnableScheduledFuture</code></pre>A <code>ScheduledFuture</code> that is <code>Runnable</code>. Successful execution of the <code>run</code> method causes completion of the <code>Future</code> and allows access to its results.</section>	https://developer.android.com/reference/java/util/concurrent/RunnableScheduledFuture.html
Runtime	A										<section class="prog__container"><pre><code>public class Runtime</code></pre>Every Java application has a single instance of class <code>Runtime</code> that allows the application to interface with the environment in which the application is running. The current runtime can be obtained from the <code>getRuntime</code> method.</section>	https://developer.android.com/reference/java/lang/Runtime.html
RuntimeException	A										<section class="prog__container"><pre><code>public class RuntimeException</code></pre><code>RuntimeException</code> is the superclass of those exceptions that can be thrown during the normal operation of the Java Virtual Machine.</section>	https://developer.android.com/reference/java/lang/RuntimeException.html
RuntimePermission	A										<section class="prog__container"><pre><code>public final class RuntimePermission</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/lang/RuntimePermission.html
SAXException	A										<section class="prog__container"><pre><code>public class SAXException</code></pre>Encapsulate a general SAX error or warning. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/SAXException.html
SAXNotRecognizedException	A										<section class="prog__container"><pre><code>public class SAXNotRecognizedException</code></pre>Exception class for an unrecognized identifier. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/SAXNotRecognizedException.html
SAXNotSupportedException	A										<section class="prog__container"><pre><code>public class SAXNotSupportedException</code></pre>Exception class for an unsupported operation. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/SAXNotSupportedException.html
SAXParseException	A										<section class="prog__container"><pre><code>public class SAXParseException</code></pre>Encapsulate an XML parse error or warning. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/SAXParseException.html
SAXParser	A										<section class="prog__container"><pre><code>public abstract class SAXParser</code></pre>Defines the API that wraps an <code>XMLReader</code> implementation class. In JAXP 1.0, this class wrapped the <code>Parser</code> interface, however this interface was replaced by the <code>XMLReader</code>. For ease of transition, this class continues to support the same name and interface as well as supporting new methods. An instance of this class can be obtained from the <code>newSAXParser()</code> method. Once an instance of this class is obtained, XML can be parsed from a variety of input sources. These input sources are InputStreams, Files, URLs, and SAX InputSources.</section>	https://developer.android.com/reference/javax/xml/parsers/SAXParser.html
SAXParserFactory	A										<section class="prog__container"><pre><code>public abstract class SAXParserFactory</code></pre>Defines a factory API that enables applications to configure and obtain a SAX based parser to parse XML documents.</section>	https://developer.android.com/reference/javax/xml/parsers/SAXParserFactory.html
SAXResult	A										<section class="prog__container"><pre><code>public class SAXResult</code></pre></section>	https://developer.android.com/reference/javax/xml/transform/sax/SAXResult.html
SAXSource	A										<section class="prog__container"><pre><code>public class SAXSource</code></pre></section>	https://developer.android.com/reference/javax/xml/transform/sax/SAXSource.html
SAXTransformerFactory	A										<section class="prog__container"><pre><code>public abstract class SAXTransformerFactory</code></pre>This class extends TransformerFactory to provide SAX-specific factory methods. It provides two types of ContentHandlers, one for creating Transformers, the other for creating Templates objects.</section>	https://developer.android.com/reference/javax/xml/transform/sax/SAXTransformerFactory.html
SNIHostName	A										<section class="prog__container"><pre><code>public final class SNIHostName</code></pre>Instances of this class represent a server name of type <code>host_name</code> in a Server Name Indication (SNI) extension.</section>	https://developer.android.com/reference/javax/net/ssl/SNIHostName.html
SNIMatcher	A										<section class="prog__container"><pre><code>public abstract class SNIMatcher</code></pre>Instances of this class represent a matcher that performs match operations on an <code>SNIServerName</code> instance.</section>	https://developer.android.com/reference/javax/net/ssl/SNIMatcher.html
SNIServerName	A										<section class="prog__container"><pre><code>public abstract class SNIServerName</code></pre>Instances of this class represent a server name in a Server Name Indication (SNI) extension.</section>	https://developer.android.com/reference/javax/net/ssl/SNIServerName.html
SQLClientInfoException	A										<section class="prog__container"><pre><code>public class SQLClientInfoException</code></pre>The subclass of <code>SQLException</code> is thrown when one or more client info properties could not be set on a <code>Connection</code>. In addition to the information provided by <code>SQLException</code>, a <code>SQLClientInfoException</code> provides a list of client info properties that were not set. Some databases do not allow multiple client info properties to be set atomically. For those databases, it is possible that some of the client info properties had been set even though the <code>Connection.setClientInfo</code> method threw an exception. An application can use the <code>getFailedProperties </code> method to retrieve a list of client info properties that were not set. The properties are identified by passing a <code>Map&lt;String,ClientInfoStatus&gt;</code> to the appropriate <code>SQLClientInfoException</code> constructor.</section>	https://developer.android.com/reference/java/sql/SQLClientInfoException.html
SQLData	A										<section class="prog__container"><pre><code>public interface SQLData</code></pre>The interface used for the custom mapping of an SQL user-defined type (UDT) to a class in the Java programming language. The class object for a class implementing the <code>SQLData</code> interface will be entered in the appropriate <code>Connection</code> object's type map along with the SQL name of the UDT for which it is a custom mapping.</section>	https://developer.android.com/reference/java/sql/SQLData.html
SQLDataException	A										<section class="prog__container"><pre><code>public class SQLDataException</code></pre>The subclass of <code>SQLException</code> thrown when the SQLState class value is '<i>22</i>', or under vendor-specified conditions. This indicates various data errors, including but not limited to data conversion errors, division by 0, and invalid arguments to functions.</section>	https://developer.android.com/reference/java/sql/SQLDataException.html
SQLException	D								*[[database.SQLException]], <section class="prog__container"><pre><code>public class SQLException</code></pre>An exception that indicates there was an error with SQL parsing or execution.</section>\n*[[sql.SQLException]], <section class="prog__container"><pre><code>public class SQLException</code></pre></section>			
SQLFeatureNotSupportedException	A										<section class="prog__container"><pre><code>public class SQLFeatureNotSupportedException</code></pre>The subclass of <code>SQLException</code> thrown when the SQLState class value is '<i>0A</i>' ( the value is 'zero' A). This indicates that the JDBC driver does not support an optional JDBC feature. Optional JDBC features can fall into the fallowing categories:</section>	https://developer.android.com/reference/java/sql/SQLFeatureNotSupportedException.html
SQLInput	A										<section class="prog__container"><pre><code>public interface SQLInput</code></pre>An input stream that contains a stream of values representing an instance of an SQL structured type or an SQL distinct type. This interface, used only for custom mapping, is used by the driver behind the scenes, and a programmer never directly invokes <code>SQLInput</code> methods. The <i>reader</i> methods (<code>readLong</code>, <code>readBytes</code>, and so on) provide a way for an implementation of the <code>SQLData</code> interface to read the values in an <code>SQLInput</code> object. And as described in <code>SQLData</code>, calls to reader methods must be made in the order that their corresponding attributes appear in the SQL definition of the type. The method <code>wasNull</code> is used to determine whether the last value read was SQL <code>NULL</code>.</section>	https://developer.android.com/reference/java/sql/SQLInput.html
SQLIntegrityConstraintViolationException	A										<section class="prog__container"><pre><code>public class SQLIntegrityConstraintViolationException</code></pre>The subclass of <code>SQLException</code> thrown when the SQLState class value is '<i>23</i>', or under vendor-specified conditions. This indicates that an integrity constraint (foreign key, primary key or unique key) has been violated.</section>	https://developer.android.com/reference/java/sql/SQLIntegrityConstraintViolationException.html
SQLInvalidAuthorizationSpecException	A										<section class="prog__container"><pre><code>public class SQLInvalidAuthorizationSpecException</code></pre>The subclass of <code>SQLException</code> thrown when the SQLState class value is '<i>28</i>', or under vendor-specified conditions. This indicates that the authorization credentials presented during connection establishment are not valid.</section>	https://developer.android.com/reference/java/sql/SQLInvalidAuthorizationSpecException.html
SQLNonTransientConnectionException	A										<section class="prog__container"><pre><code>public class SQLNonTransientConnectionException</code></pre>The subclass of <code>SQLException</code> thrown for the SQLState class value '<i>08</i>', or under vendor-specified conditions. This indicates that the connection operation that failed will not succeed if the operation is retried without the cause of the failure being corrected.</section>	https://developer.android.com/reference/java/sql/SQLNonTransientConnectionException.html
SQLNonTransientException	A										<section class="prog__container"><pre><code>public class SQLNonTransientException</code></pre>The subclass of <code>SQLException</code> thrown when an instance where a retry of the same operation would fail unless the cause of the <code>SQLException</code> is corrected.</section>	https://developer.android.com/reference/java/sql/SQLNonTransientException.html
SQLOutput	A										<section class="prog__container"><pre><code>public interface SQLOutput</code></pre>The output stream for writing the attributes of a user-defined type back to the database. This interface, used only for custom mapping, is used by the driver, and its methods are never directly invoked by a programmer.</section>	https://developer.android.com/reference/java/sql/SQLOutput.html
SQLPermission	A										<section class="prog__container"><pre><code>public final class SQLPermission</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/sql/SQLPermission.html
SQLRecoverableException	A										<section class="prog__container"><pre><code>public class SQLRecoverableException</code></pre>The subclass of <code>SQLException</code> thrown in situations where a previously failed operation might be able to succeed if the application performs some recovery steps and retries the entire transaction or in the case of a distributed transaction, the transaction branch. At a minimum, the recovery operation must include closing the current connection and getting a new connection.</section>	https://developer.android.com/reference/java/sql/SQLRecoverableException.html
SQLSyntaxErrorException	A										<section class="prog__container"><pre><code>public class SQLSyntaxErrorException</code></pre>The subclass of <code>SQLException</code> thrown when the SQLState class value is '<i>42</i>', or under vendor-specified conditions. This indicates that the in-progress query has violated SQL syntax rules.</section>	https://developer.android.com/reference/java/sql/SQLSyntaxErrorException.html
SQLTimeoutException	A										<section class="prog__container"><pre><code>public class SQLTimeoutException</code></pre></section>	https://developer.android.com/reference/java/sql/SQLTimeoutException.html
SQLTransactionRollbackException	A										<section class="prog__container"><pre><code>public class SQLTransactionRollbackException</code></pre>The subclass of <code>SQLException</code> thrown when the SQLState class value is '<i>40</i>', or under vendor-specified conditions. This indicates that the current statement was automatically rolled back by the database because of deadlock or other transaction serialization failures.</section>	https://developer.android.com/reference/java/sql/SQLTransactionRollbackException.html
SQLTransientConnectionException	A										<section class="prog__container"><pre><code>public class SQLTransientConnectionException</code></pre>The subclass of <code>SQLException</code> for the SQLState class value '<i>08</i>', or under vendor-specified conditions. This indicates that the connection operation that failed might be able to succeed if the operation is retried without any application-level changes.</section>	https://developer.android.com/reference/java/sql/SQLTransientConnectionException.html
SQLTransientException	A										<section class="prog__container"><pre><code>public class SQLTransientException</code></pre>The subclass of <code>SQLException</code> is thrown in situations where a previoulsy failed operation might be able to succeed when the operation is retried without any intervention by application-level functionality.</section>	https://developer.android.com/reference/java/sql/SQLTransientException.html
SQLWarning	A										<section class="prog__container"><pre><code>public class SQLWarning</code></pre></section>	https://developer.android.com/reference/java/sql/SQLWarning.html
SQLXML	A										<section class="prog__container"><pre><code>public interface SQLXML</code></pre>The mapping in the JavaTM programming language for the SQL XML type. XML is a built-in type that stores an XML value as a column value in a row of a database table. By default drivers implement an SQLXML object as a logical pointer to the XML data rather than the data itself. An SQLXML object is valid for the duration of the transaction in which it was created.</section>	https://developer.android.com/reference/java/sql/SQLXML.html
SQLiteAbortException	A										<section class="prog__container"><pre><code>public class SQLiteAbortException</code></pre>An exception that indicates that the SQLite program was aborted. This can happen either through a call to ABORT in a trigger, or as the result of using the ABORT conflict clause.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteAbortException.html
SQLiteAccessPermException	A										<section class="prog__container"><pre><code>public class SQLiteAccessPermException</code></pre>This exception class is used when sqlite can't access the database file due to lack of permissions on the file.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteAccessPermException.html
SQLiteBindOrColumnIndexOutOfRangeException	A										<section class="prog__container"><pre><code>public class SQLiteBindOrColumnIndexOutOfRangeException</code></pre>Thrown if the the bind or column parameter index is out of range</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteBindOrColumnIndexOutOfRangeException.html
SQLiteBlobTooBigException	A										<section class="prog__container"><pre><code>public class SQLiteBlobTooBigException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteBlobTooBigException.html
SQLiteCantOpenDatabaseException	A										<section class="prog__container"><pre><code>public class SQLiteCantOpenDatabaseException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteCantOpenDatabaseException.html
SQLiteClosable	A										<section class="prog__container"><pre><code>public abstract class SQLiteClosable</code></pre>An object created from a SQLiteDatabase that can be closed. This class implements a primitive reference counting scheme for database objects.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteClosable.html
SQLiteConstraintException	A										<section class="prog__container"><pre><code>public class SQLiteConstraintException</code></pre>An exception that indicates that an integrity constraint was violated.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteConstraintException.html
SQLiteCursor	A										<section class="prog__container"><pre><code>public class SQLiteCursor</code></pre>A Cursor implementation that exposes results from a query on a <code>SQLiteDatabase</code>. SQLiteCursor is not internally synchronized so code using a SQLiteCursor from multiple threads should perform its own synchronization when using the SQLiteCursor.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteCursor.html
SQLiteCursorDriver	A										<section class="prog__container"><pre><code>public interface SQLiteCursorDriver</code></pre>A driver for SQLiteCursors that is used to create them and gets notified by the cursors it creates on significant events in their lifetimes.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteCursorDriver.html
SQLiteDatabase	A										<section class="prog__container"><pre><code>public final class SQLiteDatabase</code></pre>Exposes methods to manage a SQLite database.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase.html
SQLiteDatabase.CursorFactory	A										<section class="prog__container"><pre><code>public static interface SQLiteDatabase.CursorFactory</code></pre>Used to allow returning sub-classes of <code>Cursor</code> when calling query.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase.CursorFactory.html
SQLiteDatabaseCorruptException	A										<section class="prog__container"><pre><code>public class SQLiteDatabaseCorruptException</code></pre>An exception that indicates that the SQLite database file is corrupt.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteDatabaseCorruptException.html
SQLiteDatabaseLockedException	A										<section class="prog__container"><pre><code>public class SQLiteDatabaseLockedException</code></pre>Thrown if the database engine was unable to acquire the database locks it needs to do its job. If the statement is a [COMMIT] or occurs outside of an explicit transaction, then you can retry the statement. If the statement is not a [COMMIT] and occurs within a explicit transaction then you should rollback the transaction before continuing.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteDatabaseLockedException.html
SQLiteDatatypeMismatchException	A										<section class="prog__container"><pre><code>public class SQLiteDatatypeMismatchException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteDatatypeMismatchException.html
SQLiteDiskIOException	A										<section class="prog__container"><pre><code>public class SQLiteDiskIOException</code></pre>An exception that indicates that an IO error occured while accessing the SQLite database file.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteDiskIOException.html
SQLiteDoneException	A										<section class="prog__container"><pre><code>public class SQLiteDoneException</code></pre>An exception that indicates that the SQLite program is done. Thrown when an operation that expects a row (such as <code>simpleQueryForString()</code> or <code>simpleQueryForLong()</code>) does not get one.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteDoneException.html
SQLiteException	A										<section class="prog__container"><pre><code>public class SQLiteException</code></pre>A SQLite exception that indicates there was an error with SQL parsing or execution.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteException.html
SQLiteFullException	A										<section class="prog__container"><pre><code>public class SQLiteFullException</code></pre>An exception that indicates that the SQLite database is full.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteFullException.html
SQLiteMisuseException	A										<section class="prog__container"><pre><code>public class SQLiteMisuseException</code></pre>This error can occur if the application creates a SQLiteStatement object and allows multiple threads in the application use it at the same time. Sqlite returns this error if bind and execute methods on this object occur at the same time from multiple threads, like so: thread # 1: in execute() method of the SQLiteStatement object while thread # 2: is in bind..() on the same object.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteMisuseException.html
SQLiteOpenHelper	A										<section class="prog__container"><pre><code>public abstract class SQLiteOpenHelper</code></pre>A helper class to manage database creation and version management.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper.html
SQLiteOutOfMemoryException	A										<section class="prog__container"><pre><code>public class SQLiteOutOfMemoryException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteOutOfMemoryException.html
SQLiteProgram	A										<section class="prog__container"><pre><code>public abstract class SQLiteProgram</code></pre>A base class for compiled SQLite programs.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteProgram.html
SQLiteQuery	A										<section class="prog__container"><pre><code>public final class SQLiteQuery</code></pre>Represents a query that reads the resulting rows into a <code>SQLiteQuery</code>. This class is used by <code>SQLiteCursor</code> and isn't useful itself.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteQuery.html
SQLiteQueryBuilder	A										<section class="prog__container"><pre><code>public class SQLiteQueryBuilder</code></pre>This is a convience class that helps build SQL queries to be sent to <code>SQLiteDatabase</code> objects.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteQueryBuilder.html
SQLiteReadOnlyDatabaseException	A										<section class="prog__container"><pre><code>public class SQLiteReadOnlyDatabaseException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteReadOnlyDatabaseException.html
SQLiteStatement	A										<section class="prog__container"><pre><code>public final class SQLiteStatement</code></pre>Represents a statement that can be executed against a database. The statement cannot return multiple rows or columns, but single value (1 x 1) result sets are supported.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteStatement.html
SQLiteTableLockedException	A										<section class="prog__container"><pre><code>public class SQLiteTableLockedException</code></pre></section>	https://developer.android.com/reference/android/database/sqlite/SQLiteTableLockedException.html
SQLiteTransactionListener	A										<section class="prog__container"><pre><code>public interface SQLiteTransactionListener</code></pre>A listener for transaction events.</section>	https://developer.android.com/reference/android/database/sqlite/SQLiteTransactionListener.html
SSLCertificateSocketFactory	A										<section class="prog__container"><pre><code>public class SSLCertificateSocketFactory</code></pre>SSLSocketFactory implementation with several extra features: <ul> <li>Timeout specification for SSL handshake operations <li>Hostname verification in most cases (see WARNINGs below) <li>Optional SSL session caching with <code>SSLSessionCache</code> <li>Optionally bypass all SSL certificate checks </li></li></li></li></ul> The handshake timeout does not apply to actual TCP socket connection. If you want a connection timeout as well, use <code>createSocket()</code> and <code>connect(SocketAddress, int)</code>, after which you must verify the identity of the server you are connected to. <p class="caution"><b>Most <code>SSLSocketFactory</code> implementations do not verify the server's identity, allowing man-in-the-middle attacks.</b> This implementation does check the server's certificate hostname, but only for createSocket variants that specify a hostname. When using methods that use <code>InetAddress</code> or which return an unconnected socket, you MUST verify the server's identity yourself to ensure a secure connection.</section>	https://developer.android.com/reference/android/net/SSLCertificateSocketFactory.html
SSLContext	A										<section class="prog__container"><pre><code>public class SSLContext</code></pre>Instances of this class represent a secure socket protocol implementation which acts as a factory for secure socket factories or <code>SSLEngine</code>s. This class is initialized with an optional set of key and trust managers and source of secure random bytes.</section>	https://developer.android.com/reference/javax/net/ssl/SSLContext.html
SSLContextSpi	A										<section class="prog__container"><pre><code>public abstract class SSLContextSpi</code></pre>This class defines the <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>SSLContext</code> class.</section>	https://developer.android.com/reference/javax/net/ssl/SSLContextSpi.html
SSLEngine	A										<section class="prog__container"><pre><code>public abstract class SSLEngine</code></pre>A class which enables secure communications using protocols such as the Secure Sockets Layer (SSL) or IETF RFC 2246 "Transport Layer Security" (TLS) protocols, but is transport independent.</section>	https://developer.android.com/reference/javax/net/ssl/SSLEngine.html
SSLEngineResult	A										<section class="prog__container"><pre><code>public class SSLEngineResult</code></pre>An encapsulation of the result state produced by <code>SSLEngine</code> I/O calls.</section>	https://developer.android.com/reference/javax/net/ssl/SSLEngineResult.html
SSLEngineResult.HandshakeStatus	A										<section class="prog__container"><pre><code>public static final enum SSLEngineResult.HandshakeStatus</code></pre>An <code>SSLEngineResult</code> enum describing the current handshaking state of this <code>SSLEngine</code>.</section>	https://developer.android.com/reference/javax/net/ssl/SSLEngineResult.HandshakeStatus.html
SSLEngineResult.Status	A										<section class="prog__container"><pre><code>public static final enum SSLEngineResult.Status</code></pre>An <code>SSLEngineResult</code> enum describing the overall result of the <code>SSLEngine</code> operation. The <code>Status</code> value does not reflect the state of a <code>SSLEngine</code> handshake currently in progress. The <code>SSLEngineResult's HandshakeStatus</code> should be consulted for that information.</section>	https://developer.android.com/reference/javax/net/ssl/SSLEngineResult.Status.html
SSLException	A										<section class="prog__container"><pre><code>public class SSLException</code></pre>Indicates some kind of error detected by an SSL subsystem. This class is the general class of exceptions produced by failed SSL-related operations.</section>	https://developer.android.com/reference/javax/net/ssl/SSLException.html
SSLHandshakeException	A										<section class="prog__container"><pre><code>public class SSLHandshakeException</code></pre>Indicates that the client and server could not negotiate the desired level of security. The connection is no longer usable.</section>	https://developer.android.com/reference/javax/net/ssl/SSLHandshakeException.html
SSLKeyException	A										<section class="prog__container"><pre><code>public class SSLKeyException</code></pre>Reports a bad SSL key. Normally, this indicates misconfiguration of the server or client SSL certificate and private key.</section>	https://developer.android.com/reference/javax/net/ssl/SSLKeyException.html
SSLParameters	A										<section class="prog__container"><pre><code>public class SSLParameters</code></pre>Encapsulates parameters for an SSL/TLS connection. The parameters are the list of ciphersuites to be accepted in an SSL/TLS handshake, the list of protocols to be allowed, the endpoint identification algorithm during SSL/TLS handshaking, the Server Name Indication (SNI), the algorithm constraints and whether SSL/TLS servers should request or require client authentication, etc.</section>	https://developer.android.com/reference/javax/net/ssl/SSLParameters.html
SSLPeerUnverifiedException	A										<section class="prog__container"><pre><code>public class SSLPeerUnverifiedException</code></pre>Indicates that the peer's identity has not been verified.</section>	https://developer.android.com/reference/javax/net/ssl/SSLPeerUnverifiedException.html
SSLPermission	A										<section class="prog__container"><pre><code>public final class SSLPermission</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/javax/net/ssl/SSLPermission.html
SSLProtocolException	A										<section class="prog__container"><pre><code>public class SSLProtocolException</code></pre>Reports an error in the operation of the SSL protocol. Normally this indicates a flaw in one of the protocol implementations.</section>	https://developer.android.com/reference/javax/net/ssl/SSLProtocolException.html
SSLServerSocket	A										<section class="prog__container"><pre><code>public abstract class SSLServerSocket</code></pre>This class extends <code>ServerSocket</code>s and provides secure server sockets using protocols such as the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocols.</section>	https://developer.android.com/reference/javax/net/ssl/SSLServerSocket.html
SSLServerSocketFactory	A										<section class="prog__container"><pre><code>public abstract class SSLServerSocketFactory</code></pre><code>SSLServerSocketFactory</code>s create <code>SSLServerSocket</code>s.</section>	https://developer.android.com/reference/javax/net/ssl/SSLServerSocketFactory.html
SSLSession	A										<section class="prog__container"><pre><code>public interface SSLSession</code></pre>In SSL, sessions are used to describe an ongoing relationship between two entities. Each SSL connection involves one session at a time, but that session may be used on many connections between those entities, simultaneously or sequentially. The session used on a connection may also be replaced by a different session. Sessions are created, or rejoined, as part of the SSL handshaking protocol. Sessions may be invalidated due to policies affecting security or resource usage, or by an application explicitly calling <code>invalidate</code>. Session management policies are typically used to tune performance.</section>	https://developer.android.com/reference/javax/net/ssl/SSLSession.html
SSLSessionBindingEvent	A										<section class="prog__container"><pre><code>public class SSLSessionBindingEvent</code></pre>This event is propagated to a SSLSessionBindingListener. When a listener object is bound or unbound to an SSLSession by <code>putValue(String, Object)</code> or <code>removeValue(String)</code>, objects which implement the SSLSessionBindingListener will be receive an event of this type. The event's <code>name</code> field is the key in which the listener is being bound or unbound.</section>	https://developer.android.com/reference/javax/net/ssl/SSLSessionBindingEvent.html
SSLSessionBindingListener	A										<section class="prog__container"><pre><code>public interface SSLSessionBindingListener</code></pre>This interface is implemented by objects which want to know when they are being bound or unbound from a SSLSession. When either event occurs via <code>putValue(String, Object)</code> or <code>removeValue(String)</code>, the event is communicated through a SSLSessionBindingEvent identifying the session.</section>	https://developer.android.com/reference/javax/net/ssl/SSLSessionBindingListener.html
SSLSessionCache	A										<section class="prog__container"><pre><code>public final class SSLSessionCache</code></pre>File-based cache of established SSL sessions. When re-establishing a connection to the same server, using an SSL session cache can save some time, power, and bandwidth by skipping directly to an encrypted stream. This is a persistent cache which can span executions of the application.</section>	https://developer.android.com/reference/android/net/SSLSessionCache.html
SSLSessionContext	A										<section class="prog__container"><pre><code>public interface SSLSessionContext</code></pre>A <code>SSLSessionContext</code> represents a set of <code>SSLSession</code>s associated with a single entity. For example, it could be associated with a server or client who participates in many sessions concurrently.</section>	https://developer.android.com/reference/javax/net/ssl/SSLSessionContext.html
SSLSocket	A										<section class="prog__container"><pre><code>public abstract class SSLSocket</code></pre>This class extends <code>Socket</code>s and provides secure socket using protocols such as the "Secure Sockets Layer" (SSL) or IETF "Transport Layer Security" (TLS) protocols.</section>	https://developer.android.com/reference/javax/net/ssl/SSLSocket.html
SSLSocketFactory	D								*[[net.ssl.SSLSocketFactory]], <section class="prog__container"><pre><code>public abstract class SSLSocketFactory</code></pre><code>SSLSocketFactory</code>s create <code>SSLSocket</code>s.</section>\n*[[conn.ssl.SSLSocketFactory]], <section class="prog__container"><pre><code>public class SSLSocketFactory</code></pre><p class="caution"><strong> This class was deprecated in API level 22.</strong><br/> Please use <code>openConnection()</code> instead. Please visit this webpage for further details.</section>			
SafeVarargs	A										<section class="prog__container"><pre><code>public abstract @interface SafeVarargs</code></pre>A programmer assertion that the body of the annotated method or constructor does not perform potentially unsafe operations on its varargs parameter. Applying this annotation to a method or constructor suppresses unchecked warnings about a <i>non-reifiable</i> variable arity (vararg) type and suppresses unchecked warnings about parameterized array creation at call sites.</section>	https://developer.android.com/reference/java/lang/SafeVarargs.html
Sampler	D								*[[android.renderscript.Sampler]], <section class="prog__container"><pre><code>public class Sampler</code></pre>Sampler object that defines how Allocations can be read as textures within a kernel. Samplers are used in conjunction with the <code>rsSample</code> runtime function to return values from normalized coordinates. Any Allocation used with a Sampler must have been created with <code>USAGE_GRAPHICS_TEXTURE</code>; using a Sampler on an <code>Allocation</code> that was not created with <code>USAGE_GRAPHICS_TEXTURE</code> is undefined.</section>\n*[[v8.renderscript.Sampler]], <section class="prog__container"><pre><code>public class Sampler</code></pre>Sampler object that defines how Allocations can be read as textures within a kernel. Samplers are used in conjunction with the <code>rsSample</code> runtime function to return values from normalized coordinates. Any Allocation used with a Sampler must have been created with <code>USAGE_GRAPHICS_TEXTURE</code>; using a Sampler on an <code>Allocation</code> that was not created with <code>USAGE_GRAPHICS_TEXTURE</code> is undefined.</section>			
Sampler.Builder	D								*[[android.renderscript.Sampler.Builder]], <section class="prog__container"><pre><code>public static class Sampler.Builder</code></pre>Builder for creating non-standard samplers. This is only necessary if a Sampler with different min and mag modes is desired.</section>\n*[[v8.renderscript.Sampler.Builder]], <section class="prog__container"><pre><code>public static class Sampler.Builder</code></pre>Builder for creating non-standard samplers. This is only necessary if a Sampler with different min and mag modes is desired.</section>			
Sampler.Value	D								*[[android.renderscript.Sampler.Value]], <section class="prog__container"><pre><code>public static final enum Sampler.Value</code></pre></section>\n*[[v8.renderscript.Sampler.Value]], <section class="prog__container"><pre><code>public static final enum Sampler.Value</code></pre></section>			
SamplingProfilerIntegration	A										Integrates the framework with Dalvik's sampling profiler.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
Savepoint	A										<section class="prog__container"><pre><code>public interface Savepoint</code></pre>The representation of a savepoint, which is a point within the current transaction that can be referenced from the <code>Connection.rollback</code> method. When a transaction is rolled back to a savepoint all changes made after that savepoint are undone.</section>	https://developer.android.com/reference/java/sql/Savepoint.html
ScaleAnimation	A										<section class="prog__container"><pre><code>public class ScaleAnimation</code></pre>An animation that controls the scale of an object. You can specify the point to use for the center of scaling.</section>	https://developer.android.com/reference/android/view/animation/ScaleAnimation.html
ScaleDrawable	A										<section class="prog__container"><pre><code>public class ScaleDrawable</code></pre>A Drawable that changes the size of another Drawable based on its current level value. You can control how much the child Drawable changes in width and height based on the level, as well as a gravity to control where it is placed in its overall container. Most often used to implement things like progress bars.</section>	https://developer.android.com/reference/android/graphics/drawable/ScaleDrawable.html
ScaleGestureDetector	A										<section class="prog__container"><pre><code>public class ScaleGestureDetector</code></pre>Detects scaling transformation gestures using the supplied <code>MotionEvent</code>s. The <code>ScaleGestureDetector.OnScaleGestureListener</code> callback will notify users when a particular gesture event has occurred. This class should only be used with <code>MotionEvent</code>s reported via touch. To use this class: <ul> <li>Create an instance of the <code>ScaleGestureDetector</code> for your <code>View</code> <li>In the <code>onTouchEvent(MotionEvent)</code> method ensure you call <code>onTouchEvent(MotionEvent)</code>. The methods defined in your callback will be executed when the events occur. </li></li></ul></section>	https://developer.android.com/reference/android/view/ScaleGestureDetector.html
ScaleGestureDetector.OnScaleGestureListener	A										<section class="prog__container"><pre><code>public static interface ScaleGestureDetector.OnScaleGestureListener</code></pre>The listener for receiving notifications when gestures occur. If you want to listen for all the different gestures then implement this interface. If you only want to listen for a subset it might be easier to extend <code>ScaleGestureDetector.SimpleOnScaleGestureListener</code>. An application will receive events in the following order: <ul> <li>One <code>onScaleBegin(ScaleGestureDetector)</code> <li>Zero or more <code>onScale(ScaleGestureDetector)</code> <li>One <code>onScaleEnd(ScaleGestureDetector)</code> </li></li></li></ul></section>	https://developer.android.com/reference/android/view/ScaleGestureDetector.OnScaleGestureListener.html
ScaleGestureDetector.SimpleOnScaleGestureListener	A										<section class="prog__container"><pre><code>public static class ScaleGestureDetector.SimpleOnScaleGestureListener</code></pre>A convenience class to extend when you only want to listen for a subset of scaling-related events. This implements all methods in <code>ScaleGestureDetector.OnScaleGestureListener</code> but does nothing. <code>onScale(ScaleGestureDetector)</code> returns <code>false</code> so that a subclass can retrieve the accumulated scale factor in an overridden onScaleEnd. <code>onScaleBegin(ScaleGestureDetector)</code> returns <code>true</code>.</section>	https://developer.android.com/reference/android/view/ScaleGestureDetector.SimpleOnScaleGestureListener.html
ScaleGestureDetectorCompat	A										<section class="prog__container"><pre><code>public final class ScaleGestureDetectorCompat</code></pre>Helper for accessing features in <code>ScaleGestureDetector</code> introduced after API level 19 (KitKat) in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/view/ScaleGestureDetectorCompat.html
ScaleXSpan	A										<section class="prog__container"><pre><code>public class ScaleXSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/ScaleXSpan.html
ScanCallback	A										<section class="prog__container"><pre><code>public abstract class ScanCallback</code></pre>Bluetooth LE scan callbacks. Scan results are reported using these callbacks.</section>	https://developer.android.com/reference/android/bluetooth/le/ScanCallback.html
ScanFilter	A										<section class="prog__container"><pre><code>public final class ScanFilter</code></pre>Criteria for filtering result from Bluetooth LE scans. A <code>ScanFilter</code> allows clients to restrict scan results to only those that are of interest to them.</section>	https://developer.android.com/reference/android/bluetooth/le/ScanFilter.html
ScanFilter.Builder	A										<section class="prog__container"><pre><code>public static final class ScanFilter.Builder</code></pre>Builder class for <code>ScanFilter</code>.</section>	https://developer.android.com/reference/android/bluetooth/le/ScanFilter.Builder.html
ScanRecord	A										<section class="prog__container"><pre><code>public final class ScanRecord</code></pre>Represents a scan record from Bluetooth LE scan.</section>	https://developer.android.com/reference/android/bluetooth/le/ScanRecord.html
ScanResult	D								*[[le.ScanResult]], <section class="prog__container"><pre><code>public final class ScanResult</code></pre>ScanResult for Bluetooth LE scan.</section>\n*[[wifi.ScanResult]], <section class="prog__container"><pre><code>public class ScanResult</code></pre>Describes information about a detected access point. In addition to the attributes described here, the supplicant keeps track of <code>quality</code>, <code>noise</code>, and <code>maxbitrate</code> attributes, but does not currently report them to external clients.</section>			
ScanSettings	A										<section class="prog__container"><pre><code>public final class ScanSettings</code></pre>Bluetooth LE scan settings are passed to <code>startScan(ScanCallback)</code> to define the parameters for the scan.</section>	https://developer.android.com/reference/android/bluetooth/le/ScanSettings.html
ScanSettings.Builder	A										<section class="prog__container"><pre><code>public static final class ScanSettings.Builder</code></pre>Builder for <code>ScanSettings</code>.</section>	https://developer.android.com/reference/android/bluetooth/le/ScanSettings.Builder.html
Scanner	A										<section class="prog__container"><pre><code>public final class Scanner</code></pre>A simple text scanner which can parse primitive types and strings using regular expressions.</section>	https://developer.android.com/reference/java/util/Scanner.html
ScatteringByteChannel	A										<section class="prog__container"><pre><code>public interface ScatteringByteChannel</code></pre>A channel that can read bytes into a sequence of buffers.</section>	https://developer.android.com/reference/java/nio/channels/ScatteringByteChannel.html
Scene	D								*[[support.transition.Scene]], <section class="prog__container"><pre><code>public class Scene</code></pre>A scene represents the collection of values that various properties in the View hierarchy will have when the scene is applied. A Scene can be configured to automatically run a Transition when it is applied, which will animate the various property changes that take place during the scene change.</section>\n*[[android.transition.Scene]], <section class="prog__container"><pre><code>public final class Scene</code></pre>A scene represents the collection of values that various properties in the View hierarchy will have when the scene is applied. A Scene can be configured to automatically run a Transition when it is applied, which will animate the various property changes that take place during the scene change.</section>			
ScheduledExecutorService	A										<section class="prog__container"><pre><code>public interface ScheduledExecutorService</code></pre>An <code>ExecutorService</code> that can schedule commands to run after a given delay, or to execute periodically.</section>	https://developer.android.com/reference/java/util/concurrent/ScheduledExecutorService.html
ScheduledFuture	A										<section class="prog__container"><pre><code>public interface ScheduledFuture</code></pre>A delayed result-bearing action that can be cancelled. Usually a scheduled future is the result of scheduling a task with a <code>ScheduledExecutorService</code>.</section>	https://developer.android.com/reference/java/util/concurrent/ScheduledFuture.html
ScheduledThreadPoolExecutor	A										<section class="prog__container"><pre><code>public class ScheduledThreadPoolExecutor</code></pre>A <code>ThreadPoolExecutor</code> that can additionally schedule commands to run after a given delay, or to execute periodically. This class is preferable to <code>Timer</code> when multiple worker threads are needed, or when the additional flexibility or capabilities of <code>ThreadPoolExecutor</code> (which this class extends) are required.</section>	https://developer.android.com/reference/java/util/concurrent/ScheduledThreadPoolExecutor.html
Schema	A										<section class="prog__container"><pre><code>public abstract class Schema</code></pre>Immutable in-memory representation of grammar.</section>	https://developer.android.com/reference/javax/xml/validation/Schema.html
SchemaFactory	A										<section class="prog__container"><pre><code>public abstract class SchemaFactory</code></pre>Factory that creates <code>Schema</code> objects. Entry-point to the validation API.</section>	https://developer.android.com/reference/javax/xml/validation/SchemaFactory.html
SchemaFactoryLoader	A										<section class="prog__container"><pre><code>public abstract class SchemaFactoryLoader</code></pre></section>	https://developer.android.com/reference/javax/xml/validation/SchemaFactoryLoader.html
Script	D								*[[android.renderscript.Script]], <section class="prog__container"><pre><code>public class Script</code></pre>The parent class for all executable scripts. This should not be used by applications.</section>\n*[[v8.renderscript.Script]], <section class="prog__container"><pre><code>public class Script</code></pre>The parent class for all executable scripts. This should not be used by applications.</section>			
Script.Builder	D								*[[android.renderscript.Script.Builder]], <section class="prog__container"><pre><code>public static class Script.Builder</code></pre>Only intended for use by generated reflected code.</section>\n*[[v8.renderscript.Script.Builder]], <section class="prog__container"><pre><code>public static class Script.Builder</code></pre>Only intended for use by generated reflected code.</section>			
Script.FieldBase	D								*[[android.renderscript.Script.FieldBase]], <section class="prog__container"><pre><code>public static class Script.FieldBase</code></pre>Only intended for use by generated reflected code.</section>\n*[[v8.renderscript.Script.FieldBase]], <section class="prog__container"><pre><code>public static class Script.FieldBase</code></pre>Only intended for use by generated reflected code.</section>			
Script.FieldID	D								*[[android.renderscript.Script.FieldID]], <section class="prog__container"><pre><code>public static final class Script.FieldID</code></pre>FieldID is an identifier for a Script + exported field pair. It is used as an identifier for ScriptGroup creation. This class should not be directly created. Instead use the method in the reflected or intrinsic code "getFieldID_funcname()".</section>\n*[[v8.renderscript.Script.FieldID]], <section class="prog__container"><pre><code>public static final class Script.FieldID</code></pre>FieldID is an identifier for a Script + exported field pair. It is used as an identifier for ScriptGroup creation. This class should not be directly created. Instead use the method in the reflected or intrinsic code "getFieldID_funcname()".</section>			
Script.InvokeID	D								*[[android.renderscript.Script.InvokeID]], <section class="prog__container"><pre><code>public static final class Script.InvokeID</code></pre>InvokeID is an identifier for an invoke function. It is used as an identifier for ScriptGroup creation. This class should not be directly created. Instead use the method in the reflected or intrinsic code "getInvokeID_funcname()".</section>\n*[[v8.renderscript.Script.InvokeID]], <section class="prog__container"><pre><code>public static final class Script.InvokeID</code></pre>InvokeID is an identifier for a invoke function. It is used as an identifier for ScriptGroup creation. This class should not be directly created. Instead use the method in the reflected or intrinsic code "getInvokeID_funcname()".</section>			
Script.KernelID	D								*[[android.renderscript.Script.KernelID]], <section class="prog__container"><pre><code>public static final class Script.KernelID</code></pre>KernelID is an identifier for a Script + root function pair. It is used as an identifier for ScriptGroup creation. This class should not be directly created. Instead use the method in the reflected or intrinsic code "getKernelID_funcname()".</section>\n*[[v8.renderscript.Script.KernelID]], <section class="prog__container"><pre><code>public static final class Script.KernelID</code></pre>KernelID is an identifier for a Script + root function pair. It is used as an identifier for ScriptGroup creation. This class should not be directly created. Instead use the method in the reflected or intrinsic code "getKernelID_funcname()".</section>			
Script.LaunchOptions	D								*[[android.renderscript.Script.LaunchOptions]], <section class="prog__container"><pre><code>public static final class Script.LaunchOptions</code></pre>Class for specifying the specifics about how a kernel will be launched. This class can specify a potential range of cells on which to run a kernel. If no set is called for a dimension then this class will have no impact on that dimension when the kernel is executed. The forEach kernel launch will operate over the intersection of the dimensions. Example: LaunchOptions with setX(5, 15) Allocation with dimension X=10, Y=10 The resulting forEach run would execute over: x = 5 to 9 (inclusive) and y = 0 to 9 (inclusive).</section>\n*[[v8.renderscript.Script.LaunchOptions]], <section class="prog__container"><pre><code>public static final class Script.LaunchOptions</code></pre>Class for specifying the specifics about how a kernel will be launched. This class can specify a potential range of cells on which to run a kernel. If no set is called for a dimension then this class will have no impact on that dimension when the kernel is executed. The forEach kernel launch will operate over the intersection of the dimensions. Example: LaunchOptions with setX(5, 15) Allocation with dimension X=10, Y=10 The resulting forEach run would execute over: x = 5 to 9 (inclusive) and y = 0 to 9 (inclusive).</section>			
ScriptC	D								*[[android.renderscript.ScriptC]], <section class="prog__container"><pre><code>public class ScriptC</code></pre>The superclass for all user-defined scripts. This is only intended to be used by the generated derived classes.</section>\n*[[v8.renderscript.ScriptC]], <section class="prog__container"><pre><code>public class ScriptC</code></pre>The superclass for all user-defined scripts. This is only intended to be used by the generated derived classes.</section>			
ScriptGroup	D								*[[android.renderscript.ScriptGroup]], <section class="prog__container"><pre><code>public final class ScriptGroup</code></pre>A group of kernels that are executed together with one execution call as if they were a single kernel</section>\n*[[v8.renderscript.ScriptGroup]], <section class="prog__container"><pre><code>public final class ScriptGroup</code></pre>A group of kernels that are executed together with one execution call as if they were a single kernel</section>			
ScriptGroup.Binding	D								*[[android.renderscript.ScriptGroup.Binding]], <section class="prog__container"><pre><code>public static final class ScriptGroup.Binding</code></pre>Represents a binding of a value to a global variable in a kernel or invocable function. Used in closure creation.</section>\n*[[v8.renderscript.ScriptGroup.Binding]], <section class="prog__container"><pre><code>public static final class ScriptGroup.Binding</code></pre>Represents a binding of a value to a global variable in a kernel or invocable function. Used in closure creation.</section>			
ScriptGroup.Builder	D								*[[android.renderscript.ScriptGroup.Builder]], <section class="prog__container"><pre><code>public static final class ScriptGroup.Builder</code></pre><p class="caution"><strong> This class was deprecated in API level 23.</strong><br/> Use <code>ScriptGroup.Builder2</code> instead.</section>\n*[[v8.renderscript.ScriptGroup.Builder]], <section class="prog__container"><pre><code>public static final class ScriptGroup.Builder</code></pre><p class="caution"><strong> This class is deprecated.</strong><br/> Use <code>ScriptGroup.Builder2</code> instead.</section>			
ScriptGroup.Builder2	D								*[[android.renderscript.ScriptGroup.Builder2]], <section class="prog__container"><pre><code>public static final class ScriptGroup.Builder2</code></pre>The builder class for creating script groups</section>\n*[[v8.renderscript.ScriptGroup.Builder2]], <section class="prog__container"><pre><code>public static final class ScriptGroup.Builder2</code></pre>The builder class for creating script groups</section>			
ScriptGroup.Closure	D								*[[android.renderscript.ScriptGroup.Closure]], <section class="prog__container"><pre><code>public static final class ScriptGroup.Closure</code></pre>An opaque class for closures</section>\n*[[v8.renderscript.ScriptGroup.Closure]], <section class="prog__container"><pre><code>public static final class ScriptGroup.Closure</code></pre>An opaque class for closures</section>			
ScriptGroup.Future	D								*[[android.renderscript.ScriptGroup.Future]], <section class="prog__container"><pre><code>public static final class ScriptGroup.Future</code></pre>An opaque class for futures</section>\n*[[v8.renderscript.ScriptGroup.Future]], <section class="prog__container"><pre><code>public static final class ScriptGroup.Future</code></pre>An opaque class for futures</section>			
ScriptGroup.Input	D								*[[android.renderscript.ScriptGroup.Input]], <section class="prog__container"><pre><code>public static final class ScriptGroup.Input</code></pre>An opaque class for script group inputs</section>\n*[[v8.renderscript.ScriptGroup.Input]], <section class="prog__container"><pre><code>public static final class ScriptGroup.Input</code></pre>An opaque class for unbound values (used for script group inputs)</section>			
ScriptIntrinsic	D								*[[android.renderscript.ScriptIntrinsic]], <section class="prog__container"><pre><code>public abstract class ScriptIntrinsic</code></pre>Base class for all Intrinsic scripts. An intrinsic a script which implements a pre-defined function. Intrinsics are provided to provide effecient implemtations of common operations. Not intended for direct use.</section>\n*[[v8.renderscript.ScriptIntrinsic]], <section class="prog__container"><pre><code>public abstract class ScriptIntrinsic</code></pre>Base class for all Intrinsic scripts. An intrinsic a script which implements a pre-defined function. Intrinsics are provided to provide effecient implemtations of common operations. Not intended for direct use.</section>			
ScriptIntrinsic3DLUT	D								*[[android.renderscript.ScriptIntrinsic3DLUT]], <section class="prog__container"><pre><code>public final class ScriptIntrinsic3DLUT</code></pre>Intrinsic for converting RGB to RGBA by using a 3D lookup table. The incoming r,g,b values are use as normalized x,y,z coordinates into a 3D allocation. The 8 nearest values are sampled and linearly interpolated. The result is placed in the output.</section>\n*[[v8.renderscript.ScriptIntrinsic3DLUT]], <section class="prog__container"><pre><code>public class ScriptIntrinsic3DLUT</code></pre>Intrinsic for converting RGB to RGBA by using a 3D lookup table. The incoming r,g,b values are use as normalized x,y,z coordinates into a 3D allocation. The 8 nearest values are sampled and linearly interpolated. The result is placed in the output.</section>			
ScriptIntrinsicBLAS	D								*[[android.renderscript.ScriptIntrinsicBLAS]], <section class="prog__container"><pre><code>public final class ScriptIntrinsicBLAS</code></pre>ScriptIntrinsicBLAS class provides high performance RenderScript APIs to BLAS. The BLAS (Basic Linear Algebra Subprograms) are routines that provide standard building blocks for performing basic vector and matrix operations. For detailed description of BLAS, please refer to http://www.netlib.org/blas/</section>\n*[[v8.renderscript.ScriptIntrinsicBLAS]], <section class="prog__container"><pre><code>public final class ScriptIntrinsicBLAS</code></pre>ScriptIntrinsicBLAS class provides high performance RenderScript APIs to BLAS. The BLAS (Basic Linear Algebra Subprograms) are routines that provide standard building blocks for performing basic vector and matrix operations. For detailed description of BLAS, please refer to http://www.netlib.org/blas/</section>			
ScriptIntrinsicBlend	D								*[[android.renderscript.ScriptIntrinsicBlend]], <section class="prog__container"><pre><code>public class ScriptIntrinsicBlend</code></pre>Intrinsic kernels for blending two <code>Allocation</code> objects.</section>\n*[[v8.renderscript.ScriptIntrinsicBlend]], <section class="prog__container"><pre><code>public class ScriptIntrinsicBlend</code></pre>Intrinsic kernels for blending two <code>Allocation</code> objects.</section>			
ScriptIntrinsicBlur	D								*[[android.renderscript.ScriptIntrinsicBlur]], <section class="prog__container"><pre><code>public final class ScriptIntrinsicBlur</code></pre>Intrinsic Gausian blur filter. Applies a gaussian blur of the specified radius to all elements of an allocation.</section>\n*[[v8.renderscript.ScriptIntrinsicBlur]], <section class="prog__container"><pre><code>public class ScriptIntrinsicBlur</code></pre>Intrinsic Gausian blur filter. Applies a gaussian blur of the specified radius to all elements of an allocation.</section>			
ScriptIntrinsicColorMatrix	D								*[[android.renderscript.ScriptIntrinsicColorMatrix]], <section class="prog__container"><pre><code>public final class ScriptIntrinsicColorMatrix</code></pre>Intrinsic for applying a color matrix to allocations. If the element type is <code>UNSIGNED_8</code>, it is converted to <code>FLOAT_32</code> and normalized from (0-255) to (0-1). If the incoming vector size is less than four, a <code>F32_4(RenderScript)</code> is created by filling the missing vector channels with zero. This value is then multiplied by the 4x4 color matrix as performed by rsMatrixMultiply(), adding a <code>F32_4(RenderScript)</code>, and then writing it to the output <code>Allocation</code>. If the ouptut type is unsigned, the value is normalized from (0-1) to (0-255) and converted. If the output vector size is less than four, the unused channels are discarded. Supported elements types are <code>U8(RenderScript)</code>, <code>U8_2(RenderScript)</code>, <code>U8_3(RenderScript)</code>, <code>U8_4(RenderScript)</code>, <code>F32(RenderScript)</code>, <code>F32_2(RenderScript)</code>, <code>F32_3(RenderScript)</code>, and <code>F32_4(RenderScript)</code>.</section>\n*[[v8.renderscript.ScriptIntrinsicColorMatrix]], <section class="prog__container"><pre><code>public class ScriptIntrinsicColorMatrix</code></pre>Intrinsic for applying a color matrix to allocations. This has the same effect as loading each element and converting it to a <code>F32_4(RenderScript)</code>, multiplying the result by the 4x4 color matrix as performed by rsMatrixMultiply() and writing it to the output after conversion back to <code>U8_4(RenderScript)</code>.</section>			
ScriptIntrinsicConvolve3x3	D								*[[android.renderscript.ScriptIntrinsicConvolve3x3]], <section class="prog__container"><pre><code>public final class ScriptIntrinsicConvolve3x3</code></pre>Intrinsic for applying a 3x3 convolve to an allocation.</section>\n*[[v8.renderscript.ScriptIntrinsicConvolve3x3]], <section class="prog__container"><pre><code>public class ScriptIntrinsicConvolve3x3</code></pre>Intrinsic for applying a 3x3 convolve to an allocation.</section>			
ScriptIntrinsicConvolve5x5	D								*[[android.renderscript.ScriptIntrinsicConvolve5x5]], <section class="prog__container"><pre><code>public final class ScriptIntrinsicConvolve5x5</code></pre>Intrinsic for applying a 5x5 convolve to an allocation.</section>\n*[[v8.renderscript.ScriptIntrinsicConvolve5x5]], <section class="prog__container"><pre><code>public class ScriptIntrinsicConvolve5x5</code></pre>Intrinsic for applying a 5x5 convolve to an allocation.</section>			
ScriptIntrinsicHistogram	D								*[[android.renderscript.ScriptIntrinsicHistogram]], <section class="prog__container"><pre><code>public final class ScriptIntrinsicHistogram</code></pre>Intrinsic Histogram filter.</section>\n*[[v8.renderscript.ScriptIntrinsicHistogram]], <section class="prog__container"><pre><code>public class ScriptIntrinsicHistogram</code></pre>Intrinsic Histogram filter.</section>			
ScriptIntrinsicLUT	D								*[[android.renderscript.ScriptIntrinsicLUT]], <section class="prog__container"><pre><code>public final class ScriptIntrinsicLUT</code></pre>Intrinsic for applying a per-channel lookup table. Each channel of the input has an independant lookup table. The tables are 256 entries in size and can cover the full value range of <code>U8_4(RenderScript)</code>.</section>\n*[[v8.renderscript.ScriptIntrinsicLUT]], <section class="prog__container"><pre><code>public class ScriptIntrinsicLUT</code></pre>Intrinsic for applying a per-channel lookup table. Each channel of the input has an independant lookup table. The tables are 256 entries in size and can cover the full value range of <code>U8_4(RenderScript)</code>.</section>			
ScriptIntrinsicResize	D								*[[android.renderscript.ScriptIntrinsicResize]], <section class="prog__container"><pre><code>public final class ScriptIntrinsicResize</code></pre>Intrinsic for performing a resize of a 2D allocation.</section>\n*[[v8.renderscript.ScriptIntrinsicResize]], <section class="prog__container"><pre><code>public class ScriptIntrinsicResize</code></pre>Intrinsic for performing a resize of a 2D allocation.</section>			
ScriptIntrinsicYuvToRGB	D								*[[android.renderscript.ScriptIntrinsicYuvToRGB]], <section class="prog__container"><pre><code>public final class ScriptIntrinsicYuvToRGB</code></pre>Intrinsic for converting an Android YUV buffer to RGB. The input allocation should be supplied in a supported YUV format as a YUV element Allocation. The output is RGBA; the alpha channel will be set to 255.</section>\n*[[v8.renderscript.ScriptIntrinsicYuvToRGB]], <section class="prog__container"><pre><code>public class ScriptIntrinsicYuvToRGB</code></pre>Intrinsic for converting an Android YUV buffer to RGB. The input allocation is supplied in NV21 format as a U8 element type. The output is RGBA, the alpha channel will be set to 255.</section>			
ScrollView	A										<section class="prog__container"><pre><code>public class ScrollView</code></pre>Layout container for a view hierarchy that can be scrolled by the user, allowing it to be larger than the physical display. A ScrollView is a <code>FrameLayout</code>, meaning you should place one child in it containing the entire contents to scroll; this child may itself be a layout manager with a complex hierarchy of objects. A child that is often used is a <code>LinearLayout</code> in a vertical orientation, presenting a vertical array of top-level items that the user can scroll through.</section>	https://developer.android.com/reference/android/widget/ScrollView.html
Scroller	A										<section class="prog__container"><pre><code>public class Scroller</code></pre></section>	https://developer.android.com/reference/android/widget/Scroller.html
ScrollerCompat	A										<section class="prog__container"><pre><code>public final class ScrollerCompat</code></pre>Provides access to new <code>Scroller</code> APIs when available.</section>	https://developer.android.com/reference/android/support/v4/widget/ScrollerCompat.html
ScrollingMovementMethod	A										<section class="prog__container"><pre><code>public class ScrollingMovementMethod</code></pre>A movement method that interprets movement keys by scrolling the text buffer.</section>	https://developer.android.com/reference/android/text/method/ScrollingMovementMethod.html
ScrollingTabContainerView	A										This widget implements the dynamic action bar tab behavior that can change across different configurations or circumstances.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
ScrollingView	A										<section class="prog__container"><pre><code>public interface ScrollingView</code></pre>An interface that can be implemented by Views to provide scroll related APIs.</section>	https://developer.android.com/reference/android/support/v4/view/ScrollingView.html
SealedObject	A										<section class="prog__container"><pre><code>public class SealedObject</code></pre>This class enables a programmer to create an object and protect its confidentiality with a cryptographic algorithm.</section>	https://developer.android.com/reference/javax/crypto/SealedObject.html
SearchBar	A										<section class="prog__container"><pre><code>public class SearchBar</code></pre>A search widget containing a search orb and a text entry view.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SearchBar.html
SearchBar.SearchBarListener	A										<section class="prog__container"><pre><code>public static interface SearchBar.SearchBarListener</code></pre>Interface for receiving notification of search query changes.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SearchBar.SearchBarListener.html
SearchBar.SearchBarPermissionListener	A										<section class="prog__container"><pre><code>public static interface SearchBar.SearchBarPermissionListener</code></pre>Interface that handles runtime permissions requests. App sets listener on SearchBar via <code>setPermissionListener(SearchBarPermissionListener)</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SearchBar.SearchBarPermissionListener.html
SearchEditText	A										<section class="prog__container"><pre><code>public class SearchEditText</code></pre>EditText widget that monitors keyboard changes.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SearchEditText.html
SearchEditText.OnKeyboardDismissListener	A										<section class="prog__container"><pre><code>public static interface SearchEditText.OnKeyboardDismissListener</code></pre>Interface for receiving notification when the keyboard is dismissed.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SearchEditText.OnKeyboardDismissListener.html
SearchEvent	A										<section class="prog__container"><pre><code>public class SearchEvent</code></pre>Class that contains information about an event that triggers a search.</section>	https://developer.android.com/reference/android/view/SearchEvent.html
SearchFragment	A										<section class="prog__container"><pre><code>public class SearchFragment</code></pre>A fragment to handle searches. An application will supply an implementation of the <code>SearchFragment.SearchResultProvider</code> interface to handle the search and return an <code>ObjectAdapter</code> containing the results. The results are rendered into a <code>RowsFragment</code>, in the same way that they are in a <code>BrowseFragment</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/SearchFragment.html
SearchFragment.SearchResultProvider	A										<section class="prog__container"><pre><code>public static interface SearchFragment.SearchResultProvider</code></pre>Search API to be provided by the application.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/SearchFragment.SearchResultProvider.html
SearchIterator	A										<section class="prog__container"><pre><code>public abstract class SearchIterator</code></pre><tt>SearchIterator</tt> is an abstract base class that provides methods to search for a pattern within a text string. Instances of <tt>SearchIterator</tt> maintain a current position and scan over the target text, returning the indices the pattern is matched and the length of each match.</section>	https://developer.android.com/reference/android/icu/text/SearchIterator.html
SearchIterator.ElementComparisonType	A										<section class="prog__container"><pre><code>public static final enum SearchIterator.ElementComparisonType</code></pre>Option to control how collation elements are compared. The default value will be <code>STANDARD_ELEMENT_COMPARISON</code>.</section>	https://developer.android.com/reference/android/icu/text/SearchIterator.ElementComparisonType.html
SearchManager	A										<section class="prog__container"><pre><code>public class SearchManager</code></pre>This class provides access to the system search services.</section>	https://developer.android.com/reference/android/app/SearchManager.html
SearchManager.OnCancelListener	A										<section class="prog__container"><pre><code>public static interface SearchManager.OnCancelListener</code></pre>See <code>setOnCancelListener(SearchManager.OnCancelListener)</code> for configuring your activity to monitor search UI state.</section>	https://developer.android.com/reference/android/app/SearchManager.OnCancelListener.html
SearchManager.OnDismissListener	A										<section class="prog__container"><pre><code>public static interface SearchManager.OnDismissListener</code></pre>See <code>setOnDismissListener(SearchManager.OnDismissListener)</code> for configuring your activity to monitor search UI state.</section>	https://developer.android.com/reference/android/app/SearchManager.OnDismissListener.html
SearchOrbView	A										<section class="prog__container"><pre><code>public class SearchOrbView</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SearchOrbView.html
SearchOrbView.Colors	A										<section class="prog__container"><pre><code>public static class SearchOrbView.Colors</code></pre>A set of colors used to display the search orb.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SearchOrbView.Colors.html
SearchRecentSuggestions	A										<section class="prog__container"><pre><code>public class SearchRecentSuggestions</code></pre>This is a utility class providing access to <code>SearchRecentSuggestionsProvider</code>.</section>	https://developer.android.com/reference/android/provider/SearchRecentSuggestions.html
SearchRecentSuggestionsProvider	A										<section class="prog__container"><pre><code>public class SearchRecentSuggestionsProvider</code></pre>This superclass can be used to create a simple search suggestions provider for your application. It creates suggestions (as the user types) based on recent queries and/or recent views.</section>	https://developer.android.com/reference/android/content/SearchRecentSuggestionsProvider.html
SearchSupportFragment	A										<section class="prog__container"><pre><code>public class SearchSupportFragment</code></pre>A fragment to handle searches. An application will supply an implementation of the <code>SearchSupportFragment.SearchResultProvider</code> interface to handle the search and return an <code>ObjectAdapter</code> containing the results. The results are rendered into a <code>RowsSupportFragment</code>, in the same way that they are in a <code>BrowseSupportFragment</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/SearchSupportFragment.html
SearchSupportFragment.SearchResultProvider	A										<section class="prog__container"><pre><code>public static interface SearchSupportFragment.SearchResultProvider</code></pre>Search API to be provided by the application.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/SearchSupportFragment.SearchResultProvider.html
SearchView	D								*[[v7.widget.SearchView]], <section class="prog__container"><pre><code>public class SearchView</code></pre>A widget that provides a user interface for the user to enter a search query and submit a request to a search provider. Shows a list of query suggestions or results, if available, and allows the user to pick a suggestion or result to launch into. <p class="note"><strong>Note:</strong> This class is included in the support library for compatibility with API level 7 and higher. If you're developing your app for API level 11 and higher <em>only</em>, you should instead use the framework <code>SearchView</code> class.</section>\n*[[android.widget.SearchView]], <section class="prog__container"><pre><code>public class SearchView</code></pre>A widget that provides a user interface for the user to enter a search query and submit a request to a search provider. Shows a list of query suggestions or results, if available, and allows the user to pick a suggestion or result to launch into.</section>			
SearchView.OnCloseListener	D								*[[v7.widget.SearchView.OnCloseListener]], <section class="prog__container"><pre><code>public static interface SearchView.OnCloseListener</code></pre></section>\n*[[android.widget.SearchView.OnCloseListener]], <section class="prog__container"><pre><code>public static interface SearchView.OnCloseListener</code></pre></section>			
SearchView.OnQueryTextListener	D								*[[v7.widget.SearchView.OnQueryTextListener]], <section class="prog__container"><pre><code>public static interface SearchView.OnQueryTextListener</code></pre>Callbacks for changes to the query text.</section>\n*[[android.widget.SearchView.OnQueryTextListener]], <section class="prog__container"><pre><code>public static interface SearchView.OnQueryTextListener</code></pre>Callbacks for changes to the query text.</section>			
SearchView.OnSuggestionListener	D								*[[v7.widget.SearchView.OnSuggestionListener]], <section class="prog__container"><pre><code>public static interface SearchView.OnSuggestionListener</code></pre>Callback interface for selection events on suggestions. These callbacks are only relevant when a SearchableInfo has been specified by <code>setSearchableInfo(SearchableInfo)</code>.</section>\n*[[android.widget.SearchView.OnSuggestionListener]], <section class="prog__container"><pre><code>public static interface SearchView.OnSuggestionListener</code></pre>Callback interface for selection events on suggestions. These callbacks are only relevant when a SearchableInfo has been specified by <code>setSearchableInfo(SearchableInfo)</code>.</section>			
SearchViewCompat	A										<section class="prog__container"><pre><code>public final class SearchViewCompat</code></pre>Helper for accessing features in <code>SearchView</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/widget/SearchViewCompat.html
SearchViewCompat.OnCloseListener	A										<section class="prog__container"><pre><code>public static interface SearchViewCompat.OnCloseListener</code></pre>Callback for closing the query UI.</section>	https://developer.android.com/reference/android/support/v4/widget/SearchViewCompat.OnCloseListener.html
SearchViewCompat.OnCloseListenerCompat	A										<section class="prog__container"><pre><code>public static abstract class SearchViewCompat.OnCloseListenerCompat</code></pre><p class="caution"><strong> This class is deprecated.</strong><br/> Use <code>SearchViewCompat.OnCloseListener</code> instead.</section>	https://developer.android.com/reference/android/support/v4/widget/SearchViewCompat.OnCloseListenerCompat.html
SearchViewCompat.OnQueryTextListener	A										<section class="prog__container"><pre><code>public static interface SearchViewCompat.OnQueryTextListener</code></pre>Callbacks for changes to the query text.</section>	https://developer.android.com/reference/android/support/v4/widget/SearchViewCompat.OnQueryTextListener.html
SearchViewCompat.OnQueryTextListenerCompat	A										<section class="prog__container"><pre><code>public static abstract class SearchViewCompat.OnQueryTextListenerCompat</code></pre><p class="caution"><strong> This class is deprecated.</strong><br/> Use <code>SearchViewCompat.OnQueryTextListener</code> instead.</section>	https://developer.android.com/reference/android/support/v4/widget/SearchViewCompat.OnQueryTextListenerCompat.html
SearchableInfo	A										<section class="prog__container"><pre><code>public final class SearchableInfo</code></pre>Searchability meta-data for an activity. Only applications that search other applications should need to use this class. See Searchable Configuration for more information about declaring searchability meta-data for your application.</section>	https://developer.android.com/reference/android/app/SearchableInfo.html
SecretKey	A										<section class="prog__container"><pre><code>public interface SecretKey</code></pre>A secret (symmetric) key.</section>	https://developer.android.com/reference/javax/crypto/SecretKey.html
SecretKeyFactory	A										<section class="prog__container"><pre><code>public class SecretKeyFactory</code></pre>This class represents a factory for secret keys.</section>	https://developer.android.com/reference/javax/crypto/SecretKeyFactory.html
SecretKeyFactorySpi	A										<section class="prog__container"><pre><code>public abstract class SecretKeyFactorySpi</code></pre>This class defines the <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>SecretKeyFactory</code> class. All the abstract methods in this class must be implemented by each cryptographic service provider who wishes to supply the implementation of a secret-key factory for a particular algorithm.</section>	https://developer.android.com/reference/javax/crypto/SecretKeyFactorySpi.html
SecretKeySpec	A										<section class="prog__container"><pre><code>public class SecretKeySpec</code></pre>This class specifies a secret key in a provider-independent fashion.</section>	https://developer.android.com/reference/javax/crypto/spec/SecretKeySpec.html
SectionIndexer	A										<section class="prog__container"><pre><code>public interface SectionIndexer</code></pre>Interface that may implemented on <code>Adapter</code>s to enable fast scrolling between sections of an <code>AbsListView</code>.</section>	https://developer.android.com/reference/android/widget/SectionIndexer.html
SectionRow	A										<section class="prog__container"><pre><code>public class SectionRow</code></pre>Used to represent section item in HeadersFragment. Unlike a normal Row, it's not focusable.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SectionRow.html
SecureCacheResponse	A										<section class="prog__container"><pre><code>public abstract class SecureCacheResponse</code></pre>Represents a cache response originally retrieved through secure means, such as TLS.</section>	https://developer.android.com/reference/java/net/SecureCacheResponse.html
SecureClassLoader	A										<section class="prog__container"><pre><code>public class SecureClassLoader</code></pre>This class extends ClassLoader with additional support for defining classes with an associated code source and permissions which are retrieved by the system policy by default.</section>	https://developer.android.com/reference/java/security/SecureClassLoader.html
SecureRandom	A										<section class="prog__container"><pre><code>public class SecureRandom</code></pre>This class provides a cryptographically strong random number generator (RNG).</section>	https://developer.android.com/reference/java/security/SecureRandom.html
SecureRandomSpi	A										<section class="prog__container"><pre><code>public abstract class SecureRandomSpi</code></pre>This class defines the <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>SecureRandom</code> class. All the abstract methods in this class must be implemented by each service provider who wishes to supply the implementation of a cryptographically strong pseudo-random number generator.</section>	https://developer.android.com/reference/java/security/SecureRandomSpi.html
Security	A										<section class="prog__container"><pre><code>public final class Security</code></pre></section>	https://developer.android.com/reference/java/security/Security.html
SecurityException	A										<section class="prog__container"><pre><code>public class SecurityException</code></pre>Thrown by the security manager to indicate a security violation.</section>	https://developer.android.com/reference/java/lang/SecurityException.html
SecurityLog	A										<section class="prog__container"><pre><code>public class SecurityLog</code></pre></section>	https://developer.android.com/reference/android/app/admin/SecurityLog.html
SecurityLog.SecurityEvent	A										<section class="prog__container"><pre><code>public static final class SecurityLog.SecurityEvent</code></pre>A class representing a security event log entry.</section>	https://developer.android.com/reference/android/app/admin/SecurityLog.SecurityEvent.html
SecurityManager	A										<section class="prog__container"><pre><code>public class SecurityManager</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/lang/SecurityManager.html
SecurityPermission	A										<section class="prog__container"><pre><code>public final class SecurityPermission</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/security/SecurityPermission.html
SeekBar	A										<section class="prog__container"><pre><code>public class SeekBar</code></pre>A SeekBar is an extension of ProgressBar that adds a draggable thumb. The user can touch the thumb and drag left or right to set the current progress level or use the arrow keys. Placing focusable widgets to the left or right of a SeekBar is discouraged.</section>	https://developer.android.com/reference/android/widget/SeekBar.html
SeekBar.OnSeekBarChangeListener	A										<section class="prog__container"><pre><code>public static interface SeekBar.OnSeekBarChangeListener</code></pre>A callback that notifies clients when the progress level has been changed. This includes changes that were initiated by the user through a touch gesture or arrow key/trackball as well as changes that were initiated programmatically.</section>	https://developer.android.com/reference/android/widget/SeekBar.OnSeekBarChangeListener.html
SeekBarPreference	A										<section class="prog__container"><pre><code>public class SeekBarPreference</code></pre>Preference based on android.preference.SeekBarPreference but uses support v7 preference as base. It contains a title and a seekbar and an optional seekbar value TextView. The actual preference layout is customizable by setting <code>android:layout</code> on the preference widget layout or <code>seekBarPreferenceStyle</code> attribute. The seekbar within the preference can be defined adjustable or not by setting <code>adjustable</code> attribute. If adjustable, the preference will be responsive to DPAD left/right keys. Otherwise, it skips those keys. The seekbar value view can be shown or disabled by setting <code>showSeekBarValue</code> attribute to true or false, respectively. Other SeekBar specific attributes (e.g. <code>title, summary, defaultValue, min, max</code>) can be set directly on the preference widget layout.</section>	https://developer.android.com/reference/android/support/v7/preference/SeekBarPreference.html
SeekableByteChannel	A										<section class="prog__container"><pre><code>public interface SeekableByteChannel</code></pre>A byte channel that maintains a current <i>position</i> and allows the position to be changed.</section>	https://developer.android.com/reference/java/nio/channels/SeekableByteChannel.html
SelectFormat	A										<section class="prog__container"><pre><code>public class SelectFormat</code></pre></section>	https://developer.android.com/reference/android/icu/text/SelectFormat.html
SelectableChannel	A										<section class="prog__container"><pre><code>public abstract class SelectableChannel</code></pre>A channel that can be multiplexed via a <code>Selector</code>.</section>	https://developer.android.com/reference/java/nio/channels/SelectableChannel.html
Selection	A										<section class="prog__container"><pre><code>public class Selection</code></pre>Utility class for manipulating cursors and selections in CharSequences. A cursor is a selection where the start and end are at the same offset.</section>	https://developer.android.com/reference/android/text/Selection.html
SelectionKey	A										<section class="prog__container"><pre><code>public abstract class SelectionKey</code></pre>A token representing the registration of a <code>SelectableChannel</code> with a <code>Selector</code>.</section>	https://developer.android.com/reference/java/nio/channels/SelectionKey.html
Selector	A										<section class="prog__container"><pre><code>public abstract class Selector</code></pre>A multiplexor of <code>SelectableChannel</code> objects.</section>	https://developer.android.com/reference/java/nio/channels/Selector.html
SelectorProvider	A										<section class="prog__container"><pre><code>public abstract class SelectorProvider</code></pre>Service-provider class for selectors and selectable channels.</section>	https://developer.android.com/reference/java/nio/channels/spi/SelectorProvider.html
Semaphore	A										<section class="prog__container"><pre><code>public class Semaphore</code></pre>A counting semaphore. Conceptually, a semaphore maintains a set of permits. Each <code>acquire()</code> blocks if necessary until a permit is available, and then takes it. Each <code>release()</code> adds a permit, potentially releasing a blocking acquirer. However, no actual permit objects are used; the <code>Semaphore</code> just keeps a count of the number available and acts accordingly.</section>	https://developer.android.com/reference/java/util/concurrent/Semaphore.html
Sensor	A										<section class="prog__container"><pre><code>public final class Sensor</code></pre>Class representing a sensor. Use <code>getSensorList(int)</code> to get the list of available Sensors.</section>	https://developer.android.com/reference/android/hardware/Sensor.html
SensorAdditionalInfo	A										<section class="prog__container"><pre><code>public class SensorAdditionalInfo</code></pre>This class represents a <code>Sensor</code> additional information frame, which is reported through listener callback <code>onSensorAdditionalInfo</code>.</section>	https://developer.android.com/reference/android/hardware/SensorAdditionalInfo.html
SensorEvent	A										<section class="prog__container"><pre><code>public class SensorEvent</code></pre>This class represents a <code>Sensor</code> event and holds information such as the sensor's type, the time-stamp, accuracy and of course the sensor's <code>data</code>.</section>	https://developer.android.com/reference/android/hardware/SensorEvent.html
SensorEventCallback	A										<section class="prog__container"><pre><code>public abstract class SensorEventCallback</code></pre>Used for receiving sensor additional information frames.</section>	https://developer.android.com/reference/android/hardware/SensorEventCallback.html
SensorEventListener	A										<section class="prog__container"><pre><code>public interface SensorEventListener</code></pre>Used for receiving notifications from the SensorManager when there is new sensor data.</section>	https://developer.android.com/reference/android/hardware/SensorEventListener.html
SensorEventListener2	A										<section class="prog__container"><pre><code>public interface SensorEventListener2</code></pre>Used for receiving a notification when a flush() has been successfully completed.</section>	https://developer.android.com/reference/android/hardware/SensorEventListener2.html
SensorListener	A										<section class="prog__container"><pre><code>public interface SensorListener</code></pre><p class="caution"><strong> This interface was deprecated in API level 3.</strong><br/> Use <code>SensorEventListener</code> instead.</section>	https://developer.android.com/reference/android/hardware/SensorListener.html
SensorManager	A										<section class="prog__container"><pre><code>public abstract class SensorManager</code></pre></section>	https://developer.android.com/reference/android/hardware/SensorManager.html
SensorManager.DynamicSensorCallback	A										<section class="prog__container"><pre><code>public static abstract class SensorManager.DynamicSensorCallback</code></pre>Used for receiving notifications from the SensorManager when dynamic sensors are connected or disconnected.</section>	https://developer.android.com/reference/android/hardware/SensorManager.DynamicSensorCallback.html
SentenceSuggestionsInfo	A										<section class="prog__container"><pre><code>public final class SentenceSuggestionsInfo</code></pre>This class contains a metadata of suggestions returned from a text service (e.g. <code>SpellCheckerService</code>). The text service uses this class to return the suggestions for a sentence. See <code>SuggestionsInfo</code> which is used for suggestions for a word. This class extends the functionality of <code>SuggestionsInfo</code> as far as this class enables you to put multiple <code>SuggestionsInfo</code>s on a sentence with the offsets and the lengths of all <code>SuggestionsInfo</code>s.</section>	https://developer.android.com/reference/android/view/textservice/SentenceSuggestionsInfo.html
SequenceInputStream	A										<section class="prog__container"><pre><code>public class SequenceInputStream</code></pre>A <code>SequenceInputStream</code> represents the logical concatenation of other input streams. It starts out with an ordered collection of input streams and reads from the first one until end of file is reached, whereupon it reads from the second one, and so on, until end of file is reached on the last of the contained input streams.</section>	https://developer.android.com/reference/java/io/SequenceInputStream.html
Serializable	A										<section class="prog__container"><pre><code>public interface Serializable</code></pre>Serializability of a class is enabled by the class implementing the java.io.Serializable interface. Classes that do not implement this interface will not have any of their state serialized or deserialized. All subtypes of a serializable class are themselves serializable. The serialization interface has no methods or fields and serves only to identify the semantics of being serializable.</section>	https://developer.android.com/reference/java/io/Serializable.html
SerializablePermission	A										<section class="prog__container"><pre><code>public final class SerializablePermission</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/io/SerializablePermission.html
ServerSocket	A										<section class="prog__container"><pre><code>public class ServerSocket</code></pre>This class implements server sockets. A server socket waits for requests to come in over the network. It performs some operation based on that request, and then possibly returns a result to the requester.</section>	https://developer.android.com/reference/java/net/ServerSocket.html
ServerSocketChannel	A										<section class="prog__container"><pre><code>public abstract class ServerSocketChannel</code></pre>A selectable channel for stream-oriented listening sockets.</section>	https://developer.android.com/reference/java/nio/channels/ServerSocketChannel.html
ServerSocketFactory	A										<section class="prog__container"><pre><code>public abstract class ServerSocketFactory</code></pre>This class creates server sockets. It may be subclassed by other factories, which create particular types of server sockets. This provides a general framework for the addition of public socket-level functionality. It is the server side analogue of a socket factory, and similarly provides a way to capture a variety of policies related to the sockets being constructed.</section>	https://developer.android.com/reference/javax/net/ServerSocketFactory.html
Service	A										<section class="prog__container"><pre><code>public abstract class Service</code></pre>A Service is an application component representing either an application's desire to perform a longer-running operation while not interacting with the user or to supply functionality for other applications to use. Each service class must have a corresponding <code>&lt;service&gt;</code> declaration in its package's <code>AndroidManifest.xml</code>. Services can be started with <code>Context.startService()</code> and <code>Context.bindService()</code>.</section>	https://developer.android.com/reference/android/app/Service.html
ServiceCompat	A										<section class="prog__container"><pre><code>public final class ServiceCompat</code></pre>Helper for accessing features in <code>Service</code> introduced after API level 9 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/app/ServiceCompat.html
ServiceConfigurationError	A										<section class="prog__container"><pre><code>public class ServiceConfigurationError</code></pre>Error thrown when something goes wrong while loading a service provider.</section>	https://developer.android.com/reference/java/util/ServiceConfigurationError.html
ServiceConnection	A										<section class="prog__container"><pre><code>public interface ServiceConnection</code></pre>Interface for monitoring the state of an application service. See <code>Service</code> and <code>Context.bindService()</code> for more information.</section>	https://developer.android.com/reference/android/content/ServiceConnection.html
ServiceHealthStats	A										<section class="prog__container"><pre><code>public final class ServiceHealthStats</code></pre>Keys for <code>HealthStats</code> returned from <code>HealthStats.getStats(int)</code> with the <code>PackageHealthStats.STATS_SERVICES</code> key.</section>	https://developer.android.com/reference/android/os/health/ServiceHealthStats.html
ServiceInfo	A										<section class="prog__container"><pre><code>public class ServiceInfo</code></pre>Information you can retrieve about a particular application service. This corresponds to information collected from the AndroidManifest.xml's &lt;service&gt; tags.</section>	https://developer.android.com/reference/android/content/pm/ServiceInfo.html
ServiceLoader	A										<section class="prog__container"><pre><code>public final class ServiceLoader</code></pre>A simple service-provider loading facility.</section>	https://developer.android.com/reference/java/util/ServiceLoader.html
ServiceState	A										<section class="prog__container"><pre><code>public class ServiceState</code></pre>Contains phone state and service related information. The following phone information is included in returned ServiceState: <ul> <li>Service state: IN_SERVICE, OUT_OF_SERVICE, EMERGENCY_ONLY, POWER_OFF <li>Roaming indicator <li>Operator name, short name and numeric id <li>Network selection mode </li></li></li></li></ul></section>	https://developer.android.com/reference/android/telephony/ServiceState.html
ServiceWorkerClient	A										<section class="prog__container"><pre><code>public class ServiceWorkerClient</code></pre>Base class for clients to capture Service Worker related callbacks, see <code>ServiceWorkerController</code> for usage example.</section>	https://developer.android.com/reference/android/webkit/ServiceWorkerClient.html
ServiceWorkerController	A										<section class="prog__container"><pre><code>public abstract class ServiceWorkerController</code></pre>Manages Service Workers used by WebView.</section>	https://developer.android.com/reference/android/webkit/ServiceWorkerController.html
ServiceWorkerWebSettings	A										<section class="prog__container"><pre><code>public abstract class ServiceWorkerWebSettings</code></pre>Manages settings state for all Service Workers. These settings are not tied to the lifetime of any WebView because service workers can outlive WebView instances. The settings are similar to <code>WebSettings</code> but only settings relevant to Service Workers are supported.</section>	https://developer.android.com/reference/android/webkit/ServiceWorkerWebSettings.html
Set	A										<section class="prog__container"><pre><code>public interface Set</code></pre>A collection that contains no duplicate elements. More formally, sets contain no pair of elements <code>e1</code> and <code>e2</code> such that <code>e1.equals(e2)</code>, and at most one null element. As implied by its name, this interface models the mathematical <i>set</i> abstraction.</section>	https://developer.android.com/reference/java/util/Set.html
SettingInjectorService	A										<section class="prog__container"><pre><code>public abstract class SettingInjectorService</code></pre>Dynamically specifies the enabled status of a preference injected into the list of app settings displayed by the system settings app</section>	https://developer.android.com/reference/android/location/SettingInjectorService.html
Settings	D								*[[provider.Settings]], <section class="prog__container"><pre><code>public final class Settings</code></pre>The Settings provider contains global system-level device preferences.</section>\n*[[system.Settings]], <section class="prog__container"><pre><code>public class Settings</code></pre>Provides various preferences affecting Leanback runtime behavior.</section>			
Settings.Global	A										<section class="prog__container"><pre><code>public static final class Settings.Global</code></pre>Global system settings, containing preferences that always apply identically to all defined users. Applications can read these but are not allowed to write; like the "Secure" settings, these are for preferences that the user must explicitly modify through the system UI or specialized APIs for those values.</section>	https://developer.android.com/reference/android/provider/Settings.Global.html
Settings.NameValueTable	A										<section class="prog__container"><pre><code>public static class Settings.NameValueTable</code></pre>Common base for tables of name/value settings.</section>	https://developer.android.com/reference/android/provider/Settings.NameValueTable.html
Settings.Secure	A										<section class="prog__container"><pre><code>public static final class Settings.Secure</code></pre>Secure system settings, containing system preferences that applications can read but are not allowed to write. These are for preferences that the user must explicitly modify through the system UI or specialized APIs for those values, not modified directly by applications.</section>	https://developer.android.com/reference/android/provider/Settings.Secure.html
Settings.SettingNotFoundException	A										<section class="prog__container"><pre><code>public static class Settings.SettingNotFoundException</code></pre></section>	https://developer.android.com/reference/android/provider/Settings.SettingNotFoundException.html
Settings.System	A										<section class="prog__container"><pre><code>public static final class Settings.System</code></pre>System settings, containing miscellaneous system preferences. This table holds simple name/value pairs. There are convenience functions for accessing individual settings entries.</section>	https://developer.android.com/reference/android/provider/Settings.System.html
Shader	A										<section class="prog__container"><pre><code>public class Shader</code></pre>Shader is the based class for objects that return horizontal spans of colors during drawing. A subclass of Shader is installed in a Paint calling paint.setShader(shader). After that any object (other than a bitmap) that is drawn with that paint will get its color(s) from the shader.</section>	https://developer.android.com/reference/android/graphics/Shader.html
Shader.TileMode	A										<section class="prog__container"><pre><code>public static final enum Shader.TileMode</code></pre></section>	https://developer.android.com/reference/android/graphics/Shader.TileMode.html
ShadowOverlayContainer	A										<section class="prog__container"><pre><code>public class ShadowOverlayContainer</code></pre>Provides an SDK version-independent wrapper to support shadows, color overlays, and rounded corners. It's not always preferred to create a ShadowOverlayContainer, use <code>ShadowOverlayHelper</code> instead.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ShadowOverlayContainer.html
ShadowOverlayHelper	A										<section class="prog__container"><pre><code>public final class ShadowOverlayHelper</code></pre>ShadowOverlayHelper is a helper class for shadow, overlay color and rounded corner. There are many choices to implement Shadow, overlay color. Initialize it with ShadowOverlayHelper.Builder and it decides the best strategy based on options user choose and current platform version. <li> For shadow: it may use 9-patch with opticalBounds or Z-value based shadow for API &gt;= 21. When 9-patch is used, it requires a ShadowOverlayContainer to include 9-patch views. <li> For overlay: it may use ShadowOverlayContainer which overrides draw() or it may use setForeground(new ColorDrawable()) for API&gt;=23. The foreground support might be disabled if rounded corner is applied due to performance reason. <li> For rounded-corner: it uses a ViewOutlineProvider for API&gt;=21. There are two different strategies: use Wrapper with a ShadowOverlayContainer; or apply rounded corner, overlay and rounded-corner to the view itself. Below is an example of how helper is used. <code> ShadowOverlayHelper mHelper = new ShadowOverlayHelper.Builder(). .needsOverlay(true).needsRoundedCorner(true).needsShadow(true) .build(); mHelper.prepareParentForShadow(parentView); // apply optical-bounds for 9-patch shadow. mHelper.setOverlayColor(view, Color.argb(0x80, 0x80, 0x80, 0x80)); mHelper.setShadowFocusLevel(view, 1.0f); ... View initializeView(View view) { if (mHelper.needsWrapper()) { ShadowOverlayContainer wrapper = mHelper.createShadowOverlayContainer(context); wrapper.wrap(view); return wrapper; } else { mHelper.onViewCreated(view); return view; } } ... </code> </li></li></li></section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ShadowOverlayHelper.html
ShadowOverlayHelper.Builder	A										<section class="prog__container"><pre><code>public static final class ShadowOverlayHelper.Builder</code></pre>Builder for creating ShadowOverlayHelper.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ShadowOverlayHelper.Builder.html
ShadowOverlayHelper.Options	A										<section class="prog__container"><pre><code>public static final class ShadowOverlayHelper.Options</code></pre>Option values for ShadowOverlayContainer.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ShadowOverlayHelper.Options.html
Shape	A										<section class="prog__container"><pre><code>public abstract class Shape</code></pre>Defines a generic graphical "shape." Any Shape can be drawn to a Canvas with its own draw() method, but more graphical control is available if you instead pass it to a <code>ShapeDrawable</code>.</section>	https://developer.android.com/reference/android/graphics/drawable/shapes/Shape.html
ShapeDrawable	A										<section class="prog__container"><pre><code>public class ShapeDrawable</code></pre>A Drawable object that draws primitive shapes. A ShapeDrawable takes a <code>Shape</code> object and manages its presence on the screen. If no Shape is given, then the ShapeDrawable will default to a <code>RectShape</code>.</section>	https://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.html
ShapeDrawable.ShaderFactory	A										<section class="prog__container"><pre><code>public static abstract class ShapeDrawable.ShaderFactory</code></pre>Base class defines a factory object that is called each time the drawable is resized (has a new width or height). Its resize() method returns a corresponding shader, or null. Implement this class if you'd like your ShapeDrawable to use a special <code>Shader</code>, such as a <code>LinearGradient</code>.</section>	https://developer.android.com/reference/android/graphics/drawable/ShapeDrawable.ShaderFactory.html
ShareActionProvider	D								*[[v7.widget.ShareActionProvider]], <section class="prog__container"><pre><code>public class ShareActionProvider</code></pre>Provides a share action, which is suitable for an activity's app bar. Creates views that enable data sharing. If the provider appears in the overflow menu, it creates a submenu with the appropriate sharing actions. <h3 id="add-share-action">Adding a share action</h3></section>\n*[[android.widget.ShareActionProvider]], <section class="prog__container"><pre><code>public class ShareActionProvider</code></pre>This is a provider for a share action. It is responsible for creating views that enable data sharing and also to show a sub menu with sharing activities if the hosting item is placed on the overflow menu.</section>			
ShareActionProvider.OnShareTargetSelectedListener	D								*[[v7.widget.ShareActionProvider.OnShareTargetSelectedListener]], <section class="prog__container"><pre><code>public static interface ShareActionProvider.OnShareTargetSelectedListener</code></pre>Listener for the event of selecting a share target.</section>\n*[[android.widget.ShareActionProvider.OnShareTargetSelectedListener]], <section class="prog__container"><pre><code>public static interface ShareActionProvider.OnShareTargetSelectedListener</code></pre>Listener for the event of selecting a share target.</section>			
ShareCompat	A										<section class="prog__container"><pre><code>public final class ShareCompat</code></pre>Extra helper functionality for sharing data between activities. ShareCompat provides functionality to extend the <code>ACTION_SEND</code>/ <code>ACTION_SEND_MULTIPLE</code> protocol and support retrieving more info about the activity that invoked a social sharing action. <code>ShareCompat.IntentBuilder</code> provides helper functions for constructing a sharing intent that always includes data about the calling activity and app. This lets the called activity provide attribution for the app that shared content. Constructing an intent this way can be done in a method-chaining style. To obtain an IntentBuilder with info about your calling activity, use the static method <code>from(Activity)</code>. <code>ShareCompat.IntentReader</code> provides helper functions for parsing the defined extras within an <code>ACTION_SEND</code> or <code>ACTION_SEND_MULTIPLE</code> intent used to launch an activity. You can also obtain a Drawable for the caller's application icon and the application's localized label (the app's human-readable name). Social apps that enable sharing content are encouraged to use this information to call out the app that the content was shared from.</section>	https://developer.android.com/reference/android/support/v4/app/ShareCompat.html
ShareCompat.IntentBuilder	A										<section class="prog__container"><pre><code>public static class ShareCompat.IntentBuilder</code></pre>IntentBuilder is a helper for constructing <code>ACTION_SEND</code> and <code>ACTION_SEND_MULTIPLE</code> sharing intents and starting activities to share content. The ComponentName and package name of the calling activity will be included.</section>	https://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentBuilder.html
ShareCompat.IntentReader	A										<section class="prog__container"><pre><code>public static class ShareCompat.IntentReader</code></pre>IntentReader is a helper for reading the data contained within a sharing (ACTION_SEND) Intent. It provides methods to parse standard elements included with a share in addition to extra metadata about the app that shared the content.</section>	https://developer.android.com/reference/android/support/v4/app/ShareCompat.IntentReader.html
SharedElementCallback	D								*[[android.app.SharedElementCallback]], <section class="prog__container"><pre><code>public abstract class SharedElementCallback</code></pre>Listener provided in <code>setEnterSharedElementCallback(SharedElementCallback)</code> and <code>setExitSharedElementCallback(SharedElementCallback)</code> as well as <code>setEnterSharedElementCallback(SharedElementCallback)</code> and <code>setExitSharedElementCallback(SharedElementCallback)</code> to monitor the Shared element transitions. The events can be used to customize Activity and Fragment Transition behavior.</section>\n*[[v4.app.SharedElementCallback]], <section class="prog__container"><pre><code>public abstract class SharedElementCallback</code></pre>Listener provided in <code>setEnterSharedElementCallback(SharedElementCallback)</code> and <code>setExitSharedElementCallback(SharedElementCallback)</code> to monitor the Activity transitions. The events can be used to customize Activity Transition behavior.</section>			
SharedElementCallback.OnSharedElementsReadyListener	D								*[[android.app.SharedElementCallback.OnSharedElementsReadyListener]], <section class="prog__container"><pre><code>public static interface SharedElementCallback.OnSharedElementsReadyListener</code></pre>Listener to be called after <code>onSharedElementsArrived(List, List, OnSharedElementsReadyListener)</code> when the shared elements are ready to be hidden in the source Activity and shown in the destination Activity.</section>\n*[[v4.app.SharedElementCallback.OnSharedElementsReadyListener]], <section class="prog__container"><pre><code>public static interface SharedElementCallback.OnSharedElementsReadyListener</code></pre>Listener to be called after <code>onSharedElementsArrived(List, List, OnSharedElementsReadyListener)</code> when the shared elements are ready to be hidden in the source Activity and shown in the destination Activity.</section>			
SharedPreferences	A										<section class="prog__container"><pre><code>public interface SharedPreferences</code></pre>Interface for accessing and modifying preference data returned by <code>getSharedPreferences(String, int)</code>. For any particular set of preferences, there is a single instance of this class that all clients share. Modifications to the preferences must go through an <code>SharedPreferences.Editor</code> object to ensure the preference values remain in a consistent state and control when they are committed to storage. Objects that are returned from the various <code>get</code> methods must be treated as immutable by the application.</section>	https://developer.android.com/reference/android/content/SharedPreferences.html
SharedPreferences.Editor	A										<section class="prog__container"><pre><code>public static interface SharedPreferences.Editor</code></pre>Interface used for modifying values in a <code>SharedPreferences</code> object. All changes you make in an editor are batched, and not copied back to the original <code>SharedPreferences</code> until you call <code>commit()</code> or <code>apply()</code></section>	https://developer.android.com/reference/android/content/SharedPreferences.Editor.html
SharedPreferences.OnSharedPreferenceChangeListener	A										<section class="prog__container"><pre><code>public static interface SharedPreferences.OnSharedPreferenceChangeListener</code></pre>Interface definition for a callback to be invoked when a shared preference is changed.</section>	https://developer.android.com/reference/android/content/SharedPreferences.OnSharedPreferenceChangeListener.html
SharedPreferencesBackupHelper	A										<section class="prog__container"><pre><code>public class SharedPreferencesBackupHelper</code></pre>A helper class that can be used in conjunction with <code>BackupAgentHelper</code> to manage the backup of <code>SharedPreferences</code>. Whenever a backup is performed, it will back up all named shared preferences that have changed since the last backup operation.</section>	https://developer.android.com/reference/android/app/backup/SharedPreferencesBackupHelper.html
SharedPreferencesCompat	A										<section class="prog__container"><pre><code>public final class SharedPreferencesCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/SharedPreferencesCompat.html
SharedPreferencesCompat.EditorCompat	A										<section class="prog__container"><pre><code>public static final class SharedPreferencesCompat.EditorCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/content/SharedPreferencesCompat.EditorCompat.html
Short	A										<section class="prog__container"><pre><code>public final class Short</code></pre>The <code>Short</code> class wraps a value of primitive type <code>short</code> in an object. An object of type <code>Short</code> contains a single field whose type is <code>short</code>.</section>	https://developer.android.com/reference/java/lang/Short.html
Short2	D								*[[android.renderscript.Short2]], <section class="prog__container"><pre><code>public class Short2</code></pre>Class for exposing the native RenderScript Short2 type back to the Android system. Vector version of the basic short type. Provides two short fields packed.</section>\n*[[v8.renderscript.Short2]], <section class="prog__container"><pre><code>public class Short2</code></pre>Class for exposing the native RenderScript Short2 type back to the Android system.</section>			
Short3	D								*[[android.renderscript.Short3]], <section class="prog__container"><pre><code>public class Short3</code></pre>Vector version of the basic short type. Provides three short fields packed.</section>\n*[[v8.renderscript.Short3]], <section class="prog__container"><pre><code>public class Short3</code></pre>Class for exposing the native RenderScript short3 type back to the Android system.</section>			
Short4	D								*[[android.renderscript.Short4]], <section class="prog__container"><pre><code>public class Short4</code></pre>Vector version of the basic short type. Provides four short fields packed.</section>\n*[[v8.renderscript.Short4]], <section class="prog__container"><pre><code>public class Short4</code></pre>Class for exposing the native RenderScript short4 type back to the Android system.</section>			
ShortBuffer	A										<section class="prog__container"><pre><code>public abstract class ShortBuffer</code></pre>A short buffer.</section>	https://developer.android.com/reference/java/nio/ShortBuffer.html
ShortBufferException	A										<section class="prog__container"><pre><code>public class ShortBufferException</code></pre>This exception is thrown when an output buffer provided by the user is too short to hold the operation result.</section>	https://developer.android.com/reference/javax/crypto/ShortBufferException.html
ShortcutInfo	A										<section class="prog__container"><pre><code>public final class ShortcutInfo</code></pre>Represents a shortcut that can be published via <code>ShortcutManager</code>.</section>	https://developer.android.com/reference/android/content/pm/ShortcutInfo.html
ShortcutInfo.Builder	A										<section class="prog__container"><pre><code>public static class ShortcutInfo.Builder</code></pre>Builder class for <code>ShortcutInfo</code> objects.</section>	https://developer.android.com/reference/android/content/pm/ShortcutInfo.Builder.html
ShortcutManager	A										<section class="prog__container"><pre><code>public class ShortcutManager</code></pre>The ShortcutManager manages an app's <em>shortcuts</em>. Shortcuts provide users with quick access to activities other than an app's main activity in the currently-active launcher. For example, an email app may publish the "compose new email" action, which will directly open the compose activity. The <code>ShortcutInfo</code> class contains information about each of the shortcuts themselves. <h3>Static Shortcuts and Dynamic Shortcuts</h3></section>	https://developer.android.com/reference/android/content/pm/ShortcutManager.html
SidePropagation	A										<section class="prog__container"><pre><code>public class SidePropagation</code></pre>A <code>TransitionPropagation</code> that propagates based on the distance to the side and, orthogonally, the distance to epicenter. If the transitioning View is visible in the start of the transition, then it will transition sooner when closer to the side and later when farther. If the view is not visible in the start of the transition, then it will transition later when closer to the side and sooner when farther from the edge. This is the default TransitionPropagation used with <code>Slide</code>.</section>	https://developer.android.com/reference/android/transition/SidePropagation.html
SignalStrength	A										<section class="prog__container"><pre><code>public class SignalStrength</code></pre>Contains phone signal strength related information.</section>	https://developer.android.com/reference/android/telephony/SignalStrength.html
Signature	D								*[[pm.Signature]], <section class="prog__container"><pre><code>public class Signature</code></pre>Opaque, immutable representation of a signing certificate associated with an application package.</section>\n*[[security.Signature]], <section class="prog__container"><pre><code>public abstract class Signature</code></pre>The Signature class is used to provide applications the functionality of a digital signature algorithm. Digital signatures are used for authentication and integrity assurance of digital data.</section>			
SignatureException	A										<section class="prog__container"><pre><code>public class SignatureException</code></pre>This is the generic Signature exception.</section>	https://developer.android.com/reference/java/security/SignatureException.html
SignatureSpi	A										<section class="prog__container"><pre><code>public abstract class SignatureSpi</code></pre>This class defines the <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>Signature</code> class, which is used to provide the functionality of a digital signature algorithm. Digital signatures are used for authentication and integrity assurance of digital data. .</section>	https://developer.android.com/reference/java/security/SignatureSpi.html
SignedObject	A										<section class="prog__container"><pre><code>public final class SignedObject</code></pre></section>	https://developer.android.com/reference/java/security/SignedObject.html
Signer	A										<section class="prog__container"><pre><code>public abstract class Signer</code></pre><p class="caution"><strong> This class was deprecated in API level 1.</strong><br/> This class is no longer used. Its functionality has been replaced by <code>java.security.KeyStore</code>, the <code>java.security.cert</code> package, and <code>java.security.Principal</code>.</section>	https://developer.android.com/reference/java/security/Signer.html
SimpleAdapter	A										<section class="prog__container"><pre><code>public class SimpleAdapter</code></pre>An easy adapter to map static data to views defined in an XML file. You can specify the data backing the list as an ArrayList of Maps. Each entry in the ArrayList corresponds to one row in the list. The Maps contain the data for each row. You also specify an XML file that defines the views used to display the row, and a mapping from keys in the Map to specific views. Binding data to views occurs in two phases. First, if a <code>SimpleAdapter.ViewBinder</code> is available, <code>setViewValue(android.view.View, Object, String)</code> is invoked. If the returned value is true, binding has occurred. If the returned value is false, the following views are then tried in order: <ul> <li> A view that implements Checkable (e.g. CheckBox). The expected bind value is a boolean. <li> TextView. The expected bind value is a string and <code>setViewText(TextView, String)</code> is invoked. <li> ImageView. The expected bind value is a resource id or a string and <code>setViewImage(ImageView, int)</code> or <code>setViewImage(ImageView, String)</code> is invoked. </li></li></li></ul> If no appropriate binding can be found, an <code>IllegalStateException</code> is thrown.</section>	https://developer.android.com/reference/android/widget/SimpleAdapter.html
SimpleAdapter.ViewBinder	A										<section class="prog__container"><pre><code>public static interface SimpleAdapter.ViewBinder</code></pre>This class can be used by external clients of SimpleAdapter to bind values to views. You should use this class to bind values to views that are not directly supported by SimpleAdapter or to change the way binding occurs for views supported by SimpleAdapter.</section>	https://developer.android.com/reference/android/widget/SimpleAdapter.ViewBinder.html
SimpleArrayMap	A										<section class="prog__container"><pre><code>public class SimpleArrayMap</code></pre>Base implementation of <code>ArrayMap</code> that doesn't include any standard Java container API interoperability. These features are generally heavier-weight ways to interact with the container, so discouraged, but they can be useful to make it easier to use as a drop-in replacement for HashMap. If you don't need them, this class can be preferrable since it doesn't bring in any of the implementation of those APIs, allowing that code to be stripped by ProGuard.</section>	https://developer.android.com/reference/android/support/v4/util/SimpleArrayMap.html
SimpleCursorAdapter	D								*[[v4.widget.SimpleCursorAdapter]], <section class="prog__container"><pre><code>public class SimpleCursorAdapter</code></pre>Static library support version of the framework's <code>SimpleCursorAdapter</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>\n*[[android.widget.SimpleCursorAdapter]], <section class="prog__container"><pre><code>public class SimpleCursorAdapter</code></pre>An easy adapter to map columns from a cursor to TextViews or ImageViews defined in an XML file. You can specify which columns you want, which views you want to display the columns, and the XML file that defines the appearance of these views. Binding occurs in two phases. First, if a <code>SimpleCursorAdapter.ViewBinder</code> is available, <code>setViewValue(android.view.View, android.database.Cursor, int)</code> is invoked. If the returned value is true, binding has occured. If the returned value is false and the view to bind is a TextView, <code>setViewText(TextView, String)</code> is invoked. If the returned value is false and the view to bind is an ImageView, <code>setViewImage(ImageView, String)</code> is invoked. If no appropriate binding can be found, an <code>IllegalStateException</code> is thrown. If this adapter is used with filtering, for instance in an <code>AutoCompleteTextView</code>, you can use the <code>SimpleCursorAdapter.CursorToStringConverter</code> and the <code>FilterQueryProvider</code> interfaces to get control over the filtering process. You can refer to <code>convertToString(android.database.Cursor)</code> and <code>runQueryOnBackgroundThread(CharSequence)</code> for more information.</section>			
SimpleCursorAdapter.CursorToStringConverter	D								*[[v4.widget.SimpleCursorAdapter.CursorToStringConverter]], <section class="prog__container"><pre><code>public static interface SimpleCursorAdapter.CursorToStringConverter</code></pre>This class can be used by external clients of SimpleCursorAdapter to define how the Cursor should be converted to a String.</section>\n*[[android.widget.SimpleCursorAdapter.CursorToStringConverter]], <section class="prog__container"><pre><code>public static interface SimpleCursorAdapter.CursorToStringConverter</code></pre>This class can be used by external clients of SimpleCursorAdapter to define how the Cursor should be converted to a String.</section>			
SimpleCursorAdapter.ViewBinder	D								*[[v4.widget.SimpleCursorAdapter.ViewBinder]], <section class="prog__container"><pre><code>public static interface SimpleCursorAdapter.ViewBinder</code></pre>This class can be used by external clients of SimpleCursorAdapter to bind values fom the Cursor to views. You should use this class to bind values from the Cursor to views that are not directly supported by SimpleCursorAdapter or to change the way binding occurs for views supported by SimpleCursorAdapter.</section>\n*[[android.widget.SimpleCursorAdapter.ViewBinder]], <section class="prog__container"><pre><code>public static interface SimpleCursorAdapter.ViewBinder</code></pre>This class can be used by external clients of SimpleCursorAdapter to bind values fom the Cursor to views. You should use this class to bind values from the Cursor to views that are not directly supported by SimpleCursorAdapter or to change the way binding occurs for views supported by SimpleCursorAdapter.</section>			
SimpleCursorTreeAdapter	A										<section class="prog__container"><pre><code>public abstract class SimpleCursorTreeAdapter</code></pre>An easy adapter to map columns from a cursor to TextViews or ImageViews defined in an XML file. You can specify which columns you want, which views you want to display the columns, and the XML file that defines the appearance of these views. Separate XML files for child and groups are possible. Binding occurs in two phases. First, if a <code>SimpleCursorTreeAdapter.ViewBinder</code> is available, <code>setViewValue(android.view.View, android.database.Cursor, int)</code> is invoked. If the returned value is true, binding has occurred. If the returned value is false and the view to bind is a TextView, <code>setViewText(TextView, String)</code> is invoked. If the returned value is false and the view to bind is an ImageView, <code>setViewImage(ImageView, String)</code> is invoked. If no appropriate binding can be found, an <code>IllegalStateException</code> is thrown.</section>	https://developer.android.com/reference/android/widget/SimpleCursorTreeAdapter.html
SimpleCursorTreeAdapter.ViewBinder	A										<section class="prog__container"><pre><code>public static interface SimpleCursorTreeAdapter.ViewBinder</code></pre>This class can be used by external clients of SimpleCursorTreeAdapter to bind values from the Cursor to views. You should use this class to bind values from the Cursor to views that are not directly supported by SimpleCursorTreeAdapter or to change the way binding occurs for views supported by SimpleCursorTreeAdapter.</section>	https://developer.android.com/reference/android/widget/SimpleCursorTreeAdapter.ViewBinder.html
SimpleDateFormat	D								*[[icu.text.SimpleDateFormat]], <section class="prog__container"><pre><code>public class SimpleDateFormat</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>SimpleDateFormat</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.</section>\n*[[java.text.SimpleDateFormat]], <section class="prog__container"><pre><code>public class SimpleDateFormat</code></pre><code>SimpleDateFormat</code> is a concrete class for formatting and parsing dates in a locale-sensitive manner. It allows for formatting (date -&gt; text), parsing (text -&gt; date), and normalization.</section>			
SimpleExpandableListAdapter	A										<section class="prog__container"><pre><code>public class SimpleExpandableListAdapter</code></pre>An easy adapter to map static data to group and child views defined in an XML file. You can separately specify the data backing the group as a List of Maps. Each entry in the ArrayList corresponds to one group in the expandable list. The Maps contain the data for each row. You also specify an XML file that defines the views used to display a group, and a mapping from keys in the Map to specific views. This process is similar for a child, except it is one-level deeper so the data backing is specified as a List<list<map>&gt;, where the first List corresponds to the group of the child, the second List corresponds to the position of the child within the group, and finally the Map holds the data for that particular child. </list<map></section>	https://developer.android.com/reference/android/widget/SimpleExpandableListAdapter.html
SimpleFormatter	A										<section class="prog__container"><pre><code>public class SimpleFormatter</code></pre>Print a brief summary of the <code>LogRecord</code> in a human readable format. The summary will typically be 1 or 2 lines.</section>	https://developer.android.com/reference/java/util/logging/SimpleFormatter.html
SimpleItemAnimator	A										<section class="prog__container"><pre><code>public abstract class SimpleItemAnimator</code></pre>A wrapper class for ItemAnimator that records View bounds and decides whether it should run move, change, add or remove animations. This class also replicates the original ItemAnimator API.</section>	https://developer.android.com/reference/android/support/v7/widget/SimpleItemAnimator.html
SimpleTimeZone	A										<section class="prog__container"><pre><code>public class SimpleTimeZone</code></pre><code>SimpleTimeZone</code> is a concrete subclass of <code>TimeZone</code> that represents a time zone for use with a Gregorian calendar. The class holds an offset from GMT, called <em>raw offset</em>, and start and end rules for a daylight saving time schedule. Since it only holds single values for each, it cannot handle historical changes in the offset from GMT and the daylight saving schedule, except that the <code>setStartYear</code> method can specify the year when the daylight saving time schedule starts in effect.</section>	https://developer.android.com/reference/java/util/SimpleTimeZone.html
SingleLineTransformationMethod	A										<section class="prog__container"><pre><code>public class SingleLineTransformationMethod</code></pre>This transformation method causes any newline characters (\n) to be displayed as spaces instead of causing line breaks, and causes carriage return characters (\r) to have no appearance.</section>	https://developer.android.com/reference/android/text/method/SingleLineTransformationMethod.html
SinglePresenterSelector	A										<section class="prog__container"><pre><code>public final class SinglePresenterSelector</code></pre>A <code>PresenterSelector</code> that always returns the same <code>Presenter</code>. Useful for rows of items of the same type that are all rendered the same way.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SinglePresenterSelector.html
SipAudioCall	A										<section class="prog__container"><pre><code>public class SipAudioCall</code></pre>Handles an Internet audio call over SIP. You can instantiate this class with <code>SipManager</code>, using <code>makeAudioCall()</code> and <code>takeAudioCall()</code>. <p class="note"><strong>Note:</strong> Using this class require the <code>INTERNET</code> and <code>USE_SIP</code> permissions. In addition, <code>startAudio()</code> requires the <code>RECORD_AUDIO</code>, <code>ACCESS_WIFI_STATE</code>, and <code>WAKE_LOCK</code> permissions; and <code>setSpeakerMode()</code> requires the <code>MODIFY_AUDIO_SETTINGS</code> permission.</section>	https://developer.android.com/reference/android/net/sip/SipAudioCall.html
SipAudioCall.Listener	A										<section class="prog__container"><pre><code>public static class SipAudioCall.Listener</code></pre>Listener for events relating to a SIP call, such as when a call is being recieved ("on ringing") or a call is outgoing ("on calling").</section>	https://developer.android.com/reference/android/net/sip/SipAudioCall.Listener.html
SipErrorCode	A										<section class="prog__container"><pre><code>public class SipErrorCode</code></pre>Defines error codes returned during SIP actions. For example, during <code>onRegistrationFailed()</code>, <code>onError()</code>, <code>onCallChangeFailed()</code> and <code>onRegistrationFailed()</code>.</section>	https://developer.android.com/reference/android/net/sip/SipErrorCode.html
SipException	A										<section class="prog__container"><pre><code>public class SipException</code></pre>Indicates a general SIP-related exception.</section>	https://developer.android.com/reference/android/net/sip/SipException.html
SipManager	A										<section class="prog__container"><pre><code>public class SipManager</code></pre>Provides APIs for SIP tasks, such as initiating SIP connections, and provides access to related SIP services. This class is the starting point for any SIP actions. You can acquire an instance of it with <code>newInstance()</code>.</section>	https://developer.android.com/reference/android/net/sip/SipManager.html
SipProfile	A										<section class="prog__container"><pre><code>public class SipProfile</code></pre>Defines a SIP profile, including a SIP account, domain and server information.</section>	https://developer.android.com/reference/android/net/sip/SipProfile.html
SipProfile.Builder	A										<section class="prog__container"><pre><code>public static class SipProfile.Builder</code></pre>Helper class for creating a <code>SipProfile</code>.</section>	https://developer.android.com/reference/android/net/sip/SipProfile.Builder.html
SipRegistrationListener	A										<section class="prog__container"><pre><code>public interface SipRegistrationListener</code></pre>Listener for SIP registration events.</section>	https://developer.android.com/reference/android/net/sip/SipRegistrationListener.html
SipSession	A										<section class="prog__container"><pre><code>public final class SipSession</code></pre>Represents a SIP session that is associated with a SIP dialog or a standalone transaction not within a dialog.</section>	https://developer.android.com/reference/android/net/sip/SipSession.html
SipSession.Listener	A										<section class="prog__container"><pre><code>public static class SipSession.Listener</code></pre>Listener for events relating to a SIP session, such as when a session is being registered ("on registering") or a call is outgoing ("on calling").</section>	https://developer.android.com/reference/android/net/sip/SipSession.Listener.html
SipSession.State	A										<section class="prog__container"><pre><code>public static class SipSession.State</code></pre>Defines SIP session states, such as "registering", "outgoing call", and "in call".</section>	https://developer.android.com/reference/android/net/sip/SipSession.State.html
Size	D								*[[annotation.Size]], <section class="prog__container"><pre><code>public abstract @interface Size</code></pre>Denotes that the annotated element should have a given size or length. Note that "-1" means "unset". Typically used with a parameter or return value of type array or collection.</section>\n*[[util.Size]], <section class="prog__container"><pre><code>public final class Size</code></pre>Immutable class for describing width and height dimensions in pixels.</section>			
SizeF	A										<section class="prog__container"><pre><code>public final class SizeF</code></pre>Immutable class for describing width and height dimensions in some arbitrary unit.</section>	https://developer.android.com/reference/android/util/SizeF.html
Slide	A										<section class="prog__container"><pre><code>public class Slide</code></pre>This transition tracks changes to the visibility of target views in the start and end scenes and moves views in or out from one of the edges of the scene. Visibility is determined by both the <code>setVisibility(int)</code> state of the view as well as whether it is parented in the current view hierarchy. Disappearing Views are limited as described in <code>onDisappear(android.view.ViewGroup, TransitionValues, int, TransitionValues, int)</code>.</section>	https://developer.android.com/reference/android/transition/Slide.html
SlidingDrawer	A										<section class="prog__container"><pre><code>public class SlidingDrawer</code></pre><p class="caution"><strong> This class was deprecated in API level 17.</strong><br/> This class is not supported anymore. It is recommended you base your own implementation on the source code for the Android Open Source Project if you must use it in your application.</section>	https://developer.android.com/reference/android/widget/SlidingDrawer.html
SlidingDrawer.OnDrawerCloseListener	A										<section class="prog__container"><pre><code>public static interface SlidingDrawer.OnDrawerCloseListener</code></pre>Callback invoked when the drawer is closed.</section>	https://developer.android.com/reference/android/widget/SlidingDrawer.OnDrawerCloseListener.html
SlidingDrawer.OnDrawerOpenListener	A										<section class="prog__container"><pre><code>public static interface SlidingDrawer.OnDrawerOpenListener</code></pre>Callback invoked when the drawer is opened.</section>	https://developer.android.com/reference/android/widget/SlidingDrawer.OnDrawerOpenListener.html
SlidingDrawer.OnDrawerScrollListener	A										<section class="prog__container"><pre><code>public static interface SlidingDrawer.OnDrawerScrollListener</code></pre>Callback invoked when the drawer is scrolled.</section>	https://developer.android.com/reference/android/widget/SlidingDrawer.OnDrawerScrollListener.html
SlidingPaneLayout	A										<section class="prog__container"><pre><code>public class SlidingPaneLayout</code></pre>SlidingPaneLayout provides a horizontal, multi-pane layout for use at the top level of a UI. A left (or first) pane is treated as a content list or browser, subordinate to a primary detail view for displaying content.</section>	https://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html
SlidingPaneLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class SlidingPaneLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.LayoutParams.html
SlidingPaneLayout.PanelSlideListener	A										<section class="prog__container"><pre><code>public static interface SlidingPaneLayout.PanelSlideListener</code></pre>Listener for monitoring events about sliding panes.</section>	https://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.PanelSlideListener.html
SlidingPaneLayout.SimplePanelSlideListener	A										<section class="prog__container"><pre><code>public static class SlidingPaneLayout.SimplePanelSlideListener</code></pre>No-op stubs for <code>SlidingPaneLayout.PanelSlideListener</code>. If you only want to implement a subset of the listener methods you can extend this instead of implement the full interface.</section>	https://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.SimplePanelSlideListener.html
SmallTest	A										<section class="prog__container"><pre><code>public abstract @interface SmallTest</code></pre><p class="caution"><strong> This @interface was deprecated in API level 24.</strong><br/> Use SmallTest instead. New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/suitebuilder/annotation/SmallTest.html
Smoke	A										<section class="prog__container"><pre><code>public abstract @interface Smoke</code></pre><p class="caution"><strong> This @interface was deprecated in API level 24.</strong><br/> New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/suitebuilder/annotation/Smoke.html
SmsManager	D								*[[telephony.SmsManager]], <section class="prog__container"><pre><code>public final class SmsManager</code></pre>Manages SMS operations such as sending data, text, and pdu SMS messages. Get this object by calling the static method <code>getDefault()</code>.</section>\n*[[gsm.SmsManager]], <section class="prog__container"><pre><code>public final class SmsManager</code></pre><p class="caution"><strong> This class was deprecated in API level 4.</strong><br/> Replaced by android.telephony.SmsManager that supports both GSM and CDMA.</section>			
SmsMessage	D								*[[telephony.SmsMessage]], <section class="prog__container"><pre><code>public class SmsMessage</code></pre>A Short Message Service message.</section>\n*[[gsm.SmsMessage]], <section class="prog__container"><pre><code>public class SmsMessage</code></pre><p class="caution"><strong> This class was deprecated in API level 4.</strong><br/> Replaced by android.telephony.SmsMessage that supports both GSM and CDMA.</section>			
SmsMessage.MessageClass	D								*[[telephony.SmsMessage.MessageClass]], <section class="prog__container"><pre><code>public static final enum SmsMessage.MessageClass</code></pre>SMS Class enumeration. See TS 23.038.</section>\n*[[gsm.SmsMessage.MessageClass]], <section class="prog__container"><pre><code>public static final enum SmsMessage.MessageClass</code></pre><p class="caution"><strong> This enum was deprecated in API level 4.</strong><br/> Use android.telephony.SmsMessage.</section>			
SmsMessage.SubmitPdu	D								*[[telephony.SmsMessage.SubmitPdu]], <section class="prog__container"><pre><code>public static class SmsMessage.SubmitPdu</code></pre></section>\n*[[gsm.SmsMessage.SubmitPdu]], <section class="prog__container"><pre><code>public static class SmsMessage.SubmitPdu</code></pre><p class="caution"><strong> This class was deprecated in API level 4.</strong><br/> Use android.telephony.SmsMessage.</section>			
Snackbar	A										<section class="prog__container"><pre><code>public final class Snackbar</code></pre>Snackbars provide lightweight feedback about an operation. They show a brief message at the bottom of the screen on mobile and lower left on larger devices. Snackbars appear above all other elements on screen and only one can be displayed at a time.</section>	https://developer.android.com/reference/android/support/design/widget/Snackbar.html
Snackbar.Callback	A										<section class="prog__container"><pre><code>public static class Snackbar.Callback</code></pre>Callback class for <code>Snackbar</code> instances. Note: this class is here to provide backwards-compatible way for apps written before the existence of the base <code>BaseTransientBottomBar</code> class.</section>	https://developer.android.com/reference/android/support/design/widget/Snackbar.Callback.html
SnapHelper	A										<section class="prog__container"><pre><code>public abstract class SnapHelper</code></pre>Class intended to support snapping for a <code>RecyclerView</code>.</section>	https://developer.android.com/reference/android/support/v7/widget/SnapHelper.html
Socket	A										<section class="prog__container"><pre><code>public class Socket</code></pre>This class implements client sockets (also called just "sockets"). A socket is an endpoint for communication between two machines.</section>	https://developer.android.com/reference/java/net/Socket.html
SocketAddress	A										<section class="prog__container"><pre><code>public abstract class SocketAddress</code></pre>This class represents a Socket Address with no protocol attachment. As an abstract class, it is meant to be subclassed with a specific, protocol dependent, implementation.</section>	https://developer.android.com/reference/java/net/SocketAddress.html
SocketChannel	A										<section class="prog__container"><pre><code>public abstract class SocketChannel</code></pre>A selectable channel for stream-oriented connecting sockets.</section>	https://developer.android.com/reference/java/nio/channels/SocketChannel.html
SocketException	A										<section class="prog__container"><pre><code>public class SocketException</code></pre>Thrown to indicate that there is an error creating or accessing a Socket.</section>	https://developer.android.com/reference/java/net/SocketException.html
SocketFactory	D								*[[net.SocketFactory]], <section class="prog__container"><pre><code>public abstract class SocketFactory</code></pre>This class creates sockets. It may be subclassed by other factories, which create particular subclasses of sockets and thus provide a general framework for the addition of public socket-level functionality.</section>\n*[[scheme.SocketFactory]], <section class="prog__container"><pre><code>public interface SocketFactory</code></pre><p class="caution"><strong> This interface was deprecated in API level 22.</strong><br/> Please use <code>openConnection()</code> instead. Please visit this webpage for further details.</section>			
SocketHandler	A										<section class="prog__container"><pre><code>public class SocketHandler</code></pre>Simple network logging <tt>Handler</tt>.</section>	https://developer.android.com/reference/java/util/logging/SocketHandler.html
SocketImpl	A										<section class="prog__container"><pre><code>public abstract class SocketImpl</code></pre>The abstract class <code>SocketImpl</code> is a common superclass of all classes that actually implement sockets. It is used to create both client and server sockets.</section>	https://developer.android.com/reference/java/net/SocketImpl.html
SocketImplFactory	A										<section class="prog__container"><pre><code>public interface SocketImplFactory</code></pre>This interface defines a factory for socket implementations. It is used by the classes <code>Socket</code> and <code>ServerSocket</code> to create actual socket implementations.</section>	https://developer.android.com/reference/java/net/SocketImplFactory.html
SocketOption	A										<section class="prog__container"><pre><code>public interface SocketOption</code></pre>A socket option associated with a socket.</section>	https://developer.android.com/reference/java/net/SocketOption.html
SocketOptions	A										<section class="prog__container"><pre><code>public interface SocketOptions</code></pre>Interface of methods to get/set socket options. This interface is implemented by: <b>SocketImpl</b> and <b>DatagramSocketImpl</b>. Subclasses of these should override the methods of this interface in order to support their own options.</section>	https://developer.android.com/reference/java/net/SocketOptions.html
SocketPermission	A										<section class="prog__container"><pre><code>public final class SocketPermission</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/net/SocketPermission.html
SocketTimeoutException	A										<section class="prog__container"><pre><code>public class SocketTimeoutException</code></pre>Signals that a timeout has occurred on a socket read or accept.</section>	https://developer.android.com/reference/java/net/SocketTimeoutException.html
SoftReference	A										<section class="prog__container"><pre><code>public class SoftReference</code></pre>Soft reference objects, which are cleared at the discretion of the garbage collector in response to memory demand.</section>	https://developer.android.com/reference/java/lang/ref/SoftReference.html
SomeArgs	A										Helper class for passing more arguments though a message and avoiding allocation of a custom class for wrapping the arguments.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
SortedList	A										<section class="prog__container"><pre><code>public class SortedList</code></pre>A Sorted list implementation that can keep items in order and also notify for changes in the list such that it can be bound to a <code>RecyclerView.Adapter</code>.</section>	https://developer.android.com/reference/android/support/v7/util/SortedList.html
SortedList.BatchedCallback	A										<section class="prog__container"><pre><code>public static class SortedList.BatchedCallback</code></pre>A callback implementation that can batch notify events dispatched by the SortedList.</section>	https://developer.android.com/reference/android/support/v7/util/SortedList.BatchedCallback.html
SortedList.Callback	A										<section class="prog__container"><pre><code>public static abstract class SortedList.Callback</code></pre>The class that controls the behavior of the <code>SortedList</code>.</section>	https://developer.android.com/reference/android/support/v7/util/SortedList.Callback.html
SortedListAdapterCallback	A										<section class="prog__container"><pre><code>public abstract class SortedListAdapterCallback</code></pre>A <code>SortedList.Callback</code> implementation that can bind a <code>SortedList</code> to a <code>RecyclerView.Adapter</code>.</section>	https://developer.android.com/reference/android/support/v7/widget/util/SortedListAdapterCallback.html
SortedMap	A										<section class="prog__container"><pre><code>public interface SortedMap</code></pre>A <code>Map</code> that further provides a <em>total ordering</em> on its keys. The map is ordered according to the natural ordering</section>	https://developer.android.com/reference/java/util/SortedMap.html
SortedSet	A										<section class="prog__container"><pre><code>public interface SortedSet</code></pre>A <code>Set</code> that further provides a <i>total ordering</i> on its elements. The elements are ordered using their natural ordering</section>	https://developer.android.com/reference/java/util/SortedSet.html
SoundEffectConstants	A										<section class="prog__container"><pre><code>public class SoundEffectConstants</code></pre>Constants to be used to play sound effects via <code>playSoundEffect(int)</code></section>	https://developer.android.com/reference/android/view/SoundEffectConstants.html
SoundPool	A										<section class="prog__container"><pre><code>public class SoundPool</code></pre>The SoundPool class manages and plays audio resources for applications.</section>	https://developer.android.com/reference/android/media/SoundPool.html
SoundPool.Builder	A										<section class="prog__container"><pre><code>public static class SoundPool.Builder</code></pre>Builder class for <code>SoundPool</code> objects.</section>	https://developer.android.com/reference/android/media/SoundPool.Builder.html
SoundPool.OnLoadCompleteListener	A										<section class="prog__container"><pre><code>public static interface SoundPool.OnLoadCompleteListener</code></pre></section>	https://developer.android.com/reference/android/media/SoundPool.OnLoadCompleteListener.html
Source	A										<section class="prog__container"><pre><code>public interface Source</code></pre>An object that implements this interface contains the information needed to act as source input (XML source or transformation instructions).</section>	https://developer.android.com/reference/javax/xml/transform/Source.html
SourceLocator	A										<section class="prog__container"><pre><code>public interface SourceLocator</code></pre>This interface is primarily for the purposes of reporting where an error occurred in the XML source or transformation instructions.</section>	https://developer.android.com/reference/javax/xml/transform/SourceLocator.html
Space	D								*[[v4.widget.Space]], <section class="prog__container"><pre><code>public class Space</code></pre>Space is a lightweight <code>View</code> subclass that may be used to create gaps between components in general purpose layouts.</section>\n*[[android.widget.Space]], <section class="prog__container"><pre><code>public final class Space</code></pre>Space is a lightweight View subclass that may be used to create gaps between components in general purpose layouts.</section>			
SpanWatcher	A										<section class="prog__container"><pre><code>public interface SpanWatcher</code></pre>When an object of this type is attached to a Spannable, its methods will be called to notify it that other markup objects have been added, changed, or removed.</section>	https://developer.android.com/reference/android/text/SpanWatcher.html
Spannable	A										<section class="prog__container"><pre><code>public interface Spannable</code></pre>This is the interface for text to which markup objects can be attached and detached. Not all Spannable classes have mutable text; see <code>Editable</code> for that.</section>	https://developer.android.com/reference/android/text/Spannable.html
Spannable.Factory	A										<section class="prog__container"><pre><code>public static class Spannable.Factory</code></pre>Factory used by TextView to create new Spannables. You can subclass it to provide something other than SpannableString.</section>	https://developer.android.com/reference/android/text/Spannable.Factory.html
SpannableString	A										<section class="prog__container"><pre><code>public class SpannableString</code></pre>This is the class for text whose content is immutable but to which markup objects can be attached and detached. For mutable text, see <code>SpannableStringBuilder</code>.</section>	https://developer.android.com/reference/android/text/SpannableString.html
SpannableStringBuilder	A										<section class="prog__container"><pre><code>public class SpannableStringBuilder</code></pre>This is the class for text whose content and markup can both be changed.</section>	https://developer.android.com/reference/android/text/SpannableStringBuilder.html
Spanned	A										<section class="prog__container"><pre><code>public interface Spanned</code></pre>This is the interface for text that has markup objects attached to ranges of it. Not all text classes have mutable markup or text; see <code>Spannable</code> for mutable markup and <code>Editable</code> for mutable text.</section>	https://developer.android.com/reference/android/text/Spanned.html
SpannedString	A										<section class="prog__container"><pre><code>public final class SpannedString</code></pre>This is the class for text whose content and markup are immutable. For mutable markup, see <code>SpannableString</code>; for mutable text, see <code>SpannableStringBuilder</code>.</section>	https://developer.android.com/reference/android/text/SpannedString.html
SparseArray	A										<section class="prog__container"><pre><code>public class SparseArray</code></pre>SparseArrays map integers to Objects. Unlike a normal array of Objects, there can be gaps in the indices. It is intended to be more memory efficient than using a HashMap to map Integers to Objects, both because it avoids auto-boxing keys and its data structure doesn't rely on an extra entry object for each mapping.</section>	https://developer.android.com/reference/android/util/SparseArray.html
SparseArrayCompat	A										<section class="prog__container"><pre><code>public class SparseArrayCompat</code></pre>A copy of the current platform (currently <code>KITKAT</code> version of <code>SparseArray</code>; provides a removeAt() method and other things.</section>	https://developer.android.com/reference/android/support/v4/util/SparseArrayCompat.html
SparseArrayObjectAdapter	A										<section class="prog__container"><pre><code>public class SparseArrayObjectAdapter</code></pre>An <code>ObjectAdapter</code> implemented with a <code>SparseArray</code>. This class maintains an array of objects where each object is associated with an integer key which determines its order relative to other objects.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SparseArrayObjectAdapter.html
SparseBooleanArray	A										<section class="prog__container"><pre><code>public class SparseBooleanArray</code></pre>SparseBooleanArrays map integers to booleans. Unlike a normal array of booleans there can be gaps in the indices. It is intended to be more memory efficient than using a HashMap to map Integers to Booleans, both because it avoids auto-boxing keys and values and its data structure doesn't rely on an extra entry object for each mapping.</section>	https://developer.android.com/reference/android/util/SparseBooleanArray.html
SparseIntArray	A										<section class="prog__container"><pre><code>public class SparseIntArray</code></pre>SparseIntArrays map integers to integers. Unlike a normal array of integers, there can be gaps in the indices. It is intended to be more memory efficient than using a HashMap to map Integers to Integers, both because it avoids auto-boxing keys and values and its data structure doesn't rely on an extra entry object for each mapping.</section>	https://developer.android.com/reference/android/util/SparseIntArray.html
SparseLongArray	A										<section class="prog__container"><pre><code>public class SparseLongArray</code></pre>SparseLongArrays map integers to longs. Unlike a normal array of longs, there can be gaps in the indices. It is intended to be more memory efficient than using a HashMap to map Integers to Longs, both because it avoids auto-boxing keys and values and its data structure doesn't rely on an extra entry object for each mapping.</section>	https://developer.android.com/reference/android/util/SparseLongArray.html
SpeechOrbView	A										<section class="prog__container"><pre><code>public class SpeechOrbView</code></pre>A subclass of <code>SearchOrbView</code> that visualizes the state of an ongoing speech recognition.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SpeechOrbView.html
SpeechRecognitionCallback	A										<section class="prog__container"><pre><code>public interface SpeechRecognitionCallback</code></pre>Interface for receiving notification that speech recognition should be initiated.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/SpeechRecognitionCallback.html
SpeechRecognizer	A										<section class="prog__container"><pre><code>public class SpeechRecognizer</code></pre>This class provides access to the speech recognition service. This service allows access to the speech recognizer. Do not instantiate this class directly, instead, call <code>createSpeechRecognizer(Context)</code>. This class's methods must be invoked only from the main application thread.</section>	https://developer.android.com/reference/android/speech/SpeechRecognizer.html
SpellCheckerInfo	A										<section class="prog__container"><pre><code>public final class SpellCheckerInfo</code></pre>This class is used to specify meta information of a spell checker.</section>	https://developer.android.com/reference/android/view/textservice/SpellCheckerInfo.html
SpellCheckerService	A										<section class="prog__container"><pre><code>public abstract class SpellCheckerService</code></pre>SpellCheckerService provides an abstract base class for a spell checker. This class combines a service to the system with the spell checker service interface that spell checker must implement.</section>	https://developer.android.com/reference/android/service/textservice/SpellCheckerService.html
SpellCheckerService.Session	A										<section class="prog__container"><pre><code>public static abstract class SpellCheckerService.Session</code></pre>This abstract class should be overridden by a concrete implementation of a spell checker.</section>	https://developer.android.com/reference/android/service/textservice/SpellCheckerService.Session.html
SpellCheckerSession	A										<section class="prog__container"><pre><code>public class SpellCheckerSession</code></pre>The SpellCheckerSession interface provides the per client functionality of SpellCheckerService. <h3>Applications</h3></section>	https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.html
SpellCheckerSession.SpellCheckerSessionListener	A										<section class="prog__container"><pre><code>public static interface SpellCheckerSession.SpellCheckerSessionListener</code></pre>Callback for getting results from text services</section>	https://developer.android.com/reference/android/view/textservice/SpellCheckerSession.SpellCheckerSessionListener.html
SpellCheckerSubtype	A										<section class="prog__container"><pre><code>public final class SpellCheckerSubtype</code></pre>This class is used to specify meta information of a subtype contained in a spell checker. Subtype can describe locale (e.g. en_US, fr_FR...) used for settings.</section>	https://developer.android.com/reference/android/view/textservice/SpellCheckerSubtype.html
Spinner	A										<section class="prog__container"><pre><code>public class Spinner</code></pre>A view that displays one child at a time and lets the user pick among them. The items in the Spinner come from the <code>Adapter</code> associated with this view.</section>	https://developer.android.com/reference/android/widget/Spinner.html
SpinnerAdapter	A										<section class="prog__container"><pre><code>public interface SpinnerAdapter</code></pre>Extended <code>Adapter</code> that is the bridge between a <code>Spinner</code> and its data. A spinner adapter allows to define two different views: one that shows the data in the spinner itself and one that shows the data in the drop down list when the spinner is pressed.</section>	https://developer.android.com/reference/android/widget/SpinnerAdapter.html
Spliterator	A										<section class="prog__container"><pre><code>public interface Spliterator</code></pre>An object for traversing and partitioning elements of a source. The source of elements covered by a Spliterator could be, for example, an array, a <code>Collection</code>, an IO channel, or a generator function.</section>	https://developer.android.com/reference/java/util/Spliterator.html
Spliterator.OfDouble	A										<section class="prog__container"><pre><code>public static interface Spliterator.OfDouble</code></pre>A Spliterator specialized for <code>double</code> values.</section>	https://developer.android.com/reference/java/util/Spliterator.OfDouble.html
Spliterator.OfInt	A										<section class="prog__container"><pre><code>public static interface Spliterator.OfInt</code></pre>A Spliterator specialized for <code>int</code> values.</section>	https://developer.android.com/reference/java/util/Spliterator.OfInt.html
Spliterator.OfLong	A										<section class="prog__container"><pre><code>public static interface Spliterator.OfLong</code></pre>A Spliterator specialized for <code>long</code> values.</section>	https://developer.android.com/reference/java/util/Spliterator.OfLong.html
Spliterators	A										<section class="prog__container"><pre><code>public final class Spliterators</code></pre>Static classes and methods for operating on or creating instances of <code>Spliterator</code> and its primitive specializations <code>Spliterator.OfInt</code>, <code>Spliterator.OfLong</code>, and <code>Spliterator.OfDouble</code>.</section>	https://developer.android.com/reference/java/util/Spliterators.html
Spliterators.AbstractDoubleSpliterator	A										<section class="prog__container"><pre><code>public static abstract class Spliterators.AbstractDoubleSpliterator</code></pre>An abstract <code>Spliterator.OfDouble</code> that implements <code>trySplit</code> to permit limited parallelism.</section>	https://developer.android.com/reference/java/util/Spliterators.AbstractDoubleSpliterator.html
Spliterators.AbstractIntSpliterator	A										<section class="prog__container"><pre><code>public static abstract class Spliterators.AbstractIntSpliterator</code></pre>An abstract <code>Spliterator.OfInt</code> that implements <code>trySplit</code> to permit limited parallelism.</section>	https://developer.android.com/reference/java/util/Spliterators.AbstractIntSpliterator.html
Spliterators.AbstractLongSpliterator	A										<section class="prog__container"><pre><code>public static abstract class Spliterators.AbstractLongSpliterator</code></pre>An abstract <code>Spliterator.OfLong</code> that implements <code>trySplit</code> to permit limited parallelism.</section>	https://developer.android.com/reference/java/util/Spliterators.AbstractLongSpliterator.html
Spliterators.AbstractSpliterator	A										<section class="prog__container"><pre><code>public static abstract class Spliterators.AbstractSpliterator</code></pre>An abstract <code>Spliterator</code> that implements <code>trySplit</code> to permit limited parallelism.</section>	https://developer.android.com/reference/java/util/Spliterators.AbstractSpliterator.html
SplittableRandom	A										<section class="prog__container"><pre><code>public final class SplittableRandom</code></pre>A generator of uniform pseudorandom values applicable for use in (among other contexts) isolated parallel computations that may generate subtasks. Class <code>SplittableRandom</code> supports methods for producing pseudorandom numbers of type <code>int</code>, <code>long</code>, and <code>double</code> with similar usages as for class <code>Random</code> but differs in the following ways: <ul> <li>Series of generated values pass the DieHarder suite testing independence and uniformity properties of random number generators. (Most recently validated with version 3.31.1.) These tests validate only the methods for certain types and ranges, but similar properties are expected to hold, at least approximately, for others as well. The <em>period</em> (length of any series of generated values before it repeats) is at least 2<sup>64</sup>. <li>Method <code>split()</code> constructs and returns a new SplittableRandom instance that shares no mutable state with the current instance. However, with very high probability, the values collectively generated by the two objects have the same statistical properties as if the same quantity of values were generated by a single thread using a single <code>SplittableRandom</code> object. <li>Instances of SplittableRandom are <em>not</em> thread-safe. They are designed to be split, not shared, across threads. For example, a <code>fork/join-style</code> computation using random numbers might include a construction of the form <code>new Subtask(aSplittableRandom.split()).fork()</code>. <li>This class provides additional methods for generating random streams, that employ the above techniques when used in <code>stream.parallel()</code> mode. </li></li></li></li></ul></section>	https://developer.android.com/reference/java/util/SplittableRandom.html
SslCertificate	A										<section class="prog__container"><pre><code>public class SslCertificate</code></pre>SSL certificate info (certificate details) class</section>	https://developer.android.com/reference/android/net/http/SslCertificate.html
SslCertificate.DName	A										<section class="prog__container"><pre><code>public class SslCertificate.DName</code></pre>A distinguished name helper class: a 3-tuple of: <ul> <li>the most specific common name (CN)</li> <li>the most specific organization (O)</li> <li>the most specific organizational unit (OU)</li> <ul> </ul></ul></section>	https://developer.android.com/reference/android/net/http/SslCertificate.DName.html
SslError	A										<section class="prog__container"><pre><code>public class SslError</code></pre>This class represents a set of one or more SSL errors and the associated SSL certificate.</section>	https://developer.android.com/reference/android/net/http/SslError.html
SslErrorHandler	A										<section class="prog__container"><pre><code>public class SslErrorHandler</code></pre>Represents a request for handling an SSL error. Instances of this class are created by the WebView and passed to <code>onReceivedSslError(WebView, SslErrorHandler, SslError)</code>. The host application must call either <code>proceed()</code> or <code>cancel()</code> to set the WebView's response to the request.</section>	https://developer.android.com/reference/android/webkit/SslErrorHandler.html
Stack	A										<section class="prog__container"><pre><code>public class Stack</code></pre>The <code>Stack</code> class represents a last-in-first-out (LIFO) stack of objects. It extends class <tt>Vector</tt> with five operations that allow a vector to be treated as a stack. The usual <tt>push</tt> and <tt>pop</tt> operations are provided, as well as a method to <tt>peek</tt> at the top item on the stack, a method to test for whether the stack is <tt>empty</tt>, and a method to <tt>search</tt> the stack for an item and discover how far it is from the top.</section>	https://developer.android.com/reference/java/util/Stack.html
StackOverflowError	A										<section class="prog__container"><pre><code>public class StackOverflowError</code></pre>Thrown when a stack overflow occurs because an application recurses too deeply.</section>	https://developer.android.com/reference/java/lang/StackOverflowError.html
StackTraceElement	A										<section class="prog__container"><pre><code>public final class StackTraceElement</code></pre>An element in a stack trace, as returned by <code>getStackTrace()</code>. Each element represents a single stack frame. All stack frames except for the one at the top of the stack represent a method invocation. The frame at the top of the stack represents the execution point at which the stack trace was generated. Typically, this is the point at which the throwable corresponding to the stack trace was created.</section>	https://developer.android.com/reference/java/lang/StackTraceElement.html
StackView	A										<section class="prog__container"><pre><code>public class StackView</code></pre></section>	https://developer.android.com/reference/android/widget/StackView.html
StaggeredGridLayoutManager	A										<section class="prog__container"><pre><code>public class StaggeredGridLayoutManager</code></pre>A LayoutManager that lays out children in a staggered grid formation. It supports horizontal &amp; vertical layout as well as an ability to layout children in reverse.</section>	https://developer.android.com/reference/android/support/v7/widget/StaggeredGridLayoutManager.html
StaggeredGridLayoutManager.LayoutParams	A										<section class="prog__container"><pre><code>public static class StaggeredGridLayoutManager.LayoutParams</code></pre>LayoutParams used by StaggeredGridLayoutManager.</section>	https://developer.android.com/reference/android/support/v7/widget/StaggeredGridLayoutManager.LayoutParams.html
StaleDataException	A										<section class="prog__container"><pre><code>public class StaleDataException</code></pre>This exception is thrown when a Cursor contains stale data and must be requeried before being used again.</section>	https://developer.android.com/reference/android/database/StaleDataException.html
StampedLock	A										<section class="prog__container"><pre><code>public class StampedLock</code></pre>A capability-based lock with three modes for controlling read/write access. The state of a StampedLock consists of a version and mode. Lock acquisition methods return a stamp that represents and controls access with respect to a lock state; "try" versions of these methods may instead return the special value zero to represent failure to acquire access. Lock release and conversion methods require stamps as arguments, and fail if they do not match the state of the lock. The three modes are: <ul> <li><b>Writing.</b> Method <code>writeLock()</code> possibly blocks waiting for exclusive access, returning a stamp that can be used in method <code>unlockWrite(long)</code> to release the lock. Untimed and timed versions of <code>tryWriteLock</code> are also provided. When the lock is held in write mode, no read locks may be obtained, and all optimistic read validations will fail. <li><b>Reading.</b> Method <code>readLock()</code> possibly blocks waiting for non-exclusive access, returning a stamp that can be used in method <code>unlockRead(long)</code> to release the lock. Untimed and timed versions of <code>tryReadLock</code> are also provided. <li><b>Optimistic Reading.</b> Method <code>tryOptimisticRead()</code> returns a non-zero stamp only if the lock is not currently held in write mode. Method <code>validate(long)</code> returns true if the lock has not been acquired in write mode since obtaining a given stamp. This mode can be thought of as an extremely weak version of a read-lock, that can be broken by a writer at any time. The use of optimistic mode for short read-only code segments often reduces contention and improves throughput. However, its use is inherently fragile. Optimistic read sections should only read fields and hold them in local variables for later use after validation. Fields read while in optimistic mode may be wildly inconsistent, so usage applies only when you are familiar enough with data representations to check consistency and/or repeatedly invoke method <code>validate()</code>. For example, such steps are typically required when first reading an object or array reference, and then accessing one of its fields, elements or methods. </li></li></li></ul></section>	https://developer.android.com/reference/java/util/concurrent/locks/StampedLock.html
StandardCharsets	A										<section class="prog__container"><pre><code>public final class StandardCharsets</code></pre>Constant definitions for the standard <code>Charsets</code>. These charsets are guaranteed to be available on every implementation of the Java platform.</section>	https://developer.android.com/reference/java/nio/charset/StandardCharsets.html
StandardConstants	A										<section class="prog__container"><pre><code>public final class StandardConstants</code></pre>Standard constants definitions</section>	https://developer.android.com/reference/javax/net/ssl/StandardConstants.html
StandardProtocolFamily	A										<section class="prog__container"><pre><code>public final enum StandardProtocolFamily</code></pre>Defines the standard families of communication protocols.</section>	https://developer.android.com/reference/java/net/StandardProtocolFamily.html
StandardSocketOptions	A										<section class="prog__container"><pre><code>public final class StandardSocketOptions</code></pre>Defines the <em>standard</em> socket options.</section>	https://developer.android.com/reference/java/net/StandardSocketOptions.html
StartElementListener	A										<section class="prog__container"><pre><code>public interface StartElementListener</code></pre>Listens for the beginning of elements.</section>	https://developer.android.com/reference/android/sax/StartElementListener.html
StatFs	A										<section class="prog__container"><pre><code>public class StatFs</code></pre>Retrieve overall information about the space on a filesystem. This is a wrapper for Unix statvfs().</section>	https://developer.android.com/reference/android/os/StatFs.html
StateListAnimator	A										<section class="prog__container"><pre><code>public class StateListAnimator</code></pre>Lets you define a number of Animators that will run on the attached View depending on the View's drawable state.</section>	https://developer.android.com/reference/android/animation/StateListAnimator.html
StateListDrawable	A										<section class="prog__container"><pre><code>public class StateListDrawable</code></pre>Lets you assign a number of graphic images to a single Drawable and swap out the visible item by a string ID value.</section>	https://developer.android.com/reference/android/graphics/drawable/StateListDrawable.html
StateSet	A										<section class="prog__container"><pre><code>public class StateSet</code></pre>State sets are arrays of positive ints where each element represents the state of a <code>View</code> (e.g. focused, selected, visible, etc.). A <code>View</code> may be in one or more of those states. A state spec is an array of signed ints where each element represents a required (if positive) or an undesired (if negative) <code>View</code> state. Utils dealing with state sets. In theory we could encapsulate the state set and state spec arrays and not have static methods here but there is some concern about performance since these methods are called during view drawing.</section>	https://developer.android.com/reference/android/util/StateSet.html
Statement	A										<section class="prog__container"><pre><code>public interface Statement</code></pre></section>	https://developer.android.com/reference/java/sql/Statement.html
StatementEvent	A										<section class="prog__container"><pre><code>public class StatementEvent</code></pre>A <code>StatementEvent</code> is sent to all <code>StatementEventListener</code>s which were registered with a <code>PooledConnection</code>. This occurs when the driver determines that a <code>PreparedStatement</code> that is associated with the <code>PooledConnection</code> has been closed or the driver determines is invalid.</section>	https://developer.android.com/reference/javax/sql/StatementEvent.html
StatementEventListener	A										<section class="prog__container"><pre><code>public interface StatementEventListener</code></pre>An object that registers to be notified of events that occur on PreparedStatements that are in the Statement pool.</section>	https://developer.android.com/reference/javax/sql/StatementEventListener.html
StaticLayout	A										<section class="prog__container"><pre><code>public class StaticLayout</code></pre>StaticLayout is a Layout for text that will not be edited after it is laid out. Use <code>DynamicLayout</code> for text that may change.</section>	https://developer.android.com/reference/android/text/StaticLayout.html
StaticLayout.Builder	A										<section class="prog__container"><pre><code>public static final class StaticLayout.Builder</code></pre>Builder for static layouts. The builder is a newer pattern for constructing StaticLayout objects and should be preferred over the constructors, particularly to access newer features. To build a static layout, first call <code>obtain(CharSequence, int, int, TextPaint, int)</code> with the required arguments (text, paint, and width), then call setters for optional parameters, and finally <code>build()</code> to build the StaticLayout object. Parameters not explicitly set will get default values.</section>	https://developer.android.com/reference/android/text/StaticLayout.Builder.html
StatusBarNotification	A										<section class="prog__container"><pre><code>public class StatusBarNotification</code></pre>Class encapsulating a Notification. Sent by the NotificationManagerService to clients including the status bar and any <code>NotificationListenerService</code>s.</section>	https://developer.android.com/reference/android/service/notification/StatusBarNotification.html
StatusHints	A										<section class="prog__container"><pre><code>public final class StatusHints</code></pre>Contains status label and icon displayed in the in-call UI.</section>	https://developer.android.com/reference/android/telecom/StatusHints.html
StorageManager	A										<section class="prog__container"><pre><code>public class StorageManager</code></pre>StorageManager is the interface to the systems storage service. The storage manager handles storage-related items such as Opaque Binary Blobs (OBBs).</section>	https://developer.android.com/reference/android/os/storage/StorageManager.html
StorageVolume	A										<section class="prog__container"><pre><code>public final class StorageVolume</code></pre>Information about a shared/external storage volume for a specific user.</section>	https://developer.android.com/reference/android/os/storage/StorageVolume.html
Stream	A										<section class="prog__container"><pre><code>public interface Stream</code></pre>A sequence of elements supporting sequential and parallel aggregate operations. The following example illustrates an aggregate operation using <code>Stream</code> and <code>IntStream</code>: <pre><code>int sum = widgets.stream() .filter(w -&gt; w.getColor() == RED) .mapToInt(w -&gt; w.getWeight()) .sum(); </code></pre> In this example, <code>widgets</code> is a <code>Collection&lt;Widget&gt;</code>. We create a stream of <code>Widget</code> objects via <code>Collection.stream()</code>, filter it to produce a stream containing only the red widgets, and then transform it into a stream of <code>int</code> values representing the weight of each red widget. Then this stream is summed to produce a total weight.</section>	https://developer.android.com/reference/java/util/stream/Stream.html
Stream.Builder	A										<section class="prog__container"><pre><code>public static interface Stream.Builder</code></pre>A mutable builder for a <code>Stream</code>. This allows the creation of a <code>Stream</code> by generating elements individually and adding them to the <code>Builder</code> (without the copying overhead that comes from using an <code>ArrayList</code> as a temporary buffer.)</section>	https://developer.android.com/reference/java/util/stream/Stream.Builder.html
StreamConfigurationMap	A										<section class="prog__container"><pre><code>public final class StreamConfigurationMap</code></pre>Immutable class to store the available stream <code>configurations</code> to set up <code>Surfaces</code> for creating a <code>capture session</code> with <code>createCaptureSession(List<surface>, CameraCaptureSession.StateCallback, Handler)</surface></code>. <!-- TODO: link to input stream configuration --></section>	https://developer.android.com/reference/android/hardware/camera2/params/StreamConfigurationMap.html
StreamCorruptedException	A										<section class="prog__container"><pre><code>public class StreamCorruptedException</code></pre>Thrown when control information that was read from an object stream violates internal consistency checks.</section>	https://developer.android.com/reference/java/io/StreamCorruptedException.html
StreamHandler	A										<section class="prog__container"><pre><code>public class StreamHandler</code></pre>Stream based logging <tt>Handler</tt>.</section>	https://developer.android.com/reference/java/util/logging/StreamHandler.html
StreamResult	A										<section class="prog__container"><pre><code>public class StreamResult</code></pre></section>	https://developer.android.com/reference/javax/xml/transform/stream/StreamResult.html
StreamSource	A										<section class="prog__container"><pre><code>public class StreamSource</code></pre></section>	https://developer.android.com/reference/javax/xml/transform/stream/StreamSource.html
StreamSupport	A										<section class="prog__container"><pre><code>public final class StreamSupport</code></pre>Low-level utility methods for creating and manipulating streams.</section>	https://developer.android.com/reference/java/util/stream/StreamSupport.html
StreamTokenizer	A										<section class="prog__container"><pre><code>public class StreamTokenizer</code></pre>The <code>StreamTokenizer</code> class takes an input stream and parses it into "tokens", allowing the tokens to be read one at a time. The parsing process is controlled by a table and a number of flags that can be set to various states. The stream tokenizer can recognize identifiers, numbers, quoted strings, and various comment styles.</section>	https://developer.android.com/reference/java/io/StreamTokenizer.html
StrictHostnameVerifier	A										<section class="prog__container"><pre><code>public class StrictHostnameVerifier</code></pre><p class="caution"><strong> This class was deprecated in API level 22.</strong><br/> Please use <code>openConnection()</code> instead. Please visit this webpage for further details.</section>	https://developer.android.com/reference/org/apache/http/conn/ssl/StrictHostnameVerifier.html
StrictMath	A										<section class="prog__container"><pre><code>public final class StrictMath</code></pre>The class <code>StrictMath</code> contains methods for performing basic numeric operations such as the elementary exponential, logarithm, square root, and trigonometric functions.</section>	https://developer.android.com/reference/java/lang/StrictMath.html
StrictMode	A										<section class="prog__container"><pre><code>public final class StrictMode</code></pre></section>	https://developer.android.com/reference/android/os/StrictMode.html
StrictMode.ThreadPolicy	A										<section class="prog__container"><pre><code>public static final class StrictMode.ThreadPolicy</code></pre><code>StrictMode</code> policy applied to a certain thread.</section>	https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.html
StrictMode.ThreadPolicy.Builder	A										<section class="prog__container"><pre><code>public static final class StrictMode.ThreadPolicy.Builder</code></pre>Creates <code>StrictMode.ThreadPolicy</code> instances. Methods whose names start with <code>detect</code> specify what problems we should look for. Methods whose names start with <code>penalty</code> specify what we should do when we detect a problem.</section>	https://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html
StrictMode.VmPolicy	A										<section class="prog__container"><pre><code>public static final class StrictMode.VmPolicy</code></pre><code>StrictMode</code> policy applied to all threads in the virtual machine's process.</section>	https://developer.android.com/reference/android/os/StrictMode.VmPolicy.html
StrictMode.VmPolicy.Builder	A										<section class="prog__container"><pre><code>public static final class StrictMode.VmPolicy.Builder</code></pre>Creates <code>StrictMode.VmPolicy</code> instances. Methods whose names start with <code>detect</code> specify what problems we should look for. Methods whose names start with <code>penalty</code> specify what we should do when we detect a problem.</section>	https://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html
StrikethroughSpan	A										<section class="prog__container"><pre><code>public class StrikethroughSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/StrikethroughSpan.html
String	A										<section class="prog__container"><pre><code>public final class String</code></pre>The <code>String</code> class represents character strings. All string literals in Java programs, such as <code>"abc"</code>, are implemented as instances of this class.</section>	https://developer.android.com/reference/java/lang/String.html
StringBuffer	A										<section class="prog__container"><pre><code>public final class StringBuffer</code></pre>A thread-safe, mutable sequence of characters. A string buffer is like a <code>String</code>, but can be modified. At any point in time it contains some particular sequence of characters, but the length and content of the sequence can be changed through certain method calls.</section>	https://developer.android.com/reference/java/lang/StringBuffer.html
StringBufferInputStream	A										<section class="prog__container"><pre><code>public class StringBufferInputStream</code></pre><p class="caution"><strong> This class was deprecated in API level 1.</strong><br/> This class does not properly convert characters into bytes. As of JDK&nbsp;1.1, the preferred way to create a stream from a string is via the <code>StringReader</code> class.</section>	https://developer.android.com/reference/java/io/StringBufferInputStream.html
StringBuilder	A										<section class="prog__container"><pre><code>public final class StringBuilder</code></pre>A mutable sequence of characters. This class provides an API compatible with <code>StringBuffer</code>, but with no guarantee of synchronization. This class is designed for use as a drop-in replacement for <code>StringBuffer</code> in places where the string buffer was being used by a single thread (as is generally the case). Where possible, it is recommended that this class be used in preference to <code>StringBuffer</code> as it will be faster under most implementations.</section>	https://developer.android.com/reference/java/lang/StringBuilder.html
StringBuilderPrinter	A										<section class="prog__container"><pre><code>public class StringBuilderPrinter</code></pre>Implementation of a <code>Printer</code> that sends its output to a <code>StringBuilder</code>.</section>	https://developer.android.com/reference/android/util/StringBuilderPrinter.html
StringCharacterIterator	A										<section class="prog__container"><pre><code>public final class StringCharacterIterator</code></pre><code>StringCharacterIterator</code> implements the <code>CharacterIterator</code> protocol for a <code>String</code>. The <code>StringCharacterIterator</code> class iterates over the entire <code>String</code>.</section>	https://developer.android.com/reference/java/text/StringCharacterIterator.html
StringDef	A										<section class="prog__container"><pre><code>public abstract @interface StringDef</code></pre>Denotes that the annotated String element, represents a logical type and that its value should be one of the explicitly named constants.</section>	https://developer.android.com/reference/android/support/annotation/StringDef.html
StringIndexOutOfBoundsException	A										<section class="prog__container"><pre><code>public class StringIndexOutOfBoundsException</code></pre>Thrown by <code>String</code> methods to indicate that an index is either negative or greater than the size of the string. For some methods such as the charAt method, this exception also is thrown when the index is equal to the size of the string.</section>	https://developer.android.com/reference/java/lang/StringIndexOutOfBoundsException.html
StringJoiner	A										<section class="prog__container"><pre><code>public final class StringJoiner</code></pre><code>StringJoiner</code> is used to construct a sequence of characters separated by a delimiter and optionally starting with a supplied prefix and ending with a supplied suffix.</section>	https://developer.android.com/reference/java/util/StringJoiner.html
StringPrepParseException	A										<section class="prog__container"><pre><code>public class StringPrepParseException</code></pre>Exception that signals an error has occurred while parsing the input to StringPrep or IDNA.</section>	https://developer.android.com/reference/android/icu/text/StringPrepParseException.html
StringReader	A										<section class="prog__container"><pre><code>public class StringReader</code></pre>A character stream whose source is a string.</section>	https://developer.android.com/reference/java/io/StringReader.html
StringRes	A										<section class="prog__container"><pre><code>public abstract @interface StringRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be a String resource reference (e.g. <code>android.R.string.ok</code>).</section>	https://developer.android.com/reference/android/support/annotation/StringRes.html
StringSearch	A										<section class="prog__container"><pre><code>public final class StringSearch</code></pre><tt>StringSearch</tt> is a <code>SearchIterator</code> that provides language-sensitive text searching based on the comparison rules defined in a <code>RuleBasedCollator</code> object. StringSearch ensures that language eccentricity can be handled, e.g. for the German collator, characters &szlig; and SS will be matched if case is chosen to be ignored. See the "ICU Collation Design Document" for more information.</section>	https://developer.android.com/reference/android/icu/text/StringSearch.html
StringTokenizer	A										<section class="prog__container"><pre><code>public class StringTokenizer</code></pre>The string tokenizer class allows an application to break a string into tokens. The tokenization method is much simpler than the one used by the <code>StreamTokenizer</code> class. The <code>StringTokenizer</code> methods do not distinguish among identifiers, numbers, and quoted strings, nor do they recognize and skip comments.</section>	https://developer.android.com/reference/java/util/StringTokenizer.html
StringWriter	A										<section class="prog__container"><pre><code>public class StringWriter</code></pre>A character stream that collects its output in a string buffer, which can then be used to construct a string.</section>	https://developer.android.com/reference/java/io/StringWriter.html
Struct	A										<section class="prog__container"><pre><code>public interface Struct</code></pre></section>	https://developer.android.com/reference/java/sql/Struct.html
StructPollfd	A										<section class="prog__container"><pre><code>public final class StructPollfd</code></pre>Used as an in/out parameter to <code>poll(StructPollfd[], int)</code>. Corresponds to C's <code>struct pollfd</code> from <code>&lt;poll.h&gt;</code>.</section>	https://developer.android.com/reference/android/system/StructPollfd.html
StructStat	A										<section class="prog__container"><pre><code>public final class StructStat</code></pre>File information returned by <code>fstat(FileDescriptor)</code>, <code>lstat(String)</code>, and <code>stat(String)</code>. Corresponds to C's <code>struct stat</code> from <code>&lt;stat.h&gt;</code>.</section>	https://developer.android.com/reference/android/system/StructStat.html
StructStatVfs	A										<section class="prog__container"><pre><code>public final class StructStatVfs</code></pre>File information returned by <code>fstatvfs(FileDescriptor)</code> and <code>statvfs(String)</code>.</section>	https://developer.android.com/reference/android/system/StructStatVfs.html
StructUtsname	A										<section class="prog__container"><pre><code>public final class StructUtsname</code></pre>Information returned by <code>uname()</code>. Corresponds to C's <code>struct utsname</code> from <code>&lt;sys/utsname.h&gt;</code>.</section>	https://developer.android.com/reference/android/system/StructUtsname.html
StyleRes	A										<section class="prog__container"><pre><code>public abstract @interface StyleRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be a style resource reference (e.g. <code>android.R.style.TextAppearance</code>).</section>	https://developer.android.com/reference/android/support/annotation/StyleRes.html
StyleSpan	A										<section class="prog__container"><pre><code>public class StyleSpan</code></pre>Describes a style in a span. Note that styles are cumulative -- if both bold and italic are set in separate spans, or if the base style is bold and a span calls for italic, you get bold italic. You can't turn off a style from the base style.</section>	https://developer.android.com/reference/android/text/style/StyleSpan.html
StyleableRes	A										<section class="prog__container"><pre><code>public abstract @interface StyleableRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be a styleable resource reference (e.g. <code>android.R.styleable.TextView_text</code>).</section>	https://developer.android.com/reference/android/support/annotation/StyleableRes.html
SubMenu	A										<section class="prog__container"><pre><code>public interface SubMenu</code></pre>Subclass of <code>Menu</code> for sub menus.</section>	https://developer.android.com/reference/android/view/SubMenu.html
Subject	A										<section class="prog__container"><pre><code>public final class Subject</code></pre></section>	https://developer.android.com/reference/javax/security/auth/Subject.html
SubjectDomainCombiner	A										<section class="prog__container"><pre><code>public class SubjectDomainCombiner</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/javax/security/auth/SubjectDomainCombiner.html
SubscriptSpan	A										<section class="prog__container"><pre><code>public class SubscriptSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/SubscriptSpan.html
SubscriptionInfo	A										<section class="prog__container"><pre><code>public class SubscriptionInfo</code></pre>A Parcelable class for Subscription Information.</section>	https://developer.android.com/reference/android/telephony/SubscriptionInfo.html
SubscriptionManager	A										<section class="prog__container"><pre><code>public class SubscriptionManager</code></pre>SubscriptionManager is the application interface to SubscriptionController and provides information about the current Telephony Subscriptions. *</section>	https://developer.android.com/reference/android/telephony/SubscriptionManager.html
SubscriptionManager.OnSubscriptionsChangedListener	A										<section class="prog__container"><pre><code>public static class SubscriptionManager.OnSubscriptionsChangedListener</code></pre>A listener class for monitoring changes to <code>SubscriptionInfo</code> records.</section>	https://developer.android.com/reference/android/telephony/SubscriptionManager.OnSubscriptionsChangedListener.html
SuggestionSpan	A										<section class="prog__container"><pre><code>public class SuggestionSpan</code></pre>Holds suggestion candidates for the text enclosed in this span. When such a span is edited in an EditText, double tapping on the text enclosed in this span will display a popup dialog listing suggestion replacement for that text. The user can then replace the original text by one of the suggestions. These spans should typically be created by the input method to provide correction and alternates for the text.</section>	https://developer.android.com/reference/android/text/style/SuggestionSpan.html
SuggestionsInfo	A										<section class="prog__container"><pre><code>public final class SuggestionsInfo</code></pre>This class contains a metadata of suggestions from the text service</section>	https://developer.android.com/reference/android/view/textservice/SuggestionsInfo.html
SumPathEffect	A										<section class="prog__container"><pre><code>public class SumPathEffect</code></pre></section>	https://developer.android.com/reference/android/graphics/SumPathEffect.html
SuperscriptSpan	A										<section class="prog__container"><pre><code>public class SuperscriptSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/SuperscriptSpan.html
SupplicantState	A										<section class="prog__container"><pre><code>public final enum SupplicantState</code></pre>From <code>defs.h</code> in <code>wpa_supplicant</code>.</section>	https://developer.android.com/reference/android/net/wifi/SupplicantState.html
Supplier	A										<section class="prog__container"><pre><code>public interface Supplier</code></pre>Represents a supplier of results.</section>	https://developer.android.com/reference/java/util/function/Supplier.html
Suppress	A										<section class="prog__container"><pre><code>public abstract @interface Suppress</code></pre><p class="caution"><strong> This @interface was deprecated in API level 24.</strong><br/> Use Suppress instead. New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/suitebuilder/annotation/Suppress.html
SuppressLint	A										<section class="prog__container"><pre><code>public abstract @interface SuppressLint</code></pre>Indicates that Lint should ignore the specified warnings for the annotated element.</section>	https://developer.android.com/reference/android/annotation/SuppressLint.html
SuppressWarnings	A										<section class="prog__container"><pre><code>public abstract @interface SuppressWarnings</code></pre>Indicates that the named compiler warnings should be suppressed in the annotated element (and in all program elements contained in the annotated element). Note that the set of warnings suppressed in a given element is a superset of the warnings suppressed in all containing elements. For example, if you annotate a class to suppress one warning and annotate a method to suppress another, both warnings will be suppressed in the method.</section>	https://developer.android.com/reference/java/lang/SuppressWarnings.html
Surface	A										<section class="prog__container"><pre><code>public class Surface</code></pre>Handle onto a raw buffer that is being managed by the screen compositor.</section>	https://developer.android.com/reference/android/view/Surface.html
Surface.OutOfResourcesException	A										<section class="prog__container"><pre><code>public static class Surface.OutOfResourcesException</code></pre>Exception thrown when a Canvas couldn't be locked with <code>lockCanvas(Rect)</code>, or when a SurfaceTexture could not successfully be allocated.</section>	https://developer.android.com/reference/android/view/Surface.OutOfResourcesException.html
SurfaceHolder	A										<section class="prog__container"><pre><code>public interface SurfaceHolder</code></pre>Abstract interface to someone holding a display surface. Allows you to control the surface size and format, edit the pixels in the surface, and monitor changes to the surface. This interface is typically available through the <code>SurfaceView</code> class.</section>	https://developer.android.com/reference/android/view/SurfaceHolder.html
SurfaceHolder.BadSurfaceTypeException	A										<section class="prog__container"><pre><code>public static class SurfaceHolder.BadSurfaceTypeException</code></pre>Exception that is thrown from <code>lockCanvas()</code> when called on a Surface whose type is SURFACE_TYPE_PUSH_BUFFERS.</section>	https://developer.android.com/reference/android/view/SurfaceHolder.BadSurfaceTypeException.html
SurfaceHolder.Callback	A										<section class="prog__container"><pre><code>public static interface SurfaceHolder.Callback</code></pre>A client may implement this interface to receive information about changes to the surface. When used with a <code>SurfaceView</code>, the Surface being held is only available between calls to <code>surfaceCreated(SurfaceHolder)</code> and <code>surfaceDestroyed(SurfaceHolder)</code>. The Callback is set with <code>SurfaceHolder.addCallback</code> method.</section>	https://developer.android.com/reference/android/view/SurfaceHolder.Callback.html
SurfaceHolder.Callback2	A										<section class="prog__container"><pre><code>public static interface SurfaceHolder.Callback2</code></pre>Additional callbacks that can be received for <code>SurfaceHolder.Callback</code>.</section>	https://developer.android.com/reference/android/view/SurfaceHolder.Callback2.html
SurfaceTexture	A										<section class="prog__container"><pre><code>public class SurfaceTexture</code></pre>Captures frames from an image stream as an OpenGL ES texture.</section>	https://developer.android.com/reference/android/graphics/SurfaceTexture.html
SurfaceTexture.OnFrameAvailableListener	A										<section class="prog__container"><pre><code>public static interface SurfaceTexture.OnFrameAvailableListener</code></pre>Callback interface for being notified that a new stream frame is available.</section>	https://developer.android.com/reference/android/graphics/SurfaceTexture.OnFrameAvailableListener.html
SurfaceTexture.OutOfResourcesException	A										<section class="prog__container"><pre><code>public static class SurfaceTexture.OutOfResourcesException</code></pre><p class="caution"><strong> This class was deprecated in API level 19.</strong><br/> No longer thrown. <code>Surface.OutOfResourcesException</code> is used instead.</section>	https://developer.android.com/reference/android/graphics/SurfaceTexture.OutOfResourcesException.html
SurfaceView	A										<section class="prog__container"><pre><code>public class SurfaceView</code></pre>Provides a dedicated drawing surface embedded inside of a view hierarchy. You can control the format of this surface and, if you like, its size; the SurfaceView takes care of placing the surface at the correct location on the screen</section>	https://developer.android.com/reference/android/view/SurfaceView.html
SweepGradient	A										<section class="prog__container"><pre><code>public class SweepGradient</code></pre></section>	https://developer.android.com/reference/android/graphics/SweepGradient.html
SwipeDismissBehavior.OnDismissListener	A										<section class="prog__container"><pre><code>public static interface SwipeDismissBehavior.OnDismissListener</code></pre>Callback interface used to notify the application that the view has been dismissed.</section>	https://developer.android.com/reference/android/support/design/widget/SwipeDismissBehavior.OnDismissListener.html
SwipeDismissLayout	A										Special layout that finishes its activity when swiped away.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
SwipeRefreshLayout	A										<section class="prog__container"><pre><code>public class SwipeRefreshLayout</code></pre>The SwipeRefreshLayout should be used whenever the user can refresh the contents of a view via a vertical swipe gesture. The activity that instantiates this view should add an OnRefreshListener to be notified whenever the swipe to refresh gesture is completed. The SwipeRefreshLayout will notify the listener each and every time the gesture is completed again; the listener is responsible for correctly determining when to actually initiate a refresh of its content. If the listener determines there should not be a refresh, it must call setRefreshing(false) to cancel any visual indication of a refresh. If an activity wishes to show just the progress animation, it should call setRefreshing(true). To disable the gesture and progress animation, call setEnabled(false) on the view.</section>	https://developer.android.com/reference/android/support/v4/widget/SwipeRefreshLayout.html
SwipeRefreshLayout.OnChildScrollUpCallback	A										<section class="prog__container"><pre><code>public static interface SwipeRefreshLayout.OnChildScrollUpCallback</code></pre>Classes that wish to override <code>canChildScrollUp()</code> method behavior should implement this interface.</section>	https://developer.android.com/reference/android/support/v4/widget/SwipeRefreshLayout.OnChildScrollUpCallback.html
SwipeRefreshLayout.OnRefreshListener	A										<section class="prog__container"><pre><code>public static interface SwipeRefreshLayout.OnRefreshListener</code></pre>Classes that wish to be notified when the swipe gesture correctly triggers a refresh should implement this interface.</section>	https://developer.android.com/reference/android/support/v4/widget/SwipeRefreshLayout.OnRefreshListener.html
Switch	A										<section class="prog__container"><pre><code>public class Switch</code></pre>A Switch is a two-state toggle switch widget that can select between two options. The user may drag the "thumb" back and forth to choose the selected option, or simply tap to toggle as if it were a checkbox. The <code>text</code> property controls the text displayed in the label for the switch, whereas the <code>off</code> and <code>on</code> text controls the text on the thumb. Similarly, the <code>textAppearance</code> and the related setTypeface() methods control the typeface and style of label text, whereas the <code>switchTextAppearance</code> and the related setSwitchTypeface() methods control that of the thumb.</section>	https://developer.android.com/reference/android/widget/Switch.html
SwitchCompat	A										<section class="prog__container"><pre><code>public class SwitchCompat</code></pre>SwitchCompat is a version of the Switch widget which on devices back to API v7. It does not make any attempt to use the platform provided widget on those devices which it is available normally.</section>	https://developer.android.com/reference/android/support/v7/widget/SwitchCompat.html
SwitchPreference	D								*[[android.preference.SwitchPreference]], <section class="prog__container"><pre><code>public class SwitchPreference</code></pre>A <code>Preference</code> that provides a two-state toggleable option.</section>\n*[[v14.preference.SwitchPreference]], <section class="prog__container"><pre><code>public class SwitchPreference</code></pre>A <code>Preference</code> that provides a two-state toggleable option.</section>			
SwitchPreferenceCompat	A										<section class="prog__container"><pre><code>public class SwitchPreferenceCompat</code></pre>A <code>Preference</code> that provides a two-state toggleable option.</section>	https://developer.android.com/reference/android/support/v7/preference/SwitchPreferenceCompat.html
SymbolTable	A										<section class="prog__container"><pre><code>public interface SymbolTable</code></pre>An interface that defines both lookup protocol and parsing of symbolic names.</section>	https://developer.android.com/reference/android/icu/text/SymbolTable.html
SyncAdapterType	A										<section class="prog__container"><pre><code>public class SyncAdapterType</code></pre>Value type that represents a SyncAdapterType. This object overrides <code>equals(Object)</code> and <code>hashCode()</code>, making it suitable for use as the key of a <code>Map</code></section>	https://developer.android.com/reference/android/content/SyncAdapterType.html
SyncBaseInstrumentation	A										<section class="prog__container"><pre><code>public class SyncBaseInstrumentation</code></pre><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use InstrumentationRegistry instead. New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/SyncBaseInstrumentation.html
SyncContext	A										<section class="prog__container"><pre><code>public class SyncContext</code></pre></section>	https://developer.android.com/reference/android/content/SyncContext.html
SyncFailedException	A										<section class="prog__container"><pre><code>public class SyncFailedException</code></pre>Signals that a sync operation has failed.</section>	https://developer.android.com/reference/java/io/SyncFailedException.html
SyncInfo	A										<section class="prog__container"><pre><code>public class SyncInfo</code></pre>Information about the sync operation that is currently underway.</section>	https://developer.android.com/reference/android/content/SyncInfo.html
SyncParams	A										<section class="prog__container"><pre><code>public final class SyncParams</code></pre>Structure for common A/V sync params. Used by <code>MediaSync</code> {link MediaSync#getSyncParams()} and {link MediaSync#setSyncParams(SyncParams)} to control A/V sync behavior.</section>	https://developer.android.com/reference/android/media/SyncParams.html
SyncRequest	A										<section class="prog__container"><pre><code>public class SyncRequest</code></pre>Convenience class to construct sync requests. See <code>SyncRequest.Builder</code> for an explanation of the various functions. The resulting object is passed through to the framework via <code>requestSync(SyncRequest)</code>.</section>	https://developer.android.com/reference/android/content/SyncRequest.html
SyncRequest.Builder	A										<section class="prog__container"><pre><code>public static class SyncRequest.Builder</code></pre>Builder class for a <code>SyncRequest</code>. As you build your SyncRequest this class will also perform validation.</section>	https://developer.android.com/reference/android/content/SyncRequest.Builder.html
SyncResult	A										<section class="prog__container"><pre><code>public final class SyncResult</code></pre>This class is used to communicate the results of a sync operation to the SyncManager. Based on the values here the SyncManager will determine the disposition of the sync and whether or not a new sync operation needs to be scheduled in the future.</section>	https://developer.android.com/reference/android/content/SyncResult.html
SyncStateContract	A										<section class="prog__container"><pre><code>public class SyncStateContract</code></pre>The ContentProvider contract for associating data with ana data array account. This may be used by providers that want to store this data in a standard way.</section>	https://developer.android.com/reference/android/provider/SyncStateContract.html
SyncStateContract.Columns	A										<section class="prog__container"><pre><code>public static interface SyncStateContract.Columns</code></pre></section>	https://developer.android.com/reference/android/provider/SyncStateContract.Columns.html
SyncStateContract.Constants	A										<section class="prog__container"><pre><code>public static class SyncStateContract.Constants</code></pre></section>	https://developer.android.com/reference/android/provider/SyncStateContract.Constants.html
SyncStateContract.Helpers	A										<section class="prog__container"><pre><code>public static final class SyncStateContract.Helpers</code></pre></section>	https://developer.android.com/reference/android/provider/SyncStateContract.Helpers.html
SyncStats	A										<section class="prog__container"><pre><code>public class SyncStats</code></pre>Used to record various statistics about the result of a sync operation. The SyncManager gets access to these via a <code>SyncResult</code> and uses some of them to determine the disposition of the sync. See <code>SyncResult</code> for further dicussion on how the SyncManager uses these values.</section>	https://developer.android.com/reference/android/content/SyncStats.html
SyncStatusObserver	A										<section class="prog__container"><pre><code>public interface SyncStatusObserver</code></pre></section>	https://developer.android.com/reference/android/content/SyncStatusObserver.html
SynchronousQueue	A										<section class="prog__container"><pre><code>public class SynchronousQueue</code></pre>A blocking queue</section>	https://developer.android.com/reference/java/util/concurrent/SynchronousQueue.html
SynthesisCallback	A										<section class="prog__container"><pre><code>public interface SynthesisCallback</code></pre>A callback to return speech data synthesized by a text to speech engine. The engine can provide streaming audio by calling <code>start(int, int, int)</code>, then <code>audioAvailable(byte[], int, int)</code> until all audio has been provided, then finally <code>done()</code>. <code>error()</code> can be called at any stage in the synthesis process to indicate that an error has occurred, but if the call is made after a call to <code>done()</code>, it might be discarded. <code>done()</code> must be called at the end of synthesis, regardless of errors. All methods can be only called on the synthesis thread.</section>	https://developer.android.com/reference/android/speech/tts/SynthesisCallback.html
SynthesisRequest	A										<section class="prog__container"><pre><code>public final class SynthesisRequest</code></pre>Contains data required by engines to synthesize speech. This data is: <ul> <li>The text to synthesize</li> <li>The synthesis locale, represented as a language, country and a variant. The language is an ISO 639-3 letter language code, and the country is an ISO 3166 alpha 3 code. The variant is not specified.</li> <li>The name of the voice requested for this synthesis. May be empty if the client uses <code>setLanguage(Locale)</code> instead of <code>setVoice(Voice)</code></li> <li>The synthesis speech rate, with 100 being the normal, and higher values representing higher speech rates.</li> <li>The voice pitch, with 100 being the default pitch.</li> </ul> Any additional parameters sent to the text to speech service are passed in uninterpreted, see the <code>params</code> argument in <code>speak(CharSequence, int, Bundle, String)</code> and <code>synthesizeToFile(CharSequence, Bundle, File, String)</code>.</section>	https://developer.android.com/reference/android/speech/tts/SynthesisRequest.html
System	A										<section class="prog__container"><pre><code>public final class System</code></pre>The <code>System</code> class contains several useful class fields and methods. It cannot be instantiated.</section>	https://developer.android.com/reference/java/lang/System.html
SystemClock	A										<section class="prog__container"><pre><code>public final class SystemClock</code></pre>Core timekeeping facilities.</section>	https://developer.android.com/reference/android/os/SystemClock.html
SystemHealthManager	A										<section class="prog__container"><pre><code>public class SystemHealthManager</code></pre>Provides access to data about how various system resources are used by applications.</section>	https://developer.android.com/reference/android/os/health/SystemHealthManager.html
SystemUpdatePolicy	A										<section class="prog__container"><pre><code>public class SystemUpdatePolicy</code></pre>A class that represents a local system update policy set by the device owner.</section>	https://developer.android.com/reference/android/app/admin/SystemUpdatePolicy.html
TabActivity	A										<section class="prog__container"><pre><code>public class TabActivity</code></pre><p class="caution"><strong> This class was deprecated in API level 13.</strong><br/> New applications should use Fragments instead of this class; to continue to run on older devices, you can use the v4 support library which provides a version of the Fragment API that is compatible down to <code>DONUT</code>.</section>	https://developer.android.com/reference/android/app/TabActivity.html
TabHost	A										<section class="prog__container"><pre><code>public class TabHost</code></pre>Container for a tabbed window view. This object holds two children: a set of tab labels that the user clicks to select a specific tab, and a FrameLayout object that displays the contents of that page. The individual elements are typically controlled using this container object, rather than setting values on the child elements themselves.</section>	https://developer.android.com/reference/android/widget/TabHost.html
TabHost.OnTabChangeListener	A										<section class="prog__container"><pre><code>public static interface TabHost.OnTabChangeListener</code></pre>Interface definition for a callback to be invoked when tab changed</section>	https://developer.android.com/reference/android/widget/TabHost.OnTabChangeListener.html
TabHost.TabContentFactory	A										<section class="prog__container"><pre><code>public static interface TabHost.TabContentFactory</code></pre>Makes the content of a tab when it is selected. Use this if your tab content needs to be created on demand, i.e. you are not showing an existing view or starting an activity.</section>	https://developer.android.com/reference/android/widget/TabHost.TabContentFactory.html
TabHost.TabSpec	A										<section class="prog__container"><pre><code>public class TabHost.TabSpec</code></pre>A tab has a tab indicator, content, and a tag that is used to keep track of it. This builder helps choose among these options. For the tab indicator, your choices are: 1) set a label 2) set a label and an icon For the tab content, your choices are: 1) the id of a <code>View</code> 2) a <code>TabHost.TabContentFactory</code> that creates the <code>View</code> content. 3) an <code>Intent</code> that launches an <code>Activity</code>.</section>	https://developer.android.com/reference/android/widget/TabHost.TabSpec.html
TabItem	A										<section class="prog__container"><pre><code>public final class TabItem</code></pre>TabItem is a special 'view' which allows you to declare tab items for a <code>TabLayout</code> within a layout. This view is not actually added to TabLayout, it is just a dummy which allows setting of a tab items's text, icon and custom layout. See TabLayout for more information on how to use it.</section>	https://developer.android.com/reference/android/support/design/widget/TabItem.html
TabLayout	A										<section class="prog__container"><pre><code>public class TabLayout</code></pre>TabLayout provides a horizontal layout to display tabs.</section>	https://developer.android.com/reference/android/support/design/widget/TabLayout.html
TabLayout.OnTabSelectedListener	A										<section class="prog__container"><pre><code>public static interface TabLayout.OnTabSelectedListener</code></pre>Callback interface invoked when a tab's selection state changes.</section>	https://developer.android.com/reference/android/support/design/widget/TabLayout.OnTabSelectedListener.html
TabLayout.Tab	A										<section class="prog__container"><pre><code>public static final class TabLayout.Tab</code></pre>A tab in this layout. Instances can be created via <code>newTab()</code>.</section>	https://developer.android.com/reference/android/support/design/widget/TabLayout.Tab.html
TabLayout.TabLayoutOnPageChangeListener	A										<section class="prog__container"><pre><code>public static class TabLayout.TabLayoutOnPageChangeListener</code></pre>A <code>ViewPager.OnPageChangeListener</code> class which contains the necessary calls back to the provided <code>TabLayout</code> so that the tab position is kept in sync.</section>	https://developer.android.com/reference/android/support/design/widget/TabLayout.TabLayoutOnPageChangeListener.html
TabLayout.ViewPagerOnTabSelectedListener	A										<section class="prog__container"><pre><code>public static class TabLayout.ViewPagerOnTabSelectedListener</code></pre>A <code>TabLayout.OnTabSelectedListener</code> class which contains the necessary calls back to the provided <code>ViewPager</code> so that the tab position is kept in sync.</section>	https://developer.android.com/reference/android/support/design/widget/TabLayout.ViewPagerOnTabSelectedListener.html
TabStopSpan	A										<section class="prog__container"><pre><code>public interface TabStopSpan</code></pre>Represents a single tab stop on a line.</section>	https://developer.android.com/reference/android/text/style/TabStopSpan.html
TabStopSpan.Standard	A										<section class="prog__container"><pre><code>public static class TabStopSpan.Standard</code></pre>The default implementation of TabStopSpan.</section>	https://developer.android.com/reference/android/text/style/TabStopSpan.Standard.html
TabWidget	A										<section class="prog__container"><pre><code>public class TabWidget</code></pre>Displays a list of tab labels representing each page in the parent's tab collection.</section>	https://developer.android.com/reference/android/widget/TabWidget.html
TableLayout	A										<section class="prog__container"><pre><code>public class TableLayout</code></pre></section>	https://developer.android.com/reference/android/widget/TableLayout.html
TableLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class TableLayout.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/widget/TableLayout.LayoutParams.html
TableRow	A										<section class="prog__container"><pre><code>public class TableRow</code></pre></section>	https://developer.android.com/reference/android/widget/TableRow.html
TableRow.LayoutParams	A										<section class="prog__container"><pre><code>public static class TableRow.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/widget/TableRow.LayoutParams.html
Tag	A										<section class="prog__container"><pre><code>public final class Tag</code></pre>Represents an NFC tag that has been discovered.</section>	https://developer.android.com/reference/android/nfc/Tag.html
TagLostException	A										<section class="prog__container"><pre><code>public class TagLostException</code></pre></section>	https://developer.android.com/reference/android/nfc/TagLostException.html
TagTechnology	A										<section class="prog__container"><pre><code>public interface TagTechnology</code></pre><code>TagTechnology</code> is an interface to a technology in a <code>Tag</code>.</section>	https://developer.android.com/reference/android/nfc/tech/TagTechnology.html
TaiwanCalendar	A										<section class="prog__container"><pre><code>public class TaiwanCalendar</code></pre><code>TaiwanCalendar</code> is a subclass of <code>GregorianCalendar</code> that numbers years since 1912.</section>	https://developer.android.com/reference/android/icu/util/TaiwanCalendar.html
Target	D								*[[graphics.Target]], <section class="prog__container"><pre><code>public final class Target</code></pre>A class which allows custom selection of colors in a <code>Palette</code>'s generation. Instances can be created via the <code>Target.Builder</code> class.</section>\n*[[annotation.Target]], <section class="prog__container"><pre><code>public abstract @interface Target</code></pre>Indicates the kinds of program element to which an annotation type is applicable. If a Target meta-annotation is not present on an annotation type declaration, the declared type may be used on any program element. If such a meta-annotation is present, the compiler will enforce the specified usage restriction. For example, this meta-annotation indicates that the declared type is itself a meta-annotation type. It can only be used on annotation type declarations: <pre> @Target(ElementType.ANNOTATION_TYPE) public @interface MetaAnnotationType { ... } </pre> This meta-annotation indicates that the declared type is intended solely for use as a member type in complex annotation type declarations. It cannot be used to annotate anything directly: <pre> @Target({}) public @interface MemberType { ... } </pre> It is a compile-time error for a single ElementType constant to appear more than once in a Target annotation. For example, the following meta-annotation is illegal: <pre> @Target({ElementType.FIELD, ElementType.METHOD, ElementType.FIELD}) public @interface Bogus { ... } </pre></section>			
Target.Builder	A										<section class="prog__container"><pre><code>public static final class Target.Builder</code></pre>Builder class for generating custom <code>Target</code> instances.</section>	https://developer.android.com/reference/android/support/v7/graphics/Target.Builder.html
TargetApi	A										<section class="prog__container"><pre><code>public abstract @interface TargetApi</code></pre>Indicates that Lint should treat this type as targeting a given API level, no matter what the project target is.</section>	https://developer.android.com/reference/android/annotation/TargetApi.html
TaskStackBuilder	D								*[[android.app.TaskStackBuilder]], <section class="prog__container"><pre><code>public class TaskStackBuilder</code></pre>Utility class for constructing synthetic back stacks for cross-task navigation on Android 3.0 and newer.</section>\n*[[v4.app.TaskStackBuilder]], <section class="prog__container"><pre><code>public final class TaskStackBuilder</code></pre>Utility class for constructing synthetic back stacks for cross-task navigation on Android 3.0 and newer.</section>			
TaskStackBuilder.SupportParentable	A										<section class="prog__container"><pre><code>public static interface TaskStackBuilder.SupportParentable</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/TaskStackBuilder.SupportParentable.html
TelecomManager	A										<section class="prog__container"><pre><code>public class TelecomManager</code></pre>Provides access to information about active calls and registration/call-management functionality. Apps can use methods in this class to determine the current call state.</section>	https://developer.android.com/reference/android/telecom/TelecomManager.html
Telephony	A										<section class="prog__container"><pre><code>public final class Telephony</code></pre>The Telephony provider contains data related to phone operation, specifically SMS and MMS messages and access to the APN list, including the MMSC to use. <p class="note"><strong>Note:</strong> These APIs are not available on all Android-powered devices. If your app depends on telephony features such as for managing SMS messages, include a <code>&lt;uses-feature&gt;</code> element in your manifest that declares the <code>"android.hardware.telephony"</code> hardware feature. Alternatively, you can check for telephony availability at runtime using either <code>hasSystemFeature(PackageManager.FEATURE_TELEPHONY)</code> or <code>getPhoneType()</code>.</section>	https://developer.android.com/reference/android/provider/Telephony.html
Telephony.BaseMmsColumns	A										<section class="prog__container"><pre><code>public static interface Telephony.BaseMmsColumns</code></pre>Base columns for tables that contain MMSs.</section>	https://developer.android.com/reference/android/provider/Telephony.BaseMmsColumns.html
Telephony.CanonicalAddressesColumns	A										<section class="prog__container"><pre><code>public static interface Telephony.CanonicalAddressesColumns</code></pre>Columns for the "canonical_addresses" table used by MMS and SMS.</section>	https://developer.android.com/reference/android/provider/Telephony.CanonicalAddressesColumns.html
Telephony.Carriers	A										<section class="prog__container"><pre><code>public static final class Telephony.Carriers</code></pre>Carriers class contains information about APNs, including MMSC information.</section>	https://developer.android.com/reference/android/provider/Telephony.Carriers.html
Telephony.Mms	A										<section class="prog__container"><pre><code>public static final class Telephony.Mms</code></pre>Contains all MMS messages.</section>	https://developer.android.com/reference/android/provider/Telephony.Mms.html
Telephony.Mms.Addr	A										<section class="prog__container"><pre><code>public static final class Telephony.Mms.Addr</code></pre>Contains address information for an MMS message.</section>	https://developer.android.com/reference/android/provider/Telephony.Mms.Addr.html
Telephony.Mms.Draft	A										<section class="prog__container"><pre><code>public static final class Telephony.Mms.Draft</code></pre>Contains all MMS messages in the MMS app drafts folder.</section>	https://developer.android.com/reference/android/provider/Telephony.Mms.Draft.html
Telephony.Mms.Inbox	A										<section class="prog__container"><pre><code>public static final class Telephony.Mms.Inbox</code></pre>Contains all MMS messages in the MMS app inbox.</section>	https://developer.android.com/reference/android/provider/Telephony.Mms.Inbox.html
Telephony.Mms.Intents	A										<section class="prog__container"><pre><code>public static final class Telephony.Mms.Intents</code></pre>Intents class.</section>	https://developer.android.com/reference/android/provider/Telephony.Mms.Intents.html
Telephony.Mms.Outbox	A										<section class="prog__container"><pre><code>public static final class Telephony.Mms.Outbox</code></pre>Contains all MMS messages in the MMS app outbox.</section>	https://developer.android.com/reference/android/provider/Telephony.Mms.Outbox.html
Telephony.Mms.Part	A										<section class="prog__container"><pre><code>public static final class Telephony.Mms.Part</code></pre>Contains message parts.</section>	https://developer.android.com/reference/android/provider/Telephony.Mms.Part.html
Telephony.Mms.Rate	A										<section class="prog__container"><pre><code>public static final class Telephony.Mms.Rate</code></pre>Message send rate table.</section>	https://developer.android.com/reference/android/provider/Telephony.Mms.Rate.html
Telephony.Mms.Sent	A										<section class="prog__container"><pre><code>public static final class Telephony.Mms.Sent</code></pre>Contains all MMS messages in the MMS app sent folder.</section>	https://developer.android.com/reference/android/provider/Telephony.Mms.Sent.html
Telephony.MmsSms	A										<section class="prog__container"><pre><code>public static final class Telephony.MmsSms</code></pre>Contains all MMS and SMS messages.</section>	https://developer.android.com/reference/android/provider/Telephony.MmsSms.html
Telephony.MmsSms.PendingMessages	A										<section class="prog__container"><pre><code>public static final class Telephony.MmsSms.PendingMessages</code></pre>Contains pending messages info.</section>	https://developer.android.com/reference/android/provider/Telephony.MmsSms.PendingMessages.html
Telephony.Sms	A										<section class="prog__container"><pre><code>public static final class Telephony.Sms</code></pre>Contains all text-based SMS messages.</section>	https://developer.android.com/reference/android/provider/Telephony.Sms.html
Telephony.Sms.Conversations	A										<section class="prog__container"><pre><code>public static final class Telephony.Sms.Conversations</code></pre>Contains all sent text-based SMS messages in the SMS app.</section>	https://developer.android.com/reference/android/provider/Telephony.Sms.Conversations.html
Telephony.Sms.Draft	A										<section class="prog__container"><pre><code>public static final class Telephony.Sms.Draft</code></pre>Contains all sent text-based SMS messages in the SMS app.</section>	https://developer.android.com/reference/android/provider/Telephony.Sms.Draft.html
Telephony.Sms.Inbox	A										<section class="prog__container"><pre><code>public static final class Telephony.Sms.Inbox</code></pre>Contains all text-based SMS messages in the SMS app inbox.</section>	https://developer.android.com/reference/android/provider/Telephony.Sms.Inbox.html
Telephony.Sms.Intents	A										<section class="prog__container"><pre><code>public static final class Telephony.Sms.Intents</code></pre>Contains constants for SMS related Intents that are broadcast.</section>	https://developer.android.com/reference/android/provider/Telephony.Sms.Intents.html
Telephony.Sms.Outbox	A										<section class="prog__container"><pre><code>public static final class Telephony.Sms.Outbox</code></pre>Contains all pending outgoing text-based SMS messages.</section>	https://developer.android.com/reference/android/provider/Telephony.Sms.Outbox.html
Telephony.Sms.Sent	A										<section class="prog__container"><pre><code>public static final class Telephony.Sms.Sent</code></pre>Contains all sent text-based SMS messages in the SMS app.</section>	https://developer.android.com/reference/android/provider/Telephony.Sms.Sent.html
Telephony.TextBasedSmsColumns	A										<section class="prog__container"><pre><code>public static interface Telephony.TextBasedSmsColumns</code></pre>Base columns for tables that contain text-based SMSs.</section>	https://developer.android.com/reference/android/provider/Telephony.TextBasedSmsColumns.html
Telephony.Threads	A										<section class="prog__container"><pre><code>public static final class Telephony.Threads</code></pre>Helper functions for the "threads" table used by MMS and SMS.</section>	https://developer.android.com/reference/android/provider/Telephony.Threads.html
Telephony.ThreadsColumns	A										<section class="prog__container"><pre><code>public static interface Telephony.ThreadsColumns</code></pre>Columns for the "threads" table used by MMS and SMS.</section>	https://developer.android.com/reference/android/provider/Telephony.ThreadsColumns.html
TelephonyManager	A										<section class="prog__container"><pre><code>public class TelephonyManager</code></pre>Provides access to information about the telephony services on the device. Applications can use the methods in this class to determine telephony services and states, as well as to access some types of subscriber information. Applications can also register a listener to receive notification of telephony state changes.</section>	https://developer.android.com/reference/android/telephony/TelephonyManager.html
Templates	A										<section class="prog__container"><pre><code>public interface Templates</code></pre>An object that implements this interface is the runtime representation of processed transformation instructions.</section>	https://developer.android.com/reference/javax/xml/transform/Templates.html
TemplatesHandler	A										<section class="prog__container"><pre><code>public interface TemplatesHandler</code></pre>A SAX ContentHandler that may be used to process SAX parse events (parsing transformation instructions) into a Templates object.</section>	https://developer.android.com/reference/javax/xml/transform/sax/TemplatesHandler.html
Test	A										<section class="prog__container"><pre><code>public interface Test</code></pre>A <em>Test</em> can be run and collect its results.</section>	https://developer.android.com/reference/junit/framework/Test.html
TestCase	A										<section class="prog__container"><pre><code>public abstract class TestCase</code></pre>A test case defines the fixture to run multiple tests. To define a test case<br/> <ol> <li>implement a subclass of <code>TestCase</code></li> <li>define instance variables that store the state of the fixture</li> <li>initialize the fixture state by overriding <code>setUp()</code></li> <li>clean-up after a test by overriding <code>tearDown()</code>.</li> </ol> Each test runs in its own fixture so there can be no side effects among test runs. Here is an example: <pre> public class MathTest extends TestCase { protected double fValue1; protected double fValue2; protected void setUp() { fValue1= 2.0; fValue2= 3.0; } } </pre> For each test implement a method which interacts with the fixture. Verify the expected results with assertions specified by calling <code>assertTrue(String, boolean)</code> with a boolean. <pre> public void testAdd() { double result= fValue1 + fValue2; assertTrue(result == 5.0); } </pre> Once the methods are defined you can run them. The framework supports both a static type safe and more dynamic way to run a test. In the static way you override the runTest method and define the method to be invoked. A convenient way to do so is with an anonymous inner class. <pre> TestCase test= new MathTest("add") { public void runTest() { testAdd(); } }; test.run(); </pre> The dynamic way uses reflection to implement <code>runTest()</code>. It dynamically finds and invokes a method. In this case the name of the test case has to correspond to the test method to be run. <pre> TestCase test= new MathTest("testAdd"); test.run(); </pre> The tests to be run can be collected into a TestSuite. JUnit provides different <i>test runners</i> which can run a test suite and collect the results. A test runner either expects a static method <code>suite</code> as the entry point to get a test to run or it will extract the suite automatically. <pre> public static Test suite() { suite.addTest(new MathTest("testAdd")); suite.addTest(new MathTest("testDivideByZero")); return suite; } </pre></section>	https://developer.android.com/reference/junit/framework/TestCase.html
TestFailure	A										<section class="prog__container"><pre><code>public class TestFailure</code></pre>A <code>TestFailure</code> collects a failed test together with the caught exception.</section>	https://developer.android.com/reference/junit/framework/TestFailure.html
TestListener	A										<section class="prog__container"><pre><code>public interface TestListener</code></pre>A Listener for test progress</section>	https://developer.android.com/reference/junit/framework/TestListener.html
TestMethod	A										<section class="prog__container"><pre><code>public class TestMethod</code></pre>Represents a test to be run. Can be constructed without instantiating the TestCase or even loading the class.</section>	https://developer.android.com/reference/android/test/suitebuilder/TestMethod.html
TestResult	A										<section class="prog__container"><pre><code>public class TestResult</code></pre>A <code>TestResult</code> collects the results of executing a test case. It is an instance of the Collecting Parameter pattern. The test framework distinguishes between <i>failures</i> and <i>errors</i>. A failure is anticipated and checked for with assertions. Errors are unanticipated problems like an <code>ArrayIndexOutOfBoundsException</code>.</section>	https://developer.android.com/reference/junit/framework/TestResult.html
TestSuite	A										<section class="prog__container"><pre><code>public class TestSuite</code></pre></section>	https://developer.android.com/reference/junit/framework/TestSuite.html
TestSuiteBuilder	A										<section class="prog__container"><pre><code>public class TestSuiteBuilder</code></pre>Build suites based on a combination of included packages, excluded packages, and predicates that must be satisfied.</section>	https://developer.android.com/reference/android/test/suitebuilder/TestSuiteBuilder.html
TestSuiteBuilder.FailedToCreateTests	A										<section class="prog__container"><pre><code>public static class TestSuiteBuilder.FailedToCreateTests</code></pre>A special <code>TestCase</code> used to indicate a failure during the build() step.</section>	https://developer.android.com/reference/android/test/suitebuilder/TestSuiteBuilder.FailedToCreateTests.html
TestSuiteLoader	A										<section class="prog__container"><pre><code>public interface TestSuiteLoader</code></pre>An interface to define how a test suite should be loaded.</section>	https://developer.android.com/reference/junit/runner/TestSuiteLoader.html
TestSuiteProvider	A										<section class="prog__container"><pre><code>public interface TestSuiteProvider</code></pre>Implementors will know how to get a test suite.</section>	https://developer.android.com/reference/android/test/TestSuiteProvider.html
TestTarget	A										<section class="prog__container"><pre><code>public abstract @interface TestTarget</code></pre><p class="caution"><strong> This @interface was deprecated in API level 14.</strong><br/> Obsolete.</section>	https://developer.android.com/reference/dalvik/annotation/TestTarget.html
TestTargetClass	A										<section class="prog__container"><pre><code>public abstract @interface TestTargetClass</code></pre><p class="caution"><strong> This @interface was deprecated in API level 14.</strong><br/> Obsolete.</section>	https://developer.android.com/reference/dalvik/annotation/TestTargetClass.html
Text	A										<section class="prog__container"><pre><code>public interface Text</code></pre>The <code>Text</code> interface inherits from <code>CharacterData</code> and represents the textual content (termed character data in XML) of an <code>Element</code> or <code>Attr</code>. If there is no markup inside an element's content, the text is contained in a single object implementing the <code>Text</code> interface that is the only child of the element. If there is markup, it is parsed into the information items (elements, comments, etc.) and <code>Text</code> nodes that form the list of children of the element.</section>	https://developer.android.com/reference/org/w3c/dom/Text.html
TextAppearanceSpan	A										<section class="prog__container"><pre><code>public class TextAppearanceSpan</code></pre>Sets the text color, size, style, and typeface to match a TextAppearance resource.</section>	https://developer.android.com/reference/android/text/style/TextAppearanceSpan.html
TextAttribute	A										<section class="prog__container"><pre><code>public final class TextAttribute</code></pre>The <code>TextAttribute</code> class defines attribute keys and attribute values used for text rendering.</section>	https://developer.android.com/reference/java/awt/font/TextAttribute.html
TextClock	A										<section class="prog__container"><pre><code>public class TextClock</code></pre></section>	https://developer.android.com/reference/android/widget/TextClock.html
TextDirectionHeuristic	A										<section class="prog__container"><pre><code>public interface TextDirectionHeuristic</code></pre>Interface for objects that use a heuristic for guessing at the paragraph direction by examining text.</section>	https://developer.android.com/reference/android/text/TextDirectionHeuristic.html
TextDirectionHeuristicCompat	A										<section class="prog__container"><pre><code>public interface TextDirectionHeuristicCompat</code></pre>Interface for objects that use a heuristic for guessing at the paragraph direction by examining text.</section>	https://developer.android.com/reference/android/support/v4/text/TextDirectionHeuristicCompat.html
TextDirectionHeuristics	A										<section class="prog__container"><pre><code>public class TextDirectionHeuristics</code></pre>Some objects that implement <code>TextDirectionHeuristic</code>. Use these with the <code>unicodeWrap()</code> methods in <code>BidiFormatter</code>. Also notice that these direction heuristics correspond to the same types of constants provided in the <code>View</code> class for <code>setTextDirection()</code>, such as <code>TEXT_DIRECTION_RTL</code>.</section>	https://developer.android.com/reference/android/text/TextDirectionHeuristics.html
TextDirectionHeuristicsCompat	A										<section class="prog__container"><pre><code>public final class TextDirectionHeuristicsCompat</code></pre>Some objects that implement TextDirectionHeuristic.</section>	https://developer.android.com/reference/android/support/v4/text/TextDirectionHeuristicsCompat.html
TextElementListener	A										<section class="prog__container"><pre><code>public interface TextElementListener</code></pre>Listens for the beginning and ending of text elements.</section>	https://developer.android.com/reference/android/sax/TextElementListener.html
TextInfo	A										<section class="prog__container"><pre><code>public final class TextInfo</code></pre>This class contains a metadata of the input of TextService</section>	https://developer.android.com/reference/android/view/textservice/TextInfo.html
TextInputEditText	A										<section class="prog__container"><pre><code>public class TextInputEditText</code></pre>A special sub-class of <code>EditText</code> designed for use as a child of <code>TextInputLayout</code>.</section>	https://developer.android.com/reference/android/support/design/widget/TextInputEditText.html
TextInputLayout	A										<section class="prog__container"><pre><code>public class TextInputLayout</code></pre>Layout which wraps an <code>EditText</code> (or descendant) to show a floating label when the hint is hidden due to the user inputting text.</section>	https://developer.android.com/reference/android/support/design/widget/TextInputLayout.html
TextKeyListener	A										<section class="prog__container"><pre><code>public class TextKeyListener</code></pre>This is the key listener for typing normal text. It delegates to other key listeners appropriate to the current keyboard and language.</section>	https://developer.android.com/reference/android/text/method/TextKeyListener.html
TextKeyListener.Capitalize	A										<section class="prog__container"><pre><code>public static final enum TextKeyListener.Capitalize</code></pre></section>	https://developer.android.com/reference/android/text/method/TextKeyListener.Capitalize.html
TextPaint	A										<section class="prog__container"><pre><code>public class TextPaint</code></pre>TextPaint is an extension of Paint that leaves room for some extra data used during text measuring and drawing.</section>	https://developer.android.com/reference/android/text/TextPaint.html
TextServicesManager	A										<section class="prog__container"><pre><code>public final class TextServicesManager</code></pre>System API to the overall text services, which arbitrates interaction between applications and text services. You can retrieve an instance of this interface with <code>Context.getSystemService()</code>. The user can change the current text services in Settings. And also applications can specify the target text services. <h3>Architecture Overview</h3></section>	https://developer.android.com/reference/android/view/textservice/TextServicesManager.html
TextSwitcher	A										<section class="prog__container"><pre><code>public class TextSwitcher</code></pre>Specialized <code>ViewSwitcher</code> that contains only children of type <code>TextView</code>. A TextSwitcher is useful to animate a label on screen. Whenever <code>setText(CharSequence)</code> is called, TextSwitcher animates the current text out and animates the new text in.</section>	https://developer.android.com/reference/android/widget/TextSwitcher.html
TextToSpeech	A										<section class="prog__container"><pre><code>public class TextToSpeech</code></pre>Synthesizes speech from text for immediate playback or to create a sound file.</section>	https://developer.android.com/reference/android/speech/tts/TextToSpeech.html
TextToSpeech.Engine	A										<section class="prog__container"><pre><code>public class TextToSpeech.Engine</code></pre>Constants and parameter names for controlling text-to-speech. These include: <ul> <li> Intents to ask engine to install data or check its data and extras for a TTS engine's check data activity. </li> <li> Keys for the parameters passed with speak commands, e.g. <code>KEY_PARAM_UTTERANCE_ID</code>, <code>KEY_PARAM_STREAM</code>. </li> <li> A list of feature strings that engines might support, e.g <code>KEY_FEATURE_NETWORK_SYNTHESIS</code>. These values may be passed in to <code>speak(CharSequence, int, Bundle, String)</code> and <code>synthesizeToFile(CharSequence, Bundle, File, String)</code> to modify engine behaviour. The engine can be queried for the set of features it supports through <code>getFeatures(java.util.Locale)</code>. </li> </ul></section>	https://developer.android.com/reference/android/speech/tts/TextToSpeech.Engine.html
TextToSpeech.EngineInfo	A										<section class="prog__container"><pre><code>public static class TextToSpeech.EngineInfo</code></pre>Information about an installed text-to-speech engine.</section>	https://developer.android.com/reference/android/speech/tts/TextToSpeech.EngineInfo.html
TextToSpeech.OnInitListener	A										<section class="prog__container"><pre><code>public static interface TextToSpeech.OnInitListener</code></pre>Interface definition of a callback to be invoked indicating the completion of the TextToSpeech engine initialization.</section>	https://developer.android.com/reference/android/speech/tts/TextToSpeech.OnInitListener.html
TextToSpeech.OnUtteranceCompletedListener	A										<section class="prog__container"><pre><code>public static interface TextToSpeech.OnUtteranceCompletedListener</code></pre><p class="caution"><strong> This interface was deprecated in API level 18.</strong><br/> Use <code>UtteranceProgressListener</code> instead.</section>	https://developer.android.com/reference/android/speech/tts/TextToSpeech.OnUtteranceCompletedListener.html
TextToSpeechService	A										<section class="prog__container"><pre><code>public abstract class TextToSpeechService</code></pre>Abstract base class for TTS engine implementations. The following methods need to be implemented: <ul> <li><code>onIsLanguageAvailable(String, String, String)</code></li> <li><code>onLoadLanguage(String, String, String)</code></li> <li><code>onGetLanguage()</code></li> <li><code>onSynthesizeText(SynthesisRequest, SynthesisCallback)</code></li> <li><code>onStop()</code></li> </ul> The first three deal primarily with language management, and are used to query the engine for it's support for a given language and indicate to it that requests in a given language are imminent. <code>onSynthesizeText(SynthesisRequest, SynthesisCallback)</code> is central to the engine implementation. The implementation should synthesize text as per the request parameters and return synthesized data via the supplied callback. This class and its helpers will then consume that data, which might mean queuing it for playback or writing it to a file or similar. All calls to this method will be on a single thread, which will be different from the main thread of the service. Synthesis must be synchronous which means the engine must NOT hold on to the callback or call any methods on it after the method returns. <code>onStop()</code> tells the engine that it should stop all ongoing synthesis, if any. Any pending data from the current synthesis will be discarded. <code>onGetLanguage()</code> is not required as of JELLYBEAN_MR2 (API 18) and later, it is only called on earlier versions of Android. API Level 20 adds support for Voice objects. Voices are an abstraction that allow the TTS service to expose multiple backends for a single locale. Each one of them can have a different features set. In order to fully take advantage of voices, an engine should implement the following methods: <ul> <li><code>onGetVoices()</code></li> <li><code>onIsValidVoiceName(String)</code></li> <li><code>onLoadVoice(String)</code></li> <li><code>onGetDefaultVoiceNameFor(String, String, String)</code></li> </ul> The first three methods are siblings of the <code>onGetLanguage()</code>, <code>onIsLanguageAvailable(String, String, String)</code> and <code>onLoadLanguage(String, String, String)</code> methods. The last one, <code>onGetDefaultVoiceNameFor(String, String, String)</code> is a link between locale and voice based methods. Since API level 21 <code>setLanguage(Locale)</code> is implemented by calling <code>setVoice(Voice)</code> with the voice returned by <code>onGetDefaultVoiceNameFor(String, String, String)</code>. If the client uses a voice instead of a locale, <code>SynthesisRequest</code> will contain the requested voice name. The default implementations of Voice-related methods implement them using the pre-existing locale-based implementation.</section>	https://developer.android.com/reference/android/speech/tts/TextToSpeechService.html
TextUtils	A										<section class="prog__container"><pre><code>public class TextUtils</code></pre></section>	https://developer.android.com/reference/android/text/TextUtils.html
TextUtils.EllipsizeCallback	A										<section class="prog__container"><pre><code>public static interface TextUtils.EllipsizeCallback</code></pre></section>	https://developer.android.com/reference/android/text/TextUtils.EllipsizeCallback.html
TextUtils.SimpleStringSplitter	A										<section class="prog__container"><pre><code>public static class TextUtils.SimpleStringSplitter</code></pre>A simple string splitter.</section>	https://developer.android.com/reference/android/text/TextUtils.SimpleStringSplitter.html
TextUtils.StringSplitter	A										<section class="prog__container"><pre><code>public static interface TextUtils.StringSplitter</code></pre>An interface for splitting strings according to rules that are opaque to the user of this interface. This also has less overhead than split, which uses regular expressions and allocates an array to hold the results.</section>	https://developer.android.com/reference/android/text/TextUtils.StringSplitter.html
TextUtils.TruncateAt	A										<section class="prog__container"><pre><code>public static final enum TextUtils.TruncateAt</code></pre></section>	https://developer.android.com/reference/android/text/TextUtils.TruncateAt.html
TextUtilsCompat	A										<section class="prog__container"><pre><code>public final class TextUtilsCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/text/TextUtilsCompat.html
TextView	A										<section class="prog__container"><pre><code>public class TextView</code></pre>Displays text to the user and optionally allows them to edit it. A TextView is a complete text editor, however the basic class is configured to not allow editing; see <code>EditText</code> for a subclass that configures the text view for editing.</section>	https://developer.android.com/reference/android/widget/TextView.html
TextView.BufferType	A										<section class="prog__container"><pre><code>public static final enum TextView.BufferType</code></pre></section>	https://developer.android.com/reference/android/widget/TextView.BufferType.html
TextView.OnEditorActionListener	A										<section class="prog__container"><pre><code>public static interface TextView.OnEditorActionListener</code></pre>Interface definition for a callback to be invoked when an action is performed on the editor.</section>	https://developer.android.com/reference/android/widget/TextView.OnEditorActionListener.html
TextView.SavedState	A										<section class="prog__container"><pre><code>public static class TextView.SavedState</code></pre>User interface state that is stored by TextView for implementing <code>onSaveInstanceState()</code>.</section>	https://developer.android.com/reference/android/widget/TextView.SavedState.html
TextViewCompat	A										<section class="prog__container"><pre><code>public final class TextViewCompat</code></pre>Helper for accessing features in <code>TextView</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/widget/TextViewCompat.html
TextWatcher	A										<section class="prog__container"><pre><code>public interface TextWatcher</code></pre>When an object of a type is attached to an Editable, its methods will be called when the text is changed.</section>	https://developer.android.com/reference/android/text/TextWatcher.html
TextureView	A										<section class="prog__container"><pre><code>public class TextureView</code></pre></section>	https://developer.android.com/reference/android/view/TextureView.html
TextureView.SurfaceTextureListener	A										<section class="prog__container"><pre><code>public static interface TextureView.SurfaceTextureListener</code></pre>This listener can be used to be notified when the surface texture associated with this texture view is available.</section>	https://developer.android.com/reference/android/view/TextureView.SurfaceTextureListener.html
ThemedSpinnerAdapter	D								*[[v7.widget.ThemedSpinnerAdapter]], <section class="prog__container"><pre><code>public interface ThemedSpinnerAdapter</code></pre>An extension of SpinnerAdapter that is capable of inflating drop-down views against a different theme than normal views.</section>\n*[[android.widget.ThemedSpinnerAdapter]], <section class="prog__container"><pre><code>public interface ThemedSpinnerAdapter</code></pre>An extension of SpinnerAdapter that is capable of inflating drop-down views against a different theme than normal views.</section>			
ThemedSpinnerAdapter.Helper	A										<section class="prog__container"><pre><code>public static final class ThemedSpinnerAdapter.Helper</code></pre>A helper class which allows easy integration of <code>ThemedSpinnerAdapter</code> into existing <code>SpinnerAdapter</code>s in a backwards compatible way.</section>	https://developer.android.com/reference/android/support/v7/widget/ThemedSpinnerAdapter.Helper.html
Thread	A										<section class="prog__container"><pre><code>public class Thread</code></pre>A <i>thread</i> is a thread of execution in a program. The Java Virtual Machine allows an application to have multiple threads of execution running concurrently.</section>	https://developer.android.com/reference/java/lang/Thread.html
Thread.State	A										<section class="prog__container"><pre><code>public static final enum Thread.State</code></pre>A thread state. A thread can be in one of the following states: <ul> <li><code>NEW</code><br> A thread that has not yet started is in this state. </br></li> <li><code>RUNNABLE</code><br> A thread executing in the Java virtual machine is in this state. </br></li> <li><code>BLOCKED</code><br> A thread that is blocked waiting for a monitor lock is in this state. </br></li> <li><code>WAITING</code><br> A thread that is waiting indefinitely for another thread to perform a particular action is in this state. </br></li> <li><code>TIMED_WAITING</code><br> A thread that is waiting for another thread to perform an action for up to a specified waiting time is in this state. </br></li> <li><code>TERMINATED</code><br> A thread that has exited is in this state. </br></li> </ul></section>	https://developer.android.com/reference/java/lang/Thread.State.html
Thread.UncaughtExceptionHandler	A										<section class="prog__container"><pre><code>public static interface Thread.UncaughtExceptionHandler</code></pre>Interface for handlers invoked when a <tt>Thread</tt> abruptly terminates due to an uncaught exception.</section>	https://developer.android.com/reference/java/lang/Thread.UncaughtExceptionHandler.html
ThreadDeath	A										<section class="prog__container"><pre><code>public class ThreadDeath</code></pre>An instance of <code>ThreadDeath</code> is thrown in the victim thread when the (deprecated) <code>stop()</code> method is invoked.</section>	https://developer.android.com/reference/java/lang/ThreadDeath.html
ThreadFactory	A										<section class="prog__container"><pre><code>public interface ThreadFactory</code></pre>An object that creates new threads on demand. Using thread factories removes hardwiring of calls to <code>new Thread</code>, enabling applications to use special thread subclasses, priorities, etc.</section>	https://developer.android.com/reference/java/util/concurrent/ThreadFactory.html
ThreadGroup	A										<section class="prog__container"><pre><code>public class ThreadGroup</code></pre>A thread group represents a set of threads. In addition, a thread group can also include other thread groups. The thread groups form a tree in which every thread group except the initial thread group has a parent.</section>	https://developer.android.com/reference/java/lang/ThreadGroup.html
ThreadLocal	A										<section class="prog__container"><pre><code>public class ThreadLocal</code></pre>This class provides thread-local variables. These variables differ from their normal counterparts in that each thread that accesses one (via its <tt>get</tt> or <tt>set</tt> method) has its own, independently initialized copy of the variable. <tt>ThreadLocal</tt> instances are typically private static fields in classes that wish to associate state with a thread (e.g., a user ID or Transaction ID).</section>	https://developer.android.com/reference/java/lang/ThreadLocal.html
ThreadLocalRandom	A										<section class="prog__container"><pre><code>public class ThreadLocalRandom</code></pre>A random number generator isolated to the current thread. Like the global <code>Random</code> generator used by the <code>Math</code> class, a <code>ThreadLocalRandom</code> is initialized with an internally generated seed that may not otherwise be modified. When applicable, use of <code>ThreadLocalRandom</code> rather than shared <code>Random</code> objects in concurrent programs will typically encounter much less overhead and contention. Use of <code>ThreadLocalRandom</code> is particularly appropriate when multiple tasks (for example, each a <code>ForkJoinTask</code>) use random numbers in parallel in thread pools.</section>	https://developer.android.com/reference/java/util/concurrent/ThreadLocalRandom.html
ThreadPoolExecutor	A										<section class="prog__container"><pre><code>public class ThreadPoolExecutor</code></pre>An <code>ExecutorService</code> that executes each submitted task using one of possibly several pooled threads, normally configured using <code>Executors</code> factory methods.</section>	https://developer.android.com/reference/java/util/concurrent/ThreadPoolExecutor.html
ThreadPoolExecutor.AbortPolicy	A										<section class="prog__container"><pre><code>public static class ThreadPoolExecutor.AbortPolicy</code></pre>A handler for rejected tasks that throws a <code>RejectedExecutionException</code>.</section>	https://developer.android.com/reference/java/util/concurrent/ThreadPoolExecutor.AbortPolicy.html
ThreadPoolExecutor.CallerRunsPolicy	A										<section class="prog__container"><pre><code>public static class ThreadPoolExecutor.CallerRunsPolicy</code></pre>A handler for rejected tasks that runs the rejected task directly in the calling thread of the <code>execute</code> method, unless the executor has been shut down, in which case the task is discarded.</section>	https://developer.android.com/reference/java/util/concurrent/ThreadPoolExecutor.CallerRunsPolicy.html
ThreadPoolExecutor.DiscardOldestPolicy	A										<section class="prog__container"><pre><code>public static class ThreadPoolExecutor.DiscardOldestPolicy</code></pre>A handler for rejected tasks that discards the oldest unhandled request and then retries <code>execute</code>, unless the executor is shut down, in which case the task is discarded.</section>	https://developer.android.com/reference/java/util/concurrent/ThreadPoolExecutor.DiscardOldestPolicy.html
ThreadPoolExecutor.DiscardPolicy	A										<section class="prog__container"><pre><code>public static class ThreadPoolExecutor.DiscardPolicy</code></pre>A handler for rejected tasks that silently discards the rejected task.</section>	https://developer.android.com/reference/java/util/concurrent/ThreadPoolExecutor.DiscardPolicy.html
Throwable	A										<section class="prog__container"><pre><code>public class Throwable</code></pre>The <code>Throwable</code> class is the superclass of all errors and exceptions in the Java language. Only objects that are instances of this class (or one of its subclasses) are thrown by the Java Virtual Machine or can be thrown by the Java <code>throw</code> statement. Similarly, only this class or one of its subclasses can be the argument type in a <code>catch</code> clause. For the purposes of compile-time checking of exceptions, <code>Throwable</code> and any subclass of <code>Throwable</code> that is not also a subclass of either <code>RuntimeException</code> or <code>Error</code> are regarded as checked exceptions.</section>	https://developer.android.com/reference/java/lang/Throwable.html
ThumbnailUtils	A										<section class="prog__container"><pre><code>public class ThumbnailUtils</code></pre>Thumbnail generation routines for media provider.</section>	https://developer.android.com/reference/android/media/ThumbnailUtils.html
Tile	A										<section class="prog__container"><pre><code>public final class Tile</code></pre>A Tile holds the state of a tile that will be displayed in Quick Settings. A tile in Quick Settings exists as an icon with an accompanied label. It also may have content description for accessibility usability. The style and layout of the tile may change to match a given device.</section>	https://developer.android.com/reference/android/service/quicksettings/Tile.html
TileService	A										<section class="prog__container"><pre><code>public class TileService</code></pre>A TileService provides the user a tile that can be added to Quick Settings. Quick Settings is a space provided that allows the user to change settings and take quick actions without leaving the context of their current app.</section>	https://developer.android.com/reference/android/service/quicksettings/TileService.html
Time	D								*[[format.Time]], <section class="prog__container"><pre><code>public class Time</code></pre><p class="caution"><strong> This class was deprecated in API level 22.</strong><br/> Use <code>GregorianCalendar</code> instead.</section>\n*[[sql.Time]], <section class="prog__container"><pre><code>public class Time</code></pre></section>			
TimeAnimator	A										<section class="prog__container"><pre><code>public class TimeAnimator</code></pre>This class provides a simple callback mechanism to listeners that is synchronized with all other animators in the system. There is no duration, interpolation, or object value-setting with this Animator. Instead, it is simply started, after which it proceeds to send out events on every animation frame to its TimeListener (if set), with information about this animator, the total elapsed time, and the elapsed time since the previous animation frame.</section>	https://developer.android.com/reference/android/animation/TimeAnimator.html
TimeAnimator.TimeListener	A										<section class="prog__container"><pre><code>public static interface TimeAnimator.TimeListener</code></pre>Implementors of this interface can set themselves as update listeners to a <code>TimeAnimator</code> instance to receive callbacks on every animation frame to receive the total time since the animator started and the delta time since the last frame. The first time the listener is called, deltaTime will be zero. The same is true for totalTime, unless the animator was set to a specific <code>currentPlayTime</code> prior to starting.</section>	https://developer.android.com/reference/android/animation/TimeAnimator.TimeListener.html
TimeFormatException	A										<section class="prog__container"><pre><code>public class TimeFormatException</code></pre></section>	https://developer.android.com/reference/android/util/TimeFormatException.html
TimeInterpolator	A										<section class="prog__container"><pre><code>public interface TimeInterpolator</code></pre>A time interpolator defines the rate of change of an animation. This allows animations to have non-linear motion, such as acceleration and deceleration.</section>	https://developer.android.com/reference/android/animation/TimeInterpolator.html
TimeKeyListener	A										<section class="prog__container"><pre><code>public class TimeKeyListener</code></pre>For entering times in a text field.</section>	https://developer.android.com/reference/android/text/method/TimeKeyListener.html
TimePicker	A										<section class="prog__container"><pre><code>public class TimePicker</code></pre>A widget for selecting the time of day, in either 24-hour or AM/PM mode.</section>	https://developer.android.com/reference/android/widget/TimePicker.html
TimePicker.OnTimeChangedListener	A										<section class="prog__container"><pre><code>public static interface TimePicker.OnTimeChangedListener</code></pre>The callback interface used to indicate the time has been adjusted.</section>	https://developer.android.com/reference/android/widget/TimePicker.OnTimeChangedListener.html
TimePickerDialog	A										<section class="prog__container"><pre><code>public class TimePickerDialog</code></pre>A dialog that prompts the user for the time of day using a <code>TimePicker</code>.</section>	https://developer.android.com/reference/android/app/TimePickerDialog.html
TimePickerDialog.OnTimeSetListener	A										<section class="prog__container"><pre><code>public static interface TimePickerDialog.OnTimeSetListener</code></pre>The callback interface used to indicate the user is done filling in the time (e.g. they clicked on the 'OK' button).</section>	https://developer.android.com/reference/android/app/TimePickerDialog.OnTimeSetListener.html
TimeUnit	D								*[[util.TimeUnit]], <section class="prog__container"><pre><code>public class TimeUnit</code></pre>Measurement unit for time units.</section>\n*[[concurrent.TimeUnit]], <section class="prog__container"><pre><code>public enum TimeUnit</code></pre>A <code>TimeUnit</code> represents time durations at a given unit of granularity and provides utility methods to convert across units, and to perform timing and delay operations in these units. A <code>TimeUnit</code> does not maintain time information, but only helps organize and use time representations that may be maintained separately across various contexts. A nanosecond is defined as one thousandth of a microsecond, a microsecond as one thousandth of a millisecond, a millisecond as one thousandth of a second, a minute as sixty seconds, an hour as sixty minutes, and a day as twenty four hours.</section>			
TimeUtils	A										<section class="prog__container"><pre><code>public class TimeUtils</code></pre>A class containing utility methods related to time zones.</section>	https://developer.android.com/reference/android/util/TimeUtils.html
TimeZone	D								*[[icu.util.TimeZone]], <section class="prog__container"><pre><code>public abstract class TimeZone</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>TimeZone</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.</section>\n*[[java.util.TimeZone]], <section class="prog__container"><pre><code>public abstract class TimeZone</code></pre><code>TimeZone</code> represents a time zone offset, and also figures out daylight savings.</section>			
TimeZone.SystemTimeZoneType	A										<section class="prog__container"><pre><code>public static final enum TimeZone.SystemTimeZoneType</code></pre><strong>[icu]</strong> System time zone type constants used by filtering zones in <code>getAvailableIDs(SystemTimeZoneType, String, Integer)</code></section>	https://developer.android.com/reference/android/icu/util/TimeZone.SystemTimeZoneType.html
TimeZoneFormat	A										<section class="prog__container"><pre><code>public class TimeZoneFormat</code></pre><code>TimeZoneFormat</code> supports time zone display name formatting and parsing. An instance of TimeZoneFormat works as a subformatter of <code>SimpleDateFormat</code>, but you can also directly get a new instance of <code>TimeZoneFormat</code> and formatting/parsing time zone display names.</section>	https://developer.android.com/reference/android/icu/text/TimeZoneFormat.html
TimeZoneFormat.GMTOffsetPatternType	A										<section class="prog__container"><pre><code>public static final enum TimeZoneFormat.GMTOffsetPatternType</code></pre>Offset pattern type enum.</section>	https://developer.android.com/reference/android/icu/text/TimeZoneFormat.GMTOffsetPatternType.html
TimeZoneFormat.ParseOption	A										<section class="prog__container"><pre><code>public static final enum TimeZoneFormat.ParseOption</code></pre>Parse option enum, used for specifying optional parse behavior.</section>	https://developer.android.com/reference/android/icu/text/TimeZoneFormat.ParseOption.html
TimeZoneFormat.Style	A										<section class="prog__container"><pre><code>public static final enum TimeZoneFormat.Style</code></pre>Time zone display format style enum used by format/parse APIs in <code>TimeZoneFormat</code>.</section>	https://developer.android.com/reference/android/icu/text/TimeZoneFormat.Style.html
TimeZoneFormat.TimeType	A										<section class="prog__container"><pre><code>public static final enum TimeZoneFormat.TimeType</code></pre>Time type enum used for receiving time type (standard time, daylight time or unknown) in <code>TimeZoneFormat</code> APIs.</section>	https://developer.android.com/reference/android/icu/text/TimeZoneFormat.TimeType.html
TimeZoneNames	A										<section class="prog__container"><pre><code>public abstract class TimeZoneNames</code></pre><code>TimeZoneNames</code> is an abstract class representing the time zone display name data model defined by UTS#35 Unicode Locale Data Markup Language (LDML). The model defines meta zone, which is used for storing a set of display names. A meta zone can be shared by multiple time zones. Also a time zone may have multiple meta zone historic mappings.</section>	https://developer.android.com/reference/android/icu/text/TimeZoneNames.html
TimeZoneNames.NameType	A										<section class="prog__container"><pre><code>public static final enum TimeZoneNames.NameType</code></pre>Time zone display name types</section>	https://developer.android.com/reference/android/icu/text/TimeZoneNames.NameType.html
TimedMetaData	A										<section class="prog__container"><pre><code>public final class TimedMetaData</code></pre>Class that embodies one timed metadata access unit, including <ul> <li> a time stamp, and </li> <li> raw uninterpreted byte-array extracted directly from the container. </li> </ul></section>	https://developer.android.com/reference/android/media/TimedMetaData.html
TimedText	A										<section class="prog__container"><pre><code>public final class TimedText</code></pre>Class to hold the timed text's metadata, including: <ul> <li> The characters for rendering</li> <li> The rendering position for the timed text</li> </ul></section>	https://developer.android.com/reference/android/media/TimedText.html
TimeoutException	A										<section class="prog__container"><pre><code>public class TimeoutException</code></pre>Exception thrown when a blocking operation times out. Blocking operations for which a timeout is specified need a means to indicate that the timeout has occurred. For many such operations it is possible to return a value that indicates timeout; when that is not possible or desirable then <code>TimeoutException</code> should be declared and thrown.</section>	https://developer.android.com/reference/java/util/concurrent/TimeoutException.html
Timer	A										<section class="prog__container"><pre><code>public class Timer</code></pre>A facility for threads to schedule tasks for future execution in a background thread. Tasks may be scheduled for one-time execution, or for repeated execution at regular intervals.</section>	https://developer.android.com/reference/java/util/Timer.html
TimerStat	A										<section class="prog__container"><pre><code>public final class TimerStat</code></pre>A TimerStat object stores a count and a time.</section>	https://developer.android.com/reference/android/os/health/TimerStat.html
TimerTask	A										<section class="prog__container"><pre><code>public abstract class TimerTask</code></pre>A task that can be scheduled for one-time or repeated execution by a Timer.</section>	https://developer.android.com/reference/java/util/TimerTask.html
Timestamp	D								*[[security.Timestamp]], <section class="prog__container"><pre><code>public final class Timestamp</code></pre>This class encapsulates information about a signed timestamp. It is immutable. It includes the timestamp's date and time as well as information about the Timestamping Authority (TSA) which generated and signed the timestamp.</section>\n*[[sql.Timestamp]], <section class="prog__container"><pre><code>public class Timestamp</code></pre></section>			
TimingLogger	A										<section class="prog__container"><pre><code>public class TimingLogger</code></pre>A utility class to help log timings splits throughout a method call. Typical usage is: <pre> TimingLogger timings = new TimingLogger(TAG, "methodA"); // ... do some work A ... timings.addSplit("work A"); // ... do some work B ... timings.addSplit("work B"); // ... do some work C ... timings.addSplit("work C"); timings.dumpToLog(); </pre></section>	https://developer.android.com/reference/android/util/TimingLogger.html
TintableBackgroundView	A										<section class="prog__container"><pre><code>public interface TintableBackgroundView</code></pre>Interface which allows a <code>View</code> to receive background tinting calls from <code>ViewCompat</code> when running on API v20 devices or lower.</section>	https://developer.android.com/reference/android/support/v4/view/TintableBackgroundView.html
TintableCompoundButton	A										<section class="prog__container"><pre><code>public interface TintableCompoundButton</code></pre>Interface which allows a <code>CompoundButton</code> to receive tinting calls from <code>CompoundButtonCompat</code> when running on API v20 devices or lower.</section>	https://developer.android.com/reference/android/support/v4/widget/TintableCompoundButton.html
TitleHelper	A										<section class="prog__container"><pre><code>public class TitleHelper</code></pre>Helper for managing <code>TitleView</code>, including transitions and focus movement. Assumes the TitleView is overlayed on the topmost portion of the scene root view.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/TitleHelper.html
TitleView	A										<section class="prog__container"><pre><code>public class TitleView</code></pre>Title view for a leanback fragment.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/TitleView.html
TitleViewAdapter	A										<section class="prog__container"><pre><code>public abstract class TitleViewAdapter</code></pre>This class allows a customized widget class to implement <code>TitleViewAdapter.Provider</code> and expose <code>TitleViewAdapter</code> methods to containing fragment (e.g. BrowseFragment or DetailsFragment). The title view must have a search orb view (<code>getSearchAffordanceView()</code> aligned to start and can typically have a branding Drawable and or title text aligned to end. The branding part is fully open to customization: not necessary to be a drawable or text.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/TitleViewAdapter.html
TitleViewAdapter.Provider	A										<section class="prog__container"><pre><code>public static interface TitleViewAdapter.Provider</code></pre>Interface to be implemented by a customized widget class to implement <code>TitleViewAdapter</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/TitleViewAdapter.Provider.html
ToDoubleBiFunction	A										<section class="prog__container"><pre><code>public interface ToDoubleBiFunction</code></pre>Represents a function that accepts two arguments and produces a double-valued result. This is the <code>double</code>-producing primitive specialization for <code>BiFunction</code>.</section>	https://developer.android.com/reference/java/util/function/ToDoubleBiFunction.html
ToDoubleFunction	A										<section class="prog__container"><pre><code>public interface ToDoubleFunction</code></pre>Represents a function that produces a double-valued result. This is the <code>double</code>-producing primitive specialization for <code>Function</code>.</section>	https://developer.android.com/reference/java/util/function/ToDoubleFunction.html
ToIntBiFunction	A										<section class="prog__container"><pre><code>public interface ToIntBiFunction</code></pre>Represents a function that accepts two arguments and produces an int-valued result. This is the <code>int</code>-producing primitive specialization for <code>BiFunction</code>.</section>	https://developer.android.com/reference/java/util/function/ToIntBiFunction.html
ToIntFunction	A										<section class="prog__container"><pre><code>public interface ToIntFunction</code></pre>Represents a function that produces an int-valued result. This is the <code>int</code>-producing primitive specialization for <code>Function</code>.</section>	https://developer.android.com/reference/java/util/function/ToIntFunction.html
ToLongBiFunction	A										<section class="prog__container"><pre><code>public interface ToLongBiFunction</code></pre>Represents a function that accepts two arguments and produces a long-valued result. This is the <code>long</code>-producing primitive specialization for <code>BiFunction</code>.</section>	https://developer.android.com/reference/java/util/function/ToLongBiFunction.html
ToLongFunction	A										<section class="prog__container"><pre><code>public interface ToLongFunction</code></pre>Represents a function that produces a long-valued result. This is the <code>long</code>-producing primitive specialization for <code>Function</code>.</section>	https://developer.android.com/reference/java/util/function/ToLongFunction.html
Toast	A										<section class="prog__container"><pre><code>public class Toast</code></pre>A toast is a view containing a quick little message for the user. The toast class helps you create and show those.</section>	https://developer.android.com/reference/android/widget/Toast.html
ToggleButton	A										<section class="prog__container"><pre><code>public class ToggleButton</code></pre>Displays checked/unchecked states as a button with a "light" indicator and by default accompanied with the text "ON" or "OFF".</section>	https://developer.android.com/reference/android/widget/ToggleButton.html
TokenWatcher	A										<section class="prog__container"><pre><code>public abstract class TokenWatcher</code></pre>Helper class that helps you use IBinder objects as reference counted tokens. IBinders make good tokens because we find out when they are removed</section>	https://developer.android.com/reference/android/os/TokenWatcher.html
ToneGenerator	A										<section class="prog__container"><pre><code>public class ToneGenerator</code></pre>This class provides methods to play DTMF tones (ITU-T Recommendation Q.23), call supervisory tones (3GPP TS 22.001, CEPT) and proprietary tones (3GPP TS 31.111). Depending on call state and routing options, tones are mixed to the downlink audio or output to the speaker phone or headset. This API is not for generating tones over the uplink audio path.</section>	https://developer.android.com/reference/android/media/ToneGenerator.html
TonemapCurve	A										<section class="prog__container"><pre><code>public final class TonemapCurve</code></pre>Immutable class for describing a <code>2 x M x 3</code> tonemap curve of floats.</section>	https://developer.android.com/reference/android/hardware/camera2/params/TonemapCurve.html
TooManyListenersException	A										<section class="prog__container"><pre><code>public class TooManyListenersException</code></pre></section>	https://developer.android.com/reference/java/util/TooManyListenersException.html
Toolbar	D								*[[v7.widget.Toolbar]], <section class="prog__container"><pre><code>public class Toolbar</code></pre>A standard toolbar for use within application content.</section>\n*[[android.widget.Toolbar]], <section class="prog__container"><pre><code>public class Toolbar</code></pre>A standard toolbar for use within application content.</section>			
Toolbar.LayoutParams	D								*[[v7.widget.Toolbar.LayoutParams]], <section class="prog__container"><pre><code>public static class Toolbar.LayoutParams</code></pre>Layout information for child views of Toolbars.</section>\n*[[android.widget.Toolbar.LayoutParams]], <section class="prog__container"><pre><code>public static class Toolbar.LayoutParams</code></pre>Layout information for child views of Toolbars.</section>			
Toolbar.OnMenuItemClickListener	D								*[[v7.widget.Toolbar.OnMenuItemClickListener]], <section class="prog__container"><pre><code>public static interface Toolbar.OnMenuItemClickListener</code></pre>Interface responsible for receiving menu item click events if the items themselves do not have individual item click listeners.</section>\n*[[android.widget.Toolbar.OnMenuItemClickListener]], <section class="prog__container"><pre><code>public static interface Toolbar.OnMenuItemClickListener</code></pre>Interface responsible for receiving menu item click events if the items themselves do not have individual item click listeners.</section>			
Toolbar.SavedState	A										<section class="prog__container"><pre><code>public static class Toolbar.SavedState</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/Toolbar.SavedState.html
TotalCaptureResult	A										<section class="prog__container"><pre><code>public final class TotalCaptureResult</code></pre></section>	https://developer.android.com/reference/android/hardware/camera2/TotalCaptureResult.html
Touch	A										<section class="prog__container"><pre><code>public class Touch</code></pre></section>	https://developer.android.com/reference/android/text/method/Touch.html
TouchDelegate	A										<section class="prog__container"><pre><code>public class TouchDelegate</code></pre>Helper class to handle situations where you want a view to have a larger touch area than its actual view bounds. The view whose touch area is changed is called the delegate view. This class should be used by an ancestor of the delegate. To use a TouchDelegate, first create an instance that specifies the bounds that should be mapped to the delegate and the delegate view itself.</section>	https://developer.android.com/reference/android/view/TouchDelegate.html
TouchUtils	A										<section class="prog__container"><pre><code>public class TouchUtils</code></pre><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use Espresso UI testing framework instead. New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/TouchUtils.html
Trace	A										<section class="prog__container"><pre><code>public final class Trace</code></pre>Writes trace events to the system trace buffer. These trace events can be collected and visualized using the Systrace tool.</section>	https://developer.android.com/reference/android/os/Trace.html
TraceCompat	A										<section class="prog__container"><pre><code>public final class TraceCompat</code></pre>Writes trace events to the system trace buffer. These trace events can be collected and visualized using the Systrace tool.</section>	https://developer.android.com/reference/android/support/v4/os/TraceCompat.html
TrafficStats	A										<section class="prog__container"><pre><code>public class TrafficStats</code></pre>Class that provides network traffic statistics. These statistics include bytes transmitted and received and network packets transmitted and received, over all interfaces, over the mobile interface, and on a per-UID basis.</section>	https://developer.android.com/reference/android/net/TrafficStats.html
TrafficStatsCompat	A										<section class="prog__container"><pre><code>public final class TrafficStatsCompat</code></pre>Helper for accessing features in TrafficStats introduced after API level 14 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/net/TrafficStatsCompat.html
TransactionTooLargeException	A										<section class="prog__container"><pre><code>public class TransactionTooLargeException</code></pre>The Binder transaction failed because it was too large.</section>	https://developer.android.com/reference/android/os/TransactionTooLargeException.html
TransferPipe	A										Helper for transferring data through a pipe from a client app.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
TransferQueue	A										<section class="prog__container"><pre><code>public interface TransferQueue</code></pre>A <code>BlockingQueue</code> in which producers may wait for consumers to receive elements. A <code>TransferQueue</code> may be useful for example in message passing applications in which producers sometimes (using method <code>transfer(E)</code>) await receipt of elements by consumers invoking <code>take</code> or <code>poll</code>, while at other times enqueue elements (via method <code>put</code>) without waiting for receipt. Non-blocking</section>	https://developer.android.com/reference/java/util/concurrent/TransferQueue.html
Transformation	A										<section class="prog__container"><pre><code>public class Transformation</code></pre>Defines the transformation to be applied at one point in time of an Animation.</section>	https://developer.android.com/reference/android/view/animation/Transformation.html
TransformationMethod	A										<section class="prog__container"><pre><code>public interface TransformationMethod</code></pre>TextView uses TransformationMethods to do things like replacing the characters of passwords with dots, or keeping the newline characters from causing line breaks in single-line text fields.</section>	https://developer.android.com/reference/android/text/method/TransformationMethod.html
Transformer	A										<section class="prog__container"><pre><code>public abstract class Transformer</code></pre>An instance of this abstract class can transform a source tree into a result tree.</section>	https://developer.android.com/reference/javax/xml/transform/Transformer.html
TransformerConfigurationException	A										<section class="prog__container"><pre><code>public class TransformerConfigurationException</code></pre>Indicates a serious configuration error.</section>	https://developer.android.com/reference/javax/xml/transform/TransformerConfigurationException.html
TransformerException	A										<section class="prog__container"><pre><code>public class TransformerException</code></pre>This class specifies an exceptional condition that occurred during the transformation process.</section>	https://developer.android.com/reference/javax/xml/transform/TransformerException.html
TransformerFactory	A										<section class="prog__container"><pre><code>public abstract class TransformerFactory</code></pre></section>	https://developer.android.com/reference/javax/xml/transform/TransformerFactory.html
TransformerFactoryConfigurationError	A										<section class="prog__container"><pre><code>public class TransformerFactoryConfigurationError</code></pre>Thrown when a problem with configuration with the Transformer Factories exists. This error will typically be thrown when the class of a transformation factory specified in the system properties cannot be found or instantiated.</section>	https://developer.android.com/reference/javax/xml/transform/TransformerFactoryConfigurationError.html
TransformerHandler	A										<section class="prog__container"><pre><code>public interface TransformerHandler</code></pre>A TransformerHandler listens for SAX ContentHandler parse events and transforms them to a Result.</section>	https://developer.android.com/reference/javax/xml/transform/sax/TransformerHandler.html
Transition	D								*[[support.transition.Transition]], <section class="prog__container"><pre><code>public abstract class Transition</code></pre>A Transition holds information about animations that will be run on its targets during a scene change. Subclasses of this abstract class may choreograph several child transitions (<code>TransitionSet</code> or they may perform custom animations themselves. Any Transition has two main jobs: (1) capture property values, and (2) play animations based on changes to captured property values. A custom transition knows what property values on View objects are of interest to it, and also knows how to animate changes to those values. For example, the <code>Fade</code> transition tracks changes to visibility-related properties and is able to construct and run animations that fade items in or out based on changes to those properties.</section>\n*[[android.transition.Transition]], <section class="prog__container"><pre><code>public abstract class Transition</code></pre>A Transition holds information about animations that will be run on its targets during a scene change. Subclasses of this abstract class may choreograph several child transitions (<code>TransitionSet</code> or they may perform custom animations themselves. Any Transition has two main jobs: (1) capture property values, and (2) play animations based on changes to captured property values. A custom transition knows what property values on View objects are of interest to it, and also knows how to animate changes to those values. For example, the <code>Fade</code> transition tracks changes to visibility-related properties and is able to construct and run animations that fade items in or out based on changes to those properties.</section>			
Transition.EpicenterCallback	A										<section class="prog__container"><pre><code>public static abstract class Transition.EpicenterCallback</code></pre>Class to get the epicenter of Transition. Use <code>setEpicenterCallback(android.transition.Transition.EpicenterCallback)</code> to set the callback used to calculate the epicenter of the Transition. Override <code>getEpicenter()</code> to return the rectangular region in screen coordinates of the epicenter of the transition.</section>	https://developer.android.com/reference/android/transition/Transition.EpicenterCallback.html
Transition.TransitionListener	D								*[[support.transition.Transition.TransitionListener]], <section class="prog__container"><pre><code>public static interface Transition.TransitionListener</code></pre>A transition listener receives notifications from a transition. Notifications indicate transition lifecycle events.</section>\n*[[android.transition.Transition.TransitionListener]], <section class="prog__container"><pre><code>public static interface Transition.TransitionListener</code></pre>A transition listener receives notifications from a transition. Notifications indicate transition lifecycle events.</section>			
TransitionDrawable	A										<section class="prog__container"><pre><code>public class TransitionDrawable</code></pre>An extension of LayerDrawables that is intended to cross-fade between the first and second layer. To start the transition, call <code>startTransition(int)</code>. To display just the first layer, call <code>resetTransition()</code>.</section>	https://developer.android.com/reference/android/graphics/drawable/TransitionDrawable.html
TransitionInflater	A										<section class="prog__container"><pre><code>public class TransitionInflater</code></pre>This class inflates scenes and transitions from resource files. Information on XML resource descriptions for transitions can be found for <code>Transition</code>, <code>TransitionSet</code>, <code>TransitionTarget</code>, <code>Fade</code>, and <code>TransitionManager</code>.</section>	https://developer.android.com/reference/android/transition/TransitionInflater.html
TransitionManager	D								*[[support.transition.TransitionManager]], <section class="prog__container"><pre><code>public class TransitionManager</code></pre>This class manages the set of transitions that fire when there is a change of <code>Scene</code>. To use the manager, add scenes along with transition objects with calls to <code>setTransition(Scene, Transition)</code> or <code>setTransition(Scene, Scene, Transition)</code>. Setting specific transitions for scene changes is not required; by default, a Scene change will use <code>AutoTransition</code> to do something reasonable for most situations. Specifying other transitions for particular scene changes is only necessary if the application wants different transition behavior in these situations.</section>\n*[[android.transition.TransitionManager]], <section class="prog__container"><pre><code>public class TransitionManager</code></pre>This class manages the set of transitions that fire when there is a change of <code>Scene</code>. To use the manager, add scenes along with transition objects with calls to <code>setTransition(Scene, Transition)</code> or <code>setTransition(Scene, Scene, Transition)</code>. Setting specific transitions for scene changes is not required; by default, a Scene change will use <code>AutoTransition</code> to do something reasonable for most situations. Specifying other transitions for particular scene changes is only necessary if the application wants different transition behavior in these situations.</section>			
TransitionPropagation	A										<section class="prog__container"><pre><code>public abstract class TransitionPropagation</code></pre>Extend <code>TransitionPropagation</code> to customize start delays for Animators created in <code>createAnimator(ViewGroup, TransitionValues, TransitionValues)</code>. A Transition such as <code>Explode</code> defaults to using <code>CircularPropagation</code> and Views closer to the epicenter will move out of the scene later and into the scene sooner than Views farther from the epicenter, giving the appearance of inertia. With no TransitionPropagation, all Views will react simultaneously to the start of the transition.</section>	https://developer.android.com/reference/android/transition/TransitionPropagation.html
TransitionRes	A										<section class="prog__container"><pre><code>public abstract @interface TransitionRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be a transition resource reference.</section>	https://developer.android.com/reference/android/support/annotation/TransitionRes.html
TransitionSet	D								*[[support.transition.TransitionSet]], <section class="prog__container"><pre><code>public class TransitionSet</code></pre>A TransitionSet is a parent of child transitions (including other TransitionSets). Using TransitionSets enables more complex choreography of transitions, where some sets play <code>ORDERING_TOGETHER</code> and others play <code>ORDERING_SEQUENTIAL</code>. For example, <code>AutoTransition</code> uses a TransitionSet to sequentially play a Fade(Fade.OUT), followed by a <code>ChangeBounds</code>, followed by a Fade(Fade.OUT) transition.</section>\n*[[android.transition.TransitionSet]], <section class="prog__container"><pre><code>public class TransitionSet</code></pre>A TransitionSet is a parent of child transitions (including other TransitionSets). Using TransitionSets enables more complex choreography of transitions, where some sets play <code>ORDERING_TOGETHER</code> and others play <code>ORDERING_SEQUENTIAL</code>. For example, <code>AutoTransition</code> uses a TransitionSet to sequentially play a Fade(Fade.OUT), followed by a <code>ChangeBounds</code>, followed by a Fade(Fade.OUT) transition.</section>			
TransitionValues	D								*[[support.transition.TransitionValues]], <section class="prog__container"><pre><code>public class TransitionValues</code></pre>Data structure which holds cached values for the transition. The view field is the target which all of the values pertain to. The values field is a map which holds information for fields according to names selected by the transitions. These names should be unique to avoid clobbering values stored by other transitions, such as the convention project:transition_name:property_name. For example, the platform might store a property "alpha" in a transition "Fader" as "android:fader:alpha".</section>\n*[[android.transition.TransitionValues]], <section class="prog__container"><pre><code>public class TransitionValues</code></pre>Data structure which holds cached values for the transition. The view field is the target which all of the values pertain to. The values field is a map which holds information for fields according to names selected by the transitions. These names should be unique to avoid clobbering values stored by other transitions, such as the convention project:transition_name:property_name. For example, the platform might store a property "alpha" in a transition "Fader" as "android:fader:alpha".</section>			
TranslateAnimation	A										<section class="prog__container"><pre><code>public class TranslateAnimation</code></pre>An animation that controls the position of an object. See the <code>full package</code> description for details and sample code.</section>	https://developer.android.com/reference/android/view/animation/TranslateAnimation.html
TransportController	A										<section class="prog__container"><pre><code>public abstract class TransportController</code></pre>Base interface to controlling a media transport. This is the interface for implementing things like on-screen controls: it allows them to request changes in playback, retrieve the current playback state, and monitor for changes to the playback state.</section>	https://developer.android.com/reference/android/support/v4/media/TransportController.html
TransportMediator	A										<section class="prog__container"><pre><code>public class TransportMediator</code></pre>Helper for implementing a media transport control (with play, pause, skip, and other media actions). Takes care of both key events and advanced features like <code>RemoteControlClient</code>. This class is intended to serve as an intermediary between transport controls (whether they be on-screen controls, hardware buttons, remote controls) and the actual player. The player is represented by a single <code>TransportPerformer</code> that must be supplied to this class. On-screen controls that want to control and show the state of the player should do this through calls to the <code>TransportController</code> interface.</section>	https://developer.android.com/reference/android/support/v4/media/TransportMediator.html
TransportPerformer	A										<section class="prog__container"><pre><code>public abstract class TransportPerformer</code></pre>Implemented by the playback side of the media system, to respond to requests to perform actions and to retrieve its current state. These requests may either come from key events dispatched directly to your UI, or events sent over a media button event receiver that this class keeps active while your window is in focus.</section>	https://developer.android.com/reference/android/support/v4/media/TransportPerformer.html
TransportStateListener	A										<section class="prog__container"><pre><code>public class TransportStateListener</code></pre>A listener for playback changes that can be registered with <code>TransportController</code>.</section>	https://developer.android.com/reference/android/support/v4/media/TransportStateListener.html
TreeMap	A										<section class="prog__container"><pre><code>public class TreeMap</code></pre>A Red-Black tree based <code>NavigableMap</code> implementation. The map is sorted according to the natural ordering</section>	https://developer.android.com/reference/java/util/TreeMap.html
TreeSet	A										<section class="prog__container"><pre><code>public class TreeSet</code></pre>A <code>NavigableSet</code> implementation based on a <code>TreeMap</code>. The elements are ordered using their natural ordering</section>	https://developer.android.com/reference/java/util/TreeSet.html
TriggerEvent	A										<section class="prog__container"><pre><code>public final class TriggerEvent</code></pre>This class represents a Trigger Event - the event associated with a Trigger Sensor. When the sensor detects a trigger event condition, such as significant motion in the case of the <code>TYPE_SIGNIFICANT_MOTION</code>, the <code>TriggerEventListener</code> is called with the TriggerEvent. The sensor is automatically canceled after the trigger.</section>	https://developer.android.com/reference/android/hardware/TriggerEvent.html
TriggerEventListener	A										<section class="prog__container"><pre><code>public abstract class TriggerEventListener</code></pre>This class is the listener used to handle Trigger Sensors. Trigger Sensors are sensors that trigger an event and are automatically disabled. <code>TYPE_SIGNIFICANT_MOTION</code> is one such example.</section>	https://developer.android.com/reference/android/hardware/TriggerEventListener.html
TrustAnchor	A										<section class="prog__container"><pre><code>public class TrustAnchor</code></pre>A trust anchor or most-trusted Certification Authority (CA).</section>	https://developer.android.com/reference/java/security/cert/TrustAnchor.html
TrustManager	A										<section class="prog__container"><pre><code>public interface TrustManager</code></pre>This is the base interface for JSSE trust managers.</section>	https://developer.android.com/reference/javax/net/ssl/TrustManager.html
TrustManagerFactory	A										<section class="prog__container"><pre><code>public class TrustManagerFactory</code></pre>This class acts as a factory for trust managers based on a source of trust material. Each trust manager manages a specific type of trust material for use by secure sockets. The trust material is based on a KeyStore and/or provider specific sources.</section>	https://developer.android.com/reference/javax/net/ssl/TrustManagerFactory.html
TrustManagerFactorySpi	A										<section class="prog__container"><pre><code>public abstract class TrustManagerFactorySpi</code></pre>This class defines the <i>Service Provider Interface</i> (<b>SPI</b>) for the <code>TrustManagerFactory</code> class.</section>	https://developer.android.com/reference/javax/net/ssl/TrustManagerFactorySpi.html
TtsSpan	A										<section class="prog__container"><pre><code>public class TtsSpan</code></pre>A span that supplies additional meta-data for the associated text intended for text-to-speech engines. If the text is being processed by a text-to-speech engine, the engine may use the data in this span in addition to or instead of its associated text. Each instance of a TtsSpan has a type, for example <code>TYPE_DATE</code> or <code>TYPE_MEASURE</code>. And a list of arguments, provided as key-value pairs in a bundle. The inner classes are there for convenience and provide builders for each TtsSpan type.</section>	https://developer.android.com/reference/android/text/style/TtsSpan.html
TtsSpan.CardinalBuilder	A										<section class="prog__container"><pre><code>public static class TtsSpan.CardinalBuilder</code></pre>A builder for TtsSpans of type <code>TYPE_CARDINAL</code>.</section>	https://developer.android.com/reference/android/text/style/TtsSpan.CardinalBuilder.html
TtsSpan.DateBuilder	A										<section class="prog__container"><pre><code>public static class TtsSpan.DateBuilder</code></pre>A builder for TtsSpans of type <code>TYPE_DATE</code>.</section>	https://developer.android.com/reference/android/text/style/TtsSpan.DateBuilder.html
TtsSpan.DecimalBuilder	A										<section class="prog__container"><pre><code>public static class TtsSpan.DecimalBuilder</code></pre>A builder for TtsSpans of type <code>TYPE_DECIMAL</code>.</section>	https://developer.android.com/reference/android/text/style/TtsSpan.DecimalBuilder.html
TtsSpan.DigitsBuilder	A										<section class="prog__container"><pre><code>public static class TtsSpan.DigitsBuilder</code></pre>A builder for TtsSpans of type <code>TYPE_DIGITS</code>.</section>	https://developer.android.com/reference/android/text/style/TtsSpan.DigitsBuilder.html
TtsSpan.ElectronicBuilder	A										<section class="prog__container"><pre><code>public static class TtsSpan.ElectronicBuilder</code></pre>A builder for TtsSpans of type <code>TYPE_ELECTRONIC</code>.</section>	https://developer.android.com/reference/android/text/style/TtsSpan.ElectronicBuilder.html
TtsSpan.FractionBuilder	A										<section class="prog__container"><pre><code>public static class TtsSpan.FractionBuilder</code></pre>A builder for TtsSpans of type <code>TYPE_FRACTION</code>.</section>	https://developer.android.com/reference/android/text/style/TtsSpan.FractionBuilder.html
TtsSpan.MeasureBuilder	A										<section class="prog__container"><pre><code>public static class TtsSpan.MeasureBuilder</code></pre>A builder for TtsSpans of type <code>TYPE_MEASURE</code>.</section>	https://developer.android.com/reference/android/text/style/TtsSpan.MeasureBuilder.html
TtsSpan.MoneyBuilder	A										<section class="prog__container"><pre><code>public static class TtsSpan.MoneyBuilder</code></pre>A builder for TtsSpans of type <code>TYPE_MONEY</code>.</section>	https://developer.android.com/reference/android/text/style/TtsSpan.MoneyBuilder.html
TtsSpan.OrdinalBuilder	A										<section class="prog__container"><pre><code>public static class TtsSpan.OrdinalBuilder</code></pre>A builder for TtsSpans of type <code>TYPE_ORDINAL</code>.</section>	https://developer.android.com/reference/android/text/style/TtsSpan.OrdinalBuilder.html
TtsSpan.TelephoneBuilder	A										<section class="prog__container"><pre><code>public static class TtsSpan.TelephoneBuilder</code></pre>A builder for TtsSpans of type <code>TYPE_TELEPHONE</code>.</section>	https://developer.android.com/reference/android/text/style/TtsSpan.TelephoneBuilder.html
TtsSpan.TextBuilder	A										<section class="prog__container"><pre><code>public static class TtsSpan.TextBuilder</code></pre>A builder for TtsSpans of type <code>TYPE_TEXT</code>.</section>	https://developer.android.com/reference/android/text/style/TtsSpan.TextBuilder.html
TtsSpan.TimeBuilder	A										<section class="prog__container"><pre><code>public static class TtsSpan.TimeBuilder</code></pre>A builder for TtsSpans of type <code>TYPE_TIME</code>.</section>	https://developer.android.com/reference/android/text/style/TtsSpan.TimeBuilder.html
TtsSpan.VerbatimBuilder	A										<section class="prog__container"><pre><code>public static class TtsSpan.VerbatimBuilder</code></pre>A builder for TtsSpans of type <code>TYPE_VERBATIM</code>.</section>	https://developer.android.com/reference/android/text/style/TtsSpan.VerbatimBuilder.html
TvContentRating	A										<section class="prog__container"><pre><code>public final class TvContentRating</code></pre>A class representing a TV content rating. When a TV input service inserts the content rating information on a program into the database, this class can be used to generate the formatted string for <code>TvContract.Programs.COLUMN_CONTENT_RATING</code>. To create a <code>TvContentRating</code> object, use the <code>TvContentRating.createRating</code> method with valid rating system string constants.</section>	https://developer.android.com/reference/android/media/tv/TvContentRating.html
TvContract	A										<section class="prog__container"><pre><code>public final class TvContract</code></pre>The contract between the TV provider and applications. Contains definitions for the supported URIs and columns. <h3>Overview</h3></section>	https://developer.android.com/reference/android/media/tv/TvContract.html
TvContract.BaseTvColumns	A										<section class="prog__container"><pre><code>public static interface TvContract.BaseTvColumns</code></pre>Common base for the tables of TV channels/programs.</section>	https://developer.android.com/reference/android/media/tv/TvContract.BaseTvColumns.html
TvContract.Channels	A										<section class="prog__container"><pre><code>public static final class TvContract.Channels</code></pre>Column definitions for the TV channels table.</section>	https://developer.android.com/reference/android/media/tv/TvContract.Channels.html
TvContract.Channels.Logo	A										<section class="prog__container"><pre><code>public static final class TvContract.Channels.Logo</code></pre>A sub-directory of a single TV channel that represents its primary logo.</section>	https://developer.android.com/reference/android/media/tv/TvContract.Channels.Logo.html
TvContract.Programs	A										<section class="prog__container"><pre><code>public static final class TvContract.Programs</code></pre>Column definitions for the TV programs table.</section>	https://developer.android.com/reference/android/media/tv/TvContract.Programs.html
TvContract.Programs.Genres	A										<section class="prog__container"><pre><code>public static final class TvContract.Programs.Genres</code></pre>Canonical genres for TV programs.</section>	https://developer.android.com/reference/android/media/tv/TvContract.Programs.Genres.html
TvContract.RecordedPrograms	A										<section class="prog__container"><pre><code>public static final class TvContract.RecordedPrograms</code></pre>Column definitions for the recorded TV programs table.</section>	https://developer.android.com/reference/android/media/tv/TvContract.RecordedPrograms.html
TvInputInfo	A										<section class="prog__container"><pre><code>public final class TvInputInfo</code></pre>This class is used to specify meta information of a TV input.</section>	https://developer.android.com/reference/android/media/tv/TvInputInfo.html
TvInputInfo.Builder	A										<section class="prog__container"><pre><code>public static final class TvInputInfo.Builder</code></pre>A convenience builder for creating <code>TvInputInfo</code> objects.</section>	https://developer.android.com/reference/android/media/tv/TvInputInfo.Builder.html
TvInputManager	A										<section class="prog__container"><pre><code>public final class TvInputManager</code></pre>Central system API to the overall TV input framework (TIF) architecture, which arbitrates interaction between applications and the selected TV inputs. You can retrieve an instance of this interface with <code>Context.getSystemService(Context.TV_INPUT_SERVICE)</code>.</section>	https://developer.android.com/reference/android/media/tv/TvInputManager.html
TvInputManager.TvInputCallback	A										<section class="prog__container"><pre><code>public static abstract class TvInputManager.TvInputCallback</code></pre>Callback used to monitor status of the TV inputs.</section>	https://developer.android.com/reference/android/media/tv/TvInputManager.TvInputCallback.html
TvInputService	A										<section class="prog__container"><pre><code>public abstract class TvInputService</code></pre>The TvInputService class represents a TV input or source such as HDMI or built-in tuner which provides pass-through video or broadcast TV programs.</section>	https://developer.android.com/reference/android/media/tv/TvInputService.html
TvInputService.HardwareSession	A										<section class="prog__container"><pre><code>public static abstract class TvInputService.HardwareSession</code></pre>Base class for a TV input session which represents an external device connected to a hardware TV input.</section>	https://developer.android.com/reference/android/media/tv/TvInputService.HardwareSession.html
TvInputService.RecordingSession	A										<section class="prog__container"><pre><code>public static abstract class TvInputService.RecordingSession</code></pre>Base class for derived classes to implement to provide a TV input recording session.</section>	https://developer.android.com/reference/android/media/tv/TvInputService.RecordingSession.html
TvInputService.Session	A										<section class="prog__container"><pre><code>public static abstract class TvInputService.Session</code></pre>Base class for derived classes to implement to provide a TV input session.</section>	https://developer.android.com/reference/android/media/tv/TvInputService.Session.html
TvRecordingClient	A										<section class="prog__container"><pre><code>public class TvRecordingClient</code></pre>The public interface object used to interact with a specific TV input service for TV program recording.</section>	https://developer.android.com/reference/android/media/tv/TvRecordingClient.html
TvRecordingClient.RecordingCallback	A										<section class="prog__container"><pre><code>public static abstract class TvRecordingClient.RecordingCallback</code></pre>Callback used to receive various status updates on the <code>TvInputService.RecordingSession</code></section>	https://developer.android.com/reference/android/media/tv/TvRecordingClient.RecordingCallback.html
TvTrackInfo	A										<section class="prog__container"><pre><code>public final class TvTrackInfo</code></pre>Encapsulates the format of tracks played in <code>TvInputService</code>.</section>	https://developer.android.com/reference/android/media/tv/TvTrackInfo.html
TvTrackInfo.Builder	A										<section class="prog__container"><pre><code>public static final class TvTrackInfo.Builder</code></pre>A builder class for creating <code>TvTrackInfo</code> objects.</section>	https://developer.android.com/reference/android/media/tv/TvTrackInfo.Builder.html
TvView	A										<section class="prog__container"><pre><code>public class TvView</code></pre>Displays TV contents. The TvView class provides a high level interface for applications to show TV programs from various TV sources that implement <code>TvInputService</code>. (Note that the list of TV inputs available on the system can be obtained by calling <code>TvInputManager.getTvInputList()</code>.)</section>	https://developer.android.com/reference/android/media/tv/TvView.html
TvView.OnUnhandledInputEventListener	A										<section class="prog__container"><pre><code>public static interface TvView.OnUnhandledInputEventListener</code></pre>Interface definition for a callback to be invoked when the unhandled input event is received.</section>	https://developer.android.com/reference/android/media/tv/TvView.OnUnhandledInputEventListener.html
TvView.TimeShiftPositionCallback	A										<section class="prog__container"><pre><code>public static abstract class TvView.TimeShiftPositionCallback</code></pre>Callback used to receive time shift position changes.</section>	https://developer.android.com/reference/android/media/tv/TvView.TimeShiftPositionCallback.html
TvView.TvInputCallback	A										<section class="prog__container"><pre><code>public static abstract class TvView.TvInputCallback</code></pre>Callback used to receive various status updates on the <code>TvView</code>.</section>	https://developer.android.com/reference/android/media/tv/TvView.TvInputCallback.html
TwoLineListItem	A										<section class="prog__container"><pre><code>public class TwoLineListItem</code></pre><p class="caution"><strong> This class was deprecated in API level 17.</strong><br/> This class can be implemented easily by apps using a <code>RelativeLayout</code> or a <code>LinearLayout</code>.</section>	https://developer.android.com/reference/android/widget/TwoLineListItem.html
TwoStatePreference	D								*[[android.preference.TwoStatePreference]], <section class="prog__container"><pre><code>public abstract class TwoStatePreference</code></pre>Common base class for preferences that have two selectable states, persist a boolean value in SharedPreferences, and may have dependent preferences that are enabled/disabled based on the current state.</section>\n*[[v7.preference.TwoStatePreference]], <section class="prog__container"><pre><code>public abstract class TwoStatePreference</code></pre>Common base class for preferences that have two selectable states, persist a boolean value in SharedPreferences, and may have dependent preferences that are enabled/disabled based on the current state.</section>			
Type	D								*[[android.renderscript.Type]], <section class="prog__container"><pre><code>public class Type</code></pre></section>\n*[[v8.renderscript.Type]], <section class="prog__container"><pre><code>public class Type</code></pre></section>\n*[[reflect.Type]], <section class="prog__container"><pre><code>public interface Type</code></pre>Type is the common superinterface for all types in the Java programming language. These include raw types, parameterized types, array types, type variables and primitive types.</section>			
Type.Builder	D								*[[android.renderscript.Type.Builder]], <section class="prog__container"><pre><code>public static class Type.Builder</code></pre>Builder class for Type.</section>\n*[[v8.renderscript.Type.Builder]], <section class="prog__container"><pre><code>public static class Type.Builder</code></pre>Builder class for Type.</section>			
Type.CubemapFace	D								*[[android.renderscript.Type.CubemapFace]], <section class="prog__container"><pre><code>public static final enum Type.CubemapFace</code></pre></section>\n*[[v8.renderscript.Type.CubemapFace]], <section class="prog__container"><pre><code>public static final enum Type.CubemapFace</code></pre></section>			
TypeConverter	A										<section class="prog__container"><pre><code>public abstract class TypeConverter</code></pre>Abstract base class used convert type T to another type V. This is necessary when the value types of in animation are different from the property type.</section>	https://developer.android.com/reference/android/animation/TypeConverter.html
TypeEvaluator	A										<section class="prog__container"><pre><code>public interface TypeEvaluator</code></pre>Interface for use with the <code>setEvaluator(TypeEvaluator)</code> function. Evaluators allow developers to create animations on arbitrary property types, by allowing them to supply custom evaluators for types that are not automatically understood and used by the animation system.</section>	https://developer.android.com/reference/android/animation/TypeEvaluator.html
TypeInfo	A										<section class="prog__container"><pre><code>public interface TypeInfo</code></pre>The <code>TypeInfo</code> interface represents a type referenced from <code>Element</code> or <code>Attr</code> nodes, specified in the schemas associated with the document. The type is a pair of a namespace URI and name properties, and depends on the document's schema.</section>	https://developer.android.com/reference/org/w3c/dom/TypeInfo.html
TypeInfoProvider	A										<section class="prog__container"><pre><code>public abstract class TypeInfoProvider</code></pre>This class provides access to the type information determined by <code>ValidatorHandler</code>.</section>	https://developer.android.com/reference/javax/xml/validation/TypeInfoProvider.html
TypeNotPresentException	A										<section class="prog__container"><pre><code>public class TypeNotPresentException</code></pre>Thrown when an application tries to access a type using a string representing the type's name, but no definition for the type with the specified name can be found. This exception differs from <code>ClassNotFoundException</code> in that <tt>ClassNotFoundException</tt> is a checked exception, whereas this exception is unchecked.</section>	https://developer.android.com/reference/java/lang/TypeNotPresentException.html
TypedArray	A										<section class="prog__container"><pre><code>public class TypedArray</code></pre>Container for an array of values that were retrieved with <code>obtainStyledAttributes(AttributeSet, int[], int, int)</code> or <code>obtainAttributes(AttributeSet, int[])</code>. Be sure to call <code>recycle()</code> when done with them. The indices used to retrieve values from this structure correspond to the positions of the attributes given to obtainStyledAttributes.</section>	https://developer.android.com/reference/android/content/res/TypedArray.html
TypedValue	A										<section class="prog__container"><pre><code>public class TypedValue</code></pre>Container for a dynamically typed data value. Primarily used with <code>Resources</code> for holding resource values.</section>	https://developer.android.com/reference/android/util/TypedValue.html
Typeface	A										<section class="prog__container"><pre><code>public class Typeface</code></pre>The Typeface class specifies the typeface and intrinsic style of a font. This is used in the paint, along with optionally Paint settings like textSize, textSkewX, textScaleX to specify how text appears when drawn (and measured).</section>	https://developer.android.com/reference/android/graphics/Typeface.html
TypefaceSpan	A										<section class="prog__container"><pre><code>public class TypefaceSpan</code></pre>Changes the typeface family of the text to which the span is attached.</section>	https://developer.android.com/reference/android/text/style/TypefaceSpan.html
Types	A										<section class="prog__container"><pre><code>public class Types</code></pre></section>	https://developer.android.com/reference/java/sql/Types.html
UCharacter	A										<section class="prog__container"><pre><code>public final class UCharacter</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>Character</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.</section>	https://developer.android.com/reference/android/icu/lang/UCharacter.html
UCharacter.BidiPairedBracketType	A										<section class="prog__container"><pre><code>public static interface UCharacter.BidiPairedBracketType</code></pre>Bidi Paired Bracket Type constants.</section>	https://developer.android.com/reference/android/icu/lang/UCharacter.BidiPairedBracketType.html
UCharacter.DecompositionType	A										<section class="prog__container"><pre><code>public static interface UCharacter.DecompositionType</code></pre>Decomposition Type constants.</section>	https://developer.android.com/reference/android/icu/lang/UCharacter.DecompositionType.html
UCharacter.EastAsianWidth	A										<section class="prog__container"><pre><code>public static interface UCharacter.EastAsianWidth</code></pre>East Asian Width constants.</section>	https://developer.android.com/reference/android/icu/lang/UCharacter.EastAsianWidth.html
UCharacter.GraphemeClusterBreak	A										<section class="prog__container"><pre><code>public static interface UCharacter.GraphemeClusterBreak</code></pre>Grapheme Cluster Break constants.</section>	https://developer.android.com/reference/android/icu/lang/UCharacter.GraphemeClusterBreak.html
UCharacter.HangulSyllableType	A										<section class="prog__container"><pre><code>public static interface UCharacter.HangulSyllableType</code></pre>Hangul Syllable Type constants.</section>	https://developer.android.com/reference/android/icu/lang/UCharacter.HangulSyllableType.html
UCharacter.JoiningGroup	A										<section class="prog__container"><pre><code>public static interface UCharacter.JoiningGroup</code></pre>Joining Group constants.</section>	https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningGroup.html
UCharacter.JoiningType	A										<section class="prog__container"><pre><code>public static interface UCharacter.JoiningType</code></pre>Joining Type constants.</section>	https://developer.android.com/reference/android/icu/lang/UCharacter.JoiningType.html
UCharacter.LineBreak	A										<section class="prog__container"><pre><code>public static interface UCharacter.LineBreak</code></pre>Line Break constants.</section>	https://developer.android.com/reference/android/icu/lang/UCharacter.LineBreak.html
UCharacter.NumericType	A										<section class="prog__container"><pre><code>public static interface UCharacter.NumericType</code></pre>Numeric Type constants.</section>	https://developer.android.com/reference/android/icu/lang/UCharacter.NumericType.html
UCharacter.SentenceBreak	A										<section class="prog__container"><pre><code>public static interface UCharacter.SentenceBreak</code></pre>Sentence Break constants.</section>	https://developer.android.com/reference/android/icu/lang/UCharacter.SentenceBreak.html
UCharacter.UnicodeBlock	A										<section class="prog__container"><pre><code>public static final class UCharacter.UnicodeBlock</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>Character.UnicodeBlock</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'. A family of character subsets representing the character blocks in the Unicode specification, generated from Unicode Data file Blocks.txt. Character blocks generally define characters used for a specific script or purpose. A character is contained by at most one Unicode block. <strong>[icu] Note:</strong> All fields named XXX_ID are specific to ICU.</section>	https://developer.android.com/reference/android/icu/lang/UCharacter.UnicodeBlock.html
UCharacter.WordBreak	A										<section class="prog__container"><pre><code>public static interface UCharacter.WordBreak</code></pre>Word Break constants.</section>	https://developer.android.com/reference/android/icu/lang/UCharacter.WordBreak.html
UCharacterCategory	A										<section class="prog__container"><pre><code>public final class UCharacterCategory</code></pre>Enumerated Unicode category types from the UnicodeData.txt file. Used as return results from UCharacter Equivalent to icu's UCharCategory. Refer to Unicode Consortium for more information about UnicodeData.txt.</section>	https://developer.android.com/reference/android/icu/lang/UCharacterCategory.html
UCharacterDirection	A										<section class="prog__container"><pre><code>public final class UCharacterDirection</code></pre>Enumerated Unicode character linguistic direction constants. Used as return results from UCharacter</section>	https://developer.android.com/reference/android/icu/lang/UCharacterDirection.html
UCharacterEnums	A										<section class="prog__container"><pre><code>public class UCharacterEnums</code></pre>A container for the different 'enumerated types' used by UCharacter.</section>	https://developer.android.com/reference/android/icu/lang/UCharacterEnums.html
UCharacterEnums.ECharacterCategory	A										<section class="prog__container"><pre><code>public static interface UCharacterEnums.ECharacterCategory</code></pre>'Enum' for the CharacterCategory constants. These constants are compatible in name <b>but not in value</b> with those defined in <code>Character</code>.</section>	https://developer.android.com/reference/android/icu/lang/UCharacterEnums.ECharacterCategory.html
UCharacterEnums.ECharacterDirection	A										<section class="prog__container"><pre><code>public static interface UCharacterEnums.ECharacterDirection</code></pre>'Enum' for the CharacterDirection constants. Some constants are compatible in name <b>but not in value</b> with those defined in <code>Character</code>.</section>	https://developer.android.com/reference/android/icu/lang/UCharacterEnums.ECharacterDirection.html
UCharacterIterator	A										<section class="prog__container"><pre><code>public abstract class UCharacterIterator</code></pre>Abstract class that defines an API for iteration on text objects.This is an interface for forward and backward iteration and random access into a text object. Forward iteration is done with post-increment and backward iteration is done with pre-decrement semantics, while the <code>java.text.CharacterIterator</code> interface methods provided forward iteration with "pre-increment" and backward iteration with pre-decrement semantics. This API is more efficient for forward iteration over code points. The other major difference is that this API can do both code unit and code point iteration, <code>java.text.CharacterIterator</code> can only iterate over code units and is limited to BMP (0 - 0xFFFF)</section>	https://developer.android.com/reference/android/icu/text/UCharacterIterator.html
UFormat	A										<section class="prog__container"><pre><code>public abstract class UFormat</code></pre>An abstract class that extends <code>Format</code> to provide additional ICU protocol, specifically, the <tt>getLocale()</tt> API. All ICU format classes are subclasses of this class.</section>	https://developer.android.com/reference/android/icu/text/UFormat.html
ULocale	A										<section class="prog__container"><pre><code>public final class ULocale</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>Locale</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'. A class analogous to <code>Locale</code> that provides additional support for ICU protocol. In ICU 3.0 this class is enhanced to support RFC 3066 language identifiers.</section>	https://developer.android.com/reference/android/icu/util/ULocale.html
ULocale.Builder	A										<section class="prog__container"><pre><code>public static final class ULocale.Builder</code></pre><code>Builder</code> is used to build instances of <code>ULocale</code> from values configured by the setters. Unlike the <code>ULocale</code> constructors, the <code>Builder</code> checks if a value configured by a setter satisfies the syntax requirements defined by the <code>ULocale</code> class. A <code>ULocale</code> object created by a <code>Builder</code> is well-formed and can be transformed to a well-formed IETF BCP 47 language tag without losing information.</section>	https://developer.android.com/reference/android/icu/util/ULocale.Builder.html
ULocale.Category	A										<section class="prog__container"><pre><code>public static final enum ULocale.Category</code></pre>Enum for locale categories. These locale categories are used to get/set the default locale for the specific functionality represented by the category.</section>	https://developer.android.com/reference/android/icu/util/ULocale.Category.html
UProperty	A										<section class="prog__container"><pre><code>public interface UProperty</code></pre></section>	https://developer.android.com/reference/android/icu/lang/UProperty.html
UProperty.NameChoice	A										<section class="prog__container"><pre><code>public static interface UProperty.NameChoice</code></pre>Selector constants for UCharacter.getPropertyName() and UCharacter.getPropertyValueName(). These selectors are used to choose which name is returned for a given property or value. All properties and values have a long name. Most have a short name, but some do not. Unicode allows for additional names, beyond the long and short name, which would be indicated by LONG + i, where i=1, 2,...</section>	https://developer.android.com/reference/android/icu/lang/UProperty.NameChoice.html
URI	A										<section class="prog__container"><pre><code>public final class URI</code></pre>Represents a Uniform Resource Identifier (URI) reference.</section>	https://developer.android.com/reference/java/net/URI.html
URIResolver	A										<section class="prog__container"><pre><code>public interface URIResolver</code></pre></section>	https://developer.android.com/reference/javax/xml/transform/URIResolver.html
URISyntaxException	A										<section class="prog__container"><pre><code>public class URISyntaxException</code></pre>Checked exception thrown to indicate that a string could not be parsed as a URI reference.</section>	https://developer.android.com/reference/java/net/URISyntaxException.html
URL	A										<section class="prog__container"><pre><code>public final class URL</code></pre>Class <code>URL</code> represents a Uniform Resource Locator, a pointer to a "resource" on the World Wide Web. A resource can be something as simple as a file or a directory, or it can be a reference to a more complicated object, such as a query to a database or to a search engine. More information on the types of URLs and their formats can be found at: <blockquote> <i>http://www.socs.uts.edu.au/MosaicDocs-old/url-primer.html</i> </blockquote></section>	https://developer.android.com/reference/java/net/URL.html
URLClassLoader	A										<section class="prog__container"><pre><code>public class URLClassLoader</code></pre>This class loader is used to load classes and resources from a search path of URLs referring to both JAR files and directories. Any URL that ends with a '/' is assumed to refer to a directory. Otherwise, the URL is assumed to refer to a JAR file which will be opened as needed.</section>	https://developer.android.com/reference/java/net/URLClassLoader.html
URLConnection	A										<section class="prog__container"><pre><code>public abstract class URLConnection</code></pre>The abstract class <code>URLConnection</code> is the superclass of all classes that represent a communications link between the application and a URL. Instances of this class can be used both to read from and to write to the resource referenced by the URL. In general, creating a connection to a URL is a multistep process:</section>	https://developer.android.com/reference/java/net/URLConnection.html
URLDecoder	A										<section class="prog__container"><pre><code>public class URLDecoder</code></pre>Utility class for HTML form decoding. This class contains static methods for decoding a String from the <code>application/x-www-form-urlencoded</code> MIME format.</section>	https://developer.android.com/reference/java/net/URLDecoder.html
URLEncoder	A										<section class="prog__container"><pre><code>public class URLEncoder</code></pre>Utility class for HTML form encoding. This class contains static methods for converting a String to the <code>application/x-www-form-urlencoded</code> MIME format. For more information about HTML form encoding, consult the HTML specification.</section>	https://developer.android.com/reference/java/net/URLEncoder.html
URLSpan	A										<section class="prog__container"><pre><code>public class URLSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/URLSpan.html
URLStreamHandler	A										<section class="prog__container"><pre><code>public abstract class URLStreamHandler</code></pre>The abstract class <code>URLStreamHandler</code> is the common superclass for all stream protocol handlers. A stream protocol handler knows how to make a connection for a particular protocol type, such as <code>http</code>, <code>ftp</code>, or <code>gopher</code>.</section>	https://developer.android.com/reference/java/net/URLStreamHandler.html
URLStreamHandlerFactory	A										<section class="prog__container"><pre><code>public interface URLStreamHandlerFactory</code></pre>This interface defines a factory for <code>URL</code> stream protocol handlers.</section>	https://developer.android.com/reference/java/net/URLStreamHandlerFactory.html
URLUtil	A										<section class="prog__container"><pre><code>public final class URLUtil</code></pre></section>	https://developer.android.com/reference/android/webkit/URLUtil.html
UScript	A										<section class="prog__container"><pre><code>public final class UScript</code></pre>Constants for ISO 15924 script codes, and related functions.</section>	https://developer.android.com/reference/android/icu/lang/UScript.html
UScript.ScriptUsage	A										<section class="prog__container"><pre><code>public static final enum UScript.ScriptUsage</code></pre>Script usage constants. See UAX #31 Unicode Identifier and Pattern Syntax. http://www.unicode.org/reports/tr31/#Table_Candidate_Characters_for_Exclusion_from_Identifiers</section>	https://developer.android.com/reference/android/icu/lang/UScript.ScriptUsage.html
UTFDataFormatException	A										<section class="prog__container"><pre><code>public class UTFDataFormatException</code></pre>Signals that a malformed string in modified UTF-8 format has been read in a data input stream or by any class that implements the data input interface. See the <code>DataInput</code> class description for the format in which modified UTF-8 strings are read and written.</section>	https://developer.android.com/reference/java/io/UTFDataFormatException.html
UUID	A										<section class="prog__container"><pre><code>public final class UUID</code></pre>A class that represents an immutable universally unique identifier (UUID). A UUID represents a 128-bit value.</section>	https://developer.android.com/reference/java/util/UUID.html
UiAutomation	A										<section class="prog__container"><pre><code>public final class UiAutomation</code></pre>Class for interacting with the device's UI by simulation user actions and introspection of the screen content. It relies on the platform accessibility APIs to introspect the screen and to perform some actions on the remote view tree. It also allows injecting of arbitrary raw input events simulating user interaction with keyboards and touch devices. One can think of a UiAutomation as a special type of <code>AccessibilityService</code> which does not provide hooks for the service life cycle and exposes other APIs that are useful for UI test automation.</section>	https://developer.android.com/reference/android/app/UiAutomation.html
UiAutomation.AccessibilityEventFilter	A										<section class="prog__container"><pre><code>public static interface UiAutomation.AccessibilityEventFilter</code></pre>Listener for filtering accessibility events.</section>	https://developer.android.com/reference/android/app/UiAutomation.AccessibilityEventFilter.html
UiAutomation.OnAccessibilityEventListener	A										<section class="prog__container"><pre><code>public static interface UiAutomation.OnAccessibilityEventListener</code></pre>Listener for observing the <code>AccessibilityEvent</code> stream.</section>	https://developer.android.com/reference/android/app/UiAutomation.OnAccessibilityEventListener.html
UiModeManager	A										<section class="prog__container"><pre><code>public class UiModeManager</code></pre>This class provides access to the system uimode services. These services allow applications to control UI modes of the device. It provides functionality to disable the car mode and it gives access to the night mode settings.</section>	https://developer.android.com/reference/android/app/UiModeManager.html
UiThread	A										<section class="prog__container"><pre><code>public abstract @interface UiThread</code></pre>Denotes that the annotated method or constructor should only be called on the UI thread. If the annotated element is a class, then all methods in the class should be called on the UI thread.</section>	https://developer.android.com/reference/android/support/annotation/UiThread.html
UiThreadTest	A										<section class="prog__container"><pre><code>public abstract @interface UiThreadTest</code></pre><p class="caution"><strong> This @interface was deprecated in API level 24.</strong><br/> Use UiThreadTest instead. New tests should be written using the Android Testing Support Library.</section>	https://developer.android.com/reference/android/test/UiThreadTest.html
UidHealthStats	A										<section class="prog__container"><pre><code>public final class UidHealthStats</code></pre>Keys for <code>HealthStats</code> returned from <code>SystemHealthManager.takeUidSnapshot(int)</code>, <code>SystemHealthManager.takeMyUidSnapshot()</code>, and <code>SystemHealthManager.takeUidSnapshots(int[])</code>.</section>	https://developer.android.com/reference/android/os/health/UidHealthStats.html
UnaryOperator	A										<section class="prog__container"><pre><code>public interface UnaryOperator</code></pre>Represents an operation on a single operand that produces a result of the same type as its operand. This is a specialization of <code>Function</code> for the case where the operand and result are of the same type.</section>	https://developer.android.com/reference/java/util/function/UnaryOperator.html
UncheckedIOException	A										<section class="prog__container"><pre><code>public class UncheckedIOException</code></pre>Wraps an <code>IOException</code> with an unchecked exception.</section>	https://developer.android.com/reference/java/io/UncheckedIOException.html
UndeclaredThrowableException	A										<section class="prog__container"><pre><code>public class UndeclaredThrowableException</code></pre>Thrown by a method invocation on a proxy instance if its invocation handler's <code>invoke</code> method throws a checked exception (a <code>Throwable</code> that is not assignable to <code>RuntimeException</code> or <code>Error</code>) that is not assignable to any of the exception types declared in the <code>throws</code> clause of the method that was invoked on the proxy instance and dispatched to the invocation handler.</section>	https://developer.android.com/reference/java/lang/reflect/UndeclaredThrowableException.html
UnderlineSpan	A										<section class="prog__container"><pre><code>public class UnderlineSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/UnderlineSpan.html
UnicodeFilter	A										<section class="prog__container"><pre><code>public abstract class UnicodeFilter</code></pre><code>UnicodeFilter</code> defines a protocol for selecting a subset of the full range (U+0000 to U+FFFF) of Unicode characters.</section>	https://developer.android.com/reference/android/icu/text/UnicodeFilter.html
UnicodeMatcher	A										<section class="prog__container"><pre><code>public interface UnicodeMatcher</code></pre><code>UnicodeMatcher</code> defines a protocol for objects that can match a range of characters in a Replaceable string.</section>	https://developer.android.com/reference/android/icu/text/UnicodeMatcher.html
UnicodeSet	A										<section class="prog__container"><pre><code>public class UnicodeSet</code></pre>A mutable set of Unicode characters and multicharacter strings. Objects of this class represent <em>character classes</em> used in regular expressions. A character specifies a subset of Unicode code points. Legal code points are U+0000 to U+10FFFF, inclusive. Note: method freeze() will not only make the set immutable, but also makes important methods much higher performance: contains(c), containsNone(...), span(...), spanBack(...) etc. After the object is frozen, any subsequent call that wants to change the object will throw UnsupportedOperationException.</section>	https://developer.android.com/reference/android/icu/text/UnicodeSet.html
UnicodeSet.ComparisonStyle	A										<section class="prog__container"><pre><code>public static final enum UnicodeSet.ComparisonStyle</code></pre>Comparison style enums used by <code>compareTo(UnicodeSet, ComparisonStyle)</code>.</section>	https://developer.android.com/reference/android/icu/text/UnicodeSet.ComparisonStyle.html
UnicodeSet.EntryRange	A										<section class="prog__container"><pre><code>public static class UnicodeSet.EntryRange</code></pre>A struct-like class used for iteration through ranges, for faster iteration than by String. Read about the restrictions on usage in <code>ranges()</code>.</section>	https://developer.android.com/reference/android/icu/text/UnicodeSet.EntryRange.html
UnicodeSet.SpanCondition	A										<section class="prog__container"><pre><code>public static final enum UnicodeSet.SpanCondition</code></pre>Argument values for whether span() and similar functions continue while the current character is contained vs. not contained in the set.</section>	https://developer.android.com/reference/android/icu/text/UnicodeSet.SpanCondition.html
UnicodeSetIterator	A										<section class="prog__container"><pre><code>public class UnicodeSetIterator</code></pre>UnicodeSetIterator iterates over the contents of a UnicodeSet. It iterates over either code points or code point ranges. After all code points or ranges have been returned, it returns the multicharacter strings of the UnicodSet, if any.</section>	https://developer.android.com/reference/android/icu/text/UnicodeSetIterator.html
UnicodeSetSpanner	A										<section class="prog__container"><pre><code>public class UnicodeSetSpanner</code></pre>A helper class used to count, replace, and trim CharSequences based on UnicodeSet matches. An instance is immutable (and thus thread-safe) iff the source UnicodeSet is frozen.</section>	https://developer.android.com/reference/android/icu/text/UnicodeSetSpanner.html
UnicodeSetSpanner.CountMethod	A										<section class="prog__container"><pre><code>public static final enum UnicodeSetSpanner.CountMethod</code></pre>Options for replaceFrom and countIn to control how to treat each matched span. It is similar to whether one is replacing [abc] by x, or [abc]* by x.</section>	https://developer.android.com/reference/android/icu/text/UnicodeSetSpanner.CountMethod.html
UnicodeSetSpanner.TrimOption	A										<section class="prog__container"><pre><code>public static final enum UnicodeSetSpanner.TrimOption</code></pre>Options for the trim() method</section>	https://developer.android.com/reference/android/icu/text/UnicodeSetSpanner.TrimOption.html
UnknownError	A										<section class="prog__container"><pre><code>public class UnknownError</code></pre>Thrown when an unknown but serious exception has occurred in the Java Virtual Machine.</section>	https://developer.android.com/reference/java/lang/UnknownError.html
UnknownFormatConversionException	A										<section class="prog__container"><pre><code>public class UnknownFormatConversionException</code></pre>Unchecked exception thrown when an unknown conversion is given.</section>	https://developer.android.com/reference/java/util/UnknownFormatConversionException.html
UnknownFormatFlagsException	A										<section class="prog__container"><pre><code>public class UnknownFormatFlagsException</code></pre>Unchecked exception thrown when an unknown flag is given.</section>	https://developer.android.com/reference/java/util/UnknownFormatFlagsException.html
UnknownHostException	A										<section class="prog__container"><pre><code>public class UnknownHostException</code></pre>Thrown to indicate that the IP address of a host could not be determined.</section>	https://developer.android.com/reference/java/net/UnknownHostException.html
UnknownServiceException	A										<section class="prog__container"><pre><code>public class UnknownServiceException</code></pre>Thrown to indicate that an unknown service exception has occurred. Either the MIME type returned by a URL connection does not make sense, or the application is attempting to write to a read-only URL connection.</section>	https://developer.android.com/reference/java/net/UnknownServiceException.html
UnmappableCharacterException	A										<section class="prog__container"><pre><code>public class UnmappableCharacterException</code></pre>Checked exception thrown when an input character (or byte) sequence is valid but cannot be mapped to an output byte (or character) sequence.</section>	https://developer.android.com/reference/java/nio/charset/UnmappableCharacterException.html
UnrecoverableEntryException	A										<section class="prog__container"><pre><code>public class UnrecoverableEntryException</code></pre>This exception is thrown if an entry in the keystore cannot be recovered.</section>	https://developer.android.com/reference/java/security/UnrecoverableEntryException.html
UnrecoverableKeyException	A										<section class="prog__container"><pre><code>public class UnrecoverableKeyException</code></pre>This exception is thrown if a key in the keystore cannot be recovered.</section>	https://developer.android.com/reference/java/security/UnrecoverableKeyException.html
UnresolvedAddressException	A										<section class="prog__container"><pre><code>public class UnresolvedAddressException</code></pre>Unchecked exception thrown when an attempt is made to invoke a network operation upon an unresolved socket address.</section>	https://developer.android.com/reference/java/nio/channels/UnresolvedAddressException.html
UnresolvedPermission	A										<section class="prog__container"><pre><code>public final class UnresolvedPermission</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/security/UnresolvedPermission.html
UnsatisfiedLinkError	A										<section class="prog__container"><pre><code>public class UnsatisfiedLinkError</code></pre>Thrown if the Java Virtual Machine cannot find an appropriate native-language definition of a method declared <code>native</code>.</section>	https://developer.android.com/reference/java/lang/UnsatisfiedLinkError.html
UnsupportedAddressTypeException	A										<section class="prog__container"><pre><code>public class UnsupportedAddressTypeException</code></pre>Unchecked exception thrown when an attempt is made to bind or connect to a socket address of a type that is not supported.</section>	https://developer.android.com/reference/java/nio/channels/UnsupportedAddressTypeException.html
UnsupportedCallbackException	A										<section class="prog__container"><pre><code>public class UnsupportedCallbackException</code></pre>Signals that a <code>CallbackHandler</code> does not recognize a particular <code>Callback</code>.</section>	https://developer.android.com/reference/javax/security/auth/callback/UnsupportedCallbackException.html
UnsupportedCharsetException	A										<section class="prog__container"><pre><code>public class UnsupportedCharsetException</code></pre>Unchecked exception thrown when no support is available for a requested charset.</section>	https://developer.android.com/reference/java/nio/charset/UnsupportedCharsetException.html
UnsupportedClassVersionError	A										<section class="prog__container"><pre><code>public class UnsupportedClassVersionError</code></pre>Thrown when the Java Virtual Machine attempts to read a class file and determines that the major and minor version numbers in the file are not supported.</section>	https://developer.android.com/reference/java/lang/UnsupportedClassVersionError.html
UnsupportedEncodingException	A										<section class="prog__container"><pre><code>public class UnsupportedEncodingException</code></pre>The Character Encoding is not supported.</section>	https://developer.android.com/reference/java/io/UnsupportedEncodingException.html
UnsupportedOperationException	A										<section class="prog__container"><pre><code>public class UnsupportedOperationException</code></pre>Thrown to indicate that the requested operation is not supported.</section>	https://developer.android.com/reference/java/lang/UnsupportedOperationException.html
UnsupportedSchemeException	A										<section class="prog__container"><pre><code>public final class UnsupportedSchemeException</code></pre>Exception thrown when an attempt is made to construct a MediaDrm object using a crypto scheme UUID that is not supported by the device</section>	https://developer.android.com/reference/android/media/UnsupportedSchemeException.html
UpdateAppearance	A										<section class="prog__container"><pre><code>public interface UpdateAppearance</code></pre>The classes that affect character-level text in a way that modifies their appearance when one is added or removed must implement this interface. Note that if the class also impacts size or other metrics, it should instead implement <code>UpdateLayout</code>.</section>	https://developer.android.com/reference/android/text/style/UpdateAppearance.html
UpdateLayout	A										<section class="prog__container"><pre><code>public interface UpdateLayout</code></pre>The classes that affect character-level text formatting in a way that triggers a text layout update when one is added or removed must implement this interface. This interface also includes <code>UpdateAppearance</code> since such a change implicitly also impacts the appearance.</section>	https://developer.android.com/reference/android/text/style/UpdateLayout.html
Uri	A										<section class="prog__container"><pre><code>public abstract class Uri</code></pre>Immutable URI reference. A URI reference includes a URI and a fragment, the component of the URI following a '#'. Builds and parses URI references which conform to RFC 2396.</section>	https://developer.android.com/reference/android/net/Uri.html
Uri.Builder	A										<section class="prog__container"><pre><code>public static final class Uri.Builder</code></pre>Helper class for building or manipulating URI references. Not safe for concurrent use.</section>	https://developer.android.com/reference/android/net/Uri.Builder.html
UriMatcher	A										<section class="prog__container"><pre><code>public class UriMatcher</code></pre>Utility class to aid in matching URIs in content providers.</section>	https://developer.android.com/reference/android/content/UriMatcher.html
UriPermission	A										<section class="prog__container"><pre><code>public final class UriPermission</code></pre>Description of a single Uri permission grant. This grants may have been created via <code>FLAG_GRANT_READ_URI_PERMISSION</code>, etc when sending an <code>Intent</code>, or explicitly through <code>grantUriPermission(String, android.net.Uri, int)</code>.</section>	https://developer.android.com/reference/android/content/UriPermission.html
UrlQuerySanitizer	A										<section class="prog__container"><pre><code>public class UrlQuerySanitizer</code></pre>Sanitizes the Query portion of a URL. Simple example: <code> UrlQuerySanitizer sanitizer = new UrlQuerySanitizer(); sanitizer.setAllowUnregisteredParamaters(true); sanitizer.parseUrl("http://example.com/?name=Joe+User"); String name = sanitizer.getValue("name")); // name now contains "Joe_User" </code> Register ValueSanitizers to customize the way individual parameters are sanitized: <code> UrlQuerySanitizer sanitizer = new UrlQuerySanitizer(); sanitizer.registerParamater("name", UrlQuerySanitizer.createSpaceLegal()); sanitizer.parseUrl("http://example.com/?name=Joe+User"); String name = sanitizer.getValue("name")); // name now contains "Joe User". (The string is first decoded, which // converts the '+' to a ' '. Then the string is sanitized, which // converts the ' ' to an '_'. (The ' ' is converted because the default unregistered parameter sanitizer does not allow any special characters, and ' ' is a special character.) </code> There are several ways to create ValueSanitizers. In order of increasing sophistication: <ol> <li>Call one of the UrlQuerySanitizer.createXXX() methods. <li>Construct your own instance of UrlQuerySanitizer.IllegalCharacterValueSanitizer. <li>Subclass UrlQuerySanitizer.ValueSanitizer to define your own value sanitizer. </li></li></li></ol></section>	https://developer.android.com/reference/android/net/UrlQuerySanitizer.html
UrlQuerySanitizer.IllegalCharacterValueSanitizer	A										<section class="prog__container"><pre><code>public static class UrlQuerySanitizer.IllegalCharacterValueSanitizer</code></pre>Sanitize values based on which characters they contain. Illegal characters are replaced with either space or '_', depending upon whether space is a legal character or not.</section>	https://developer.android.com/reference/android/net/UrlQuerySanitizer.IllegalCharacterValueSanitizer.html
UrlQuerySanitizer.ParameterValuePair	A										<section class="prog__container"><pre><code>public class UrlQuerySanitizer.ParameterValuePair</code></pre>A simple tuple that holds parameter-value pairs.</section>	https://developer.android.com/reference/android/net/UrlQuerySanitizer.ParameterValuePair.html
UrlQuerySanitizer.ValueSanitizer	A										<section class="prog__container"><pre><code>public static interface UrlQuerySanitizer.ValueSanitizer</code></pre>A functor used to sanitize a single query value.</section>	https://developer.android.com/reference/android/net/UrlQuerySanitizer.ValueSanitizer.html
UsageEvents	A										<section class="prog__container"><pre><code>public final class UsageEvents</code></pre>A result returned from <code>queryEvents(long, long)</code> from which to read <code>UsageEvents.Event</code> objects.</section>	https://developer.android.com/reference/android/app/usage/UsageEvents.html
UsageEvents.Event	A										<section class="prog__container"><pre><code>public static final class UsageEvents.Event</code></pre>An event representing a state change for a component.</section>	https://developer.android.com/reference/android/app/usage/UsageEvents.Event.html
UsageStats	A										<section class="prog__container"><pre><code>public final class UsageStats</code></pre>Contains usage statistics for an app package for a specific time range.</section>	https://developer.android.com/reference/android/app/usage/UsageStats.html
UsageStatsManager	A										<section class="prog__container"><pre><code>public final class UsageStatsManager</code></pre>Provides access to device usage history and statistics. Usage data is aggregated into time intervals: days, weeks, months, and years.</section>	https://developer.android.com/reference/android/app/usage/UsageStatsManager.html
UsbAccessory	A										<section class="prog__container"><pre><code>public class UsbAccessory</code></pre>A class representing a USB accessory, which is an external hardware component that communicates with an android application over USB. The accessory is the USB host and android the device side of the USB connection.</section>	https://developer.android.com/reference/android/hardware/usb/UsbAccessory.html
UsbConfiguration	A										<section class="prog__container"><pre><code>public class UsbConfiguration</code></pre>A class representing a configuration on a <code>UsbDevice</code>. A USB configuration can have one or more interfaces, each one providing a different piece of functionality, separate from the other interfaces. An interface will have one or more <code>UsbEndpoint</code>s, which are the channels by which the host transfers data with the device. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/hardware/usb/UsbConfiguration.html
UsbConstants	A										<section class="prog__container"><pre><code>public final class UsbConstants</code></pre>Contains constants for the USB protocol. These constants correspond to definitions in linux/usb/ch9.h in the linux kernel.</section>	https://developer.android.com/reference/android/hardware/usb/UsbConstants.html
UsbDevice	A										<section class="prog__container"><pre><code>public class UsbDevice</code></pre>This class represents a USB device attached to the android device with the android device acting as the USB host. Each device contains one or more <code>UsbInterface</code>s, each of which contains a number of <code>UsbEndpoint</code>s (the channels via which data is transmitted over USB).</section>	https://developer.android.com/reference/android/hardware/usb/UsbDevice.html
UsbDeviceConnection	A										<section class="prog__container"><pre><code>public class UsbDeviceConnection</code></pre>This class is used for sending and receiving data and control messages to a USB device. Instances of this class are created by <code>openDevice(UsbDevice)</code>.</section>	https://developer.android.com/reference/android/hardware/usb/UsbDeviceConnection.html
UsbEndpoint	A										<section class="prog__container"><pre><code>public class UsbEndpoint</code></pre>A class representing an endpoint on a <code>UsbInterface</code>. Endpoints are the channels for sending and receiving data over USB. Typically bulk endpoints are used for sending non-trivial amounts of data. Interrupt endpoints are used for sending small amounts of data, typically events, separately from the main data streams. The endpoint zero is a special endpoint for control messages sent from the host to device. Isochronous endpoints are currently unsupported.</section>	https://developer.android.com/reference/android/hardware/usb/UsbEndpoint.html
UsbInterface	A										<section class="prog__container"><pre><code>public class UsbInterface</code></pre>A class representing an interface on a <code>UsbDevice</code>. USB devices can have one or more interfaces, each one providing a different piece of functionality, separate from the other interfaces. An interface will have one or more <code>UsbEndpoint</code>s, which are the channels by which the host transfers data with the device. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/hardware/usb/UsbInterface.html
UsbManager	A										<section class="prog__container"><pre><code>public class UsbManager</code></pre>This class allows you to access the state of USB and communicate with USB devices. Currently only host mode is supported in the public API.</section>	https://developer.android.com/reference/android/hardware/usb/UsbManager.html
UsbRequest	A										<section class="prog__container"><pre><code>public class UsbRequest</code></pre>A class representing USB request packet. This can be used for both reading and writing data to or from a <code>UsbDeviceConnection</code>. UsbRequests can be used to transfer data on bulk and interrupt endpoints. Requests on bulk endpoints can be sent synchronously via <code>bulkTransfer(UsbEndpoint, byte[], int, int)</code> or asynchronously via <code>queue(ByteBuffer, int)</code> and <code>requestWait()</code>. Requests on interrupt endpoints are only send and received asynchronously.</section>	https://developer.android.com/reference/android/hardware/usb/UsbRequest.html
UserDataHandler	A										<section class="prog__container"><pre><code>public interface UserDataHandler</code></pre>When associating an object to a key on a node using <code>Node.setUserData()</code> the application can provide a handler that gets called when the node the object is associated to is being cloned, imported, or renamed. This can be used by the application to implement various behaviors regarding the data it associates to the DOM nodes. This interface defines that handler.</section>	https://developer.android.com/reference/org/w3c/dom/UserDataHandler.html
UserDictionary	A										<section class="prog__container"><pre><code>public class UserDictionary</code></pre>A provider of user defined words for input methods to use for predictive text input. Applications and input methods may add words into the dictionary. Words can have associated frequency information and locale information.</section>	https://developer.android.com/reference/android/provider/UserDictionary.html
UserDictionary.Words	A										<section class="prog__container"><pre><code>public static class UserDictionary.Words</code></pre>Contains the user defined words.</section>	https://developer.android.com/reference/android/provider/UserDictionary.Words.html
UserHandle	A										<section class="prog__container"><pre><code>public final class UserHandle</code></pre>Representation of a user on the device.</section>	https://developer.android.com/reference/android/os/UserHandle.html
UserManager	A										<section class="prog__container"><pre><code>public class UserManager</code></pre>Manages users and user details on a multi-user system. There are two major categories of users: fully customizable users with their own login, and managed profiles that share a workspace with a related user.</section>	https://developer.android.com/reference/android/os/UserManager.html
UserManagerCompat	A										<section class="prog__container"><pre><code>public class UserManagerCompat</code></pre>Helper for accessing features in <code>UserManager</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/os/UserManagerCompat.html
UserNotAuthenticatedException	A										<section class="prog__container"><pre><code>public class UserNotAuthenticatedException</code></pre>Indicates that a cryptographic operation could not be performed because the user has not been authenticated recently enough. Authenticating the user will resolve this issue.</section>	https://developer.android.com/reference/android/security/keystore/UserNotAuthenticatedException.html
UtteranceProgressListener	A										<section class="prog__container"><pre><code>public abstract class UtteranceProgressListener</code></pre>Listener for events relating to the progress of an utterance through the synthesis queue. Each utterance is associated with a call to <code>speak(CharSequence, int, Bundle, String)</code> or <code>synthesizeToFile(CharSequence, Bundle, File, String)</code> with an associated utterance identifier, as per <code>KEY_PARAM_UTTERANCE_ID</code>. The callbacks specified in this method can be called from multiple threads.</section>	https://developer.android.com/reference/android/speech/tts/UtteranceProgressListener.html
Validator	A										<section class="prog__container"><pre><code>public abstract class Validator</code></pre></section>	https://developer.android.com/reference/javax/xml/validation/Validator.html
ValidatorHandler	A										<section class="prog__container"><pre><code>public abstract class ValidatorHandler</code></pre>Streaming validator that works on SAX stream.</section>	https://developer.android.com/reference/javax/xml/validation/ValidatorHandler.html
ValueAnimator	A										<section class="prog__container"><pre><code>public class ValueAnimator</code></pre>This class provides a simple timing engine for running animations which calculate animated values and set them on target objects.</section>	https://developer.android.com/reference/android/animation/ValueAnimator.html
ValueAnimator.AnimatorUpdateListener	A										<section class="prog__container"><pre><code>public static interface ValueAnimator.AnimatorUpdateListener</code></pre>Implementors of this interface can add themselves as update listeners to an <code>ValueAnimator</code> instance to receive callbacks on every animation frame, after the current frame's values have been calculated for that <code>ValueAnimator</code>.</section>	https://developer.android.com/reference/android/animation/ValueAnimator.AnimatorUpdateListener.html
ValueCallback	A										<section class="prog__container"><pre><code>public interface ValueCallback</code></pre>A callback interface used to provide values asynchronously.</section>	https://developer.android.com/reference/android/webkit/ValueCallback.html
ValueIterator	A										<section class="prog__container"><pre><code>public interface ValueIterator</code></pre></section>	https://developer.android.com/reference/android/icu/util/ValueIterator.html
ValueIterator.Element	A										<section class="prog__container"><pre><code>public static final class ValueIterator.Element</code></pre></section>	https://developer.android.com/reference/android/icu/util/ValueIterator.Element.html
Vector	A										<section class="prog__container"><pre><code>public class Vector</code></pre>The <code>Vector</code> class implements a growable array of objects. Like an array, it contains components that can be accessed using an integer index. However, the size of a <code>Vector</code> can grow or shrink as needed to accommodate adding and removing items after the <code>Vector</code> has been created.</section>	https://developer.android.com/reference/java/util/Vector.html
VectorDrawable	A										<section class="prog__container"><pre><code>public class VectorDrawable</code></pre>This lets you create a drawable based on an XML vector graphic.</section>	https://developer.android.com/reference/android/graphics/drawable/VectorDrawable.html
VectorDrawableCompat	A										<section class="prog__container"><pre><code>public class VectorDrawableCompat</code></pre>For API 24 and above, this class is delegating to the framework's <code>VectorDrawable</code>. For older API version, this class lets you create a drawable based on an XML vector graphic.</section>	https://developer.android.com/reference/android/support/graphics/drawable/VectorDrawableCompat.html
VelocityTracker	A										<section class="prog__container"><pre><code>public final class VelocityTracker</code></pre>Helper for tracking the velocity of touch events, for implementing flinging and other such gestures. Use <code>obtain()</code> to retrieve a new instance of the class when you are going to begin tracking. Put the motion events you receive into it with <code>addMovement(MotionEvent)</code>. When you want to determine the velocity call <code>computeCurrentVelocity(int)</code> and then call <code>getXVelocity(int)</code> and <code>getYVelocity(int)</code> to retrieve the velocity for each pointer id.</section>	https://developer.android.com/reference/android/view/VelocityTracker.html
VelocityTrackerCompat	A										<section class="prog__container"><pre><code>public final class VelocityTrackerCompat</code></pre>Helper for accessing features in <code>VelocityTracker</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/view/VelocityTrackerCompat.html
VerifyError	A										<section class="prog__container"><pre><code>public class VerifyError</code></pre>Thrown when the "verifier" detects that a class file, though well formed, contains some sort of internal inconsistency or security problem.</section>	https://developer.android.com/reference/java/lang/VerifyError.html
Version	A										<section class="prog__container"><pre><code>public class Version</code></pre>This class defines the current version of JUnit</section>	https://developer.android.com/reference/junit/runner/Version.html
VersionInfo	A										<section class="prog__container"><pre><code>public final class VersionInfo</code></pre>Class to store version numbers of the form major.minor.milli.micro.</section>	https://developer.android.com/reference/android/icu/util/VersionInfo.html
VerticalGridFragment	A										<section class="prog__container"><pre><code>public class VerticalGridFragment</code></pre>A fragment for creating leanback vertical grids.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/VerticalGridFragment.html
VerticalGridPresenter	A										<section class="prog__container"><pre><code>public class VerticalGridPresenter</code></pre>A presenter that renders objects in a <code>VerticalGridView</code>.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/VerticalGridPresenter.html
VerticalGridPresenter.ViewHolder	A										<section class="prog__container"><pre><code>public static class VerticalGridPresenter.ViewHolder</code></pre>ViewHolder for the VerticalGridPresenter.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/VerticalGridPresenter.ViewHolder.html
VerticalGridSupportFragment	A										<section class="prog__container"><pre><code>public class VerticalGridSupportFragment</code></pre>A fragment for creating leanback vertical grids.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/VerticalGridSupportFragment.html
VerticalGridView	A										<section class="prog__container"><pre><code>public class VerticalGridView</code></pre>A <code>ViewGroup</code> that shows items in a vertically scrolling list. The items come from the <code>RecyclerView.Adapter</code> associated with this view.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/VerticalGridView.html
Vibrator	A										<section class="prog__container"><pre><code>public abstract class Vibrator</code></pre>Class that operates the vibrator on the device.</section>	https://developer.android.com/reference/android/os/Vibrator.html
VideoProfile	A										<section class="prog__container"><pre><code>public class VideoProfile</code></pre>Represents attributes of video calls.</section>	https://developer.android.com/reference/android/telecom/VideoProfile.html
VideoProfile.CameraCapabilities	A										<section class="prog__container"><pre><code>public static final class VideoProfile.CameraCapabilities</code></pre>Represents the camera capabilities important to a Video Telephony provider.</section>	https://developer.android.com/reference/android/telecom/VideoProfile.CameraCapabilities.html
VideoView	A										<section class="prog__container"><pre><code>public class VideoView</code></pre>Displays a video file. The VideoView class can load images from various sources (such as resources or content providers), takes care of computing its measurement from the video so that it can be used in any layout manager, and provides various display options such as scaling and tinting.</section>	https://developer.android.com/reference/android/widget/VideoView.html
View	A										<section class="prog__container"><pre><code>public class View</code></pre></section>	https://developer.android.com/reference/android/view/View.html
View.AccessibilityDelegate	A										<section class="prog__container"><pre><code>public static class View.AccessibilityDelegate</code></pre></section>	https://developer.android.com/reference/android/view/View.AccessibilityDelegate.html
View.BaseSavedState	A										<section class="prog__container"><pre><code>public static class View.BaseSavedState</code></pre>Base class for derived classes that want to save and restore their own state in <code>onSaveInstanceState()</code>.</section>	https://developer.android.com/reference/android/view/View.BaseSavedState.html
View.DragShadowBuilder	A										<section class="prog__container"><pre><code>public static class View.DragShadowBuilder</code></pre>Creates an image that the system displays during the drag and drop operation. This is called a "drag shadow". The default implementation for a DragShadowBuilder based on a View returns an image that has exactly the same appearance as the given View. The default also positions the center of the drag shadow directly under the touch point. If no View is provided (the constructor with no parameters is used), and <code>onProvideShadowMetrics()</code> and <code>onDrawShadow()</code> are not overridden, then the default is an invisible drag shadow.</section>	https://developer.android.com/reference/android/view/View.DragShadowBuilder.html
View.MeasureSpec	A										<section class="prog__container"><pre><code>public static class View.MeasureSpec</code></pre>A MeasureSpec encapsulates the layout requirements passed from parent to child. Each MeasureSpec represents a requirement for either the width or the height. A MeasureSpec is comprised of a size and a mode. There are three possible modes: <dl> <dt>UNSPECIFIED</dt> <dd> The parent has not imposed any constraint on the child. It can be whatever size it wants. </dd> <dt>EXACTLY</dt> <dd> The parent has determined an exact size for the child. The child is going to be given those bounds regardless of how big it wants to be. </dd> <dt>AT_MOST</dt> <dd> The child can be as large as it wants up to the specified size. </dd> </dl> MeasureSpecs are implemented as ints to reduce object allocation. This class is provided to pack and unpack the &lt;size, mode&gt; tuple into the int.</section>	https://developer.android.com/reference/android/view/View.MeasureSpec.html
View.OnApplyWindowInsetsListener	A										<section class="prog__container"><pre><code>public static interface View.OnApplyWindowInsetsListener</code></pre>Listener for applying window insets on a view in a custom way.</section>	https://developer.android.com/reference/android/view/View.OnApplyWindowInsetsListener.html
View.OnAttachStateChangeListener	A										<section class="prog__container"><pre><code>public static interface View.OnAttachStateChangeListener</code></pre>Interface definition for a callback to be invoked when this view is attached or detached from its window.</section>	https://developer.android.com/reference/android/view/View.OnAttachStateChangeListener.html
View.OnClickListener	A										<section class="prog__container"><pre><code>public static interface View.OnClickListener</code></pre>Interface definition for a callback to be invoked when a view is clicked.</section>	https://developer.android.com/reference/android/view/View.OnClickListener.html
View.OnContextClickListener	A										<section class="prog__container"><pre><code>public static interface View.OnContextClickListener</code></pre>Interface definition for a callback to be invoked when a view is context clicked.</section>	https://developer.android.com/reference/android/view/View.OnContextClickListener.html
View.OnCreateContextMenuListener	A										<section class="prog__container"><pre><code>public static interface View.OnCreateContextMenuListener</code></pre>Interface definition for a callback to be invoked when the context menu for this view is being built.</section>	https://developer.android.com/reference/android/view/View.OnCreateContextMenuListener.html
View.OnDragListener	A										<section class="prog__container"><pre><code>public static interface View.OnDragListener</code></pre>Interface definition for a callback to be invoked when a drag is being dispatched to this view. The callback will be invoked before the hosting view's own onDrag(event) method. If the listener wants to fall back to the hosting view's onDrag(event) behavior, it should return 'false' from this callback. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/view/View.OnDragListener.html
View.OnFocusChangeListener	A										<section class="prog__container"><pre><code>public static interface View.OnFocusChangeListener</code></pre>Interface definition for a callback to be invoked when the focus state of a view changed.</section>	https://developer.android.com/reference/android/view/View.OnFocusChangeListener.html
View.OnGenericMotionListener	A										<section class="prog__container"><pre><code>public static interface View.OnGenericMotionListener</code></pre>Interface definition for a callback to be invoked when a generic motion event is dispatched to this view. The callback will be invoked before the generic motion event is given to the view.</section>	https://developer.android.com/reference/android/view/View.OnGenericMotionListener.html
View.OnHoverListener	A										<section class="prog__container"><pre><code>public static interface View.OnHoverListener</code></pre>Interface definition for a callback to be invoked when a hover event is dispatched to this view. The callback will be invoked before the hover event is given to the view.</section>	https://developer.android.com/reference/android/view/View.OnHoverListener.html
View.OnKeyListener	A										<section class="prog__container"><pre><code>public static interface View.OnKeyListener</code></pre>Interface definition for a callback to be invoked when a hardware key event is dispatched to this view. The callback will be invoked before the key event is given to the view. This is only useful for hardware keyboards; a software input method has no obligation to trigger this listener.</section>	https://developer.android.com/reference/android/view/View.OnKeyListener.html
View.OnLayoutChangeListener	A										<section class="prog__container"><pre><code>public static interface View.OnLayoutChangeListener</code></pre>Interface definition for a callback to be invoked when the layout bounds of a view changes due to layout processing.</section>	https://developer.android.com/reference/android/view/View.OnLayoutChangeListener.html
View.OnLongClickListener	A										<section class="prog__container"><pre><code>public static interface View.OnLongClickListener</code></pre>Interface definition for a callback to be invoked when a view has been clicked and held.</section>	https://developer.android.com/reference/android/view/View.OnLongClickListener.html
View.OnScrollChangeListener	A										<section class="prog__container"><pre><code>public static interface View.OnScrollChangeListener</code></pre>Interface definition for a callback to be invoked when the scroll X or Y positions of a view change.</section>	https://developer.android.com/reference/android/view/View.OnScrollChangeListener.html
View.OnSystemUiVisibilityChangeListener	A										<section class="prog__container"><pre><code>public static interface View.OnSystemUiVisibilityChangeListener</code></pre>Interface definition for a callback to be invoked when the status bar changes visibility. This reports <strong>global</strong> changes to the system UI state, not what the application is requesting.</section>	https://developer.android.com/reference/android/view/View.OnSystemUiVisibilityChangeListener.html
View.OnTouchListener	A										<section class="prog__container"><pre><code>public static interface View.OnTouchListener</code></pre>Interface definition for a callback to be invoked when a touch event is dispatched to this view. The callback will be invoked before the touch event is given to the view.</section>	https://developer.android.com/reference/android/view/View.OnTouchListener.html
ViewAnimationUtils	A										<section class="prog__container"><pre><code>public final class ViewAnimationUtils</code></pre>Defines common utilities for working with View's animations.</section>	https://developer.android.com/reference/android/view/ViewAnimationUtils.html
ViewAnimator	A										<section class="prog__container"><pre><code>public class ViewAnimator</code></pre>Base class for a <code>FrameLayout</code> container that will perform animations when switching between its views.</section>	https://developer.android.com/reference/android/widget/ViewAnimator.html
ViewAsserts	A										<section class="prog__container"><pre><code>public class ViewAsserts</code></pre><p class="caution"><strong> This class was deprecated in API level 24.</strong><br/> Use Espresso View Matchers instead. New test should be written using the Android Testing Support Library. For more information about UI testing, take the Espresso UI testing training.</section>	https://developer.android.com/reference/android/test/ViewAsserts.html
ViewCompat	D								*[[v13.view.ViewCompat]], <section class="prog__container"><pre><code>public class ViewCompat</code></pre>Helper for accessing features in <code>View</code> introduced after API level 13 in a backwards compatible fashion.</section>\n*[[v4.view.ViewCompat]], <section class="prog__container"><pre><code>public class ViewCompat</code></pre>Helper for accessing features in <code>View</code> introduced after API level 4 in a backwards compatible fashion.</section>			
ViewConfiguration	A										<section class="prog__container"><pre><code>public class ViewConfiguration</code></pre>Contains methods to standard constants used in the UI for timeouts, sizes, and distances.</section>	https://developer.android.com/reference/android/view/ViewConfiguration.html
ViewConfigurationCompat	A										<section class="prog__container"><pre><code>public final class ViewConfigurationCompat</code></pre>Helper for accessing features in <code>ViewConfiguration</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/view/ViewConfigurationCompat.html
ViewDataBinding	A										<section class="prog__container"><pre><code>public abstract class ViewDataBinding</code></pre>Base class for generated data binding classes. If possible, the generated binding should be instantiated using one of its generated static bind or inflate methods. If the specific binding is unknown, <code>bind(View)</code> or <code>inflate(LayoutInflater, int, ViewGroup, boolean)</code> should be used.</section>	https://developer.android.com/reference/android/databinding/ViewDataBinding.html
ViewDebug	A										<section class="prog__container"><pre><code>public class ViewDebug</code></pre>Various debugging/tracing tools related to <code>View</code> and the view hierarchy.</section>	https://developer.android.com/reference/android/view/ViewDebug.html
ViewDebug.CapturedViewProperty	A										<section class="prog__container"><pre><code>public static abstract @interface ViewDebug.CapturedViewProperty</code></pre>This annotation can be used to mark fields and methods to be dumped when the view is captured. Methods with this annotation must have no arguments and must return a valid type of data.</section>	https://developer.android.com/reference/android/view/ViewDebug.CapturedViewProperty.html
ViewDebug.ExportedProperty	A										<section class="prog__container"><pre><code>public static abstract @interface ViewDebug.ExportedProperty</code></pre>This annotation can be used to mark fields and methods to be dumped by the view server. Only non-void methods with no arguments can be annotated by this annotation.</section>	https://developer.android.com/reference/android/view/ViewDebug.ExportedProperty.html
ViewDebug.FlagToString	A										<section class="prog__container"><pre><code>public static abstract @interface ViewDebug.FlagToString</code></pre>Defines a mapping from a flag to a String. Such a mapping can be used in an @ExportedProperty to provide more meaningful values to the end user.</section>	https://developer.android.com/reference/android/view/ViewDebug.FlagToString.html
ViewDebug.HierarchyTraceType	A										<section class="prog__container"><pre><code>public static final enum ViewDebug.HierarchyTraceType</code></pre><p class="caution"><strong> This enum was deprecated in API level 16.</strong><br/> This enum is now unused</section>	https://developer.android.com/reference/android/view/ViewDebug.HierarchyTraceType.html
ViewDebug.IntToString	A										<section class="prog__container"><pre><code>public static abstract @interface ViewDebug.IntToString</code></pre>Defines a mapping from an int value to a String. Such a mapping can be used in an @ExportedProperty to provide more meaningful values to the end user.</section>	https://developer.android.com/reference/android/view/ViewDebug.IntToString.html
ViewDebug.RecyclerTraceType	A										<section class="prog__container"><pre><code>public static final enum ViewDebug.RecyclerTraceType</code></pre><p class="caution"><strong> This enum was deprecated in API level 16.</strong><br/> This enum is now unused</section>	https://developer.android.com/reference/android/view/ViewDebug.RecyclerTraceType.html
ViewDragHelper	A										<section class="prog__container"><pre><code>public class ViewDragHelper</code></pre>ViewDragHelper is a utility class for writing custom ViewGroups. It offers a number of useful operations and state tracking for allowing a user to drag and reposition views within their parent ViewGroup.</section>	https://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.html
ViewDragHelper.Callback	A										<section class="prog__container"><pre><code>public static abstract class ViewDragHelper.Callback</code></pre>A Callback is used as a communication channel with the ViewDragHelper back to the parent view using it. <code>on*</code>methods are invoked on siginficant events and several accessor methods are expected to provide the ViewDragHelper with more information about the state of the parent view upon request. The callback also makes decisions governing the range and draggability of child views.</section>	https://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.Callback.html
ViewFlipper	A										<section class="prog__container"><pre><code>public class ViewFlipper</code></pre>Simple <code>ViewAnimator</code> that will animate between two or more views that have been added to it. Only one child is shown at a time. If requested, can automatically flip between each child at a regular interval.</section>	https://developer.android.com/reference/android/widget/ViewFlipper.html
ViewGroup	A										<section class="prog__container"><pre><code>public abstract class ViewGroup</code></pre></section>	https://developer.android.com/reference/android/view/ViewGroup.html
ViewGroup.LayoutParams	A										<section class="prog__container"><pre><code>public static class ViewGroup.LayoutParams</code></pre>LayoutParams are used by views to tell their parents how they want to be laid out. See <code>ViewGroup Layout Attributes</code> for a list of all child view attributes that this class supports.</section>	https://developer.android.com/reference/android/view/ViewGroup.LayoutParams.html
ViewGroup.MarginLayoutParams	A										<section class="prog__container"><pre><code>public static class ViewGroup.MarginLayoutParams</code></pre>Per-child layout information for layouts that support margins. See <code>ViewGroup Margin Layout Attributes</code> for a list of all child view attributes that this class supports.</section>	https://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html
ViewGroup.OnHierarchyChangeListener	A										<section class="prog__container"><pre><code>public static interface ViewGroup.OnHierarchyChangeListener</code></pre>Interface definition for a callback to be invoked when the hierarchy within this view changed. The hierarchy changes whenever a child is added to or removed from this view.</section>	https://developer.android.com/reference/android/view/ViewGroup.OnHierarchyChangeListener.html
ViewGroupCompat	A										<section class="prog__container"><pre><code>public final class ViewGroupCompat</code></pre>Helper for accessing features in <code>ViewGroup</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/view/ViewGroupCompat.html
ViewGroupOverlay	A										<section class="prog__container"><pre><code>public class ViewGroupOverlay</code></pre>A group overlay is an extra layer that sits on top of a ViewGroup (the "host view") which is drawn after all other content in that view (including the view group's children). Interaction with the overlay layer is done by adding and removing views and drawables.</section>	https://developer.android.com/reference/android/view/ViewGroupOverlay.html
ViewHolderTask	A										<section class="prog__container"><pre><code>public interface ViewHolderTask</code></pre>Interface for schedule task on a ViewHolder.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/ViewHolderTask.html
ViewManager	A										<section class="prog__container"><pre><code>public interface ViewManager</code></pre>Interface to let you add and remove child views to an Activity. To get an instance of this class, call <code>Context.getSystemService()</code>.</section>	https://developer.android.com/reference/android/view/ViewManager.html
ViewOutlineProvider	A										<section class="prog__container"><pre><code>public abstract class ViewOutlineProvider</code></pre>Interface by which a View builds its <code>Outline</code>, used for shadow casting and clipping.</section>	https://developer.android.com/reference/android/view/ViewOutlineProvider.html
ViewOverlay	A										<section class="prog__container"><pre><code>public class ViewOverlay</code></pre>An overlay is an extra layer that sits on top of a View (the "host view") which is drawn after all other content in that view (including children, if the view is a ViewGroup). Interaction with the overlay layer is done by adding and removing drawables.</section>	https://developer.android.com/reference/android/view/ViewOverlay.html
ViewPager	D								*[[view.ViewPager]], <section class="prog__container"><pre><code>public class ViewPager</code></pre>Layout manager that allows the user to flip left and right through pages of data. You supply an implementation of a <code>PagerAdapter</code> to generate the pages that the view shows.</section>\n*[[widget.ViewPager]], Framework copy of the support-v4 ViewPager class.			
ViewPager.DecorView	A										<section class="prog__container"><pre><code>public static abstract @interface ViewPager.DecorView</code></pre>Annotation which allows marking of views to be decoration views when added to a view pager.</section>	https://developer.android.com/reference/android/support/v4/view/ViewPager.DecorView.html
ViewPager.LayoutParams	D								*[[view.ViewPager.LayoutParams]], <section class="prog__container"><pre><code>public static class ViewPager.LayoutParams</code></pre>Layout parameters that should be supplied for views added to a ViewPager.</section>\n*[[widget.ViewPager.LayoutParams]], Layout parameters that should be supplied for views added to a ViewPager.			
ViewPager.OnAdapterChangeListener	A										<section class="prog__container"><pre><code>public static interface ViewPager.OnAdapterChangeListener</code></pre>Callback interface for responding to adapter changes.</section>	https://developer.android.com/reference/android/support/v4/view/ViewPager.OnAdapterChangeListener.html
ViewPager.OnPageChangeListener	D								*[[view.ViewPager.OnPageChangeListener]], <section class="prog__container"><pre><code>public static interface ViewPager.OnPageChangeListener</code></pre>Callback interface for responding to changing state of the selected page.</section>\n*[[widget.ViewPager.OnPageChangeListener]], Callback interface for responding to changing state of the selected page.			
ViewPager.PageTransformer	D								*[[view.ViewPager.PageTransformer]], <section class="prog__container"><pre><code>public static interface ViewPager.PageTransformer</code></pre>A PageTransformer is invoked whenever a visible/attached page is scrolled. This offers an opportunity for the application to apply a custom transformation to the page views using animation properties.</section>\n*[[widget.ViewPager.PageTransformer]], A PageTransformer is invoked whenever a visible/attached page is scrolled.			
ViewPager.SavedState	D								*[[view.ViewPager.SavedState]], <section class="prog__container"><pre><code>public static class ViewPager.SavedState</code></pre>This is the persistent state that is saved by ViewPager. Only needed if you are creating a sublass of ViewPager that must save its own state, in which case it should implement a subclass of this which contains that state.</section>\n*[[widget.ViewPager.SavedState]], This is the persistent state that is saved by ViewPager.			
ViewPager.SimpleOnPageChangeListener	D								*[[view.ViewPager.SimpleOnPageChangeListener]], <section class="prog__container"><pre><code>public static class ViewPager.SimpleOnPageChangeListener</code></pre>Simple implementation of the <code>ViewPager.OnPageChangeListener</code> interface with stub implementations of each method. Extend this if you do not intend to override every method of <code>ViewPager.OnPageChangeListener</code>.</section>\n*[[widget.ViewPager.SimpleOnPageChangeListener]], Simple implementation of the <code><a href="https://developer.android.com/reference/com/android/internal/widget/ViewPager.OnPageChangeListener.html">ViewPager.OnPageChangeListener</a></code> interface with stub implementations of each method.			
ViewParent	A										<section class="prog__container"><pre><code>public interface ViewParent</code></pre>Defines the responsibilities for a class that will be a parent of a View. This is the API that a view sees when it wants to interact with its parent.</section>	https://developer.android.com/reference/android/view/ViewParent.html
ViewParentCompat	A										<section class="prog__container"><pre><code>public final class ViewParentCompat</code></pre>Helper for accessing features in <code>ViewParent</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/view/ViewParentCompat.html
ViewPropertyAnimator	A										<section class="prog__container"><pre><code>public class ViewPropertyAnimator</code></pre>This class enables automatic and optimized animation of select properties on View objects. If only one or two properties on a View object are being animated, then using an <code>ObjectAnimator</code> is fine; the property setters called by ObjectAnimator are well equipped to do the right thing to set the property and invalidate the view appropriately. But if several properties are animated simultaneously, or if you just want a more convenient syntax to animate a specific property, then ViewPropertyAnimator might be more well-suited to the task.</section>	https://developer.android.com/reference/android/view/ViewPropertyAnimator.html
ViewPropertyAnimatorCompat	A										<section class="prog__container"><pre><code>public final class ViewPropertyAnimatorCompat</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ViewPropertyAnimatorCompat.html
ViewPropertyAnimatorListener	A										<section class="prog__container"><pre><code>public interface ViewPropertyAnimatorListener</code></pre></section>	https://developer.android.com/reference/android/support/v4/view/ViewPropertyAnimatorListener.html
ViewPropertyAnimatorListenerAdapter	A										<section class="prog__container"><pre><code>public class ViewPropertyAnimatorListenerAdapter</code></pre>This adapter class provides empty implementations of the methods from <code>ViewPropertyAnimatorListener</code>. Any custom listener that cares only about a subset of the methods of this listener can simply subclass this adapter class instead of implementing the interface directly.</section>	https://developer.android.com/reference/android/support/v4/view/ViewPropertyAnimatorListenerAdapter.html
ViewPropertyAnimatorUpdateListener	A										<section class="prog__container"><pre><code>public interface ViewPropertyAnimatorUpdateListener</code></pre>Implementors of this interface can add themselves as update listeners to an <code>ViewPropertyAnimatorCompat</code> instance to receive callbacks on every animation frame, after the current frame's values have been calculated for that <code>ViewPropertyAnimatorCompat</code>.</section>	https://developer.android.com/reference/android/support/v4/view/ViewPropertyAnimatorUpdateListener.html
ViewStructure	A										<section class="prog__container"><pre><code>public abstract class ViewStructure</code></pre>Container for storing additional per-view data generated by <code>View.onProvideStructure</code>.</section>	https://developer.android.com/reference/android/view/ViewStructure.html
ViewStub	A										<section class="prog__container"><pre><code>public final class ViewStub</code></pre>A ViewStub is an invisible, zero-sized View that can be used to lazily inflate layout resources at runtime. When a ViewStub is made visible, or when <code>inflate()</code> is invoked, the layout resource is inflated. The ViewStub then replaces itself in its parent with the inflated View or Views. Therefore, the ViewStub exists in the view hierarchy until <code>setVisibility(int)</code> or <code>inflate()</code> is invoked. The inflated View is added to the ViewStub's parent with the ViewStub's layout parameters. Similarly, you can define/override the inflate View's id by using the ViewStub's inflatedId property. For instance: <pre> &lt;ViewStub android:id="@+id/stub" android:inflatedId="@+id/subTree" android:layout="@layout/mySubTree" android:layout_width="120dip" android:layout_height="40dip" /&gt; </pre> The ViewStub thus defined can be found using the id "stub." After inflation of the layout resource "mySubTree," the ViewStub is removed from its parent. The View created by inflating the layout resource "mySubTree" can be found using the id "subTree," specified by the inflatedId property. The inflated View is finally assigned a width of 120dip and a height of 40dip. The preferred way to perform the inflation of the layout resource is the following: <pre> ViewStub stub = (ViewStub) findViewById(R.id.stub); View inflated = stub.inflate(); </pre> When <code>inflate()</code> is invoked, the ViewStub is replaced by the inflated View and the inflated View is returned. This lets applications get a reference to the inflated View without executing an extra findViewById().</section>	https://developer.android.com/reference/android/view/ViewStub.html
ViewStub.OnInflateListener	A										<section class="prog__container"><pre><code>public static interface ViewStub.OnInflateListener</code></pre>Listener used to receive a notification after a ViewStub has successfully inflated its layout resource.</section>	https://developer.android.com/reference/android/view/ViewStub.OnInflateListener.html
ViewStubProxy	A										<section class="prog__container"><pre><code>public class ViewStubProxy</code></pre>This class represents a ViewStub before and after inflation. Before inflation, the ViewStub is accessible. After inflation, the root View of the inflated layout will be available. If the inflated layout has data binding, the ViewDataBinding for the inflated View is accessible.</section>	https://developer.android.com/reference/android/databinding/ViewStubProxy.html
ViewSwitcher	A										<section class="prog__container"><pre><code>public class ViewSwitcher</code></pre><code>ViewAnimator</code> that switches between two views, and has a factory from which these views are created. You can either use the factory to create the views, or add them yourself. A ViewSwitcher can only have two child views, of which only one is shown at a time.</section>	https://developer.android.com/reference/android/widget/ViewSwitcher.html
ViewSwitcher.ViewFactory	A										<section class="prog__container"><pre><code>public static interface ViewSwitcher.ViewFactory</code></pre>Creates views in a ViewSwitcher.</section>	https://developer.android.com/reference/android/widget/ViewSwitcher.ViewFactory.html
ViewTreeObserver	A										<section class="prog__container"><pre><code>public final class ViewTreeObserver</code></pre>A view tree observer is used to register listeners that can be notified of global changes in the view tree. Such global events include, but are not limited to, layout of the whole tree, beginning of the drawing pass, touch mode change.... A ViewTreeObserver should never be instantiated by applications as it is provided by the views hierarchy. Refer to <code>getViewTreeObserver()</code> for more information.</section>	https://developer.android.com/reference/android/view/ViewTreeObserver.html
ViewTreeObserver.OnDrawListener	A										<section class="prog__container"><pre><code>public static interface ViewTreeObserver.OnDrawListener</code></pre>Interface definition for a callback to be invoked when the view tree is about to be drawn.</section>	https://developer.android.com/reference/android/view/ViewTreeObserver.OnDrawListener.html
ViewTreeObserver.OnGlobalFocusChangeListener	A										<section class="prog__container"><pre><code>public static interface ViewTreeObserver.OnGlobalFocusChangeListener</code></pre>Interface definition for a callback to be invoked when the focus state within the view tree changes.</section>	https://developer.android.com/reference/android/view/ViewTreeObserver.OnGlobalFocusChangeListener.html
ViewTreeObserver.OnGlobalLayoutListener	A										<section class="prog__container"><pre><code>public static interface ViewTreeObserver.OnGlobalLayoutListener</code></pre>Interface definition for a callback to be invoked when the global layout state or the visibility of views within the view tree changes.</section>	https://developer.android.com/reference/android/view/ViewTreeObserver.OnGlobalLayoutListener.html
ViewTreeObserver.OnPreDrawListener	A										<section class="prog__container"><pre><code>public static interface ViewTreeObserver.OnPreDrawListener</code></pre>Interface definition for a callback to be invoked when the view tree is about to be drawn.</section>	https://developer.android.com/reference/android/view/ViewTreeObserver.OnPreDrawListener.html
ViewTreeObserver.OnScrollChangedListener	A										<section class="prog__container"><pre><code>public static interface ViewTreeObserver.OnScrollChangedListener</code></pre>Interface definition for a callback to be invoked when something in the view tree has been scrolled.</section>	https://developer.android.com/reference/android/view/ViewTreeObserver.OnScrollChangedListener.html
ViewTreeObserver.OnTouchModeChangeListener	A										<section class="prog__container"><pre><code>public static interface ViewTreeObserver.OnTouchModeChangeListener</code></pre>Interface definition for a callback to be invoked when the touch mode changes.</section>	https://developer.android.com/reference/android/view/ViewTreeObserver.OnTouchModeChangeListener.html
ViewTreeObserver.OnWindowAttachListener	A										<section class="prog__container"><pre><code>public static interface ViewTreeObserver.OnWindowAttachListener</code></pre>Interface definition for a callback to be invoked when the view hierarchy is attached to and detached from its window.</section>	https://developer.android.com/reference/android/view/ViewTreeObserver.OnWindowAttachListener.html
ViewTreeObserver.OnWindowFocusChangeListener	A										<section class="prog__container"><pre><code>public static interface ViewTreeObserver.OnWindowFocusChangeListener</code></pre>Interface definition for a callback to be invoked when the view hierarchy's window focus state changes.</section>	https://developer.android.com/reference/android/view/ViewTreeObserver.OnWindowFocusChangeListener.html
VirtualDisplay	A										<section class="prog__container"><pre><code>public final class VirtualDisplay</code></pre>Represents a virtual display. The content of a virtual display is rendered to a <code>Surface</code> that you must provide to <code>createVirtualDisplay()</code>.</section>	https://developer.android.com/reference/android/hardware/display/VirtualDisplay.html
VirtualDisplay.Callback	A										<section class="prog__container"><pre><code>public static abstract class VirtualDisplay.Callback</code></pre>Interface for receiving information about a <code>VirtualDisplay</code>'s state changes.</section>	https://developer.android.com/reference/android/hardware/display/VirtualDisplay.Callback.html
VirtualMachineError	A										<section class="prog__container"><pre><code>public abstract class VirtualMachineError</code></pre>Thrown to indicate that the Java Virtual Machine is broken or has run out of resources necessary for it to continue operating.</section>	https://developer.android.com/reference/java/lang/VirtualMachineError.html
Virtualizer	A										<section class="prog__container"><pre><code>public class Virtualizer</code></pre>An audio virtualizer is a general name for an effect to spatialize audio channels. The exact behavior of this effect is dependent on the number of audio input channels and the types and number of audio output channels of the device. For example, in the case of a stereo input and stereo headphone output, a stereo widening effect is used when this effect is turned on.</section>	https://developer.android.com/reference/android/media/audiofx/Virtualizer.html
Virtualizer.OnParameterChangeListener	A										<section class="prog__container"><pre><code>public static interface Virtualizer.OnParameterChangeListener</code></pre>The OnParameterChangeListener interface defines a method called by the Virtualizer when a parameter value has changed.</section>	https://developer.android.com/reference/android/media/audiofx/Virtualizer.OnParameterChangeListener.html
Virtualizer.Settings	A										<section class="prog__container"><pre><code>public static class Virtualizer.Settings</code></pre>The Settings class regroups all virtualizer parameters. It is used in conjuntion with getProperties() and setProperties() methods to backup and restore all parameters in a single call.</section>	https://developer.android.com/reference/android/media/audiofx/Virtualizer.Settings.html
Visibility	D								*[[opengl.Visibility]], <section class="prog__container"><pre><code>public class Visibility</code></pre>A collection of utility methods for computing the visibility of triangle meshes.</section>\n*[[support.transition.Visibility]], <section class="prog__container"><pre><code>public abstract class Visibility</code></pre>This transition tracks changes to the visibility of target views in the start and end scenes. Visibility is determined not just by the <code>setVisibility(int)</code> state of views, but also whether views exist in the current view hierarchy. The class is intended to be a utility for subclasses such as <code>Fade</code>, which use this visibility information to determine the specific animations to run when visibility changes occur. Subclasses should implement one or both of the methods <code>onAppear(ViewGroup, TransitionValues, int, TransitionValues, int)</code>, <code>onDisappear(ViewGroup, TransitionValues, int, TransitionValues, int)</code>,</section>\n*[[android.transition.Visibility]], <section class="prog__container"><pre><code>public abstract class Visibility</code></pre>This transition tracks changes to the visibility of target views in the start and end scenes. Visibility is determined not just by the <code>setVisibility(int)</code> state of views, but also whether views exist in the current view hierarchy. The class is intended to be a utility for subclasses such as <code>Fade</code>, which use this visibility information to determine the specific animations to run when visibility changes occur. Subclasses should implement one or both of the methods <code>onAppear(ViewGroup, TransitionValues, int, TransitionValues, int)</code>, <code>onDisappear(ViewGroup, TransitionValues, int, TransitionValues, int)</code> or <code>onAppear(ViewGroup, View, TransitionValues, TransitionValues)</code>, <code>onDisappear(ViewGroup, View, TransitionValues, TransitionValues)</code>.</section>			
VisibilityPropagation	A										<section class="prog__container"><pre><code>public abstract class VisibilityPropagation</code></pre>Base class for <code>TransitionPropagation</code>s that care about View Visibility and the center position of the View.</section>	https://developer.android.com/reference/android/transition/VisibilityPropagation.html
VisibleForTesting	A										<section class="prog__container"><pre><code>public abstract @interface VisibleForTesting</code></pre>Denotes that the class, method or field has its visibility relaxed, so that it is more widely visible than otherwise necessary to make code testable.</section>	https://developer.android.com/reference/android/support/annotation/VisibleForTesting.html
Visualizer	A										<section class="prog__container"><pre><code>public class Visualizer</code></pre>The Visualizer class enables application to retrieve part of the currently playing audio for visualization purpose. It is not an audio recording interface and only returns partial and low quality audio content. However, to protect privacy of certain audio data (e.g voice mail) the use of the visualizer requires the permission android.permission.RECORD_AUDIO.</section>	https://developer.android.com/reference/android/media/audiofx/Visualizer.html
Visualizer.MeasurementPeakRms	A										<section class="prog__container"><pre><code>public static final class Visualizer.MeasurementPeakRms</code></pre>A class to store peak and RMS values. Peak and RMS are expressed in mB, as described in the <code>MEASUREMENT_MODE_PEAK_RMS</code> measurement mode.</section>	https://developer.android.com/reference/android/media/audiofx/Visualizer.MeasurementPeakRms.html
Visualizer.OnDataCaptureListener	A										<section class="prog__container"><pre><code>public static interface Visualizer.OnDataCaptureListener</code></pre>The OnDataCaptureListener interface defines methods called by the Visualizer to periodically update the audio visualization capture. The client application can implement this interface and register the listener with the <code>setDataCaptureListener(OnDataCaptureListener, int, boolean, boolean)</code> method.</section>	https://developer.android.com/reference/android/media/audiofx/Visualizer.OnDataCaptureListener.html
Voice	A										<section class="prog__container"><pre><code>public class Voice</code></pre>Characteristics and features of a Text-To-Speech Voice. Each TTS Engine can expose multiple voices for each locale, with different set of features.</section>	https://developer.android.com/reference/android/speech/tts/Voice.html
VoiceInteractionService	A										<section class="prog__container"><pre><code>public class VoiceInteractionService</code></pre>Top-level service of the current global voice interactor, which is providing support for hotwording, the back-end of a <code>VoiceInteractor</code>, etc. The current VoiceInteractionService that has been selected by the user is kept always running by the system, to allow it to do things like listen for hotwords in the background to instigate voice interactions.</section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionService.html
VoiceInteractionSession	A										<section class="prog__container"><pre><code>public class VoiceInteractionSession</code></pre>An active voice interaction session, providing a facility for the implementation to interact with the user in the voice interaction layer. The user interface is initially shown by default, and can be created be overriding <code>onCreateContentView()</code> in which the UI can be built.</section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.html
VoiceInteractionSession.AbortVoiceRequest	A										<section class="prog__container"><pre><code>public static final class VoiceInteractionSession.AbortVoiceRequest</code></pre>A request to report that the current user interaction can not be completed with voice, as per <code>VoiceInteractor.AbortVoiceRequest</code>.</section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.AbortVoiceRequest.html
VoiceInteractionSession.CommandRequest	A										<section class="prog__container"><pre><code>public static final class VoiceInteractionSession.CommandRequest</code></pre>A generic vendor-specific request, as per <code>VoiceInteractor.CommandRequest</code>.</section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.CommandRequest.html
VoiceInteractionSession.CompleteVoiceRequest	A										<section class="prog__container"><pre><code>public static final class VoiceInteractionSession.CompleteVoiceRequest</code></pre>A request to simply inform the user that the voice operation has completed, as per <code>VoiceInteractor.CompleteVoiceRequest</code>.</section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.CompleteVoiceRequest.html
VoiceInteractionSession.ConfirmationRequest	A										<section class="prog__container"><pre><code>public static final class VoiceInteractionSession.ConfirmationRequest</code></pre>A request for confirmation from the user of an operation, as per <code>VoiceInteractor.ConfirmationRequest</code>.</section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.ConfirmationRequest.html
VoiceInteractionSession.Insets	A										<section class="prog__container"><pre><code>public static final class VoiceInteractionSession.Insets</code></pre>Information about where interesting parts of the input method UI appear.</section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.Insets.html
VoiceInteractionSession.PickOptionRequest	A										<section class="prog__container"><pre><code>public static final class VoiceInteractionSession.PickOptionRequest</code></pre>A request for the user to pick from a set of option, as per <code>VoiceInteractor.PickOptionRequest</code>.</section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.PickOptionRequest.html
VoiceInteractionSession.Request	A										<section class="prog__container"><pre><code>public static class VoiceInteractionSession.Request</code></pre>Base class representing a request from a voice-driver app to perform a particular voice operation with the user. See related subclasses for the types of requests that are possible.</section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionSession.Request.html
VoiceInteractionSessionService	A										<section class="prog__container"><pre><code>public abstract class VoiceInteractionSessionService</code></pre>An active voice interaction session, initiated by a <code>VoiceInteractionService</code>.</section>	https://developer.android.com/reference/android/service/voice/VoiceInteractionSessionService.html
VoiceInteractor	A										<section class="prog__container"><pre><code>public final class VoiceInteractor</code></pre>Interface for an <code>Activity</code> to interact with the user through voice. Use <code>Activity.getVoiceInteractor</code> to retrieve the interface, if the activity is currently involved in a voice interaction.</section>	https://developer.android.com/reference/android/app/VoiceInteractor.html
VoiceInteractor.AbortVoiceRequest	A										<section class="prog__container"><pre><code>public static class VoiceInteractor.AbortVoiceRequest</code></pre>Reports that the current interaction can not be complete with voice, so the application will need to switch to a traditional input UI. Applications should only use this when they need to completely bail out of the voice interaction and switch to a traditional UI. When the response comes back, the voice system has handled the request and is ready to switch; at that point the application can start a new non-voice activity. Be sure when starting the new activity to use <code>Intent.FLAG_ACTIVITY_NEW_TASK</code> to keep the new activity out of the current voice interaction task.</section>	https://developer.android.com/reference/android/app/VoiceInteractor.AbortVoiceRequest.html
VoiceInteractor.CommandRequest	A										<section class="prog__container"><pre><code>public static class VoiceInteractor.CommandRequest</code></pre>Execute a vendor-specific command using the trusted system VoiceInteractionService. This allows an Activity to request additional information from the user needed to complete an action (e.g. booking a table might have several possible times that the user could select from or an app might need the user to agree to a terms of service). The result of the confirmation will be returned through an asynchronous call to either <code>onCommandResult(boolean, android.os.Bundle)</code> or <code>onCancel()</code>.</section>	https://developer.android.com/reference/android/app/VoiceInteractor.CommandRequest.html
VoiceInteractor.CompleteVoiceRequest	A										<section class="prog__container"><pre><code>public static class VoiceInteractor.CompleteVoiceRequest</code></pre>Reports that the current interaction was successfully completed with voice, so the application can report the final status to the user. When the response comes back, the voice system has handled the request and is ready to switch; at that point the application can start a new non-voice activity or finish. Be sure when starting the new activity to use <code>Intent.FLAG_ACTIVITY_NEW_TASK</code> to keep the new activity out of the current voice interaction task.</section>	https://developer.android.com/reference/android/app/VoiceInteractor.CompleteVoiceRequest.html
VoiceInteractor.ConfirmationRequest	A										<section class="prog__container"><pre><code>public static class VoiceInteractor.ConfirmationRequest</code></pre>Confirms an operation with the user via the trusted system VoiceInteractionService. This allows an Activity to complete an unsafe operation that would require the user to touch the screen when voice interaction mode is not enabled. The result of the confirmation will be returned through an asynchronous call to either <code>onConfirmationResult(boolean, android.os.Bundle)</code> or <code>onCancel()</code> - these methods should be overridden to define the application specific behavior.</section>	https://developer.android.com/reference/android/app/VoiceInteractor.ConfirmationRequest.html
VoiceInteractor.PickOptionRequest	A										<section class="prog__container"><pre><code>public static class VoiceInteractor.PickOptionRequest</code></pre>Select a single option from multiple potential options with the user via the trusted system VoiceInteractionService. Typically, the application would present this visually as a list view to allow selecting the option by touch. The result of the confirmation will be returned through an asynchronous call to either <code>onPickOptionResult(boolean, VoiceInteractor.PickOptionRequest.Option[], Bundle)</code> or <code>onCancel()</code> - these methods should be overridden to define the application specific behavior.</section>	https://developer.android.com/reference/android/app/VoiceInteractor.PickOptionRequest.html
VoiceInteractor.PickOptionRequest.Option	A										<section class="prog__container"><pre><code>public static final class VoiceInteractor.PickOptionRequest.Option</code></pre>Represents a single option that the user may select using their voice. The <code>getIndex()</code> method should be used as a unique ID to identify the option when it is returned from the voice interactor.</section>	https://developer.android.com/reference/android/app/VoiceInteractor.PickOptionRequest.Option.html
VoiceInteractor.Prompt	A										<section class="prog__container"><pre><code>public static class VoiceInteractor.Prompt</code></pre>A set of voice prompts to use with the voice interaction system to confirm an action, select an option, or do similar operations. Multiple voice prompts may be provided for variety. A visual prompt must be provided, which might not match the spoken version. For example, the confirmation "Are you sure you want to purchase this item?" might use a visual label like "Purchase item".</section>	https://developer.android.com/reference/android/app/VoiceInteractor.Prompt.html
VoiceInteractor.Request	A										<section class="prog__container"><pre><code>public static abstract class VoiceInteractor.Request</code></pre>Base class for voice interaction requests that can be submitted to the interactor. Do not instantiate this directly -- instead, use the appropriate subclass.</section>	https://developer.android.com/reference/android/app/VoiceInteractor.Request.html
VoicemailContract	A										<section class="prog__container"><pre><code>public class VoicemailContract</code></pre>The contract between the voicemail provider and applications. Contains definitions for the supported URIs and columns.</section>	https://developer.android.com/reference/android/provider/VoicemailContract.html
VoicemailContract.Status	A										<section class="prog__container"><pre><code>public static final class VoicemailContract.Status</code></pre>Defines fields exposed through the /status path of this content provider.</section>	https://developer.android.com/reference/android/provider/VoicemailContract.Status.html
VoicemailContract.Voicemails	A										<section class="prog__container"><pre><code>public static final class VoicemailContract.Voicemails</code></pre>Defines fields exposed through the /voicemail path of this content provider.</section>	https://developer.android.com/reference/android/provider/VoicemailContract.Voicemails.html
Void	A										<section class="prog__container"><pre><code>public final class Void</code></pre>The <code>Void</code> class is an uninstantiable placeholder class to hold a reference to the <code>Class</code> object representing the Java keyword void.</section>	https://developer.android.com/reference/java/lang/Void.html
VolumeProvider	A										<section class="prog__container"><pre><code>public abstract class VolumeProvider</code></pre>Handles requests to adjust or set the volume on a session. This is also used to push volume updates back to the session. The provider must call <code>setCurrentVolume(int)</code> each time the volume being provided changes.</section>	https://developer.android.com/reference/android/media/VolumeProvider.html
VolumeProviderCompat	A										<section class="prog__container"><pre><code>public abstract class VolumeProviderCompat</code></pre>Handles requests to adjust or set the volume on a session. This is also used to push volume updates back to the session after a request has been handled. You can set a volume provider on a session by calling <code>setPlaybackToRemote(VolumeProviderCompat)</code>.</section>	https://developer.android.com/reference/android/support/v4/media/VolumeProviderCompat.html
VolumeProviderCompat.Callback	A										<section class="prog__container"><pre><code>public static abstract class VolumeProviderCompat.Callback</code></pre>Listens for changes to the volume.</section>	https://developer.android.com/reference/android/support/v4/media/VolumeProviderCompat.Callback.html
VpnService	A										<section class="prog__container"><pre><code>public class VpnService</code></pre>VpnService is a base class for applications to extend and build their own VPN solutions. In general, it creates a virtual network interface, configures addresses and routing rules, and returns a file descriptor to the application. Each read from the descriptor retrieves an outgoing packet which was routed to the interface. Each write to the descriptor injects an incoming packet just like it was received from the interface. The interface is running on Internet Protocol (IP), so packets are always started with IP headers. The application then completes a VPN connection by processing and exchanging packets with the remote server over a tunnel.</section>	https://developer.android.com/reference/android/net/VpnService.html
VpnService.Builder	A										<section class="prog__container"><pre><code>public class VpnService.Builder</code></pre>Helper class to create a VPN interface. This class should be always used within the scope of the outer <code>VpnService</code>.</section>	https://developer.android.com/reference/android/net/VpnService.Builder.html
VrListenerService	A										<section class="prog__container"><pre><code>public abstract class VrListenerService</code></pre>A service that is bound from the system while running in virtual reality (VR) mode.</section>	https://developer.android.com/reference/android/service/vr/VrListenerService.html
WakefulBroadcastReceiver	A										<section class="prog__container"><pre><code>public abstract class WakefulBroadcastReceiver</code></pre>Helper for the common pattern of implementing a <code>BroadcastReceiver</code> that receives a device wakeup event and then passes the work off to a <code>Service</code>, while ensuring that the device does not go back to sleep during the transition.</section>	https://developer.android.com/reference/android/support/v4/content/WakefulBroadcastReceiver.html
WallpaperInfo	A										<section class="prog__container"><pre><code>public final class WallpaperInfo</code></pre>This class is used to specify meta information of a wallpaper service.</section>	https://developer.android.com/reference/android/app/WallpaperInfo.html
WallpaperManager	A										<section class="prog__container"><pre><code>public class WallpaperManager</code></pre>Provides access to the system wallpaper. With WallpaperManager, you can get the current wallpaper, get the desired dimensions for the wallpaper, set the wallpaper, and more. Get an instance of WallpaperManager with <code>getInstance()</code>.</section>	https://developer.android.com/reference/android/app/WallpaperManager.html
WallpaperService	A										<section class="prog__container"><pre><code>public abstract class WallpaperService</code></pre>A wallpaper service is responsible for showing a live wallpaper behind applications that would like to sit on top of it. This service object itself does very little -- its only purpose is to generate instances of <code>WallpaperService.Engine</code> as needed. Implementing a wallpaper thus involves subclassing from this, subclassing an Engine implementation, and implementing <code>onCreateEngine()</code> to return a new instance of your engine.</section>	https://developer.android.com/reference/android/service/wallpaper/WallpaperService.html
WallpaperService.Engine	A										<section class="prog__container"><pre><code>public class WallpaperService.Engine</code></pre>The actual implementation of a wallpaper. A wallpaper service may have multiple instances running (for example as a real wallpaper and as a preview), each of which is represented by its own Engine instance. You must implement <code>onCreateEngine()</code> to return your concrete Engine implementation.</section>	https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html
WeakHashMap	A										<section class="prog__container"><pre><code>public class WeakHashMap</code></pre>Hash table based implementation of the <tt>Map</tt> interface, with <em>weak keys</em>. An entry in a <tt>WeakHashMap</tt> will automatically be removed when its key is no longer in ordinary use. More precisely, the presence of a mapping for a given key will not prevent the key from being discarded by the garbage collector, that is, made finalizable, finalized, and then reclaimed. When a key has been discarded its entry is effectively removed from the map, so this class behaves somewhat differently from other <tt>Map</tt> implementations.</section>	https://developer.android.com/reference/java/util/WeakHashMap.html
WeakReference	A										<section class="prog__container"><pre><code>public class WeakReference</code></pre>Weak reference objects, which do not prevent their referents from being made finalizable, finalized, and then reclaimed. Weak references are most often used to implement canonicalizing mappings.</section>	https://developer.android.com/reference/java/lang/ref/WeakReference.html
WebBackForwardList	A										<section class="prog__container"><pre><code>public abstract class WebBackForwardList</code></pre>This class contains the back/forward list for a WebView. WebView.copyBackForwardList() will return a copy of this class used to inspect the entries in the list.</section>	https://developer.android.com/reference/android/webkit/WebBackForwardList.html
WebChromeClient	A										<section class="prog__container"><pre><code>public class WebChromeClient</code></pre></section>	https://developer.android.com/reference/android/webkit/WebChromeClient.html
WebChromeClient.CustomViewCallback	A										<section class="prog__container"><pre><code>public static interface WebChromeClient.CustomViewCallback</code></pre>A callback interface used by the host application to notify the current page that its custom view has been dismissed.</section>	https://developer.android.com/reference/android/webkit/WebChromeClient.CustomViewCallback.html
WebChromeClient.FileChooserParams	A										<section class="prog__container"><pre><code>public static abstract class WebChromeClient.FileChooserParams</code></pre>Parameters used in the <code>onShowFileChooser(WebView, ValueCallback<uri[]>, WebChromeClient.FileChooserParams)</uri[]></code> method.</section>	https://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html
WebHistoryItem	A										<section class="prog__container"><pre><code>public abstract class WebHistoryItem</code></pre>A convenience class for accessing fields in an entry in the back/forward list of a WebView. Each WebHistoryItem is a snapshot of the requested history item. Each history item may be updated during the load of a page.</section>	https://developer.android.com/reference/android/webkit/WebHistoryItem.html
WebIconDatabase	A										<section class="prog__container"><pre><code>public abstract class WebIconDatabase</code></pre><p class="caution"><strong> This class was deprecated in API level 18.</strong><br/> This class is only required when running on devices up to <code>JELLY_BEAN_MR2</code></section>	https://developer.android.com/reference/android/webkit/WebIconDatabase.html
WebIconDatabase.IconListener	A										<section class="prog__container"><pre><code>public static interface WebIconDatabase.IconListener</code></pre><p class="caution"><strong> This interface was deprecated in API level 18.</strong><br/> This interface is obsolete.</section>	https://developer.android.com/reference/android/webkit/WebIconDatabase.IconListener.html
WebMessage	A										<section class="prog__container"><pre><code>public class WebMessage</code></pre>The Java representation of the HTML5 PostMessage event. See https://html.spec.whatwg.org/multipage/comms.html#the-messageevent-interfaces for definition of a MessageEvent in HTML5.</section>	https://developer.android.com/reference/android/webkit/WebMessage.html
WebMessagePort	A										<section class="prog__container"><pre><code>public abstract class WebMessagePort</code></pre>The Java representation of the HTML5 message ports. A Message port represents one endpoint of a Message Channel. In Android webview, there is no separate Message Channel object. When a message channel is created, both ports are tangled to each other and started, and then returned in a MessagePort array, see <code>createWebMessageChannel()</code> for creating a message channel. When a message port is first created or received via transfer, it does not have a WebMessageCallback to receive web messages. The messages are queued until a WebMessageCallback is set. A message port should be closed when it is not used by the embedder application anymore. A closed port cannot be transferred or cannot be reopened to send messages. Close can be called multiple times. When a port is transferred to JS, it cannot be used to send or receive messages at the Java side anymore. Different from HTML5 Spec, a port cannot be transferred if one of these has ever happened: i. a message callback was set, ii. a message was posted on it. A transferred port cannot be closed by the application, since the ownership is also transferred. It is possible to transfer both ports of a channel to JS, for example for communication between subframes.</section>	https://developer.android.com/reference/android/webkit/WebMessagePort.html
WebMessagePort.WebMessageCallback	A										<section class="prog__container"><pre><code>public static abstract class WebMessagePort.WebMessageCallback</code></pre>The listener for handling MessagePort events. The message callback methods are called on the main thread. If the embedder application wants to receive the messages on a different thread, it can do this by passing a Handler in <code>setWebMessageCallback(WebMessageCallback, Handler)</code>. In the latter case, the application should be extra careful for thread safety since WebMessagePort methods should be called on main thread.</section>	https://developer.android.com/reference/android/webkit/WebMessagePort.WebMessageCallback.html
WebResourceError	A										<section class="prog__container"><pre><code>public abstract class WebResourceError</code></pre>Encapsulates information about errors occured during loading of web resources. See <code>WebViewClient.onReceivedError(WebView, WebResourceRequest, WebResourceError)</code></section>	https://developer.android.com/reference/android/webkit/WebResourceError.html
WebResourceRequest	A										<section class="prog__container"><pre><code>public interface WebResourceRequest</code></pre>Encompasses parameters to the <code>shouldInterceptRequest(WebView, WebResourceRequest)</code> method.</section>	https://developer.android.com/reference/android/webkit/WebResourceRequest.html
WebResourceResponse	A										<section class="prog__container"><pre><code>public class WebResourceResponse</code></pre>Encapsulates a resource response. Applications can return an instance of this class from <code>shouldInterceptRequest(WebView, WebResourceRequest)</code> to provide a custom response when the WebView requests a particular resource.</section>	https://developer.android.com/reference/android/webkit/WebResourceResponse.html
WebSettings	A										<section class="prog__container"><pre><code>public abstract class WebSettings</code></pre>Manages settings state for a WebView. When a WebView is first created, it obtains a set of default settings. These default settings will be returned from any getter call. A WebSettings object obtained from WebView.getSettings() is tied to the life of the WebView. If a WebView has been destroyed, any method call on WebSettings will throw an IllegalStateException.</section>	https://developer.android.com/reference/android/webkit/WebSettings.html
WebSettings.LayoutAlgorithm	A										<section class="prog__container"><pre><code>public static final enum WebSettings.LayoutAlgorithm</code></pre>Enum for controlling the layout of html. <ul> <li>NORMAL means no rendering changes. This is the recommended choice for maximum compatibility across different platforms and Android versions.</li> <li>SINGLE_COLUMN moves all content into one column that is the width of the view.</li> <li>NARROW_COLUMNS makes all columns no wider than the screen if possible. Only use this for API levels prior to <code>KITKAT</code>.</li> <li>TEXT_AUTOSIZING boosts font size of paragraphs based on heuristics to make the text readable when viewing a wide-viewport layout in the overview mode. It is recommended to enable zoom support <code>setSupportZoom(boolean)</code> when using this mode. Supported from API level <code>KITKAT</code></li> </ul></section>	https://developer.android.com/reference/android/webkit/WebSettings.LayoutAlgorithm.html
WebSettings.PluginState	A										<section class="prog__container"><pre><code>public static final enum WebSettings.PluginState</code></pre>The plugin state effects how plugins are treated on a page. ON means that any object will be loaded even if a plugin does not exist to handle the content. ON_DEMAND means that if there is a plugin installed that can handle the content, a placeholder is shown until the user clicks on the placeholder. Once clicked, the plugin will be enabled on the page. OFF means that all plugins will be turned off and any fallback content will be used.</section>	https://developer.android.com/reference/android/webkit/WebSettings.PluginState.html
WebSettings.RenderPriority	A										<section class="prog__container"><pre><code>public static final enum WebSettings.RenderPriority</code></pre></section>	https://developer.android.com/reference/android/webkit/WebSettings.RenderPriority.html
WebSettings.TextSize	A										<section class="prog__container"><pre><code>public static final enum WebSettings.TextSize</code></pre><p class="caution"><strong> This enum was deprecated in API level 14.</strong><br/> Use <code>setTextZoom(int)</code> and <code>getTextZoom()</code> instead.</section>	https://developer.android.com/reference/android/webkit/WebSettings.TextSize.html
WebSettings.ZoomDensity	A										<section class="prog__container"><pre><code>public static final enum WebSettings.ZoomDensity</code></pre>Enum for specifying the WebView's desired density. <ul> <li>FAR makes 100% looking like in 240dpi</li> <li>MEDIUM makes 100% looking like in 160dpi</li> <li>CLOSE makes 100% looking like in 120dpi</li> </ul></section>	https://developer.android.com/reference/android/webkit/WebSettings.ZoomDensity.html
WebStorage	A										<section class="prog__container"><pre><code>public class WebStorage</code></pre>This class is used to manage the JavaScript storage APIs provided by the <code>WebView</code>. It manages the Application Cache API, the Web SQL Database API and the HTML5 Web Storage API. The Application Cache API provides a mechanism to create and maintain an application cache to power offline Web applications. Use of the Application Cache API can be attributed to an origin <code>WebStorage.Origin</code>, however it is not possible to set per-origin quotas. Note that there can be only one application cache per application. The Web SQL Database API provides storage which is private to a given origin. Similar to the Application Cache, use of the Web SQL Database can be attributed to an origin. It is also possible to set per-origin quotas.</section>	https://developer.android.com/reference/android/webkit/WebStorage.html
WebStorage.Origin	A										<section class="prog__container"><pre><code>public static class WebStorage.Origin</code></pre>This class encapsulates information about the amount of storage currently used by an origin for the JavaScript storage APIs. An origin comprises the host, scheme and port of a URI. See <code>WebStorage</code> for details.</section>	https://developer.android.com/reference/android/webkit/WebStorage.Origin.html
WebStorage.QuotaUpdater	A										<section class="prog__container"><pre><code>public static interface WebStorage.QuotaUpdater</code></pre><p class="caution"><strong> This interface was deprecated in API level 19.</strong><br/> This class is obsolete and no longer used.</section>	https://developer.android.com/reference/android/webkit/WebStorage.QuotaUpdater.html
WebView	A										<section class="prog__container"><pre><code>public class WebView</code></pre></section>	https://developer.android.com/reference/android/webkit/WebView.html
WebView.FindListener	A										<section class="prog__container"><pre><code>public static interface WebView.FindListener</code></pre>Interface to listen for find results.</section>	https://developer.android.com/reference/android/webkit/WebView.FindListener.html
WebView.HitTestResult	A										<section class="prog__container"><pre><code>public static class WebView.HitTestResult</code></pre></section>	https://developer.android.com/reference/android/webkit/WebView.HitTestResult.html
WebView.PictureListener	A										<section class="prog__container"><pre><code>public static interface WebView.PictureListener</code></pre><p class="caution"><strong> This interface was deprecated in API level 12.</strong><br/> This interface is now obsolete.</section>	https://developer.android.com/reference/android/webkit/WebView.PictureListener.html
WebView.VisualStateCallback	A										<section class="prog__container"><pre><code>public static abstract class WebView.VisualStateCallback</code></pre>Callback interface supplied to <code>postVisualStateCallback(long, WebView.VisualStateCallback)</code> for receiving notifications about the visual state.</section>	https://developer.android.com/reference/android/webkit/WebView.VisualStateCallback.html
WebView.WebViewTransport	A										<section class="prog__container"><pre><code>public class WebView.WebViewTransport</code></pre>Transportation object for returning WebView across thread boundaries.</section>	https://developer.android.com/reference/android/webkit/WebView.WebViewTransport.html
WebViewClient	A										<section class="prog__container"><pre><code>public class WebViewClient</code></pre></section>	https://developer.android.com/reference/android/webkit/WebViewClient.html
WebViewDatabase	A										<section class="prog__container"><pre><code>public abstract class WebViewDatabase</code></pre>This class allows developers to determine whether any WebView used in the application has stored any of the following types of browsing data and to clear any such stored data for all WebViews in the application. <ul> <li>Username/password pairs for web forms</li> <li>HTTP authentication username/password pairs</li> <li>Data entered into text fields (e.g. for autocomplete suggestions)</li> </ul></section>	https://developer.android.com/reference/android/webkit/WebViewDatabase.html
WebViewFragment	A										<section class="prog__container"><pre><code>public class WebViewFragment</code></pre>A fragment that displays a WebView.</section>	https://developer.android.com/reference/android/webkit/WebViewFragment.html
WifiConfiguration	A										<section class="prog__container"><pre><code>public class WifiConfiguration</code></pre>A class representing a configured Wi-Fi network, including the security configuration.</section>	https://developer.android.com/reference/android/net/wifi/WifiConfiguration.html
WifiConfiguration.AuthAlgorithm	A										<section class="prog__container"><pre><code>public static class WifiConfiguration.AuthAlgorithm</code></pre>Recognized IEEE 802.11 authentication algorithms.</section>	https://developer.android.com/reference/android/net/wifi/WifiConfiguration.AuthAlgorithm.html
WifiConfiguration.GroupCipher	A										<section class="prog__container"><pre><code>public static class WifiConfiguration.GroupCipher</code></pre>Recognized group ciphers. <pre> CCMP = AES in Counter mode with CBC-MAC [RFC 3610, IEEE 802.11i/D7.0] TKIP = Temporal Key Integrity Protocol [IEEE 802.11i/D7.0] WEP104 = WEP (Wired Equivalent Privacy) with 104-bit key WEP40 = WEP (Wired Equivalent Privacy) with 40-bit key (original 802.11) </pre></section>	https://developer.android.com/reference/android/net/wifi/WifiConfiguration.GroupCipher.html
WifiConfiguration.KeyMgmt	A										<section class="prog__container"><pre><code>public static class WifiConfiguration.KeyMgmt</code></pre>Recognized key management schemes.</section>	https://developer.android.com/reference/android/net/wifi/WifiConfiguration.KeyMgmt.html
WifiConfiguration.PairwiseCipher	A										<section class="prog__container"><pre><code>public static class WifiConfiguration.PairwiseCipher</code></pre>Recognized pairwise ciphers for WPA.</section>	https://developer.android.com/reference/android/net/wifi/WifiConfiguration.PairwiseCipher.html
WifiConfiguration.Protocol	A										<section class="prog__container"><pre><code>public static class WifiConfiguration.Protocol</code></pre>Recognized security protocols.</section>	https://developer.android.com/reference/android/net/wifi/WifiConfiguration.Protocol.html
WifiConfiguration.Status	A										<section class="prog__container"><pre><code>public static class WifiConfiguration.Status</code></pre>Possible status of a network configuration.</section>	https://developer.android.com/reference/android/net/wifi/WifiConfiguration.Status.html
WifiEnterpriseConfig	A										<section class="prog__container"><pre><code>public class WifiEnterpriseConfig</code></pre>Enterprise configuration details for Wi-Fi. Stores details about the EAP method and any associated credentials.</section>	https://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.html
WifiEnterpriseConfig.Eap	A										<section class="prog__container"><pre><code>public static final class WifiEnterpriseConfig.Eap</code></pre>The Extensible Authentication Protocol method used</section>	https://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Eap.html
WifiEnterpriseConfig.Phase2	A										<section class="prog__container"><pre><code>public static final class WifiEnterpriseConfig.Phase2</code></pre>The inner authentication method used</section>	https://developer.android.com/reference/android/net/wifi/WifiEnterpriseConfig.Phase2.html
WifiInfo	A										<section class="prog__container"><pre><code>public class WifiInfo</code></pre>Describes the state of any Wifi connection that is active or is in the process of being set up.</section>	https://developer.android.com/reference/android/net/wifi/WifiInfo.html
WifiManager	A										<section class="prog__container"><pre><code>public class WifiManager</code></pre>This class provides the primary API for managing all aspects of Wi-Fi connectivity. Get an instance of this class by calling <code>Context.getSystemService(Context.WIFI_SERVICE)</code>. On releases before NYC, it should only be obtained from an application context, and not from any other derived context to avoid memory leaks within the calling process. It deals with several categories of items: <ul> <li>The list of configured networks. The list can be viewed and updated, and attributes of individual entries can be modified.</li> <li>The currently active Wi-Fi network, if any. Connectivity can be established or torn down, and dynamic information about the state of the network can be queried.</li> <li>Results of access point scans, containing enough information to make decisions about what access point to connect to.</li> <li>It defines the names of various Intent actions that are broadcast upon any sort of change in Wi-Fi state. </li></ul> This is the API to use when performing Wi-Fi specific operations. To perform operations that pertain to network connectivity at an abstract level, use <code>ConnectivityManager</code>.</section>	https://developer.android.com/reference/android/net/wifi/WifiManager.html
WifiManager.MulticastLock	A										<section class="prog__container"><pre><code>public class WifiManager.MulticastLock</code></pre>Allows an application to receive Wifi Multicast packets. Normally the Wifi stack filters out packets not explicitly addressed to this device. Acquring a MulticastLock will cause the stack to receive packets addressed to multicast addresses. Processing these extra packets can cause a noticable battery drain and should be disabled when not needed.</section>	https://developer.android.com/reference/android/net/wifi/WifiManager.MulticastLock.html
WifiManager.WifiLock	A										<section class="prog__container"><pre><code>public class WifiManager.WifiLock</code></pre>Allows an application to keep the Wi-Fi radio awake. Normally the Wi-Fi radio may turn off when the user has not used the device in a while. Acquiring a WifiLock will keep the radio on until the lock is released. Multiple applications may hold WifiLocks, and the radio will only be allowed to turn off when no WifiLocks are held in any application.</section>	https://developer.android.com/reference/android/net/wifi/WifiManager.WifiLock.html
WifiManager.WpsCallback	A										<section class="prog__container"><pre><code>public static abstract class WifiManager.WpsCallback</code></pre>Interface for callback invocation on a start WPS action</section>	https://developer.android.com/reference/android/net/wifi/WifiManager.WpsCallback.html
WifiP2pConfig	A										<section class="prog__container"><pre><code>public class WifiP2pConfig</code></pre>A class representing a Wi-Fi P2p configuration for setting up a connection</section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pConfig.html
WifiP2pDevice	A										<section class="prog__container"><pre><code>public class WifiP2pDevice</code></pre>A class representing a Wi-Fi p2p device Note that the operations are not thread safe</section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pDevice.html
WifiP2pDeviceList	A										<section class="prog__container"><pre><code>public class WifiP2pDeviceList</code></pre>A class representing a Wi-Fi P2p device list. Note that the operations are not thread safe.</section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pDeviceList.html
WifiP2pDnsSdServiceInfo	A										<section class="prog__container"><pre><code>public class WifiP2pDnsSdServiceInfo</code></pre>A class for storing Bonjour service information that is advertised over a Wi-Fi peer-to-peer setup.</section>	https://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceInfo.html
WifiP2pDnsSdServiceRequest	A										<section class="prog__container"><pre><code>public class WifiP2pDnsSdServiceRequest</code></pre>A class for creating a Bonjour service discovery request for use with <code>addServiceRequest(WifiP2pManager.Channel, WifiP2pServiceRequest, WifiP2pManager.ActionListener)</code> and <code>removeServiceRequest(WifiP2pManager.Channel, WifiP2pServiceRequest, WifiP2pManager.ActionListener)</code></section>	https://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest.html
WifiP2pGroup	A										<section class="prog__container"><pre><code>public class WifiP2pGroup</code></pre>A class representing a Wi-Fi P2p group. A p2p group consists of a single group owner and one or more clients. In the case of a group with only two devices, one will be the group owner and the other will be a group client.</section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pGroup.html
WifiP2pInfo	A										<section class="prog__container"><pre><code>public class WifiP2pInfo</code></pre>A class representing connection information about a Wi-Fi p2p group</section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pInfo.html
WifiP2pManager	A										<section class="prog__container"><pre><code>public class WifiP2pManager</code></pre>This class provides the API for managing Wi-Fi peer-to-peer connectivity. This lets an application discover available peers, setup connection to peers and query for the list of peers. When a p2p connection is formed over wifi, the device continues to maintain the uplink connection over mobile or any other available network for internet connectivity on the device.</section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.html
WifiP2pManager.ActionListener	A										<section class="prog__container"><pre><code>public static interface WifiP2pManager.ActionListener</code></pre>Interface for callback invocation on an application action</section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.ActionListener.html
WifiP2pManager.Channel	A										<section class="prog__container"><pre><code>public static class WifiP2pManager.Channel</code></pre>A channel that connects the application to the Wifi p2p framework. Most p2p operations require a Channel as an argument. An instance of Channel is obtained by doing a call on <code>initialize(Context, Looper, WifiP2pManager.ChannelListener)</code></section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.Channel.html
WifiP2pManager.ChannelListener	A										<section class="prog__container"><pre><code>public static interface WifiP2pManager.ChannelListener</code></pre>Interface for callback invocation when framework channel is lost</section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.ChannelListener.html
WifiP2pManager.ConnectionInfoListener	A										<section class="prog__container"><pre><code>public static interface WifiP2pManager.ConnectionInfoListener</code></pre>Interface for callback invocation when connection info is available</section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.ConnectionInfoListener.html
WifiP2pManager.DnsSdServiceResponseListener	A										<section class="prog__container"><pre><code>public static interface WifiP2pManager.DnsSdServiceResponseListener</code></pre>Interface for callback invocation when Bonjour service discovery response is received</section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.DnsSdServiceResponseListener.html
WifiP2pManager.DnsSdTxtRecordListener	A										<section class="prog__container"><pre><code>public static interface WifiP2pManager.DnsSdTxtRecordListener</code></pre>Interface for callback invocation when Bonjour TXT record is available for a service</section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.DnsSdTxtRecordListener.html
WifiP2pManager.GroupInfoListener	A										<section class="prog__container"><pre><code>public static interface WifiP2pManager.GroupInfoListener</code></pre>Interface for callback invocation when group info is available</section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.GroupInfoListener.html
WifiP2pManager.PeerListListener	A										<section class="prog__container"><pre><code>public static interface WifiP2pManager.PeerListListener</code></pre>Interface for callback invocation when peer list is available</section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.PeerListListener.html
WifiP2pManager.ServiceResponseListener	A										<section class="prog__container"><pre><code>public static interface WifiP2pManager.ServiceResponseListener</code></pre>Interface for callback invocation when service discovery response other than Upnp or Bonjour is received</section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.ServiceResponseListener.html
WifiP2pManager.UpnpServiceResponseListener	A										<section class="prog__container"><pre><code>public static interface WifiP2pManager.UpnpServiceResponseListener</code></pre>Interface for callback invocation when upnp service discovery response is received</section>	https://developer.android.com/reference/android/net/wifi/p2p/WifiP2pManager.UpnpServiceResponseListener.html
WifiP2pServiceInfo	A										<section class="prog__container"><pre><code>public class WifiP2pServiceInfo</code></pre>A class for storing service information that is advertised over a Wi-Fi peer-to-peer setup</section>	https://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pServiceInfo.html
WifiP2pServiceRequest	A										<section class="prog__container"><pre><code>public class WifiP2pServiceRequest</code></pre>A class for creating a service discovery request for use with <code>addServiceRequest(WifiP2pManager.Channel, WifiP2pServiceRequest, WifiP2pManager.ActionListener)</code> and <code>removeServiceRequest(WifiP2pManager.Channel, WifiP2pServiceRequest, WifiP2pManager.ActionListener)</code></section>	https://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pServiceRequest.html
WifiP2pUpnpServiceInfo	A										<section class="prog__container"><pre><code>public class WifiP2pUpnpServiceInfo</code></pre>A class for storing Upnp service information that is advertised over a Wi-Fi peer-to-peer setup.</section>	https://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pUpnpServiceInfo.html
WifiP2pUpnpServiceRequest	A										<section class="prog__container"><pre><code>public class WifiP2pUpnpServiceRequest</code></pre>A class for creating a Upnp service discovery request for use with <code>addServiceRequest(WifiP2pManager.Channel, WifiP2pServiceRequest, WifiP2pManager.ActionListener)</code> and <code>removeServiceRequest(WifiP2pManager.Channel, WifiP2pServiceRequest, WifiP2pManager.ActionListener)</code></section>	https://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pUpnpServiceRequest.html
WildcardType	A										<section class="prog__container"><pre><code>public interface WildcardType</code></pre>WildcardType represents a wildcard type expression, such as <code>?</code>, <code>? extends Number</code>, or <code>? super Integer</code>.</section>	https://developer.android.com/reference/java/lang/reflect/WildcardType.html
Window	A										<section class="prog__container"><pre><code>public abstract class Window</code></pre>Abstract base class for a top-level window look and behavior policy. An instance of this class should be used as the top-level view added to the window manager. It provides standard UI policies such as a background, title area, default key processing, etc.</section>	https://developer.android.com/reference/android/view/Window.html
Window.Callback	A										<section class="prog__container"><pre><code>public static interface Window.Callback</code></pre>API from a Window back to its caller. This allows the client to intercept key dispatching, panels and menus, etc.</section>	https://developer.android.com/reference/android/view/Window.Callback.html
Window.OnFrameMetricsAvailableListener	A										<section class="prog__container"><pre><code>public static interface Window.OnFrameMetricsAvailableListener</code></pre>Callback for clients that want frame timing information for each frame rendered by the Window.</section>	https://developer.android.com/reference/android/view/Window.OnFrameMetricsAvailableListener.html
Window.OnRestrictedCaptionAreaChangedListener	A										<section class="prog__container"><pre><code>public static interface Window.OnRestrictedCaptionAreaChangedListener</code></pre>Callback for clients that want to be aware of where caption draws content.</section>	https://developer.android.com/reference/android/view/Window.OnRestrictedCaptionAreaChangedListener.html
WindowAnimationFrameStats	A										<section class="prog__container"><pre><code>public final class WindowAnimationFrameStats</code></pre>This class contains window animation frame statistics. For example, a window animation is usually performed when the application is transitioning from one activity to another. The frame statistics are a snapshot for the time interval from <code>getStartTimeNano()</code> to <code>getEndTimeNano()</code>.</section>	https://developer.android.com/reference/android/view/WindowAnimationFrameStats.html
WindowCompat	A										<section class="prog__container"><pre><code>public final class WindowCompat</code></pre>Helper for accessing features in <code>Window</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/view/WindowCompat.html
WindowContentFrameStats	A										<section class="prog__container"><pre><code>public final class WindowContentFrameStats</code></pre>This class contains window content frame statistics. For example, a window content is rendred in frames when a view is scrolled. The frame statistics are a snapshot for the time interval from <code>getStartTimeNano()</code> to <code>getEndTimeNano()</code>.</section>	https://developer.android.com/reference/android/view/WindowContentFrameStats.html
WindowId	A										<section class="prog__container"><pre><code>public class WindowId</code></pre>Safe identifier for a window. This currently allows you to retrieve and observe the input focus state of the window. Most applications will not use this, instead relying on the simpler (and more efficient) methods available on <code>View</code>. This classes is useful when window input interactions need to be done across processes: the class itself is a Parcelable that can be passed to other processes for them to interact with your window, and it provides a limited safe API that doesn't allow the other process to negatively harm your window.</section>	https://developer.android.com/reference/android/view/WindowId.html
WindowId.FocusObserver	A										<section class="prog__container"><pre><code>public static abstract class WindowId.FocusObserver</code></pre>Subclass for observing changes to the focus state of an <code>WindowId</code>. You should use the same instance of this class for observing multiple <code>WindowId</code> objects, since this class is fairly heavy-weight -- the base class includes all of the mechanisms for connecting to and receiving updates from the window.</section>	https://developer.android.com/reference/android/view/WindowId.FocusObserver.html
WindowInsets	A										<section class="prog__container"><pre><code>public final class WindowInsets</code></pre>Describes a set of insets for window content.</section>	https://developer.android.com/reference/android/view/WindowInsets.html
WindowInsetsCompat	A										<section class="prog__container"><pre><code>public class WindowInsetsCompat</code></pre>Describes a set of insets for window content.</section>	https://developer.android.com/reference/android/support/v4/view/WindowInsetsCompat.html
WindowManager	A										<section class="prog__container"><pre><code>public interface WindowManager</code></pre>The interface that apps use to talk to the window manager.</section>	https://developer.android.com/reference/android/view/WindowManager.html
WindowManager.BadTokenException	A										<section class="prog__container"><pre><code>public static class WindowManager.BadTokenException</code></pre>Exception that is thrown when trying to add view whose <code>WindowManager.LayoutParams</code> <code>token</code> is invalid.</section>	https://developer.android.com/reference/android/view/WindowManager.BadTokenException.html
WindowManager.InvalidDisplayException	A										<section class="prog__container"><pre><code>public static class WindowManager.InvalidDisplayException</code></pre>Exception that is thrown when calling <code>addView(View, ViewGroup.LayoutParams)</code> to a secondary display that cannot be found. See <code>Presentation</code> for more information on secondary displays.</section>	https://developer.android.com/reference/android/view/WindowManager.InvalidDisplayException.html
WindowManager.LayoutParams	A										<section class="prog__container"><pre><code>public static class WindowManager.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/view/WindowManager.LayoutParams.html
WorkSource	A										<section class="prog__container"><pre><code>public class WorkSource</code></pre>Describes the source of some work that may be done by someone else. Currently the public representation of what a work source is is not defined; this is an opaque container.</section>	https://developer.android.com/reference/android/os/WorkSource.html
WorkerThread	A										<section class="prog__container"><pre><code>public abstract @interface WorkerThread</code></pre>Denotes that the annotated method should only be called on a worker thread. If the annotated element is a class, then all methods in the class should be called on a worker thread.</section>	https://developer.android.com/reference/android/support/annotation/WorkerThread.html
WpsInfo	A										<section class="prog__container"><pre><code>public class WpsInfo</code></pre>A class representing Wi-Fi Protected Setup</section>	https://developer.android.com/reference/android/net/wifi/WpsInfo.html
WrapTogetherSpan	A										<section class="prog__container"><pre><code>public interface WrapTogetherSpan</code></pre></section>	https://developer.android.com/reference/android/text/style/WrapTogetherSpan.html
Wrapper	A										<section class="prog__container"><pre><code>public interface Wrapper</code></pre>Interface for JDBC classes which provide the ability to retrieve the delegate instance when the instance in question is in fact a proxy class.</section>	https://developer.android.com/reference/java/sql/Wrapper.html
WrapperListAdapter	A										<section class="prog__container"><pre><code>public interface WrapperListAdapter</code></pre>List adapter that wraps another list adapter. The wrapped adapter can be retrieved by calling <code>getWrappedAdapter()</code>.</section>	https://developer.android.com/reference/android/widget/WrapperListAdapter.html
WritableByteChannel	A										<section class="prog__container"><pre><code>public interface WritableByteChannel</code></pre>A channel that can write bytes.</section>	https://developer.android.com/reference/java/nio/channels/WritableByteChannel.html
WriteAbortedException	A										<section class="prog__container"><pre><code>public class WriteAbortedException</code></pre>Signals that one of the ObjectStreamExceptions was thrown during a write operation. Thrown during a read operation when one of the ObjectStreamExceptions was thrown during a write operation. The exception that terminated the write can be found in the detail field. The stream is reset to it's initial state and all references to objects already deserialized are discarded.</section>	https://developer.android.com/reference/java/io/WriteAbortedException.html
Writer	A										<section class="prog__container"><pre><code>public abstract class Writer</code></pre>Abstract class for writing to character streams. The only methods that a subclass must implement are write(char[], int, int), flush(), and close(). Most subclasses, however, will override some of the methods defined here in order to provide higher efficiency, additional functionality, or both.</section>	https://developer.android.com/reference/java/io/Writer.html
X500Principal	A										<section class="prog__container"><pre><code>public final class X500Principal</code></pre></section>	https://developer.android.com/reference/javax/security/auth/x500/X500Principal.html
X509CRL	A										<section class="prog__container"><pre><code>public abstract class X509CRL</code></pre></section>	https://developer.android.com/reference/java/security/cert/X509CRL.html
X509CRLEntry	A										<section class="prog__container"><pre><code>public abstract class X509CRLEntry</code></pre></section>	https://developer.android.com/reference/java/security/cert/X509CRLEntry.html
X509CRLSelector	A										<section class="prog__container"><pre><code>public class X509CRLSelector</code></pre>A <code>CRLSelector</code> that selects <code>X509CRLs</code> that match all specified criteria. This class is particularly useful when selecting CRLs from a <code>CertStore</code> to check revocation status of a particular certificate.</section>	https://developer.android.com/reference/java/security/cert/X509CRLSelector.html
X509CertSelector	A										<section class="prog__container"><pre><code>public class X509CertSelector</code></pre>A <code>CertSelector</code> that selects <code>X509Certificates</code> that match all specified criteria. This class is particularly useful when selecting certificates from a <code>CertStore</code> to build a PKIX-compliant certification path.</section>	https://developer.android.com/reference/java/security/cert/X509CertSelector.html
X509Certificate	D								*[[java.security.cert.X509Certificate]], <section class="prog__container"><pre><code>public abstract class X509Certificate</code></pre></section>\n*[[javax.security.cert.X509Certificate]], <section class="prog__container"><pre><code>public abstract class X509Certificate</code></pre>Abstract class for X.509 v1 certificates. This provides a standard way to access all the version 1 attributes of an X.509 certificate. Attributes that are specific to X.509 v2 or v3 are not available through this interface. Future API evolution will provide full access to complete X.509 v3 attributes.</section>			
X509EncodedKeySpec	A										<section class="prog__container"><pre><code>public class X509EncodedKeySpec</code></pre>This class represents the ASN.1 encoding of a public key, encoded according to the ASN.1 type <code>SubjectPublicKeyInfo</code>. The <code>SubjectPublicKeyInfo</code> syntax is defined in the X.509 standard as follows: <pre> SubjectPublicKeyInfo ::= SEQUENCE { algorithm AlgorithmIdentifier, subjectPublicKey BIT STRING } </pre></section>	https://developer.android.com/reference/java/security/spec/X509EncodedKeySpec.html
X509ExtendedKeyManager	A										<section class="prog__container"><pre><code>public abstract class X509ExtendedKeyManager</code></pre>Abstract class that provides for extension of the X509KeyManager interface.</section>	https://developer.android.com/reference/javax/net/ssl/X509ExtendedKeyManager.html
X509ExtendedTrustManager	A										<section class="prog__container"><pre><code>public abstract class X509ExtendedTrustManager</code></pre>Extensions to the <code>X509TrustManager</code> interface to support SSL/TLS connection sensitive trust management.</section>	https://developer.android.com/reference/javax/net/ssl/X509ExtendedTrustManager.html
X509Extension	A										<section class="prog__container"><pre><code>public interface X509Extension</code></pre>Interface for an X.509 extension.</section>	https://developer.android.com/reference/java/security/cert/X509Extension.html
X509HostnameVerifier	A										<section class="prog__container"><pre><code>public interface X509HostnameVerifier</code></pre><p class="caution"><strong> This interface was deprecated in API level 22.</strong><br/> Please use <code>openConnection()</code> instead. Please visit this webpage for further details.</section>	https://developer.android.com/reference/org/apache/http/conn/ssl/X509HostnameVerifier.html
X509KeyManager	A										<section class="prog__container"><pre><code>public interface X509KeyManager</code></pre>Instances of this interface manage which X509 certificate-based key pairs are used to authenticate the local side of a secure socket.</section>	https://developer.android.com/reference/javax/net/ssl/X509KeyManager.html
X509TrustManager	A										<section class="prog__container"><pre><code>public interface X509TrustManager</code></pre>Instance of this interface manage which X509 certificates may be used to authenticate the remote side of a secure socket. Decisions may be based on trusted certificate authorities, certificate revocation lists, online status checking or other means.</section>	https://developer.android.com/reference/javax/net/ssl/X509TrustManager.html
X509TrustManagerExtensions	A										<section class="prog__container"><pre><code>public class X509TrustManagerExtensions</code></pre>X509TrustManager wrapper exposing Android-added features.</section>	https://developer.android.com/reference/android/net/http/X509TrustManagerExtensions.html
XMLConstants	A										<section class="prog__container"><pre><code>public final class XMLConstants</code></pre></section>	https://developer.android.com/reference/javax/xml/XMLConstants.html
XMLFilter	A										<section class="prog__container"><pre><code>public interface XMLFilter</code></pre>Interface for an XML filter. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/XMLFilter.html
XMLFilterImpl	A										<section class="prog__container"><pre><code>public class XMLFilterImpl</code></pre>Base class for deriving an XML filter. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/helpers/XMLFilterImpl.html
XMLFormatter	A										<section class="prog__container"><pre><code>public class XMLFormatter</code></pre>Format a LogRecord into a standard XML format.</section>	https://developer.android.com/reference/java/util/logging/XMLFormatter.html
XMLGregorianCalendar	A										<section class="prog__container"><pre><code>public abstract class XMLGregorianCalendar</code></pre></section>	https://developer.android.com/reference/javax/xml/datatype/XMLGregorianCalendar.html
XMLReader	A										<section class="prog__container"><pre><code>public interface XMLReader</code></pre>Interface for reading an XML document using callbacks. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/XMLReader.html
XMLReaderAdapter	A										<section class="prog__container"><pre><code>public class XMLReaderAdapter</code></pre>Adapt a SAX2 XMLReader as a SAX1 Parser. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/helpers/XMLReaderAdapter.html
XMLReaderFactory	A										<section class="prog__container"><pre><code>public final class XMLReaderFactory</code></pre>Factory for creating an XML reader. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/helpers/XMLReaderFactory.html
XPath	A										<section class="prog__container"><pre><code>public interface XPath</code></pre></section>	https://developer.android.com/reference/javax/xml/xpath/XPath.html
XPathConstants	A										<section class="prog__container"><pre><code>public class XPathConstants</code></pre></section>	https://developer.android.com/reference/javax/xml/xpath/XPathConstants.html
XPathException	A										<section class="prog__container"><pre><code>public class XPathException</code></pre><code>XPathException</code> represents a generic XPath exception.</section>	https://developer.android.com/reference/javax/xml/xpath/XPathException.html
XPathExpression	A										<section class="prog__container"><pre><code>public interface XPathExpression</code></pre></section>	https://developer.android.com/reference/javax/xml/xpath/XPathExpression.html
XPathExpressionException	A										<section class="prog__container"><pre><code>public class XPathExpressionException</code></pre><code>XPathExpressionException</code> represents an error in an XPath expression.</section>	https://developer.android.com/reference/javax/xml/xpath/XPathExpressionException.html
XPathFactory	A										<section class="prog__container"><pre><code>public abstract class XPathFactory</code></pre></section>	https://developer.android.com/reference/javax/xml/xpath/XPathFactory.html
XPathFactoryConfigurationException	A										<section class="prog__container"><pre><code>public class XPathFactoryConfigurationException</code></pre><code>XPathFactoryConfigurationException</code> represents a configuration error in a <code>XPathFactory</code> environment.</section>	https://developer.android.com/reference/javax/xml/xpath/XPathFactoryConfigurationException.html
XPathFunction	A										<section class="prog__container"><pre><code>public interface XPathFunction</code></pre></section>	https://developer.android.com/reference/javax/xml/xpath/XPathFunction.html
XPathFunctionException	A										<section class="prog__container"><pre><code>public class XPathFunctionException</code></pre><code>XPathFunctionException</code> represents an error with an XPath function.</section>	https://developer.android.com/reference/javax/xml/xpath/XPathFunctionException.html
XPathFunctionResolver	A										<section class="prog__container"><pre><code>public interface XPathFunctionResolver</code></pre></section>	https://developer.android.com/reference/javax/xml/xpath/XPathFunctionResolver.html
XPathVariableResolver	A										<section class="prog__container"><pre><code>public interface XPathVariableResolver</code></pre></section>	https://developer.android.com/reference/javax/xml/xpath/XPathVariableResolver.html
Xfermode	A										<section class="prog__container"><pre><code>public class Xfermode</code></pre>Xfermode is the base class for objects that are called to implement custom "transfer-modes" in the drawing pipeline. The static function Create(Modes) can be called to return an instance of any of the predefined subclasses as specified in the Modes enum. When an Xfermode is assigned to an Paint, then objects drawn with that paint have the xfermode applied.</section>	https://developer.android.com/reference/android/graphics/Xfermode.html
Xml	A										<section class="prog__container"><pre><code>public class Xml</code></pre>XML utility methods.</section>	https://developer.android.com/reference/android/util/Xml.html
Xml.Encoding	A										<section class="prog__container"><pre><code>public static final enum Xml.Encoding</code></pre>Supported character encodings.</section>	https://developer.android.com/reference/android/util/Xml.Encoding.html
XmlPullParser	A										<section class="prog__container"><pre><code>public interface XmlPullParser</code></pre>XML Pull Parser is an interface that defines parsing functionality provided in XMLPULL V1 API (visit this website to learn more about API and its implementations).</section>	https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html
XmlPullParserException	A										<section class="prog__container"><pre><code>public class XmlPullParserException</code></pre>This exception is thrown to signal XML Pull Parser related faults.</section>	https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserException.html
XmlPullParserFactory	A										<section class="prog__container"><pre><code>public class XmlPullParserFactory</code></pre>This class is used to create implementations of XML Pull Parser defined in XMPULL V1 API.</section>	https://developer.android.com/reference/org/xmlpull/v1/XmlPullParserFactory.html
XmlRes	A										<section class="prog__container"><pre><code>public abstract @interface XmlRes</code></pre>Denotes that an integer parameter, field or method return value is expected to be an XML resource reference.</section>	https://developer.android.com/reference/android/support/annotation/XmlRes.html
XmlResourceParser	A										<section class="prog__container"><pre><code>public interface XmlResourceParser</code></pre>The XML parsing interface returned for an XML resource. This is a standard XmlPullParser interface, as well as an extended AttributeSet interface and an additional close() method on this interface for the client to indicate when it is done reading the resource.</section>	https://developer.android.com/reference/android/content/res/XmlResourceParser.html
XmlSerializer	A										<section class="prog__container"><pre><code>public interface XmlSerializer</code></pre>Define an interface to serialization of XML Infoset. This interface abstracts away if serialized XML is XML 1.0 compatible text or other formats of XML 1.0 serializations (such as binary XML for example with WBXML).</section>	https://developer.android.com/reference/org/xmlpull/v1/XmlSerializer.html
YuvImage	A										<section class="prog__container"><pre><code>public class YuvImage</code></pre>YuvImage contains YUV data and provides a method that compresses a region of the YUV data to a Jpeg. The YUV data should be provided as a single byte array irrespective of the number of image planes in it. Currently only ImageFormat.NV21 and ImageFormat.YUY2 are supported. To compress a rectangle region in the YUV data, users have to specify the region by left, top, width and height.</section>	https://developer.android.com/reference/android/graphics/YuvImage.html
ZipEntry	A										<section class="prog__container"><pre><code>public class ZipEntry</code></pre>This class is used to represent a ZIP file entry.</section>	https://developer.android.com/reference/java/util/zip/ZipEntry.html
ZipError	A										<section class="prog__container"><pre><code>public class ZipError</code></pre>Signals that an unrecoverable error has occurred.</section>	https://developer.android.com/reference/java/util/zip/ZipError.html
ZipException	A										<section class="prog__container"><pre><code>public class ZipException</code></pre>Signals that a Zip exception of some sort has occurred.</section>	https://developer.android.com/reference/java/util/zip/ZipException.html
ZipFile	A										<section class="prog__container"><pre><code>public class ZipFile</code></pre>This class is used to read entries from a zip file.</section>	https://developer.android.com/reference/java/util/zip/ZipFile.html
ZipInputStream	A										<section class="prog__container"><pre><code>public class ZipInputStream</code></pre>This class implements an input stream filter for reading files in the ZIP file format. Includes support for both compressed and uncompressed entries.</section>	https://developer.android.com/reference/java/util/zip/ZipInputStream.html
ZipOutputStream	A										<section class="prog__container"><pre><code>public class ZipOutputStream</code></pre>This class implements an output stream filter for writing files in the ZIP file format. Includes support for both compressed and uncompressed entries.</section>	https://developer.android.com/reference/java/util/zip/ZipOutputStream.html
ZoomButton	A										<section class="prog__container"><pre><code>public class ZoomButton</code></pre></section>	https://developer.android.com/reference/android/widget/ZoomButton.html
ZoomButtonsController	A										<section class="prog__container"><pre><code>public class ZoomButtonsController</code></pre>The <code>ZoomButtonsController</code> handles showing and hiding the zoom controls and positioning it relative to an owner view. It also gives the client access to the zoom controls container, allowing for additional accessory buttons to be shown in the zoom controls window.</section>	https://developer.android.com/reference/android/widget/ZoomButtonsController.html
ZoomButtonsController.OnZoomListener	A										<section class="prog__container"><pre><code>public static interface ZoomButtonsController.OnZoomListener</code></pre>Interface that will be called when the user performs an interaction that triggers some action, for example zooming.</section>	https://developer.android.com/reference/android/widget/ZoomButtonsController.OnZoomListener.html
ZoomControls	A										<section class="prog__container"><pre><code>public class ZoomControls</code></pre>The <code>ZoomControls</code> class displays a simple set of controls used for zooming and provides callbacks to register for events.</section>	https://developer.android.com/reference/android/widget/ZoomControls.html
accounts.OperationCanceledException	A										<section class="prog__container"><pre><code>public class OperationCanceledException</code></pre></section>	https://developer.android.com/reference/android/accounts/OperationCanceledException.html
acl.Permission	A										<section class="prog__container"><pre><code>public interface Permission</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/security/acl/Permission.html
android	A										<section class="prog__container">Contains resource classes used by applications included in the platform and defines application permissions for system features.</section>	https://developer.android.com/reference/android/package-summary.html
android.Manifest	A										<section class="prog__container"><pre><code>public final class Manifest</code></pre></section>	https://developer.android.com/reference/android/Manifest.html
android.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/R.html
android.R.anim	A										<section class="prog__container"><pre><code>public static final class R.anim</code></pre></section>	https://developer.android.com/reference/android/R.anim.html
android.R.animator	A										<section class="prog__container"><pre><code>public static final class R.animator</code></pre></section>	https://developer.android.com/reference/android/R.animator.html
android.R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/R.attr.html
android.R.bool	A										<section class="prog__container"><pre><code>public static final class R.bool</code></pre></section>	https://developer.android.com/reference/android/R.bool.html
android.R.color	A										<section class="prog__container"><pre><code>public static final class R.color</code></pre></section>	https://developer.android.com/reference/android/R.color.html
android.R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/R.dimen.html
android.R.drawable	A										<section class="prog__container"><pre><code>public static final class R.drawable</code></pre></section>	https://developer.android.com/reference/android/R.drawable.html
android.R.fraction	A										<section class="prog__container"><pre><code>public static final class R.fraction</code></pre></section>	https://developer.android.com/reference/android/R.fraction.html
android.R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/R.id.html
android.R.integer	A										<section class="prog__container"><pre><code>public static final class R.integer</code></pre></section>	https://developer.android.com/reference/android/R.integer.html
android.R.interpolator	A										<section class="prog__container"><pre><code>public static final class R.interpolator</code></pre></section>	https://developer.android.com/reference/android/R.interpolator.html
android.R.layout	A										<section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>	https://developer.android.com/reference/android/R.layout.html
android.R.raw	A										<section class="prog__container"><pre><code>public static final class R.raw</code></pre></section>	https://developer.android.com/reference/android/R.raw.html
android.R.string	A										<section class="prog__container"><pre><code>public static final class R.string</code></pre></section>	https://developer.android.com/reference/android/R.string.html
android.R.style	A										<section class="prog__container"><pre><code>public static final class R.style</code></pre></section>	https://developer.android.com/reference/android/R.style.html
android.R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/R.styleable.html
android.R.transition	A										<section class="prog__container"><pre><code>public static final class R.transition</code></pre></section>	https://developer.android.com/reference/android/R.transition.html
android.accessibilityservice	A										<section class="prog__container"> The classes in this package are used for development of accessibility service that provide alternative or augmented feedback to the user. </section>	https://developer.android.com/reference/android/accessibilityservice/package-summary.html
android.animation	A										<section class="prog__container"> These classes provide functionality for the property animation system, which allows you to animate object properties of any type. int, float, and hexadecimal color values are supported by default. You can animate any other type by telling the system how to calculate the values for that given type with a custom TypeEvaluator. </section>	https://developer.android.com/reference/android/animation/package-summary.html
android.app	A										<section class="prog__container">Contains high-level classes encapsulating the overall Android application model.</section>	https://developer.android.com/reference/android/app/package-summary.html
android.app.ActionBar	A										<section class="prog__container"><pre><code>public abstract class ActionBar</code></pre>A primary toolbar within the activity that may display the activity title, application-level navigation affordances, and other interactive items.</section>	https://developer.android.com/reference/android/app/ActionBar.html
android.app.ActionBar.LayoutParams	A										<section class="prog__container"><pre><code>public static class ActionBar.LayoutParams</code></pre>Per-child layout information associated with action bar custom views.</section>	https://developer.android.com/reference/android/app/ActionBar.LayoutParams.html
android.app.ActionBar.OnMenuVisibilityListener	A										<section class="prog__container"><pre><code>public static interface ActionBar.OnMenuVisibilityListener</code></pre>Listener for receiving events when action bar menus are shown or hidden.</section>	https://developer.android.com/reference/android/app/ActionBar.OnMenuVisibilityListener.html
android.app.ActionBar.OnNavigationListener	A										<section class="prog__container"><pre><code>public static interface ActionBar.OnNavigationListener</code></pre><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead.</section>	https://developer.android.com/reference/android/app/ActionBar.OnNavigationListener.html
android.app.ActionBar.Tab	A										<section class="prog__container"><pre><code>public static abstract class ActionBar.Tab</code></pre><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead.</section>	https://developer.android.com/reference/android/app/ActionBar.Tab.html
android.app.ActionBar.TabListener	A										<section class="prog__container"><pre><code>public static interface ActionBar.TabListener</code></pre><p class="caution"><strong> This interface was deprecated in API level 21.</strong><br/> Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead.</section>	https://developer.android.com/reference/android/app/ActionBar.TabListener.html
android.app.AlertDialog	A										<section class="prog__container"><pre><code>public class AlertDialog</code></pre>A subclass of Dialog that can display one, two or three buttons. If you only want to display a String in this dialog box, use the setMessage() method. If you want to display a more complex view, look up the FrameLayout called "custom" and add your view to it: <pre> FrameLayout fl = (FrameLayout) findViewById(android.R.id.custom); fl.addView(myView, new LayoutParams(MATCH_PARENT, WRAP_CONTENT)); </pre></section>	https://developer.android.com/reference/android/app/AlertDialog.html
android.app.AlertDialog.Builder	A										<section class="prog__container"><pre><code>public static class AlertDialog.Builder</code></pre></section>	https://developer.android.com/reference/android/app/AlertDialog.Builder.html
android.app.DialogFragment	A										<section class="prog__container"><pre><code>public class DialogFragment</code></pre>A fragment that displays a dialog window, floating on top of its activity's window. This fragment contains a Dialog object, which it displays as appropriate based on the fragment's state. Control of the dialog (deciding when to show, hide, dismiss it) should be done through the API here, not with direct calls on the dialog.</section>	https://developer.android.com/reference/android/app/DialogFragment.html
android.app.Fragment	A										<section class="prog__container"><pre><code>public class Fragment</code></pre>A Fragment is a piece of an application's user interface or behavior that can be placed in an <code>Activity</code>. Interaction with fragments is done through <code>FragmentManager</code>, which can be obtained via <code>Activity.getFragmentManager()</code> and <code>Fragment.getFragmentManager()</code>.</section>	https://developer.android.com/reference/android/app/Fragment.html
android.app.Fragment.InstantiationException	A										<section class="prog__container"><pre><code>public static class Fragment.InstantiationException</code></pre>Thrown by <code>instantiate(Context, String, Bundle)</code> when there is an instantiation failure.</section>	https://developer.android.com/reference/android/app/Fragment.InstantiationException.html
android.app.Fragment.SavedState	A										<section class="prog__container"><pre><code>public static class Fragment.SavedState</code></pre>State information that has been retrieved from a fragment instance through <code>FragmentManager.saveFragmentInstanceState</code>.</section>	https://developer.android.com/reference/android/app/Fragment.SavedState.html
android.app.FragmentContainer	A										<section class="prog__container"><pre><code>public abstract class FragmentContainer</code></pre>Callbacks to a <code>Fragment</code>'s container.</section>	https://developer.android.com/reference/android/app/FragmentContainer.html
android.app.FragmentController	A										<section class="prog__container"><pre><code>public class FragmentController</code></pre>Provides integration points with a <code>FragmentManager</code> for a fragment host.</section>	https://developer.android.com/reference/android/app/FragmentController.html
android.app.FragmentHostCallback	A										<section class="prog__container"><pre><code>public abstract class FragmentHostCallback</code></pre>Integration points with the Fragment host.</section>	https://developer.android.com/reference/android/app/FragmentHostCallback.html
android.app.FragmentManager	A										<section class="prog__container"><pre><code>public abstract class FragmentManager</code></pre>Interface for interacting with <code>Fragment</code> objects inside of an <code>Activity</code> <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/app/FragmentManager.html
android.app.FragmentManager.BackStackEntry	A										<section class="prog__container"><pre><code>public static interface FragmentManager.BackStackEntry</code></pre>Representation of an entry on the fragment back stack, as created with <code>FragmentTransaction.addToBackStack()</code>. Entries can later be retrieved with <code>FragmentManager.getBackStackEntryAt()</code>.</section>	https://developer.android.com/reference/android/app/FragmentManager.BackStackEntry.html
android.app.FragmentManager.OnBackStackChangedListener	A										<section class="prog__container"><pre><code>public static interface FragmentManager.OnBackStackChangedListener</code></pre>Interface to watch for changes to the back stack.</section>	https://developer.android.com/reference/android/app/FragmentManager.OnBackStackChangedListener.html
android.app.FragmentManagerNonConfig	A										<section class="prog__container"><pre><code>public class FragmentManagerNonConfig</code></pre>FragmentManagerNonConfig stores the retained instance fragments across activity recreation events.</section>	https://developer.android.com/reference/android/app/FragmentManagerNonConfig.html
android.app.FragmentTransaction	A										<section class="prog__container"><pre><code>public abstract class FragmentTransaction</code></pre>API for performing a set of Fragment operations. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/app/FragmentTransaction.html
android.app.ListFragment	A										<section class="prog__container"><pre><code>public class ListFragment</code></pre>A fragment that displays a list of items by binding to a data source such as an array or Cursor, and exposes event handlers when the user selects an item.</section>	https://developer.android.com/reference/android/app/ListFragment.html
android.app.LoaderManager	A										<section class="prog__container"><pre><code>public abstract class LoaderManager</code></pre>Interface associated with an <code>Activity</code> or <code>Fragment</code> for managing one or more <code>Loader</code> instances associated with it. This helps an application manage longer-running operations in conjunction with the Activity or Fragment lifecycle; the most common use of this is with a <code>CursorLoader</code>, however applications are free to write their own loaders for loading other types of data. While the LoaderManager API was introduced in <code>HONEYCOMB</code>, a version of the API at is also available for use on older platforms through <code>FragmentActivity</code>. See the blog post Fragments For All for more details.</section>	https://developer.android.com/reference/android/app/LoaderManager.html
android.app.LoaderManager.LoaderCallbacks	A										<section class="prog__container"><pre><code>public static interface LoaderManager.LoaderCallbacks</code></pre>Callback interface for a client to interact with the manager.</section>	https://developer.android.com/reference/android/app/LoaderManager.LoaderCallbacks.html
android.app.MediaRouteActionProvider	A										<section class="prog__container"><pre><code>public class MediaRouteActionProvider</code></pre>The media route action provider displays a <code>media route button</code> in the application's <code>ActionBar</code> to allow the user to select routes and to control the currently selected route.</section>	https://developer.android.com/reference/android/app/MediaRouteActionProvider.html
android.app.MediaRouteButton	A										<section class="prog__container"><pre><code>public class MediaRouteButton</code></pre></section>	https://developer.android.com/reference/android/app/MediaRouteButton.html
android.app.RemoteInput	A										<section class="prog__container"><pre><code>public final class RemoteInput</code></pre>A <code>RemoteInput</code> object specifies input to be collected from a user to be passed along with an intent inside a <code>PendingIntent</code> that is sent. Always use <code>RemoteInput.Builder</code> to create instances of this class. <p class="note"> See Receiving Voice Input from a Notification for more information on how to use this class.</section>	https://developer.android.com/reference/android/app/RemoteInput.html
android.app.RemoteInput.Builder	A										<section class="prog__container"><pre><code>public static final class RemoteInput.Builder</code></pre>Builder class for <code>RemoteInput</code> objects.</section>	https://developer.android.com/reference/android/app/RemoteInput.Builder.html
android.app.SharedElementCallback	A										<section class="prog__container"><pre><code>public abstract class SharedElementCallback</code></pre>Listener provided in <code>setEnterSharedElementCallback(SharedElementCallback)</code> and <code>setExitSharedElementCallback(SharedElementCallback)</code> as well as <code>setEnterSharedElementCallback(SharedElementCallback)</code> and <code>setExitSharedElementCallback(SharedElementCallback)</code> to monitor the Shared element transitions. The events can be used to customize Activity and Fragment Transition behavior.</section>	https://developer.android.com/reference/android/app/SharedElementCallback.html
android.app.SharedElementCallback.OnSharedElementsReadyListener	A										<section class="prog__container"><pre><code>public static interface SharedElementCallback.OnSharedElementsReadyListener</code></pre>Listener to be called after <code>onSharedElementsArrived(List, List, OnSharedElementsReadyListener)</code> when the shared elements are ready to be hidden in the source Activity and shown in the destination Activity.</section>	https://developer.android.com/reference/android/app/SharedElementCallback.OnSharedElementsReadyListener.html
android.app.TaskStackBuilder	A										<section class="prog__container"><pre><code>public class TaskStackBuilder</code></pre>Utility class for constructing synthetic back stacks for cross-task navigation on Android 3.0 and newer.</section>	https://developer.android.com/reference/android/app/TaskStackBuilder.html
android.app.admin	A										<section class="prog__container">Provides device administration features at the system level, allowing you to create security-aware applications that are useful in enterprise settings, in which IT professionals require rich control over employee devices.</section>	https://developer.android.com/reference/android/app/admin/package-summary.html
android.app.backup	A										<section class="prog__container">Contains the backup and restore functionality available to applications. If a user wipes the data on their device or upgrades to a new Android-powered device, all applications that have enabled backup can restore the user's previous data when the application is reinstalled.</section>	https://developer.android.com/reference/android/app/backup/package-summary.html
android.appwidget	A										<section class="prog__container">Contains the components necessary to create "app widgets", which users can embed in other applications (such as the home screen) to quickly access application data and services without launching a new activity.</section>	https://developer.android.com/reference/android/appwidget/package-summary.html
android.bluetooth	A										<section class="prog__container">Provides classes that manage Bluetooth functionality, such as scanning for devices, connecting with devices, and managing data transfer between devices. The Bluetooth API supports both "Classic Bluetooth" and Bluetooth Low Energy.</section>	https://developer.android.com/reference/android/bluetooth/package-summary.html
android.content	A										<section class="prog__container">Contains classes for accessing and publishing data on a device. It includes three main categories of APIs:</section>	https://developer.android.com/reference/android/content/package-summary.html
android.content.AsyncTaskLoader	A										<section class="prog__container"><pre><code>public abstract class AsyncTaskLoader</code></pre>Abstract Loader that provides an <code>AsyncTask</code> to do the work. See <code>Loader</code> and <code>LoaderManager</code> for more details.</section>	https://developer.android.com/reference/android/content/AsyncTaskLoader.html
android.content.CursorLoader	A										<section class="prog__container"><pre><code>public class CursorLoader</code></pre>A loader that queries the <code>ContentResolver</code> and returns a <code>Cursor</code>. This class implements the <code>Loader</code> protocol in a standard way for querying cursors, building on <code>AsyncTaskLoader</code> to perform the cursor query on a background thread so that it does not block the application's UI.</section>	https://developer.android.com/reference/android/content/CursorLoader.html
android.content.Loader	A										<section class="prog__container"><pre><code>public class Loader</code></pre>A class that performs asynchronous loading of data. While Loaders are active they should monitor the source of their data and deliver new results when the contents change. See <code>LoaderManager</code> for more detail.</section>	https://developer.android.com/reference/android/content/Loader.html
android.content.Loader.ForceLoadContentObserver	A										<section class="prog__container"><pre><code>public final class Loader.ForceLoadContentObserver</code></pre>An implementation of a ContentObserver that takes care of connecting it to the Loader to have the loader re-load its data when the observer is told it has changed. You do not normally need to use this yourself; it is used for you by <code>CursorLoader</code> to take care of executing an update when the cursor's backing data changes.</section>	https://developer.android.com/reference/android/content/Loader.ForceLoadContentObserver.html
android.content.Loader.OnLoadCanceledListener	A										<section class="prog__container"><pre><code>public static interface Loader.OnLoadCanceledListener</code></pre>Interface that is implemented to discover when a Loader has been canceled before it finished loading its data. You do not normally need to implement this yourself; it is used in the implementation of <code>LoaderManager</code> to find out when a Loader it is managing has been canceled so that it can schedule the next Loader. This interface should only be used if a Loader is not being used in conjunction with LoaderManager.</section>	https://developer.android.com/reference/android/content/Loader.OnLoadCanceledListener.html
android.content.Loader.OnLoadCompleteListener	A										<section class="prog__container"><pre><code>public static interface Loader.OnLoadCompleteListener</code></pre>Interface that is implemented to discover when a Loader has finished loading its data. You do not normally need to implement this yourself; it is used in the implementation of <code>LoaderManager</code> to find out when a Loader it is managing has completed so that this can be reported to its client. This interface should only be used if a Loader is not being used in conjunction with LoaderManager.</section>	https://developer.android.com/reference/android/content/Loader.OnLoadCompleteListener.html
android.content.pm	A										<section class="prog__container">Contains classes for accessing information about an application package, including information about its activities, permissions, services, signatures, and providers.</section>	https://developer.android.com/reference/android/content/pm/package-summary.html
android.content.res	A										<section class="prog__container">Contains classes for accessing application resources, such as raw asset files, colors, drawables, media or other other files in the package, plus important device configuration details (orientation, input types, etc.) that affect how the application may behave.</section>	https://developer.android.com/reference/android/content/res/package-summary.html
android.database	A										<section class="prog__container"> If you need to manage data in a private database, use the android.database.sqlite classes. These classes are used to manage the Cursor object returned from a content provider query. Databases are usually created and opened with openOrCreateDatabase(String, int, SQLiteDatabase.CursorFactory) To make requests through content providers, you can use the content.ContentResolver class. All databases are stored on the device in /data/data/<package_name>/databases Interfaces CrossProcessCursor A cross process cursor is an extension of a Cursor that also supports usage from remote processes. Cursor This interface provides random read-write access to the result set returned by a database query. DatabaseErrorHandler An interface to let apps define an action to take when database corruption is detected. Classes AbstractCursor This is an abstract cursor class that handles a lot of the common code that all cursors need to deal with and is provided for convenience reasons. AbstractCursor.SelfContentObserver Cursors use this class to track changes others make to their URI. AbstractWindowedCursor A base class for Cursors that store their data in CursorWindows. CharArrayBuffer This is used for copyStringToBuffer(int, CharArrayBuffer) ContentObservable A specialization of Observable for ContentObserver that provides methods for sending notifications to a list of ContentObserver objects. ContentObserver Receives call backs for changes to content. CrossProcessCursorWrapper Cursor wrapper that implements CrossProcessCursor. CursorJoiner Does a join on two cursors using the specified columns. CursorWindow A buffer containing multiple cursor rows. CursorWrapper Wrapper class for Cursor that delegates all calls to the actual cursor object. DatabaseUtils Static utility methods for dealing with databases and Cursors. DatabaseUtils.InsertHelper This class was deprecated in API level 17. Use SQLiteStatement instead. DataSetObservable A specialization of Observable for DataSetObserver that provides methods for sending notifications to a list of DataSetObserver objects. DataSetObserver Receives call backs when a data set has been changed, or made invalid. DefaultDatabaseErrorHandler Default class used to define the action to take when database corruption is reported by sqlite. MatrixCursor A mutable cursor implementation backed by an array of Objects. MatrixCursor.RowBuilder Builds a row of values using either of these approaches: Values can be added with explicit column ordering using add(Object), which starts from the left-most column and adds one column value at a time. MergeCursor A convience class that lets you present an array of Cursors as a single linear Cursor. Observable<T> Provides methods for registering or unregistering arbitrary observers in an ArrayList. Enums CursorJoiner.Result The result of a call to next(). Exceptions CursorIndexOutOfBoundsException An exception indicating that a cursor is out of bounds. SQLException An exception that indicates there was an error with SQL parsing or execution. StaleDataException This exception is thrown when a Cursor contains stale data and must be requeried before being used again. </section>	https://developer.android.com/reference/android/database/package-summary.html
android.database.sqlite	A										<section class="prog__container"> Applications use these classes to manage private databases. If creating a content provider, you will probably have to use these classes to create and manage your own database to store content. See Content Providers to learn the conventions for implementing a content provider. If you are working with data sent to you by a provider, you do not use these SQLite classes, but instead use the generic android.database classes. The Android SDK and Android emulators both include the sqlite3 command-line database tool. On your development machine, run the tool from the platform-tools/ folder of your SDK. On the emulator, run the tool with adb shell, for example, adb -e shell sqlite3. The version of SQLite depends on the version of Android. See the following table: Android APISQLite Version API 243.9 API 213.8 API 113.7 API 83.6 API 33.5 API 13.4 Some device manufacturers include different versions of SQLite on their devices. There are two ways to programmatically determine the version number. If available, use the sqlite3 tool, for example: adb -e shell sqlite3 --version. Create and query an in-memory database as shown in the following code sample: String query = "select sqlite_version() AS sqlite_version"; SQLiteDatabase db = SQLiteDatabase.openOrCreateDatabase(":memory:", null); Cursor cursor = db.rawQuery(query, null); String sqliteVersion = ""; if (cursor.moveToNext()) { sqliteVersion = cursor.getString(0); } Interfaces SQLiteCursorDriver A driver for SQLiteCursors that is used to create them and gets notified by the cursors it creates on significant events in their lifetimes. SQLiteDatabase.CursorFactory Used to allow returning sub-classes of Cursor when calling query. SQLiteTransactionListener A listener for transaction events. Classes SQLiteClosable An object created from a SQLiteDatabase that can be closed. SQLiteCursor A Cursor implementation that exposes results from a query on a SQLiteDatabase. SQLiteDatabase Exposes methods to manage a SQLite database. SQLiteOpenHelper A helper class to manage database creation and version management. SQLiteProgram A base class for compiled SQLite programs. SQLiteQuery Represents a query that reads the resulting rows into a SQLiteQuery. SQLiteQueryBuilder This is a convience class that helps build SQL queries to be sent to SQLiteDatabase objects. SQLiteStatement Represents a statement that can be executed against a database. Exceptions SQLiteAbortException An exception that indicates that the SQLite program was aborted. SQLiteAccessPermException This exception class is used when sqlite can't access the database file due to lack of permissions on the file. SQLiteBindOrColumnIndexOutOfRangeException Thrown if the the bind or column parameter index is out of range SQLiteBlobTooBigException SQLiteCantOpenDatabaseException SQLiteConstraintException An exception that indicates that an integrity constraint was violated. SQLiteDatabaseCorruptException An exception that indicates that the SQLite database file is corrupt. SQLiteDatabaseLockedException Thrown if the database engine was unable to acquire the database locks it needs to do its job. SQLiteDatatypeMismatchException SQLiteDiskIOException An exception that indicates that an IO error occured while accessing the SQLite database file. SQLiteDoneException An exception that indicates that the SQLite program is done. SQLiteException A SQLite exception that indicates there was an error with SQL parsing or execution. SQLiteFullException An exception that indicates that the SQLite database is full. SQLiteMisuseException This error can occur if the application creates a SQLiteStatement object and allows multiple threads in the application use it at the same time. SQLiteOutOfMemoryException SQLiteReadOnlyDatabaseException SQLiteTableLockedException </section>	https://developer.android.com/reference/android/database/sqlite/package-summary.html
android.databinding	A										<section class="prog__container">Contains components used when developing applications with data binding.</section>	https://developer.android.com/reference/android/databinding/package-summary.html
android.drm	A										<section class="prog__container">Provides classes for managing DRM content and determining the capabilities of DRM plugins (agents). Common uses of the DRM API include:</section>	https://developer.android.com/reference/android/drm/package-summary.html
android.graphics.drawable	A										<section class="prog__container">Provides classes to manage a variety of visual elements that are intended for display only, such as bitmaps and gradients. These elements are often used by widgets as background images or simply as indicators (for example, a volume level indicator).</section>	https://developer.android.com/reference/android/graphics/drawable/package-summary.html
android.hardware	A										<section class="prog__container">Provides support for hardware features, such as the camera and other sensors. Be aware that not all Android-powered devices support all hardware features, so you should declare hardware that your application requires using the <uses-feature> manifest element.</section>	https://developer.android.com/reference/android/hardware/package-summary.html
android.hardware.camera2	A										<section class="prog__container">The android.hardware.camera2 package provides an interface to individual camera devices connected to an Android device. It replaces the deprecated Camera class.</section>	https://developer.android.com/reference/android/hardware/camera2/package-summary.html
android.hardware.usb	A										<section class="prog__container">Provides support to communicate with USB hardware peripherals that are connected to Android-powered devices.</section>	https://developer.android.com/reference/android/hardware/usb/package-summary.html
android.location	A										<section class="prog__container">Contains the framework API classes that define Android location-based and related services.</section>	https://developer.android.com/reference/android/location/package-summary.html
android.media	A										<section class="prog__container">The Media APIs are used to play and, in some cases, record media files. This includes audio (e.g., play MP3s or other music files, ringtones, game sound effects, or DTMF tones) and video (e.g., play a video streamed over the web or from local storage). </section>	https://developer.android.com/reference/android/media/package-summary.html
android.media.MediaRouter	A										<section class="prog__container"><pre><code>public class MediaRouter</code></pre>MediaRouter allows applications to control the routing of media channels and streams from the current device to external speakers and destination devices.</section>	https://developer.android.com/reference/android/media/MediaRouter.html
android.media.MediaRouter.Callback	A										<section class="prog__container"><pre><code>public static abstract class MediaRouter.Callback</code></pre>Interface for receiving events about media routing changes. All methods of this interface will be called from the application's main thread.</section>	https://developer.android.com/reference/android/media/MediaRouter.Callback.html
android.media.MediaRouter.RouteInfo	A										<section class="prog__container"><pre><code>public static class MediaRouter.RouteInfo</code></pre>Information about a media route.</section>	https://developer.android.com/reference/android/media/MediaRouter.RouteInfo.html
android.media.effect	A										<section class="prog__container">Provides classes that allow you to apply a variety of visual effects to images and videos. For example, you can easily fix red-eye, convert an image to grayscale, adjust brightness, adjust saturation, rotate an image, apply a fisheye effect, and much more. The system performs all effects processing on the GPU to obtain maximum performance.</section>	https://developer.android.com/reference/android/media/effect/package-summary.html
android.media.midi	A										<section class="prog__container"> Provides classes for sending and receiving messages using the standard MIDI event protocol over USB, Bluetooth LE, and virtual (inter-app) transports. </section>	https://developer.android.com/reference/android/media/midi/package-summary.html
android.mtp	A										<section class="prog__container">Provides APIs that let you interact directly with connected cameras and other devices, using the PTP (Picture Transfer Protocol) subset of the MTP (Media Transfer Protocol) specification. Your application can receive notifications when devices are attached and removed, manage files and storage on those devices, and transfer files and metadata from the devices.</section>	https://developer.android.com/reference/android/mtp/package-summary.html
android.net.Proxy	A										<section class="prog__container"><pre><code>public final class Proxy</code></pre>A convenience class for accessing the user and default proxy settings.</section>	https://developer.android.com/reference/android/net/Proxy.html
android.net.rtp	A										<section class="prog__container">Provides APIs for RTP (Real-time Transport Protocol), allowing applications to manage on-demand or interactive data streaming. In particular, apps that provide VOIP, push-to-talk, conferencing, and audio streaming can use these APIs to initiate sessions and transmit or receive data streams over any available network.</section>	https://developer.android.com/reference/android/net/rtp/package-summary.html
android.net.sip	A										<section class="prog__container">Provides access to Session Initiation Protocol (SIP) functionality, such as making and answering VOIP calls using SIP.</section>	https://developer.android.com/reference/android/net/sip/package-summary.html
android.net.wifi	A										<section class="prog__container">Provides classes to manage Wi-Fi functionality on the device.</section>	https://developer.android.com/reference/android/net/wifi/package-summary.html
android.net.wifi.p2p	A										<section class="prog__container">Provides classes to create peer-to-peer (P2P) connections with Wi-Fi Direct.</section>	https://developer.android.com/reference/android/net/wifi/p2p/package-summary.html
android.nfc	A										<section class="prog__container">Provides access to Near Field Communication (NFC) functionality, allowing applications to read NDEF message in NFC tags. A "tag" may actually be another device that appears as a tag.</section>	https://developer.android.com/reference/android/nfc/package-summary.html
android.nfc.tech	A										<section class="prog__container"> These classes provide access to a tag technology's features, which vary by the type of tag that is scanned. A scanned tag can support multiple technologies, and you can find out what they are by calling getTechList().</section>	https://developer.android.com/reference/android/nfc/tech/package-summary.html
android.opengl	A										<section class="prog__container">Provides an OpenGL ES static interface and utilities.</section>	https://developer.android.com/reference/android/opengl/package-summary.html
android.os.CancellationSignal	A										<section class="prog__container"><pre><code>public final class CancellationSignal</code></pre>Provides the ability to cancel an operation in progress.</section>	https://developer.android.com/reference/android/os/CancellationSignal.html
android.os.CancellationSignal.OnCancelListener	A										<section class="prog__container"><pre><code>public static interface CancellationSignal.OnCancelListener</code></pre>Listens for cancellation.</section>	https://developer.android.com/reference/android/os/CancellationSignal.OnCancelListener.html
android.os.OperationCanceledException	A										<section class="prog__container"><pre><code>public class OperationCanceledException</code></pre>An exception type that is thrown when an operation in progress is canceled.</section>	https://developer.android.com/reference/android/os/OperationCanceledException.html
android.os.health	A										<section class="prog__container"> Applications running in the background are responsible for a significant amount of battery usage on a typical android device. There are several things that applications can do in order to reduce their impact. For example, by using JobScheduler, an application does not need to independently monitor whether the network is available, whether the device is plugged in, etc. In addition to being simpler to use, the application's services are only started when the required conditions have been met. But even when using the appropriate helper APIs, applications still can reduce their footprint. This package provides more insight into what is going on behind the scenes when an application is running. Application data is tracked by which user id (uid) is using particular resources. A snapshot of an application's measurements can be taken with the SystemHealth.takeMyUidSnapshot() method. The HealthStats object returned contains the statistics. HealthStats In order to be returned efficiently, the HealthStats class uses a set of int keys to identify the data returned. The UidHealthStats, PidHealthStats, PackageHealthStats , ProcessHealthStats, and ServiceHealthStats classes provide those constants. Each HealthStats object will be associated with exactly one of those classes. The object returned from SystemHealth.takeMyUidSnapshot() will be using the UidHealthStats keys, as it contains all of the data available for that uid. Classes HealthStats A HealthStats object contains system health data about an application. PackageHealthStats Keys for HealthStats returned from HealthStats.getStats(int) with the UidHealthStats.STATS_PACKAGES key. PidHealthStats Keys for HealthStats returned from HealthStats.getStats(int) with the UidHealthStats.STATS_PIDS key. ProcessHealthStats Keys for HealthStats returned from HealthStats.getStats(int) with the UidHealthStats.STATS_PROCESSES key. ServiceHealthStats Keys for HealthStats returned from HealthStats.getStats(int) with the PackageHealthStats.STATS_SERVICES key. SystemHealthManager Provides access to data about how various system resources are used by applications. TimerStat A TimerStat object stores a count and a time. UidHealthStats Keys for HealthStats returned from SystemHealthManager.takeUidSnapshot(int), SystemHealthManager.takeMyUidSnapshot(), and SystemHealthManager.takeUidSnapshots(int[]). </section>	https://developer.android.com/reference/android/os/health/package-summary.html
android.os.storage	A										<section class="prog__container"> Contains classes for the system storage service, which manages binary asset filesystems known as Opaque Binary Blobs (OBBs). </section>	https://developer.android.com/reference/android/os/storage/package-summary.html
android.preference	A										<section class="prog__container"> The preferences portion of an application should be ran as a separate Activity that extends the PreferenceActivity class. In the PreferenceActivity, a PreferenceScreen object should be the root element of the layout. The PreferenceScreen contains Preference elements such as a CheckBoxPreference, EditTextPreference, ListPreference, PreferenceCategory, or RingtonePreference. </section>	https://developer.android.com/reference/android/preference/package-summary.html
android.preference.CheckBoxPreference	A										<section class="prog__container"><pre><code>public class CheckBoxPreference</code></pre>A <code>Preference</code> that provides checkbox widget functionality.</section>	https://developer.android.com/reference/android/preference/CheckBoxPreference.html
android.preference.DialogPreference	A										<section class="prog__container"><pre><code>public abstract class DialogPreference</code></pre>A base class for <code>Preference</code> objects that are dialog-based. These preferences will, when clicked, open a dialog showing the actual preference controls.</section>	https://developer.android.com/reference/android/preference/DialogPreference.html
android.preference.EditTextPreference	A										<section class="prog__container"><pre><code>public class EditTextPreference</code></pre>A <code>Preference</code> that allows for string input.</section>	https://developer.android.com/reference/android/preference/EditTextPreference.html
android.preference.ListPreference	A										<section class="prog__container"><pre><code>public class ListPreference</code></pre>A <code>Preference</code> that displays a list of entries as a dialog.</section>	https://developer.android.com/reference/android/preference/ListPreference.html
android.preference.MultiSelectListPreference	A										<section class="prog__container"><pre><code>public class MultiSelectListPreference</code></pre>A <code>Preference</code> that displays a list of entries as a dialog.</section>	https://developer.android.com/reference/android/preference/MultiSelectListPreference.html
android.preference.Preference	A										<section class="prog__container"><pre><code>public class Preference</code></pre>Represents the basic Preference UI building block displayed by a <code>PreferenceActivity</code> in the form of a <code>ListView</code>. This class provides the <code>View</code> to be displayed in the activity and associates with a <code>SharedPreferences</code> to store/retrieve the preference data.</section>	https://developer.android.com/reference/android/preference/Preference.html
android.preference.Preference.BaseSavedState	A										<section class="prog__container"><pre><code>public static class Preference.BaseSavedState</code></pre>A base class for managing the instance state of a <code>Preference</code>.</section>	https://developer.android.com/reference/android/preference/Preference.BaseSavedState.html
android.preference.Preference.OnPreferenceChangeListener	A										<section class="prog__container"><pre><code>public static interface Preference.OnPreferenceChangeListener</code></pre>Interface definition for a callback to be invoked when the value of this <code>Preference</code> has been changed by the user and is about to be set and/or persisted. This gives the client a chance to prevent setting and/or persisting the value.</section>	https://developer.android.com/reference/android/preference/Preference.OnPreferenceChangeListener.html
android.preference.Preference.OnPreferenceClickListener	A										<section class="prog__container"><pre><code>public static interface Preference.OnPreferenceClickListener</code></pre>Interface definition for a callback to be invoked when a <code>Preference</code> is clicked.</section>	https://developer.android.com/reference/android/preference/Preference.OnPreferenceClickListener.html
android.preference.PreferenceCategory	A										<section class="prog__container"><pre><code>public class PreferenceCategory</code></pre>Used to group <code>Preference</code> objects and provide a disabled title above the group. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/preference/PreferenceCategory.html
android.preference.PreferenceFragment	A										<section class="prog__container"><pre><code>public abstract class PreferenceFragment</code></pre>Shows a hierarchy of <code>Preference</code> objects as lists. These preferences will automatically save to <code>SharedPreferences</code> as the user interacts with them. To retrieve an instance of <code>SharedPreferences</code> that the preference hierarchy in this fragment will use, call <code>getDefaultSharedPreferences(android.content.Context)</code> with a context in the same package as this fragment.</section>	https://developer.android.com/reference/android/preference/PreferenceFragment.html
android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback	A										<section class="prog__container"><pre><code>public static interface PreferenceFragment.OnPreferenceStartFragmentCallback</code></pre>Interface that PreferenceFragment's containing activity should implement to be able to process preference items that wish to switch to a new fragment.</section>	https://developer.android.com/reference/android/preference/PreferenceFragment.OnPreferenceStartFragmentCallback.html
android.preference.PreferenceGroup	A										<section class="prog__container"><pre><code>public abstract class PreferenceGroup</code></pre>A container for multiple <code>Preference</code> objects. It is a base class for Preference objects that are parents, such as <code>PreferenceCategory</code> and <code>PreferenceScreen</code>. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/preference/PreferenceGroup.html
android.preference.PreferenceManager	A										<section class="prog__container"><pre><code>public class PreferenceManager</code></pre>Used to help create <code>Preference</code> hierarchies from activities or XML.</section>	https://developer.android.com/reference/android/preference/PreferenceManager.html
android.preference.PreferenceScreen	A										<section class="prog__container"><pre><code>public final class PreferenceScreen</code></pre>Represents a top-level <code>Preference</code> that is the root of a Preference hierarchy. A <code>PreferenceActivity</code> points to an instance of this class to show the preferences. To instantiate this class, use <code>createPreferenceScreen(Context)</code>. <ul> This class can appear in two places: <li> When a <code>PreferenceActivity</code> points to this, it is used as the root and is not shown (only the contained preferences are shown). <li> When it appears inside another preference hierarchy, it is shown and serves as the gateway to another screen of preferences (either by showing another screen of preferences as a <code>Dialog</code> or via a <code>startActivity(android.content.Intent)</code> from the <code>getIntent()</code>). The children of this <code>PreferenceScreen</code> are NOT shown in the screen that this <code>PreferenceScreen</code> is shown in. Instead, a separate screen will be shown when this preference is clicked. </li></li></ul></section>	https://developer.android.com/reference/android/preference/PreferenceScreen.html
android.preference.SwitchPreference	A										<section class="prog__container"><pre><code>public class SwitchPreference</code></pre>A <code>Preference</code> that provides a two-state toggleable option.</section>	https://developer.android.com/reference/android/preference/SwitchPreference.html
android.preference.TwoStatePreference	A										<section class="prog__container"><pre><code>public abstract class TwoStatePreference</code></pre>Common base class for preferences that have two selectable states, persist a boolean value in SharedPreferences, and may have dependent preferences that are enabled/disabled based on the current state.</section>	https://developer.android.com/reference/android/preference/TwoStatePreference.html
android.print	A										<section class="prog__container"> Provides classes for implementing print support in applications and also contains all base classes and abstractions involved in printing. These base classes are also used by other more specialized printing related packages. </section>	https://developer.android.com/reference/android/print/package-summary.html
android.printservice	A										<section class="prog__container"> Provides classes for implementing print services. Print services are plug-in components that know how to talk to printers via some standard protocols. These services serve as a bridge between the system and the printers. Hence, the printer and print protocol specific implementation is factored out of the system and can be independently developed and updated. </section>	https://developer.android.com/reference/android/printservice/package-summary.html
android.provider	A										<section class="prog__container">Provides convenience classes to access the content providers supplied by Android.</section>	https://developer.android.com/reference/android/provider/package-summary.html
android.renderscript	A										<section class="prog__container">RenderScript provides support for high-performance computation across heterogeneous processors.</section>	https://developer.android.com/reference/android/renderscript/package-summary.html
android.renderscript.Allocation	A										<section class="prog__container"><pre><code>public class Allocation</code></pre></section>	https://developer.android.com/reference/android/renderscript/Allocation.html
android.renderscript.Allocation.MipmapControl	A										<section class="prog__container"><pre><code>public static final enum Allocation.MipmapControl</code></pre>Controls mipmap behavior when using the bitmap creation and update functions.</section>	https://developer.android.com/reference/android/renderscript/Allocation.MipmapControl.html
android.renderscript.BaseObj	A										<section class="prog__container"><pre><code>public class BaseObj</code></pre>BaseObj is the base class for all RenderScript objects owned by a RS context. It is responsible for lifetime management and resource tracking. This class should not be used by a user application.</section>	https://developer.android.com/reference/android/renderscript/BaseObj.html
android.renderscript.Byte2	A										<section class="prog__container"><pre><code>public class Byte2</code></pre>Class for exposing the native RenderScript byte2 type back to the Android system.</section>	https://developer.android.com/reference/android/renderscript/Byte2.html
android.renderscript.Byte3	A										<section class="prog__container"><pre><code>public class Byte3</code></pre>Class for exposing the native RenderScript byte3 type back to the Android system.</section>	https://developer.android.com/reference/android/renderscript/Byte3.html
android.renderscript.Byte4	A										<section class="prog__container"><pre><code>public class Byte4</code></pre>Class for exposing the native RenderScript byte4 type back to the Android system.</section>	https://developer.android.com/reference/android/renderscript/Byte4.html
android.renderscript.Double2	A										<section class="prog__container"><pre><code>public class Double2</code></pre>Vector version of the basic double type. Provides two double fields packed.</section>	https://developer.android.com/reference/android/renderscript/Double2.html
android.renderscript.Double3	A										<section class="prog__container"><pre><code>public class Double3</code></pre>Vector version of the basic double type. Provides three double fields packed.</section>	https://developer.android.com/reference/android/renderscript/Double3.html
android.renderscript.Double4	A										<section class="prog__container"><pre><code>public class Double4</code></pre>Vector version of the basic double type. Provides four double fields packed.</section>	https://developer.android.com/reference/android/renderscript/Double4.html
android.renderscript.Element	A										<section class="prog__container"><pre><code>public class Element</code></pre></section>	https://developer.android.com/reference/android/renderscript/Element.html
android.renderscript.Element.Builder	A										<section class="prog__container"><pre><code>public static class Element.Builder</code></pre>Builder class for producing complex elements with matching field and name pairs. The builder starts empty. The order in which elements are added is retained for the layout in memory.</section>	https://developer.android.com/reference/android/renderscript/Element.Builder.html
android.renderscript.Element.DataKind	A										<section class="prog__container"><pre><code>public static final enum Element.DataKind</code></pre>The special interpretation of the data if required. This is primarly useful for graphical data. USER indicates no special interpretation is expected. PIXEL is used in conjunction with the standard data types for representing texture formats.</section>	https://developer.android.com/reference/android/renderscript/Element.DataKind.html
android.renderscript.Element.DataType	A										<section class="prog__container"><pre><code>public static final enum Element.DataType</code></pre>DataType represents the basic type information for a basic element. The naming convention follows. For numeric types it is FLOAT, SIGNED, or UNSIGNED followed by the _BITS where BITS is the size of the data. BOOLEAN is a true / false (1,0) represented in an 8 bit container. The UNSIGNED variants with multiple bit definitions are for packed graphical data formats and represent vectors with per vector member sizes which are treated as a single unit for packing and alignment purposes. MATRIX the three matrix types contain FLOAT_32 elements and are treated as 32 bits for alignment purposes. RS_* objects: opaque handles with implementation dependent sizes.</section>	https://developer.android.com/reference/android/renderscript/Element.DataType.html
android.renderscript.FieldPacker	A										<section class="prog__container"><pre><code>public class FieldPacker</code></pre>Utility class for packing arguments and structures from Android system objects to RenderScript objects. This class is only intended to be used to support the reflected code generated by the RS tool chain. It should not be called directly.</section>	https://developer.android.com/reference/android/renderscript/FieldPacker.html
android.renderscript.Float2	A										<section class="prog__container"><pre><code>public class Float2</code></pre>Vector version of the basic float type. Provides two float fields packed.</section>	https://developer.android.com/reference/android/renderscript/Float2.html
android.renderscript.Float3	A										<section class="prog__container"><pre><code>public class Float3</code></pre>Vector version of the basic float type. Provides three float fields packed.</section>	https://developer.android.com/reference/android/renderscript/Float3.html
android.renderscript.Float4	A										<section class="prog__container"><pre><code>public class Float4</code></pre>Vector version of the basic float type. Provides four float fields packed.</section>	https://developer.android.com/reference/android/renderscript/Float4.html
android.renderscript.Int2	A										<section class="prog__container"><pre><code>public class Int2</code></pre>Vector version of the basic int type. Provides two int fields packed.</section>	https://developer.android.com/reference/android/renderscript/Int2.html
android.renderscript.Int3	A										<section class="prog__container"><pre><code>public class Int3</code></pre>Vector version of the basic int type. Provides three int fields packed.</section>	https://developer.android.com/reference/android/renderscript/Int3.html
android.renderscript.Int4	A										<section class="prog__container"><pre><code>public class Int4</code></pre>Vector version of the basic int type. Provides four int fields packed.</section>	https://developer.android.com/reference/android/renderscript/Int4.html
android.renderscript.Long2	A										<section class="prog__container"><pre><code>public class Long2</code></pre>Vector version of the basic long type. Provides two long fields packed.</section>	https://developer.android.com/reference/android/renderscript/Long2.html
android.renderscript.Long3	A										<section class="prog__container"><pre><code>public class Long3</code></pre>Vector version of the basic long type. Provides three long fields packed.</section>	https://developer.android.com/reference/android/renderscript/Long3.html
android.renderscript.Long4	A										<section class="prog__container"><pre><code>public class Long4</code></pre>Vector version of the basic long type. Provides four long fields packed.</section>	https://developer.android.com/reference/android/renderscript/Long4.html
android.renderscript.Matrix2f	A										<section class="prog__container"><pre><code>public class Matrix2f</code></pre>Class for exposing the native RenderScript rs_matrix2x2 type back to the Android system.</section>	https://developer.android.com/reference/android/renderscript/Matrix2f.html
android.renderscript.Matrix3f	A										<section class="prog__container"><pre><code>public class Matrix3f</code></pre>Class for exposing the native RenderScript rs_matrix3x3 type back to the Android system.</section>	https://developer.android.com/reference/android/renderscript/Matrix3f.html
android.renderscript.Matrix4f	A										<section class="prog__container"><pre><code>public class Matrix4f</code></pre>Class for exposing the native RenderScript rs_matrix4x4 type back to the Android system.</section>	https://developer.android.com/reference/android/renderscript/Matrix4f.html
android.renderscript.RSDriverException	A										<section class="prog__container"><pre><code>public class RSDriverException</code></pre>Base class for all exceptions thrown by the Android RenderScript</section>	https://developer.android.com/reference/android/renderscript/RSDriverException.html
android.renderscript.RSIllegalArgumentException	A										<section class="prog__container"><pre><code>public class RSIllegalArgumentException</code></pre>Base class for all exceptions thrown by the Android RenderScript</section>	https://developer.android.com/reference/android/renderscript/RSIllegalArgumentException.html
android.renderscript.RSInvalidStateException	A										<section class="prog__container"><pre><code>public class RSInvalidStateException</code></pre>Base class for all exceptions thrown by the Android RenderScript</section>	https://developer.android.com/reference/android/renderscript/RSInvalidStateException.html
android.renderscript.RSRuntimeException	A										<section class="prog__container"><pre><code>public class RSRuntimeException</code></pre>Base class for all exceptions thrown by the Android RenderScript</section>	https://developer.android.com/reference/android/renderscript/RSRuntimeException.html
android.renderscript.RenderScript	A										<section class="prog__container"><pre><code>public class RenderScript</code></pre>This class provides access to a RenderScript context, which controls RenderScript initialization, resource management, and teardown. An instance of the RenderScript class must be created before any other RS objects can be created. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/renderscript/RenderScript.html
android.renderscript.RenderScript.ContextType	A										<section class="prog__container"><pre><code>public static final enum RenderScript.ContextType</code></pre>ContextType specifies the specific type of context to be created.</section>	https://developer.android.com/reference/android/renderscript/RenderScript.ContextType.html
android.renderscript.RenderScript.Priority	A										<section class="prog__container"><pre><code>public static final enum RenderScript.Priority</code></pre>RenderScript worker thread priority enumeration. The default value is NORMAL. Applications wishing to do background processing should set their priority to LOW to avoid starving forground processes.</section>	https://developer.android.com/reference/android/renderscript/RenderScript.Priority.html
android.renderscript.RenderScript.RSErrorHandler	A										<section class="prog__container"><pre><code>public static class RenderScript.RSErrorHandler</code></pre>The runtime error handler base class. An application should derive from this class if it wishes to install an error handler. When errors occur at runtime, the fields in this class will be filled, and the run method will be called.</section>	https://developer.android.com/reference/android/renderscript/RenderScript.RSErrorHandler.html
android.renderscript.RenderScript.RSMessageHandler	A										<section class="prog__container"><pre><code>public static class RenderScript.RSMessageHandler</code></pre>The base class from which an application should derive in order to receive RS messages from scripts. When a script calls <code>rsSendToClient</code>, the data fields will be filled, and the run method will be called on a separate thread. This will occur some time after <code>rsSendToClient</code> completes in the script, as <code>rsSendToClient</code> is asynchronous. Message handlers are not guaranteed to have completed when <code>finish()</code> returns.</section>	https://developer.android.com/reference/android/renderscript/RenderScript.RSMessageHandler.html
android.renderscript.Sampler	A										<section class="prog__container"><pre><code>public class Sampler</code></pre>Sampler object that defines how Allocations can be read as textures within a kernel. Samplers are used in conjunction with the <code>rsSample</code> runtime function to return values from normalized coordinates. Any Allocation used with a Sampler must have been created with <code>USAGE_GRAPHICS_TEXTURE</code>; using a Sampler on an <code>Allocation</code> that was not created with <code>USAGE_GRAPHICS_TEXTURE</code> is undefined.</section>	https://developer.android.com/reference/android/renderscript/Sampler.html
android.renderscript.Sampler.Builder	A										<section class="prog__container"><pre><code>public static class Sampler.Builder</code></pre>Builder for creating non-standard samplers. This is only necessary if a Sampler with different min and mag modes is desired.</section>	https://developer.android.com/reference/android/renderscript/Sampler.Builder.html
android.renderscript.Sampler.Value	A										<section class="prog__container"><pre><code>public static final enum Sampler.Value</code></pre></section>	https://developer.android.com/reference/android/renderscript/Sampler.Value.html
android.renderscript.Script	A										<section class="prog__container"><pre><code>public class Script</code></pre>The parent class for all executable scripts. This should not be used by applications.</section>	https://developer.android.com/reference/android/renderscript/Script.html
android.renderscript.Script.Builder	A										<section class="prog__container"><pre><code>public static class Script.Builder</code></pre>Only intended for use by generated reflected code.</section>	https://developer.android.com/reference/android/renderscript/Script.Builder.html
android.renderscript.Script.FieldBase	A										<section class="prog__container"><pre><code>public static class Script.FieldBase</code></pre>Only intended for use by generated reflected code.</section>	https://developer.android.com/reference/android/renderscript/Script.FieldBase.html
android.renderscript.Script.FieldID	A										<section class="prog__container"><pre><code>public static final class Script.FieldID</code></pre>FieldID is an identifier for a Script + exported field pair. It is used as an identifier for ScriptGroup creation. This class should not be directly created. Instead use the method in the reflected or intrinsic code "getFieldID_funcname()".</section>	https://developer.android.com/reference/android/renderscript/Script.FieldID.html
android.renderscript.Script.InvokeID	A										<section class="prog__container"><pre><code>public static final class Script.InvokeID</code></pre>InvokeID is an identifier for an invoke function. It is used as an identifier for ScriptGroup creation. This class should not be directly created. Instead use the method in the reflected or intrinsic code "getInvokeID_funcname()".</section>	https://developer.android.com/reference/android/renderscript/Script.InvokeID.html
android.renderscript.Script.KernelID	A										<section class="prog__container"><pre><code>public static final class Script.KernelID</code></pre>KernelID is an identifier for a Script + root function pair. It is used as an identifier for ScriptGroup creation. This class should not be directly created. Instead use the method in the reflected or intrinsic code "getKernelID_funcname()".</section>	https://developer.android.com/reference/android/renderscript/Script.KernelID.html
android.renderscript.Script.LaunchOptions	A										<section class="prog__container"><pre><code>public static final class Script.LaunchOptions</code></pre>Class for specifying the specifics about how a kernel will be launched. This class can specify a potential range of cells on which to run a kernel. If no set is called for a dimension then this class will have no impact on that dimension when the kernel is executed. The forEach kernel launch will operate over the intersection of the dimensions. Example: LaunchOptions with setX(5, 15) Allocation with dimension X=10, Y=10 The resulting forEach run would execute over: x = 5 to 9 (inclusive) and y = 0 to 9 (inclusive).</section>	https://developer.android.com/reference/android/renderscript/Script.LaunchOptions.html
android.renderscript.ScriptC	A										<section class="prog__container"><pre><code>public class ScriptC</code></pre>The superclass for all user-defined scripts. This is only intended to be used by the generated derived classes.</section>	https://developer.android.com/reference/android/renderscript/ScriptC.html
android.renderscript.ScriptGroup	A										<section class="prog__container"><pre><code>public final class ScriptGroup</code></pre>A group of kernels that are executed together with one execution call as if they were a single kernel</section>	https://developer.android.com/reference/android/renderscript/ScriptGroup.html
android.renderscript.ScriptGroup.Binding	A										<section class="prog__container"><pre><code>public static final class ScriptGroup.Binding</code></pre>Represents a binding of a value to a global variable in a kernel or invocable function. Used in closure creation.</section>	https://developer.android.com/reference/android/renderscript/ScriptGroup.Binding.html
android.renderscript.ScriptGroup.Builder	A										<section class="prog__container"><pre><code>public static final class ScriptGroup.Builder</code></pre><p class="caution"><strong> This class was deprecated in API level 23.</strong><br/> Use <code>ScriptGroup.Builder2</code> instead.</section>	https://developer.android.com/reference/android/renderscript/ScriptGroup.Builder.html
android.renderscript.ScriptGroup.Builder2	A										<section class="prog__container"><pre><code>public static final class ScriptGroup.Builder2</code></pre>The builder class for creating script groups</section>	https://developer.android.com/reference/android/renderscript/ScriptGroup.Builder2.html
android.renderscript.ScriptGroup.Closure	A										<section class="prog__container"><pre><code>public static final class ScriptGroup.Closure</code></pre>An opaque class for closures</section>	https://developer.android.com/reference/android/renderscript/ScriptGroup.Closure.html
android.renderscript.ScriptGroup.Future	A										<section class="prog__container"><pre><code>public static final class ScriptGroup.Future</code></pre>An opaque class for futures</section>	https://developer.android.com/reference/android/renderscript/ScriptGroup.Future.html
android.renderscript.ScriptGroup.Input	A										<section class="prog__container"><pre><code>public static final class ScriptGroup.Input</code></pre>An opaque class for script group inputs</section>	https://developer.android.com/reference/android/renderscript/ScriptGroup.Input.html
android.renderscript.ScriptIntrinsic	A										<section class="prog__container"><pre><code>public abstract class ScriptIntrinsic</code></pre>Base class for all Intrinsic scripts. An intrinsic a script which implements a pre-defined function. Intrinsics are provided to provide effecient implemtations of common operations. Not intended for direct use.</section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsic.html
android.renderscript.ScriptIntrinsic3DLUT	A										<section class="prog__container"><pre><code>public final class ScriptIntrinsic3DLUT</code></pre>Intrinsic for converting RGB to RGBA by using a 3D lookup table. The incoming r,g,b values are use as normalized x,y,z coordinates into a 3D allocation. The 8 nearest values are sampled and linearly interpolated. The result is placed in the output.</section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsic3DLUT.html
android.renderscript.ScriptIntrinsicBLAS	A										<section class="prog__container"><pre><code>public final class ScriptIntrinsicBLAS</code></pre>ScriptIntrinsicBLAS class provides high performance RenderScript APIs to BLAS. The BLAS (Basic Linear Algebra Subprograms) are routines that provide standard building blocks for performing basic vector and matrix operations. For detailed description of BLAS, please refer to http://www.netlib.org/blas/</section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBLAS.html
android.renderscript.ScriptIntrinsicBlend	A										<section class="prog__container"><pre><code>public class ScriptIntrinsicBlend</code></pre>Intrinsic kernels for blending two <code>Allocation</code> objects.</section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend.html
android.renderscript.ScriptIntrinsicBlur	A										<section class="prog__container"><pre><code>public final class ScriptIntrinsicBlur</code></pre>Intrinsic Gausian blur filter. Applies a gaussian blur of the specified radius to all elements of an allocation.</section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlur.html
android.renderscript.ScriptIntrinsicColorMatrix	A										<section class="prog__container"><pre><code>public final class ScriptIntrinsicColorMatrix</code></pre>Intrinsic for applying a color matrix to allocations. If the element type is <code>UNSIGNED_8</code>, it is converted to <code>FLOAT_32</code> and normalized from (0-255) to (0-1). If the incoming vector size is less than four, a <code>F32_4(RenderScript)</code> is created by filling the missing vector channels with zero. This value is then multiplied by the 4x4 color matrix as performed by rsMatrixMultiply(), adding a <code>F32_4(RenderScript)</code>, and then writing it to the output <code>Allocation</code>. If the ouptut type is unsigned, the value is normalized from (0-1) to (0-255) and converted. If the output vector size is less than four, the unused channels are discarded. Supported elements types are <code>U8(RenderScript)</code>, <code>U8_2(RenderScript)</code>, <code>U8_3(RenderScript)</code>, <code>U8_4(RenderScript)</code>, <code>F32(RenderScript)</code>, <code>F32_2(RenderScript)</code>, <code>F32_3(RenderScript)</code>, and <code>F32_4(RenderScript)</code>.</section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicColorMatrix.html
android.renderscript.ScriptIntrinsicConvolve3x3	A										<section class="prog__container"><pre><code>public final class ScriptIntrinsicConvolve3x3</code></pre>Intrinsic for applying a 3x3 convolve to an allocation.</section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicConvolve3x3.html
android.renderscript.ScriptIntrinsicConvolve5x5	A										<section class="prog__container"><pre><code>public final class ScriptIntrinsicConvolve5x5</code></pre>Intrinsic for applying a 5x5 convolve to an allocation.</section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicConvolve5x5.html
android.renderscript.ScriptIntrinsicHistogram	A										<section class="prog__container"><pre><code>public final class ScriptIntrinsicHistogram</code></pre>Intrinsic Histogram filter.</section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicHistogram.html
android.renderscript.ScriptIntrinsicLUT	A										<section class="prog__container"><pre><code>public final class ScriptIntrinsicLUT</code></pre>Intrinsic for applying a per-channel lookup table. Each channel of the input has an independant lookup table. The tables are 256 entries in size and can cover the full value range of <code>U8_4(RenderScript)</code>.</section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicLUT.html
android.renderscript.ScriptIntrinsicResize	A										<section class="prog__container"><pre><code>public final class ScriptIntrinsicResize</code></pre>Intrinsic for performing a resize of a 2D allocation.</section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicResize.html
android.renderscript.ScriptIntrinsicYuvToRGB	A										<section class="prog__container"><pre><code>public final class ScriptIntrinsicYuvToRGB</code></pre>Intrinsic for converting an Android YUV buffer to RGB. The input allocation should be supplied in a supported YUV format as a YUV element Allocation. The output is RGBA; the alpha channel will be set to 255.</section>	https://developer.android.com/reference/android/renderscript/ScriptIntrinsicYuvToRGB.html
android.renderscript.Short2	A										<section class="prog__container"><pre><code>public class Short2</code></pre>Class for exposing the native RenderScript Short2 type back to the Android system. Vector version of the basic short type. Provides two short fields packed.</section>	https://developer.android.com/reference/android/renderscript/Short2.html
android.renderscript.Short3	A										<section class="prog__container"><pre><code>public class Short3</code></pre>Vector version of the basic short type. Provides three short fields packed.</section>	https://developer.android.com/reference/android/renderscript/Short3.html
android.renderscript.Short4	A										<section class="prog__container"><pre><code>public class Short4</code></pre>Vector version of the basic short type. Provides four short fields packed.</section>	https://developer.android.com/reference/android/renderscript/Short4.html
android.renderscript.Type	A										<section class="prog__container"><pre><code>public class Type</code></pre></section>	https://developer.android.com/reference/android/renderscript/Type.html
android.renderscript.Type.Builder	A										<section class="prog__container"><pre><code>public static class Type.Builder</code></pre>Builder class for Type.</section>	https://developer.android.com/reference/android/renderscript/Type.Builder.html
android.renderscript.Type.CubemapFace	A										<section class="prog__container"><pre><code>public static final enum Type.CubemapFace</code></pre></section>	https://developer.android.com/reference/android/renderscript/Type.CubemapFace.html
android.security	A										<section class="prog__container">Provides access to a few facilities of the Android security subsystems.</section>	https://developer.android.com/reference/android/security/package-summary.html
android.service.textservice	A										<section class="prog__container">Provides classes that allow you to create spell checkers in a manner similar to the input method framework (for IMEs).</section>	https://developer.android.com/reference/android/service/textservice/package-summary.html
android.support.v17.leanback	A										<section class="prog__container">Support classes for building Leanback user experiences.</section>	https://developer.android.com/reference/android/support/v17/leanback/package-summary.html
android.support.v17.leanback.app	A										<section class="prog__container">Support classes providing high level Leanback user interface building blocks: fragments and helpers.</section>	https://developer.android.com/reference/android/support/v17/leanback/app/package-summary.html
android.support.v17.leanback.widget	A										<section class="prog__container">Support classes providing low level Leanback user interface building blocks: widgets and helpers.</section>	https://developer.android.com/reference/android/support/v17/leanback/widget/package-summary.html
android.support.v7.media	A										<section class="prog__container">Contains APIs that control the routing of media channels and streams from the current device to external speakers and destination devices.</section>	https://developer.android.com/reference/android/support/v7/media/package-summary.html
android.test	A										<section class="prog__container">A framework for writing Android test cases and suites.</section>	https://developer.android.com/reference/android/test/package-summary.html
android.test.mock	A										<section class="prog__container">Utility classes providing stubs or mocks of various Android framework building blocks.</section>	https://developer.android.com/reference/android/test/mock/package-summary.html
android.text	A										<section class="prog__container">Provides classes used to render or track text and text spans on the screen.</section>	https://developer.android.com/reference/android/text/package-summary.html
android.text.Annotation	A										<section class="prog__container"><pre><code>public class Annotation</code></pre>Annotations are simple key-value pairs that are preserved across TextView save/restore cycles and can be used to keep application-specific data that needs to be maintained for regions of text.</section>	https://developer.android.com/reference/android/text/Annotation.html
android.text.BidiFormatter	A										<section class="prog__container"><pre><code>public final class BidiFormatter</code></pre>Utility class for formatting text for display in a potentially opposite-directionality context without garbling. The directionality of the context is set at formatter creation and the directionality of the text can be either estimated or passed in when known.</section>	https://developer.android.com/reference/android/text/BidiFormatter.html
android.text.BidiFormatter.Builder	A										<section class="prog__container"><pre><code>public static final class BidiFormatter.Builder</code></pre>A class for building a BidiFormatter with non-default options.</section>	https://developer.android.com/reference/android/text/BidiFormatter.Builder.html
android.text.method	A										<section class="prog__container">Provides classes that monitor or modify keypad input.</section>	https://developer.android.com/reference/android/text/method/package-summary.html
android.text.style	A										<section class="prog__container">Provides classes used to view or change the style of a span of text in a View object. The classes with a subclass Standard are passed in to SpannableString.setSpan() or SpannableStringBuilder.setSpan() to add a new styled span to a string in a View object. Interfaces AlignmentSpan LeadingMarginSpan A paragraph style affecting the leading margin. LeadingMarginSpan.LeadingMarginSpan2 An extended version of LeadingMarginSpan, which allows the implementor to specify the number of lines of the paragraph to which this object is attached that the "first line of paragraph" margin width will be applied to. LineBackgroundSpan LineHeightSpan LineHeightSpan.WithDensity ParagraphStyle The classes that affect paragraph-level text formatting implement this interface. TabStopSpan Represents a single tab stop on a line. UpdateAppearance The classes that affect character-level text in a way that modifies their appearance when one is added or removed must implement this interface. UpdateLayout The classes that affect character-level text formatting in a way that triggers a text layout update when one is added or removed must implement this interface. WrapTogetherSpan Classes AbsoluteSizeSpan AlignmentSpan.Standard BackgroundColorSpan BulletSpan CharacterStyle The classes that affect character-level text formatting extend this class. ClickableSpan If an object of this type is attached to the text of a TextView with a movement method of LinkMovementMethod, the affected spans of text can be selected. DrawableMarginSpan DynamicDrawableSpan EasyEditSpan Provides an easy way to edit a portion of text. ForegroundColorSpan IconMarginSpan ImageSpan LeadingMarginSpan.Standard The standard implementation of LeadingMarginSpan, which adjusts the margin but does not do any rendering. LocaleSpan Changes the Locale of the text to which the span is attached. MaskFilterSpan MetricAffectingSpan The classes that affect character-level text formatting in a way that changes the width or height of characters extend this class. QuoteSpan RasterizerSpan RelativeSizeSpan ReplacementSpan ScaleXSpan StrikethroughSpan StyleSpan Describes a style in a span. SubscriptSpan SuggestionSpan Holds suggestion candidates for the text enclosed in this span. SuperscriptSpan TabStopSpan.Standard The default implementation of TabStopSpan. TextAppearanceSpan Sets the text color, size, style, and typeface to match a TextAppearance resource. TtsSpan A span that supplies additional meta-data for the associated text intended for text-to-speech engines. TtsSpan.Builder<C extends Builder<?>> A simple builder for TtsSpans. TtsSpan.CardinalBuilder A builder for TtsSpans of type TYPE_CARDINAL. TtsSpan.DateBuilder A builder for TtsSpans of type TYPE_DATE. TtsSpan.DecimalBuilder A builder for TtsSpans of type TYPE_DECIMAL. TtsSpan.DigitsBuilder A builder for TtsSpans of type TYPE_DIGITS. TtsSpan.ElectronicBuilder A builder for TtsSpans of type TYPE_ELECTRONIC. TtsSpan.FractionBuilder A builder for TtsSpans of type TYPE_FRACTION. TtsSpan.MeasureBuilder A builder for TtsSpans of type TYPE_MEASURE. TtsSpan.MoneyBuilder A builder for TtsSpans of type TYPE_MONEY. TtsSpan.OrdinalBuilder A builder for TtsSpans of type TYPE_ORDINAL. TtsSpan.SemioticClassBuilder<C extends SemioticClassBuilder<?>> A builder for TtsSpans, has setters for morphosyntactic features. TtsSpan.TelephoneBuilder A builder for TtsSpans of type TYPE_TELEPHONE. TtsSpan.TextBuilder A builder for TtsSpans of type TYPE_TEXT. TtsSpan.TimeBuilder A builder for TtsSpans of type TYPE_TIME. TtsSpan.VerbatimBuilder A builder for TtsSpans of type TYPE_VERBATIM. TypefaceSpan Changes the typeface family of the text to which the span is attached. UnderlineSpan URLSpan </section>	https://developer.android.com/reference/android/text/style/package-summary.html
android.transition	A										<section class="prog__container">The classes in this package enable "scenes & transitions" functionality for view hiearchies.</section>	https://developer.android.com/reference/android/transition/package-summary.html
android.transition.AutoTransition	A										<section class="prog__container"><pre><code>public class AutoTransition</code></pre>Utility class for creating a default transition that automatically fades, moves, and resizes views during a scene change.</section>	https://developer.android.com/reference/android/transition/AutoTransition.html
android.transition.ChangeBounds	A										<section class="prog__container"><pre><code>public class ChangeBounds</code></pre>This transition captures the layout bounds of target views before and after the scene change and animates those changes during the transition.</section>	https://developer.android.com/reference/android/transition/ChangeBounds.html
android.transition.Fade	A										<section class="prog__container"><pre><code>public class Fade</code></pre>This transition tracks changes to the visibility of target views in the start and end scenes and fades views in or out when they become visible or non-visible. Visibility is determined by both the <code>setVisibility(int)</code> state of the view as well as whether it is parented in the current view hierarchy.</section>	https://developer.android.com/reference/android/transition/Fade.html
android.transition.Scene	A										<section class="prog__container"><pre><code>public final class Scene</code></pre>A scene represents the collection of values that various properties in the View hierarchy will have when the scene is applied. A Scene can be configured to automatically run a Transition when it is applied, which will animate the various property changes that take place during the scene change.</section>	https://developer.android.com/reference/android/transition/Scene.html
android.transition.Transition	A										<section class="prog__container"><pre><code>public abstract class Transition</code></pre>A Transition holds information about animations that will be run on its targets during a scene change. Subclasses of this abstract class may choreograph several child transitions (<code>TransitionSet</code> or they may perform custom animations themselves. Any Transition has two main jobs: (1) capture property values, and (2) play animations based on changes to captured property values. A custom transition knows what property values on View objects are of interest to it, and also knows how to animate changes to those values. For example, the <code>Fade</code> transition tracks changes to visibility-related properties and is able to construct and run animations that fade items in or out based on changes to those properties.</section>	https://developer.android.com/reference/android/transition/Transition.html
android.transition.Transition.TransitionListener	A										<section class="prog__container"><pre><code>public static interface Transition.TransitionListener</code></pre>A transition listener receives notifications from a transition. Notifications indicate transition lifecycle events.</section>	https://developer.android.com/reference/android/transition/Transition.TransitionListener.html
android.transition.TransitionManager	A										<section class="prog__container"><pre><code>public class TransitionManager</code></pre>This class manages the set of transitions that fire when there is a change of <code>Scene</code>. To use the manager, add scenes along with transition objects with calls to <code>setTransition(Scene, Transition)</code> or <code>setTransition(Scene, Scene, Transition)</code>. Setting specific transitions for scene changes is not required; by default, a Scene change will use <code>AutoTransition</code> to do something reasonable for most situations. Specifying other transitions for particular scene changes is only necessary if the application wants different transition behavior in these situations.</section>	https://developer.android.com/reference/android/transition/TransitionManager.html
android.transition.TransitionSet	A										<section class="prog__container"><pre><code>public class TransitionSet</code></pre>A TransitionSet is a parent of child transitions (including other TransitionSets). Using TransitionSets enables more complex choreography of transitions, where some sets play <code>ORDERING_TOGETHER</code> and others play <code>ORDERING_SEQUENTIAL</code>. For example, <code>AutoTransition</code> uses a TransitionSet to sequentially play a Fade(Fade.OUT), followed by a <code>ChangeBounds</code>, followed by a Fade(Fade.OUT) transition.</section>	https://developer.android.com/reference/android/transition/TransitionSet.html
android.transition.TransitionValues	A										<section class="prog__container"><pre><code>public class TransitionValues</code></pre>Data structure which holds cached values for the transition. The view field is the target which all of the values pertain to. The values field is a map which holds information for fields according to names selected by the transitions. These names should be unique to avoid clobbering values stored by other transitions, such as the convention project:transition_name:property_name. For example, the platform might store a property "alpha" in a transition "Fader" as "android:fader:alpha".</section>	https://developer.android.com/reference/android/transition/TransitionValues.html
android.transition.Visibility	A										<section class="prog__container"><pre><code>public abstract class Visibility</code></pre>This transition tracks changes to the visibility of target views in the start and end scenes. Visibility is determined not just by the <code>setVisibility(int)</code> state of views, but also whether views exist in the current view hierarchy. The class is intended to be a utility for subclasses such as <code>Fade</code>, which use this visibility information to determine the specific animations to run when visibility changes occur. Subclasses should implement one or both of the methods <code>onAppear(ViewGroup, TransitionValues, int, TransitionValues, int)</code>, <code>onDisappear(ViewGroup, TransitionValues, int, TransitionValues, int)</code> or <code>onAppear(ViewGroup, View, TransitionValues, TransitionValues)</code>, <code>onDisappear(ViewGroup, View, TransitionValues, TransitionValues)</code>.</section>	https://developer.android.com/reference/android/transition/Visibility.html
android.util.ArrayMap	A										<section class="prog__container"><pre><code>public final class ArrayMap</code></pre>ArrayMap is a generic key-&gt;value mapping data structure that is designed to be more memory efficient than a traditional <code>HashMap</code>. It keeps its mappings in an array data structure -- an integer array of hash codes for each item, and an Object array of the key/value pairs. This allows it to avoid having to create an extra object for every entry put in to the map, and it also tries to control the growth of the size of these arrays more aggressively (since growing them only requires copying the entries in the array, not rebuilding a hash map).</section>	https://developer.android.com/reference/android/util/ArrayMap.html
android.util.ArraySet	A										<section class="prog__container"><pre><code>public final class ArraySet</code></pre>ArraySet is a generic set data structure that is designed to be more memory efficient than a traditional <code>HashSet</code>. The design is very similar to <code>ArrayMap</code>, with all of the caveats described there. This implementation is separate from ArrayMap, however, so the Object array contains only one item for each entry in the set (instead of a pair for a mapping).</section>	https://developer.android.com/reference/android/util/ArraySet.html
android.util.AtomicFile	A										<section class="prog__container"><pre><code>public class AtomicFile</code></pre>Helper class for performing atomic operations on a file by creating a backup file until a write has successfully completed. If you need this on older versions of the platform you can use <code>AtomicFile</code> in the v4 support library.</section>	https://developer.android.com/reference/android/util/AtomicFile.html
android.util.LongSparseArray	A										<section class="prog__container"><pre><code>public class LongSparseArray</code></pre>SparseArray mapping longs to Objects. Unlike a normal array of Objects, there can be gaps in the indices. It is intended to be more memory efficient than using a HashMap to map Longs to Objects, both because it avoids auto-boxing keys and its data structure doesn't rely on an extra entry object for each mapping.</section>	https://developer.android.com/reference/android/util/LongSparseArray.html
android.util.LruCache	A										<section class="prog__container"><pre><code>public class LruCache</code></pre>A cache that holds strong references to a limited number of values. Each time a value is accessed, it is moved to the head of a queue. When a value is added to a full cache, the value at the end of that queue is evicted and may become eligible for garbage collection.</section>	https://developer.android.com/reference/android/util/LruCache.html
android.util.Pair	A										<section class="prog__container"><pre><code>public class Pair</code></pre>Container to ease passing around a tuple of two objects. This object provides a sensible implementation of equals(), returning true if equals() is true on each of the contained objects.</section>	https://developer.android.com/reference/android/util/Pair.html
android.view.AbsSavedState	A										<section class="prog__container"><pre><code>public abstract class AbsSavedState</code></pre>A <code>Parcelable</code> implementation that should be used by inheritance hierarchies to ensure the state of all classes along the chain is saved.</section>	https://developer.android.com/reference/android/view/AbsSavedState.html
android.view.ActionMode	A										<section class="prog__container"><pre><code>public abstract class ActionMode</code></pre>Represents a contextual mode of the user interface. Action modes can be used to provide alternative interaction modes and replace parts of the normal UI until finished. Examples of good action modes include text selection and contextual actions. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/view/ActionMode.html
android.view.ActionMode.Callback	A										<section class="prog__container"><pre><code>public static interface ActionMode.Callback</code></pre>Callback interface for action modes. Supplied to <code>startActionMode(Callback)</code>, a Callback configures and handles events raised by a user's interaction with an action mode.</section>	https://developer.android.com/reference/android/view/ActionMode.Callback.html
android.view.ActionProvider	A										<section class="prog__container"><pre><code>public abstract class ActionProvider</code></pre>An ActionProvider defines rich menu interaction in a single component. ActionProvider can generate action views for use in the action bar, dynamically populate submenus of a MenuItem, and handle default menu item invocations.</section>	https://developer.android.com/reference/android/view/ActionProvider.html
android.view.ActionProvider.VisibilityListener	A										<section class="prog__container"><pre><code>public static interface ActionProvider.VisibilityListener</code></pre>Listens to changes in visibility as reported by <code>refreshVisibility()</code>.</section>	https://developer.android.com/reference/android/view/ActionProvider.VisibilityListener.html
android.view.CollapsibleActionView	A										<section class="prog__container"><pre><code>public interface CollapsibleActionView</code></pre>When a <code>View</code> implements this interface it will receive callbacks when expanded or collapsed as an action view alongside the optional, app-specified callbacks to <code>MenuItem.OnActionExpandListener</code>.</section>	https://developer.android.com/reference/android/view/CollapsibleActionView.html
android.view.accessibility	A										<section class="prog__container"> The classes in this package are used to represent screen content and changes to it as well as APIs for querying the global accessibility state of the system. </section>	https://developer.android.com/reference/android/view/accessibility/package-summary.html
android.view.animation	A										<section class="prog__container">Provides classes that handle tweened animations.</section>	https://developer.android.com/reference/android/view/animation/package-summary.html
android.webkit	A										<section class="prog__container">Provides tools for browsing the web. For more information about building apps with web-based content, see the Web Apps Overview. Annotations JavascriptInterface Annotation that allows exposing methods to JavaScript. Interfaces DownloadListener GeolocationPermissions.Callback A callback interface used by the host application to set the Geolocation permission state for an origin. PluginStub This interface is used to implement plugins in a WebView. ValueCallback<T> A callback interface used to provide values asynchronously. WebChromeClient.CustomViewCallback A callback interface used by the host application to notify the current page that its custom view has been dismissed. WebIconDatabase.IconListener This interface was deprecated in API level 18. This interface is obsolete. WebResourceRequest Encompasses parameters to the shouldInterceptRequest(WebView, WebResourceRequest) method. WebStorage.QuotaUpdater This interface was deprecated in API level 19. This class is obsolete and no longer used. WebView.FindListener Interface to listen for find results. WebView.PictureListener This interface was deprecated in API level 12. This interface is now obsolete. Classes ClientCertRequest ClientCertRequest: The user receives an instance of this class as a parameter of onReceivedClientCertRequest(WebView, ClientCertRequest). ConsoleMessage Public class representing a JavaScript console message from WebCore. CookieManager Manages the cookies used by an application's WebView instances. CookieSyncManager This class was deprecated in API level 21. The WebView now automatically syncs cookies as necessary. You no longer need to create or use the CookieSyncManager. To manually force a sync you can use the CookieManager method flush() which is a synchronous replacement for sync(). DateSorter Sorts dates into the following groups: Today Yesterday seven days ago one month ago older than a month ago GeolocationPermissions This class is used to manage permissions for the WebView's Geolocation JavaScript API. HttpAuthHandler Represents a request for HTTP authentication. JsPromptResult Public class for handling JavaScript prompt requests. JsResult An instance of this class is passed as a parameter in various WebChromeClient action notifications. MimeTypeMap Two-way map that maps MIME-types to file extensions and vice versa. PermissionRequest This class defines a permission request and is used when web content requests access to protected resources. ServiceWorkerClient Base class for clients to capture Service Worker related callbacks, see ServiceWorkerController for usage example. ServiceWorkerController Manages Service Workers used by WebView. ServiceWorkerWebSettings Manages settings state for all Service Workers. SslErrorHandler Represents a request for handling an SSL error. URLUtil WebBackForwardList This class contains the back/forward list for a WebView. WebChromeClient WebChromeClient.FileChooserParams Parameters used in the onShowFileChooser(WebView, ValueCallback, WebChromeClient.FileChooserParams) method. WebHistoryItem A convenience class for accessing fields in an entry in the back/forward list of a WebView. WebIconDatabase This class was deprecated in API level 18. This class is only required when running on devices up to JELLY_BEAN_MR2 WebMessage The Java representation of the HTML5 PostMessage event. WebMessagePort The Java representation of the HTML5 message ports. WebMessagePort.WebMessageCallback The listener for handling MessagePort events. WebResourceError Encapsulates information about errors occured during loading of web resources. WebResourceResponse Encapsulates a resource response. WebSettings Manages settings state for a WebView. WebStorage This class is used to manage the JavaScript storage APIs provided by the WebView. WebStorage.Origin This class encapsulates information about the amount of storage currently used by an origin for the JavaScript storage APIs. WebView A View that displays web pages. WebView.HitTestResult WebView.VisualStateCallback Callback interface supplied to postVisualStateCallback(long, WebView.VisualStateCallback) for receiving notifications about the visual state. WebView.WebViewTransport Transportation object for returning WebView across thread boundaries. WebViewClient WebViewDatabase This class allows developers to determine whether any WebView used in the application has stored any of the following types of browsing data and to clear any such stored data for all WebViews in the application. WebViewFragment A fragment that displays a WebView. Enums ConsoleMessage.MessageLevel WebSettings.LayoutAlgorithm Enum for controlling the layout of html. WebSettings.PluginState The plugin state effects how plugins are treated on a page. WebSettings.RenderPriority WebSettings.TextSize This enum was deprecated in API level 14. Use setTextZoom(int) and getTextZoom() instead. WebSettings.ZoomDensity Enum for specifying the WebView's desired density. </section>	https://developer.android.com/reference/android/webkit/package-summary.html
android.widget	A										<section class="prog__container"> The widget package contains (mostly visual) UI elements to use on your Application screen. You can also design your own. </section>	https://developer.android.com/reference/android/widget/package-summary.html
android.widget.ActionMenuView	A										<section class="prog__container"><pre><code>public class ActionMenuView</code></pre>ActionMenuView is a presentation of a series of menu options as a View. It provides several top level options as action buttons while spilling remaining options over as items in an overflow menu. This allows applications to present packs of actions inline with specific or repeating content.</section>	https://developer.android.com/reference/android/widget/ActionMenuView.html
android.widget.ActionMenuView.LayoutParams	A										<section class="prog__container"><pre><code>public static class ActionMenuView.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/widget/ActionMenuView.LayoutParams.html
android.widget.ActionMenuView.OnMenuItemClickListener	A										<section class="prog__container"><pre><code>public static interface ActionMenuView.OnMenuItemClickListener</code></pre>Interface responsible for receiving menu item click events if the items themselves do not have individual item click listeners.</section>	https://developer.android.com/reference/android/widget/ActionMenuView.OnMenuItemClickListener.html
android.widget.CursorAdapter	A										<section class="prog__container"><pre><code>public abstract class CursorAdapter</code></pre>Adapter that exposes data from a <code>Cursor</code> to a <code>ListView</code> widget.</section>	https://developer.android.com/reference/android/widget/CursorAdapter.html
android.widget.GridLayout	A										<section class="prog__container"><pre><code>public class GridLayout</code></pre>A layout that places its children in a rectangular <em>grid</em>.</section>	https://developer.android.com/reference/android/widget/GridLayout.html
android.widget.GridLayout.Alignment	A										<section class="prog__container"><pre><code>public static abstract class GridLayout.Alignment</code></pre>Alignments specify where a view should be placed within a cell group and what size it should be.</section>	https://developer.android.com/reference/android/widget/GridLayout.Alignment.html
android.widget.GridLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class GridLayout.LayoutParams</code></pre>Layout information associated with each of the children of a GridLayout.</section>	https://developer.android.com/reference/android/widget/GridLayout.LayoutParams.html
android.widget.GridLayout.Spec	A										<section class="prog__container"><pre><code>public static class GridLayout.Spec</code></pre>A Spec defines the horizontal or vertical characteristics of a group of cells. Each spec. defines the <em>grid indices</em> and <em>alignment</em> along the appropriate axis.</section>	https://developer.android.com/reference/android/widget/GridLayout.Spec.html
android.widget.ListPopupWindow	A										<section class="prog__container"><pre><code>public class ListPopupWindow</code></pre>A ListPopupWindow anchors itself to a host view and displays a list of choices.</section>	https://developer.android.com/reference/android/widget/ListPopupWindow.html
android.widget.PopupMenu	A										<section class="prog__container"><pre><code>public class PopupMenu</code></pre>A PopupMenu displays a <code>Menu</code> in a modal popup window anchored to a <code>View</code>. The popup will appear below the anchor view if there is room, or above it if there is not. If the IME is visible the popup will not overlap it until it is touched. Touching outside of the popup will dismiss it.</section>	https://developer.android.com/reference/android/widget/PopupMenu.html
android.widget.PopupMenu.OnDismissListener	A										<section class="prog__container"><pre><code>public static interface PopupMenu.OnDismissListener</code></pre>Callback interface used to notify the application that the menu has closed.</section>	https://developer.android.com/reference/android/widget/PopupMenu.OnDismissListener.html
android.widget.PopupMenu.OnMenuItemClickListener	A										<section class="prog__container"><pre><code>public static interface PopupMenu.OnMenuItemClickListener</code></pre>Interface responsible for receiving menu item click events if the items themselves do not have individual item click listeners.</section>	https://developer.android.com/reference/android/widget/PopupMenu.OnMenuItemClickListener.html
android.widget.ResourceCursorAdapter	A										<section class="prog__container"><pre><code>public abstract class ResourceCursorAdapter</code></pre>An easy adapter that creates views defined in an XML file. You can specify the XML file that defines the appearance of the views.</section>	https://developer.android.com/reference/android/widget/ResourceCursorAdapter.html
android.widget.SearchView	A										<section class="prog__container"><pre><code>public class SearchView</code></pre>A widget that provides a user interface for the user to enter a search query and submit a request to a search provider. Shows a list of query suggestions or results, if available, and allows the user to pick a suggestion or result to launch into.</section>	https://developer.android.com/reference/android/widget/SearchView.html
android.widget.SearchView.OnCloseListener	A										<section class="prog__container"><pre><code>public static interface SearchView.OnCloseListener</code></pre></section>	https://developer.android.com/reference/android/widget/SearchView.OnCloseListener.html
android.widget.SearchView.OnQueryTextListener	A										<section class="prog__container"><pre><code>public static interface SearchView.OnQueryTextListener</code></pre>Callbacks for changes to the query text.</section>	https://developer.android.com/reference/android/widget/SearchView.OnQueryTextListener.html
android.widget.SearchView.OnSuggestionListener	A										<section class="prog__container"><pre><code>public static interface SearchView.OnSuggestionListener</code></pre>Callback interface for selection events on suggestions. These callbacks are only relevant when a SearchableInfo has been specified by <code>setSearchableInfo(SearchableInfo)</code>.</section>	https://developer.android.com/reference/android/widget/SearchView.OnSuggestionListener.html
android.widget.ShareActionProvider	A										<section class="prog__container"><pre><code>public class ShareActionProvider</code></pre>This is a provider for a share action. It is responsible for creating views that enable data sharing and also to show a sub menu with sharing activities if the hosting item is placed on the overflow menu.</section>	https://developer.android.com/reference/android/widget/ShareActionProvider.html
android.widget.ShareActionProvider.OnShareTargetSelectedListener	A										<section class="prog__container"><pre><code>public static interface ShareActionProvider.OnShareTargetSelectedListener</code></pre>Listener for the event of selecting a share target.</section>	https://developer.android.com/reference/android/widget/ShareActionProvider.OnShareTargetSelectedListener.html
android.widget.SimpleCursorAdapter	A										<section class="prog__container"><pre><code>public class SimpleCursorAdapter</code></pre>An easy adapter to map columns from a cursor to TextViews or ImageViews defined in an XML file. You can specify which columns you want, which views you want to display the columns, and the XML file that defines the appearance of these views. Binding occurs in two phases. First, if a <code>SimpleCursorAdapter.ViewBinder</code> is available, <code>setViewValue(android.view.View, android.database.Cursor, int)</code> is invoked. If the returned value is true, binding has occured. If the returned value is false and the view to bind is a TextView, <code>setViewText(TextView, String)</code> is invoked. If the returned value is false and the view to bind is an ImageView, <code>setViewImage(ImageView, String)</code> is invoked. If no appropriate binding can be found, an <code>IllegalStateException</code> is thrown. If this adapter is used with filtering, for instance in an <code>AutoCompleteTextView</code>, you can use the <code>SimpleCursorAdapter.CursorToStringConverter</code> and the <code>FilterQueryProvider</code> interfaces to get control over the filtering process. You can refer to <code>convertToString(android.database.Cursor)</code> and <code>runQueryOnBackgroundThread(CharSequence)</code> for more information.</section>	https://developer.android.com/reference/android/widget/SimpleCursorAdapter.html
android.widget.SimpleCursorAdapter.CursorToStringConverter	A										<section class="prog__container"><pre><code>public static interface SimpleCursorAdapter.CursorToStringConverter</code></pre>This class can be used by external clients of SimpleCursorAdapter to define how the Cursor should be converted to a String.</section>	https://developer.android.com/reference/android/widget/SimpleCursorAdapter.CursorToStringConverter.html
android.widget.SimpleCursorAdapter.ViewBinder	A										<section class="prog__container"><pre><code>public static interface SimpleCursorAdapter.ViewBinder</code></pre>This class can be used by external clients of SimpleCursorAdapter to bind values fom the Cursor to views. You should use this class to bind values from the Cursor to views that are not directly supported by SimpleCursorAdapter or to change the way binding occurs for views supported by SimpleCursorAdapter.</section>	https://developer.android.com/reference/android/widget/SimpleCursorAdapter.ViewBinder.html
android.widget.Space	A										<section class="prog__container"><pre><code>public final class Space</code></pre>Space is a lightweight View subclass that may be used to create gaps between components in general purpose layouts.</section>	https://developer.android.com/reference/android/widget/Space.html
android.widget.ThemedSpinnerAdapter	A										<section class="prog__container"><pre><code>public interface ThemedSpinnerAdapter</code></pre>An extension of SpinnerAdapter that is capable of inflating drop-down views against a different theme than normal views.</section>	https://developer.android.com/reference/android/widget/ThemedSpinnerAdapter.html
android.widget.Toolbar	A										<section class="prog__container"><pre><code>public class Toolbar</code></pre>A standard toolbar for use within application content.</section>	https://developer.android.com/reference/android/widget/Toolbar.html
android.widget.Toolbar.LayoutParams	A										<section class="prog__container"><pre><code>public static class Toolbar.LayoutParams</code></pre>Layout information for child views of Toolbars.</section>	https://developer.android.com/reference/android/widget/Toolbar.LayoutParams.html
android.widget.Toolbar.OnMenuItemClickListener	A										<section class="prog__container"><pre><code>public static interface Toolbar.OnMenuItemClickListener</code></pre>Interface responsible for receiving menu item click events if the items themselves do not have individual item click listeners.</section>	https://developer.android.com/reference/android/widget/Toolbar.OnMenuItemClickListener.html
animation.Interpolator	A										<section class="prog__container"><pre><code>public interface Interpolator</code></pre>An interpolator defines the rate of change of an animation. This allows the basic animation effects (alpha, scale, translate, rotate) to be accelerated, decelerated, repeated, etc.</section>	https://developer.android.com/reference/android/view/animation/Interpolator.html
annotation.Annotation	A										<section class="prog__container"><pre><code>public interface Annotation</code></pre>The common interface extended by all annotation types. Note that an interface that manually extends this one does <i>not</i> define an annotation type. Also note that this interface does not itself define an annotation type. More information about annotation types can be found in section 9.6 of <cite>The Java&trade; Language Specification</cite>.</section>	https://developer.android.com/reference/java/lang/annotation/Annotation.html
annotation.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/annotation/R.html
annotation.Size	A										<section class="prog__container"><pre><code>public abstract @interface Size</code></pre>Denotes that the annotated element should have a given size or length. Note that "-1" means "unset". Typically used with a parameter or return value of type array or collection.</section>	https://developer.android.com/reference/android/support/annotation/Size.html
annotation.Target	A										<section class="prog__container"><pre><code>public abstract @interface Target</code></pre>Indicates the kinds of program element to which an annotation type is applicable. If a Target meta-annotation is not present on an annotation type declaration, the declared type may be used on any program element. If such a meta-annotation is present, the compiler will enforce the specified usage restriction. For example, this meta-annotation indicates that the declared type is itself a meta-annotation type. It can only be used on annotation type declarations: <pre> @Target(ElementType.ANNOTATION_TYPE) public @interface MetaAnnotationType { ... } </pre> This meta-annotation indicates that the declared type is intended solely for use as a member type in complex annotation type declarations. It cannot be used to annotate anything directly: <pre> @Target({}) public @interface MemberType { ... } </pre> It is a compile-time error for a single ElementType constant to appear more than once in a Target annotation. For example, the following meta-annotation is illegal: <pre> @Target({ElementType.FIELD, ElementType.METHOD, ElementType.FIELD}) public @interface Bogus { ... } </pre></section>	https://developer.android.com/reference/java/lang/annotation/Target.html
annotations.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/annotations/R.html
appcompat.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.html
appcompat.R.anim	A										<section class="prog__container"><pre><code>public static final class R.anim</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.anim.html
appcompat.R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.attr.html
appcompat.R.bool	A										<section class="prog__container"><pre><code>public static final class R.bool</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.bool.html
appcompat.R.color	A										<section class="prog__container"><pre><code>public static final class R.color</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.color.html
appcompat.R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.dimen.html
appcompat.R.drawable	A										<section class="prog__container"><pre><code>public static final class R.drawable</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.drawable.html
appcompat.R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.id.html
appcompat.R.integer	A										<section class="prog__container"><pre><code>public static final class R.integer</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.integer.html
appcompat.R.layout	A										<section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.layout.html
appcompat.R.string	A										<section class="prog__container"><pre><code>public static final class R.string</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.string.html
appcompat.R.style	A										<section class="prog__container"><pre><code>public static final class R.style</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.style.html
appcompat.R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/v7/appcompat/R.styleable.html
cardview.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v7/cardview/R.html
cardview.R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/v7/cardview/R.attr.html
cardview.R.color	A										<section class="prog__container"><pre><code>public static final class R.color</code></pre></section>	https://developer.android.com/reference/android/support/v7/cardview/R.color.html
cardview.R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/support/v7/cardview/R.dimen.html
cardview.R.style	A										<section class="prog__container"><pre><code>public static final class R.style</code></pre></section>	https://developer.android.com/reference/android/support/v7/cardview/R.style.html
cardview.R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/v7/cardview/R.styleable.html
compat.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/compat/R.html
concurrent.TimeUnit	A										<section class="prog__container"><pre><code>public enum TimeUnit</code></pre>A <code>TimeUnit</code> represents time durations at a given unit of granularity and provides utility methods to convert across units, and to perform timing and delay operations in these units. A <code>TimeUnit</code> does not maintain time information, but only helps organize and use time representations that may be maintained separately across various contexts. A nanosecond is defined as one thousandth of a microsecond, a microsecond as one thousandth of a millisecond, a millisecond as one thousandth of a second, a minute as sixty seconds, an hour as sixty minutes, and a day as twenty four hours.</section>	https://developer.android.com/reference/java/util/concurrent/TimeUnit.html
conn.ssl.SSLSocketFactory	A										<section class="prog__container"><pre><code>public class SSLSocketFactory</code></pre><p class="caution"><strong> This class was deprecated in API level 22.</strong><br/> Please use <code>openConnection()</code> instead. Please visit this webpage for further details.</section>	https://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html
content.ClipboardManager	A										<section class="prog__container"><pre><code>public class ClipboardManager</code></pre>Interface to the clipboard service, for placing and retrieving text in the global clipboard.</section>	https://developer.android.com/reference/android/content/ClipboardManager.html
content.Entity	A										<section class="prog__container"><pre><code>public final class Entity</code></pre>A representation of a item using ContentValues. It contains one top level ContentValue plus a collection of Uri, ContentValues tuples as subvalues. One example of its use is in Contacts, where the top level ContentValue contains the columns from the RawContacts table and the subvalues contain a ContentValues object for each row from the Data table that corresponds to that RawContact. The uri refers to the Data table uri for each row.</section>	https://developer.android.com/reference/android/content/Entity.html
coreui.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/coreui/R.html
coreutils.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/coreutils/R.html
customtabs.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/customtabs/R.html
database.Observable	A										<section class="prog__container"><pre><code>public abstract class Observable</code></pre>Provides methods for registering or unregistering arbitrary observers in an <code>ArrayList</code>. This abstract class is intended to be subclassed and specialized to maintain a registry of observers of specific types and dispatch notifications to them.</section>	https://developer.android.com/reference/android/database/Observable.html
database.SQLException	A										<section class="prog__container"><pre><code>public class SQLException</code></pre>An exception that indicates there was an error with SQL parsing or execution.</section>	https://developer.android.com/reference/android/database/SQLException.html
databinding.Observable	A										<section class="prog__container"><pre><code>public interface Observable</code></pre>Observable classes provide a way in which data bound UI can be notified of changes. <code>ObservableList</code> and <code>ObservableMap</code> also provide the ability to notify when changes occur. ObservableField, ObservableParcelable, ObservableBoolean, ObservableByte, ObservableShort, ObservableInt, ObservableLong, ObservableFloat, and ObservableDouble provide a means by which properties may be notified without implementing Observable.</section>	https://developer.android.com/reference/android/databinding/Observable.html
design.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/design/R.html
design.R.anim	A										<section class="prog__container"><pre><code>public static final class R.anim</code></pre></section>	https://developer.android.com/reference/android/support/design/R.anim.html
design.R.animator	A										<section class="prog__container"><pre><code>public static final class R.animator</code></pre></section>	https://developer.android.com/reference/android/support/design/R.animator.html
design.R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/design/R.attr.html
design.R.color	A										<section class="prog__container"><pre><code>public static final class R.color</code></pre></section>	https://developer.android.com/reference/android/support/design/R.color.html
design.R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/support/design/R.dimen.html
design.R.drawable	A										<section class="prog__container"><pre><code>public static final class R.drawable</code></pre></section>	https://developer.android.com/reference/android/support/design/R.drawable.html
design.R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/design/R.id.html
design.R.integer	A										<section class="prog__container"><pre><code>public static final class R.integer</code></pre></section>	https://developer.android.com/reference/android/support/design/R.integer.html
design.R.layout	A										<section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>	https://developer.android.com/reference/android/support/design/R.layout.html
design.R.string	A										<section class="prog__container"><pre><code>public static final class R.string</code></pre></section>	https://developer.android.com/reference/android/support/design/R.string.html
design.R.style	A										<section class="prog__container"><pre><code>public static final class R.style</code></pre></section>	https://developer.android.com/reference/android/support/design/R.style.html
design.R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/design/R.styleable.html
dom.Element	A										<section class="prog__container"><pre><code>public interface Element</code></pre>The <code>Element</code> interface represents an element in an HTML or XML document. Elements may have attributes associated with them; since the <code>Element</code> interface inherits from <code>Node</code>, the generic <code>Node</code> interface attribute <code>attributes</code> may be used to retrieve the set of all attributes for an element. There are methods on the <code>Element</code> interface to retrieve either an <code>Attr</code> object by name or an attribute value by name. In XML, where an attribute value may contain entity references, an <code>Attr</code> object should be retrieved to examine the possibly fairly complex sub-tree representing the attribute value. On the other hand, in HTML, where all attributes have simple string values, methods to directly access an attribute value can safely be used as a convenience.</section>	https://developer.android.com/reference/org/w3c/dom/Element.html
dom.Entity	A										<section class="prog__container"><pre><code>public interface Entity</code></pre>This interface represents a known entity, either parsed or unparsed, in an XML document. Note that this models the entity itself <em>not</em> the entity declaration.</section>	https://developer.android.com/reference/org/w3c/dom/Entity.html
drawable.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/graphics/drawable/R.html
egl.EGLConfig	A										<section class="prog__container"><pre><code>public abstract class EGLConfig</code></pre></section>	https://developer.android.com/reference/javax/microedition/khronos/egl/EGLConfig.html
egl.EGLContext	A										<section class="prog__container"><pre><code>public abstract class EGLContext</code></pre></section>	https://developer.android.com/reference/javax/microedition/khronos/egl/EGLContext.html
egl.EGLDisplay	A										<section class="prog__container"><pre><code>public abstract class EGLDisplay</code></pre></section>	https://developer.android.com/reference/javax/microedition/khronos/egl/EGLDisplay.html
egl.EGLSurface	A										<section class="prog__container"><pre><code>public abstract class EGLSurface</code></pre></section>	https://developer.android.com/reference/javax/microedition/khronos/egl/EGLSurface.html
format.DateFormat	A										<section class="prog__container"><pre><code>public class DateFormat</code></pre>Utility class for producing strings with formatted date/time.</section>	https://developer.android.com/reference/android/text/format/DateFormat.html
format.Formatter	A										<section class="prog__container"><pre><code>public final class Formatter</code></pre>Utility class to aid in formatting common values that are not covered by the <code>Formatter</code> class in <code>java.util</code></section>	https://developer.android.com/reference/android/text/format/Formatter.html
format.Time	A										<section class="prog__container"><pre><code>public class Time</code></pre><p class="caution"><strong> This class was deprecated in API level 22.</strong><br/> Use <code>GregorianCalendar</code> instead.</section>	https://developer.android.com/reference/android/text/format/Time.html
fragment.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/fragment/R.html
framework.AssertionFailedError	A										<section class="prog__container"><pre><code>public class AssertionFailedError</code></pre>Thrown when an assertion failed.</section>	https://developer.android.com/reference/junit/framework/AssertionFailedError.html
framework.ComparisonFailure	A										<section class="prog__container"><pre><code>public class ComparisonFailure</code></pre>Thrown when an assert equals for Strings failed. Inspired by a patch from Alex Chaffee mailto:alex@purpletech.com</section>	https://developer.android.com/reference/junit/framework/ComparisonFailure.html
graphics.Camera	A										<section class="prog__container"><pre><code>public class Camera</code></pre>A camera instance can be used to compute 3D transformations and generate a matrix that can be applied, for instance, on a <code>Canvas</code>.</section>	https://developer.android.com/reference/android/graphics/Camera.html
graphics.Interpolator	A										<section class="prog__container"><pre><code>public class Interpolator</code></pre></section>	https://developer.android.com/reference/android/graphics/Interpolator.html
graphics.Matrix	A										<section class="prog__container"><pre><code>public class Matrix</code></pre>The Matrix class holds a 3x3 matrix for transforming coordinates.</section>	https://developer.android.com/reference/android/graphics/Matrix.html
graphics.Target	A										<section class="prog__container"><pre><code>public final class Target</code></pre>A class which allows custom selection of colors in a <code>Palette</code>'s generation. Instances can be created via the <code>Target.Builder</code> class.</section>	https://developer.android.com/reference/android/support/v7/graphics/Target.html
gridlayout.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v7/gridlayout/R.html
gridlayout.R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/v7/gridlayout/R.attr.html
gridlayout.R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/support/v7/gridlayout/R.dimen.html
gridlayout.R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/v7/gridlayout/R.id.html
gridlayout.R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/v7/gridlayout/R.styleable.html
gsm.SmsManager	A										<section class="prog__container"><pre><code>public final class SmsManager</code></pre><p class="caution"><strong> This class was deprecated in API level 4.</strong><br/> Replaced by android.telephony.SmsManager that supports both GSM and CDMA.</section>	https://developer.android.com/reference/android/telephony/gsm/SmsManager.html
gsm.SmsMessage	A										<section class="prog__container"><pre><code>public class SmsMessage</code></pre><p class="caution"><strong> This class was deprecated in API level 4.</strong><br/> Replaced by android.telephony.SmsMessage that supports both GSM and CDMA.</section>	https://developer.android.com/reference/android/telephony/gsm/SmsMessage.html
gsm.SmsMessage.MessageClass	A										<section class="prog__container"><pre><code>public static final enum SmsMessage.MessageClass</code></pre><p class="caution"><strong> This enum was deprecated in API level 4.</strong><br/> Use android.telephony.SmsMessage.</section>	https://developer.android.com/reference/android/telephony/gsm/SmsMessage.MessageClass.html
gsm.SmsMessage.SubmitPdu	A										<section class="prog__container"><pre><code>public static class SmsMessage.SubmitPdu</code></pre><p class="caution"><strong> This class was deprecated in API level 4.</strong><br/> Use android.telephony.SmsMessage.</section>	https://developer.android.com/reference/android/telephony/gsm/SmsMessage.SubmitPdu.html
hardware.Camera	A										<section class="prog__container"><pre><code>public class Camera</code></pre><p class="caution"><strong> This class was deprecated in API level 21.</strong><br/> We recommend using the new <code>android.hardware.camera2</code> API for new applications.</section>	https://developer.android.com/reference/android/hardware/Camera.html
icu.math.BigDecimal	A										<section class="prog__container"><pre><code>public class BigDecimal</code></pre>The <code>BigDecimal</code> class implements immutable arbitrary-precision decimal numbers. The methods of the <code>BigDecimal</code> class provide operations for fixed and floating point arithmetic, comparison, format conversions, and hashing.</section>	https://developer.android.com/reference/android/icu/math/BigDecimal.html
icu.math.MathContext	A										<section class="prog__container"><pre><code>public final class MathContext</code></pre>The <code>MathContext</code> immutable class encapsulates the settings understood by the operator methods of the <code>BigDecimal</code> class (and potentially other classes). Operator methods are those that effect an operation on a number or a pair of numbers.</section>	https://developer.android.com/reference/android/icu/math/MathContext.html
icu.text.BreakIterator	A										<section class="prog__container"><pre><code>public abstract class BreakIterator</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>BreakIterator</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.</section>	https://developer.android.com/reference/android/icu/text/BreakIterator.html
icu.text.CollationElementIterator	A										<section class="prog__container"><pre><code>public final class CollationElementIterator</code></pre><code>CollationElementIterator</code> is an iterator created by a RuleBasedCollator to walk through a string. The return result of each iteration is a 32-bit collation element (CE) that defines the ordering priority of the next character or sequence of characters in the source string.</section>	https://developer.android.com/reference/android/icu/text/CollationElementIterator.html
icu.text.CollationKey	A										<section class="prog__container"><pre><code>public final class CollationKey</code></pre>A <code>CollationKey</code> represents a <code>String</code> under the rules of a specific <code>Collator</code> object. Comparing two <code>CollationKey</code>s returns the relative order of the <code>String</code>s they represent.</section>	https://developer.android.com/reference/android/icu/text/CollationKey.html
icu.text.Collator	A										<section class="prog__container"><pre><code>public abstract class Collator</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>Collator</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.</section>	https://developer.android.com/reference/android/icu/text/Collator.html
icu.text.DateFormat	A										<section class="prog__container"><pre><code>public abstract class DateFormat</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>DateFormat</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.</section>	https://developer.android.com/reference/android/icu/text/DateFormat.html
icu.text.DateFormat.Field	A										<section class="prog__container"><pre><code>public static class DateFormat.Field</code></pre>The instances of this inner class are used as attribute keys and values in AttributedCharacterIterator that DateFormat.formatToCharacterIterator() method returns.</section>	https://developer.android.com/reference/android/icu/text/DateFormat.Field.html
icu.text.DateFormatSymbols	A										<section class="prog__container"><pre><code>public class DateFormatSymbols</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>DateFormatSymbols</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.</section>	https://developer.android.com/reference/android/icu/text/DateFormatSymbols.html
icu.text.DecimalFormat	A										<section class="prog__container"><pre><code>public class DecimalFormat</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>DecimalFormat</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'. <code>DecimalFormat</code> is a concrete subclass of <code>NumberFormat</code> that formats decimal numbers. It has a variety of features designed to make it possible to parse and format numbers in any locale, including support for Western, Arabic, or Indic digits. It also supports different flavors of numbers, including integers ("123"), fixed-point numbers ("123.4"), scientific notation ("1.23E4"), percentages ("12%"), and currency amounts ("$123.00", "USD123.00", "123.00 US dollars"). All of these flavors can be easily localized.</section>	https://developer.android.com/reference/android/icu/text/DecimalFormat.html
icu.text.DecimalFormatSymbols	A										<section class="prog__container"><pre><code>public class DecimalFormatSymbols</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>DecimalFormatSymbols</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'. This class represents the set of symbols (such as the decimal separator, the grouping separator, and so on) needed by <code>DecimalFormat</code> to format numbers. <code>DecimalFormat</code> creates for itself an instance of <code>DecimalFormatSymbols</code> from its locale data. If you need to change any of these symbols, you can get the <code>DecimalFormatSymbols</code> object from your <code>DecimalFormat</code> and modify it.</section>	https://developer.android.com/reference/android/icu/text/DecimalFormatSymbols.html
icu.text.MessageFormat	A										<section class="prog__container"><pre><code>public class MessageFormat</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>MessageFormat</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.</section>	https://developer.android.com/reference/android/icu/text/MessageFormat.html
icu.text.MessageFormat.Field	A										<section class="prog__container"><pre><code>public static class MessageFormat.Field</code></pre>Defines constants that are used as attribute keys in the <code>AttributedCharacterIterator</code> returned from <code>MessageFormat.formatToCharacterIterator</code>.</section>	https://developer.android.com/reference/android/icu/text/MessageFormat.Field.html
icu.text.Normalizer	A										<section class="prog__container"><pre><code>public final class Normalizer</code></pre>Old Unicode normalization API.</section>	https://developer.android.com/reference/android/icu/text/Normalizer.html
icu.text.NumberFormat	A										<section class="prog__container"><pre><code>public abstract class NumberFormat</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>NumberFormat</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'. <code>NumberFormat</code> is the abstract base class for all number formats. This class provides the interface for formatting and parsing numbers. <code>NumberFormat</code> also provides methods for determining which locales have number formats, and what their names are. <code>NumberFormat</code> helps you to format and parse numbers for any locale. Your code can be completely independent of the locale conventions for decimal points, thousands-separators, or even the particular decimal digits used, or whether the number format is even decimal.</section>	https://developer.android.com/reference/android/icu/text/NumberFormat.html
icu.text.NumberFormat.Field	A										<section class="prog__container"><pre><code>public static class NumberFormat.Field</code></pre>The instances of this inner class are used as attribute keys and values in AttributedCharacterIterator that NumberFormat.formatToCharacterIterator() method returns.</section>	https://developer.android.com/reference/android/icu/text/NumberFormat.Field.html
icu.text.RuleBasedCollator	A										<section class="prog__container"><pre><code>public final class RuleBasedCollator</code></pre></section>	https://developer.android.com/reference/android/icu/text/RuleBasedCollator.html
icu.text.SimpleDateFormat	A										<section class="prog__container"><pre><code>public class SimpleDateFormat</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>SimpleDateFormat</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.</section>	https://developer.android.com/reference/android/icu/text/SimpleDateFormat.html
icu.util.Calendar	A										<section class="prog__container"><pre><code>public abstract class Calendar</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>Calendar</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.</section>	https://developer.android.com/reference/android/icu/util/Calendar.html
icu.util.Currency	A										<section class="prog__container"><pre><code>public class Currency</code></pre>A class encapsulating a currency, as defined by ISO 4217. A <tt>Currency</tt> object can be created given a <tt>Locale</tt> or given an ISO 4217 code. Once created, the <tt>Currency</tt> object can return various data necessary to its proper display: <ul><li>A display symbol, for a specific locale <li>The number of fraction digits to display <li>A rounding increment </li></li></li></ul> The <tt>DecimalFormat</tt> class uses these data to display currencies.</section>	https://developer.android.com/reference/android/icu/util/Currency.html
icu.util.GregorianCalendar	A										<section class="prog__container"><pre><code>public class GregorianCalendar</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>GregorianCalendar</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.</section>	https://developer.android.com/reference/android/icu/util/GregorianCalendar.html
icu.util.TimeZone	A										<section class="prog__container"><pre><code>public abstract class TimeZone</code></pre><strong>[icu enhancement]</strong> ICU's replacement for <code>TimeZone</code>.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.</section>	https://developer.android.com/reference/android/icu/util/TimeZone.html
internal.widget.AutoScrollHelper	A										AutoScrollHelper is a utility class for adding automatic edge-triggered scrolling to Views.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
internal.widget.ExploreByTouchHelper	A										ExploreByTouchHelper is a utility class for implementing accessibility support in custom <code><a href="https://developer.android.com/reference/android/view/View.html">View</a></code>s that represent a collection of View-like logical items.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
jar.Attributes	A										<section class="prog__container"><pre><code>public class Attributes</code></pre>The Attributes class maps Manifest attribute names to associated string values. Valid attribute names are case-insensitive, are restricted to the ASCII characters in the set [0-9a-zA-Z_-], and cannot exceed 70 characters in length. Attribute values can contain any characters and will be UTF8-encoded when written to the output stream. See the JAR File Specification for more information about valid attribute names and values.</section>	https://developer.android.com/reference/java/util/jar/Attributes.html
jar.Manifest	A										<section class="prog__container"><pre><code>public class Manifest</code></pre>The Manifest class is used to maintain Manifest entry names and their associated Attributes. There are main Manifest Attributes as well as per-entry Attributes. For information on the Manifest format, please see the Manifest format specification.</section>	https://developer.android.com/reference/java/util/jar/Manifest.html
java.lang	A										<section class="prog__container">Frequently it is necessary to represent a value of primitive type as if it were an object. The wrapper classes Boolean, Character, Integer, Long, Float, and Double serve this purpose. An object of type Double, for example, contains a field whose type is double, representing that value in such a way that a reference to it can be stored in a variable of reference type. These classes also provide a number of methods for converting among primitive values, as well as supporting such standard methods as equals and hashCode. The Void class is a non-instantiable class that holds a reference to a Class object representing the type void. The class Math provides commonly used mathematical functions such as sine, cosine, and square root. The classes String, StringBuffer, and StringBuilder similarly provide commonly used operations on character strings. Classes ClassLoader, Process, ProcessBuilder, Runtime, SecurityManager, and System provide "system operations" that manage the dynamic loading of classes, creation of external processes, host environment inquiries such as the time of day, and enforcement of security policies. Class Throwable encompasses objects that may be thrown by the throw statement. Subclasses of Throwable represent errors and exceptions. Character Encodings The specification of the java.nio.charset.Charset class describes the naming conventions for character encodings as well as the set of standard encodings that must be supported by every implementation of the Java platform. Annotations Deprecated A program element annotated @Deprecated is one that programmers are discouraged from using, typically because it is dangerous, or because a better alternative exists. FunctionalInterface An informative annotation type used to indicate that an interface type declaration is intended to be a functional interface as defined by the Java Language Specification. Override Indicates that a method declaration is intended to override a method declaration in a supertype. SafeVarargs A programmer assertion that the body of the annotated method or constructor does not perform potentially unsafe operations on its varargs parameter. SuppressWarnings Indicates that the named compiler warnings should be suppressed in the annotated element (and in all program elements contained in the annotated element). Interfaces Appendable An object to which char sequences and values can be appended. AutoCloseable A resource that must be closed when it is no longer needed. CharSequence A CharSequence is a readable sequence of char values. Cloneable A class implements the Cloneable interface to indicate to the clone() method that it is legal for that method to make a field-for-field copy of instances of that class. Comparable<T> This interface imposes a total ordering on the objects of each class that implements it. Iterable<T> Implementing this interface allows an object to be the target of the "for-each loop" statement. Readable A Readable is a source of characters. Runnable The Runnable interface should be implemented by any class whose instances are intended to be executed by a thread. Thread.UncaughtExceptionHandler Interface for handlers invoked when a Thread abruptly terminates due to an uncaught exception. Classes Boolean The Boolean class wraps a value of the primitive type boolean in an object. Byte The Byte class wraps a value of primitive type byte in an object. Character The Character class wraps a value of the primitive type char in an object. Character.Subset Instances of this class represent particular subsets of the Unicode character set. Character.UnicodeBlock A family of character subsets representing the character blocks in the Unicode specification. Class<T> Instances of the class Class represent classes and interfaces in a running Java application. ClassLoader A class loader is an object that is responsible for loading classes. Compiler Does nothing on Android. Double The Double class wraps a value of the primitive type double in an object. Enum<E extends Enum<E>> This is the common base class of all Java language enumeration types. Float The Float class wraps a value of primitive type float in an object. InheritableThreadLocal<T> This class extends ThreadLocal to provide inheritance of values from parent thread to child thread: when a child thread is created, the child receives initial values for all inheritable thread-local variables for which the parent has values. Integer The Integer class wraps a value of the primitive type int in an object. Long The Long class wraps a value of the primitive type long in an object. Math The class Math contains methods for performing basic numeric operations such as the elementary exponential, logarithm, square root, and trigonometric functions. Number The abstract class Number is the superclass of classes BigDecimal, BigInteger, Byte, Double, Float, Integer, Long, and Short. Object Class Object is the root of the class hierarchy. Package Package objects contain version information about the implementation and specification of a Java package. Process The start() and Runtime.exec methods create a native process and return an instance of a subclass of Process that can be used to control the process and obtain information about it. ProcessBuilder This class is used to create operating system processes. Runtime Every Java application has a single instance of class Runtime that allows the application to interface with the environment in which the application is running. RuntimePermission Legacy security code; do not use. SecurityManager Legacy security code; do not use. Short The Short class wraps a value of primitive type short in an object. StackTraceElement An element in a stack trace, as returned by getStackTrace(). StrictMath The class StrictMath contains methods for performing basic numeric operations such as the elementary exponential, logarithm, square root, and trigonometric functions. String The String class represents character strings. StringBuffer A thread-safe, mutable sequence of characters. StringBuilder A mutable sequence of characters. System The System class contains several useful class fields and methods. Thread A thread is a thread of execution in a program. ThreadGroup A thread group represents a set of threads. ThreadLocal<T> This class provides thread-local variables. Throwable The Throwable class is the superclass of all errors and exceptions in the Java language. Void The Void class is an uninstantiable placeholder class to hold a reference to the Class object representing the Java keyword void. Enums Character.UnicodeScript A family of character subsets representing the character scripts defined in the Unicode Standard Annex #24: Script Names. Thread.State A thread state. Exceptions ArithmeticException Thrown when an exceptional arithmetic condition has occurred. ArrayIndexOutOfBoundsException Thrown to indicate that an array has been accessed with an illegal index. ArrayStoreException Thrown to indicate that an attempt has been made to store the wrong type of object into an array of objects. ClassCastException Thrown to indicate that the code has attempted to cast an object to a subclass of which it is not an instance. ClassNotFoundException Thrown when an application tries to load in a class through its string name using: The forName method in class Class. CloneNotSupportedException Thrown to indicate that the clone method in class Object has been called to clone an object, but that the object's class does not implement the Cloneable interface. EnumConstantNotPresentException Thrown when an application tries to access an enum constant by name and the enum type contains no constant with the specified name. Exception The class Exception and its subclasses are a form of Throwable that indicates conditions that a reasonable application might want to catch. IllegalAccessException An IllegalAccessException is thrown when an application tries to reflectively create an instance (other than an array), set or get a field, or invoke a method, but the currently executing method does not have access to the definition of the specified class, field, method or constructor. IllegalArgumentException Thrown to indicate that a method has been passed an illegal or inappropriate argument. IllegalMonitorStateException Thrown to indicate that a thread has attempted to wait on an object's monitor or to notify other threads waiting on an object's monitor without owning the specified monitor. IllegalStateException Signals that a method has been invoked at an illegal or inappropriate time. IllegalThreadStateException Thrown to indicate that a thread is not in an appropriate state for the requested operation. IndexOutOfBoundsException Thrown to indicate that an index of some sort (such as to an array, to a string, or to a vector) is out of range. InstantiationException Thrown when an application tries to create an instance of a class using the newInstance method in class Class, but the specified class object cannot be instantiated. InterruptedException Thrown when a thread is waiting, sleeping, or otherwise occupied, and the thread is interrupted, either before or during the activity. NegativeArraySizeException Thrown if an application tries to create an array with negative size. NoSuchFieldException Signals that the class doesn't have a field of a specified name. NoSuchMethodException Thrown when a particular method cannot be found. NullPointerException Thrown when an application attempts to use null in a case where an object is required. NumberFormatException Thrown to indicate that the application has attempted to convert a string to one of the numeric types, but that the string does not have the appropriate format. ReflectiveOperationException Common superclass of exceptions thrown by reflective operations in core reflection. RuntimeException RuntimeException is the superclass of those exceptions that can be thrown during the normal operation of the Java Virtual Machine. SecurityException Thrown by the security manager to indicate a security violation. StringIndexOutOfBoundsException Thrown by String methods to indicate that an index is either negative or greater than the size of the string. TypeNotPresentException Thrown when an application tries to access a type using a string representing the type's name, but no definition for the type with the specified name can be found. UnsupportedOperationException Thrown to indicate that the requested operation is not supported. Errors AbstractMethodError Thrown when an application tries to call an abstract method. AssertionError Thrown to indicate that an assertion has failed. ClassCircularityError Thrown when the Java Virtual Machine detects a circularity in the superclass hierarchy of a class being loaded. ClassFormatError Thrown when the Java Virtual Machine attempts to read a class file and determines that the file is malformed or otherwise cannot be interpreted as a class file. Error An Error is a subclass of Throwable that indicates serious problems that a reasonable application should not try to catch. ExceptionInInitializerError Signals that an unexpected exception has occurred in a static initializer. IllegalAccessError Thrown if an application attempts to access or modify a field, or to call a method that it does not have access to. IncompatibleClassChangeError Thrown when an incompatible class change has occurred to some class definition. InstantiationError Thrown when an application tries to use the Java new construct to instantiate an abstract class or an interface. InternalError Thrown to indicate some unexpected internal error has occurred in the Java Virtual Machine. LinkageError Subclasses of LinkageError indicate that a class has some dependency on another class; however, the latter class has incompatibly changed after the compilation of the former class. NoClassDefFoundError Thrown if the Java Virtual Machine or a ClassLoader instance tries to load in the definition of a class (as part of a normal method call or as part of creating a new instance using the new expression) and no definition of the class could be found. NoSuchFieldError Thrown if an application tries to access or modify a specified field of an object, and that object no longer has that field. NoSuchMethodError Thrown if an application tries to call a specified method of a class (either static or instance), and that class no longer has a definition of that method. OutOfMemoryError Thrown when the Java Virtual Machine cannot allocate an object because it is out of memory, and no more memory could be made available by the garbage collector. StackOverflowError Thrown when a stack overflow occurs because an application recurses too deeply. ThreadDeath An instance of ThreadDeath is thrown in the victim thread when the (deprecated) stop() method is invoked. UnknownError Thrown when an unknown but serious exception has occurred in the Java Virtual Machine. UnsatisfiedLinkError Thrown if the Java Virtual Machine cannot find an appropriate native-language definition of a method declared native. UnsupportedClassVersionError Thrown when the Java Virtual Machine attempts to read a class file and determines that the major and minor version numbers in the file are not supported. VerifyError Thrown when the "verifier" detects that a class file, though well formed, contains some sort of internal inconsistency or security problem. VirtualMachineError Thrown to indicate that the Java Virtual Machine is broken or has run out of resources necessary for it to continue operating. </section>	https://developer.android.com/reference/java/lang/package-summary.html
java.lang.ref	A										<section class="prog__container"> Each reference-object type is implemented by a subclass of the abstract base Reference class. An instance of one of these subclasses encapsulates a single reference to a particular object, called the referent. Every reference object provides methods for getting and clearing the reference. Aside from the clearing operation reference objects are otherwise immutable, so no set operation is provided. A program may further subclass these subclasses, adding whatever fields and methods are required for its purposes, or it may use these subclasses without change. Notification A program may request to be notified of changes in an object's reachability by registering an appropriate reference object with a reference queue at the time the reference object is created. Some time after the garbage collector determines that the reachability of the referent has changed to the value corresponding to the type of the reference, it will add the reference to the associated queue. At this point, the reference is considered to be enqueued. The program may remove references from a queue either by polling or by blocking until a reference becomes available. Reference queues are implemented by the ReferenceQueue class. The relationship between a registered reference object and its queue is one-sided. That is, a queue does not keep track of the references that are registered with it. If a registered reference becomes unreachable itself, then it will never be enqueued. It is the responsibility of the program using reference objects to ensure that the objects remain reachable for as long as the program is interested in their referents. While some programs will choose to dedicate a thread to removing reference objects from one or more queues and processing them, this is by no means necessary. A tactic that often works well is to examine a reference queue in the course of performing some other fairly-frequent action. For example, a hashtable that uses weak references to implement weak keys could poll its reference queue each time the table is accessed. This is how the WeakHashMap class works. Because the ReferenceQueue.poll method simply checks an internal data structure, this check will add little overhead to the hashtable access methods. Automatically-cleared references Soft and weak references are automatically cleared by the collector before being added to the queues with which they are registered, if any. Therefore soft and weak references need not be registered with a queue in order to be useful, while phantom references do. An object that is reachable via phantom references will remain so until all such references are cleared or themselves become unreachable. Reachability Going from strongest to weakest, the different levels of reachability reflect the life cycle of an object. They are operationally defined as follows: An object is strongly reachable if it can be reached by some thread without traversing any reference objects. A newly-created object is strongly reachable by the thread that created it. An object is softly reachable if it is not strongly reachable but can be reached by traversing a soft reference. An object is weakly reachable if it is neither strongly nor softly reachable but can be reached by traversing a weak reference. When the weak references to a weakly-reachable object are cleared, the object becomes eligible for finalization. An object is phantom reachable if it is neither strongly, softly, nor weakly reachable, it has been finalized, and some phantom reference refers to it. Finally, an object is unreachable, and therefore eligible for reclamation, when it is not reachable in any of the above ways. Classes PhantomReference<T> Phantom reference objects, which are enqueued after the collector determines that their referents may otherwise be reclaimed. Reference<T> Abstract base class for reference objects. ReferenceQueue<T> Reference queues, to which registered reference objects are appended by the garbage collector after the appropriate reachability changes are detected. SoftReference<T> Soft reference objects, which are cleared at the discretion of the garbage collector in response to memory demand. WeakReference<T> Weak reference objects, which do not prevent their referents from being made finalizable, finalized, and then reclaimed. </section>	https://developer.android.com/reference/java/lang/ref/package-summary.html
java.lang.reflect	A										<section class="prog__container">AccessibleObject allows suppression of access checks if the necessary ReflectPermission is available. Array provides static methods to dynamically create and access arrays. Classes in this package, along with java.lang.Class accommodate applications such as debuggers, interpreters, object inspectors, class browsers, and services such as Object Serialization and JavaBeans that need access to either the public members of a target object (based on its runtime class) or the members declared by a given class. Interfaces AnnotatedElement Represents an annotated element of the program currently running in this VM. GenericArrayType GenericArrayType represents an array type whose component type is either a parameterized type or a type variable. GenericDeclaration A common interface for all entities that declare type variables. InvocationHandler InvocationHandler is the interface implemented by the invocation handler of a proxy instance. Member Member is an interface that reflects identifying information about a single member (a field or a method) or a constructor. ParameterizedType ParameterizedType represents a parameterized type such as Collection<String>. Type Type is the common superinterface for all types in the Java programming language. TypeVariable<D extends GenericDeclaration> TypeVariable is the common superinterface for type variables of kinds. WildcardType WildcardType represents a wildcard type expression, such as ?, ? extends Number, or ? super Integer. Classes AccessibleObject The AccessibleObject class is the base class for Field, Method and Constructor objects. Array The Array class provides static methods to dynamically create and access Java arrays. Constructor<T> Constructor provides information about, and access to, a single constructor for a class. Field A Field provides information about, and dynamic access to, a single field of a class or an interface. Method A Method provides information about, and access to, a single method on a class or interface. Modifier The Modifier class provides static methods and constants to decode class and member access modifiers. Proxy Proxy provides static methods for creating dynamic proxy classes and instances, and it is also the superclass of all dynamic proxy classes created by those methods. ReflectPermission Legacy security code; do not use. Exceptions InvocationTargetException InvocationTargetException is a checked exception that wraps an exception thrown by an invoked method or constructor. MalformedParameterizedTypeException Thrown when a semantically malformed parameterized type is encountered by a reflective method that needs to instantiate it. UndeclaredThrowableException Thrown by a method invocation on a proxy instance if its invocation handler's invoke method throws a checked exception (a Throwable that is not assignable to RuntimeException or Error) that is not assignable to any of the exception types declared in the throws clause of the method that was invoked on the proxy instance and dispatched to the invocation handler. Errors GenericSignatureFormatError Thrown when a syntactically malformed signature attribute is encountered by a reflective method that needs to interpret the generic signature information for a type, method or constructor. </section>	https://developer.android.com/reference/java/lang/reflect/package-summary.html
java.math.BigDecimal	A										<section class="prog__container"><pre><code>public class BigDecimal</code></pre>An immutable arbitrary-precision signed decimal.</section>	https://developer.android.com/reference/java/math/BigDecimal.html
java.math.MathContext	A										<section class="prog__container"><pre><code>public final class MathContext</code></pre>Immutable objects describing settings such as rounding mode and digit precision for the numerical operations provided by class <code>BigDecimal</code>.</section>	https://developer.android.com/reference/java/math/MathContext.html
java.net	A										<section class="prog__container"> The java.net package can be roughly divided in two sections:</section>	https://developer.android.com/reference/java/net/package-summary.html
java.net.Proxy	A										<section class="prog__container"><pre><code>public class Proxy</code></pre>This class represents a proxy setting, typically a type (http, socks) and a socket address. A <code>Proxy</code> is an immutable object.</section>	https://developer.android.com/reference/java/net/Proxy.html
java.nio	A										<section class="prog__container"> The central abstractions of the NIO APIs are: </section>	https://developer.android.com/reference/java/nio/package-summary.html
java.nio.channels	A										<section class="prog__container"> A channel represents an open connection to an entity such as a hardware device, a file, a network socket, or a program component that is capable of performing one or more distinct I/O operations, for example reading or writing. As specified in the Channel interface, channels are either open or closed, and they are both asynchronously closeable and interruptible. The Channel interface is extended by several other interfaces. The ReadableByteChannel interface specifies a read method that reads bytes from the channel into a buffer; similarly, the WritableByteChannel interface specifies a write method that writes bytes from a buffer to the channel. The ByteChannel interface unifies these two interfaces for the common case of channels that can both read and write bytes. The SeekableByteChannel interface extends the ByteChannel interface with methods to query and modify the channel's current position, and its size. The ScatteringByteChannel and GatheringByteChannel interfaces extend the ReadableByteChannel and WritableByteChannel interfaces, respectively, adding read and write methods that take a sequence of buffers rather than a single buffer. The NetworkChannel interface specifies methods to bind the channel's socket, obtain the address to which the socket is bound, and methods to get and set socket options. The Channels utility class defines static methods that support the interoperation of the stream classes of the java.io package with the channel classes of this package. An appropriate channel can be constructed from an InputStream or an OutputStream, and conversely an InputStream or an OutputStream can be constructed from a channel. A Reader can be constructed that uses a given charset to decode bytes from a given readable byte channel, and conversely a Writer can be constructed that uses a given charset to encode characters into bytes and write them to a given writable byte channel. File channelsDescription FileChannel Reads, writes, maps, and manipulates files FileLock A lock on a (region of a) file MappedByteBuffer A direct byte buffer mapped to a region of a file The FileChannel class supports the usual operations of reading bytes from, and writing bytes to, a channel connected to a file, as well as those of querying and modifying the current file position and truncating the file to a specific size. It defines methods for acquiring locks on the whole file or on a specific region of a file; these methods return instances of the FileLock class. Finally, it defines methods for forcing updates to the file to be written to the storage device that contains it, for efficiently transferring bytes between the file and other channels, and for mapping a region of the file directly into memory. A FileChannel is created by invoking the getChannel method of a FileInputStream, FileOutputStream, or RandomAccessFile to return a file channel connected to the same underlying file as the java.io class. Multiplexed, non-blocking I/ODescription SelectableChannel A channel that can be multiplexed DatagramChannel A channel to a datagram-oriented socket Pipe.SinkChannel The write end of a pipe Pipe.SourceChannel The read end of a pipe ServerSocketChannel A channel to a stream-oriented listening socket SocketChannel A channel for a stream-oriented connecting socket Selector A multiplexor of selectable channels SelectionKey A token representing the registration of a channel with a selector Pipe Two channels that form a unidirectional pipe Multiplexed, non-blocking I/O, which is much more scalable than thread-oriented, blocking I/O, is provided by selectors, selectable channels, and selection keys. A selector is a multiplexor of selectable channels, which in turn are a special type of channel that can be put into non-blocking mode. To perform multiplexed I/O operations, one or more selectable channels are first created, put into non-blocking mode, and registered with a selector. Registering a channel specifies the set of I/O operations that will be tested for readiness by the selector, and returns a selection key that represents the registration. Once some channels have been registered with a selector, a selection operation can be performed in order to discover which channels, if any, have become ready to perform one or more of the operations in which interest was previously declared. If a channel is ready then the key returned when it was registered will be added to the selector's selected-key set. The key set, and the keys within it, can be examined in order to determine the operations for which each channel is ready. From each key one can retrieve the corresponding channel in order to perform whatever I/O operations are required. That a selection key indicates that its channel is ready for some operation is a hint, but not a guarantee, that such an operation can be performed by a thread without causing the thread to block. It is imperative that code that performs multiplexed I/O be written so as to ignore these hints when they prove to be incorrect. This package defines selectable-channel classes corresponding to the DatagramSocket, ServerSocket, and Socket classes defined in the java.net package. Minor changes to these classes have been made in order to support sockets that are associated with channels. This package also defines a simple class that implements unidirectional pipes. In all cases, a new selectable channel is created by invoking the static open method of the corresponding class. If a channel needs an associated socket then a socket will be created as a side effect of this operation. The implementation of selectors, selectable channels, and selection keys can be replaced by "plugging in" an alternative definition or instance of the SelectorProvider class defined in the java.nio.channels.spi package. It is not expected that many developers will actually make use of this facility; it is provided primarily so that sophisticated users can take advantage of operating-system-specific I/O-multiplexing mechanisms when very high performance is required. Much of the bookkeeping and synchronization required to implement the multiplexed-I/O abstractions is performed by the AbstractInterruptibleChannel, AbstractSelectableChannel, AbstractSelectionKey, and AbstractSelector classes in the java.nio.channels.spi package. When defining a custom selector provider, only the AbstractSelector and AbstractSelectionKey classes should be subclassed directly; custom channel classes should extend the appropriate SelectableChannel subclasses defined in this package. Unless otherwise noted, passing a null argument to a constructor or method in any class or interface in this package will cause a NullPointerException to be thrown. Interfaces ByteChannel A channel that can read and write bytes. Channel A nexus for I/O operations. GatheringByteChannel A channel that can write bytes from a sequence of buffers. InterruptibleChannel A channel that can be asynchronously closed and interrupted. NetworkChannel A channel to a network socket. ReadableByteChannel A channel that can read bytes. ScatteringByteChannel A channel that can read bytes into a sequence of buffers. SeekableByteChannel A byte channel that maintains a current position and allows the position to be changed. WritableByteChannel A channel that can write bytes. Classes Channels Utility methods for channels and streams. DatagramChannel A selectable channel for datagram-oriented sockets. FileChannel A channel for reading, writing, mapping, and manipulating a file. FileChannel.MapMode A typesafe enumeration for file-mapping modes. FileLock A token representing a lock on a region of a file. Pipe A pair of channels that implements a unidirectional pipe. Pipe.SinkChannel A channel representing the writable end of a Pipe. Pipe.SourceChannel A channel representing the readable end of a Pipe. SelectableChannel A channel that can be multiplexed via a Selector. SelectionKey A token representing the registration of a SelectableChannel with a Selector. Selector A multiplexor of SelectableChannel objects. ServerSocketChannel A selectable channel for stream-oriented listening sockets. SocketChannel A selectable channel for stream-oriented connecting sockets. Exceptions AlreadyBoundException Unchecked exception thrown when an attempt is made to bind the socket a network oriented channel that is already bound. AlreadyConnectedException Unchecked exception thrown when an attempt is made to connect a SocketChannel that is already connected. AsynchronousCloseException Checked exception received by a thread when another thread closes the channel or the part of the channel upon which it is blocked in an I/O operation. CancelledKeyException Unchecked exception thrown when an attempt is made to use a selection key that is no longer valid. ClosedByInterruptException Checked exception received by a thread when another thread interrupts it while it is blocked in an I/O operation upon a channel. ClosedChannelException Checked exception thrown when an attempt is made to invoke or complete an I/O operation upon channel that is closed, or at least closed to that operation. ClosedSelectorException Unchecked exception thrown when an attempt is made to invoke an I/O operation upon a closed selector. ConnectionPendingException Unchecked exception thrown when an attempt is made to connect a SocketChannel for which a non-blocking connection operation is already in progress. FileLockInterruptionException Checked exception received by a thread when another thread interrupts it while it is waiting to acquire a file lock. IllegalBlockingModeException Unchecked exception thrown when a blocking-mode-specific operation is invoked upon a channel in the incorrect blocking mode. IllegalSelectorException Unchecked exception thrown when an attempt is made to register a channel with a selector that was not created by the provider that created the channel. NoConnectionPendingException Unchecked exception thrown when the finishConnect method of a SocketChannel is invoked without first successfully invoking its connect method. NonReadableChannelException Unchecked exception thrown when an attempt is made to read from a channel that was not originally opened for reading. NonWritableChannelException Unchecked exception thrown when an attempt is made to write to a channel that was not originally opened for writing. NotYetBoundException Unchecked exception thrown when an attempt is made to invoke an I/O operation upon a server socket channel that is not yet bound. NotYetConnectedException Unchecked exception thrown when an attempt is made to invoke an I/O operation upon a socket channel that is not yet connected. OverlappingFileLockException Unchecked exception thrown when an attempt is made to acquire a lock on a region of a file that overlaps a region already locked by the same Java virtual machine, or when another thread is already waiting to lock an overlapping region of the same file. UnresolvedAddressException Unchecked exception thrown when an attempt is made to invoke a network operation upon an unresolved socket address. UnsupportedAddressTypeException Unchecked exception thrown when an attempt is made to bind or connect to a socket address of a type that is not supported. </section>	https://developer.android.com/reference/java/nio/channels/package-summary.html
java.nio.channels.spi	A										<section class="prog__container"> Only developers who are defining new selector providers or asynchronous channel providers should need to make direct use of this package. </section>	https://developer.android.com/reference/java/nio/channels/spi/package-summary.html
java.nio.charset	A										<section class="prog__container"> A charset is named mapping between sequences of sixteen-bit Unicode characters and sequences of bytes, in the sense defined in RFC 2278. A decoder is an engine which transforms bytes in a specific charset into characters, and an encoder is an engine which transforms characters into bytes. Encoders and decoders operate on byte and character buffers. They are collectively referred to as coders. The Charset class defines methods for creating coders for a given charset and for retrieving the various names associated with a charset. It also defines static methods for testing whether a particular charset is supported, for locating charset instances by name, and for constructing a map that contains every charset for which support is available in the current Java virtual machine. Most users will not use these classes directly; instead they will use the existing charset-related constructors and methods in the String class, together with the existing InputStreamReader and OutputStreamWriter classes, all of whose implementations have been reworked to make use of the charset facilities defined in this package. A small number of changes have been made to the InputStreamReader and OutputStreamWriter classes in order to allow explicit charset objects to be specified in the construction of instances of those classes. Support for new charsets can be made available via the interface defined in the CharsetProvider class in the java.nio.charset.spi package. Unless otherwise noted, passing a null argument to a constructor or method in any class or interface in this package will cause a NullPointerException to be thrown. Classes Charset A named mapping between sequences of sixteen-bit Unicode code units and sequences of bytes. CharsetDecoder An engine that can transform a sequence of bytes in a specific charset into a sequence of sixteen-bit Unicode characters. CharsetEncoder An engine that can transform a sequence of sixteen-bit Unicode characters into a sequence of bytes in a specific charset. CoderResult A description of the result state of a coder. CodingErrorAction A typesafe enumeration for coding-error actions. StandardCharsets Constant definitions for the standard Charsets. Exceptions CharacterCodingException Checked exception thrown when a character encoding or decoding error occurs. IllegalCharsetNameException Unchecked exception thrown when a string that is not a legal charset name is used as such. MalformedInputException Checked exception thrown when an input byte sequence is not legal for given charset, or an input character sequence is not a legal sixteen-bit Unicode sequence. UnmappableCharacterException Checked exception thrown when an input character (or byte) sequence is valid but cannot be mapped to an output byte (or character) sequence. UnsupportedCharsetException Unchecked exception thrown when no support is available for a requested charset. Errors CoderMalfunctionError Error thrown when the decodeLoop method of a CharsetDecoder, or the encodeLoop method of a CharsetEncoder, throws an unexpected exception. </section>	https://developer.android.com/reference/java/nio/charset/package-summary.html
java.nio.charset.spi	A										<section class="prog__container"> Only developers who are defining new charsets should need to make direct use of this package. </section>	https://developer.android.com/reference/java/nio/charset/spi/package-summary.html
java.security.cert.Certificate	A										<section class="prog__container"><pre><code>public abstract class Certificate</code></pre></section>	https://developer.android.com/reference/java/security/cert/Certificate.html
java.security.cert.CertificateEncodingException	A										<section class="prog__container"><pre><code>public class CertificateEncodingException</code></pre>Certificate Encoding Exception. This is thrown whenever an error occurs while attempting to encode a certificate.</section>	https://developer.android.com/reference/java/security/cert/CertificateEncodingException.html
java.security.cert.CertificateException	A										<section class="prog__container"><pre><code>public class CertificateException</code></pre>This exception indicates one of a variety of certificate problems.</section>	https://developer.android.com/reference/java/security/cert/CertificateException.html
java.security.cert.CertificateExpiredException	A										<section class="prog__container"><pre><code>public class CertificateExpiredException</code></pre>Certificate Expired Exception. This is thrown whenever the current <code>Date</code> or the specified <code>Date</code> is after the <code>notAfter</code> date/time specified in the validity period of the certificate.</section>	https://developer.android.com/reference/java/security/cert/CertificateExpiredException.html
java.security.cert.CertificateNotYetValidException	A										<section class="prog__container"><pre><code>public class CertificateNotYetValidException</code></pre>Certificate is not yet valid exception. This is thrown whenever the current <code>Date</code> or the specified <code>Date</code> is before the <code>notBefore</code> date/time in the Certificate validity period.</section>	https://developer.android.com/reference/java/security/cert/CertificateNotYetValidException.html
java.security.cert.CertificateParsingException	A										<section class="prog__container"><pre><code>public class CertificateParsingException</code></pre>Certificate Parsing Exception. This is thrown whenever an invalid DER-encoded certificate is parsed or unsupported DER features are found in the Certificate.</section>	https://developer.android.com/reference/java/security/cert/CertificateParsingException.html
java.security.cert.X509Certificate	A										<section class="prog__container"><pre><code>public abstract class X509Certificate</code></pre></section>	https://developer.android.com/reference/java/security/cert/X509Certificate.html
java.security.interfaces	A										<section class="prog__container"> Note that these interfaces are intended only for key implementations whose key material is accessible and available. These interfaces are not intended for key implementations whose key material resides in inaccessible, protected storage (such as in a hardware device). For more developer information on how to use these interfaces, including information on how to design Key classes for hardware devices, please refer to these cryptographic provider developer guides: How to Implement a Provider for the JavaTM Cryptography Architecture Package Specification PKCS #1: RSA Encryption Standard, Version 1.5, November 1993 Federal Information Processing Standards Publication (FIPS PUB) 186: Digital Signature Standard (DSS) Related Documentation For further documentation, please see: JavaTM Cryptography Architecture API Specification and Reference Interfaces DSAKey The interface to a DSA public or private key. DSAKeyPairGenerator An interface to an object capable of generating DSA key pairs. DSAParams Interface to a DSA-specific set of key parameters, which defines a DSA key family. DSAPrivateKey The standard interface to a DSA private key. DSAPublicKey The interface to a DSA public key. ECKey The interface to an elliptic curve (EC) key. ECPrivateKey The interface to an elliptic curve (EC) private key. ECPublicKey The interface to an elliptic curve (EC) public key. RSAKey The interface to an RSA public or private key. RSAMultiPrimePrivateCrtKey The interface to an RSA multi-prime private key, as defined in the PKCS#1 v2.1, using the Chinese Remainder Theorem (CRT) information values. RSAPrivateCrtKey The interface to an RSA private key, as defined in the PKCS#1 standard, using the Chinese Remainder Theorem (CRT) information values. RSAPrivateKey The interface to an RSA private key. RSAPublicKey The interface to an RSA public key. </section>	https://developer.android.com/reference/java/security/interfaces/package-summary.html
java.security.spec	A										<section class="prog__container">A key specification is a transparent representation of the key material that constitutes a key. A key may be specified in an algorithm-specific way, or in an algorithm-independent encoding format (such as ASN.1). This package contains key specifications for DSA public and private keys, RSA public and private keys, PKCS #8 private keys in DER-encoded format, and X.509 public and private keys in DER-encoded format. An algorithm parameter specification is a transparent representation of the sets of parameters used with an algorithm. This package contains an algorithm parameter specification for parameters used with the DSA algorithm. Package Specification PKCS #1: RSA Encryption Standard, Version 1.5, November 1993 PKCS #8: Private-Key Information Syntax Standard, Version 1.2, November 1993 Federal Information Processing Standards Publication (FIPS PUB) 186: Digital Signature Standard (DSS) Related Documentation For documentation that includes information about algorithm parameter and key specifications, please see: JavaTM Cryptography Architecture API Specification and Reference How to Implement a Provider for the JavaTM Cryptography Architecture Interfaces AlgorithmParameterSpec A (transparent) specification of cryptographic parameters. ECField This interface represents an elliptic curve (EC) finite field. KeySpec A (transparent) specification of the key material that constitutes a cryptographic key. Classes DSAParameterSpec This class specifies the set of parameters used with the DSA algorithm. DSAPrivateKeySpec This class specifies a DSA private key with its associated parameters. DSAPublicKeySpec This class specifies a DSA public key with its associated parameters. ECFieldF2m This immutable class defines an elliptic curve (EC) characteristic 2 finite field. ECFieldFp This immutable class defines an elliptic curve (EC) prime finite field. ECGenParameterSpec This immutable class specifies the set of parameters used for generating elliptic curve (EC) domain parameters. ECParameterSpec This immutable class specifies the set of domain parameters used with elliptic curve cryptography (ECC). ECPoint This immutable class represents a point on an elliptic curve (EC) in affine coordinates. ECPrivateKeySpec This immutable class specifies an elliptic curve private key with its associated parameters. ECPublicKeySpec This immutable class specifies an elliptic curve public key with its associated parameters. EllipticCurve This immutable class holds the necessary values needed to represent an elliptic curve. EncodedKeySpec This class represents a public or private key in encoded format. MGF1ParameterSpec This class specifies the set of parameters used with mask generation function MGF1 in OAEP Padding and RSA-PSS signature scheme, as defined in the PKCS #1 v2.1 standard. PKCS8EncodedKeySpec This class represents the ASN.1 encoding of a private key, encoded according to the ASN.1 type PrivateKeyInfo. PSSParameterSpec This class specifies a parameter spec for RSA-PSS signature scheme, as defined in the PKCS#1 v2.1 standard. RSAKeyGenParameterSpec This class specifies the set of parameters used to generate an RSA key pair. RSAMultiPrimePrivateCrtKeySpec This class specifies an RSA multi-prime private key, as defined in the PKCS#1 v2.1, using the Chinese Remainder Theorem (CRT) information values for efficiency. RSAOtherPrimeInfo This class represents the triplet (prime, exponent, and coefficient) inside RSA's OtherPrimeInfo structure, as defined in the PKCS#1 v2.1. RSAPrivateCrtKeySpec This class specifies an RSA private key, as defined in the PKCS#1 standard, using the Chinese Remainder Theorem (CRT) information values for efficiency. RSAPrivateKeySpec This class specifies an RSA private key. RSAPublicKeySpec This class specifies an RSA public key. X509EncodedKeySpec This class represents the ASN.1 encoding of a public key, encoded according to the ASN.1 type SubjectPublicKeyInfo. Exceptions InvalidKeySpecException This is the exception for invalid key specifications. InvalidParameterSpecException This is the exception for invalid parameter specifications. </section>	https://developer.android.com/reference/java/security/spec/package-summary.html
java.sql	A										<section class="prog__container"> What the JDBCTM 4.1 API Includes The JDBCTM 4.1 API includes both the java.sql package, referred to as the JDBC core API, and the javax.sql package, referred to as the JDBC Optional Package API. This complete JDBC API is included in the JavaTM Standard Edition (Java SETM), version 7. The javax.sql package extends the functionality of the JDBC API from a client-side API to a server-side API, and it is an essential part of the JavaTM Enterprise Edition (Java EETM) technology. Versions The JDBC 4.1 API incorporates all of the previous JDBC API versions: The JDBC 4.0 API The JDBC 3.0 API The JDBC 2.1 core API The JDBC 2.0 Optional Package API (Note that the JDBC 2.1 core API and the JDBC 2.0 Optional Package API together are referred to as the JDBC 2.0 API.) The JDBC 1.2 API The JDBC 1.0 API Classes, interfaces, methods, fields, constructors, and exceptions have the following "since" tags that indicate when they were introduced into the Java platform. When these "since" tags are used in JavadocTM comments for the JDBC API, they indicate the following: Since 1.7 -- new in the JDBC 4.1 API and part of the Java SE platform, version 7 Since 1.6 -- new in the JDBC 4.0 API and part of the Java SE platform, version 6 Since 1.4 -- new in the JDBC 3.0 API and part of the J2SE platform, version 1.4 Since 1.2 -- new in the JDBC 2.0 API and part of the J2SE platform, version 1.2 Since 1.1 or no "since" tag -- in the original JDBC 1.0 API and part of the JDKTM, version 1.1 NOTE: Many of the new features are optional; consequently, there is some variation in drivers and the features they support. Always check your driver's documentation to see whether it supports a feature before you try to use it. NOTE: The class SQLPermission was added in the JavaTM 2 SDK, Standard Edition, version 1.3 release. This class is used to prevent unauthorized access to the logging stream associated with the DriverManager, which may contain information such as table names, column data, and so on. What the java.sql Package Contains The java.sql package contains API for the following: Making a connection with a database via the DriverManager facility DriverManager class -- makes a connection with a driver SQLPermission class -- provides permission when code running within a Security Manager, such as an applet, attempts to set up a logging stream through the DriverManager Driver interface -- provides the API for registering and connecting drivers based on JDBC technology ("JDBC drivers"); generally used only by the DriverManager class DriverPropertyInfo class -- provides properties for a JDBC driver; not used by the general user Sending SQL statements to a database Statement -- used to send basic SQL statements PreparedStatement -- used to send prepared statements or basic SQL statements (derived from Statement) CallableStatement -- used to call database stored procedures (derived from PreparedStatement) Connection interface -- provides methods for creating statements and managing connections and their properties Savepoint -- provides savepoints in a transaction Retrieving and updating the results of a query ResultSet interface Standard mappings for SQL types to classes and interfaces in the Java programming language Array interface -- mapping for SQL ARRAY Blob interface -- mapping for SQL BLOB Clob interface -- mapping for SQL CLOB Date class -- mapping for SQL DATE NClob interface -- mapping for SQL NCLOB Ref interface -- mapping for SQL REF RowId interface -- mapping for SQL ROWID Struct interface -- mapping for SQL STRUCT SQLXML interface -- mapping for SQL XML Time class -- mapping for SQL TIME Timestamp class -- mapping for SQL TIMESTAMP Types class -- provides constants for SQL types Custom mapping an SQL user-defined type (UDT) to a class in the Java programming language SQLData interface -- specifies the mapping of a UDT to an instance of this class SQLInput interface -- provides methods for reading UDT attributes from a stream SQLOutput interface -- provides methods for writing UDT attributes back to a stream Metadata DatabaseMetaData interface -- provides information about the database ResultSetMetaData interface -- provides information about the columns of a ResultSet object ParameterMetaData interface -- provides information about the parameters to PreparedStatement commands Exceptions SQLException -- thrown by most methods when there is a problem accessing data and by some methods for other reasons SQLWarning -- thrown to indicate a warning DataTruncation -- thrown to indicate that data may have been truncated BatchUpdateException -- thrown to indicate that not all commands in a batch update executed successfully java.sql and javax.sql Features Introduced in the JDBC 4.1 API Allow Connection, ResultSet and Statement objects to be used with the try-with-resources statement Supported added to CallableStatement and ResultSet to specify the Java type to convert to via the getObject method DatabaseMetaData methods to return PseudoColumns and if a generated key is always returned Added support to Connection to specify a database schema, abort and timeout a physical connection. Added support to close a Statement object when its dependent objects have been closed Support for obtaining the parent logger for a Driver, DataSource, ConnectionPoolDataSource and XADataSource java.sql and javax.sql Features Introduced in the JDBC 4.0 API auto java.sql.Driver discovery -- no longer need to load a java.sql.Driver class via Class.forName National Character Set support added Support added for the SQL:2003 XML data type SQLException enhancements -- Added support for cause chaining; New SQLExceptions added for common SQLState class value codes Enhanced Blob/Clob functionality -- Support provided to create and free a Blob/Clob instance as well as additional methods added to improve accessiblity Support added for accessing a SQL ROWID Support added to allow a JDBC application to access an instance of a JDBC resource that has been wrapped by a vendor, usually in an application server or connection pooling environment. Availability to be notified when a PreparedStatement that is associated with a PooledConnection has been closed or the driver determines is invalid java.sql and javax.sql Features Introduced in the JDBC 3.0 API Pooled statements -- reuse of statements associated with a pooled connection Savepoints -- allow a transaction to be rolled back to a designated savepoint Properties defined for ConnectionPoolDataSource -- specify how connections are to be pooled Metadata for parameters of a PreparedStatement object Ability to retrieve values from automatically generated columns Ability to have multiple ResultSet objects returned from CallableStatement objects open at the same time Ability to identify parameters to CallableStatement objects by name as well as by index ResultSet holdability -- ability to specify whether cursors should be held open or closed at the end of a transaction Ability to retrieve and update the SQL structured type instance that a Ref object references Ability to programmatically update BLOB, CLOB, ARRAY, and REF values. Addition of the java.sql.Types.DATALINK data type -- allows JDBC drivers access to objects stored outside a data source Addition of metadata for retrieving SQL type hierarchies java.sql Features Introduced in the JDBC 2.1 Core API Scrollable result sets--using new methods in the ResultSet interface that allow the cursor to be moved to a particular row or to a position relative to its current position Batch updates Programmatic updates--using ResultSet updater methods New data types--interfaces mapping the SQL3 data types Custom mapping of user-defined types (UDTs) Miscellaneous features, including performance hints, the use of character streams, full precision for java.math.BigDecimal values, additional security, and support for time zones in date, time, and timestamp values. javax.sql Features Introduced in the JDBC 2.0 Optional Package API The DataSource interface as a means of making a connection. The Java Naming and Directory InterfaceTM (JNDI) is used for registering a DataSource object with a naming service and also for retrieving it. Pooled connections -- allowing connections to be used and reused Distributed transactions -- allowing a transaction to span diverse DBMS servers RowSet technology -- providing a convenient means of handling and passing data Custom Mapping of UDTs A user-defined type (UDT) defined in SQL can be mapped to a class in the Java programming language. An SQL structured type or an SQL DISTINCT type are the UDTs that may be custom mapped. The following three steps set up a custom mapping: Defining the SQL structured type or DISTINCT type in SQL Defining the class in the Java programming language to which the SQL UDT will be mapped. This class must implement the SQLData interface. Making an entry in a Connection object's type map that contains two things: the fully-qualified SQL name of the UDT the Class object for the class that implements the SQLData interface When these are in place for a UDT, calling the methods ResultSet.getObject or CallableStatement.getObject on that UDT will automatically retrieve the custom mapping for it. Also, the PreparedStatement.setObject method will automatically map the object back to its SQL type to store it in the data source. Package Specification Specification of the JDBC 4.0 API Related Documentation Getting Started--overviews of the major interfaces Chapters on the JDBC API--from the online version of The Java Tutorial Continued JDBCTMAPI Tutorial and Reference, Third Edition-- a complete reference and tutorial for the JDBC 3.0 API Interfaces Array The mapping in the Java programming language for the SQL type ARRAY. Blob The representation (mapping) in the JavaTM programming language of an SQL BLOB value. CallableStatement The interface used to execute SQL stored procedures. Clob The mapping in the JavaTM programming language for the SQL CLOB type. Connection A connection (session) with a specific database. DatabaseMetaData Comprehensive information about the database as a whole. Driver The interface that every driver class must implement. NClob The mapping in the JavaTM programming language for the SQL NCLOB type. ParameterMetaData An object that can be used to get information about the types and properties for each parameter marker in a PreparedStatement object. PreparedStatement An object that represents a precompiled SQL statement. Ref The mapping in the Java programming language of an SQL REF value, which is a reference to an SQL structured type value in the database. ResultSet A table of data representing a database result set, which is usually generated by executing a statement that queries the database. ResultSetMetaData An object that can be used to get information about the types and properties of the columns in a ResultSet object. RowId The representation (mapping) in the Java programming language of an SQL ROWID value. Savepoint The representation of a savepoint, which is a point within the current transaction that can be referenced from the Connection.rollback method. SQLData The interface used for the custom mapping of an SQL user-defined type (UDT) to a class in the Java programming language. SQLInput An input stream that contains a stream of values representing an instance of an SQL structured type or an SQL distinct type. SQLOutput The output stream for writing the attributes of a user-defined type back to the database. SQLXML The mapping in the JavaTM programming language for the SQL XML type. Statement The object used for executing a static SQL statement and returning the results it produces. Struct The standard mapping in the Java programming language for an SQL structured type. Wrapper Interface for JDBC classes which provide the ability to retrieve the delegate instance when the instance in question is in fact a proxy class. Classes Date A thin wrapper around a millisecond value that allows JDBC to identify this as an SQL DATE value. DriverManager The basic service for managing a set of JDBC drivers. DriverPropertyInfo Driver properties for making a connection. SQLPermission Legacy security code; do not use. Time A thin wrapper around the java.util.Date class that allows the JDBC API to identify this as an SQL TIME value. Timestamp A thin wrapper around java.util.Date that allows the JDBC API to identify this as an SQL TIMESTAMP value. Types The class that defines the constants that are used to identify generic SQL types, called JDBC types. Enums ClientInfoStatus Enumeration for status of the reason that a property could not be set via a call to Connection.setClientInfo RowIdLifetime Enumeration for RowId life-time values. Exceptions BatchUpdateException The subclass of SQLException thrown when an error occurs during a batch update operation. DataTruncation An exception thrown as a DataTruncation exception (on writes) or reported as a DataTruncation warning (on reads) when a data values is unexpectedly truncated for reasons other than its having execeeded MaxFieldSize. SQLClientInfoException The subclass of SQLException is thrown when one or more client info properties could not be set on a Connection. SQLDataException The subclass of SQLException thrown when the SQLState class value is '22', or under vendor-specified conditions. SQLException An exception that provides information on a database access error or other errors. SQLFeatureNotSupportedException The subclass of SQLException thrown when the SQLState class value is '0A' ( the value is 'zero' A). SQLIntegrityConstraintViolationException The subclass of SQLException thrown when the SQLState class value is '23', or under vendor-specified conditions. SQLInvalidAuthorizationSpecException The subclass of SQLException thrown when the SQLState class value is '28', or under vendor-specified conditions. SQLNonTransientConnectionException The subclass of SQLException thrown for the SQLState class value '08', or under vendor-specified conditions. SQLNonTransientException The subclass of SQLException thrown when an instance where a retry of the same operation would fail unless the cause of the SQLException is corrected. SQLRecoverableException The subclass of SQLException thrown in situations where a previously failed operation might be able to succeed if the application performs some recovery steps and retries the entire transaction or in the case of a distributed transaction, the transaction branch. SQLSyntaxErrorException The subclass of SQLException thrown when the SQLState class value is '42', or under vendor-specified conditions. SQLTimeoutException The subclass of SQLException thrown when the timeout specified by Statement has expired. SQLTransactionRollbackException The subclass of SQLException thrown when the SQLState class value is '40', or under vendor-specified conditions. SQLTransientConnectionException The subclass of SQLException for the SQLState class value '08', or under vendor-specified conditions. SQLTransientException The subclass of SQLException is thrown in situations where a previoulsy failed operation might be able to succeed when the operation is retried without any intervention by application-level functionality. SQLWarning An exception that provides information on database access warnings. </section>	https://developer.android.com/reference/java/sql/package-summary.html
java.text	A										<section class="prog__container"> These classes are capable of formatting dates, numbers, and messages, parsing; searching and sorting strings; and iterating over characters, words, sentences, and line breaks. This package contains three main groups of classes and interfaces: Classes for iteration over text Classes for formatting and parsing Classes for string collation Interfaces AttributedCharacterIterator An AttributedCharacterIterator allows iteration through both text and related attribute information. CharacterIterator This interface defines a protocol for bidirectional iteration over text. Classes Annotation An Annotation object is used as a wrapper for a text attribute value if the attribute has annotation characteristics. AttributedCharacterIterator.Attribute Defines attribute keys that are used to identify text attributes. AttributedString An AttributedString holds text and related attribute information. Bidi This class implements the Unicode Bidirectional Algorithm. BreakIterator The BreakIterator class implements methods for finding the location of boundaries in text. ChoiceFormat A ChoiceFormat allows you to attach a format to a range of numbers. CollationElementIterator The CollationElementIterator class is used as an iterator to walk through each character of an international string. CollationKey A CollationKey represents a String under the rules of a specific Collator object. Collator The Collator class performs locale-sensitive String comparison. DateFormat DateFormat is an abstract class for date/time formatting subclasses which formats and parses dates or time in a language-independent manner. DateFormat.Field Defines constants that are used as attribute keys in the AttributedCharacterIterator returned from DateFormat.formatToCharacterIterator and as field identifiers in FieldPosition. DateFormatSymbols DateFormatSymbols is a public class for encapsulating localizable date-time formatting data, such as the names of the months, the names of the days of the week, and the time zone data. DecimalFormat DecimalFormat is a concrete subclass of NumberFormat that formats decimal numbers. DecimalFormatSymbols This class represents the set of symbols (such as the decimal separator, the grouping separator, and so on) needed by DecimalFormat to format numbers. FieldPosition FieldPosition is a simple class used by Format and its subclasses to identify fields in formatted output. Format Format is an abstract base class for formatting locale-sensitive information such as dates, messages, and numbers. Format.Field Defines constants that are used as attribute keys in the AttributedCharacterIterator returned from Format.formatToCharacterIterator and as field identifiers in FieldPosition. MessageFormat MessageFormat provides a means to produce concatenated messages in a language-neutral way. MessageFormat.Field Defines constants that are used as attribute keys in the AttributedCharacterIterator returned from MessageFormat.formatToCharacterIterator. Normalizer This class provides the method normalize which transforms Unicode text into an equivalent composed or decomposed form, allowing for easier sorting and searching of text. NumberFormat NumberFormat is the abstract base class for all number formats. NumberFormat.Field Defines constants that are used as attribute keys in the AttributedCharacterIterator returned from NumberFormat.formatToCharacterIterator and as field identifiers in FieldPosition. ParsePosition ParsePosition is a simple class used by Format and its subclasses to keep track of the current position during parsing. RuleBasedCollator The RuleBasedCollator class is a concrete subclass of Collator that provides a simple, data-driven, table collator. SimpleDateFormat SimpleDateFormat is a concrete class for formatting and parsing dates in a locale-sensitive manner. StringCharacterIterator StringCharacterIterator implements the CharacterIterator protocol for a String. Enums Normalizer.Form This enum provides constants of the four Unicode normalization forms that are described in Unicode Standard Annex #15 — Unicode Normalization Forms and two methods to access them. Exceptions ParseException Signals that an error has been reached unexpectedly while parsing. </section>	https://developer.android.com/reference/java/text/package-summary.html
java.text.Annotation	A										<section class="prog__container"><pre><code>public class Annotation</code></pre>An Annotation object is used as a wrapper for a text attribute value if the attribute has annotation characteristics. These characteristics are: <ul> <li>The text range that the attribute is applied to is critical to the semantics of the range. That means, the attribute cannot be applied to subranges of the text range that it applies to, and, if two adjacent text ranges have the same value for this attribute, the attribute still cannot be applied to the combined range as a whole with this value. <li>The attribute or its value usually do no longer apply if the underlying text is changed. </li></li></ul> An example is grammatical information attached to a sentence: For the previous sentence, you can say that "an example" is the subject, but you cannot say the same about "an", "example", or "exam". When the text is changed, the grammatical information typically becomes invalid. Another example is Japanese reading information (yomi).</section>	https://developer.android.com/reference/java/text/Annotation.html
java.text.BreakIterator	A										<section class="prog__container"><pre><code>public abstract class BreakIterator</code></pre>The <code>BreakIterator</code> class implements methods for finding the location of boundaries in text. Instances of <code>BreakIterator</code> maintain a current position and scan over text returning the index of characters where boundaries occur. Internally, <code>BreakIterator</code> scans text using a <code>CharacterIterator</code>, and is thus able to scan text held by any object implementing that protocol. A <code>StringCharacterIterator</code> is used to scan <code>String</code> objects passed to <code>setText</code>.</section>	https://developer.android.com/reference/java/text/BreakIterator.html
java.text.CollationElementIterator	A										<section class="prog__container"><pre><code>public final class CollationElementIterator</code></pre>The <code>CollationElementIterator</code> class is used as an iterator to walk through each character of an international string. Use the iterator to return the ordering priority of the positioned character. The ordering priority of a character, which we refer to as a key, defines how a character is collated in the given collation object.</section>	https://developer.android.com/reference/java/text/CollationElementIterator.html
java.text.CollationKey	A										<section class="prog__container"><pre><code>public abstract class CollationKey</code></pre>A <code>CollationKey</code> represents a <code>String</code> under the rules of a specific <code>Collator</code> object. Comparing two <code>CollationKey</code>s returns the relative order of the <code>String</code>s they represent. Using <code>CollationKey</code>s to compare <code>String</code>s is generally faster than using <code>Collator.compare</code>. Thus, when the <code>String</code>s must be compared multiple times, for example when sorting a list of <code>String</code>s. It's more efficient to use <code>CollationKey</code>s.</section>	https://developer.android.com/reference/java/text/CollationKey.html
java.text.Collator	A										<section class="prog__container"><pre><code>public abstract class Collator</code></pre>The <code>Collator</code> class performs locale-sensitive <code>String</code> comparison. You use this class to build searching and sorting routines for natural language text.</section>	https://developer.android.com/reference/java/text/Collator.html
java.text.DateFormat	A										<section class="prog__container"><pre><code>public abstract class DateFormat</code></pre><code>DateFormat</code> is an abstract class for date/time formatting subclasses which formats and parses dates or time in a language-independent manner. The date/time formatting subclass, such as <code>SimpleDateFormat</code>, allows for formatting (i.e., date -&gt; text), parsing (text -&gt; date), and normalization. The date is represented as a <code>Date</code> object or as the milliseconds since January 1, 1970, 00:00:00 GMT.</section>	https://developer.android.com/reference/java/text/DateFormat.html
java.text.DateFormat.Field	A										<section class="prog__container"><pre><code>public static class DateFormat.Field</code></pre>Defines constants that are used as attribute keys in the <code>AttributedCharacterIterator</code> returned from <code>DateFormat.formatToCharacterIterator</code> and as field identifiers in <code>FieldPosition</code>.</section>	https://developer.android.com/reference/java/text/DateFormat.Field.html
java.text.DateFormatSymbols	A										<section class="prog__container"><pre><code>public class DateFormatSymbols</code></pre><code>DateFormatSymbols</code> is a public class for encapsulating localizable date-time formatting data, such as the names of the months, the names of the days of the week, and the time zone data. <code>DateFormat</code> and <code>SimpleDateFormat</code> both use <code>DateFormatSymbols</code> to encapsulate this information.</section>	https://developer.android.com/reference/java/text/DateFormatSymbols.html
java.text.DecimalFormat	A										<section class="prog__container"><pre><code>public class DecimalFormat</code></pre><code>DecimalFormat</code> is a concrete subclass of <code>NumberFormat</code> that formats decimal numbers. It has a variety of features designed to make it possible to parse and format numbers in any locale, including support for Western, Arabic, and Indic digits. It also supports different kinds of numbers, including integers (123), fixed-point numbers (123.4), scientific notation (1.23E4), percentages (12%), and currency amounts ($123). All of these can be localized.</section>	https://developer.android.com/reference/java/text/DecimalFormat.html
java.text.DecimalFormatSymbols	A										<section class="prog__container"><pre><code>public class DecimalFormatSymbols</code></pre>This class represents the set of symbols (such as the decimal separator, the grouping separator, and so on) needed by <code>DecimalFormat</code> to format numbers. <code>DecimalFormat</code> creates for itself an instance of <code>DecimalFormatSymbols</code> from its locale data. If you need to change any of these symbols, you can get the <code>DecimalFormatSymbols</code> object from your <code>DecimalFormat</code> and modify it.</section>	https://developer.android.com/reference/java/text/DecimalFormatSymbols.html
java.text.MessageFormat	A										<section class="prog__container"><pre><code>public class MessageFormat</code></pre><code>MessageFormat</code> provides a means to produce concatenated messages in a language-neutral way. Use this to construct messages displayed for end users.</section>	https://developer.android.com/reference/java/text/MessageFormat.html
java.text.MessageFormat.Field	A										<section class="prog__container"><pre><code>public static class MessageFormat.Field</code></pre>Defines constants that are used as attribute keys in the <code>AttributedCharacterIterator</code> returned from <code>MessageFormat.formatToCharacterIterator</code>.</section>	https://developer.android.com/reference/java/text/MessageFormat.Field.html
java.text.Normalizer	A										<section class="prog__container"><pre><code>public final class Normalizer</code></pre>This class provides the method <code>normalize</code> which transforms Unicode text into an equivalent composed or decomposed form, allowing for easier sorting and searching of text. The <code>normalize</code> method supports the standard normalization forms described in Unicode Standard Annex #15 &mdash; Unicode Normalization Forms.</section>	https://developer.android.com/reference/java/text/Normalizer.html
java.text.NumberFormat	A										<section class="prog__container"><pre><code>public abstract class NumberFormat</code></pre><code>NumberFormat</code> is the abstract base class for all number formats. This class provides the interface for formatting and parsing numbers. <code>NumberFormat</code> also provides methods for determining which locales have number formats, and what their names are.</section>	https://developer.android.com/reference/java/text/NumberFormat.html
java.text.NumberFormat.Field	A										<section class="prog__container"><pre><code>public static class NumberFormat.Field</code></pre>Defines constants that are used as attribute keys in the <code>AttributedCharacterIterator</code> returned from <code>NumberFormat.formatToCharacterIterator</code> and as field identifiers in <code>FieldPosition</code>.</section>	https://developer.android.com/reference/java/text/NumberFormat.Field.html
java.text.RuleBasedCollator	A										<section class="prog__container"><pre><code>public class RuleBasedCollator</code></pre>The <code>RuleBasedCollator</code> class is a concrete subclass of <code>Collator</code> that provides a simple, data-driven, table collator. With this class you can create a customized table-based <code>Collator</code>. <code>RuleBasedCollator</code> maps characters to sort keys.</section>	https://developer.android.com/reference/java/text/RuleBasedCollator.html
java.text.SimpleDateFormat	A										<section class="prog__container"><pre><code>public class SimpleDateFormat</code></pre><code>SimpleDateFormat</code> is a concrete class for formatting and parsing dates in a locale-sensitive manner. It allows for formatting (date -&gt; text), parsing (text -&gt; date), and normalization.</section>	https://developer.android.com/reference/java/text/SimpleDateFormat.html
java.util.Calendar	A										<section class="prog__container"><pre><code>public abstract class Calendar</code></pre>The <code>Calendar</code> class is an abstract class that provides methods for converting between a specific instant in time and a set of <code>calendar fields</code> such as <code>YEAR</code>, <code>MONTH</code>, <code>DAY_OF_MONTH</code>, <code>HOUR</code>, and so on, and for manipulating the calendar fields, such as getting the date of the next week. An instant in time can be represented by a millisecond value that is an offset from the <em>Epoch</em>, January 1, 1970 00:00:00.000 GMT (Gregorian).</section>	https://developer.android.com/reference/java/util/Calendar.html
java.util.Currency	A										<section class="prog__container"><pre><code>public final class Currency</code></pre>Represents a currency. Currencies are identified by their ISO 4217 currency codes. Visit the ISO web site for more information, including a table of currency codes.</section>	https://developer.android.com/reference/java/util/Currency.html
java.util.GregorianCalendar	A										<section class="prog__container"><pre><code>public class GregorianCalendar</code></pre><code>GregorianCalendar</code> is a concrete subclass of <code>Calendar</code> and provides the standard calendar system used by most of the world.</section>	https://developer.android.com/reference/java/util/GregorianCalendar.html
java.util.TimeZone	A										<section class="prog__container"><pre><code>public abstract class TimeZone</code></pre><code>TimeZone</code> represents a time zone offset, and also figures out daylight savings.</section>	https://developer.android.com/reference/java/util/TimeZone.html
java.util.concurrent	A										<section class="prog__container"> Implementations. Classes ThreadPoolExecutor and ScheduledThreadPoolExecutor provide tunable, flexible thread pools. The Executors class provides factory methods for the most common kinds and configurations of Executors, as well as a few utility methods for using them. Other utilities based on Executors include the concrete class FutureTask providing a common extensible implementation of Futures, and ExecutorCompletionService, that assists in coordinating the processing of groups of asynchronous tasks. Class ForkJoinPool provides an Executor primarily designed for processing instances of ForkJoinTask and its subclasses. These classes employ a work-stealing scheduler that attains high throughput for tasks conforming to restrictions that often hold in computation-intensive parallel processing. Queues The ConcurrentLinkedQueue class supplies an efficient scalable thread-safe non-blocking FIFO queue. The ConcurrentLinkedDeque class is similar, but additionally supports the Deque interface. Five implementations in java.util.concurrent support the extended BlockingQueue interface, that defines blocking versions of put and take: LinkedBlockingQueue, ArrayBlockingQueue, SynchronousQueue, PriorityBlockingQueue, and DelayQueue. The different classes cover the most common usage contexts for producer-consumer, messaging, parallel tasking, and related concurrent designs. Extended interface TransferQueue, and implementation LinkedTransferQueue introduce a synchronous transfer method (along with related features) in which a producer may optionally block awaiting its consumer. The BlockingDeque interface extends BlockingQueue to support both FIFO and LIFO (stack-based) operations. Class LinkedBlockingDeque provides an implementation. Timing The TimeUnit class provides multiple granularities (including nanoseconds) for specifying and controlling time-out based operations. Most classes in the package contain operations based on time-outs in addition to indefinite waits. In all cases that time-outs are used, the time-out specifies the minimum time that the method should wait before indicating that it timed-out. Implementations make a "best effort" to detect time-outs as soon as possible after they occur. However, an indefinite amount of time may elapse between a time-out being detected and a thread actually executing again after that time-out. All methods that accept timeout parameters treat values less than or equal to zero to mean not to wait at all. To wait "forever", you can use a value of Long.MAX_VALUE. Synchronizers Five classes aid common special-purpose synchronization idioms. Semaphore is a classic concurrency tool. CountDownLatch is a very simple yet very common utility for blocking until a given number of signals, events, or conditions hold. A CyclicBarrier is a resettable multiway synchronization point useful in some styles of parallel programming. A Phaser provides a more flexible form of barrier that may be used to control phased computation among multiple threads. An Exchanger allows two threads to exchange objects at a rendezvous point, and is useful in several pipeline designs. Concurrent Collections Besides Queues, this package supplies Collection implementations designed for use in multithreaded contexts: ConcurrentHashMap, ConcurrentSkipListMap, ConcurrentSkipListSet, CopyOnWriteArrayList, and CopyOnWriteArraySet. When many threads are expected to access a given collection, a ConcurrentHashMap is normally preferable to a synchronized HashMap, and a ConcurrentSkipListMap is normally preferable to a synchronized TreeMap. A CopyOnWriteArrayList is preferable to a synchronized ArrayList when the expected number of reads and traversals greatly outnumber the number of updates to a list. The "Concurrent" prefix used with some classes in this package is a shorthand indicating several differences from similar "synchronized" classes. For example java.util.Hashtable and Collections.synchronizedMap(new HashMap()) are synchronized. But ConcurrentHashMap is "concurrent". A concurrent collection is thread-safe, but not governed by a single exclusion lock. In the particular case of ConcurrentHashMap, it safely permits any number of concurrent reads as well as a tunable number of concurrent writes. "Synchronized" classes can be useful when you need to prevent all access to a collection via a single lock, at the expense of poorer scalability. In other cases in which multiple threads are expected to access a common collection, "concurrent" versions are normally preferable. And unsynchronized collections are preferable when either collections are unshared, or are accessible only when holding other locks. Most concurrent Collection implementations (including most Queues) also differ from the usual java.util conventions in that their Iterators</section>	https://developer.android.com/reference/java/util/concurrent/package-summary.html
java.util.concurrent.atomic	A										<section class="prog__container">This method (which varies in argument types across different classes) atomically sets a variable to the updateValue if it currently holds the expectedValue, reporting true on success. The classes in this package also contain methods to get and unconditionally set values, as well as a weaker conditional atomic update operation weakCompareAndSet described below. The specifications of these methods enable implementations to employ efficient machine-level atomic instructions that are available on contemporary processors. However on some platforms, support may entail some form of internal locking. Thus the methods are not strictly guaranteed to be non-blocking -- a thread may block transiently before performing the operation. Instances of classes AtomicBoolean, AtomicInteger, AtomicLong, and AtomicReference each provide access and updates to a single variable of the corresponding type. Each class also provides appropriate utility methods for that type. For example, classes AtomicLong and AtomicInteger provide atomic increment methods. One application is to generate sequence numbers, as in: class Sequencer { private final AtomicLong sequenceNumber = new AtomicLong(0); public long next() { return sequenceNumber.getAndIncrement(); } } It is straightforward to define new utility functions that, like getAndIncrement, apply a function to a value atomically. For example, given some transformation long transform(long input) write your utility method as follows: long getAndTransform(AtomicLong var) { long prev, next; do { prev = var.get(); next = transform(prev); } while (!var.compareAndSet(prev, next)); return prev; // return next; for transformAndGet } The memory effects for accesses and updates of atomics generally follow the rules for volatiles, as stated in Chapter 17 of The Java™ Language Specification: get has the memory effects of reading a volatile variable. set has the memory effects of writing (assigning) a volatile variable. lazySet has the memory effects of writing (assigning) a volatile variable except that it permits reorderings with subsequent (but not previous) memory actions that do not themselves impose reordering constraints with ordinary non-volatile writes. Among other usage contexts, lazySet may apply when nulling out, for the sake of garbage collection, a reference that is never accessed again. weakCompareAndSet atomically reads and conditionally writes a variable but does not create any happens-before orderings, so provides no guarantees with respect to previous or subsequent reads and writes of any variables other than the target of the weakCompareAndSet. compareAndSet and all other read-and-update operations such as getAndIncrement have the memory effects of both reading and writing volatile variables. In addition to classes representing single values, this package contains Updater classes that can be used to obtain compareAndSet operations on any selected volatile field of any selected class. AtomicReferenceFieldUpdater, AtomicIntegerFieldUpdater, and AtomicLongFieldUpdater are reflection-based utilities that provide access to the associated field types. These are mainly of use in atomic data structures in which several volatile fields of the same node (for example, the links of a tree node) are independently subject to atomic updates. These classes enable greater flexibility in how and when to use atomic updates, at the expense of more awkward reflection-based setup, less convenient usage, and weaker guarantees. The AtomicIntegerArray, AtomicLongArray, and AtomicReferenceArray classes further extend atomic operation support to arrays of these types. These classes are also notable in providing volatile access semantics for their array elements, which is not supported for ordinary arrays. The atomic classes also support method weakCompareAndSet, which has limited applicability. On some platforms, the weak version may be more efficient than compareAndSet in the normal case, but differs in that any given invocation of the weakCompareAndSet method may return false spuriously (that is, for no apparent reason). A false return means only that the operation may be retried if desired, relying on the guarantee that repeated invocation when the variable holds expectedValue and no other thread is also attempting to set the variable will eventually succeed. (Such spurious failures may for example be due to memory contention effects that are unrelated to whether the expected and current values are equal.) Additionally weakCompareAndSet does not provide ordering guarantees that are usually needed for synchronization control. However, the method may be useful for updating counters and statistics when such updates are unrelated to the other happens-before orderings of a program. When a thread sees an update to an atomic variable caused by a weakCompareAndSet, it does not necessarily see updates to any other variables that occurred before the weakCompareAndSet. This may be acceptable when, for example, updating performance statistics, but rarely otherwise. The AtomicMarkableReference class associates a single boolean with a reference. For example, this bit might be used inside a data structure to mean that the object being referenced has logically been deleted. The AtomicStampedReference class associates an integer value with a reference. This may be used for example, to represent version numbers corresponding to series of updates. Atomic classes are designed primarily as building blocks for implementing non-blocking data structures and related infrastructure classes. The compareAndSet method is not a general replacement for locking. It applies only when critical updates for an object are confined to a single variable. Atomic classes are not general purpose replacements for java.lang.Integer and related classes. They do not define methods such as equals, hashCode and compareTo. (Because atomic variables are expected to be mutated, they are poor choices for hash table keys.) Additionally, classes are provided only for those types that are commonly useful in intended applications. For example, there is no atomic class for representing byte. In those infrequent cases where you would like to do so, you can use an AtomicInteger to hold byte values, and cast appropriately. You can also hold floats using floatToRawIntBits(float) and intBitsToFloat(int) conversions, and doubles using doubleToRawLongBits(double) and longBitsToDouble(long) conversions. Classes AtomicBoolean A boolean value that may be updated atomically. AtomicInteger An int value that may be updated atomically. AtomicIntegerArray An int array in which elements may be updated atomically. AtomicIntegerFieldUpdater<T> A reflection-based utility that enables atomic updates to designated volatile int fields of designated classes. AtomicLong A long value that may be updated atomically. AtomicLongArray A long array in which elements may be updated atomically. AtomicLongFieldUpdater<T> A reflection-based utility that enables atomic updates to designated volatile long fields of designated classes. AtomicMarkableReference<V> An AtomicMarkableReference maintains an object reference along with a mark bit, that can be updated atomically. AtomicReference<V> An object reference that may be updated atomically. AtomicReferenceArray<E> An array of object references in which elements may be updated atomically. AtomicReferenceFieldUpdater<T, V> A reflection-based utility that enables atomic updates to designated volatile reference fields of designated classes. AtomicStampedReference<V> An AtomicStampedReference maintains an object reference along with an integer "stamp", that can be updated atomically. DoubleAccumulator One or more variables that together maintain a running double value updated using a supplied function. DoubleAdder One or more variables that together maintain an initially zero double sum. LongAccumulator One or more variables that together maintain a running long value updated using a supplied function. LongAdder One or more variables that together maintain an initially zero long sum. </section>	https://developer.android.com/reference/java/util/concurrent/atomic/package-summary.html
java.util.concurrent.locks	A										<section class="prog__container">The Lock interface supports locking disciplines that differ in semantics (reentrant, fair, etc), and that can be used in non-block-structured contexts including hand-over-hand and lock reordering algorithms. The main implementation is ReentrantLock. The ReadWriteLock interface similarly defines locks that may be shared among readers but are exclusive to writers. Only a single implementation, ReentrantReadWriteLock, is provided, since it covers most standard usage contexts. But programmers may create their own implementations to cover nonstandard requirements. The Condition interface describes condition variables that may be associated with Locks. These are similar in usage to the implicit monitors accessed using Object.wait, but offer extended capabilities. In particular, multiple Condition objects may be associated with a single Lock. To avoid compatibility issues, the names of Condition methods are different from the corresponding Object versions. The AbstractQueuedSynchronizer class serves as a useful superclass for defining locks and other synchronizers that rely on queuing blocked threads. The AbstractQueuedLongSynchronizer class provides the same functionality but extends support to 64 bits of synchronization state. Both extend class AbstractOwnableSynchronizer, a simple class that helps record the thread currently holding exclusive synchronization. The LockSupport class provides lower-level blocking and unblocking support that is useful for those developers implementing their own customized lock classes. Interfaces Condition Condition factors out the Object monitor methods (wait, notify and notifyAll) into distinct objects to give the effect of having multiple wait-sets per object, by combining them with the use of arbitrary Lock implementations. Lock Lock implementations provide more extensive locking operations than can be obtained using synchronized methods and statements. ReadWriteLock A ReadWriteLock maintains a pair of associated locks, one for read-only operations and one for writing. Classes AbstractOwnableSynchronizer A synchronizer that may be exclusively owned by a thread. AbstractQueuedLongSynchronizer A version of AbstractQueuedSynchronizer in which synchronization state is maintained as a long. AbstractQueuedLongSynchronizer.ConditionObject Condition implementation for a AbstractQueuedLongSynchronizer serving as the basis of a Lock implementation. AbstractQueuedSynchronizer Provides a framework for implementing blocking locks and related synchronizers (semaphores, events, etc) that rely on first-in-first-out (FIFO) wait queues. AbstractQueuedSynchronizer.ConditionObject Condition implementation for a AbstractQueuedSynchronizer serving as the basis of a Lock implementation. LockSupport Basic thread blocking primitives for creating locks and other synchronization classes. ReentrantLock A reentrant mutual exclusion Lock with the same basic behavior and semantics as the implicit monitor lock accessed using synchronized methods and statements, but with extended capabilities. ReentrantReadWriteLock An implementation of ReadWriteLock supporting similar semantics to ReentrantLock. ReentrantReadWriteLock.ReadLock The lock returned by method readLock(). ReentrantReadWriteLock.WriteLock The lock returned by method writeLock(). StampedLock A capability-based lock with three modes for controlling read/write access. </section>	https://developer.android.com/reference/java/util/concurrent/locks/package-summary.html
java.util.logging	A										<section class="prog__container"> Provides the classes and interfaces of the JavaTM 2 platform's core logging facilities. The central goal of the logging APIs is to support maintaining and servicing software at customer sites. There are four main target uses of the logs: Problem diagnosis by end users and system administrators. This consists of simple logging of common problems that can be fixed or tracked locally, such as running out of resources, security failures, and simple configuration errors. Problem diagnosis by field service engineers. The logging information used by field service engineers may be considerably more complex and verbose than that required by system administrators. Typically such information will require extra logging within particular subsystems. Problem diagnosis by the development organization. When a problem occurs in the field, it may be necessary to return the captured logging information to the original development team for diagnosis. This logging information may be extremely detailed and fairly inscrutable. Such information might include detailed tracing on the internal execution of particular subsystems. Problem diagnosis by developers. The Logging APIs may also be used to help debug an application under development. This may include logging information generated by the target application as well as logging information generated by lower-level libraries. Note however that while this use is perfectly reasonable, the logging APIs are not intended to replace the normal debugging and profiling tools that may already exist in the development environment. </section>	https://developer.android.com/reference/java/util/logging/package-summary.html
java.util.regex	A										<section class="prog__container"> An instance of the Pattern class represents a regular expression that is specified in string form in a syntax similar to that used by Perl. Instances of the Matcher class are used to match character sequences against a given pattern. Input is provided to matchers via the CharSequence interface in order to support matching against characters from a wide variety of input sources. Unless otherwise noted, passing a null argument to a method in any class or interface in this package will cause a NullPointerException to be thrown. Related Documentation An excellent tutorial and overview of regular expressions is Mastering Regular Expressions, Jeffrey E. F. Friedl, O'Reilly and Associates, 1997. Interfaces MatchResult The result of a match operation. Classes Matcher An engine that performs match operations on a character sequence</section>	https://developer.android.com/reference/java/util/regex/package-summary.html
java.util.stream	A										<section class="prog__container">Here we use widgets, a Collection<Widget>, as a source for a stream, and then perform a filter-map-reduce on the stream to obtain the sum of the weights of the red widgets. (Summation is an example of a reduction operation.) The key abstraction introduced in this package is stream. The classes Stream, IntStream, LongStream, and DoubleStream are streams over objects and the primitive int, long and double types. Streams differ from collections in several ways: No storage. A stream is not a data structure that stores elements; instead, it conveys elements from a source such as a data structure, an array, a generator function, or an I/O channel, through a pipeline of computational operations. Functional in nature. An operation on a stream produces a result, but does not modify its source. For example, filtering a Stream obtained from a collection produces a new Stream without the filtered elements, rather than removing elements from the source collection. Laziness-seeking. Many stream operations, such as filtering, mapping, or duplicate removal, can be implemented lazily, exposing opportunities for optimization. For example, "find the first String with three consecutive vowels" need not examine all the input strings. Stream operations are divided into intermediate (Stream-producing) operations and terminal (value- or side-effect-producing) operations. Intermediate operations are always lazy. Possibly unbounded. While collections have a finite size, streams need not. Short-circuiting operations such as limit(n) or findFirst() can allow computations on infinite streams to complete in finite time. Consumable. The elements of a stream are only visited once during the life of a stream. Like an Iterator, a new stream must be generated to revisit the same elements of the source. Streams can be obtained in a number of ways. Some examples include: From a Collection via the stream() and parallelStream() methods; From an array via stream(Object[]); From static factory methods on the stream classes, such as of(Object[]), range(int, int) or iterate(Object, UnaryOperator); </section>	https://developer.android.com/reference/java/util/stream/package-summary.html
javax.crypto	A										<section class="prog__container">Support for encryption includes symmetric, asymmetric, block, and stream ciphers. This package also supports secure streams and sealed objects. Many of the classes provided in this package are provider-based. The class itself defines a programming interface to which applications may write. The implementations themselves may then be written by independent third-party vendors and plugged in seamlessly as needed. Therefore application developers may take advantage of any number of provider-based implementations without having to add or rewrite code. Package Specification JavaTM Cryptography Architecture Standard Algorithm Name Documentation Related Documentation For further documentation, please see: JavaTM Cryptography Architecture (JCA) Reference Guide How to Implement a Provider in the JavaTM Cryptography Architecture Interfaces SecretKey A secret (symmetric) key. Classes Cipher This class provides the functionality of a cryptographic cipher for encryption and decryption. CipherInputStream A CipherInputStream is composed of an InputStream and a Cipher so that read() methods return data that are read in from the underlying InputStream but have been additionally processed by the Cipher. CipherOutputStream A CipherOutputStream is composed of an OutputStream and a Cipher so that write() methods first process the data before writing them out to the underlying OutputStream. CipherSpi This class defines the Service Provider Interface (SPI) for the Cipher class. EncryptedPrivateKeyInfo This class implements the EncryptedPrivateKeyInfo type as defined in PKCS #8. ExemptionMechanism This class provides the functionality of an exemption mechanism, examples of which are key recovery, key weakening, and key escrow. ExemptionMechanismSpi This class defines the Service Provider Interface (SPI) for the ExemptionMechanism class. KeyAgreement This class provides the functionality of a key agreement (or key exchange) protocol. KeyAgreementSpi This class defines the Service Provider Interface (SPI) for the KeyAgreement class. KeyGenerator This class provides the functionality of a secret (symmetric) key generator. KeyGeneratorSpi This class defines the Service Provider Interface (SPI) for the KeyGenerator class. Mac This class provides the functionality of a "Message Authentication Code" (MAC) algorithm. MacSpi This class defines the Service Provider Interface (SPI) for the Mac class. NullCipher The NullCipher class is a class that provides an "identity cipher" -- one that does not tranform the plaintext. SealedObject This class enables a programmer to create an object and protect its confidentiality with a cryptographic algorithm. SecretKeyFactory This class represents a factory for secret keys. SecretKeyFactorySpi This class defines the Service Provider Interface (SPI) for the SecretKeyFactory class. Exceptions AEADBadTagException This exception is thrown when a Cipher operating in an AEAD mode (such as GCM/CCM) is unable to verify the supplied authentication tag. BadPaddingException This exception is thrown when a particular padding mechanism is expected for the input data but the data is not padded properly. ExemptionMechanismException This is the generic ExemptionMechanism exception. IllegalBlockSizeException This exception is thrown when the length of data provided to a block cipher is incorrect, i.e., does not match the block size of the cipher. NoSuchPaddingException This exception is thrown when a particular padding mechanism is requested but is not available in the environment. ShortBufferException This exception is thrown when an output buffer provided by the user is too short to hold the operation result. </section>	https://developer.android.com/reference/javax/crypto/package-summary.html
javax.crypto.interfaces	A										<section class="prog__container"> Note that these interfaces are intended only for key implementations whose key material is accessible and available. These interfaces are not intended for key implementations whose key material resides in inaccessible, protected storage (such as in a hardware device). For more developer information on how to use these interfaces, including information on how to design Key classes for hardware devices, please refer to the cryptographic provider developer guide: How to Implement a Provider for the JavaTM Cryptography Architecture Package Specification PKCS #3: Diffie-Hellman Key-Agreement Standard, Version 1.4, November 1993. Related Documentation For further documentation, please see: JavaTM Cryptography Architecture API Specification and Reference Interfaces DHKey The interface to a Diffie-Hellman key. DHPrivateKey The interface to a Diffie-Hellman private key. DHPublicKey The interface to a Diffie-Hellman public key. PBEKey The interface to a PBE key. </section>	https://developer.android.com/reference/javax/crypto/interfaces/package-summary.html
javax.crypto.spec	A										<section class="prog__container">A key specification is a transparent representation of the key material that constitutes a key. A key may be specified in an algorithm-specific way, or in an algorithm-independent encoding format (such as ASN.1). This package contains key specifications for Diffie-Hellman public and private keys, as well as key specifications for DES, Triple DES, and PBE secret keys. An algorithm parameter specification is a transparent representation of the sets of parameters used with an algorithm. This package contains algorithm parameter specifications for parameters used with the Diffie-Hellman, DES, Triple DES, PBE, RC2 and RC5 algorithms. Package Specification PKCS #3: Diffie-Hellman Key-Agreement Standard, Version 1.4, November 1993. PKCS #5: Password-Based Encryption Standard, Version 1.5, November 1993. Federal Information Processing Standards Publication (FIPS PUB) 46-2: Data Encryption Standard (DES) Related Documentation For documentation that includes information about algorithm parameter and key specifications, please see: JavaTM Cryptography Architecture API Specification and Reference How to Implement a Provider for the JavaTM Cryptography Architecture Classes DESedeKeySpec This class specifies a DES-EDE ("triple-DES") key. DESKeySpec This class specifies a DES key. DHGenParameterSpec This class specifies the set of parameters used for generating Diffie-Hellman (system) parameters for use in Diffie-Hellman key agreement. DHParameterSpec This class specifies the set of parameters used with the Diffie-Hellman algorithm, as specified in PKCS #3: Diffie-Hellman Key-Agreement Standard. DHPrivateKeySpec This class specifies a Diffie-Hellman private key with its associated parameters. DHPublicKeySpec This class specifies a Diffie-Hellman public key with its associated parameters. GCMParameterSpec Specifies the set of parameters required by a Cipher using the Galois/Counter Mode (GCM) mode. IvParameterSpec This class specifies an initialization vector (IV). OAEPParameterSpec This class specifies the set of parameters used with OAEP Padding, as defined in the PKCS #1 standard. PBEKeySpec A user-chosen password that can be used with password-based encryption (PBE). PBEParameterSpec This class specifies the set of parameters used with password-based encryption (PBE), as defined in the PKCS #5 standard. PSource This class specifies the source for encoding input P in OAEP Padding, as defined in the PKCS #1 standard. PSource.PSpecified This class is used to explicitly specify the value for encoding input P in OAEP Padding. RC2ParameterSpec This class specifies the parameters used with the RC2 algorithm. RC5ParameterSpec This class specifies the parameters used with the RC5 algorithm. SecretKeySpec This class specifies a secret key in a provider-independent fashion. </section>	https://developer.android.com/reference/javax/crypto/spec/package-summary.html
javax.microedition.khronos.opengles	A										<section class="prog__container">Provides a standard OpenGL interface.</section>	https://developer.android.com/reference/javax/microedition/khronos/opengles/package-summary.html
javax.security.cert	A										<section class="prog__container"> These classes include a simplified version of the java.security.cert package. These classes were developed as part of the Java Secure Socket Extension (JSSE). When JSSE was added to the J2SE version 1.4, this package was added for backward-compatibility reasons only. New applications should not use this package, but rather java.security.cert. Classes Certificate Abstract class for managing a variety of identity certificates. X509Certificate Abstract class for X.509 v1 certificates. Exceptions CertificateEncodingException Certificate Encoding Exception. CertificateException This exception indicates one of a variety of certificate problems. CertificateExpiredException Certificate Expired Exception. CertificateNotYetValidException Certificate is not yet valid exception. CertificateParsingException Certificate Parsing Exception. </section>	https://developer.android.com/reference/javax/security/cert/package-summary.html
javax.security.cert.Certificate	A										<section class="prog__container"><pre><code>public abstract class Certificate</code></pre></section>	https://developer.android.com/reference/javax/security/cert/Certificate.html
javax.security.cert.CertificateEncodingException	A										<section class="prog__container"><pre><code>public class CertificateEncodingException</code></pre>Certificate Encoding Exception. This is thrown whenever an error occurs whilst attempting to encode a certificate.</section>	https://developer.android.com/reference/javax/security/cert/CertificateEncodingException.html
javax.security.cert.CertificateException	A										<section class="prog__container"><pre><code>public class CertificateException</code></pre>This exception indicates one of a variety of certificate problems.</section>	https://developer.android.com/reference/javax/security/cert/CertificateException.html
javax.security.cert.CertificateExpiredException	A										<section class="prog__container"><pre><code>public class CertificateExpiredException</code></pre>Certificate Expired Exception. This is thrown whenever the current <code>Date</code> or the specified <code>Date</code> is after the <code>notAfter</code> date/time specified in the validity period of the certificate.</section>	https://developer.android.com/reference/javax/security/cert/CertificateExpiredException.html
javax.security.cert.CertificateNotYetValidException	A										<section class="prog__container"><pre><code>public class CertificateNotYetValidException</code></pre>Certificate is not yet valid exception. This is thrown whenever the current <code>Date</code> or the specified <code>Date</code> is before the <code>notBefore</code> date/time in the Certificate validity period.</section>	https://developer.android.com/reference/javax/security/cert/CertificateNotYetValidException.html
javax.security.cert.CertificateParsingException	A										<section class="prog__container"><pre><code>public class CertificateParsingException</code></pre>Certificate Parsing Exception. This is thrown whenever invalid DER encoded certificate is parsed or unsupported DER features are found in the Certificate.</section>	https://developer.android.com/reference/javax/security/cert/CertificateParsingException.html
javax.security.cert.X509Certificate	A										<section class="prog__container"><pre><code>public abstract class X509Certificate</code></pre>Abstract class for X.509 v1 certificates. This provides a standard way to access all the version 1 attributes of an X.509 certificate. Attributes that are specific to X.509 v2 or v3 are not available through this interface. Future API evolution will provide full access to complete X.509 v3 attributes.</section>	https://developer.android.com/reference/javax/security/cert/X509Certificate.html
lang.Process	A										<section class="prog__container"><pre><code>public abstract class Process</code></pre>The <code>start()</code> and <code>Runtime.exec</code> methods create a native process and return an instance of a subclass of <code>Process</code> that can be used to control the process and obtain information about it. The class <code>Process</code> provides methods for performing input from the process, performing output to the process, waiting for the process to complete, checking the exit status of the process, and destroying (killing) the process.</section>	https://developer.android.com/reference/java/lang/Process.html
le.ScanResult	A										<section class="prog__container"><pre><code>public final class ScanResult</code></pre>ScanResult for Bluetooth LE scan.</section>	https://developer.android.com/reference/android/bluetooth/le/ScanResult.html
leanback.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.html
leanback.R.animator	A										<section class="prog__container"><pre><code>public static final class R.animator</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.animator.html
leanback.R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.attr.html
leanback.R.color	A										<section class="prog__container"><pre><code>public static final class R.color</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.color.html
leanback.R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.dimen.html
leanback.R.drawable	A										<section class="prog__container"><pre><code>public static final class R.drawable</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.drawable.html
leanback.R.fraction	A										<section class="prog__container"><pre><code>public static final class R.fraction</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.fraction.html
leanback.R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.id.html
leanback.R.integer	A										<section class="prog__container"><pre><code>public static final class R.integer</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.integer.html
leanback.R.layout	A										<section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.layout.html
leanback.R.raw	A										<section class="prog__container"><pre><code>public static final class R.raw</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.raw.html
leanback.R.string	A										<section class="prog__container"><pre><code>public static final class R.string</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.string.html
leanback.R.style	A										<section class="prog__container"><pre><code>public static final class R.style</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.style.html
leanback.R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.styleable.html
leanback.R.transition	A										<section class="prog__container"><pre><code>public static final class R.transition</code></pre></section>	https://developer.android.com/reference/android/support/v17/leanback/R.transition.html
locks.Condition	A										<section class="prog__container"><pre><code>public interface Condition</code></pre><code>Condition</code> factors out the <code>Object</code> monitor methods (<code>wait</code>, <code>notify</code> and <code>notifyAll</code>) into distinct objects to give the effect of having multiple wait-sets per object, by combining them with the use of arbitrary <code>Lock</code> implementations. Where a <code>Lock</code> replaces the use of <code>synchronized</code> methods and statements, a <code>Condition</code> replaces the use of the Object monitor methods.</section>	https://developer.android.com/reference/java/util/concurrent/locks/Condition.html
logging.Filter	A										<section class="prog__container"><pre><code>public interface Filter</code></pre>A Filter can be used to provide fine grain control over what is logged, beyond the control provided by log levels.</section>	https://developer.android.com/reference/java/util/logging/Filter.html
logging.Formatter	A										<section class="prog__container"><pre><code>public abstract class Formatter</code></pre>A Formatter provides support for formatting LogRecords.</section>	https://developer.android.com/reference/java/util/logging/Formatter.html
logging.Handler	A										<section class="prog__container"><pre><code>public abstract class Handler</code></pre>A <tt>Handler</tt> object takes log messages from a <tt>Logger</tt> and exports them. It might for example, write them to a console or write them to a file, or send them to a network logging service, or forward them to an OS log, or whatever.</section>	https://developer.android.com/reference/java/util/logging/Handler.html
mediacompat.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/mediacompat/R.html
mediarouter.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.html
mediarouter.R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.attr.html
mediarouter.R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.dimen.html
mediarouter.R.drawable	A										<section class="prog__container"><pre><code>public static final class R.drawable</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.drawable.html
mediarouter.R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.id.html
mediarouter.R.integer	A										<section class="prog__container"><pre><code>public static final class R.integer</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.integer.html
mediarouter.R.interpolator	A										<section class="prog__container"><pre><code>public static final class R.interpolator</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.interpolator.html
mediarouter.R.layout	A										<section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.layout.html
mediarouter.R.string	A										<section class="prog__container"><pre><code>public static final class R.string</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.string.html
mediarouter.R.style	A										<section class="prog__container"><pre><code>public static final class R.style</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.style.html
mediarouter.R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/v7/mediarouter/R.styleable.html
net.ContentHandler	A										<section class="prog__container"><pre><code>public abstract class ContentHandler</code></pre>The abstract class <code>ContentHandler</code> is the superclass of all classes that read an <code>Object</code> from a <code>URLConnection</code>.</section>	https://developer.android.com/reference/java/net/ContentHandler.html
net.CookieManager	A										<section class="prog__container"><pre><code>public class CookieManager</code></pre>CookieManager provides a concrete implementation of <code>CookieHandler</code>, which separates the storage of cookies from the policy surrounding accepting and rejecting cookies. A CookieManager is initialized with a <code>CookieStore</code> which manages storage, and a <code>CookiePolicy</code> object, which makes policy decisions on cookie acceptance/rejection.</section>	https://developer.android.com/reference/java/net/CookieManager.html
net.ParseException	A										<section class="prog__container"><pre><code>public class ParseException</code></pre>Thrown when parsing a URL fails.</section>	https://developer.android.com/reference/android/net/ParseException.html
net.SocketFactory	A										<section class="prog__container"><pre><code>public abstract class SocketFactory</code></pre>This class creates sockets. It may be subclassed by other factories, which create particular subclasses of sockets and thus provide a general framework for the addition of public socket-level functionality.</section>	https://developer.android.com/reference/javax/net/SocketFactory.html
net.ssl.SSLSocketFactory	A										<section class="prog__container"><pre><code>public abstract class SSLSocketFactory</code></pre><code>SSLSocketFactory</code>s create <code>SSLSocket</code>s.</section>	https://developer.android.com/reference/javax/net/ssl/SSLSocketFactory.html
notification.Condition	A										<section class="prog__container"><pre><code>public final class Condition</code></pre>The current condition of an <code>AutomaticZenRule</code>, provided by the <code>ConditionProviderService</code> that owns the rule. Used to tell the system to enter Do Not Disturb mode and request that the system exit Do Not Disturb mode.</section>	https://developer.android.com/reference/android/service/notification/Condition.html
opengl.EGLConfig	A										<section class="prog__container"><pre><code>public class EGLConfig</code></pre>Wrapper class for native EGLConfig objects.</section>	https://developer.android.com/reference/android/opengl/EGLConfig.html
opengl.EGLContext	A										<section class="prog__container"><pre><code>public class EGLContext</code></pre>Wrapper class for native EGLContext objects.</section>	https://developer.android.com/reference/android/opengl/EGLContext.html
opengl.EGLDisplay	A										<section class="prog__container"><pre><code>public class EGLDisplay</code></pre>Wrapper class for native EGLDisplay objects.</section>	https://developer.android.com/reference/android/opengl/EGLDisplay.html
opengl.EGLSurface	A										<section class="prog__container"><pre><code>public class EGLSurface</code></pre>Wrapper class for native EGLSurface objects.</section>	https://developer.android.com/reference/android/opengl/EGLSurface.html
opengl.Matrix	A										<section class="prog__container"><pre><code>public class Matrix</code></pre>Matrix math utilities. These methods operate on OpenGL ES format matrices and vectors stored in float arrays.</section>	https://developer.android.com/reference/android/opengl/Matrix.html
opengl.Visibility	A										<section class="prog__container"><pre><code>public class Visibility</code></pre>A collection of utility methods for computing the visibility of triangle meshes.</section>	https://developer.android.com/reference/android/opengl/Visibility.html
os.AtomicFile	A										Helper class for performing atomic operations on a file, by creating a backup file until a write has successfully completed.	https://developer.android.com/reference/com/android/internal/os/package-summary.html
os.Handler	A										<section class="prog__container"><pre><code>public class Handler</code></pre>A Handler allows you to send and process <code>Message</code> and Runnable objects associated with a thread's <code>MessageQueue</code>. Each Handler instance is associated with a single thread and that thread's message queue. When you create a new Handler, it is bound to the thread / message queue of the thread that is creating it -- from that point on, it will deliver messages and runnables to that message queue and execute them as they come out of the message queue.</section>	https://developer.android.com/reference/android/os/Handler.html
os.Process	A										<section class="prog__container"><pre><code>public class Process</code></pre>Tools for managing OS processes.</section>	https://developer.android.com/reference/android/os/Process.html
palette.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v7/palette/R.html
percent.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/percent/R.html
percent.R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/percent/R.attr.html
percent.R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/percent/R.styleable.html
pm.Signature	A										<section class="prog__container"><pre><code>public class Signature</code></pre>Opaque, immutable representation of a signing certificate associated with an application package.</section>	https://developer.android.com/reference/android/content/pm/Signature.html
preference.R.drawable	A										<section class="prog__container"><pre><code>public static final class R.drawable</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/R.drawable.html
preference.R.string	A										<section class="prog__container"><pre><code>public static final class R.string</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/R.string.html
print.PrintJob	A										<section class="prog__container"><pre><code>public final class PrintJob</code></pre>This class represents a print job from the perspective of an application. It contains behavior methods for performing operations on it as well as methods for querying its state. A snapshot of the print job state is represented by the <code>PrintJobInfo</code> class. The state of a print job may change over time. An application receives instances of this class when creating a print job or querying for its print jobs.</section>	https://developer.android.com/reference/android/print/PrintJob.html
printservice.PrintJob	A										<section class="prog__container"><pre><code>public final class PrintJob</code></pre>This class represents a print job from the perspective of a print service. It provides APIs for observing the print job state and performing operations on the print job.</section>	https://developer.android.com/reference/android/printservice/PrintJob.html
provider.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/provider/R.html
provider.Settings	A										<section class="prog__container"><pre><code>public final class Settings</code></pre>The Settings provider contains global system-level device preferences.</section>	https://developer.android.com/reference/android/provider/Settings.html
recyclerview.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v7/recyclerview/R.html
recyclerview.R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/v7/recyclerview/R.attr.html
recyclerview.R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/support/v7/recyclerview/R.dimen.html
recyclerview.R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/v7/recyclerview/R.id.html
recyclerview.R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/v7/recyclerview/R.styleable.html
reflect.Array	A										<section class="prog__container"><pre><code>public final class Array</code></pre>The <code>Array</code> class provides static methods to dynamically create and access Java arrays.</section>	https://developer.android.com/reference/java/lang/reflect/Array.html
reflect.Proxy	A										<section class="prog__container"><pre><code>public class Proxy</code></pre><code>Proxy</code> provides static methods for creating dynamic proxy classes and instances, and it is also the superclass of all dynamic proxy classes created by those methods.</section>	https://developer.android.com/reference/java/lang/reflect/Proxy.html
reflect.Type	A										<section class="prog__container"><pre><code>public interface Type</code></pre>Type is the common superinterface for all types in the Java programming language. These include raw types, parameterized types, array types, type variables and primitive types.</section>	https://developer.android.com/reference/java/lang/reflect/Type.html
sax.Attributes	A										<section class="prog__container"><pre><code>public interface Attributes</code></pre>Interface for a list of XML attributes. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/Attributes.html
sax.ContentHandler	A										<section class="prog__container"><pre><code>public interface ContentHandler</code></pre>Receive notification of the logical content of a document. <blockquote> <em>This module, both source code and documentation, is in the Public Domain, and comes with <strong>NO WARRANTY</strong>.</em> See http://www.saxproject.org for further information. </blockquote></section>	https://developer.android.com/reference/org/xml/sax/ContentHandler.html
sax.Element	A										<section class="prog__container"><pre><code>public class Element</code></pre>An XML element. Provides access to child elements and hooks to listen for events related to this element.</section>	https://developer.android.com/reference/android/sax/Element.html
sax2.Driver	A										<section class="prog__container"><pre><code>public class Driver</code></pre>SAX2 Driver that pulls events from XmlPullParser and converts them into SAX2 callbacks.</section>	https://developer.android.com/reference/org/xmlpull/v1/sax2/Driver.html
scheme.SocketFactory	A										<section class="prog__container"><pre><code>public interface SocketFactory</code></pre><p class="caution"><strong> This interface was deprecated in API level 22.</strong><br/> Please use <code>openConnection()</code> instead. Please visit this webpage for further details.</section>	https://developer.android.com/reference/org/apache/http/conn/scheme/SocketFactory.html
security.Certificate	A										<section class="prog__container"><pre><code>public interface Certificate</code></pre><p class="caution"><strong> This interface was deprecated in API level 1.</strong><br/> A new certificate handling package is created in the Java platform. This Certificate interface is entirely deprecated and is here to allow for a smooth transition to the new package.</section>	https://developer.android.com/reference/java/security/Certificate.html
security.Permission	A										<section class="prog__container"><pre><code>public abstract class Permission</code></pre>Legacy security code; do not use.</section>	https://developer.android.com/reference/java/security/Permission.html
security.Signature	A										<section class="prog__container"><pre><code>public abstract class Signature</code></pre>The Signature class is used to provide applications the functionality of a digital signature algorithm. Digital signatures are used for authentication and integrity assurance of digital data.</section>	https://developer.android.com/reference/java/security/Signature.html
security.Timestamp	A										<section class="prog__container"><pre><code>public final class Timestamp</code></pre>This class encapsulates information about a signed timestamp. It is immutable. It includes the timestamp's date and time as well as information about the Timestamping Authority (TSA) which generated and signed the timestamp.</section>	https://developer.android.com/reference/java/security/Timestamp.html
session.MediaController	A										<section class="prog__container"><pre><code>public final class MediaController</code></pre>Allows an app to interact with an ongoing media session. Media buttons and other commands can be sent to the session. A callback may be registered to receive updates from the session, such as metadata and play state changes.</section>	https://developer.android.com/reference/android/media/session/MediaController.html
sql.Array	A										<section class="prog__container"><pre><code>public interface Array</code></pre>The mapping in the Java programming language for the SQL type <code>ARRAY</code>. By default, an <code>Array</code> value is a transaction-duration reference to an SQL <code>ARRAY</code> value. By default, an <code>Array</code> object is implemented using an SQL LOCATOR(array) internally, which means that an <code>Array</code> object contains a logical pointer to the data in the SQL <code>ARRAY</code> value rather than containing the <code>ARRAY</code> value's data.</section>	https://developer.android.com/reference/java/sql/Array.html
sql.Connection	A										<section class="prog__container"><pre><code>public interface Connection</code></pre></section>	https://developer.android.com/reference/java/sql/Connection.html
sql.Date	A										<section class="prog__container"><pre><code>public class Date</code></pre></section>	https://developer.android.com/reference/java/sql/Date.html
sql.Driver	A										<section class="prog__container"><pre><code>public interface Driver</code></pre>The interface that every driver class must implement.</section>	https://developer.android.com/reference/java/sql/Driver.html
sql.SQLException	A										<section class="prog__container"><pre><code>public class SQLException</code></pre></section>	https://developer.android.com/reference/java/sql/SQLException.html
sql.Time	A										<section class="prog__container"><pre><code>public class Time</code></pre></section>	https://developer.android.com/reference/java/sql/Time.html
sql.Timestamp	A										<section class="prog__container"><pre><code>public class Timestamp</code></pre></section>	https://developer.android.com/reference/java/sql/Timestamp.html
support.transition.AutoTransition	A										<section class="prog__container"><pre><code>public class AutoTransition</code></pre>Utility class for creating a default transition that automatically fades, moves, and resizes views during a scene change.</section>	https://developer.android.com/reference/android/support/transition/AutoTransition.html
support.transition.ChangeBounds	A										<section class="prog__container"><pre><code>public class ChangeBounds</code></pre>This transition captures the layout bounds of target views before and after the scene change and animates those changes during the transition.</section>	https://developer.android.com/reference/android/support/transition/ChangeBounds.html
support.transition.Fade	A										<section class="prog__container"><pre><code>public class Fade</code></pre>This transition tracks changes to the visibility of target views in the start and end scenes and fades views in or out when they become visible or non-visible. Visibility is determined by both the <code>setVisibility(int)</code> state of the view as well as whether it is parented in the current view hierarchy.</section>	https://developer.android.com/reference/android/support/transition/Fade.html
support.transition.Scene	A										<section class="prog__container"><pre><code>public class Scene</code></pre>A scene represents the collection of values that various properties in the View hierarchy will have when the scene is applied. A Scene can be configured to automatically run a Transition when it is applied, which will animate the various property changes that take place during the scene change.</section>	https://developer.android.com/reference/android/support/transition/Scene.html
support.transition.Transition	A										<section class="prog__container"><pre><code>public abstract class Transition</code></pre>A Transition holds information about animations that will be run on its targets during a scene change. Subclasses of this abstract class may choreograph several child transitions (<code>TransitionSet</code> or they may perform custom animations themselves. Any Transition has two main jobs: (1) capture property values, and (2) play animations based on changes to captured property values. A custom transition knows what property values on View objects are of interest to it, and also knows how to animate changes to those values. For example, the <code>Fade</code> transition tracks changes to visibility-related properties and is able to construct and run animations that fade items in or out based on changes to those properties.</section>	https://developer.android.com/reference/android/support/transition/Transition.html
support.transition.Transition.TransitionListener	A										<section class="prog__container"><pre><code>public static interface Transition.TransitionListener</code></pre>A transition listener receives notifications from a transition. Notifications indicate transition lifecycle events.</section>	https://developer.android.com/reference/android/support/transition/Transition.TransitionListener.html
support.transition.TransitionManager	A										<section class="prog__container"><pre><code>public class TransitionManager</code></pre>This class manages the set of transitions that fire when there is a change of <code>Scene</code>. To use the manager, add scenes along with transition objects with calls to <code>setTransition(Scene, Transition)</code> or <code>setTransition(Scene, Scene, Transition)</code>. Setting specific transitions for scene changes is not required; by default, a Scene change will use <code>AutoTransition</code> to do something reasonable for most situations. Specifying other transitions for particular scene changes is only necessary if the application wants different transition behavior in these situations.</section>	https://developer.android.com/reference/android/support/transition/TransitionManager.html
support.transition.TransitionSet	A										<section class="prog__container"><pre><code>public class TransitionSet</code></pre>A TransitionSet is a parent of child transitions (including other TransitionSets). Using TransitionSets enables more complex choreography of transitions, where some sets play <code>ORDERING_TOGETHER</code> and others play <code>ORDERING_SEQUENTIAL</code>. For example, <code>AutoTransition</code> uses a TransitionSet to sequentially play a Fade(Fade.OUT), followed by a <code>ChangeBounds</code>, followed by a Fade(Fade.OUT) transition.</section>	https://developer.android.com/reference/android/support/transition/TransitionSet.html
support.transition.TransitionValues	A										<section class="prog__container"><pre><code>public class TransitionValues</code></pre>Data structure which holds cached values for the transition. The view field is the target which all of the values pertain to. The values field is a map which holds information for fields according to names selected by the transitions. These names should be unique to avoid clobbering values stored by other transitions, such as the convention project:transition_name:property_name. For example, the platform might store a property "alpha" in a transition "Fader" as "android:fader:alpha".</section>	https://developer.android.com/reference/android/support/transition/TransitionValues.html
support.transition.Visibility	A										<section class="prog__container"><pre><code>public abstract class Visibility</code></pre>This transition tracks changes to the visibility of target views in the start and end scenes. Visibility is determined not just by the <code>setVisibility(int)</code> state of views, but also whether views exist in the current view hierarchy. The class is intended to be a utility for subclasses such as <code>Fade</code>, which use this visibility information to determine the specific animations to run when visibility changes occur. Subclasses should implement one or both of the methods <code>onAppear(ViewGroup, TransitionValues, int, TransitionValues, int)</code>, <code>onDisappear(ViewGroup, TransitionValues, int, TransitionValues, int)</code>,</section>	https://developer.android.com/reference/android/support/transition/Visibility.html
system.Settings	A										<section class="prog__container"><pre><code>public class Settings</code></pre>Provides various preferences affecting Leanback runtime behavior.</section>	https://developer.android.com/reference/android/support/v17/leanback/system/Settings.html
telecom.Connection	A										<section class="prog__container"><pre><code>public abstract class Connection</code></pre>Represents a phone call or connection to a remote endpoint that carries voice and/or video traffic.</section>	https://developer.android.com/reference/android/telecom/Connection.html
telephony.SmsManager	A										<section class="prog__container"><pre><code>public final class SmsManager</code></pre>Manages SMS operations such as sending data, text, and pdu SMS messages. Get this object by calling the static method <code>getDefault()</code>.</section>	https://developer.android.com/reference/android/telephony/SmsManager.html
telephony.SmsMessage	A										<section class="prog__container"><pre><code>public class SmsMessage</code></pre>A Short Message Service message.</section>	https://developer.android.com/reference/android/telephony/SmsMessage.html
telephony.SmsMessage.MessageClass	A										<section class="prog__container"><pre><code>public static final enum SmsMessage.MessageClass</code></pre>SMS Class enumeration. See TS 23.038.</section>	https://developer.android.com/reference/android/telephony/SmsMessage.MessageClass.html
telephony.SmsMessage.SubmitPdu	A										<section class="prog__container"><pre><code>public static class SmsMessage.SubmitPdu</code></pre></section>	https://developer.android.com/reference/android/telephony/SmsMessage.SubmitPdu.html
test.AssertionFailedError	A										<section class="prog__container"><pre><code>public class AssertionFailedError</code></pre><p class="caution"><strong> This class was deprecated in API level 16.</strong><br/> use junit.framework.AssertionFailedError</section>	https://developer.android.com/reference/android/test/AssertionFailedError.html
test.ComparisonFailure	A										<section class="prog__container"><pre><code>public class ComparisonFailure</code></pre><p class="caution"><strong> This class was deprecated in API level 16.</strong><br/> use junit.framework.ComparisonFailure</section>	https://developer.android.com/reference/android/test/ComparisonFailure.html
text.ClipboardManager	A										<section class="prog__container"><pre><code>public abstract class ClipboardManager</code></pre><p class="caution"><strong> This class was deprecated in API level 11.</strong><br/> Old text-only interface to the clipboard. See <code>ClipboardManager</code> for the modern API.</section>	https://developer.android.com/reference/android/text/ClipboardManager.html
text.ParseException	A										<section class="prog__container"><pre><code>public class ParseException</code></pre>Signals that an error has been reached unexpectedly while parsing.</section>	https://developer.android.com/reference/java/text/ParseException.html
transform.dom.DOMLocator	A										<section class="prog__container"><pre><code>public interface DOMLocator</code></pre>Indicates the position of a node in a source DOM, intended primarily for error reporting. To use a DOMLocator, the receiver of an error must downcast the <code>SourceLocator</code> object returned by an exception. A <code>Transformer</code> may use this object for purposes other than error reporting, for instance, to indicate the source node that originated a result node.</section>	https://developer.android.com/reference/javax/xml/transform/dom/DOMLocator.html
transition.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/transition/R.html
transition.R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/transition/R.id.html
util.Date	A										<section class="prog__container"><pre><code>public class Date</code></pre>The class <code>Date</code> represents a specific instant in time, with millisecond precision.</section>	https://developer.android.com/reference/java/util/Date.html
util.Formatter	A										<section class="prog__container"><pre><code>public final class Formatter</code></pre>An interpreter for printf-style format strings. This class provides support for layout justification and alignment, common formats for numeric, string, and date/time data, and locale-specific output. Common Java types such as <code>byte</code>, <code>BigDecimal</code>, and <code>Calendar</code> are supported. Limited formatting customization for arbitrary user types is provided through the <code>Formattable</code> interface.</section>	https://developer.android.com/reference/java/util/Formatter.html
util.Observable	A										<section class="prog__container"><pre><code>public class Observable</code></pre>This class represents an observable object, or "data" in the model-view paradigm. It can be subclassed to represent an object that the application wants to have observed.</section>	https://developer.android.com/reference/java/util/Observable.html
util.Size	A										<section class="prog__container"><pre><code>public final class Size</code></pre>Immutable class for describing width and height dimensions in pixels.</section>	https://developer.android.com/reference/android/util/Size.html
util.TimeUnit	A										<section class="prog__container"><pre><code>public class TimeUnit</code></pre>Measurement unit for time units.</section>	https://developer.android.com/reference/android/icu/util/TimeUnit.html
v13.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v13/R.html
v13.app.ActivityCompat	A										<section class="prog__container"><pre><code>public class ActivityCompat</code></pre>Helper for accessing features in <code>Activity</code> introduced after API level 13 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v13/app/ActivityCompat.html
v13.app.FragmentPagerAdapter	A										<section class="prog__container"><pre><code>public abstract class FragmentPagerAdapter</code></pre>Implementation of <code>PagerAdapter</code> that represents each page as a <code>Fragment</code> that is persistently kept in the fragment manager as long as the user can return to the page.</section>	https://developer.android.com/reference/android/support/v13/app/FragmentPagerAdapter.html
v13.app.FragmentStatePagerAdapter	A										<section class="prog__container"><pre><code>public abstract class FragmentStatePagerAdapter</code></pre>Implementation of <code>PagerAdapter</code> that uses a <code>Fragment</code> to manage each page. This class also handles saving and restoring of fragment's state.</section>	https://developer.android.com/reference/android/support/v13/app/FragmentStatePagerAdapter.html
v13.app.FragmentTabHost	A										<section class="prog__container"><pre><code>public class FragmentTabHost</code></pre>Version of <code>FragmentTabHost</code> that can be used with the platform <code>Fragment</code> APIs. You will not normally use this, instead using action bar tabs.</section>	https://developer.android.com/reference/android/support/v13/app/FragmentTabHost.html
v13.view.ViewCompat	A										<section class="prog__container"><pre><code>public class ViewCompat</code></pre>Helper for accessing features in <code>View</code> introduced after API level 13 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v13/view/ViewCompat.html
v14.preference.MultiSelectListPreference	A										<section class="prog__container"><pre><code>public class MultiSelectListPreference</code></pre>A <code>Preference</code> that displays a list of entries as a dialog.</section>	https://developer.android.com/reference/android/support/v14/preference/MultiSelectListPreference.html
v14.preference.PreferenceFragment	A										<section class="prog__container"><pre><code>public abstract class PreferenceFragment</code></pre>Shows a hierarchy of <code>Preference</code> objects as lists. These preferences will automatically save to <code>SharedPreferences</code> as the user interacts with them. To retrieve an instance of <code>SharedPreferences</code> that the preference hierarchy in this fragment will use, call <code>getDefaultSharedPreferences(android.content.Context)</code> with a context in the same package as this fragment.</section>	https://developer.android.com/reference/android/support/v14/preference/PreferenceFragment.html
v14.preference.PreferenceFragment.OnPreferenceStartFragmentCallback	A										<section class="prog__container"><pre><code>public static interface PreferenceFragment.OnPreferenceStartFragmentCallback</code></pre>Interface that PreferenceFragment's containing activity should implement to be able to process preference items that wish to switch to a specified fragment.</section>	https://developer.android.com/reference/android/support/v14/preference/PreferenceFragment.OnPreferenceStartFragmentCallback.html
v14.preference.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/R.html
v14.preference.R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/R.attr.html
v14.preference.R.color	A										<section class="prog__container"><pre><code>public static final class R.color</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/R.color.html
v14.preference.R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/R.id.html
v14.preference.R.layout	A										<section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/R.layout.html
v14.preference.R.style	A										<section class="prog__container"><pre><code>public static final class R.style</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/R.style.html
v14.preference.R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/v14/preference/R.styleable.html
v14.preference.SwitchPreference	A										<section class="prog__container"><pre><code>public class SwitchPreference</code></pre>A <code>Preference</code> that provides a two-state toggleable option.</section>	https://developer.android.com/reference/android/support/v14/preference/SwitchPreference.html
v17.preference.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/R.html
v17.preference.R.color	A										<section class="prog__container"><pre><code>public static final class R.color</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/R.color.html
v17.preference.R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/R.dimen.html
v17.preference.R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/R.id.html
v17.preference.R.layout	A										<section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/R.layout.html
v17.preference.R.style	A										<section class="prog__container"><pre><code>public static final class R.style</code></pre></section>	https://developer.android.com/reference/android/support/v17/preference/R.style.html
v4.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v4/R.html
v4.app.ActionBarDrawerToggle	A										<section class="prog__container"><pre><code>public class ActionBarDrawerToggle</code></pre><p class="caution"><strong> This class is deprecated.</strong><br/> Please use ActionBarDrawerToggle in support-v7-appcompat.</section>	https://developer.android.com/reference/android/support/v4/app/ActionBarDrawerToggle.html
v4.app.ActionBarDrawerToggle.Delegate	A										<section class="prog__container"><pre><code>public static interface ActionBarDrawerToggle.Delegate</code></pre></section>	https://developer.android.com/reference/android/support/v4/app/ActionBarDrawerToggle.Delegate.html
v4.app.ActionBarDrawerToggle.DelegateProvider	A										<section class="prog__container"><pre><code>public static interface ActionBarDrawerToggle.DelegateProvider</code></pre>Allows an implementing Activity to return an <code>ActionBarDrawerToggle.Delegate</code> to use with ActionBarDrawerToggle.</section>	https://developer.android.com/reference/android/support/v4/app/ActionBarDrawerToggle.DelegateProvider.html
v4.app.ActivityCompat	A										<section class="prog__container"><pre><code>public class ActivityCompat</code></pre>Helper for accessing features in <code>Activity</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/app/ActivityCompat.html
v4.app.DialogFragment	A										<section class="prog__container"><pre><code>public class DialogFragment</code></pre>Static library support version of the framework's <code>DialogFragment</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>	https://developer.android.com/reference/android/support/v4/app/DialogFragment.html
v4.app.Fragment	A										<section class="prog__container"><pre><code>public class Fragment</code></pre>Static library support version of the framework's <code>Fragment</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework <code>Fragment</code> documentation for a class overview.</section>	https://developer.android.com/reference/android/support/v4/app/Fragment.html
v4.app.Fragment.InstantiationException	A										<section class="prog__container"><pre><code>public static class Fragment.InstantiationException</code></pre>Thrown by <code>instantiate(Context, String, Bundle)</code> when there is an instantiation failure.</section>	https://developer.android.com/reference/android/support/v4/app/Fragment.InstantiationException.html
v4.app.Fragment.SavedState	A										<section class="prog__container"><pre><code>public static class Fragment.SavedState</code></pre>State information that has been retrieved from a fragment instance through <code>FragmentManager.saveFragmentInstanceState</code>.</section>	https://developer.android.com/reference/android/support/v4/app/Fragment.SavedState.html
v4.app.FragmentContainer	A										<section class="prog__container"><pre><code>public abstract class FragmentContainer</code></pre>Callbacks to a <code>Fragment</code>'s container.</section>	https://developer.android.com/reference/android/support/v4/app/FragmentContainer.html
v4.app.FragmentController	A										<section class="prog__container"><pre><code>public class FragmentController</code></pre>Provides integration points with a <code>FragmentManager</code> for a fragment host.</section>	https://developer.android.com/reference/android/support/v4/app/FragmentController.html
v4.app.FragmentHostCallback	A										<section class="prog__container"><pre><code>public abstract class FragmentHostCallback</code></pre>Integration points with the Fragment host.</section>	https://developer.android.com/reference/android/support/v4/app/FragmentHostCallback.html
v4.app.FragmentManager	A										<section class="prog__container"><pre><code>public abstract class FragmentManager</code></pre>Static library support version of the framework's <code>FragmentManager</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework <code>FragmentManager</code> documentation for a class overview.</section>	https://developer.android.com/reference/android/support/v4/app/FragmentManager.html
v4.app.FragmentManager.BackStackEntry	A										<section class="prog__container"><pre><code>public static interface FragmentManager.BackStackEntry</code></pre>Representation of an entry on the fragment back stack, as created with <code>FragmentTransaction.addToBackStack()</code>. Entries can later be retrieved with <code>FragmentManager.getBackStackEntryAt()</code>.</section>	https://developer.android.com/reference/android/support/v4/app/FragmentManager.BackStackEntry.html
v4.app.FragmentManager.OnBackStackChangedListener	A										<section class="prog__container"><pre><code>public static interface FragmentManager.OnBackStackChangedListener</code></pre>Interface to watch for changes to the back stack.</section>	https://developer.android.com/reference/android/support/v4/app/FragmentManager.OnBackStackChangedListener.html
v4.app.FragmentManagerNonConfig	A										<section class="prog__container"><pre><code>public class FragmentManagerNonConfig</code></pre>FragmentManagerNonConfig stores the retained instance fragments across activity recreation events.</section>	https://developer.android.com/reference/android/support/v4/app/FragmentManagerNonConfig.html
v4.app.FragmentPagerAdapter	A										<section class="prog__container"><pre><code>public abstract class FragmentPagerAdapter</code></pre>Implementation of <code>PagerAdapter</code> that represents each page as a <code>Fragment</code> that is persistently kept in the fragment manager as long as the user can return to the page.</section>	https://developer.android.com/reference/android/support/v4/app/FragmentPagerAdapter.html
v4.app.FragmentStatePagerAdapter	A										<section class="prog__container"><pre><code>public abstract class FragmentStatePagerAdapter</code></pre>Implementation of <code>PagerAdapter</code> that uses a <code>Fragment</code> to manage each page. This class also handles saving and restoring of fragment's state.</section>	https://developer.android.com/reference/android/support/v4/app/FragmentStatePagerAdapter.html
v4.app.FragmentTabHost	A										<section class="prog__container"><pre><code>public class FragmentTabHost</code></pre>Special TabHost that allows the use of <code>Fragment</code> objects for its tab content. When placing this in a view hierarchy, after inflating the hierarchy you must call <code>setup(Context, FragmentManager, int)</code> to complete the initialization of the tab host.</section>	https://developer.android.com/reference/android/support/v4/app/FragmentTabHost.html
v4.app.FragmentTransaction	A										<section class="prog__container"><pre><code>public abstract class FragmentTransaction</code></pre>Static library support version of the framework's <code>FragmentTransaction</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>	https://developer.android.com/reference/android/support/v4/app/FragmentTransaction.html
v4.app.ListFragment	A										<section class="prog__container"><pre><code>public class ListFragment</code></pre>Static library support version of the framework's <code>ListFragment</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>	https://developer.android.com/reference/android/support/v4/app/ListFragment.html
v4.app.LoaderManager	A										<section class="prog__container"><pre><code>public abstract class LoaderManager</code></pre>Static library support version of the framework's <code>LoaderManager</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>	https://developer.android.com/reference/android/support/v4/app/LoaderManager.html
v4.app.LoaderManager.LoaderCallbacks	A										<section class="prog__container"><pre><code>public static interface LoaderManager.LoaderCallbacks</code></pre>Callback interface for a client to interact with the manager.</section>	https://developer.android.com/reference/android/support/v4/app/LoaderManager.LoaderCallbacks.html
v4.app.NotificationCompat	A										<section class="prog__container"><pre><code>public class NotificationCompat</code></pre>Helper for accessing features in <code>Notification</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.html
v4.app.NotificationCompat.Builder	A										<section class="prog__container"><pre><code>public static class NotificationCompat.Builder</code></pre>Builder class for <code>NotificationCompat</code> objects. Allows easier control over all the flags, as well as help constructing the typical notification layouts.</section>	https://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html
v4.app.RemoteInput	A										<section class="prog__container"><pre><code>public final class RemoteInput</code></pre>Helper for using the <code>RemoteInput</code> API introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/app/RemoteInput.html
v4.app.RemoteInput.Builder	A										<section class="prog__container"><pre><code>public static final class RemoteInput.Builder</code></pre>Builder class for <code>RemoteInput</code> objects.</section>	https://developer.android.com/reference/android/support/v4/app/RemoteInput.Builder.html
v4.app.SharedElementCallback	A										<section class="prog__container"><pre><code>public abstract class SharedElementCallback</code></pre>Listener provided in <code>setEnterSharedElementCallback(SharedElementCallback)</code> and <code>setExitSharedElementCallback(SharedElementCallback)</code> to monitor the Activity transitions. The events can be used to customize Activity Transition behavior.</section>	https://developer.android.com/reference/android/support/v4/app/SharedElementCallback.html
v4.app.SharedElementCallback.OnSharedElementsReadyListener	A										<section class="prog__container"><pre><code>public static interface SharedElementCallback.OnSharedElementsReadyListener</code></pre>Listener to be called after <code>onSharedElementsArrived(List, List, OnSharedElementsReadyListener)</code> when the shared elements are ready to be hidden in the source Activity and shown in the destination Activity.</section>	https://developer.android.com/reference/android/support/v4/app/SharedElementCallback.OnSharedElementsReadyListener.html
v4.app.TaskStackBuilder	A										<section class="prog__container"><pre><code>public final class TaskStackBuilder</code></pre>Utility class for constructing synthetic back stacks for cross-task navigation on Android 3.0 and newer.</section>	https://developer.android.com/reference/android/support/v4/app/TaskStackBuilder.html
v4.content.AsyncTaskLoader	A										<section class="prog__container"><pre><code>public abstract class AsyncTaskLoader</code></pre>Static library support version of the framework's <code>AsyncTaskLoader</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>	https://developer.android.com/reference/android/support/v4/content/AsyncTaskLoader.html
v4.content.CursorLoader	A										<section class="prog__container"><pre><code>public class CursorLoader</code></pre>Static library support version of the framework's <code>CursorLoader</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>	https://developer.android.com/reference/android/support/v4/content/CursorLoader.html
v4.content.Loader	A										<section class="prog__container"><pre><code>public class Loader</code></pre>Static library support version of the framework's <code>Loader</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>	https://developer.android.com/reference/android/support/v4/content/Loader.html
v4.content.Loader.ForceLoadContentObserver	A										<section class="prog__container"><pre><code>public final class Loader.ForceLoadContentObserver</code></pre>An implementation of a ContentObserver that takes care of connecting it to the Loader to have the loader re-load its data when the observer is told it has changed. You do not normally need to use this yourself; it is used for you by <code>CursorLoader</code> to take care of executing an update when the cursor's backing data changes.</section>	https://developer.android.com/reference/android/support/v4/content/Loader.ForceLoadContentObserver.html
v4.content.Loader.OnLoadCanceledListener	A										<section class="prog__container"><pre><code>public static interface Loader.OnLoadCanceledListener</code></pre>Interface that is implemented to discover when a Loader has been canceled before it finished loading its data. You do not normally need to implement this yourself; it is used in the implementation of <code>LoaderManager</code> to find out when a Loader it is managing has been canceled so that it can schedule the next Loader. This interface should only be used if a Loader is not being used in conjunction with LoaderManager.</section>	https://developer.android.com/reference/android/support/v4/content/Loader.OnLoadCanceledListener.html
v4.content.Loader.OnLoadCompleteListener	A										<section class="prog__container"><pre><code>public static interface Loader.OnLoadCompleteListener</code></pre>Interface that is implemented to discover when a Loader has finished loading its data. You do not normally need to implement this yourself; it is used in the implementation of <code>LoaderManager</code> to find out when a Loader it is managing has completed so that this can be reported to its client. This interface should only be used if a Loader is not being used in conjunction with LoaderManager.</section>	https://developer.android.com/reference/android/support/v4/content/Loader.OnLoadCompleteListener.html
v4.os.CancellationSignal	A										<section class="prog__container"><pre><code>public final class CancellationSignal</code></pre>Static library support version of the framework's <code>CancellationSignal</code>. Used to write apps that run on platforms prior to Android 4.1. See the framework SDK documentation for a class overview.</section>	https://developer.android.com/reference/android/support/v4/os/CancellationSignal.html
v4.os.CancellationSignal.OnCancelListener	A										<section class="prog__container"><pre><code>public static interface CancellationSignal.OnCancelListener</code></pre>Listens for cancellation.</section>	https://developer.android.com/reference/android/support/v4/os/CancellationSignal.OnCancelListener.html
v4.os.OperationCanceledException	A										<section class="prog__container"><pre><code>public class OperationCanceledException</code></pre>An exception type that is thrown when an operation in progress is canceled.</section>	https://developer.android.com/reference/android/support/v4/os/OperationCanceledException.html
v4.text.BidiFormatter	A										<section class="prog__container"><pre><code>public final class BidiFormatter</code></pre>Utility class for formatting text for display in a potentially opposite-directionality context without garbling. The directionality of the context is set at formatter creation and the directionality of the text can be either estimated or passed in when known. Provides the following functionality:</section>	https://developer.android.com/reference/android/support/v4/text/BidiFormatter.html
v4.text.BidiFormatter.Builder	A										<section class="prog__container"><pre><code>public static final class BidiFormatter.Builder</code></pre>A class for building a BidiFormatter with non-default options.</section>	https://developer.android.com/reference/android/support/v4/text/BidiFormatter.Builder.html
v4.util.ArrayMap	A										<section class="prog__container"><pre><code>public class ArrayMap</code></pre>ArrayMap is a generic key-&gt;value mapping data structure that is designed to be more memory efficient than a traditional <code>HashMap</code>, this implementation is a version of the platform's <code>ArrayMap</code> that can be used on older versions of the platform. It keeps its mappings in an array data structure -- an integer array of hash codes for each item, and an Object array of the key/value pairs. This allows it to avoid having to create an extra object for every entry put in to the map, and it also tries to control the growth of the size of these arrays more aggressively (since growing them only requires copying the entries in the array, not rebuilding a hash map).</section>	https://developer.android.com/reference/android/support/v4/util/ArrayMap.html
v4.util.ArraySet	A										<section class="prog__container"><pre><code>public final class ArraySet</code></pre>ArraySet is a generic set data structure that is designed to be more memory efficient than a traditional <code>HashSet</code>. The design is very similar to <code>ArrayMap</code>, with all of the caveats described there. This implementation is separate from ArrayMap, however, so the Object array contains only one item for each entry in the set (instead of a pair for a mapping).</section>	https://developer.android.com/reference/android/support/v4/util/ArraySet.html
v4.util.AtomicFile	A										<section class="prog__container"><pre><code>public class AtomicFile</code></pre>Static library support version of the framework's <code>AtomicFile</code>, a helper class for performing atomic operations on a file by creating a backup file until a write has successfully completed.</section>	https://developer.android.com/reference/android/support/v4/util/AtomicFile.html
v4.util.LongSparseArray	A										<section class="prog__container"><pre><code>public class LongSparseArray</code></pre>SparseArray mapping longs to Objects, a version of the platform's <code>LongSparseArray</code> that can be used on older versions of the platform. Unlike a normal array of Objects, there can be gaps in the indices. It is intended to be more memory efficient than using a HashMap to map Longs to Objects, both because it avoids auto-boxing keys and its data structure doesn't rely on an extra entry object for each mapping.</section>	https://developer.android.com/reference/android/support/v4/util/LongSparseArray.html
v4.util.LruCache	A										<section class="prog__container"><pre><code>public class LruCache</code></pre>Static library version of <code>LruCache</code>. Used to write apps that run on API levels prior to 12. When running on API level 12 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>	https://developer.android.com/reference/android/support/v4/util/LruCache.html
v4.util.Pair	A										<section class="prog__container"><pre><code>public class Pair</code></pre>Container to ease passing around a tuple of two objects. This object provides a sensible implementation of equals(), returning true if equals() is true on each of the contained objects.</section>	https://developer.android.com/reference/android/support/v4/util/Pair.html
v4.view.AbsSavedState	A										<section class="prog__container"><pre><code>public abstract class AbsSavedState</code></pre>A <code>Parcelable</code> implementation that should be used by inheritance hierarchies to ensure the state of all classes along the chain is saved.</section>	https://developer.android.com/reference/android/support/v4/view/AbsSavedState.html
v4.view.ActionProvider	A										<section class="prog__container"><pre><code>public abstract class ActionProvider</code></pre>This class is a mediator for accomplishing a given task, for example sharing a file. It is responsible for creating a view that performs an action that accomplishes the task. This class also implements other functions such a performing a default action. <p class="note"><strong>Note:</strong> This class is included in the support library for compatibility with API level 4 and higher. If you're developing your app for API level 14 and higher <em>only</em>, you should instead use the framework <code>ActionProvider</code> class.</section>	https://developer.android.com/reference/android/support/v4/view/ActionProvider.html
v4.view.ActionProvider.VisibilityListener	A										<section class="prog__container"><pre><code>public static interface ActionProvider.VisibilityListener</code></pre>Listens to changes in visibility as reported by <code>refreshVisibility()</code>.</section>	https://developer.android.com/reference/android/support/v4/view/ActionProvider.VisibilityListener.html
v4.view.ViewCompat	A										<section class="prog__container"><pre><code>public class ViewCompat</code></pre>Helper for accessing features in <code>View</code> introduced after API level 4 in a backwards compatible fashion.</section>	https://developer.android.com/reference/android/support/v4/view/ViewCompat.html
v4.widget.AutoScrollHelper	A										<section class="prog__container"><pre><code>public abstract class AutoScrollHelper</code></pre>AutoScrollHelper is a utility class for adding automatic edge-triggered scrolling to Views.</section>	https://developer.android.com/reference/android/support/v4/widget/AutoScrollHelper.html
v4.widget.CursorAdapter	A										<section class="prog__container"><pre><code>public abstract class CursorAdapter</code></pre>Static library support version of the framework's <code>CursorAdapter</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>	https://developer.android.com/reference/android/support/v4/widget/CursorAdapter.html
v4.widget.ExploreByTouchHelper	A										<section class="prog__container"><pre><code>public abstract class ExploreByTouchHelper</code></pre>ExploreByTouchHelper is a utility class for implementing accessibility support in custom <code>View</code>s that represent a collection of View-like logical items. It extends <code>AccessibilityNodeProviderCompat</code> and simplifies many aspects of providing information to accessibility services and managing accessibility focus. This class does not currently support hierarchies of logical items.</section>	https://developer.android.com/reference/android/support/v4/widget/ExploreByTouchHelper.html
v4.widget.ResourceCursorAdapter	A										<section class="prog__container"><pre><code>public abstract class ResourceCursorAdapter</code></pre>Static library support version of the framework's <code>ResourceCursorAdapter</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>	https://developer.android.com/reference/android/support/v4/widget/ResourceCursorAdapter.html
v4.widget.SimpleCursorAdapter	A										<section class="prog__container"><pre><code>public class SimpleCursorAdapter</code></pre>Static library support version of the framework's <code>SimpleCursorAdapter</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>	https://developer.android.com/reference/android/support/v4/widget/SimpleCursorAdapter.html
v4.widget.SimpleCursorAdapter.CursorToStringConverter	A										<section class="prog__container"><pre><code>public static interface SimpleCursorAdapter.CursorToStringConverter</code></pre>This class can be used by external clients of SimpleCursorAdapter to define how the Cursor should be converted to a String.</section>	https://developer.android.com/reference/android/support/v4/widget/SimpleCursorAdapter.CursorToStringConverter.html
v4.widget.SimpleCursorAdapter.ViewBinder	A										<section class="prog__container"><pre><code>public static interface SimpleCursorAdapter.ViewBinder</code></pre>This class can be used by external clients of SimpleCursorAdapter to bind values fom the Cursor to views. You should use this class to bind values from the Cursor to views that are not directly supported by SimpleCursorAdapter or to change the way binding occurs for views supported by SimpleCursorAdapter.</section>	https://developer.android.com/reference/android/support/v4/widget/SimpleCursorAdapter.ViewBinder.html
v4.widget.Space	A										<section class="prog__container"><pre><code>public class Space</code></pre>Space is a lightweight <code>View</code> subclass that may be used to create gaps between components in general purpose layouts.</section>	https://developer.android.com/reference/android/support/v4/widget/Space.html
v7.app.ActionBar	A										<section class="prog__container"><pre><code>public abstract class ActionBar</code></pre>A primary toolbar within the activity that may display the activity title, application-level navigation affordances, and other interactive items.</section>	https://developer.android.com/reference/android/support/v7/app/ActionBar.html
v7.app.ActionBar.LayoutParams	A										<section class="prog__container"><pre><code>public static class ActionBar.LayoutParams</code></pre>Per-child layout information associated with action bar custom views.</section>	https://developer.android.com/reference/android/support/v7/app/ActionBar.LayoutParams.html
v7.app.ActionBar.OnMenuVisibilityListener	A										<section class="prog__container"><pre><code>public static interface ActionBar.OnMenuVisibilityListener</code></pre>Listener for receiving events when action bar menus are shown or hidden.</section>	https://developer.android.com/reference/android/support/v7/app/ActionBar.OnMenuVisibilityListener.html
v7.app.ActionBar.OnNavigationListener	A										<section class="prog__container"><pre><code>public static interface ActionBar.OnNavigationListener</code></pre><p class="caution"><strong> This interface is deprecated.</strong><br/> Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead.</section>	https://developer.android.com/reference/android/support/v7/app/ActionBar.OnNavigationListener.html
v7.app.ActionBar.Tab	A										<section class="prog__container"><pre><code>public static abstract class ActionBar.Tab</code></pre><p class="caution"><strong> This class is deprecated.</strong><br/> Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead.</section>	https://developer.android.com/reference/android/support/v7/app/ActionBar.Tab.html
v7.app.ActionBar.TabListener	A										<section class="prog__container"><pre><code>public static interface ActionBar.TabListener</code></pre><p class="caution"><strong> This interface is deprecated.</strong><br/> Action bar navigation modes are deprecated and not supported by inline toolbar action bars. Consider using other common navigation patterns instead.</section>	https://developer.android.com/reference/android/support/v7/app/ActionBar.TabListener.html
v7.app.ActionBarDrawerToggle	A										<section class="prog__container"><pre><code>public class ActionBarDrawerToggle</code></pre>This class provides a handy way to tie together the functionality of <code>DrawerLayout</code> and the framework <code>ActionBar</code> to implement the recommended design for navigation drawers.</section>	https://developer.android.com/reference/android/support/v7/app/ActionBarDrawerToggle.html
v7.app.ActionBarDrawerToggle.Delegate	A										<section class="prog__container"><pre><code>public static interface ActionBarDrawerToggle.Delegate</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/ActionBarDrawerToggle.Delegate.html
v7.app.ActionBarDrawerToggle.DelegateProvider	A										<section class="prog__container"><pre><code>public static interface ActionBarDrawerToggle.DelegateProvider</code></pre>Allows an implementing Activity to return an <code>ActionBarDrawerToggle.Delegate</code> to use with ActionBarDrawerToggle.</section>	https://developer.android.com/reference/android/support/v7/app/ActionBarDrawerToggle.DelegateProvider.html
v7.app.AlertDialog	A										<section class="prog__container"><pre><code>public class AlertDialog</code></pre>A subclass of Dialog that can display one, two or three buttons. If you only want to display a String in this dialog box, use the setMessage() method. If you want to display a more complex view, look up the FrameLayout called "custom" and add your view to it: <pre> FrameLayout fl = (FrameLayout) findViewById(android.R.id.custom); fl.addView(myView, new LayoutParams(MATCH_PARENT, WRAP_CONTENT)); </pre></section>	https://developer.android.com/reference/android/support/v7/app/AlertDialog.html
v7.app.AlertDialog.Builder	A										<section class="prog__container"><pre><code>public static class AlertDialog.Builder</code></pre></section>	https://developer.android.com/reference/android/support/v7/app/AlertDialog.Builder.html
v7.app.MediaRouteActionProvider	A										<section class="prog__container"><pre><code>public class MediaRouteActionProvider</code></pre>The media route action provider displays a <code>media route button</code> in the application's <code>ActionBar</code> to allow the user to select routes and to control the currently selected route.</section>	https://developer.android.com/reference/android/support/v7/app/MediaRouteActionProvider.html
v7.app.MediaRouteButton	A										<section class="prog__container"><pre><code>public class MediaRouteButton</code></pre>The media route button allows the user to select routes and to control the currently selected route.</section>	https://developer.android.com/reference/android/support/v7/app/MediaRouteButton.html
v7.app.NotificationCompat	A										<section class="prog__container"><pre><code>public class NotificationCompat</code></pre>An extension of <code>NotificationCompat</code> which supports <code>NotificationCompat.MediaStyle</code>, <code>NotificationCompat.DecoratedCustomViewStyle</code>, and <code>NotificationCompat.DecoratedMediaCustomViewStyle</code>. You should start using this variant if you need support any of these styles.</section>	https://developer.android.com/reference/android/support/v7/app/NotificationCompat.html
v7.app.NotificationCompat.Builder	A										<section class="prog__container"><pre><code>public static class NotificationCompat.Builder</code></pre>See <code>NotificationCompat</code>. In addition to the builder in v4, this builder also supports <code>NotificationCompat.MediaStyle</code>.</section>	https://developer.android.com/reference/android/support/v7/app/NotificationCompat.Builder.html
v7.media.MediaRouter	A										<section class="prog__container"><pre><code>public final class MediaRouter</code></pre>MediaRouter allows applications to control the routing of media channels and streams from the current device to external speakers and destination devices.</section>	https://developer.android.com/reference/android/support/v7/media/MediaRouter.html
v7.media.MediaRouter.Callback	A										<section class="prog__container"><pre><code>public static abstract class MediaRouter.Callback</code></pre>Interface for receiving events about media routing changes. All methods of this interface will be called from the application's main thread.</section>	https://developer.android.com/reference/android/support/v7/media/MediaRouter.Callback.html
v7.media.MediaRouter.RouteInfo	A										<section class="prog__container"><pre><code>public static class MediaRouter.RouteInfo</code></pre>Provides information about a media route.</section>	https://developer.android.com/reference/android/support/v7/media/MediaRouter.RouteInfo.html
v7.preference.CheckBoxPreference	A										<section class="prog__container"><pre><code>public class CheckBoxPreference</code></pre>A <code>Preference</code> that provides checkbox widget functionality.</section>	https://developer.android.com/reference/android/support/v7/preference/CheckBoxPreference.html
v7.preference.DialogPreference	A										<section class="prog__container"><pre><code>public abstract class DialogPreference</code></pre>A base class for <code>Preference</code> objects that are dialog-based. These preferences will, when clicked, open a dialog showing the actual preference controls.</section>	https://developer.android.com/reference/android/support/v7/preference/DialogPreference.html
v7.preference.EditTextPreference	A										<section class="prog__container"><pre><code>public class EditTextPreference</code></pre>A <code>Preference</code> that allows for string input.</section>	https://developer.android.com/reference/android/support/v7/preference/EditTextPreference.html
v7.preference.ListPreference	A										<section class="prog__container"><pre><code>public class ListPreference</code></pre>A <code>Preference</code> that displays a list of entries as a dialog.</section>	https://developer.android.com/reference/android/support/v7/preference/ListPreference.html
v7.preference.Preference	A										<section class="prog__container"><pre><code>public class Preference</code></pre>Represents the basic Preference UI building block displayed by a <code>PreferenceFragmentCompat</code> in the form of a <code>RecyclerView</code>. This class provides data for the <code>View</code> to be displayed in the list and associates with a <code>SharedPreferences</code> to store/retrieve the preference data.</section>	https://developer.android.com/reference/android/support/v7/preference/Preference.html
v7.preference.Preference.BaseSavedState	A										<section class="prog__container"><pre><code>public static class Preference.BaseSavedState</code></pre>A base class for managing the instance state of a <code>Preference</code>.</section>	https://developer.android.com/reference/android/support/v7/preference/Preference.BaseSavedState.html
v7.preference.Preference.OnPreferenceChangeListener	A										<section class="prog__container"><pre><code>public static interface Preference.OnPreferenceChangeListener</code></pre>Interface definition for a callback to be invoked when the value of this <code>Preference</code> has been changed by the user and is about to be set and/or persisted. This gives the client a chance to prevent setting and/or persisting the value.</section>	https://developer.android.com/reference/android/support/v7/preference/Preference.OnPreferenceChangeListener.html
v7.preference.Preference.OnPreferenceClickListener	A										<section class="prog__container"><pre><code>public static interface Preference.OnPreferenceClickListener</code></pre>Interface definition for a callback to be invoked when a <code>Preference</code> is clicked.</section>	https://developer.android.com/reference/android/support/v7/preference/Preference.OnPreferenceClickListener.html
v7.preference.PreferenceCategory	A										<section class="prog__container"><pre><code>public class PreferenceCategory</code></pre>Used to group <code>Preference</code> objects and provide a disabled title above the group. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceCategory.html
v7.preference.PreferenceGroup	A										<section class="prog__container"><pre><code>public abstract class PreferenceGroup</code></pre>A container for multiple <code>Preference</code> objects. It is a base class for Preference objects that are parents, such as <code>PreferenceCategory</code> and <code>PreferenceScreen</code>. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceGroup.html
v7.preference.PreferenceManager	A										<section class="prog__container"><pre><code>public class PreferenceManager</code></pre>Used to help create <code>Preference</code> hierarchies from activities or XML.</section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceManager.html
v7.preference.PreferenceScreen	A										<section class="prog__container"><pre><code>public final class PreferenceScreen</code></pre>Represents a top-level <code>Preference</code> that is the root of a Preference hierarchy. A <code>PreferenceFragmentCompat</code> points to an instance of this class to show the preferences. To instantiate this class, use <code>createPreferenceScreen(android.content.Context)</code>. <ul> This class can appear in two places: <li> When a <code>PreferenceFragmentCompat</code> points to this, it is used as the root and is not shown (only the contained preferences are shown). <li> When it appears inside another preference hierarchy, it is shown and serves as the gateway to another screen of preferences (either by showing another screen of preferences as a <code>Dialog</code> or via a <code>startActivity(android.content.Intent)</code> from the <code>getIntent()</code>). The children of this <code>PreferenceScreen</code> are NOT shown in the screen that this <code>PreferenceScreen</code> is shown in. Instead, a separate screen will be shown when this preference is clicked. </li></li></ul></section>	https://developer.android.com/reference/android/support/v7/preference/PreferenceScreen.html
v7.preference.R	A										<section class="prog__container"><pre><code>public final class R</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/R.html
v7.preference.R.attr	A										<section class="prog__container"><pre><code>public static final class R.attr</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/R.attr.html
v7.preference.R.dimen	A										<section class="prog__container"><pre><code>public static final class R.dimen</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/R.dimen.html
v7.preference.R.id	A										<section class="prog__container"><pre><code>public static final class R.id</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/R.id.html
v7.preference.R.layout	A										<section class="prog__container"><pre><code>public static final class R.layout</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/R.layout.html
v7.preference.R.style	A										<section class="prog__container"><pre><code>public static final class R.style</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/R.style.html
v7.preference.R.styleable	A										<section class="prog__container"><pre><code>public static final class R.styleable</code></pre></section>	https://developer.android.com/reference/android/support/v7/preference/R.styleable.html
v7.preference.TwoStatePreference	A										<section class="prog__container"><pre><code>public abstract class TwoStatePreference</code></pre>Common base class for preferences that have two selectable states, persist a boolean value in SharedPreferences, and may have dependent preferences that are enabled/disabled based on the current state.</section>	https://developer.android.com/reference/android/support/v7/preference/TwoStatePreference.html
v7.view.ActionMode	A										<section class="prog__container"><pre><code>public abstract class ActionMode</code></pre>Represents a contextual mode of the user interface. Action modes can be used to provide alternative interaction modes and replace parts of the normal UI until finished. Examples of good action modes include text selection and contextual actions. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/support/v7/view/ActionMode.html
v7.view.ActionMode.Callback	A										<section class="prog__container"><pre><code>public static interface ActionMode.Callback</code></pre>Callback interface for action modes. Supplied to <code>startSupportActionMode(Callback)</code> (Callback)}, a Callback configures and handles events raised by a user's interaction with an action mode.</section>	https://developer.android.com/reference/android/support/v7/view/ActionMode.Callback.html
v7.view.CollapsibleActionView	A										<section class="prog__container"><pre><code>public interface CollapsibleActionView</code></pre>When a <code>View</code> implements this interface it will receive callbacks when expanded or collapsed as an action view alongside the optional, app-specified callbacks to <code>MenuItemCompat.OnActionExpandListener</code>.</section>	https://developer.android.com/reference/android/support/v7/view/CollapsibleActionView.html
v7.widget.ActionMenuView	A										<section class="prog__container"><pre><code>public class ActionMenuView</code></pre>ActionMenuView is a presentation of a series of menu options as a View. It provides several top level options as action buttons while spilling remaining options over as items in an overflow menu. This allows applications to present packs of actions inline with specific or repeating content.</section>	https://developer.android.com/reference/android/support/v7/widget/ActionMenuView.html
v7.widget.ActionMenuView.LayoutParams	A										<section class="prog__container"><pre><code>public static class ActionMenuView.LayoutParams</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/ActionMenuView.LayoutParams.html
v7.widget.ActionMenuView.OnMenuItemClickListener	A										<section class="prog__container"><pre><code>public static interface ActionMenuView.OnMenuItemClickListener</code></pre>Interface responsible for receiving menu item click events if the items themselves do not have individual item click listeners.</section>	https://developer.android.com/reference/android/support/v7/widget/ActionMenuView.OnMenuItemClickListener.html
v7.widget.GridLayout	A										<section class="prog__container"><pre><code>public class GridLayout</code></pre>A layout that places its children in a rectangular <em>grid</em>.</section>	https://developer.android.com/reference/android/support/v7/widget/GridLayout.html
v7.widget.GridLayout.Alignment	A										<section class="prog__container"><pre><code>public static abstract class GridLayout.Alignment</code></pre>Alignments specify where a view should be placed within a cell group and what size it should be.</section>	https://developer.android.com/reference/android/support/v7/widget/GridLayout.Alignment.html
v7.widget.GridLayout.LayoutParams	A										<section class="prog__container"><pre><code>public static class GridLayout.LayoutParams</code></pre>Layout information associated with each of the children of a GridLayout.</section>	https://developer.android.com/reference/android/support/v7/widget/GridLayout.LayoutParams.html
v7.widget.GridLayout.Spec	A										<section class="prog__container"><pre><code>public static class GridLayout.Spec</code></pre>A Spec defines the horizontal or vertical characteristics of a group of cells. Each spec. defines the <em>grid indices</em> and <em>alignment</em> along the appropriate axis.</section>	https://developer.android.com/reference/android/support/v7/widget/GridLayout.Spec.html
v7.widget.ListPopupWindow	A										<section class="prog__container"><pre><code>public class ListPopupWindow</code></pre>Static library support version of the framework's <code>ListPopupWindow</code>. Used to write apps that run on platforms prior to Android L. When running on Android L or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>	https://developer.android.com/reference/android/support/v7/widget/ListPopupWindow.html
v7.widget.PopupMenu	A										<section class="prog__container"><pre><code>public class PopupMenu</code></pre>Static library support version of the framework's <code>PopupMenu</code>. Used to write apps that run on platforms prior to Android 3.0. When running on Android 3.0 or above, this implementation is still used; it does not try to switch to the framework's implementation. See the framework SDK documentation for a class overview.</section>	https://developer.android.com/reference/android/support/v7/widget/PopupMenu.html
v7.widget.PopupMenu.OnDismissListener	A										<section class="prog__container"><pre><code>public static interface PopupMenu.OnDismissListener</code></pre>Callback interface used to notify the application that the menu has closed.</section>	https://developer.android.com/reference/android/support/v7/widget/PopupMenu.OnDismissListener.html
v7.widget.PopupMenu.OnMenuItemClickListener	A										<section class="prog__container"><pre><code>public static interface PopupMenu.OnMenuItemClickListener</code></pre>Interface responsible for receiving menu item click events if the items themselves do not have individual item click listeners.</section>	https://developer.android.com/reference/android/support/v7/widget/PopupMenu.OnMenuItemClickListener.html
v7.widget.SearchView	A										<section class="prog__container"><pre><code>public class SearchView</code></pre>A widget that provides a user interface for the user to enter a search query and submit a request to a search provider. Shows a list of query suggestions or results, if available, and allows the user to pick a suggestion or result to launch into. <p class="note"><strong>Note:</strong> This class is included in the support library for compatibility with API level 7 and higher. If you're developing your app for API level 11 and higher <em>only</em>, you should instead use the framework <code>SearchView</code> class.</section>	https://developer.android.com/reference/android/support/v7/widget/SearchView.html
v7.widget.SearchView.OnCloseListener	A										<section class="prog__container"><pre><code>public static interface SearchView.OnCloseListener</code></pre></section>	https://developer.android.com/reference/android/support/v7/widget/SearchView.OnCloseListener.html
v7.widget.SearchView.OnQueryTextListener	A										<section class="prog__container"><pre><code>public static interface SearchView.OnQueryTextListener</code></pre>Callbacks for changes to the query text.</section>	https://developer.android.com/reference/android/support/v7/widget/SearchView.OnQueryTextListener.html
v7.widget.SearchView.OnSuggestionListener	A										<section class="prog__container"><pre><code>public static interface SearchView.OnSuggestionListener</code></pre>Callback interface for selection events on suggestions. These callbacks are only relevant when a SearchableInfo has been specified by <code>setSearchableInfo(SearchableInfo)</code>.</section>	https://developer.android.com/reference/android/support/v7/widget/SearchView.OnSuggestionListener.html
v7.widget.ShareActionProvider	A										<section class="prog__container"><pre><code>public class ShareActionProvider</code></pre>Provides a share action, which is suitable for an activity's app bar. Creates views that enable data sharing. If the provider appears in the overflow menu, it creates a submenu with the appropriate sharing actions. <h3 id="add-share-action">Adding a share action</h3></section>	https://developer.android.com/reference/android/support/v7/widget/ShareActionProvider.html
v7.widget.ShareActionProvider.OnShareTargetSelectedListener	A										<section class="prog__container"><pre><code>public static interface ShareActionProvider.OnShareTargetSelectedListener</code></pre>Listener for the event of selecting a share target.</section>	https://developer.android.com/reference/android/support/v7/widget/ShareActionProvider.OnShareTargetSelectedListener.html
v7.widget.ThemedSpinnerAdapter	A										<section class="prog__container"><pre><code>public interface ThemedSpinnerAdapter</code></pre>An extension of SpinnerAdapter that is capable of inflating drop-down views against a different theme than normal views.</section>	https://developer.android.com/reference/android/support/v7/widget/ThemedSpinnerAdapter.html
v7.widget.Toolbar	A										<section class="prog__container"><pre><code>public class Toolbar</code></pre>A standard toolbar for use within application content.</section>	https://developer.android.com/reference/android/support/v7/widget/Toolbar.html
v7.widget.Toolbar.LayoutParams	A										<section class="prog__container"><pre><code>public static class Toolbar.LayoutParams</code></pre>Layout information for child views of Toolbars.</section>	https://developer.android.com/reference/android/support/v7/widget/Toolbar.LayoutParams.html
v7.widget.Toolbar.OnMenuItemClickListener	A										<section class="prog__container"><pre><code>public static interface Toolbar.OnMenuItemClickListener</code></pre>Interface responsible for receiving menu item click events if the items themselves do not have individual item click listeners.</section>	https://developer.android.com/reference/android/support/v7/widget/Toolbar.OnMenuItemClickListener.html
v8.renderscript.Allocation	A										<section class="prog__container"><pre><code>public class Allocation</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Allocation.html
v8.renderscript.Allocation.MipmapControl	A										<section class="prog__container"><pre><code>public static final enum Allocation.MipmapControl</code></pre>Controls mipmap behavior when using the bitmap creation and update functions.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Allocation.MipmapControl.html
v8.renderscript.BaseObj	A										<section class="prog__container"><pre><code>public class BaseObj</code></pre>BaseObj is the base class for all RenderScript objects owned by a RS context. It is responsible for lifetime management and resource tracking. This class should not be used by a user application.</section>	https://developer.android.com/reference/android/support/v8/renderscript/BaseObj.html
v8.renderscript.Byte2	A										<section class="prog__container"><pre><code>public class Byte2</code></pre>Class for exposing the native RenderScript byte2 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Byte2.html
v8.renderscript.Byte3	A										<section class="prog__container"><pre><code>public class Byte3</code></pre>Class for exposing the native RenderScript byte3 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Byte3.html
v8.renderscript.Byte4	A										<section class="prog__container"><pre><code>public class Byte4</code></pre>Class for exposing the native RenderScript byte4 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Byte4.html
v8.renderscript.Double2	A										<section class="prog__container"><pre><code>public class Double2</code></pre>Class for exposing the native RenderScript double2 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Double2.html
v8.renderscript.Double3	A										<section class="prog__container"><pre><code>public class Double3</code></pre>Class for exposing the native RenderScript double3 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Double3.html
v8.renderscript.Double4	A										<section class="prog__container"><pre><code>public class Double4</code></pre>Class for exposing the native RenderScript double4 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Double4.html
v8.renderscript.Element	A										<section class="prog__container"><pre><code>public class Element</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Element.html
v8.renderscript.Element.Builder	A										<section class="prog__container"><pre><code>public static class Element.Builder</code></pre>Builder class for producing complex elements with matching field and name pairs. The builder starts empty. The order in which elements are added is retained for the layout in memory.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Element.Builder.html
v8.renderscript.Element.DataKind	A										<section class="prog__container"><pre><code>public static final enum Element.DataKind</code></pre>The special interpretation of the data if required. This is primarly useful for graphical data. USER indicates no special interpretation is expected. PIXEL is used in conjunction with the standard data types for representing texture formats.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Element.DataKind.html
v8.renderscript.Element.DataType	A										<section class="prog__container"><pre><code>public static final enum Element.DataType</code></pre>DataType represents the basic type information for a basic element. The naming convention follows. For numeric types it is FLOAT, SIGNED, or UNSIGNED followed by the _BITS where BITS is the size of the data. BOOLEAN is a true / false (1,0) represented in an 8 bit container. The UNSIGNED variants with multiple bit definitions are for packed graphical data formats and represent vectors with per vector member sizes which are treated as a single unit for packing and alignment purposes. MATRIX the three matrix types contain FLOAT_32 elements and are treated as 32 bits for alignment purposes. RS_* objects. 32 bit opaque handles.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Element.DataType.html
v8.renderscript.FieldPacker	A										<section class="prog__container"><pre><code>public class FieldPacker</code></pre>Utility class for packing arguments and structures from Android system objects to RenderScript objects. This class is only intended to be used to support the reflected code generated by the RS tool chain. It should not be called directly.</section>	https://developer.android.com/reference/android/support/v8/renderscript/FieldPacker.html
v8.renderscript.Float2	A										<section class="prog__container"><pre><code>public class Float2</code></pre>Class for exposing the native RenderScript float2 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Float2.html
v8.renderscript.Float3	A										<section class="prog__container"><pre><code>public class Float3</code></pre>Class for exposing the native RenderScript float2 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Float3.html
v8.renderscript.Float4	A										<section class="prog__container"><pre><code>public class Float4</code></pre>Class for exposing the native RenderScript float2 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Float4.html
v8.renderscript.Int2	A										<section class="prog__container"><pre><code>public class Int2</code></pre>Class for exposing the native RenderScript int2 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Int2.html
v8.renderscript.Int3	A										<section class="prog__container"><pre><code>public class Int3</code></pre>Class for exposing the native RenderScript int3 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Int3.html
v8.renderscript.Int4	A										<section class="prog__container"><pre><code>public class Int4</code></pre>Class for exposing the native RenderScript int4 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Int4.html
v8.renderscript.Long2	A										<section class="prog__container"><pre><code>public class Long2</code></pre>Class for exposing the native RenderScript long2 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Long2.html
v8.renderscript.Long3	A										<section class="prog__container"><pre><code>public class Long3</code></pre>Class for exposing the native RenderScript long3 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Long3.html
v8.renderscript.Long4	A										<section class="prog__container"><pre><code>public class Long4</code></pre>Class for exposing the native RenderScript long4 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Long4.html
v8.renderscript.Matrix2f	A										<section class="prog__container"><pre><code>public class Matrix2f</code></pre>Class for exposing the native RenderScript rs_matrix2x2 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Matrix2f.html
v8.renderscript.Matrix3f	A										<section class="prog__container"><pre><code>public class Matrix3f</code></pre>Class for exposing the native RenderScript rs_matrix3x3 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Matrix3f.html
v8.renderscript.Matrix4f	A										<section class="prog__container"><pre><code>public class Matrix4f</code></pre>Class for exposing the native RenderScript rs_matrix4x4 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Matrix4f.html
v8.renderscript.RSDriverException	A										<section class="prog__container"><pre><code>public class RSDriverException</code></pre>Base class for all exceptions thrown by the Android RenderScript</section>	https://developer.android.com/reference/android/support/v8/renderscript/RSDriverException.html
v8.renderscript.RSIllegalArgumentException	A										<section class="prog__container"><pre><code>public class RSIllegalArgumentException</code></pre>Base class for all exceptions thrown by the Android RenderScript</section>	https://developer.android.com/reference/android/support/v8/renderscript/RSIllegalArgumentException.html
v8.renderscript.RSInvalidStateException	A										<section class="prog__container"><pre><code>public class RSInvalidStateException</code></pre>Base class for all exceptions thrown by the Android RenderScript</section>	https://developer.android.com/reference/android/support/v8/renderscript/RSInvalidStateException.html
v8.renderscript.RSRuntimeException	A										<section class="prog__container"><pre><code>public class RSRuntimeException</code></pre>Base class for all exceptions thrown by the Android RenderScript</section>	https://developer.android.com/reference/android/support/v8/renderscript/RSRuntimeException.html
v8.renderscript.RenderScript	A										<section class="prog__container"><pre><code>public class RenderScript</code></pre>This class provides access to a RenderScript context, which controls RenderScript initialization, resource management, and teardown. An instance of the RenderScript class must be created before any other RS objects can be created. <div class="special reference"> <h3>Developer Guides</h3></section>	https://developer.android.com/reference/android/support/v8/renderscript/RenderScript.html
v8.renderscript.RenderScript.ContextType	A										<section class="prog__container"><pre><code>public static final enum RenderScript.ContextType</code></pre>ContextType specifies the specific type of context to be created.</section>	https://developer.android.com/reference/android/support/v8/renderscript/RenderScript.ContextType.html
v8.renderscript.RenderScript.Priority	A										<section class="prog__container"><pre><code>public static final enum RenderScript.Priority</code></pre>RenderScript worker thread priority enumeration. The default value is NORMAL. Applications wishing to do background processing should set their priority to LOW to avoid starving forground processes.</section>	https://developer.android.com/reference/android/support/v8/renderscript/RenderScript.Priority.html
v8.renderscript.RenderScript.RSErrorHandler	A										<section class="prog__container"><pre><code>public static class RenderScript.RSErrorHandler</code></pre>The runtime error handler base class. An application should derive from this class if it wishes to install an error handler. When errors occur at runtime, the fields in this class will be filled, and the run method will be called.</section>	https://developer.android.com/reference/android/support/v8/renderscript/RenderScript.RSErrorHandler.html
v8.renderscript.RenderScript.RSMessageHandler	A										<section class="prog__container"><pre><code>public static class RenderScript.RSMessageHandler</code></pre>The base class from which an application should derive in order to receive RS messages from scripts. When a script calls <code>rsSendToClient</code>, the data fields will be filled, and the run method will be called on a separate thread. This will occur some time after <code>rsSendToClient</code> completes in the script, as <code>rsSendToClient</code> is asynchronous. Message handlers are not guaranteed to have completed when <code>finish()</code> returns.</section>	https://developer.android.com/reference/android/support/v8/renderscript/RenderScript.RSMessageHandler.html
v8.renderscript.Sampler	A										<section class="prog__container"><pre><code>public class Sampler</code></pre>Sampler object that defines how Allocations can be read as textures within a kernel. Samplers are used in conjunction with the <code>rsSample</code> runtime function to return values from normalized coordinates. Any Allocation used with a Sampler must have been created with <code>USAGE_GRAPHICS_TEXTURE</code>; using a Sampler on an <code>Allocation</code> that was not created with <code>USAGE_GRAPHICS_TEXTURE</code> is undefined.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Sampler.html
v8.renderscript.Sampler.Builder	A										<section class="prog__container"><pre><code>public static class Sampler.Builder</code></pre>Builder for creating non-standard samplers. This is only necessary if a Sampler with different min and mag modes is desired.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Sampler.Builder.html
v8.renderscript.Sampler.Value	A										<section class="prog__container"><pre><code>public static final enum Sampler.Value</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Sampler.Value.html
v8.renderscript.Script	A										<section class="prog__container"><pre><code>public class Script</code></pre>The parent class for all executable scripts. This should not be used by applications.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Script.html
v8.renderscript.Script.Builder	A										<section class="prog__container"><pre><code>public static class Script.Builder</code></pre>Only intended for use by generated reflected code.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Script.Builder.html
v8.renderscript.Script.FieldBase	A										<section class="prog__container"><pre><code>public static class Script.FieldBase</code></pre>Only intended for use by generated reflected code.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Script.FieldBase.html
v8.renderscript.Script.FieldID	A										<section class="prog__container"><pre><code>public static final class Script.FieldID</code></pre>FieldID is an identifier for a Script + exported field pair. It is used as an identifier for ScriptGroup creation. This class should not be directly created. Instead use the method in the reflected or intrinsic code "getFieldID_funcname()".</section>	https://developer.android.com/reference/android/support/v8/renderscript/Script.FieldID.html
v8.renderscript.Script.InvokeID	A										<section class="prog__container"><pre><code>public static final class Script.InvokeID</code></pre>InvokeID is an identifier for a invoke function. It is used as an identifier for ScriptGroup creation. This class should not be directly created. Instead use the method in the reflected or intrinsic code "getInvokeID_funcname()".</section>	https://developer.android.com/reference/android/support/v8/renderscript/Script.InvokeID.html
v8.renderscript.Script.KernelID	A										<section class="prog__container"><pre><code>public static final class Script.KernelID</code></pre>KernelID is an identifier for a Script + root function pair. It is used as an identifier for ScriptGroup creation. This class should not be directly created. Instead use the method in the reflected or intrinsic code "getKernelID_funcname()".</section>	https://developer.android.com/reference/android/support/v8/renderscript/Script.KernelID.html
v8.renderscript.Script.LaunchOptions	A										<section class="prog__container"><pre><code>public static final class Script.LaunchOptions</code></pre>Class for specifying the specifics about how a kernel will be launched. This class can specify a potential range of cells on which to run a kernel. If no set is called for a dimension then this class will have no impact on that dimension when the kernel is executed. The forEach kernel launch will operate over the intersection of the dimensions. Example: LaunchOptions with setX(5, 15) Allocation with dimension X=10, Y=10 The resulting forEach run would execute over: x = 5 to 9 (inclusive) and y = 0 to 9 (inclusive).</section>	https://developer.android.com/reference/android/support/v8/renderscript/Script.LaunchOptions.html
v8.renderscript.ScriptC	A										<section class="prog__container"><pre><code>public class ScriptC</code></pre>The superclass for all user-defined scripts. This is only intended to be used by the generated derived classes.</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptC.html
v8.renderscript.ScriptGroup	A										<section class="prog__container"><pre><code>public final class ScriptGroup</code></pre>A group of kernels that are executed together with one execution call as if they were a single kernel</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptGroup.html
v8.renderscript.ScriptGroup.Binding	A										<section class="prog__container"><pre><code>public static final class ScriptGroup.Binding</code></pre>Represents a binding of a value to a global variable in a kernel or invocable function. Used in closure creation.</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptGroup.Binding.html
v8.renderscript.ScriptGroup.Builder	A										<section class="prog__container"><pre><code>public static final class ScriptGroup.Builder</code></pre><p class="caution"><strong> This class is deprecated.</strong><br/> Use <code>ScriptGroup.Builder2</code> instead.</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptGroup.Builder.html
v8.renderscript.ScriptGroup.Builder2	A										<section class="prog__container"><pre><code>public static final class ScriptGroup.Builder2</code></pre>The builder class for creating script groups</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptGroup.Builder2.html
v8.renderscript.ScriptGroup.Closure	A										<section class="prog__container"><pre><code>public static final class ScriptGroup.Closure</code></pre>An opaque class for closures</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptGroup.Closure.html
v8.renderscript.ScriptGroup.Future	A										<section class="prog__container"><pre><code>public static final class ScriptGroup.Future</code></pre>An opaque class for futures</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptGroup.Future.html
v8.renderscript.ScriptGroup.Input	A										<section class="prog__container"><pre><code>public static final class ScriptGroup.Input</code></pre>An opaque class for unbound values (used for script group inputs)</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptGroup.Input.html
v8.renderscript.ScriptIntrinsic	A										<section class="prog__container"><pre><code>public abstract class ScriptIntrinsic</code></pre>Base class for all Intrinsic scripts. An intrinsic a script which implements a pre-defined function. Intrinsics are provided to provide effecient implemtations of common operations. Not intended for direct use.</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsic.html
v8.renderscript.ScriptIntrinsic3DLUT	A										<section class="prog__container"><pre><code>public class ScriptIntrinsic3DLUT</code></pre>Intrinsic for converting RGB to RGBA by using a 3D lookup table. The incoming r,g,b values are use as normalized x,y,z coordinates into a 3D allocation. The 8 nearest values are sampled and linearly interpolated. The result is placed in the output.</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsic3DLUT.html
v8.renderscript.ScriptIntrinsicBLAS	A										<section class="prog__container"><pre><code>public final class ScriptIntrinsicBLAS</code></pre>ScriptIntrinsicBLAS class provides high performance RenderScript APIs to BLAS. The BLAS (Basic Linear Algebra Subprograms) are routines that provide standard building blocks for performing basic vector and matrix operations. For detailed description of BLAS, please refer to http://www.netlib.org/blas/</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicBLAS.html
v8.renderscript.ScriptIntrinsicBlend	A										<section class="prog__container"><pre><code>public class ScriptIntrinsicBlend</code></pre>Intrinsic kernels for blending two <code>Allocation</code> objects.</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicBlend.html
v8.renderscript.ScriptIntrinsicBlur	A										<section class="prog__container"><pre><code>public class ScriptIntrinsicBlur</code></pre>Intrinsic Gausian blur filter. Applies a gaussian blur of the specified radius to all elements of an allocation.</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicBlur.html
v8.renderscript.ScriptIntrinsicColorMatrix	A										<section class="prog__container"><pre><code>public class ScriptIntrinsicColorMatrix</code></pre>Intrinsic for applying a color matrix to allocations. This has the same effect as loading each element and converting it to a <code>F32_4(RenderScript)</code>, multiplying the result by the 4x4 color matrix as performed by rsMatrixMultiply() and writing it to the output after conversion back to <code>U8_4(RenderScript)</code>.</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicColorMatrix.html
v8.renderscript.ScriptIntrinsicConvolve3x3	A										<section class="prog__container"><pre><code>public class ScriptIntrinsicConvolve3x3</code></pre>Intrinsic for applying a 3x3 convolve to an allocation.</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicConvolve3x3.html
v8.renderscript.ScriptIntrinsicConvolve5x5	A										<section class="prog__container"><pre><code>public class ScriptIntrinsicConvolve5x5</code></pre>Intrinsic for applying a 5x5 convolve to an allocation.</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicConvolve5x5.html
v8.renderscript.ScriptIntrinsicHistogram	A										<section class="prog__container"><pre><code>public class ScriptIntrinsicHistogram</code></pre>Intrinsic Histogram filter.</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicHistogram.html
v8.renderscript.ScriptIntrinsicLUT	A										<section class="prog__container"><pre><code>public class ScriptIntrinsicLUT</code></pre>Intrinsic for applying a per-channel lookup table. Each channel of the input has an independant lookup table. The tables are 256 entries in size and can cover the full value range of <code>U8_4(RenderScript)</code>.</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicLUT.html
v8.renderscript.ScriptIntrinsicResize	A										<section class="prog__container"><pre><code>public class ScriptIntrinsicResize</code></pre>Intrinsic for performing a resize of a 2D allocation.</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicResize.html
v8.renderscript.ScriptIntrinsicYuvToRGB	A										<section class="prog__container"><pre><code>public class ScriptIntrinsicYuvToRGB</code></pre>Intrinsic for converting an Android YUV buffer to RGB. The input allocation is supplied in NV21 format as a U8 element type. The output is RGBA, the alpha channel will be set to 255.</section>	https://developer.android.com/reference/android/support/v8/renderscript/ScriptIntrinsicYuvToRGB.html
v8.renderscript.Short2	A										<section class="prog__container"><pre><code>public class Short2</code></pre>Class for exposing the native RenderScript Short2 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Short2.html
v8.renderscript.Short3	A										<section class="prog__container"><pre><code>public class Short3</code></pre>Class for exposing the native RenderScript short3 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Short3.html
v8.renderscript.Short4	A										<section class="prog__container"><pre><code>public class Short4</code></pre>Class for exposing the native RenderScript short4 type back to the Android system.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Short4.html
v8.renderscript.Type	A										<section class="prog__container"><pre><code>public class Type</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Type.html
v8.renderscript.Type.Builder	A										<section class="prog__container"><pre><code>public static class Type.Builder</code></pre>Builder class for Type.</section>	https://developer.android.com/reference/android/support/v8/renderscript/Type.Builder.html
v8.renderscript.Type.CubemapFace	A										<section class="prog__container"><pre><code>public static final enum Type.CubemapFace</code></pre></section>	https://developer.android.com/reference/android/support/v8/renderscript/Type.CubemapFace.html
view.PagerAdapter	A										<section class="prog__container"><pre><code>public abstract class PagerAdapter</code></pre>Base class providing the adapter to populate pages inside of a <code>ViewPager</code>. You will most likely want to use a more specific implementation of this, such as <code>FragmentPagerAdapter</code> or <code>FragmentStatePagerAdapter</code>.</section>	https://developer.android.com/reference/android/support/v4/view/PagerAdapter.html
view.ViewPager	A										<section class="prog__container"><pre><code>public class ViewPager</code></pre>Layout manager that allows the user to flip left and right through pages of data. You supply an implementation of a <code>PagerAdapter</code> to generate the pages that the view shows.</section>	https://developer.android.com/reference/android/support/v4/view/ViewPager.html
view.ViewPager.LayoutParams	A										<section class="prog__container"><pre><code>public static class ViewPager.LayoutParams</code></pre>Layout parameters that should be supplied for views added to a ViewPager.</section>	https://developer.android.com/reference/android/support/v4/view/ViewPager.LayoutParams.html
view.ViewPager.OnPageChangeListener	A										<section class="prog__container"><pre><code>public static interface ViewPager.OnPageChangeListener</code></pre>Callback interface for responding to changing state of the selected page.</section>	https://developer.android.com/reference/android/support/v4/view/ViewPager.OnPageChangeListener.html
view.ViewPager.PageTransformer	A										<section class="prog__container"><pre><code>public static interface ViewPager.PageTransformer</code></pre>A PageTransformer is invoked whenever a visible/attached page is scrolled. This offers an opportunity for the application to apply a custom transformation to the page views using animation properties.</section>	https://developer.android.com/reference/android/support/v4/view/ViewPager.PageTransformer.html
view.ViewPager.SavedState	A										<section class="prog__container"><pre><code>public static class ViewPager.SavedState</code></pre>This is the persistent state that is saved by ViewPager. Only needed if you are creating a sublass of ViewPager that must save its own state, in which case it should implement a subclass of this which contains that state.</section>	https://developer.android.com/reference/android/support/v4/view/ViewPager.SavedState.html
view.ViewPager.SimpleOnPageChangeListener	A										<section class="prog__container"><pre><code>public static class ViewPager.SimpleOnPageChangeListener</code></pre>Simple implementation of the <code>ViewPager.OnPageChangeListener</code> interface with stub implementations of each method. Extend this if you do not intend to override every method of <code>ViewPager.OnPageChangeListener</code>.</section>	https://developer.android.com/reference/android/support/v4/view/ViewPager.SimpleOnPageChangeListener.html
w3c.dom.DOMLocator	A										<section class="prog__container"><pre><code>public interface DOMLocator</code></pre><code>DOMLocator</code> is an interface that describes a location (e.g. where an error occurred).</section>	https://developer.android.com/reference/org/w3c/dom/DOMLocator.html
webkit.CookieManager	A										<section class="prog__container"><pre><code>public abstract class CookieManager</code></pre>Manages the cookies used by an application's <code>WebView</code> instances. Cookies are manipulated according to RFC2109.</section>	https://developer.android.com/reference/android/webkit/CookieManager.html
widget.Filter	A										<section class="prog__container"><pre><code>public abstract class Filter</code></pre></section>	https://developer.android.com/reference/android/widget/Filter.html
widget.MediaController	A										<section class="prog__container"><pre><code>public class MediaController</code></pre>A view containing controls for a MediaPlayer. Typically contains the buttons like "Play/Pause", "Rewind", "Fast Forward" and a progress slider. It takes care of synchronizing the controls with the state of the MediaPlayer.</section>	https://developer.android.com/reference/android/widget/MediaController.html
widget.PagerAdapter	A										Base class providing the adapter to populate pages inside of a <code><a href="https://developer.android.com/reference/android/support/v4/view/ViewPager.html">ViewPager</a></code>.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
widget.ViewPager	A										Framework copy of the support-v4 ViewPager class.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
widget.ViewPager.LayoutParams	A										Layout parameters that should be supplied for views added to a ViewPager.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
widget.ViewPager.OnPageChangeListener	A										Callback interface for responding to changing state of the selected page.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
widget.ViewPager.PageTransformer	A										A PageTransformer is invoked whenever a visible/attached page is scrolled.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
widget.ViewPager.SavedState	A										This is the persistent state that is saved by ViewPager.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
widget.ViewPager.SimpleOnPageChangeListener	A										Simple implementation of the <code><a href="https://developer.android.com/reference/com/android/internal/widget/ViewPager.OnPageChangeListener.html">ViewPager.OnPageChangeListener</a></code> interface with stub implementations of each method.	https://developer.android.com/reference/com/android/internal/widget/package-summary.html
wifi.ScanResult	A										<section class="prog__container"><pre><code>public class ScanResult</code></pre>Describes information about a detected access point. In addition to the attributes described here, the supplicant keeps track of <code>quality</code>, <code>noise</code>, and <code>maxbitrate</code> attributes, but does not currently report them to external clients.</section>	https://developer.android.com/reference/android/net/wifi/ScanResult.html
