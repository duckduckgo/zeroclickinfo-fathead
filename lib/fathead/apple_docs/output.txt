BNNS	A							https://developer.apple.com/reference/accelerate/bnns			<section class="prog__container"><p>Basic neural network subroutines (BNNS) is a collection of functions that you use to implement and run neural networks, using previously obtained training data.</p><pre><code>bnns.h</code></pre></section>	https://developer.apple.com/reference/accelerate/bnns
Quadrature	A							https://developer.apple.com/reference/accelerate/quadrature			<section class="prog__container"><p>Quadrature provides an approximation of the definite integral of a function over a finite or infinite interval.</p><pre><code>quadrature_integrate()</code></pre></section>	https://developer.apple.com/reference/accelerate/quadrature
vDSP	A							https://developer.apple.com/reference/accelerate/vdsp			<section class="prog__container"><p>This section describes the C and Swift APIs for performing common routines on a single vector in vDSP. These functions perform tasks such as finding the absolute value of a vector, compressing the values of a vector, or converting between single and double precision vectors.</p><pre><code>func vDSP_vabs(UnsafePointer<Float>, vDSP_Stride, UnsafeMutablePointer<Float>, vDSP_Stride, vDSP_Length)</code></pre></section>	https://developer.apple.com/reference/accelerate/vdsp
vImage Alpha Compositing	A							https://developer.apple.com/reference/accelerate/vimage_alpha_compositing			<section class="prog__container"><p>Alpha compositing (also known as alpha blending) is the process of layering multiple images, with the alpha value for a pixel in a given layer indicating what fraction of the colors from lower layers are seen through the color at the given level. The functions described in this reference operate on the alpha values of pixels either by blending alpha values or clipping them.</p><pre><code>kvImageDoNotTile</code></pre></section>	https://developer.apple.com/reference/accelerate/vimage_alpha_compositing
vImage Conversion	A							https://developer.apple.com/reference/accelerate/vimage_conversion			<section class="prog__container"><p>Conversion functions change an image from one image format into another. These functions work with the formats supported by vImage (Planar8, PlanarF, ARGB8888, ARGBFFFF, RGBA8888, and RGBAFFFF) but they can also change between a supported format to one that’s not supported by vImage (such as RGB565). Conversion functions can also fill buffers with a color, overwrite channels, permute channels, flatten data, and clip data.</p><pre><code>vImage_Buffer</code></pre></section>	https://developer.apple.com/reference/accelerate/vimage_conversion
vImage Convolution	A							https://developer.apple.com/reference/accelerate/vimage_convolution			<section class="prog__container"><p>Convolution functions implement various techniques for smoothing or sharpening an image by replacing a pixel with a weighted sum of itself and nearby pixels. Image convolution does not alter the size of an image. </p><pre><code>uint8_t</code></pre></section>	https://developer.apple.com/reference/accelerate/vimage_convolution
vImage Data Types and Constants	A							https://developer.apple.com/reference/accelerate/vimage_data_types_and_constants			<section class="prog__container"><p>The data types and constants defined in this document are used by vImage functions. The primary vImage data type is the vImage buffer, which contains a pointer to image data along with other image data information. The vImage framework also defines data types for planar and interleaved pixel types, a resampling callback filter, and an affine transform. It provides constants that specify errors that can be returned by vImage functions and flags that you can pass to a function to specify a variety of processing options.</p><pre><code>vImagePixelCount</code></pre></section>	https://developer.apple.com/reference/accelerate/vimage_data_types_and_constants
vImage Decompression Filtering	A							https://developer.apple.com/reference/accelerate/vimage_decompression_filtering			<section class="prog__container"><p>The vImage framework provides one function for filtering data prior to decompression.</p><pre><code>func vImagePNGDecompressionFilter(UnsafePointer<vImage_Buffer>!, vImagePixelCount, vImagePixelCount, UInt32, UInt32, UInt32, vImage_Flags)</code></pre></section>	https://developer.apple.com/reference/accelerate/vimage_decompression_filtering
vImage Geometry	A							https://developer.apple.com/reference/accelerate/vimage_geometry			<section class="prog__container"><p>Geometric functions rotate, resize, and distort the geometry of images. vImage provides both high-level (rotation, scaling, and warping) and low-level geometric functions (reflection, shearing, and low-level rotation). </p><pre><code>kvImageHighQualityResampling</code></pre></section>	https://developer.apple.com/reference/accelerate/vimage_geometry
vImage Histogram	A							https://developer.apple.com/reference/accelerate/vimage_histogram			<section class="prog__container"><p>Histogram functions calculate image histograms or manipulate a histogram to modify an image. There are a number of reasons to apply histogram operations to an image. An image may not make full use of the possible range of intensity values—for example, most of its pixels may be fairly dark, making details difficult to see. Changing the image so that it has a more uniform histogram can improve contrast. Also, it may be easier to compare two images (with respect to texture or other aspects) if you change each histogram to match some standard histogram.</p><pre><code>func vImageContrastStretch_ARGBFFFF(UnsafePointer<vImage_Buffer>, UnsafePointer<vImage_Buffer>, UnsafeMutableRawPointer!, UInt32, Pixel_F, Pixel_F, vImage_Flags)</code></pre></section>	https://developer.apple.com/reference/accelerate/vimage_histogram
vImage Morphology	A							https://developer.apple.com/reference/accelerate/vimage_morphology			<section class="prog__container"><p>Morphological functions change the shape of an object by performing dilatation, erosion, maximum, and minimum operations. Dilation expands objects. Erosion contracts them. Maximum is a special case of dilation, while minimum is a special case of erosion. The precise nature of the expanding or shrinking is determined by a kernel (also known as a structure element) provided by the caller. The number of rows and number of columns of the image does not change after applying a morphological operation.</p><pre><code>uint8_t</code></pre></section>	https://developer.apple.com/reference/accelerate/vimage_morphology
vImage Transform	A							https://developer.apple.com/reference/accelerate/vimage_transform			<section class="prog__container"><p>Transformation functions alter the values of pixels in the image. Unlike convolutions, transformation functions do not depend on the values of nearby pixels. The vImage transformation functions fall into four broad categories:</p><pre><code>vImage_Buffer</code></pre></section>	https://developer.apple.com/reference/accelerate/vimage_transform
ACAccount	A							https://developer.apple.com/reference/accounts/acaccount			<section class="prog__container"><p>An ACAccount object encapsulates information about a user account stored in the Accounts database. You can create and retrieve accounts using an ACAccountStore object. The ACAccountStore object provides an interface to the persistent Accounts database. For each user, all account objects belong to a single ACAccountStore object.</p><pre><code>ACAccount</code></pre></section>	https://developer.apple.com/reference/accounts/acaccount
ACAccountCredential	A							https://developer.apple.com/reference/accounts/acaccountcredential			<section class="prog__container"><p>An ACAccountCredential object encapsulates the information needed to authenticate a user.</p><pre><code>ACAccountCredential</code></pre></section>	https://developer.apple.com/reference/accounts/acaccountcredential
ACAccountStore	A							https://developer.apple.com/reference/accounts/acaccountstore			<section class="prog__container"><p>The ACAccountStore class provides an interface for accessing, manipulating, and storing accounts. To create and retrieve accounts from the Accounts database, you must create an ACAccountStore object. Each ACAccount object belongs to a single ACAccountStore object.</p><pre><code>ACAccountStore</code></pre></section>	https://developer.apple.com/reference/accounts/acaccountstore
ACAccountType	A							https://developer.apple.com/reference/accounts/acaccounttype			<section class="prog__container"><p>An ACAccountType object encapsulates information about all accounts of a particular type. You do not create account type objects directly. To obtain an account type, use the accountType(withAccountTypeIdentifier:) method or the accountType property of an account object. Account Type Identifiers describes the identifiers for currently supported account types. You can also use the accounts(with:) method to obtain all accounts of a particular type.</p><pre><code>ACAccountType</code></pre></section>	https://developer.apple.com/reference/accounts/acaccounttype
ABActionDelegate	A							https://developer.apple.com/reference/addressbook/abactiondelegate			<section class="prog__container"><p>The ABActionDelegate informal protocol allows you to populate the rollover menus of Address Book with custom items. You do this by implementing an Address Book action plug-in. The plug-in’s NSBundle must implement actionProperty:, titleForPerson:identifier: and performActionForPerson:identifier:.</p><pre><code>actionProperty:</code></pre></section>	https://developer.apple.com/reference/addressbook/abactiondelegate
ABAddressBook	A							https://developer.apple.com/reference/addressbook/abaddressbook			<section class="prog__container"><p>The ABAddressBook class provides a programming interface to the Address Book—a centralized database used by multiple applications to store contact and other personal information about people. The Address Book database also supports the notion of a “group” containing one or more persons. People may belong to multiple groups, and groups may also belong to other groups with some restrictions (for example, no circular references are allowed).</p><pre><code>ABAddressBook</code></pre></section>	https://developer.apple.com/reference/addressbook/abaddressbook
ABGroup	A							https://developer.apple.com/reference/addressbook/abgroup			<section class="prog__container"><p>The ABGroup class supports the concept of a “group” containing one or more persons. People may belong to multiple groups, and groups may also belong to other groups unless the relationship causes a circular reference. The only predefined property of a group is its name. However, similar to person records, you can add your own properties to group records. Groups not only help to organize person records, but also allow you to create email distribution lists.</p><pre><code>ABGroup</code></pre></section>	https://developer.apple.com/reference/addressbook/abgroup
ABGroupRef	A							https://developer.apple.com/reference/addressbook/abgroupref			<section class="prog__container"><p>A reference to an ABGroup object.</p></section>	https://developer.apple.com/reference/addressbook/abgroupref
ABImageClient	A							https://developer.apple.com/reference/addressbook/abimageclient			<section class="prog__container"><p>The ABImageClient protocol is used to handle images loaded from an asynchronous fetch for ABPerson objects.</p><pre><code>ABImageClient</code></pre></section>	https://developer.apple.com/reference/addressbook/abimageclient
ABMultiValue	A							https://developer.apple.com/reference/addressbook/abmultivalue			<section class="prog__container"><p>The ABMultiValue and ABMutableMultiValue classes are used to represent properties that might have multiple values. Each value in a multivalue list must be of the same type, and must have an associated predefined or user-defined label, and unique identifier. The labels, however, need not be unique. For example, you can have multiple Home phone numbers. Each multivalue object may have a primary identifier—used as a default value when a label is not provided. For example, a person record may have multiple addresses with the labels Home and Work, where Work is designated as the primary value. Instances of this class are immutable, see ABMutableMultiValue for methods that manipulate the content of a multivalue list.</p><pre><code>ABMultiValue</code></pre></section>	https://developer.apple.com/reference/addressbook/abmultivalue
ABMutableMultiValue	A							https://developer.apple.com/reference/addressbook/abmutablemultivalue			<section class="prog__container"><p>The ABMultiValue and ABMutableMultiValue classes are used to represent properties that might have multiple values. Each value in a multivalue list must be of the same type, and must have an associated predefined or user-defined label, and unique identifier. The labels, however, need not be unique. For example, you can have multiple Home phone numbers. Each multivalue object may have a primary identifier—used as a default value when a label is not provided. For example, a person record may have multiple addresses with the labels Home and Work, where Work is designated as the primary value. Instances of ABMutableMultiValue are mutable, see ABMultiValue for additional methods that access the content of a multivalue list.</p><pre><code>ABMultiValue</code></pre></section>	https://developer.apple.com/reference/addressbook/abmutablemultivalue
ABPeoplePickerView	A							https://developer.apple.com/reference/addressbook/abpeoplepickerview			<section class="prog__container"><p>The ABPeoplePickerView class allows you to customize the behavior of people-picker views in an application’s user interface.</p><pre><code>ABPeoplePickerView</code></pre></section>	https://developer.apple.com/reference/addressbook/abpeoplepickerview
ABPerson	A							https://developer.apple.com/reference/addressbook/abperson			<section class="prog__container"><p>The ABPerson class encapsulates all information about a person in the Address Book database—an instance of ABPerson corresponds to a single person record in the database. The ABPerson class defines properties such as the person’s name, company, address, email addresses, and phone numbers.</p><pre><code>ABPerson</code></pre></section>	https://developer.apple.com/reference/addressbook/abperson
ABPersonRef	A							https://developer.apple.com/reference/addressbook/abpersonref			<section class="prog__container"><p>A reference to an ABPerson object.</p></section>	https://developer.apple.com/reference/addressbook/abpersonref
ABPersonView	A							https://developer.apple.com/reference/addressbook/abpersonview			<section class="prog__container"><p>The ABPersonView class provides a view for displaying and editing contacts.</p><pre><code>ABPersonView</code></pre></section>	https://developer.apple.com/reference/addressbook/abpersonview
ABRecord	A							https://developer.apple.com/reference/addressbook/abrecord			<section class="prog__container"><p>ABRecord is an abstract superclass providing a common interface to, and defining common properties for, all Address Book records. A property is a field in the database record, such as the first or last name of a person record. ABRecord defines the types of properties supported, and basic methods for getting, setting, and removing property values.</p><pre><code>ABRecord</code></pre></section>	https://developer.apple.com/reference/addressbook/abrecord
ABSearchElement	A							https://developer.apple.com/reference/addressbook/absearchelement			<section class="prog__container"><p>The ABSearchElement class is used to specify a search query for records in the Address Book database.</p><pre><code>ABSearchElement</code></pre></section>	https://developer.apple.com/reference/addressbook/absearchelement
ABSearchElementRef	A							https://developer.apple.com/reference/addressbook/absearchelementref			<section class="prog__container"><p>A reference to an ABSearchElement object.</p></section>	https://developer.apple.com/reference/addressbook/absearchelementref
AddressBook Functions	A							https://developer.apple.com/reference/addressbook/addressbook_functions			<section class="prog__container"><p>This chapter describes the functions and function-like macros found in AddressBook.</p><pre><code>func ABLocalizedPropertyOrLabel(String!)</code></pre></section>	https://developer.apple.com/reference/addressbook/addressbook_functions
ABNewPersonViewControllerDelegate	A							https://developer.apple.com/reference/addressbookui/abnewpersonviewcontrollerdelegate			<section class="prog__container"><p>The ABNewPersonViewControllerDelegate protocol declares the interface that ABNewPersonViewController delegates must implement.</p><pre><code>ABNewPersonViewControllerDelegate</code></pre></section>	https://developer.apple.com/reference/addressbookui/abnewpersonviewcontrollerdelegate
ABPeoplePickerNavigationControllerDelegate	A							https://developer.apple.com/reference/addressbookui/abpeoplepickernavigationcontrollerdelegate			<section class="prog__container"><p>The ABPeoplePickerNavigationControllerDelegate protocol describes the interface ABPeoplePickerNavigationController delegates must adopt to respond to people-picker user events.</p><pre><code>ABPeoplePickerNavigationControllerDelegate</code></pre></section>	https://developer.apple.com/reference/addressbookui/abpeoplepickernavigationcontrollerdelegate
ABPersonViewControllerDelegate	A							https://developer.apple.com/reference/addressbookui/abpersonviewcontrollerdelegate			<section class="prog__container"><p>The ABPersonViewControllerDelegate protocol declares the interface that must be implemented by ABPersonViewController delegates.</p><pre><code>ABPersonViewControllerDelegate</code></pre></section>	https://developer.apple.com/reference/addressbookui/abpersonviewcontrollerdelegate
ABUnknownPersonViewControllerDelegate	A							https://developer.apple.com/reference/addressbookui/abunknownpersonviewcontrollerdelegate			<section class="prog__container"><p>The ABUnknownPersonViewControllerDelegate protocol describes the interface ABUnknownPersonViewController delegates must adopt to respond to unknown-person view user events.</p><pre><code>ABUnknownPersonViewControllerDelegate</code></pre></section>	https://developer.apple.com/reference/addressbookui/abunknownpersonviewcontrollerdelegate
ASIdentifierManager	A							https://developer.apple.com/reference/adsupport/asidentifiermanager			<section class="prog__container"><p>The ASIdentifierManager class provides apps with access to an identifier that can be used only for serving advertisements, as well as a flag that indicates whether a user has limited ad tracking.</p><pre><code>ASIdentifierManager</code></pre></section>	https://developer.apple.com/reference/adsupport/asidentifiermanager
AGL	A							https://developer.apple.com/reference/agl/agl			<section class="prog__container"><p>Create and manage OpenGL rendering contexts for use in macOS, and perform operations on drawable objects.</p><pre><code>OpenGL/OpenGL.h</code></pre></section>	https://developer.apple.com/reference/agl/agl
AppKit Data Types	A							https://developer.apple.com/reference/appkit/appkit_data_types			<section class="prog__container"><p>This document describes the data types defined in the Application Kit framework and not described in a document for an individual class.</p><pre><code>NSAnimationEffect</code></pre></section>	https://developer.apple.com/reference/appkit/appkit_data_types
AppKit Functions	A							https://developer.apple.com/reference/appkit/appkit_functions			<section class="prog__container"><p>This document describes functions and function-like macros defined in the Application Kit framework.</p><pre><code>func NSAccessibilityActionDescription(String)</code></pre></section>	https://developer.apple.com/reference/appkit/appkit_functions
NSAccessibility	A							https://developer.apple.com/reference/appkit/nsaccessibility			<section class="prog__container"><p>The NSAccessibility protocol declares the complete list of properties and methods implemented by accessible elements. In general, your custom user interface elements should not adopt this protocol. Instead, select the role-specific protocol—such as NSAccessibilityButton, NSAccessibilityImage, or NSAccessibilityGroup—that best matches your element’s behavior.</p><pre><code>NSAccessibility</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibility
NSAccessibility	A							https://developer.apple.com/reference/appkit/nsaccessibility-jku			<section class="prog__container"><p>The NSAccessibility informal protocol defines an old, key-based API. For the most part, the use of this API is discouraged. Use the new, method-based API instead. However, there are a few methods and properties that are still relevant. You can combine the accessibilityHitTest(_:) method and the accessibilityFocusedUIElement and accessibilityNotifiesWhenDestroyed properties with the new NSAccessibility protocol. For more information on the new, method-based API see Accessibility Programming Guide for OS X or NSAccessibility.</p><pre><code>NSAccessibility</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibility-jku
NSAccessibilityButton	A							https://developer.apple.com/reference/appkit/nsaccessibilitybutton			<section class="prog__container"><p>The NSAccessibilityButton role-based protocol declares the minimum interface required for an accessibility element to act as a button. You can further enhance the adopting element by implementing any of the information properties or action methods declared in the NSAccessibility protocol.</p><pre><code>NSAccessibilityButton</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilitybutton
NSAccessibilityCheckBox	A							https://developer.apple.com/reference/appkit/nsaccessibilitycheckbox			<section class="prog__container"><p>The NSAccessibilityCheckBox role-based protocol declares the minimum interface required for an accessibility element to act as a checkbox. You can further enhance the adopting element by implementing any of the information properties or action methods declared in the NSAccessibility protocol.</p><pre><code>NSAccessibilityCheckBox</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilitycheckbox
NSAccessibilityContainsTransientUI	A							https://developer.apple.com/reference/appkit/nsaccessibilitycontainstransientui			<section class="prog__container"><p>The NSAccessibilityContainsTransientUI protocol should be used in addition to another role-based protocol. See NSAccessibility for a list of role-based protocols. This protocol defines the methods needed to support a UI that changes dynamically—usually in response to mouse-over events.</p><pre><code>NSAccessibilityContainsTransientUI</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilitycontainstransientui
NSAccessibilityElement	A							https://developer.apple.com/reference/appkit/nsaccessibilityelement			<section class="prog__container"><p>The NSAccessibilityElement class provides the basic infrastructure required to interact with an accessibility client. Create subclasses of the NSAccessibilityElement class to represent any of your accessibility elements that do not inherit from NSView or from one of the standard AppKit controls. This subclass will represent your element in the accessibility hierarchy. Additionally, your subclass should adopt one of the role-based protocols. For a list of role-based protocols, see NSAccessibility.</p><pre><code>NSAccessibilityElement</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilityelement
NSAccessibilityElementProtocol	A							https://developer.apple.com/reference/appkit/nsaccessibilityelementprotocol			<section class="prog__container"><p>The NSAccessibilityElement role-based protocol declares the minimum interface required to interact with an accessibility client. In general, your user interface elements should not adopt this protocol. They should adopt a more specific, role-based protocol instead. For a list of role-based protocols, see NSAccessibility. </p><pre><code>NSAccessibilityElement</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilityelementprotocol
NSAccessibilityGroup	A							https://developer.apple.com/reference/appkit/nsaccessibilitygroup			<section class="prog__container"><p>The NSAccessibilityGroup role-based protocol declares the minimum interface required to act as a container for other user interface elements. Use this protocol when you want to logically group a collection of accessibility elements. You can further enhance the adopting element by implementing any of the information properties or action methods declared in the NSAccessibility protocol.</p><pre><code>NSAccessibilityGroup</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilitygroup
NSAccessibilityImage	A							https://developer.apple.com/reference/appkit/nsaccessibilityimage			<section class="prog__container"><p>The NSAccessibilityImage role-based protocol declares the minimum interface required for an accessibility element to act as a image. You can further enhance the adopting element by implementing any of the information properties or action methods declared in the NSAccessibility protocol.</p><pre><code>NSAccessibilityImage</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilityimage
NSAccessibilityLayoutArea	A							https://developer.apple.com/reference/appkit/nsaccessibilitylayoutarea			<section class="prog__container"><p>The NSAccessibilityLayoutArea role-based protocol declares the minimum interface required for an accessibility element to act as a layout area. Use this protocol when you want to create a canvas that contains layout items. You can further enhance the adopting element by implementing any of the information properties or action methods declared in the NSAccessibility protocol.</p><pre><code>NSAccessibilityLayoutArea</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilitylayoutarea
NSAccessibilityLayoutItem	A							https://developer.apple.com/reference/appkit/nsaccessibilitylayoutitem			<section class="prog__container"><p>The NSAccessibilityLayoutItem role-based protocol declares the minimum interface required for an accessibility element to act as a layout item. Layout items are repositional and resizeable items inside a layout area. You can further enhance the adopting element by implementing any of the information properties or action methods declared in the NSAccessibility protocol.</p><pre><code>NSAccessibilityLayoutItem</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilitylayoutitem
NSAccessibilityList	A							https://developer.apple.com/reference/appkit/nsaccessibilitylist			<section class="prog__container"><p>The NSAccessibilityList role-based protocol declares the minimum interface required for an accessibility element to act as a list view. You can further enhance the adopting element by implementing any of the information properties or action methods declared in the NSAccessibility protocol.</p><pre><code>NSAccessibilityList</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilitylist
NSAccessibilityNavigableStaticText	A							https://developer.apple.com/reference/appkit/nsaccessibilitynavigablestatictext			<section class="prog__container"><p>The NSAccessibilityNavigableStaticText role-based protocol declares the minimum interface required for an accessibility element to act as navigable static text. Use this protocol to represent larger blocks of text. The protocol will allow users to navigate through the text a line at a time or a word at a time using an accessibility client. For shorter pieces of text (for example, labels or headers), use the NSAccessibilityStaticText protocol instead. You can further enhance the adopting element by implementing any of the information properties or action methods declared in the NSAccessibility protocol.</p><pre><code>NSAccessibilityNavigableStaticText</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilitynavigablestatictext
NSAccessibilityOutline	A							https://developer.apple.com/reference/appkit/nsaccessibilityoutline			<section class="prog__container"><p>The NSAccessibilityOutline role-based protocol declares the minimum interface required for an accessibility element to act as an outline view. You can further enhance the adopting element by implementing any of the information properties or action methods declared in the NSAccessibility protocol.</p><pre><code>NSAccessibilityOutline</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilityoutline
NSAccessibilityProgressIndicator	A							https://developer.apple.com/reference/appkit/nsaccessibilityprogressindicator			<section class="prog__container"><p>The NSAccessibilityProgressIndicator role-based protocol declares the minimum interface required for an accessibility element to act as a progress indicator. You can further enhance the adopting element by implementing any of the information properties or action methods declared in the NSAccessibility protocol.</p><pre><code>NSAccessibilityProgressIndicator</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilityprogressindicator
NSAccessibilityRadioButton	A							https://developer.apple.com/reference/appkit/nsaccessibilityradiobutton			<section class="prog__container"><p>The NSAccessibilityRadioButton role-based protocol declares the minimum interface required for an accessibility element to act as a radio button. You can further enhance the adopting element by implementing any of the information properties or action methods declared in the NSAccessibility protocol.</p><pre><code>NSAccessibilityRadioButton</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilityradiobutton
NSAccessibilityRow	A							https://developer.apple.com/reference/appkit/nsaccessibilityrow			<section class="prog__container"><p>The NSAccessibilityRow role-based protocol declares the minimum interface required for an accessibility element to act as a row for a table, list our outline view. You can further enhance the adopting element by implementing any of the information properties or action methods declared in the NSAccessibility protocol.</p><pre><code>NSAccessibilityRow</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilityrow
NSAccessibilitySlider	A							https://developer.apple.com/reference/appkit/nsaccessibilityslider			<section class="prog__container"><p>The NSAccessibilitySlider role-based protocol declares the minimum interface required for an accessibility element to act as a slider. You can further enhance the adopting element by implementing any of the information properties or action methods declared in the NSAccessibility protocol.</p><pre><code>NSAccessibilitySlider</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilityslider
NSAccessibilityStaticText	A							https://developer.apple.com/reference/appkit/nsaccessibilitystatictext			<section class="prog__container"><p>The NSAccessibilityStaticText role-based protocol declares the minimum interface required for an accessibility element to act as static text. Static text elements are typically used for short pieces of text, such as headers or labels. For longer blocks of text, use the NSAccessibilityNavigableStaticText protocol. You can further enhance the adopting element by implementing any of the information properties or action methods declared in the NSAccessibility protocol.</p><pre><code>NSAccessibilityStaticText</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilitystatictext
NSAccessibilityStepper	A							https://developer.apple.com/reference/appkit/nsaccessibilitystepper			<section class="prog__container"><p>The NSAccessibilityStepper role-based protocol declares the minimum interface required for an accessibility element to act as a stepper. You can further enhance the adopting element by implementing any of the information properties or action methods declared in the NSAccessibility protocol.</p><pre><code>NSAccessibilityStepper</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilitystepper
NSAccessibilitySwitch	A							https://developer.apple.com/reference/appkit/nsaccessibilityswitch			<section class="prog__container"><p>The NSAccessibilitySwitch role-based protocol declares the minimum interface required for an accessibility element to act as a switch. You can further enhance the adopting element by implementing any of the information properties or action methods declared in the NSAccessibility protocol.</p><pre><code>NSAccessibilitySwitch</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilityswitch
NSAccessibilityTable	A							https://developer.apple.com/reference/appkit/nsaccessibilitytable			<section class="prog__container"><p>The NSAccessibilityTable role-based protocol declares the minimum interface required for an accessibility element to act as a table view. You can further enhance the adopting element by implementing any of the information properties or action methods declared in the NSAccessibility protocol.</p><pre><code>NSAccessibilityTable</code></pre></section>	https://developer.apple.com/reference/appkit/nsaccessibilitytable
NSActionCell	A							https://developer.apple.com/reference/appkit/nsactioncell			<section class="prog__container"><p>An NSActionCell defines an active area inside a control (an instance of NSControl or one of its subclasses). </p><pre><code>var action: Selector?</code></pre></section>	https://developer.apple.com/reference/appkit/nsactioncell
NSAlert	A							https://developer.apple.com/reference/appkit/nsalert			<section class="prog__container"><p>An alert appears onscreen either as an app-modal dialog or as a sheet attached to a document window. The methods of the NSAlert class allow you to specify alert level, alert text, button titles, and a custom icon should you require it. The class also lets your alerts display a help button and provides ways for apps to offer help specific to an alert.</p><pre><code>NSAlert</code></pre></section>	https://developer.apple.com/reference/appkit/nsalert
NSAlertDelegate	A							https://developer.apple.com/reference/appkit/nsalertdelegate			<section class="prog__container"><p>The NSAlertDelegate protocol defines the optional methods implemented by delegates of NSAlert objects.</p><pre><code>NSAlertDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nsalertdelegate
NSAlignmentFeedbackFilter	A							https://developer.apple.com/reference/appkit/nsalignmentfeedbackfilter			<section class="prog__container"><p>An NSAlignmentFeedbackFilter object filters the movement of an object and provides haptic feedback when alignment occurs.</p><pre><code>NSAlignmentFeedbackFilter</code></pre></section>	https://developer.apple.com/reference/appkit/nsalignmentfeedbackfilter
NSAnimatablePropertyContainer	A							https://developer.apple.com/reference/appkit/nsanimatablepropertycontainer			<section class="prog__container"><p>The NSAnimatablePropertyContainer protocol defines a way to add animation to an existing class with a minimum of API impact. It returns a proxy object for the receiver that can be used to initiate implied animation of property changes. An object's animator proxy should be treated as if it was the object itself, and may be passed to any code that accepts the object as a parameter. Sending of key-value-coding compliant "set" messages to the proxy will trigger animation for automatically animated properties of its target object. </p><pre><code>NSAnimatablePropertyContainer</code></pre></section>	https://developer.apple.com/reference/appkit/nsanimatablepropertycontainer
NSAnimation	A							https://developer.apple.com/reference/appkit/nsanimation			<section class="prog__container"><p>Objects of the NSAnimation class manage the timing and progress of animations in the user interface. The class also lets you link together multiple animations so that when one animation ends another one starts. It does not provide any drawing support for animation and does not directly deal with views, targets, or actions. </p><pre><code>NSAnimation</code></pre></section>	https://developer.apple.com/reference/appkit/nsanimation
NSAnimationContext	A							https://developer.apple.com/reference/appkit/nsanimationcontext			<section class="prog__container"><p>NSAnimationContext is analogous to CATransaction and are similar in overall concept to NSGraphicsContext. Each thread maintains its own stack of nestable NSAnimationContext instances, with each new instance initialized as a copy of the instance below (so, inheriting its current properties).</p><pre><code>NSAnimationContext</code></pre></section>	https://developer.apple.com/reference/appkit/nsanimationcontext
NSAnimationDelegate	A							https://developer.apple.com/reference/appkit/nsanimationdelegate			<section class="prog__container"><p>The NSAnimationDelegate protocol defines the optional methods implemented by delegates of NSAnimation objects.</p><pre><code>NSAnimationDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nsanimationdelegate
NSAppearance	A							https://developer.apple.com/reference/appkit/nsappearance			<section class="prog__container"><p>An NSAppearance object represents a file that specifies a standard appearance that applies to a subset of UI elements in an app. An app can contain multiple appearance files and—because NSAppearance conforms to NSCoding—you can use Interface Builder to assign UI elements to an appearance.</p><pre><code>NSAppearance</code></pre></section>	https://developer.apple.com/reference/appkit/nsappearance
NSAppearanceCustomization	A							https://developer.apple.com/reference/appkit/nsappearancecustomization			<section class="prog__container"><p>Use the NSAppearanceCustomization protocol to get or set the appearance of a view, or to get the appearance that an offscreen view will use when it draws onscreen in the future.</p><pre><code>NSAppearanceCustomization</code></pre></section>	https://developer.apple.com/reference/appkit/nsappearancecustomization
NSAppleScript AppKit Additions	A							https://developer.apple.com/reference/appkit/nsapplescript_appkit_additions			<section class="prog__container"><p>The Application Kit adds a method to the Foundation framework’s NSAppleScript class to handle rich text source. This method becomes part of the NSAppleScript class only for those applications that use the Application Kit.</p><pre><code>NSAppleScript</code></pre></section>	https://developer.apple.com/reference/appkit/nsapplescript_appkit_additions
NSApplication	A							https://developer.apple.com/reference/appkit/nsapplication			<section class="prog__container"><p>An NSApplication object manages an app’s main event loop in addition to resources used by all of that app’s objects.</p><pre><code>NSApplication</code></pre></section>	https://developer.apple.com/reference/appkit/nsapplication
NSApplicationActivationOptions	A							https://developer.apple.com/reference/appkit/nsapplicationactivationoptions			<section class="prog__container"><p>The following flags are for activate(options:).</p><pre><code>activate(options:)</code></pre></section>	https://developer.apple.com/reference/appkit/nsapplicationactivationoptions
NSApplicationDelegate	A							https://developer.apple.com/reference/appkit/nsapplicationdelegate			<section class="prog__container"><p>The NSApplicationDelegate protocol defines the methods that may be implemented by delegates of NSApplication objects.</p><pre><code>NSApplicationDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nsapplicationdelegate
NSApplicationOcclusionState	A							https://developer.apple.com/reference/appkit/nsapplicationocclusionstate			<section class="prog__container"><p>This constant indicates whether at least part of any window owned by this app is visible.</p><pre><code>static var visible: NSApplicationOcclusionState</code></pre></section>	https://developer.apple.com/reference/appkit/nsapplicationocclusionstate
NSApplicationPresentationOptions	A							https://developer.apple.com/reference/appkit/nsapplicationpresentationoptions			<section class="prog__container"><p>Constants that control the presentation of the app, typically for fullscreen apps such as games or kiosks.</p><pre><code>autoHideDock</code></pre></section>	https://developer.apple.com/reference/appkit/nsapplicationpresentationoptions
NSArrayController	A							https://developer.apple.com/reference/appkit/nsarraycontroller			<section class="prog__container"><p>NSArrayController is a bindings compatible class that manages a collection of objects. Typically the collection is an array, however, if the controller manages a relationship of a managed object (see NSManagedObject) the collection may be a set. NSArrayController provides selection management and sorting capabilities.</p><pre><code>NSArrayController</code></pre></section>	https://developer.apple.com/reference/appkit/nsarraycontroller
NSATSTypesetter	A							https://developer.apple.com/reference/appkit/nsatstypesetter			<section class="prog__container"><p>NSATSTypesetter is a concrete subclass of NSTypesetter that places glyphs during the text layout process. The typesetter creates line fragment rectangles, positions glyphs within the line fragments, determines line breaks by word wrapping and hyphenation, and handles tab positioning.</p><pre><code>NSATSTypesetter</code></pre></section>	https://developer.apple.com/reference/appkit/nsatstypesetter
NSAutoresizingMaskOptions	A							https://developer.apple.com/reference/appkit/nsautoresizingmaskoptions			<section class="prog__container"><p>Constants used by the autoresizingMask property. </p><pre><code>autoresizingMask</code></pre></section>	https://developer.apple.com/reference/appkit/nsautoresizingmaskoptions
NSBezierPath	A							https://developer.apple.com/reference/appkit/nsbezierpath			<section class="prog__container"><p>An NSBezierPath object allows you to create paths using PostScript-style commands. Paths consist of straight and curved line segments joined together. Paths can form recognizable shapes such as rectangles, ovals, arcs, and glyphs; they can also form complex polygons using either straight or curved line segments. A single path can be closed by connecting its two endpoints, or it can be left open.</p><pre><code>NSBezierPath</code></pre></section>	https://developer.apple.com/reference/appkit/nsbezierpath
NSBitmapFormat	A							https://developer.apple.com/reference/appkit/nsbitmapformat			<section class="prog__container"><p>Constants representing the various bitmap component formats. </p><pre><code>init(bitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:)</code></pre></section>	https://developer.apple.com/reference/appkit/nsbitmapformat
NSBitmapImageRep	A							https://developer.apple.com/reference/appkit/nsbitmapimagerep			<section class="prog__container"><p>The NSBitmapImageRep class renders an image from bitmap data. Supported bitmap data formats include GIF, JPEG, TIFF, PNG, and various permutations of raw bitmap data.</p><pre><code>NSBitmapImageRep</code></pre></section>	https://developer.apple.com/reference/appkit/nsbitmapimagerep
NSBox	A							https://developer.apple.com/reference/appkit/nsbox			<section class="prog__container"><p>The NSBox class implements simple views that can title themselves and draw a border around their content. These objects are known as boxes. You can use box to group, visually, some number of other views.</p><pre><code>NSBox</code></pre></section>	https://developer.apple.com/reference/appkit/nsbox
NSBrowser	A							https://developer.apple.com/reference/appkit/nsbrowser			<section class="prog__container"><p>This class provides a user interface for displaying and selecting items from a list of data or from hierarchically organized lists of data such as directory paths. Instances of this class are known as browsers. When working with a hierarchy of data, the levels are displayed in columns, which are indexed from left to right.</p><pre><code>NSBrowserCell</code></pre></section>	https://developer.apple.com/reference/appkit/nsbrowser
NSBrowserCell	A							https://developer.apple.com/reference/appkit/nsbrowsercell			<section class="prog__container"><p>The NSBrowserCell class is the subclass of NSCell used by default to display data in the columns of an NSBrowser object. (Each column contains an NSMatrix filled with NSBrowserCell objects.)</p><pre><code>NSBrowserCell</code></pre></section>	https://developer.apple.com/reference/appkit/nsbrowsercell
NSBrowserDelegate	A							https://developer.apple.com/reference/appkit/nsbrowserdelegate			<section class="prog__container"><p>The NSBrowserDelegate protocol defines the method that a delegate of NSBrowser should implement.</p><pre><code>NSBrowserDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nsbrowserdelegate
NSButton	A							https://developer.apple.com/reference/appkit/nsbutton			<section class="prog__container"><p>NSButton is a subclass of the NSControl class. An NSButton object sends an action message to a target object, such as a view controller, when the button is clicked. When configured as continuous, the button continues to send repeating action messages at timed intervals until released.</p><pre><code>NSButton</code></pre></section>	https://developer.apple.com/reference/appkit/nsbutton
NSButtonCell	A							https://developer.apple.com/reference/appkit/nsbuttoncell			<section class="prog__container"><p>The NSButtonCell class is a subclass of NSActionCell. An NSButtonCell object defines the user interface of a button, checkbox (switch), radio button, and any other clickable region of a view. For example, the NSButton subclass of NSControl uses a single NSButtonCell object to implement its user interface. The configuration of the NSButtonCell object controls how the NSButton object appears and behaves, but the NSButton object is what sends a message when clicked.</p><pre><code>NSButtonCell</code></pre></section>	https://developer.apple.com/reference/appkit/nsbuttoncell
NSCell	A							https://developer.apple.com/reference/appkit/nscell			<section class="prog__container"><p>The NSCell class provides a mechanism for displaying text or images in an NSView object without the overhead of a full NSView subclass. It’s used heavily by most of the NSControl classes to implement their internal workings.</p><pre><code>NSCell</code></pre></section>	https://developer.apple.com/reference/appkit/nscell
NSCellHitResult	A							https://developer.apple.com/reference/appkit/nscellhitresult			<section class="prog__container"><p>Constants used by the hitTest(for:in:of:) method to determine the effect of an event.</p><pre><code>hitTest(for:in:of:)</code></pre></section>	https://developer.apple.com/reference/appkit/nscellhitresult
NSCellStyleMask	A							https://developer.apple.com/reference/appkit/nscellstylemask			<section class="prog__container"><p>Constants for specifying what happens when a button is pressed or is displaying its alternate state. </p><pre><code>highlightsBy</code></pre></section>	https://developer.apple.com/reference/appkit/nscellstylemask
NSChangeSpelling	A							https://developer.apple.com/reference/appkit/nschangespelling			<section class="prog__container"><p>This protocol is implemented by objects in the responder chain that can correct a misspelled word. See the NSSpellChecker class description for more information.</p><pre><code>NSSpellChecker</code></pre></section>	https://developer.apple.com/reference/appkit/nschangespelling
NSCIImageRep	A							https://developer.apple.com/reference/appkit/nsciimagerep			<section class="prog__container"><p>An NSCIImageRep object can render an image from a Core Image CIImage instance. For more information about the CIImage class and Core Image, see Core Image Programming Guide.</p><pre><code>NSCIImageRep</code></pre></section>	https://developer.apple.com/reference/appkit/nsciimagerep
NSClickGestureRecognizer	A							https://developer.apple.com/reference/appkit/nsclickgesturerecognizer			<section class="prog__container"><p>An NSClickGestureRecognizer object is a discrete gesture recognizer that tracks a specified number of mouse clicks. When configuring this gesture recognizer, you can specify which mouse buttons must be clicked and how many clicks must occur before the action method is called. The user must click the specified mouse button the required number of times without dragging the mouse for the gesture to be recognized.</p><pre><code>NSClickGestureRecognizer</code></pre></section>	https://developer.apple.com/reference/appkit/nsclickgesturerecognizer
NSClipView	A							https://developer.apple.com/reference/appkit/nsclipview			<section class="prog__container"><p>An NSClipView holds the document view of an NSScrollView, clipping the document view to its frame, handling the details of scrolling in an efficient manner, and updating the NSScrollView when the document view’s size or position changes. You don’t normally use the NSClipView class directly; it’s provided primarily as the scrolling machinery for the NSScrollView class. However, you might use the NSClipView class to implement a class similar to NSScrollView.</p><pre><code>NSClipView</code></pre></section>	https://developer.apple.com/reference/appkit/nsclipview
NSCollectionView	A							https://developer.apple.com/reference/appkit/nscollectionview			<section class="prog__container"><p>An object that displays an ordered collection of data items using a customizable layout. </p><pre><code>NSCollectionViewDataSource</code></pre></section>	https://developer.apple.com/reference/appkit/nscollectionview
NSCollectionViewDataSource	A							https://developer.apple.com/reference/appkit/nscollectionviewdatasource			<section class="prog__container"><p>An object that adopts the NSCollectionViewDataSource protocol provides the information and view objects required by a collection view to present your content. A data source object vends information about your app’s data model to the collection view when asked. For example, it tells the collection view how many items are present. It also handles the creation and configuration of the views used to represent items and used to decorate the collection view’s content area.</p><pre><code>NSCollectionViewDataSource</code></pre></section>	https://developer.apple.com/reference/appkit/nscollectionviewdatasource
NSCollectionViewDelegate	A							https://developer.apple.com/reference/appkit/nscollectionviewdelegate			<section class="prog__container"><p>The NSCollectionViewDelegate protocol defines methods for managing the behavior of a collection view. You use the methods of this protocol to facilitate the user-initiated selection and highlighting of items, to track changes to the collection view’s visual elements, and to implement drag and drop support. The methods of this protocol are optional, but for some features, you must implement specific methods to support the feature. </p><pre><code>NSCollectionViewDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nscollectionviewdelegate
NSCollectionViewDelegateFlowLayout	A							https://developer.apple.com/reference/appkit/nscollectionviewdelegateflowlayout			<section class="prog__container"><p>The NSCollectionViewDelegateFlowLayout protocol defines methods for providing layout information to an NSCollectionViewFlowLayout object. Implement the methods of this protocol when you want to customize the layout behavior and perhaps return different values for different items or sections. </p><pre><code>NSCollectionViewDelegateFlowLayout</code></pre></section>	https://developer.apple.com/reference/appkit/nscollectionviewdelegateflowlayout
NSCollectionViewElement	A							https://developer.apple.com/reference/appkit/nscollectionviewelement			<section class="prog__container"><p>The NSCollectionViewElement protocol defines the methods for managing content in a collection view. Adopt this protocol in the classes that you use to display content for items, supplementary views, and decoration views in a collection view. The methods of this protocol are optional and provide support for applying layout attributes and for cleaning up elements when they move offscreen and are recycled.</p><pre><code>NSCollectionViewElement</code></pre></section>	https://developer.apple.com/reference/appkit/nscollectionviewelement
NSCollectionViewFlowLayout	A							https://developer.apple.com/reference/appkit/nscollectionviewflowlayout			<section class="prog__container"><p>An object that organizes items into a flexible and configurable grid-like arrangement. </p><pre><code>NSCollectionViewFlowLayout</code></pre></section>	https://developer.apple.com/reference/appkit/nscollectionviewflowlayout
NSCollectionViewFlowLayoutInvalidationContext	A							https://developer.apple.com/reference/appkit/nscollectionviewflowlayoutinvalidationcontext			<section class="prog__container"><p>An object that identifies the portions of a flow layout object that need to be updated. </p><pre><code>NSCollectionViewFlowLayout</code></pre></section>	https://developer.apple.com/reference/appkit/nscollectionviewflowlayoutinvalidationcontext
NSCollectionViewGridLayout	A							https://developer.apple.com/reference/appkit/nscollectionviewgridlayout			<section class="prog__container"><p>An object that displays a single section of items in a row and column grid layout. </p><pre><code>NSCollectionViewGridLayout</code></pre></section>	https://developer.apple.com/reference/appkit/nscollectionviewgridlayout
NSCollectionViewItem	A							https://developer.apple.com/reference/appkit/nscollectionviewitem			<section class="prog__container"><p>An object that provides the visual representation for a single data element in a collection view. </p><pre><code>NSCollectionViewDataSource</code></pre></section>	https://developer.apple.com/reference/appkit/nscollectionviewitem
NSCollectionViewLayout	A							https://developer.apple.com/reference/appkit/nscollectionviewlayout			<section class="prog__container"><p>An abstract base class that you subclass and use to generate layout information for a collection view. </p><pre><code>collectionViewLayout</code></pre></section>	https://developer.apple.com/reference/appkit/nscollectionviewlayout
NSCollectionViewLayoutAttributes	A							https://developer.apple.com/reference/appkit/nscollectionviewlayoutattributes			<section class="prog__container"><p>An object that contains layout-related attributes for an element in a collection view. </p><pre><code>NSCollectionViewLayoutAttributes</code></pre></section>	https://developer.apple.com/reference/appkit/nscollectionviewlayoutattributes
NSCollectionViewLayoutInvalidationContext	A							https://developer.apple.com/reference/appkit/nscollectionviewlayoutinvalidationcontext			<section class="prog__container"><p>An object that identifies the portions of your layout that need to be updated. </p><pre><code>invalidateLayout(with:)</code></pre></section>	https://developer.apple.com/reference/appkit/nscollectionviewlayoutinvalidationcontext
NSCollectionViewScrollPosition	A							https://developer.apple.com/reference/appkit/nscollectionviewscrollposition			<section class="prog__container"><p>Constants indicating the options for scrolling the collection view’s content.</p><pre><code>static var top: NSCollectionViewScrollPosition</code></pre></section>	https://developer.apple.com/reference/appkit/nscollectionviewscrollposition
NSCollectionViewSectionHeaderView	A							https://developer.apple.com/reference/appkit/nscollectionviewsectionheaderview			<section class="prog__container"><p>A protocol that defines a button that controls the collapse of a collection view’s section.</p><pre><code>sectionCollapseButton</code></pre></section>	https://developer.apple.com/reference/appkit/nscollectionviewsectionheaderview
NSCollectionViewTransitionLayout	A							https://developer.apple.com/reference/appkit/nscollectionviewtransitionlayout			<section class="prog__container"><p>An object that implements custom behaviors when changing from one layout to another in a collection view. </p><pre><code>init(currentLayout: NSCollectionViewLayout, nextLayout: NSCollectionViewLayout)</code></pre></section>	https://developer.apple.com/reference/appkit/nscollectionviewtransitionlayout
NSCollectionViewUpdateItem	A							https://developer.apple.com/reference/appkit/nscollectionviewupdateitem			<section class="prog__container"><p>An object that describes a single change to make to an item in a collection view. </p><pre><code>prepare(forCollectionViewUpdates:)</code></pre></section>	https://developer.apple.com/reference/appkit/nscollectionviewupdateitem
NSColor	A							https://developer.apple.com/reference/appkit/nscolor			<section class="prog__container"><p>A NSColor object stores color data and sometimes opacity (alpha value). Many methods in AppKit require you to specify color data using a NSColor object; when drawing you use them to set the current fill and stroke colors. Color objects are immutable and can be used safely from multiple threads in your app.</p><pre><code>NSColor</code></pre></section>	https://developer.apple.com/reference/appkit/nscolor
NSColorList	A							https://developer.apple.com/reference/appkit/nscolorlist			<section class="prog__container"><p>An NSColorList object is an ordered list of NSColor objects, identified by keys. Instances of NSColorList, or more simply color lists, are used to manage named lists of NSColor instances. The NSColorPanel list mode color picker uses instances of NSColorList to represent any lists of colors that come with the system, as well as any lists created by the user. An application can use NSColorList to manage document-specific color lists.</p><pre><code>NSColorList</code></pre></section>	https://developer.apple.com/reference/appkit/nscolorlist
NSColorPanel	A							https://developer.apple.com/reference/appkit/nscolorpanel			<section class="prog__container"><p>The NSColorPanel class provides a standard user interface for selecting color in an application. It provides a number of standard color selection modes and, with the NSColorPickingDefault and NSColorPickingCustom protocols, allows an application to add its own color selection modes. It allows the user to save swatches containing frequently used colors.</p><pre><code>NSColorPanel</code></pre></section>	https://developer.apple.com/reference/appkit/nscolorpanel
NSColorPicker	A							https://developer.apple.com/reference/appkit/nscolorpicker			<section class="prog__container"><p>The NSColorPicker class is an abstract superclass that implements the NSColorPickingDefault protocol. The NSColorPickingDefault and NSColorPickingCustom protocols define a way to add color pickers (custom user interfaces for color selection) to the NSColorPanel. </p><pre><code>NSColorPicker</code></pre></section>	https://developer.apple.com/reference/appkit/nscolorpicker
NSColorPickingCustom	A							https://developer.apple.com/reference/appkit/nscolorpickingcustom			<section class="prog__container"><p>Together with the NSColorPickingDefault protocol, NSColorPickingCustom provides a way to add color pickers—custom user interfaces for color selection—to an application’s NSColorPanel instance. The NSColorPickingDefault protocol provides basic behavior for a color picker. The NSColorPicker class adopts the NSColorPickingDefault protocol.</p><pre><code>NSColorPickingDefault</code></pre></section>	https://developer.apple.com/reference/appkit/nscolorpickingcustom
NSColorPickingDefault	A							https://developer.apple.com/reference/appkit/nscolorpickingdefault			<section class="prog__container"><p>The NSColorPickingDefault protocol, together with the NSColorPickingCustom protocol, provides an interface for adding color pickers—custom user interfaces for color selection—to an application’s NSColorPanel instance. The NSColorPickingDefault protocol provides basic behavior for a color picker. The NSColorPickingCustom protocol provides implementation-specific behavior.</p><pre><code>NSColorPickingDefault</code></pre></section>	https://developer.apple.com/reference/appkit/nscolorpickingdefault
NSColorSpace	A							https://developer.apple.com/reference/appkit/nscolorspace			<section class="prog__container"><p>The NSColorSpace class enables the creation of objects representing custom color spaces. You can make custom color spaces from ColorSync profiles or from ICC profiles. NSColorSpace also has factory methods that return objects representing the system color spaces.</p><pre><code>NSColorSpace</code></pre></section>	https://developer.apple.com/reference/appkit/nscolorspace
NSColorWell	A							https://developer.apple.com/reference/appkit/nscolorwell			<section class="prog__container"><p>An NSColorWell object is an NSControl for selecting and displaying a single color value. An example of an NSColorWell object (or simply color well) is found in an NSColorPanel, which uses a color well to display the current color selection. A color well is available from the Palettes panel of Interface Builder.</p><pre><code>NSColorWell</code></pre></section>	https://developer.apple.com/reference/appkit/nscolorwell
NSComboBox	A							https://developer.apple.com/reference/appkit/nscombobox			<section class="prog__container"><p>An NSComboBox is a kind of control that allows you to enter text directly (as you would with an NSTextField) or click the attached arrow at the right of the combo box and select from a displayed (“pop-up”) list of items.</p><pre><code>NSComboBox</code></pre></section>	https://developer.apple.com/reference/appkit/nscombobox
NSComboBoxCell	A							https://developer.apple.com/reference/appkit/nscomboboxcell			<section class="prog__container"><p>NSComboBoxCell is a subclass of NSTextFieldCell used to implement the user interface of “combo boxes” (see NSComboBox for information on how combo boxes look and work). The NSComboBox subclass of NSTextField uses a single NSComboBoxCell, and essentially all of the NSComboBox class’s methods simply invoke the corresponding NSComboBoxCell method.</p><pre><code>NSComboBoxCell</code></pre></section>	https://developer.apple.com/reference/appkit/nscomboboxcell
NSComboBoxDelegate	A							https://developer.apple.com/reference/appkit/nscomboboxdelegate			<section class="prog__container"><p>The NSComboBoxDelegate protocol defines the optional methods implemented by delegates of NSComboBox objects.</p><pre><code>NSComboBoxDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nscomboboxdelegate
NSControl	A							https://developer.apple.com/reference/appkit/nscontrol			<section class="prog__container"><p>NSControl is an abstract superclass that provides three fundamental features for implementing user interface devices: drawing devices on the screen, responding to user events, and sending action messages. It works closely with the NSCell class.</p><pre><code>NSControl</code></pre></section>	https://developer.apple.com/reference/appkit/nscontrol
NSController	A							https://developer.apple.com/reference/appkit/nscontroller			<section class="prog__container"><p>The NSController class is an abstract class that implements the NSEditor and NSEditorRegistration informal protocols required for controller classes.</p><pre><code>NSController</code></pre></section>	https://developer.apple.com/reference/appkit/nscontroller
NSControlTextEditingDelegate	A							https://developer.apple.com/reference/appkit/nscontroltexteditingdelegate			<section class="prog__container"><p>The NSControlTextEditingDelegate protocol defines the optional methods implemented by delegates of objects that are subclasses of NSControl.</p><pre><code>NSControlTextEditingDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nscontroltexteditingdelegate
NSCursor	A							https://developer.apple.com/reference/appkit/nscursor			<section class="prog__container"><p>Instances of the NSCursor class manage the appearance of the cursor.</p><pre><code>NSCursor</code></pre></section>	https://developer.apple.com/reference/appkit/nscursor
NSCustomImageRep	A							https://developer.apple.com/reference/appkit/nscustomimagerep			<section class="prog__container"><p>An NSCustomImageRep object uses a delegate object to render an image. When called upon to produce an image, it sends a message to its delegate to do the actual drawing. You can use this class to support custom image formats without going to the trouble of subclassing NSImageRep directly.</p><pre><code>NSCustomImageRep</code></pre></section>	https://developer.apple.com/reference/appkit/nscustomimagerep
NSDatePicker	A							https://developer.apple.com/reference/appkit/nsdatepicker			<section class="prog__container"><p>NSDatePicker is a subclass of NSControl that provides a user interface for displaying and editing an NSDate object.</p><pre><code>NSDatePicker</code></pre></section>	https://developer.apple.com/reference/appkit/nsdatepicker
NSDatePickerCell	A							https://developer.apple.com/reference/appkit/nsdatepickercell			<section class="prog__container"><p>An NSDatePickerCell instance controls the behavior of an NSDatePicker control, or of a single date picker cell in a matrix.</p><pre><code>NSDatePickerCell</code></pre></section>	https://developer.apple.com/reference/appkit/nsdatepickercell
NSDatePickerCellDelegate	A							https://developer.apple.com/reference/appkit/nsdatepickercelldelegate			<section class="prog__container"><p>The NSDatePickerCellDelegate protocol defines the optional methods implemented by delegates of NSDatePickerCell objects.</p><pre><code>NSDatePickerCellDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nsdatepickercelldelegate
NSDatePickerElementFlags	A							https://developer.apple.com/reference/appkit/nsdatepickerelementflags			<section class="prog__container"><p>Constants that specify the date and time elements displayed by the picker. </p><pre><code>OR</code></pre></section>	https://developer.apple.com/reference/appkit/nsdatepickerelementflags
NSDictionaryController	A							https://developer.apple.com/reference/appkit/nsdictionarycontroller			<section class="prog__container"><p>NSDictionaryController is a bindings compatible class that manages display and editing of the contents of an NSDictionary object. NSDictionaryController transforms the contents of a dictionary into an array of key-value pairs that can be bound to user interface items such as the columns of an NSTableView.</p><pre><code>NSDictionaryController</code></pre></section>	https://developer.apple.com/reference/appkit/nsdictionarycontroller
NSDictionaryControllerKeyValuePair	A							https://developer.apple.com/reference/appkit/nsdictionarycontrollerkeyvaluepair			<section class="prog__container"><p>NSDictionaryControllerKeyValuePair is an informal protocol that is implemented by objects returned by the NSDictionaryController method arrangedObjects. See NSDictionaryController for more information.</p><pre><code>NSDictionaryControllerKeyValuePair</code></pre></section>	https://developer.apple.com/reference/appkit/nsdictionarycontrollerkeyvaluepair
NSDockTile	A							https://developer.apple.com/reference/appkit/nsdocktile			<section class="prog__container"><p>The NSDockTile class lets you customize the visual representation for your application’s miniaturized windows and application icon as they appear in the Dock. You do not create Dock tile objects explicitly in your application. Instead, you retrieve the Dock tile for an existing window or for the application by calling that object’s dockTile method. </p><pre><code>NSDockTile</code></pre></section>	https://developer.apple.com/reference/appkit/nsdocktile
NSDockTilePlugIn	A							https://developer.apple.com/reference/appkit/nsdocktileplugin			<section class="prog__container"><p>The NSDockTilePlugIn protocol defines the methods implemented by plug-ins that allow an application’s Dock tile to be customized while the application is not running.</p><pre><code>NSDockTilePlugIn</code></pre></section>	https://developer.apple.com/reference/appkit/nsdocktileplugin
NSDocument	A							https://developer.apple.com/reference/appkit/nsdocument			<section class="prog__container"><p>The NSDocument abstract class defines the interface for macOS documents. A document is an object that can internally represent data displayed in a window and that can read data from and write data to a file or file package. Documents create and manage one or more window controllers and are in turn managed by a document controller. Documents respond to first-responder action messages to save, revert, and print their data.</p><pre><code>NSDocument</code></pre></section>	https://developer.apple.com/reference/appkit/nsdocument
NSDocumentController	A							https://developer.apple.com/reference/appkit/nsdocumentcontroller			<section class="prog__container"><p>An NSDocumentController object manages an application’s documents. As the first-responder target of New and Open menu commands, it creates and opens documents and tracks them throughout a session of the application. When opening documents, an NSDocumentController runs and manages the modal Open panel. NSDocumentController objects also maintain and manage the mappings of document types, extensions, and NSDocument subclasses as specified in the CFBundleDocumentTypes property loaded from the information property list (Info.plist).</p><pre><code>NSDocumentController</code></pre></section>	https://developer.apple.com/reference/appkit/nsdocumentcontroller
NSDraggingDestination	A							https://developer.apple.com/reference/appkit/nsdraggingdestination			<section class="prog__container"><p>The NSDraggingDestination protocol declares methods that the destination object (or recipient) of a dragged image must implement. The destination automatically receives NSDraggingDestination messages for pasteboard data types it has registered for as an image enters, moves around inside, and then exits or is released within the destination’s boundaries.</p><pre><code>NSDraggingDestination</code></pre></section>	https://developer.apple.com/reference/appkit/nsdraggingdestination
NSDraggingImageComponent	A							https://developer.apple.com/reference/appkit/nsdraggingimagecomponent			<section class="prog__container"><p>The NSDraggingImageComponent class represents a single object in a dragging item.</p><pre><code>NSDraggingImageComponent</code></pre></section>	https://developer.apple.com/reference/appkit/nsdraggingimagecomponent
NSDraggingInfo	A							https://developer.apple.com/reference/appkit/nsdragginginfo			<section class="prog__container"><p>The NSDraggingInfo protocol declares methods that supply information about a dragging session.</p><pre><code>NSDraggingInfo</code></pre></section>	https://developer.apple.com/reference/appkit/nsdragginginfo
NSDraggingItem	A							https://developer.apple.com/reference/appkit/nsdraggingitem			<section class="prog__container"><p>A single dragged item within a dragging session.</p><pre><code>NSDraggingItem</code></pre></section>	https://developer.apple.com/reference/appkit/nsdraggingitem
NSDraggingItemEnumerationOptions	A							https://developer.apple.com/reference/appkit/nsdraggingitemenumerationoptions			<section class="prog__container"><p>These constants specify the enumerateDraggingItems(options:for:classes:searchOptions:using:) options for the options parameter.</p><pre><code>enumerateDraggingItems(options:for:classes:searchOptions:using:)</code></pre></section>	https://developer.apple.com/reference/appkit/nsdraggingitemenumerationoptions
NSDraggingSession	A							https://developer.apple.com/reference/appkit/nsdraggingsession			<section class="prog__container"><p>The NSDraggingSession class encompases a drag and drop action and allows modification of the drag while in progress.</p><pre><code>NSDraggingSession</code></pre></section>	https://developer.apple.com/reference/appkit/nsdraggingsession
NSDraggingSource	A							https://developer.apple.com/reference/appkit/nsdraggingsource			<section class="prog__container"><p>The NSDraggingSource protocol declares methods that are implemented by the source object in a dragging session.</p><pre><code>NSDraggingSource</code></pre></section>	https://developer.apple.com/reference/appkit/nsdraggingsource
NSDragOperation	A							https://developer.apple.com/reference/appkit/nsdragoperation			<section class="prog__container"><p>These constants are used by draggingSourceOperationMask().</p><pre><code>draggingSourceOperationMask()</code></pre></section>	https://developer.apple.com/reference/appkit/nsdragoperation
NSDrawer	A							https://developer.apple.com/reference/appkit/nsdrawer			<section class="prog__container"><p>An NSDrawer object is a user interface element that contains and displays view objects including NSTextView, NSScrollView, NSBrowser, and other classes that inherit from NSView. A drawer is associated with a window, called its parent, and can appear only while its parent is visible onscreen. A drawer cannot be moved or ordered independently of a window, but is instead attached to one edge of its parent and moves along with it. </p><pre><code>NSDrawer</code></pre></section>	https://developer.apple.com/reference/appkit/nsdrawer
NSDrawerDelegate	A							https://developer.apple.com/reference/appkit/nsdrawerdelegate			<section class="prog__container"><p>The NSDrawerDelegate protocol defines the messages sent to delegates of NSDrawer. All of the methods of this protocol are optional.</p><pre><code>NSDrawerDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nsdrawerdelegate
NSEditor	A							https://developer.apple.com/reference/appkit/nseditor			<section class="prog__container"><p>The NSEditor informal protocol is implemented by controllers and user interface elements. It provides a means for requesting that the receiver commit or discard any pending edits.</p><pre><code>NSEditor</code></pre></section>	https://developer.apple.com/reference/appkit/nseditor
NSEditorRegistration	A							https://developer.apple.com/reference/appkit/nseditorregistration			<section class="prog__container"><p>The NSEditorRegistration informal protocol is implemented by controllers to provide an interface for a view, the editor, to inform the controller when it has uncommitted changes.</p><pre><code>NSEditorRegistration</code></pre></section>	https://developer.apple.com/reference/appkit/nseditorregistration
NSEPSImageRep	A							https://developer.apple.com/reference/appkit/nsepsimagerep			<section class="prog__container"><p>An NSEPSImageRep object can render an image from encapsulated PostScript (EPS) code.</p><pre><code>NSEPSImageRep</code></pre></section>	https://developer.apple.com/reference/appkit/nsepsimagerep
NSEvent	A							https://developer.apple.com/reference/appkit/nsevent			<section class="prog__container"><p>An NSEvent object, or simply an event, contains information about an input action such as a mouse click or a key press. AppKit associates each such user action with a window, reporting the event to the application that created the window. The NSEvent object contains pertinent information about each event, such as where the cursor was located or which character was typed. As the application receives events, it temporarily places them in a buffer called the event queue. When the application is ready to process an event, it takes one from the queue.</p><pre><code>NSEvent</code></pre></section>	https://developer.apple.com/reference/appkit/nsevent
NSEventMask	A							https://developer.apple.com/reference/appkit/nseventmask			<section class="prog__container"><p>These constants are masks for the events defined in NSEventType. Pass them to the NSCell method sendAction(on:) to specify when an NSCell object should send its action message. </p><pre><code>NSEventType</code></pre></section>	https://developer.apple.com/reference/appkit/nseventmask
NSEventPhase	A							https://developer.apple.com/reference/appkit/nseventphase			<section class="prog__container"><p>These constants represent the possible phases during an event phase.</p><pre><code>static var began: NSEventPhase</code></pre></section>	https://developer.apple.com/reference/appkit/nseventphase
NSEventSwipeTrackingOptions	A							https://developer.apple.com/reference/appkit/nseventswipetrackingoptions			<section class="prog__container"><p>These constants specify they swipe tracking options.</p><pre><code>static var lockDirection: NSEventSwipeTrackingOptions</code></pre></section>	https://developer.apple.com/reference/appkit/nseventswipetrackingoptions
NSFont	A							https://developer.apple.com/reference/appkit/nsfont			<section class="prog__container"><p>NSFont objects represent fonts to an application, providing access to characteristics of the font and assistance in laying out glyphs relative to one another. Font objects are also used to establish the current font for drawing text directly into a graphics context, using the set() method.</p><pre><code>NSFont</code></pre></section>	https://developer.apple.com/reference/appkit/nsfont
NSFontCollection	A							https://developer.apple.com/reference/appkit/nsfontcollection			<section class="prog__container"><p>The NSFontCollection class represents a font collection, that is, a group of font descriptors taken together as a single object. You can publicize the font collection as a named collection and it is presented through the System user interface such as the font panel & Font Book. The queries can be modifed using the NSMutableFontCollection subclass.</p><pre><code>NSFontCollection</code></pre></section>	https://developer.apple.com/reference/appkit/nsfontcollection
NSFontCollectionVisibility	A							https://developer.apple.com/reference/appkit/nsfontcollectionvisibility			<section class="prog__container"><p>These constants specify the visibility of font collections.</p><pre><code>static var process: NSFontCollectionVisibility</code></pre></section>	https://developer.apple.com/reference/appkit/nsfontcollectionvisibility
NSFontDescriptor	A							https://developer.apple.com/reference/appkit/nsfontdescriptor			<section class="prog__container"><p>NSFontDescriptor objects provide a mechanism to describe a font with a dictionary of attributes. This font descriptor can be used later to create or modify an NSFont object. macOS 10.4 and later provides a font matching capability, so that you can partially describe a font by creating a font descriptor with, for example, just a family name. You can then find all the available fonts on the system with a matching family name using matchingFontDescriptors(withMandatoryKeys:).</p><pre><code>NSFontDescriptor</code></pre></section>	https://developer.apple.com/reference/appkit/nsfontdescriptor
NSFontManager	A							https://developer.apple.com/reference/appkit/nsfontmanager			<section class="prog__container"><p>NSFontManager is the center of activity for the font conversion system. It records the currently selected font, updates the Font panel and Font menu to reflect the selected font, initiates font changes, and converts fonts in response to requests from text-bearing objects. In a more prosaic role, NSFontManager can be queried for the fonts available to the application and for the particular attributes of a font, such as whether it’s condensed or extended.</p><pre><code>NSFontManager</code></pre></section>	https://developer.apple.com/reference/appkit/nsfontmanager
NSFontPanel	A							https://developer.apple.com/reference/appkit/nsfontpanel			<section class="prog__container"><p>The NSFontPanel class implements the Font panel—a user interface object that displays a list of available fonts, letting the user preview them and change the font used to display text. The actual changes are made through conversion messages sent to the shared NSFontManager instance. There’s only one Font panel for each application.</p><pre><code>NSFontPanel</code></pre></section>	https://developer.apple.com/reference/appkit/nsfontpanel
NSFontPanelValidation	A							https://developer.apple.com/reference/appkit/nsfontpanelvalidation			<section class="prog__container"><p>Informal protocol. The Font Panel can be explicitly ordered to display some or all of its elements by responding to the validModesForFontPanel(_:) instance method.</p><pre><code>validModesForFontPanel(_:)</code></pre></section>	https://developer.apple.com/reference/appkit/nsfontpanelvalidation
NSFontTraitMask	A							https://developer.apple.com/reference/appkit/nsfonttraitmask			<section class="prog__container"><p>Mask of traits assigned to a font, assigned using the values in Font traits.</p><pre><code>init(rawValue: UInt)</code></pre></section>	https://developer.apple.com/reference/appkit/nsfonttraitmask
NSFormCell	A							https://developer.apple.com/reference/appkit/nsformcell			<section class="prog__container"><p>The NSFormCell class is used to implement text entry fields in a form. The left part of an NSFormCell object contains a title. The right part contains an editable text entry field.</p><pre><code>NSFormCell</code></pre></section>	https://developer.apple.com/reference/appkit/nsformcell
NSGestureRecognizer	A							https://developer.apple.com/reference/appkit/nsgesturerecognizer			<section class="prog__container"><p>An NSGestureRecognizer object monitors events and calls its action method when a predefined sequence of events occur. For example, a gesture recognizer might recognize a single click, a click and drag, or a sequence of events that imply rotation. You do not create instances of this class directly. This class is an abstract base class that defines the common behavior for all gesture recognizers. When using a gesture recognizer in your app, create an instance of one of the concrete subclasses.</p><pre><code>NSGestureRecognizer</code></pre></section>	https://developer.apple.com/reference/appkit/nsgesturerecognizer
NSGestureRecognizerDelegate	A							https://developer.apple.com/reference/appkit/nsgesturerecognizerdelegate			<section class="prog__container"><p>The NSGestureRecognizerDelegate protocol implements methods for fine-tuning a gesture recognizer’s behavior. Use these methods to establish dynamic dependencies between gesture recognizers and to prevent a single gesture recognizer from acting at all. </p><pre><code>NSGestureRecognizerDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nsgesturerecognizerdelegate
NSGlyphGenerator	A							https://developer.apple.com/reference/appkit/nsglyphgenerator			<section class="prog__container"><p>An NSGlyphGenerator object performs the initial, nominal glyph generation phase in the layout process.</p><pre><code>NSGlyphGenerator</code></pre></section>	https://developer.apple.com/reference/appkit/nsglyphgenerator
NSGlyphInfo	A							https://developer.apple.com/reference/appkit/nsglyphinfo			<section class="prog__container"><p>An NSGlyphInfo object represents a glyph attribute value (NSGlyphInfoAttributeName) in an attributed string (NSAttributedString). Glyphs are the graphic representations of characters, stored in a font, that the text system draws on a display or printed page. Before text can be laid out, the layout manager (NSLayoutManager) generates a stream of glyphs to be laid out, using character and font information specified by the attributed string and contained in the font file. NSGlyphInfo provides a means to override the standard glyph generation process and substitute a specified glyph over the attribute’s range.</p><pre><code>NSGlyphInfo</code></pre></section>	https://developer.apple.com/reference/appkit/nsglyphinfo
NSGlyphStorage	A							https://developer.apple.com/reference/appkit/nsglyphstorage			<section class="prog__container"><p>The NSGlyphStorage protocol defines the methods that a glyph storage object must implement in order to interact properly with NSGlyphGenerator.</p><pre><code>NSGlyphStorage</code></pre></section>	https://developer.apple.com/reference/appkit/nsglyphstorage
NSGradient	A							https://developer.apple.com/reference/appkit/nsgradient			<section class="prog__container"><p>The NSGradient class provides support for drawing gradient fill colors, also known as shadings in Quartz. This class provides convenience methods for drawing radial or linear (axial) gradients for rectangles and NSBezierPath objects. It also supports primitive methods that let you customize the shape of the gradient fill.</p><pre><code>NSGradient</code></pre></section>	https://developer.apple.com/reference/appkit/nsgradient
NSGradientDrawingOptions	A							https://developer.apple.com/reference/appkit/nsgradientdrawingoptions			<section class="prog__container"><p>Specifies gradient drawing options.</p><pre><code>init(rawValue: UInt)</code></pre></section>	https://developer.apple.com/reference/appkit/nsgradientdrawingoptions
NSGraphicsContext	A							https://developer.apple.com/reference/appkit/nsgraphicscontext			<section class="prog__container"><p>The NSGraphicsContext class is the programmatic interface to objects that represent graphics contexts. A context can be thought of as a destination to which drawing and graphics state operations are sent for execution. Each graphics context contains its own graphics environment and state.</p><pre><code>NSGraphicsContext</code></pre></section>	https://developer.apple.com/reference/appkit/nsgraphicscontext
NSHapticFeedbackManager	A							https://developer.apple.com/reference/appkit/nshapticfeedbackmanager			<section class="prog__container"><p>An NSHapticFeedbackManager object allows you to access haptic feedback management attributes on a system with a Force Touch trackpad.</p><pre><code>NSHapticFeedbackManager</code></pre></section>	https://developer.apple.com/reference/appkit/nshapticfeedbackmanager
NSHapticFeedbackPerformer	A							https://developer.apple.com/reference/appkit/nshapticfeedbackperformer			<section class="prog__container"><p>The NSHapticFeedbackPerformer protocol defines the methods and constants that a haptic feedback performer implements.</p><pre><code>NSHapticFeedbackPerformer</code></pre></section>	https://developer.apple.com/reference/appkit/nshapticfeedbackperformer
NSHelpManager	A							https://developer.apple.com/reference/appkit/nshelpmanager			<section class="prog__container"><p>The NSHelpManager class provides an approach to displaying online help. An application contains one NSHelpManager object.</p><pre><code>NSHelpManager</code></pre></section>	https://developer.apple.com/reference/appkit/nshelpmanager
NSIgnoreMisspelledWords	A							https://developer.apple.com/reference/appkit/nsignoremisspelledwords			<section class="prog__container"><p>Implement this protocol to have the Ignore button in the Spelling panel function properly. The Ignore button allows the user to accept a word that the spelling checker believes is misspelled. In order for this action to update the “ignored words” list for the document being checked, the NSIgnoreMisspelledWords protocol must be implemented.</p><pre><code>ignoreSpelling(_:)</code></pre></section>	https://developer.apple.com/reference/appkit/nsignoremisspelledwords
NSImage	A							https://developer.apple.com/reference/appkit/nsimage			<section class="prog__container"><p>A high-level interface for manipulating image data. </p><pre><code>NSImage</code></pre></section>	https://developer.apple.com/reference/appkit/nsimage
NSImageCell	A							https://developer.apple.com/reference/appkit/nsimagecell			<section class="prog__container"><p>An NSImageCell object displays a single image (encapsulated in an NSImage object) in a frame. This class provides methods for choosing the frame and for aligning and scaling the image to fit the frame.</p><pre><code>NSImageCell</code></pre></section>	https://developer.apple.com/reference/appkit/nsimagecell
NSImageDelegate	A							https://developer.apple.com/reference/appkit/nsimagedelegate			<section class="prog__container"><p>The NSImageDelegate protocol defines the optional methods implemented by delegates of NSImage objects.</p><pre><code>NSImageDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nsimagedelegate
NSImageRep	A							https://developer.apple.com/reference/appkit/nsimagerep			<section class="prog__container"><p>A semiabstract superclass that provides subclasses that know how to draw an image from a particular kind of source data.</p><pre><code>NSImageRep</code></pre></section>	https://developer.apple.com/reference/appkit/nsimagerep
NSImageView	A							https://developer.apple.com/reference/appkit/nsimageview			<section class="prog__container"><p>An NSImageView object displays image data from an NSImage object in a frame. An editable image view object behaves as an image well and supports copying, pasting, dragging, and using the Delete key to clear its content. Note that an image view performs its action only when it’s editable and a user drags an image to it. To allow users to perform a custom action when they click an image, use a button.</p><pre><code>NSImageView</code></pre></section>	https://developer.apple.com/reference/appkit/nsimageview
NSKeyValueBindingCreation	A							https://developer.apple.com/reference/appkit/nskeyvaluebindingcreation			<section class="prog__container"><p>The NSKeyValueBindingCreation informal protocol provides methods to create and remove bindings between view objects and controllers or controllers and model objects. In addition, it provides a means for a view subclass to advertise the bindings that it exposes. This informal protocol is implemented by NSObject and its methods can be overridden by view and controller subclasses.</p><pre><code>NSKeyValueBindingCreation</code></pre></section>	https://developer.apple.com/reference/appkit/nskeyvaluebindingcreation
NSLayerDelegateContentsScaleUpdating	A							https://developer.apple.com/reference/appkit/nslayerdelegatecontentsscaleupdating			<section class="prog__container"><p>This protocol defines an optional CALayer delegate method for handling resolution changes, allowing you to manage scale and contents for a layer hosted in a view.</p><pre><code>CALayer</code></pre></section>	https://developer.apple.com/reference/appkit/nslayerdelegatecontentsscaleupdating
NSLayoutGuide	A							https://developer.apple.com/reference/appkit/nslayoutguide			<section class="prog__container"><p>The NSLayoutGuide class defines a rectangular area that can interact with Auto Layout. Use layout guides to replace the dummy views you may have created to represent inter-view spaces or encapsulation in your user interface.</p><pre><code>NSLayoutGuide</code></pre></section>	https://developer.apple.com/reference/appkit/nslayoutguide
NSLevelIndicator	A							https://developer.apple.com/reference/appkit/nslevelindicator			<section class="prog__container"><p>NSLevelIndicator is a subclass of NSControl that displays a value on a linear scale.</p><pre><code>NSLevelIndicator</code></pre></section>	https://developer.apple.com/reference/appkit/nslevelindicator
NSLevelIndicatorCell	A							https://developer.apple.com/reference/appkit/nslevelindicatorcell			<section class="prog__container"><p>NSLevelIndicatorCell is a subclass of NSActionCell that provides several level indicator display styles including: capacity, ranking and relevancy. The capacity style provides both continuous and discrete modes. </p><pre><code>NSLevelIndicatorCell</code></pre></section>	https://developer.apple.com/reference/appkit/nslevelindicatorcell
NSMagnificationGestureRecognizer	A							https://developer.apple.com/reference/appkit/nsmagnificationgesturerecognizer			<section class="prog__container"><p>An NSMagnificationGestureRecognizer object is a continuous gesture recognizer that tracks a pinch gesture used to magnify content. This object tracks pinch gestures on a track pad or other input device and stores the resulting magnification value for you to use in your code. </p><pre><code>NSMagnificationGestureRecognizer</code></pre></section>	https://developer.apple.com/reference/appkit/nsmagnificationgesturerecognizer
NSMatrix	A							https://developer.apple.com/reference/appkit/nsmatrix			<section class="prog__container"><p>NSMatrix is a class used for creating groups of NSCell objects that work together in various ways.</p><pre><code>NSMatrix</code></pre></section>	https://developer.apple.com/reference/appkit/nsmatrix
NSMatrixDelegate	A							https://developer.apple.com/reference/appkit/nsmatrixdelegate			<section class="prog__container"><p>The NSMatrixDelegate protocol defines the optional methods implemented by delegates of NSMatrix objects.</p><pre><code>NSMatrixDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nsmatrixdelegate
NSMediaLibrary	A							https://developer.apple.com/reference/appkit/nsmedialibrary			<section class="prog__container"><p>These constants are masks used to configure a Media Library Browser to display specific types of media. Combined masks are not yet supported. In other words, only one nonzero mask value is supported at a time. If masks are combined, the lowest mask value is used.</p><pre><code>static var audio: NSMediaLibrary</code></pre></section>	https://developer.apple.com/reference/appkit/nsmedialibrary
NSMediaLibraryBrowserController	A							https://developer.apple.com/reference/appkit/nsmedialibrarybrowsercontroller			<section class="prog__container"><p>An NSMediaLibraryBrowserController instance configures and displays a Media Library Browser panel. From this panel a user can drag media into views in their app. The class provides a standard interface to the MediaLibrary framework content.</p><pre><code>NSMediaLibraryBrowserController</code></pre></section>	https://developer.apple.com/reference/appkit/nsmedialibrarybrowsercontroller
NSMenu	A							https://developer.apple.com/reference/appkit/nsmenu			<section class="prog__container"><p>An NSMenu object manages an application’s menus.</p><pre><code>NSMenu</code></pre></section>	https://developer.apple.com/reference/appkit/nsmenu
NSMenuDelegate	A							https://developer.apple.com/reference/appkit/nsmenudelegate			<section class="prog__container"><p>The NSMenuDelegate protocol defines the optional methods implemented by delegates of NSMenu objects.</p><pre><code>NSMenuDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nsmenudelegate
NSMenuItem	A							https://developer.apple.com/reference/appkit/nsmenuitem			<section class="prog__container"><p>Defines objects that are used as command items in menus. </p><pre><code>NSMenuItem</code></pre></section>	https://developer.apple.com/reference/appkit/nsmenuitem
NSMenuItemCell	A							https://developer.apple.com/reference/appkit/nsmenuitemcell			<section class="prog__container"><p>NSMenuItemCell is a class that handles the measurement and display of a single menu item in its encompassing frame. Instances of NSMenuItemCell work in conjunction with an NSMenuView object to control the overall appearance of the menu.</p><pre><code>NSMenuItemCell</code></pre></section>	https://developer.apple.com/reference/appkit/nsmenuitemcell
NSMenuProperties	A							https://developer.apple.com/reference/appkit/nsmenuproperties			<section class="prog__container"><p>These constants are used as a bitmask for specifying a set of menu or menu item properties, and are contained by the propertiesToUpdate property.</p><pre><code>propertiesToUpdate</code></pre></section>	https://developer.apple.com/reference/appkit/nsmenuproperties
NSMenuValidation	A							https://developer.apple.com/reference/appkit/nsmenuvalidation			<section class="prog__container"><p>This informal protocol allows your application to update the enabled or disabled status of an NSMenuItem object. It declares only one method, validateMenuItem(_:).</p><pre><code>NSMenuItem</code></pre></section>	https://developer.apple.com/reference/appkit/nsmenuvalidation
NSMutableFontCollection	A							https://developer.apple.com/reference/appkit/nsmutablefontcollection			<section class="prog__container"><p>NSMutableFontCollection is a dedicated class that represents a mutable collection of fonts. This subclass is used to create a modifiable version of the NSFontCollection class. Using this class allows you to modify the search queries for the font descriptors used by the parent NSFontCollection class.</p><pre><code>NSFontCollection</code></pre></section>	https://developer.apple.com/reference/appkit/nsmutablefontcollection
NSNib	A							https://developer.apple.com/reference/appkit/nsnib			<section class="prog__container"><p>Instances of the NSNib class serve as object wrappers, or containers, for Interface Builder nib files. An NSNib object keeps the contents of a nib file resident in memory, ready for unarchiving and instantiation.</p><pre><code>NSNib</code></pre></section>	https://developer.apple.com/reference/appkit/nsnib
NSObjectController	A							https://developer.apple.com/reference/appkit/nsobjectcontroller			<section class="prog__container"><p>NSObjectController is a Cocoa bindings-compatible controller class. Properties of the content object of instances of this class can be bound to user interface elements to access and modify their values.</p><pre><code>NSObjectController</code></pre></section>	https://developer.apple.com/reference/appkit/nsobjectcontroller
NSOpenGLContext	A							https://developer.apple.com/reference/appkit/nsopenglcontext			<section class="prog__container"><p>All OpenGL calls are rendered into an OpenGL graphics context, which in Cocoa is represented by the NSOpenGLContext class. The context is created using an NSOpenGLPixelFormatobject that specifies the context’s buffer types and other attributes. A context can be full-screen, offscreen, or associated with an NSView object. A context draws into its drawable object, which is the frame buffer that is the target of OpenGL drawing operations.</p><pre><code>NSOpenGLContext</code></pre></section>	https://developer.apple.com/reference/appkit/nsopenglcontext
NSOpenGLLayer	A							https://developer.apple.com/reference/appkit/nsopengllayer			<section class="prog__container"><p>NSOpenGLLayer is a subclass of CAOpenGLLayer that is suitable for rendering OpenGL into layers. Unlike CAOpenGLLayer, NSOpenGLLayer uses distinctly Application Kit types.</p><pre><code>NSOpenGLLayer</code></pre></section>	https://developer.apple.com/reference/appkit/nsopengllayer
NSOpenGLPixelFormat	A							https://developer.apple.com/reference/appkit/nsopenglpixelformat			<section class="prog__container"><p>To render with OpenGL into an NSOpenGLContext, you must specify the context’s pixel format. An NSOpenGLPixelFormat object specifies the types of buffers and other attributes of the NSOpenGLContext. This class is similar to the AGLPixelFormat type, which is used in Carbon OpenGL applications.</p><pre><code>NSOpenGLContext</code></pre></section>	https://developer.apple.com/reference/appkit/nsopenglpixelformat
NSOpenGLView	A							https://developer.apple.com/reference/appkit/nsopenglview			<section class="prog__container"><p>An NSOpenGLView object maintains an NSOpenGLPixelFormat and NSOpenGLContext object into which OpenGL calls can be rendered. The view provides methods for accessing and managing the NSOpenGLPixelFormat and NSOpenGLContext objects, as well as notifications of visible region changes.</p><pre><code>NSOpenGLView</code></pre></section>	https://developer.apple.com/reference/appkit/nsopenglview
NSOpenPanel	A							https://developer.apple.com/reference/appkit/nsopenpanel			<section class="prog__container"><p>The NSOpenPanel class provides the Open panel for the Cocoa user interface. Applications use the Open panel as a convenient way to query the user for the name of a file to open.</p><pre><code>NSOpenPanel</code></pre></section>	https://developer.apple.com/reference/appkit/nsopenpanel
NSOpenSavePanelDelegate	A							https://developer.apple.com/reference/appkit/nsopensavepaneldelegate			<section class="prog__container"><p>The NSOpenSavePanelDelegate protocol defines the methods that a delegate of NSOpenPanel or NSSavePanel should implement.</p><pre><code>NSOpenSavePanelDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nsopensavepaneldelegate
NSOutlineView	A							https://developer.apple.com/reference/appkit/nsoutlineview			<section class="prog__container"><p>NSOutlineView is a subclass of NSTableView that uses a row-and-column format to display hierarchical data that can be expanded and collapsed, such as directories and files in a file system. A user can expand and collapse rows, edit values, and resize and rearrange columns.</p><pre><code>NSOutlineView</code></pre></section>	https://developer.apple.com/reference/appkit/nsoutlineview
NSOutlineViewDelegate	A							https://developer.apple.com/reference/appkit/nsoutlineviewdelegate			<section class="prog__container"><p>The NSOutlineViewDelegate protocol defines the optional methods implemented by delegates of NSOutlineView objects.</p><pre><code>NSOutlineViewDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nsoutlineviewdelegate
NSPageController	A							https://developer.apple.com/reference/appkit/nspagecontroller			<section class="prog__container"><p>The NSPageController class is used for controlling swipe navigation and animations between views or view content. It is useful for user interfaces which control navigating multiple pages as in a book or a web browser history.</p><pre><code>NSPageController</code></pre></section>	https://developer.apple.com/reference/appkit/nspagecontroller
NSPageControllerDelegate	A							https://developer.apple.com/reference/appkit/nspagecontrollerdelegate			<section class="prog__container"><p>The NSPageControllerDelegate protocol allows you to customize the behavior of instances of the NSPageController class.</p><pre><code>NSPageControllerDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nspagecontrollerdelegate
NSPageLayout	A							https://developer.apple.com/reference/appkit/nspagelayout			<section class="prog__container"><p>NSPageLayout is a panel that queries the user for information such as paper type and orientation. It is normally displayed in response to the user selecting the Page Setup menu item. You obtain an instance with the pageLayout class method. The pane can then be run as a sheet using beginSheet(with:modalFor:delegate:didEnd:contextInfo:) or modally using runModal() or runModal(with:).</p><pre><code>NSPageLayout</code></pre></section>	https://developer.apple.com/reference/appkit/nspagelayout
NSPanel	A							https://developer.apple.com/reference/appkit/nspanel			<section class="prog__container"><p>The NSPanel class implements a special kind of window (known as a panel), typically performing an auxiliary function.</p><pre><code>NSPanel</code></pre></section>	https://developer.apple.com/reference/appkit/nspanel
NSPanGestureRecognizer	A							https://developer.apple.com/reference/appkit/nspangesturerecognizer			<section class="prog__container"><p>An NSPanGestureRecognizer object implements a continuous gesture recognizer for panning (dragging) gestures. The gesture is recognized when the user clicks all of specified buttons, drags the mouse, and releases one or more of the buttons. Use the pan gesture recognizer object to retrieve the distance traveled during the pan and the location of the mouse as it pans.</p><pre><code>NSPanGestureRecognizer</code></pre></section>	https://developer.apple.com/reference/appkit/nspangesturerecognizer
NSPasteboard	A							https://developer.apple.com/reference/appkit/nspasteboard			<section class="prog__container"><p>NSPasteboard objects transfer data to and from the pasteboard server. The server is shared by all running apps. It contains data that the user has cut or copied, as well as other data that one application wants to transfer to another. NSPasteboard objects are an application’s sole interface to the server and to all pasteboard operations.</p><pre><code>NSPasteboard</code></pre></section>	https://developer.apple.com/reference/appkit/nspasteboard
NSPasteboardItem	A							https://developer.apple.com/reference/appkit/nspasteboarditem			<section class="prog__container"><p>NSPasteboardItem is a generic class to represent an item on a pasteboard.</p><pre><code>NSPasteboardItem</code></pre></section>	https://developer.apple.com/reference/appkit/nspasteboarditem
NSPasteboardItemDataProvider	A							https://developer.apple.com/reference/appkit/nspasteboarditemdataprovider			<section class="prog__container"><p>This protocol is implemented by the data provider of a pasteboard item to provide the data for a particular UTI type.</p><pre><code>NSPasteboardItem</code></pre></section>	https://developer.apple.com/reference/appkit/nspasteboarditemdataprovider
NSPasteboardReading	A							https://developer.apple.com/reference/appkit/nspasteboardreading			<section class="prog__container"><p>The NSPasteboardReading protocol specifies the interface for initializing an object from a pasteboard.</p><pre><code>NSPasteboardReading</code></pre></section>	https://developer.apple.com/reference/appkit/nspasteboardreading
NSPasteboardReadingOptions	A							https://developer.apple.com/reference/appkit/nspasteboardreadingoptions			<section class="prog__container"><p>Options to specify how data on the pasteboard should be interpreted to initialize an object in init(pasteboardPropertyList:ofType:).</p><pre><code>init(pasteboardPropertyList:ofType:)</code></pre></section>	https://developer.apple.com/reference/appkit/nspasteboardreadingoptions
NSPasteboardWriting	A							https://developer.apple.com/reference/appkit/nspasteboardwriting			<section class="prog__container"><p>The NSPasteboardWriting protocol specifies the interface for retrieving a representation of an object that can be written to a pasteboard. The Cocoa framework classes NSString, NSAttributedString, NSURL, NSColor, NSSound, NSImage, and NSPasteboardItem implement this protocol. You can make your custom class conform to this protocol so that you can write instances of the class to a pasteboard using the writeObjects(_:) method of NSPasteboard.</p><pre><code>NSPasteboardWriting</code></pre></section>	https://developer.apple.com/reference/appkit/nspasteboardwriting
NSPasteboardWritingOptions	A							https://developer.apple.com/reference/appkit/nspasteboardwritingoptions			<section class="prog__container"><p>Type to specify options for writing to a pasteboard.</p><pre><code>Pasteboard Writing Options</code></pre></section>	https://developer.apple.com/reference/appkit/nspasteboardwritingoptions
NSPathCell	A							https://developer.apple.com/reference/appkit/nspathcell			<section class="prog__container"><p>NSPathCell implements the user interface of an NSPathControl object. It maintains a collection of NSPathComponentCell objects that represent a particular path to be displayed to the user.</p><pre><code>NSPathCell</code></pre></section>	https://developer.apple.com/reference/appkit/nspathcell
NSPathCellDelegate	A							https://developer.apple.com/reference/appkit/nspathcelldelegate			<section class="prog__container"><p>The NSPathCellDelegate optional protocol enables the delegate of an NSPathCell object to customize the Open panel or pop-up menu of a path whose style is set to popUp.</p><pre><code>NSPathCellDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nspathcelldelegate
NSPathComponentCell	A							https://developer.apple.com/reference/appkit/nspathcomponentcell			<section class="prog__container"><p>The NSPathComponentCell class displays a component of a path.</p><pre><code>NSPathComponentCell</code></pre></section>	https://developer.apple.com/reference/appkit/nspathcomponentcell
NSPathControl	A							https://developer.apple.com/reference/appkit/nspathcontrol			<section class="prog__container"><p>NSPathControl is a subclass of NSControl that represents a file system path or virtual path.</p><pre><code>NSPathControl</code></pre></section>	https://developer.apple.com/reference/appkit/nspathcontrol
NSPathControlDelegate	A							https://developer.apple.com/reference/appkit/nspathcontroldelegate			<section class="prog__container"><p>The NSPathControlDelegate optional protocol is implemented by the delegate of an NSPathControl object to support dragging to and from the control.</p><pre><code>NSPathControlDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nspathcontroldelegate
NSPDFImageRep	A							https://developer.apple.com/reference/appkit/nspdfimagerep			<section class="prog__container"><p>An NSPDFImageRep object can render an image from a PDF format data stream.</p><pre><code>NSPDFImageRep</code></pre></section>	https://developer.apple.com/reference/appkit/nspdfimagerep
NSPDFInfo	A							https://developer.apple.com/reference/appkit/nspdfinfo			<section class="prog__container"><p>An NSPDFInfo object stores information associated with the creation of a PDF file, such as its URL, tag names, page orientation, and paper size. Typically, a PDF panel—that is, a panel created by an NSPDFPanel object—displays the information supplied by an NSPDFInfo object when the user wants to export content as a PDF file. A PDF panel can also update an NSPDFInfo object with information it receives from the user.</p><pre><code>NSPDFInfo</code></pre></section>	https://developer.apple.com/reference/appkit/nspdfinfo
NSPDFPanel	A							https://developer.apple.com/reference/appkit/nspdfpanel			<section class="prog__container"><p>An NSPDFPanel object is used to implement a Save or Export as PDF panel that’s consistent with the macOS user interface. A PDF panel has a variety of built-in customization controls, such as page orientation, paper size, and tags. It also supports the use of a custom accessory view controller that allows an app to specify how a PDF file should be created.</p><pre><code>NSPDFPanel</code></pre></section>	https://developer.apple.com/reference/appkit/nspdfpanel
NSPDFPanelOptions	A							https://developer.apple.com/reference/appkit/nspdfpaneloptions			<section class="prog__container"><p>Constants used to configure the contents of a PDF panel.</p><pre><code>static var showsPaperSize: NSPDFPanelOptions</code></pre></section>	https://developer.apple.com/reference/appkit/nspdfpaneloptions
NSPersistentDocument	A							https://developer.apple.com/reference/appkit/nspersistentdocument			<section class="prog__container"><p>The NSPersistentDocument class is a subclass of NSDocument that is designed to easily integrate into the Core Data framework. It provides methods to access a document-wide NSManagedObjectContext object, and provides default implementations of methods to read and write files using the persistence framework. In a persistent document, the undo manager functionality is taken over by managed object context.</p><pre><code>NSPersistentDocument</code></pre></section>	https://developer.apple.com/reference/appkit/nspersistentdocument
NSPICTImageRep	A							https://developer.apple.com/reference/appkit/nspictimagerep			<section class="prog__container"><p>An NSPICTImageRep object renders an image from a PICT format data stream as described in the Carbon QuickDraw Manager documentation. This class can render PICT format version 1, version 2, and extended version 2 pictures.</p><pre><code>NSPICTImageRep</code></pre></section>	https://developer.apple.com/reference/appkit/nspictimagerep
NSPlaceholders	A							https://developer.apple.com/reference/appkit/nsplaceholders			<section class="prog__container"><p>The NSPlaceholders protocol provides an interface that allows an object to register default placeholders that will be displayed for a binding, when no other placeholder has been specified. Individual placeholder values can be specified for each of the marker objects (described in Selection Markers), as well as when the property is nil.</p><pre><code>NSPlaceholders</code></pre></section>	https://developer.apple.com/reference/appkit/nsplaceholders
NSPopover	A							https://developer.apple.com/reference/appkit/nspopover			<section class="prog__container"><p>The NSPopover class provides a means to display additional content related to existing content on the screen. The popover is positioned relative to the existing content.</p><pre><code>NSPopover</code></pre></section>	https://developer.apple.com/reference/appkit/nspopover
NSPopoverDelegate	A							https://developer.apple.com/reference/appkit/nspopoverdelegate			<section class="prog__container"><p>The NSPopoverDelegate protocol defines optional methods that can be implemented by an NSPopover delegate class to provide additional or custom functionality.</p><pre><code>NSPopoverDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nspopoverdelegate
NSPopUpButton	A							https://developer.apple.com/reference/appkit/nspopupbutton			<section class="prog__container"><p>The NSPopUpButton class defines objects that implement the pop-up and pull-down menus of the graphical user interface.</p><pre><code>NSPopUpButton</code></pre></section>	https://developer.apple.com/reference/appkit/nspopupbutton
NSPopUpButtonCell	A							https://developer.apple.com/reference/appkit/nspopupbuttoncell			<section class="prog__container"><p>The NSPopUpButtonCell class defines the visual appearance of pop-up buttons that display pop-up or pull-down menus. Pop-up menus present the user with a set of choices, much the way radio buttons do, but using much less space. Pull-down menus also provide a set of choices but present the information in a slightly different way, usually to provide a set of commands from which the user can choose.</p><pre><code>NSPopUpButtonCell</code></pre></section>	https://developer.apple.com/reference/appkit/nspopupbuttoncell
NSPredicateEditor	A							https://developer.apple.com/reference/appkit/nspredicateeditor			<section class="prog__container"><p>NSPredicateEditor is a subclass of NSRuleEditor that is specialized for editing NSPredicate objects.</p><pre><code>NSPredicateEditor</code></pre></section>	https://developer.apple.com/reference/appkit/nspredicateeditor
NSPredicateEditorRowTemplate	A							https://developer.apple.com/reference/appkit/nspredicateeditorrowtemplate			<section class="prog__container"><p>A template that describes available predicates and how to display them.</p><pre><code>NSPredicateEditorRowTemplate</code></pre></section>	https://developer.apple.com/reference/appkit/nspredicateeditorrowtemplate
NSPressGestureRecognizer	A							https://developer.apple.com/reference/appkit/nspressgesturerecognizer			<section class="prog__container"><p>An NSPressGestureRecognizer object is a discrete gesture recognizer that tracks whether the user held a mouse button down for a minimum amount of time before releasing it. Use a press gesture recognizer to configure which button must be held and the amount of time for which it must be held. You can also specify how far the mouse is allowed to move and still be considered a valid gesture.</p><pre><code>NSPressGestureRecognizer</code></pre></section>	https://developer.apple.com/reference/appkit/nspressgesturerecognizer
NSPressureConfiguration	A							https://developer.apple.com/reference/appkit/nspressureconfiguration			<section class="prog__container"><p>Use an NSPressureConfiguration object to configure the behavior and progression of a Force Touch trackpad when it responds to a mouse drag or pressure event sequence. Pressure configurations are assigned to views (NSView) and gesture recognizers (NSGestureRecognizer).</p><pre><code>NSPressureConfiguration</code></pre></section>	https://developer.apple.com/reference/appkit/nspressureconfiguration
NSPrinter	A							https://developer.apple.com/reference/appkit/nsprinter			<section class="prog__container"><p>An NSPrinter object describes a printer’s capabilities. It provides information about a printer; it does not modify printer attributes or control a printing job. An NSPrinter object can be constructed by specifying either the printer name or the make and model of an available printer. </p><pre><code>NSPrinter</code></pre></section>	https://developer.apple.com/reference/appkit/nsprinter
NSPrintInfo	A							https://developer.apple.com/reference/appkit/nsprintinfo			<section class="prog__container"><p>An NSPrintInfo object stores information that’s used to generate printed output. A shared NSPrintInfo object is automatically created for an application and is used by default for all printing jobs for that application.</p><pre><code>NSPrintInfo</code></pre></section>	https://developer.apple.com/reference/appkit/nsprintinfo
NSPrintOperation	A							https://developer.apple.com/reference/appkit/nsprintoperation			<section class="prog__container"><p>An NSPrintOperation object controls operations that generate Encapsulated PostScript (EPS) code, Portable Document Format (PDF) code, or print jobs. An NSPrintOperation object works in conjunction with two other objects: an NSPrintInfo object, which specifies how the code should be generated, and an NSView object, which generates the actual code.</p><pre><code>NSPrintOperation</code></pre></section>	https://developer.apple.com/reference/appkit/nsprintoperation
NSPrintPanel	A							https://developer.apple.com/reference/appkit/nsprintpanel			<section class="prog__container"><p>An NSPrintPanel object creates the Print panel used to query the user for information about a print job. This panel may lets the user select the range of pages to print and the number of copies before executing the Print command. </p><pre><code>NSPrintPanel</code></pre></section>	https://developer.apple.com/reference/appkit/nsprintpanel
NSPrintPanelAccessorizing	A							https://developer.apple.com/reference/appkit/nsprintpanelaccessorizing			<section class="prog__container"><p>The NSPrintPanelAccessorizing protocol declares two methods that the NSPrintPanel class uses to get information from a printing accessory controller. </p><pre><code>NSPrintPanelAccessorizing</code></pre></section>	https://developer.apple.com/reference/appkit/nsprintpanelaccessorizing
NSPrintPanelOptions	A							https://developer.apple.com/reference/appkit/nsprintpaneloptions			<section class="prog__container"><p>These constants are used to configure the contents of the main Print panel.</p><pre><code>static var showsCopies: NSPrintPanelOptions</code></pre></section>	https://developer.apple.com/reference/appkit/nsprintpaneloptions
NSProgressIndicator	A							https://developer.apple.com/reference/appkit/nsprogressindicator			<section class="prog__container"><p>The NSProgressIndicator class lets an app display a progress indicator to show that a lengthy task is under way. Some progress indicators are indeterminate and do nothing more than show that the app is busy. Others are determinate and show the percentage of the task that has been completed.</p><pre><code>NSProgressIndicator</code></pre></section>	https://developer.apple.com/reference/appkit/nsprogressindicator
NSRemoteNotificationType	A							https://developer.apple.com/reference/appkit/nsremotenotificationtype			<section class="prog__container"><p>These constants determine whether apps launched by remote notifications display a badge.</p><pre><code>static var badge: NSRemoteNotificationType</code></pre></section>	https://developer.apple.com/reference/appkit/nsremotenotificationtype
NSResponder	A							https://developer.apple.com/reference/appkit/nsresponder			<section class="prog__container"><p>NSResponder is an abstract class that forms the basis of event and command processing in AppKit. The core classes—NSApplication, NSWindow, and NSView—inherit from NSResponder, as must any class that handles events. The responder model is built around three components: event messages, action messages, and the responder chain.</p><pre><code>NSResponder</code></pre></section>	https://developer.apple.com/reference/appkit/nsresponder
NSRotationGestureRecognizer	A							https://developer.apple.com/reference/appkit/nsrotationgesturerecognizer			<section class="prog__container"><p>An NSRotationGestureRecognizer object is a continuous gesture recognizer that tracks two trackpad touches moving opposite each other in a circular motion. This rotation gesture implies that the underlying view should rotate in a matching direction. The gesture is recognized when the trackpad touches end.</p><pre><code>NSRotationGestureRecognizer</code></pre></section>	https://developer.apple.com/reference/appkit/nsrotationgesturerecognizer
NSRuleEditor	A							https://developer.apple.com/reference/appkit/nsruleeditor			<section class="prog__container"><p>An NSRuleEditor object is a view that allows the user to visually create and configure a list of options which are expressed by the rule editor as a predicate (see Predicate Programming Guide). The view has a delegate which offers a tree of choices to the view. The choices are presented by the view to the user as a row of popup buttons, static text fields, and custom views. Each row in the list represents a particular path down the tree of choices.</p><pre><code>NSRuleEditor</code></pre></section>	https://developer.apple.com/reference/appkit/nsruleeditor
NSRuleEditorDelegate	A							https://developer.apple.com/reference/appkit/nsruleeditordelegate			<section class="prog__container"><p>The NSRuleEditorDelegate protocol defines the optional methods implemented by delegates of NSRuleEditor objects.</p><pre><code>NSRuleEditorDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nsruleeditordelegate
NSRulerMarker	A							https://developer.apple.com/reference/appkit/nsrulermarker			<section class="prog__container"><p>An NSRulerMarker object displays a symbol on an NSRulerView object, indicating a location for whatever graphics element it represents in the client of the ruler view (for example, a margin or tab setting, or the edges of a graphic on the page).</p><pre><code>init(rulerView: NSRulerView, markerLocation: CGFloat, image: NSImage, imageOrigin: NSPoint)</code></pre></section>	https://developer.apple.com/reference/appkit/nsrulermarker
NSRulerView	A							https://developer.apple.com/reference/appkit/nsrulerview			<section class="prog__container"><p>An NSRulerView displays a ruler and markers above or to the side of an NSScrollView’s document view. Views within the NSScrollView can become clients of the ruler view, having it display markers for their elements, and receiving messages from the ruler view when the user manipulates the markers.</p><pre><code>hasHorizontalRuler</code></pre></section>	https://developer.apple.com/reference/appkit/nsrulerview
NSRunningApplication	A							https://developer.apple.com/reference/appkit/nsrunningapplication			<section class="prog__container"><p>NSRunningApplication is a class to manipulate and provide information for a single instance of an application. Only user applications are tracked; this does not provide information about every process on the system.</p><pre><code>NSRunningApplication</code></pre></section>	https://developer.apple.com/reference/appkit/nsrunningapplication
NSSavePanel	A							https://developer.apple.com/reference/appkit/nssavepanel			<section class="prog__container"><p>An NSSavePanel object creates and manages a Save panel and allows you to run the panel in a modal loop. The Save panel provides a simple way for a user to specify a file to use when saving a document or other data. It can restrict the user to files of a certain type, as specified by an extension.</p><pre><code>NSSavePanel</code></pre></section>	https://developer.apple.com/reference/appkit/nssavepanel
NSScreen	A							https://developer.apple.com/reference/appkit/nsscreen			<section class="prog__container"><p>An NSScreen object describes the attributes of a computer’s monitor, or screen. An application may use an NSScreen object to retrieve information about a screen and use this information to decide what to display upon that screen. For example, an application may use the deepest() method to find out which of the available screens can best represent color and then may choose to display all of its windows on that screen.</p><pre><code>NSScreen</code></pre></section>	https://developer.apple.com/reference/appkit/nsscreen
NSScroller	A							https://developer.apple.com/reference/appkit/nsscroller			<section class="prog__container"><p>An NSScroller object controls scrolling of a document view within the clip view of an NSScrollView instance (or potentially of another kind of container view). A scroller displays a slot containing a knob that the user can drag directly to the desired location. The knob indicates both the position within the document view and—by varying in size within the slot—the amount visible relative to the size of the document view.</p><pre><code>NSScroller</code></pre></section>	https://developer.apple.com/reference/appkit/nsscroller
NSScrollView	A							https://developer.apple.com/reference/appkit/nsscrollview			<section class="prog__container"><p>The NSScrollView class is the central coordinator for the Application Kit’s scrolling machinery, composed of this class, and the NSClipView, and NSScroller classes. A scroll view displays a portion of a document view that’s too large to be displayed whole and provides scroll bars that allow the user to move the document view within the scroll view.</p><pre><code>NSScrollView</code></pre></section>	https://developer.apple.com/reference/appkit/nsscrollview
NSScrubber	A							https://developer.apple.com/reference/appkit/nsscrubber			<section class="prog__container"><p>A highly-customizable item picker control for the Touch Bar on supported models of MacBook Pro. </p><pre><code>NSScrubber</code></pre></section>	https://developer.apple.com/reference/appkit/nsscrubber
NSSearchField	A							https://developer.apple.com/reference/appkit/nssearchfield			<section class="prog__container"><p>An NSSearchField object implements a text field control that is optimized for performing text-based searches. The control provides a customized text field for entering search data, a search button, a cancel button, and a pop-up icon menu for listing recent search strings and custom search categories.</p><pre><code>NSSearchField</code></pre></section>	https://developer.apple.com/reference/appkit/nssearchfield
NSSearchFieldCell	A							https://developer.apple.com/reference/appkit/nssearchfieldcell			<section class="prog__container"><p>The NSSearchFieldCell class defines the programmatic interface for text fields that are optimized for text-based searches. An NSSearchFieldCell object is “wrapped” by an NSSearchField control object, which directly inherits from the NSTextField class. The search field implemented by these classes presents a standard user interface for searches, including a search button, a cancel button, and a pop-up icon menu for listing recent search strings and custom search categories. </p><pre><code>NSSearchFieldCell</code></pre></section>	https://developer.apple.com/reference/appkit/nssearchfieldcell
NSSecureTextField	A							https://developer.apple.com/reference/appkit/nssecuretextfield			<section class="prog__container"><p>NSSecureTextField is a subclass of NSTextField that hides its text from display or other access via the user interface. It’s suitable for use as a password-entry object or for any item in which a secure value must be kept.</p><pre><code>NSSecureTextField</code></pre></section>	https://developer.apple.com/reference/appkit/nssecuretextfield
NSSecureTextFieldCell	A							https://developer.apple.com/reference/appkit/nssecuretextfieldcell			<section class="prog__container"><p>NSSecureTextFieldCell works with NSSecureTextField to provide a text field whose value is guarded from user examination. It overrides the general cell use of the field editor to provide its own field editor, which doesn’t display text or allow the user to cut or copy its value.</p><pre><code>NSSecureTextFieldCell</code></pre></section>	https://developer.apple.com/reference/appkit/nssecuretextfieldcell
NSSegmentedCell	A							https://developer.apple.com/reference/appkit/nssegmentedcell			<section class="prog__container"><p>An NSSegmentedCell object implements the appearance and behavior of a horizontal button divided into multiple segments. This class is used in conjunction with the NSSegmentedControl class to implement a segmented control. </p><pre><code>NSSegmentedCell</code></pre></section>	https://developer.apple.com/reference/appkit/nssegmentedcell
NSSegmentedControl	A							https://developer.apple.com/reference/appkit/nssegmentedcontrol			<section class="prog__container"><p>An NSSegmentedControl object implements a linear set of two or more segments, each of which functions as a button.</p><pre><code>NSSegmentedControl</code></pre></section>	https://developer.apple.com/reference/appkit/nssegmentedcontrol
NSSeguePerforming	A							https://developer.apple.com/reference/appkit/nssegueperforming			<section class="prog__container"><p>Implement the methods in the segue performing protocol to mediate a custom segue.</p><pre><code>NSStoryboardSegue</code></pre></section>	https://developer.apple.com/reference/appkit/nssegueperforming
NSServicesMenuRequestor	A							https://developer.apple.com/reference/appkit/nsservicesmenurequestor			<section class="prog__container"><p>This informal protocol consists of two methods, writeSelectionToPasteboard:types: and readSelection(from:). The first method provides data to a remote service, and the second receives any data the remote service might send back. Both respond to messages that are generated when the user chooses a command from the Services menu.</p><pre><code>writeSelectionToPasteboard:types:</code></pre></section>	https://developer.apple.com/reference/appkit/nsservicesmenurequestor
NSSharingService	A							https://developer.apple.com/reference/appkit/nssharingservice			<section class="prog__container"><p>The NSSharingService class is used to provide a consistent user experience when sharing items in macOS. For example, items can be: NSURL objects, NSString objects, NSImage objects, video (through file URLs), or any object which implements the NSPasteboardWriting protocol.</p><pre><code>NSSharingService</code></pre></section>	https://developer.apple.com/reference/appkit/nssharingservice
NSSharingServiceDelegate	A							https://developer.apple.com/reference/appkit/nssharingservicedelegate			<section class="prog__container"><p>The NSSharingServiceDelegate protocol allows customization of the position and animation of the share sheet as well as be notified of the success or failure of the item being shared..</p><pre><code>NSSharingServiceDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nssharingservicedelegate
NSSharingServicePicker	A							https://developer.apple.com/reference/appkit/nssharingservicepicker			<section class="prog__container"><p>The NSSharingServicePicker class presents a list of sharing services, so that the user can choose a service to share an item. When a service is chosen, the picker automatically executes it, which presents the sharing window.</p><pre><code>NSSharingServicePicker</code></pre></section>	https://developer.apple.com/reference/appkit/nssharingservicepicker
NSSharingServicePickerDelegate	A							https://developer.apple.com/reference/appkit/nssharingservicepickerdelegate			<section class="prog__container"><p>The NSSharingServicePickerDelegate protocol allows customization of the service picker behavior.</p><pre><code>NSSharingServicePickerDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nssharingservicepickerdelegate
NSSlider	A							https://developer.apple.com/reference/appkit/nsslider			<section class="prog__container"><p>A slider is a UI element that displays a range of values in the app. Sliders can be vertical or horizontal bars or circular dials. An indicator, or knob, notes the current setting. The user can move the knob in the slider’s bar—or rotate the knob in a circular slider—to change the setting.</p><pre><code>NSSlider</code></pre></section>	https://developer.apple.com/reference/appkit/nsslider
NSSliderCell	A							https://developer.apple.com/reference/appkit/nsslidercell			<section class="prog__container"><p>An NSSliderCell object controls the appearance and behavior of an NSSlider object, or of a single slider in an NSMatrix object.</p><pre><code>NSSliderCell</code></pre></section>	https://developer.apple.com/reference/appkit/nsslidercell
NSSound	A							https://developer.apple.com/reference/appkit/nssound			<section class="prog__container"><p>The NSSound class provides a simple interface for loading and playing audio files. This class supports the same audio encodings and file formats that are supported by Core Audio and QuickTime.</p><pre><code>NSSound</code></pre></section>	https://developer.apple.com/reference/appkit/nssound
NSSoundDelegate	A							https://developer.apple.com/reference/appkit/nssounddelegate			<section class="prog__container"><p>The NSSoundDelegate protocol defines the optional methods implemented by delegates of NSSound objects.</p><pre><code>NSSoundDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nssounddelegate
NSSpeechRecognizer	A							https://developer.apple.com/reference/appkit/nsspeechrecognizer			<section class="prog__container"><p>The NSSpeechRecognizer class is the Cocoa interface to Speech Recognition in macOS. This class provides a “command and control” style of voice recognition system, where the command phrases must be defined prior to listening, in contrast to a dictation system where the recognized text is unconstrained. </p><pre><code>NSSpeechRecognizer</code></pre></section>	https://developer.apple.com/reference/appkit/nsspeechrecognizer
NSSpeechRecognizerDelegate	A							https://developer.apple.com/reference/appkit/nsspeechrecognizerdelegate			<section class="prog__container"><p>The NSSpeechRecognizerDelegate protocol defines the optional methods implemented by delegates of NSSpeechRecognizer objects.</p><pre><code>NSSpeechRecognizerDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nsspeechrecognizerdelegate
NSSpeechSynthesizer	A							https://developer.apple.com/reference/appkit/nsspeechsynthesizer			<section class="prog__container"><p>The NSSpeechSynthesizer class is the Cocoa interface to Speech Synthesis in macOS. Instances of this class are called speech synthesizers.</p><pre><code>NSSpeechSynthesizer</code></pre></section>	https://developer.apple.com/reference/appkit/nsspeechsynthesizer
NSSpeechSynthesizerDelegate	A							https://developer.apple.com/reference/appkit/nsspeechsynthesizerdelegate			<section class="prog__container"><p>The NSSpeechSynthesizerDelegate protocol defines the optional methods implemented by delegates of NSSpeechSynthesizer objects.</p><pre><code>NSSpeechSynthesizerDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nsspeechsynthesizerdelegate
NSSpellChecker	A							https://developer.apple.com/reference/appkit/nsspellchecker			<section class="prog__container"><p>The NSSpellChecker class provides an interface to the Cocoa spell-checking service. To handle all its spell checking, an application needs only one instance of NSSpellChecker, known as the spell checker. Through the spell checker you manage the Spelling panel, in which the user can specify decisions about words that are suspect.</p><pre><code>NSSpellChecker</code></pre></section>	https://developer.apple.com/reference/appkit/nsspellchecker
NSSplitView	A							https://developer.apple.com/reference/appkit/nssplitview			<section class="prog__container"><p>A split view manages the dividers and orientation for a split view controller (an instance of the NSSplitViewController class.) By default, dividers are oriented horizontally so that sibling views are arranged vertically, from top to bottom, in the containing split view controller.</p><pre><code>NSSplitViewController</code></pre></section>	https://developer.apple.com/reference/appkit/nssplitview
NSSplitViewController	A							https://developer.apple.com/reference/appkit/nssplitviewcontroller			<section class="prog__container"><p>A split view controller manages an array of adjacent child views, and has a split view object for managing dividers between those views. </p><pre><code>NSSplitViewItem</code></pre></section>	https://developer.apple.com/reference/appkit/nssplitviewcontroller
NSSplitViewDelegate	A							https://developer.apple.com/reference/appkit/nssplitviewdelegate			<section class="prog__container"><p>The NSSplitViewDelegate protocol defines the optional methods implemented by delegates of NSSplitView objects.</p><pre><code>NSSplitViewDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nssplitviewdelegate
NSSpringLoadingDestination	A							https://developer.apple.com/reference/appkit/nsspringloadingdestination			<section class="prog__container"><p>The NSSpringLoadingDestination protocol declares methods that the destination object (or recipient) of a dragged object can implement to support spring-loading—the act of dragging an object onto a destination object and hovering or force clicking to activate the destination object.</p><pre><code>NSSpringLoadingDestination</code></pre></section>	https://developer.apple.com/reference/appkit/nsspringloadingdestination
NSSpringLoadingOptions	A							https://developer.apple.com/reference/appkit/nsspringloadingoptions			<section class="prog__container"><p>These constants denote the type of spring-loading behavior configured for the destination object.</p><pre><code>static var disabled: NSSpringLoadingOptions</code></pre></section>	https://developer.apple.com/reference/appkit/nsspringloadingoptions
NSStackView	A							https://developer.apple.com/reference/appkit/nsstackview			<section class="prog__container"><p>A stack view employs Auto Layout (the system’s constraint-based layout feature) to arrange and align an array of views according to your specification. To use a stack view effectively, you need to understand the basics of Auto Layout constraints as described in Auto Layout Guide.</p><pre><code>true</code></pre></section>	https://developer.apple.com/reference/appkit/nsstackview
NSStackViewDelegate	A							https://developer.apple.com/reference/appkit/nsstackviewdelegate			<section class="prog__container"><p>To configure a custom class to respond to a view detaching from, or reattaching to, a stack view (an instance of the NSStackView class), configure the custom class to adopt the NSStackViewDelegate protocol. Then, in a stack view instance, set the delegate property to refer to an instance of your custom class.</p><pre><code>NSStackView</code></pre></section>	https://developer.apple.com/reference/appkit/nsstackviewdelegate
NSStatusBar	A							https://developer.apple.com/reference/appkit/nsstatusbar			<section class="prog__container"><p>The NSStatusBar class defines an object that manages a collection of NSStatusItem objects displayed within the system-wide menu bar. A status item can be displayed with text or an icon, can provide a menu and a target-action message when clicked, or can be a fully customized view that you create.</p><pre><code>NSStatusBar</code></pre></section>	https://developer.apple.com/reference/appkit/nsstatusbar
NSStatusItem	A							https://developer.apple.com/reference/appkit/nsstatusitem			<section class="prog__container"><p>The NSStatusItem class represents the individual elements displayed within an NSStatusBar object. Instances are created by the NSStatusBar method statusItem(withLength:), which automatically adds the new status item to the status bar. The appearance and behavior of the status item are then set using the button property. (For additional guidance, see Menu Bar Extras.)</p><pre><code>NSStatusItem</code></pre></section>	https://developer.apple.com/reference/appkit/nsstatusitem
NSStepper	A							https://developer.apple.com/reference/appkit/nsstepper			<section class="prog__container"><p>A stepper consists of two small arrows that can increment and decrement a value that appears beside it, such as a date or time. The illustration below shows a stepper to the right of a text field, which would show the stepper’s value.</p><pre><code>NSStepper</code></pre></section>	https://developer.apple.com/reference/appkit/nsstepper
NSStepperCell	A							https://developer.apple.com/reference/appkit/nssteppercell			<section class="prog__container"><p>An NSStepperCell object controls the appearance and behavior of an NSStepper object.</p><pre><code>NSStepperCell</code></pre></section>	https://developer.apple.com/reference/appkit/nssteppercell
NSStoryboard	A							https://developer.apple.com/reference/appkit/nsstoryboard			<section class="prog__container"><p>A storyboard encapsulates the design-time view controller and window controller graph represented in an Interface Builder storyboard resource file. In the context of a storyboard file, each contained controller is called a scene.</p><pre><code>NSStoryboardSegue</code></pre></section>	https://developer.apple.com/reference/appkit/nsstoryboard
NSStoryboardSegue	A							https://developer.apple.com/reference/appkit/nsstoryboardsegue			<section class="prog__container"><p>A storyboard segue specifies a transition or containment relationship between two scenes in a storyboard, where a scene is a view controller or a window controller and a storyboard is an instance of the NSStoryboard class.</p><pre><code>NSStoryboard</code></pre></section>	https://developer.apple.com/reference/appkit/nsstoryboardsegue
NSTableCellView	A							https://developer.apple.com/reference/appkit/nstablecellview			<section class="prog__container"><p>The NSTableCellView class is a reusable container view shown for a particular cell in an NSTableView instance that uses rows for content. The imageView and textField properties are connected in Interface Builder. Additional properties can be added by subclassing NSTableCellView and adding the required properties and connecting them programmatically or in Interface Builder.</p><pre><code>NSTableCellView</code></pre></section>	https://developer.apple.com/reference/appkit/nstablecellview
NSTableColumn	A							https://developer.apple.com/reference/appkit/nstablecolumn			<section class="prog__container"><p>The NSTableColumn class stores the display characteristics and identifier for a column in an NSTableView instance. A table column object determines the width (including the maximum and minimum widths) of its column in the table view and specifies the column’s resizing and editing behavior.</p><pre><code>NSTableColumn</code></pre></section>	https://developer.apple.com/reference/appkit/nstablecolumn
NSTableHeaderCell	A							https://developer.apple.com/reference/appkit/nstableheadercell			<section class="prog__container"><p>The NSTableHeaderCell class is used by an NSTableHeaderView instance to draw the content of the column headers. This specific subclass is responsible for drawing the sort indicators.</p><pre><code>NSTableHeaderCell</code></pre></section>	https://developer.apple.com/reference/appkit/nstableheadercell
NSTableHeaderView	A							https://developer.apple.com/reference/appkit/nstableheaderview			<section class="prog__container"><p>An NSTableHeaderView is used by an NSTableView to draw headers over its columns and to handle mouse events in those headers.</p><pre><code>NSTableHeaderCell</code></pre></section>	https://developer.apple.com/reference/appkit/nstableheaderview
NSTableRowView	A							https://developer.apple.com/reference/appkit/nstablerowview			<section class="prog__container"><p>The NSTableRowView class is the view shown for a row in an NSTableView. It is responsible for displaying attributes associated with the row, including the selection highlight, and group row look. </p><pre><code>NSTableRowView</code></pre></section>	https://developer.apple.com/reference/appkit/nstablerowview
NSTableView	A							https://developer.apple.com/reference/appkit/nstableview			<section class="prog__container"><p>A user interface object that displays data for a set of related records, with rows representing individual records and columns representing the attributes of those records. </p><pre><code>NSView</code></pre></section>	https://developer.apple.com/reference/appkit/nstableview
NSTableViewAnimationOptions	A							https://developer.apple.com/reference/appkit/nstableviewanimationoptions			<section class="prog__container"><p>Specifies the animation effects to apply when inserting or removing rows. </p><pre><code>static var effectFade: NSTableViewAnimationOptions</code></pre></section>	https://developer.apple.com/reference/appkit/nstableviewanimationoptions
NSTableViewDataSource	A							https://developer.apple.com/reference/appkit/nstableviewdatasource			<section class="prog__container"><p>The NSTableViewDataSource protocol declares the methods that an instance of NSTableView uses to provide the data to a table view and allow editing of the contents of its data source object.</p><pre><code>NSTableViewDataSource</code></pre></section>	https://developer.apple.com/reference/appkit/nstableviewdatasource
NSTableViewDelegate	A							https://developer.apple.com/reference/appkit/nstableviewdelegate			<section class="prog__container"><p>A set of optional methods you implement in a table view delegate to customize the behavior of the table view. </p><pre><code>NSTableView</code></pre></section>	https://developer.apple.com/reference/appkit/nstableviewdelegate
NSTableViewGridLineStyle	A							https://developer.apple.com/reference/appkit/nstableviewgridlinestyle			<section class="prog__container"><p>NSTableView defines these constants to specify grid styles. These constants are used by the gridStyleMask property. The mask can be either gridNone or it can contain either or both of the other options combined using the C bitwise OR operator.</p><pre><code>NSTableView</code></pre></section>	https://developer.apple.com/reference/appkit/nstableviewgridlinestyle
NSTableViewRowAction	A							https://developer.apple.com/reference/appkit/nstableviewrowaction			<section class="prog__container"><p>An NSTableViewRowAction object defines a single action to present when the user swipes horizontally on a table row. In an editable table, performing a horizontal swipe on a row reveals a button to delete the row by default. This class lets you define one or more custom actions to display for a given row in your table. Each instance of this class represents a single action to perform and includes the text, formatting information, and behavior for the corresponding button.</p><pre><code>NSTableViewRowAction</code></pre></section>	https://developer.apple.com/reference/appkit/nstableviewrowaction
NSTabView	A							https://developer.apple.com/reference/appkit/nstabview			<section class="prog__container"><p>An NSTabView object provides a convenient way to present information in multiple pages. The view contains a row of tabs that give the appearance of folder tabs, as shown in the following figure. The user selects the desired page by clicking the appropriate tab or using the arrow keys to move between pages. Each page displays a view hierarchy provided by your application.</p><pre><code>NSTabView</code></pre></section>	https://developer.apple.com/reference/appkit/nstabview
NSTabViewController	A							https://developer.apple.com/reference/appkit/nstabviewcontroller			<section class="prog__container"><p>An NSTabViewController object is a container view controller that manages a tab view interface, which organizes multiple pages of content but displays only one of those pages at a time. Each page of content is managed by a separate child view controller. Navigation between child view controllers is accomplished with the help of an NSTabView object, which the tab view controller manages. When the user selects a new tab, the tab view controller displays the content associated with the associated child view controller, replacing the previous content. </p><pre><code>NSTabViewController</code></pre></section>	https://developer.apple.com/reference/appkit/nstabviewcontroller
NSTabViewDelegate	A							https://developer.apple.com/reference/appkit/nstabviewdelegate			<section class="prog__container"><p>The NSTabViewDelegate protocol defines the optional methods implemented by delegates of NSTabView objects.</p><pre><code>NSTabViewDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nstabviewdelegate
NSTabViewItem	A							https://developer.apple.com/reference/appkit/nstabviewitem			<section class="prog__container"><p>An NSTabViewItem is a convenient way for presenting information in multiple pages. A tab view is usually distinguished by a row of tabs that give the visual appearance of folder tabs. When the user clicks a tab, the tab view displays a view page provided by your application. A tab view keeps a zero-based array of NSTabViewItems, one for each tab in the view.</p><pre><code>init(identifier: Any?)</code></pre></section>	https://developer.apple.com/reference/appkit/nstabviewitem
NSText	A							https://developer.apple.com/reference/appkit/nstext			<section class="prog__container"><p>Declares the most general programmatic interface for objects that manage text. </p><pre><code>NSText</code></pre></section>	https://developer.apple.com/reference/appkit/nstext
NSTextAlternatives	A							https://developer.apple.com/reference/appkit/nstextalternatives			<section class="prog__container"><p>NSTextAlternatives is an immutable value class that stores a list of alternatives for a piece of text and communicates the user’s selection of an alternative via a notification to your app. To support dictation, for example, you might use NSTextAlternatives to present a list of alternative interpretations for a word or phrase the user speaks. If the user chooses to replace the initial interpretation with an alternative, NSTextAlternatives notifies you of the choice so that you can update the text appropriately.</p><pre><code>NSTextAlternatives</code></pre></section>	https://developer.apple.com/reference/appkit/nstextalternatives
NSTextAttachmentCell	A							https://developer.apple.com/reference/appkit/nstextattachmentcell			<section class="prog__container"><p>NSTextAttachmentCell implements the functionality of the NSTextAttachmentCell protocol. </p><pre><code>NSTextAttachmentCell</code></pre></section>	https://developer.apple.com/reference/appkit/nstextattachmentcell
NSTextAttachmentCellProtocol	A							https://developer.apple.com/reference/appkit/nstextattachmentcellprotocol			<section class="prog__container"><p>The NSTextAttachmentCell protocol declares the interface for objects that draw text attachment icons and handle mouse events on their icons. With the exceptions of cellBaselineOffset(), attachment, and attachment, all of these methods are implemented by the NSCell class and described in that class specification.</p><pre><code>cellBaselineOffset()</code></pre></section>	https://developer.apple.com/reference/appkit/nstextattachmentcellprotocol
NSTextBlock	A							https://developer.apple.com/reference/appkit/nstextblock			<section class="prog__container"><p>NSTextBlock objects represent a block of text laid out in a subregion of the text container. Text blocks appear as attributes on paragraphs, as part of the paragraph style.</p><pre><code>NSTextBlock</code></pre></section>	https://developer.apple.com/reference/appkit/nstextblock
NSTextDelegate	A							https://developer.apple.com/reference/appkit/nstextdelegate			<section class="prog__container"><p>The NSTextDelegate protocol defines the optional methods implemented by delegates of NSText objects.</p><pre><code>NSTextDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nstextdelegate
NSTextField	A							https://developer.apple.com/reference/appkit/nstextfield			<section class="prog__container"><p>An NSTextField object is a kind of NSControl that displays text that the user can select or edit and that sends its action message to its target when the user presses the Return key while editing.</p><pre><code>NSTextField</code></pre></section>	https://developer.apple.com/reference/appkit/nstextfield
NSTextFieldCell	A							https://developer.apple.com/reference/appkit/nstextfieldcell			<section class="prog__container"><p>The NSTextFieldCell class adds to the text display capabilities of the NSCell class by allowing you to set the color of both the text and its background. You can also specify whether the cell draws its background at all.</p><pre><code>NSTextFieldCell</code></pre></section>	https://developer.apple.com/reference/appkit/nstextfieldcell
NSTextFieldDelegate	A							https://developer.apple.com/reference/appkit/nstextfielddelegate			<section class="prog__container"><p>The NSTextFieldDelegate protocol adopts the NSControlTextEditingDelegate protocol and currently does not extend it further.</p><pre><code>NSTextFieldDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nstextfielddelegate
NSTextFinder	A							https://developer.apple.com/reference/appkit/nstextfinder			<section class="prog__container"><p>The NSTextFinder class provides an optional search and replace find-bar interface inside a view, usually a scroll view.</p><pre><code>NSTextFinder</code></pre></section>	https://developer.apple.com/reference/appkit/nstextfinder
NSTextFinderBarContainer	A							https://developer.apple.com/reference/appkit/nstextfinderbarcontainer			<section class="prog__container"><p>The NSTextFindBarContainer protocol provides a container in which the find bar is displayed.</p><pre><code>NSTextFindBarContainer</code></pre></section>	https://developer.apple.com/reference/appkit/nstextfinderbarcontainer
NSTextFinderClient	A							https://developer.apple.com/reference/appkit/nstextfinderclient			<section class="prog__container"><p>The NSTextFinderClient protocol is implemented by objects that wish to support searching using the NSTextFinder class and the in-window text finder bar.</p><pre><code>NSTextFinderClient</code></pre></section>	https://developer.apple.com/reference/appkit/nstextfinderclient
NSTextInput	A							https://developer.apple.com/reference/appkit/nstextinput			<section class="prog__container"><p>The NSTextInput protocol defines the methods that Cocoa text views must implement in order to interact properly with the text input management system.</p><pre><code>NSTextInput</code></pre></section>	https://developer.apple.com/reference/appkit/nstextinput
NSTextInputClient	A							https://developer.apple.com/reference/appkit/nstextinputclient			<section class="prog__container"><p>The NSTextInputClient protocol defines the methods that Cocoa text views must implement in order to interact properly with the text input management system. To create another text view class, you can either subclass NSTextView (and not NSText, for historical reasons), or subclass NSView and implement the NSTextInputClient protocol</p><pre><code>NSTextInputClient</code></pre></section>	https://developer.apple.com/reference/appkit/nstextinputclient
NSTextInputContext	A							https://developer.apple.com/reference/appkit/nstextinputcontext			<section class="prog__container"><p>An NSTextInputContext object represents the Cocoa text input system. The text input system communicates primarily with the client of the activated input context via the NSTextInputClient protocol.</p><pre><code>NSTextInputContext</code></pre></section>	https://developer.apple.com/reference/appkit/nstextinputcontext
NSTextList	A							https://developer.apple.com/reference/appkit/nstextlist			<section class="prog__container"><p>An NSTextList object represents a section of text that forms a single list. The visible elements of the list, including list markers, appear in the text as they do for lists created by hand. The list object, however, allows the list to be recognized as such by the text system. This enables automatic creation of markers and spacing. Text lists are used in HTML import and export.</p><pre><code>NSTextList</code></pre></section>	https://developer.apple.com/reference/appkit/nstextlist
NSTextTable	A							https://developer.apple.com/reference/appkit/nstexttable			<section class="prog__container"><p>An NSTextTable object represents a text table as a whole. It is responsible for laying out and drawing the text table blocks it contains, and it maintains the basic parameters of the table.</p><pre><code>NSTextTable</code></pre></section>	https://developer.apple.com/reference/appkit/nstexttable
NSTextTableBlock	A							https://developer.apple.com/reference/appkit/nstexttableblock			<section class="prog__container"><p>An NSTextTableBlock object represents a text block that appears as a cell in a text table.</p><pre><code>NSTextTableBlock</code></pre></section>	https://developer.apple.com/reference/appkit/nstexttableblock
NSTextView	A							https://developer.apple.com/reference/appkit/nstextview			<section class="prog__container"><p>A view that draws the text managed by back-end components and handles user events to select and modify its text.</p><pre><code>NSTextView</code></pre></section>	https://developer.apple.com/reference/appkit/nstextview
NSTextViewDelegate	A							https://developer.apple.com/reference/appkit/nstextviewdelegate			<section class="prog__container"><p>The NSTextViewDelegate protocol defines the optional methods implemented by delegates of NSTextView objects.</p><pre><code>NSTextViewDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nstextviewdelegate
NSTitlebarAccessoryViewController	A							https://developer.apple.com/reference/appkit/nstitlebaraccessoryviewcontroller			<section class="prog__container"><p>An NSTitlebarAccessoryViewController object manages a custom view—known as an accessory view—in the title bar–toolbar area of a window. Because a title bar accessory view controller is contained in a visual effect view (that is, NSVisualEffectView), it automatically handles the blur behind the accessory view and the size and location changes for the content of the view when a window goes in and out of full screen mode. If you’re currently using NSToolbar fullscreen accessory APIs, such as fullScreenAccessoryView, you should use NSTitlebarAccessoryViewController APIs instead.</p><pre><code>NSTitlebarAccessoryViewController</code></pre></section>	https://developer.apple.com/reference/appkit/nstitlebaraccessoryviewcontroller
NSTokenField	A							https://developer.apple.com/reference/appkit/nstokenfield			<section class="prog__container"><p>NSTokenField is a subclass of NSTextField that provides tokenized editing similar to the address field in the Mail application.</p><pre><code>NSTokenField</code></pre></section>	https://developer.apple.com/reference/appkit/nstokenfield
NSTokenFieldCell	A							https://developer.apple.com/reference/appkit/nstokenfieldcell			<section class="prog__container"><p>NSTokenFieldCell is a subclass of NSTextFieldCell that provides tokenized editing of an array of objects similar to the address field in the Mail application. The objects may be strings or objects that can be represented as strings. A single token field cell can be presented in an NSTokenField control.</p><pre><code>NSTokenFieldCell</code></pre></section>	https://developer.apple.com/reference/appkit/nstokenfieldcell
NSTokenFieldCellDelegate	A							https://developer.apple.com/reference/appkit/nstokenfieldcelldelegate			<section class="prog__container"><p>The NSTokenFieldCellDelegate protocol defines the optional methods implemented by delegates of NSTokenFieldCell objects.</p><pre><code>NSTokenFieldCellDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nstokenfieldcelldelegate
NSTokenFieldDelegate	A							https://developer.apple.com/reference/appkit/nstokenfielddelegate			<section class="prog__container"><p>The NSTokenFieldDelegate protocol defines the optional methods implemented by delegates of NSTokenField objects.</p><pre><code>NSTokenFieldDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nstokenfielddelegate
NSToolbar	A							https://developer.apple.com/reference/appkit/nstoolbar			<section class="prog__container"><p>NSToolbar and NSToolbarItem provide the mechanism for a titled window to display a toolbar just below its title bar, as shown below:</p><pre><code>NSToolbar</code></pre></section>	https://developer.apple.com/reference/appkit/nstoolbar
NSToolbarDelegate	A							https://developer.apple.com/reference/appkit/nstoolbardelegate			<section class="prog__container"><p>The NSToolbarDelegate protocol defines the optional methods implemented by delegates of NSToolbar objects.</p><pre><code>NSToolbarDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nstoolbardelegate
NSToolbarItem	A							https://developer.apple.com/reference/appkit/nstoolbaritem			<section class="prog__container"><p>The NSToolbarItem class defines each item contained within a window’s NSToolbar instance.</p><pre><code>NSToolbarItem</code></pre></section>	https://developer.apple.com/reference/appkit/nstoolbaritem
NSToolbarItemGroup	A							https://developer.apple.com/reference/appkit/nstoolbaritemgroup			<section class="prog__container"><p>NSToolbarItemGroup is a subclass of NSToolbarItem which contains subitems. The views and labels of the subitems are used, but the parent's attributes take precedence.</p><pre><code>NSToolbarItemGroup</code></pre></section>	https://developer.apple.com/reference/appkit/nstoolbaritemgroup
NSToolbarItemValidation	A							https://developer.apple.com/reference/appkit/nstoolbaritemvalidation			<section class="prog__container"><p>A toolbar item with a valid target and action is enabled by default. To allow a toolbar item to be disabled in certain situations, a toolbar item’s target can implement the validateToolbarItem(_:) method.</p><pre><code>validateToolbarItem(_:)</code></pre></section>	https://developer.apple.com/reference/appkit/nstoolbaritemvalidation
NSToolTipOwner	A							https://developer.apple.com/reference/appkit/nstooltipowner			<section class="prog__container"><p>The NSToolTipOwner informal protocol declares a method that allows an object to dynamically provide the text to a tool tip. If the tool tip object does not implement this method, the NSObject protocol description method is invoked instead.</p><pre><code>description</code></pre></section>	https://developer.apple.com/reference/appkit/nstooltipowner
NSTouch	A							https://developer.apple.com/reference/appkit/nstouch			<section class="prog__container"><p>An instance of the NSTouch class is a snapshot of a particular touch at an instant in time.</p><pre><code>NSTouch</code></pre></section>	https://developer.apple.com/reference/appkit/nstouch
NSTouchBar	A							https://developer.apple.com/reference/appkit/nstouchbar			<section class="prog__container"><p>An object that provides dynamic contextual controls in the Touch Bar of supported models of MacBook Pro.</p><pre><code>NSTouchBar</code></pre></section>	https://developer.apple.com/reference/appkit/nstouchbar
NSTouchBarItem	A							https://developer.apple.com/reference/appkit/nstouchbaritem			<section class="prog__container"><p>A control for the Touch Bar on supported models of MacBook Pro. An NSTouchBarItem instance appears on the Touch Bar within the view for an NSTouchBar object.</p><pre><code>NSTouchBarItem</code></pre></section>	https://developer.apple.com/reference/appkit/nstouchbaritem
NSTouchPhase	A							https://developer.apple.com/reference/appkit/nstouchphase			<section class="prog__container"><p>The possible phases of a touch. These constants are used by phase.</p><pre><code>phase</code></pre></section>	https://developer.apple.com/reference/appkit/nstouchphase
NSTrackingArea	A							https://developer.apple.com/reference/appkit/nstrackingarea			<section class="prog__container"><p>An NSTrackingArea object defines a region of view that generates mouse-tracking and cursor-update events when the mouse is over that region.</p><pre><code>NSTrackingArea</code></pre></section>	https://developer.apple.com/reference/appkit/nstrackingarea
NSTrackingAreaOptions	A							https://developer.apple.com/reference/appkit/nstrackingareaoptions			<section class="prog__container"><p>The data type defined for the constants specified in the options parameter of init(rect:options:owner:userInfo:). These constants are described below; you can specify multiple constants by performing a bitwise-OR operation with them. In particular, you must supply one or more of the tracking-type constants (that is, mouseEnteredAndExited, mouseMoved, and cursorUpdate) and one of the active constants (that is, activeWhenFirstResponder, activeInKeyWindow, activeInActiveApp, and activeAlways). In addition, you may specify any of the behavior constants (that is, assumeInside, inVisibleRect, and enabledDuringMouseDrag).</p><pre><code>options</code></pre></section>	https://developer.apple.com/reference/appkit/nstrackingareaoptions
NSTreeController	A							https://developer.apple.com/reference/appkit/nstreecontroller			<section class="prog__container"><p>The NSTreeController is a bindings compatible controller that manages a tree of objects. It provides selection and sort management. Its primary purpose is to act as the controller when binding NSOutlineView and NSBrowser instances to a hierarchical collection of objects. The root content object of the tree can be a single object, or an array of objects.</p><pre><code>NSTreeController</code></pre></section>	https://developer.apple.com/reference/appkit/nstreecontroller
NSTreeNode	A							https://developer.apple.com/reference/appkit/nstreenode			<section class="prog__container"><p>NSTreeNode simplifies the creation and management of trees of objects. Each tree node represents a model object. A tree node with nil as its parent node is considered the root of the tree. </p><pre><code>NSTreeNode</code></pre></section>	https://developer.apple.com/reference/appkit/nstreenode
NSTypesetter	A							https://developer.apple.com/reference/appkit/nstypesetter			<section class="prog__container"><p>NSLayoutManager uses concrete subclasses of this abstract class, NSTypesetter, to perform line layout, which includes word wrapping, hyphenation, and line breaking in either vertical or horizontal rectangles. By default, the text system uses the concrete subclass NSATSTypesetter.</p><pre><code>NSLayoutManager</code></pre></section>	https://developer.apple.com/reference/appkit/nstypesetter
NSTypesetterControlCharacterAction	A							https://developer.apple.com/reference/appkit/nstypesettercontrolcharacteraction			<section class="prog__container"><p>The following constants are possible values returned by the actionForControlCharacter(at:) method to determine the action associated with a control character.</p><pre><code>actionForControlCharacter(at:)</code></pre></section>	https://developer.apple.com/reference/appkit/nstypesettercontrolcharacteraction
NSUserDefaultsController	A							https://developer.apple.com/reference/appkit/nsuserdefaultscontroller			<section class="prog__container"><p>NSUserDefaultsController is a Cocoa bindings compatible controller class. Properties of the shared instance of this class can be bound to user interface elements to access and modify values stored in NSUserDefaults.</p><pre><code>class func shared()</code></pre></section>	https://developer.apple.com/reference/appkit/nsuserdefaultscontroller
NSUserInterfaceItemIdentification	A							https://developer.apple.com/reference/appkit/nsuserinterfaceitemidentification			<section class="prog__container"><p>The NSUserInterfaceItemIdentification protocol is used to associate a unique identifier with objects in your user interface. The protocol is adopted by AppKit interface objects to support window restoration, whereby information about window and other interface-related objects is preserved and used to restore the application’s interface during the next launch cycle. </p><pre><code>NSUserInterfaceItemIdentification</code></pre></section>	https://developer.apple.com/reference/appkit/nsuserinterfaceitemidentification
NSUserInterfaceItemSearching	A							https://developer.apple.com/reference/appkit/nsuserinterfaceitemsearching			<section class="prog__container"><p>The NSUserInterfaceItemSearching protocol show an application can implement Spotlight for Help for their own custom help data.</p><pre><code>NSUserInterfaceItemSearching</code></pre></section>	https://developer.apple.com/reference/appkit/nsuserinterfaceitemsearching
NSUserInterfaceValidations	A							https://developer.apple.com/reference/appkit/nsuserinterfacevalidations			<section class="prog__container"><p>The NSUserInterfaceValidations protocol works with the NSValidatedUserInterfaceItem protocol to allow the target of a user interface element such as a menu item or a toolbar item to decide whether or not the user interface element should be enabled.</p><pre><code>NSUserInterfaceValidations</code></pre></section>	https://developer.apple.com/reference/appkit/nsuserinterfacevalidations
NSValidatedUserInterfaceItem	A							https://developer.apple.com/reference/appkit/nsvalidateduserinterfaceitem			<section class="prog__container"><p>The NSValidatedUserInterfaceItem protocol works with the NSUserInterfaceValidations protocol to enable or disable a control automatically, depending on whether any responder in the responder chain can handle the control’s action method. The NSMenuItem and NSToolbarItem classes implement this protocol.</p><pre><code>NSValidatedUserInterfaceItem</code></pre></section>	https://developer.apple.com/reference/appkit/nsvalidateduserinterfaceitem
NSView	A							https://developer.apple.com/reference/appkit/nsview			<section class="prog__container"><p>An NSView object provides the infrastructure for drawing, printing, and handling events in an app. You typically don’t use NSView objects directly. Instead, you use objects whose classes descend from NSView or you subclass NSView yourself and override its methods to implement the behavior you need. An instance of the NSView class (or one of its subclasses) is commonly known as a view object, or simply as a view.</p><pre><code>NSView</code></pre></section>	https://developer.apple.com/reference/appkit/nsview
NSViewAnimation	A							https://developer.apple.com/reference/appkit/nsviewanimation			<section class="prog__container"><p>The NSViewAnimation class, a public subclass of NSAnimation, offers a convenient way to animate multiple views and windows. The animation effects you can achieve are limited to changes in frame location and size, and to fade-in and fade-out effects.</p><pre><code>NSViewAnimation</code></pre></section>	https://developer.apple.com/reference/appkit/nsviewanimation
NSViewController	A							https://developer.apple.com/reference/appkit/nsviewcontroller			<section class="prog__container"><p>A view controller manages a view, typically loaded from a nib file.</p><pre><code>NSWindowController</code></pre></section>	https://developer.apple.com/reference/appkit/nsviewcontroller
NSViewControllerPresentationAnimator	A							https://developer.apple.com/reference/appkit/nsviewcontrollerpresentationanimator			<section class="prog__container"><p>The view controller presentation animator protocol lets you define animations to play when transitioning between two view controllers.</p><pre><code>NSViewControllerTransitionOptions</code></pre></section>	https://developer.apple.com/reference/appkit/nsviewcontrollerpresentationanimator
NSViewControllerTransitionOptions	A							https://developer.apple.com/reference/appkit/nsviewcontrollertransitionoptions			<section class="prog__container"><p>Animation options for view transitions in a view controller.</p><pre><code>allowUserInteraction</code></pre></section>	https://developer.apple.com/reference/appkit/nsviewcontrollertransitionoptions
NSVisualEffectView	A							https://developer.apple.com/reference/appkit/nsvisualeffectview			<section class="prog__container"><p>NSVisualEffectView provides support for the user interface effects introduced in OS X Yosemite related to translucency, including “vibrant” appearances. To make the contents of a view blend with whatever is behind the view’s window or blend with contents of a view deeper in the view hierarchy, you contain the view in a visual effect view.</p><pre><code>NSVisualEffectView</code></pre></section>	https://developer.apple.com/reference/appkit/nsvisualeffectview
NSWindow	A							https://developer.apple.com/reference/appkit/nswindow			<section class="prog__container"><p>The NSWindow class defines objects (known as windows) that manage and coordinate the windows an application displays on the screen.</p><pre><code>NSWindow</code></pre></section>	https://developer.apple.com/reference/appkit/nswindow
NSWindowCollectionBehavior	A							https://developer.apple.com/reference/appkit/nswindowcollectionbehavior			<section class="prog__container"><p>Window collection behaviors related to Exposé and Spaces.</p><pre><code>static var canJoinAllSpaces: NSWindowCollectionBehavior</code></pre></section>	https://developer.apple.com/reference/appkit/nswindowcollectionbehavior
NSWindowController	A							https://developer.apple.com/reference/appkit/nswindowcontroller			<section class="prog__container"><p>An NSWindowController object manages a window, usually a window stored in a nib file.</p><pre><code>NSWindowController</code></pre></section>	https://developer.apple.com/reference/appkit/nswindowcontroller
NSWindowDelegate	A							https://developer.apple.com/reference/appkit/nswindowdelegate			<section class="prog__container"><p>The NSWindowDelegate protocol defines the methods that a delegate of NSWindow should implement. All methods in this protocol are optional.</p><pre><code>NSWindowDelegate</code></pre></section>	https://developer.apple.com/reference/appkit/nswindowdelegate
NSWindowListOptions	A							https://developer.apple.com/reference/appkit/nswindowlistoptions			<section class="prog__container"><p>This constant indicates a window ordering.</p><pre><code>static var orderedFrontToBack: NSWindowListOptions</code></pre></section>	https://developer.apple.com/reference/appkit/nswindowlistoptions
NSWindowOcclusionState	A							https://developer.apple.com/reference/appkit/nswindowocclusionstate			<section class="prog__container"><p>Specifies whether the window is occluded.</p><pre><code>static var visible: NSWindowOcclusionState</code></pre></section>	https://developer.apple.com/reference/appkit/nswindowocclusionstate
NSWindowRestoration	A							https://developer.apple.com/reference/appkit/nswindowrestoration			<section class="prog__container"><p>The NSWindowRestoration protocol defines the method that restoration classes must implement to handle the recreation of windows. At launch time, the application object retrieves the restoration class and uses its restoreWindow(withIdentifier:state:completionHandler:) method to obtain a new window whose type matches the type that was preserved previously. Classes that adopt this protocol can use the provided information to create (or obtain a reference to) the window in the new application. As part of creating the window, the class should also create any related objects, such as window controllers, normally used to manage the window. </p><pre><code>NSWindowRestoration</code></pre></section>	https://developer.apple.com/reference/appkit/nswindowrestoration
NSWindowScripting	A							https://developer.apple.com/reference/appkit/nswindowscripting			<section class="prog__container"><p>Category on NSWindow. Supports window scripting for all scriptable Cocoa applications by getting and setting standard properties and handling the close, print, and save AppleScript commands.</p><pre><code>NSWindow</code></pre></section>	https://developer.apple.com/reference/appkit/nswindowscripting
NSWindowStyleMask	A							https://developer.apple.com/reference/appkit/nswindowstylemask			<section class="prog__container"><p>These constants specify the style of a window, and can be combined using the C bitwise OR operator.</p><pre><code>static var borderless: NSWindowStyleMask</code></pre></section>	https://developer.apple.com/reference/appkit/nswindowstylemask
NSWorkspace	A							https://developer.apple.com/reference/appkit/nsworkspace			<section class="prog__container"><p>An NSWorkspace object can launch other apps and perform a variety of file-handling services.</p><pre><code>NSWorkspace</code></pre></section>	https://developer.apple.com/reference/appkit/nsworkspace
NSWorkspaceIconCreationOptions	A							https://developer.apple.com/reference/appkit/nsworkspaceiconcreationoptions			<section class="prog__container"><p>These constants describe the NSWorkspaceIconCreationOptions values used by setIcon(_:forFile:options:). You can combine these using the C bitwise OR operator. </p><pre><code>NSWorkspaceIconCreationOptions</code></pre></section>	https://developer.apple.com/reference/appkit/nsworkspaceiconcreationoptions
NSWorkspaceLaunchOptions	A							https://developer.apple.com/reference/appkit/nsworkspacelaunchoptions			<section class="prog__container"><p>These constants define launch options you can pass to launchApplication(withBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:) and open(_:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:). </p><pre><code>launchApplication(withBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:)</code></pre></section>	https://developer.apple.com/reference/appkit/nsworkspacelaunchoptions
ApplePay JS Data Types	A							https://developer.apple.com/reference/applepayjs/applepay_js_data_types			<section class="prog__container"><p>Lists the dictionaries used in Apple Pay JS that are not described elsewhere.</p><pre><code>LineItem</code></pre></section>	https://developer.apple.com/reference/applepayjs/applepay_js_data_types
ApplePayPaymentAuthorizedEvent	A							https://developer.apple.com/reference/applepayjs/applepaypaymentauthorizedevent			<section class="prog__container"><p>The ApplePayPaymentAuthorizedEvent class defines the attributes contained by the onpaymentauthorized callback function.</p><pre><code>ApplePayPaymentAuthorizedEvent</code></pre></section>	https://developer.apple.com/reference/applepayjs/applepaypaymentauthorizedevent
ApplePayPaymentMethodSelectedEvent	A							https://developer.apple.com/reference/applepayjs/applepaypaymentmethodselectedevent			<section class="prog__container"><p>The ApplePayPaymentMethodSelectedEvent class defines the attributes contained by the onpaymentmethodselected callback function.</p><pre><code>ApplePayPaymentMethodSelectedEvent</code></pre></section>	https://developer.apple.com/reference/applepayjs/applepaypaymentmethodselectedevent
ApplePaySession	A							https://developer.apple.com/reference/applepayjs/applepaysession			<section class="prog__container"><p>A session object for managing the payment process on the web. </p><pre><code>ApplePaySession</code></pre></section>	https://developer.apple.com/reference/applepayjs/applepaysession
ApplePayShippingContactSelectedEvent	A							https://developer.apple.com/reference/applepayjs/applepayshippingcontactselectedevent			<section class="prog__container"><p>The ApplePayShippingContactSelectedEvent class defines the attributes contained by the onshippingcontactselected callback function.</p><pre><code>ApplePayShippingContactSelectedEvent</code></pre></section>	https://developer.apple.com/reference/applepayjs/applepayshippingcontactselectedevent
ApplePayShippingMethodSelectedEvent	A							https://developer.apple.com/reference/applepayjs/applepayshippingmethodselectedevent			<section class="prog__container"><p>The ApplePayShippingMethodSelectedEvent class defines the attribute contained by the onshippingmethodselected callback function.</p><pre><code>ApplePayShippingMethodSelectedEvent</code></pre></section>	https://developer.apple.com/reference/applepayjs/applepayshippingmethodselectedevent
ApplePayValidateMerchantEvent	A							https://developer.apple.com/reference/applepayjs/applepayvalidatemerchantevent			<section class="prog__container"><p>The ApplePayValidateMerchantEvent class defines the attributes contained by the onvalidatemerchant callback function.</p><pre><code>ApplePayValidateMerchantEvent</code></pre></section>	https://developer.apple.com/reference/applepayjs/applepayvalidatemerchantevent
AXActionConstants.h	A							https://developer.apple.com/reference/applicationservices/axactionconstants.h			<section class="prog__container"><p>Many UIElements have a set of actions that they can perform. Actions are designed to be simple. Actions roughly correspond to things you could do with a single click of the mouse on the UIElement. Buttons and menu items, for example, have a single action: push or pick, respectively. A scroll bar has several actions: page up, page down, up one line, down one line.</p></section>	https://developer.apple.com/reference/applicationservices/axactionconstants.h
AXAttributeConstants.h	A							https://developer.apple.com/reference/applicationservices/axattributeconstants.h			<section class="prog__container"><p></p><pre><code>AXMenuItemModifiers</code></pre></section>	https://developer.apple.com/reference/applicationservices/axattributeconstants.h
AXError.h	A							https://developer.apple.com/reference/applicationservices/axerror.h			<section class="prog__container"><p>These error codes can be returned from the accessibility functions defined in AXUIElement.h.</p><pre><code>AXError</code></pre></section>	https://developer.apple.com/reference/applicationservices/axerror.h
AXNotificationConstants.h	A							https://developer.apple.com/reference/applicationservices/axnotificationconstants.h			<section class="prog__container"><p></p><pre><code>CFIndex</code></pre></section>	https://developer.apple.com/reference/applicationservices/axnotificationconstants.h
AXRoleConstants.h	A							https://developer.apple.com/reference/applicationservices/axroleconstants.h			<section class="prog__container"><p></p><pre><code> \n \n  	AXRole\n  	AXRoleDescription\n  	AXDescription\n  	AXHelp\n  	AXParent\n  	AXChildren\n  	AXWindow\n  	AXTopLevelUIElement\n  	AXEnabled\n  	AXSize\n  	AXPosition\n \n \n</code></pre></section>	https://developer.apple.com/reference/applicationservices/axroleconstants.h
AXTextAttributedString.h	A							https://developer.apple.com/reference/applicationservices/axtextattributedstring.h			<section class="prog__container"><p>This header file contains definitions of constants used with accessibility objects that represent attributed strings. An attributed string is an association of a range of characters and their attributes, such as color and font. If an accessibility object represents an attributed string, the value of its kAXParameterizedAttributeStringAttribute attribute is an attributed string object (a CFAttributedStringRef or an NSAttributedString) that uses the constants defined in this header file to define its attributes.</p><pre><code>kAXParameterizedAttributeStringAttribute</code></pre></section>	https://developer.apple.com/reference/applicationservices/axtextattributedstring.h
AXUIElement.h	A							https://developer.apple.com/reference/applicationservices/axuielement.h			<section class="prog__container"><p></p><pre><code>CFRetain</code></pre></section>	https://developer.apple.com/reference/applicationservices/axuielement.h
AXValue.h	A							https://developer.apple.com/reference/applicationservices/axvalue.h			<section class="prog__container"><p>This header contains functions and data types for working with AXValueType wrappers.</p><pre><code>func AXValueCreate(AXValueType, UnsafeRawPointer)</code></pre></section>	https://developer.apple.com/reference/applicationservices/axvalue.h
AXValueConstants.h	A							https://developer.apple.com/reference/applicationservices/axvalueconstants.h			<section class="prog__container"><p></p></section>	https://developer.apple.com/reference/applicationservices/axvalueconstants.h
UniversalAccess.h	A							https://developer.apple.com/reference/applicationservices/universalaccess.h			<section class="prog__container"><p>This header file contains functions that give applications the ability to control the zoom focus. Using these functions, an application can tell the macOS Universal Access zoom feature what part of its user interface needs focus.</p><pre><code>func UAZoomChangeFocus(UnsafePointer<CGRect>!, UnsafePointer<CGRect>!, UAZoomChangeFocusType)</code></pre></section>	https://developer.apple.com/reference/applicationservices/universalaccess.h
AUAudioUnit	A							https://developer.apple.com/reference/audiotoolbox/auaudiounit			<section class="prog__container"><p>The AUAudioUnit class defines a host’s interface to an audio unit.</p><pre><code>AUAudioUnit</code></pre></section>	https://developer.apple.com/reference/audiotoolbox/auaudiounit
AUAudioUnitBus	A							https://developer.apple.com/reference/audiotoolbox/auaudiounitbus			<section class="prog__container"><p>The AUAudioUnitBus class defines an input or output connection point on an audio unit.</p><pre><code>AUAudioUnitBus</code></pre></section>	https://developer.apple.com/reference/audiotoolbox/auaudiounitbus
AUAudioUnitBusArray	A							https://developer.apple.com/reference/audiotoolbox/auaudiounitbusarray			<section class="prog__container"><p>The AUAudioUnitBusArray class defines a container for an audio unit’s input or output busses.</p><pre><code>AUAudioUnitBusArray</code></pre></section>	https://developer.apple.com/reference/audiotoolbox/auaudiounitbusarray
AUAudioUnitFactory	A							https://developer.apple.com/reference/audiotoolbox/auaudiounitfactory			<section class="prog__container"><p>Implement this protocol to create a version 3 audio unit.</p><pre><code>AUViewController</code></pre></section>	https://developer.apple.com/reference/audiotoolbox/auaudiounitfactory
AUAudioUnitPreset	A							https://developer.apple.com/reference/audiotoolbox/auaudiounitpreset			<section class="prog__container"><p>The AUAudioUnitPreset class describes an interface for custom parameter settings provided by the audio unit developer. These presets often produce a useful sound or starting point.</p><pre><code>AUAudioUnitPreset</code></pre></section>	https://developer.apple.com/reference/audiotoolbox/auaudiounitpreset
AUAudioUnitV2Bridge	A							https://developer.apple.com/reference/audiotoolbox/auaudiounitv2bridge			<section class="prog__container"><p>The AUAudioUnitV2Bridge class wraps a version 2 audio unit in an AUAudioUnit subclass.</p><pre><code>AUAudioUnitV2Bridge</code></pre></section>	https://developer.apple.com/reference/audiotoolbox/auaudiounitv2bridge
AUParameter	A							https://developer.apple.com/reference/audiotoolbox/auparameter			<section class="prog__container"><p>An AUParameter object represents a single audio unit parameter.</p><pre><code>AUParameter</code></pre></section>	https://developer.apple.com/reference/audiotoolbox/auparameter
AUParameterGroup	A							https://developer.apple.com/reference/audiotoolbox/auparametergroup			<section class="prog__container"><p>An AUParameterGroup object represents a group of related audio unit parameters. A parameter group is KVC-compliant for its children.</p><pre><code>AUParameterGroup</code></pre></section>	https://developer.apple.com/reference/audiotoolbox/auparametergroup
AUParameterNode	A							https://developer.apple.com/reference/audiotoolbox/auparameternode			<section class="prog__container"><p>An AUParameterNode object represents a node in an audio unit’s parameter tree. Nodes are instances of either an AUParameter or AUParameterGroup class.</p><pre><code>AUParameterNode</code></pre></section>	https://developer.apple.com/reference/audiotoolbox/auparameternode
AUParameterTree	A							https://developer.apple.com/reference/audiotoolbox/auparametertree			<section class="prog__container"><p>An AUParameterTree object is a top-level group node, representing all of an audio unit’s parameters. An audio unit’s parameters are organized into a tree containing groups and parameters (groups may be nested).</p><pre><code>AUParameterTree</code></pre></section>	https://developer.apple.com/reference/audiotoolbox/auparametertree
Audio Unit Data Types	A							https://developer.apple.com/reference/audiounit/audio_unit_data_types			<section class="prog__container"><p>The Audio Unit framework defines common data types that are used in multiple places throughout the framework.</p><pre><code>AUAudioUnitStatus</code></pre></section>	https://developer.apple.com/reference/audiounit/audio_unit_data_types
AMAction	A							https://developer.apple.com/reference/automator/amaction			<section class="prog__container"><p>AMAction is an abstract class that defines the interface and general characteristics of Automator actions. Automator is an Apple application that allows users to construct and execute workflows consisting of a sequence of discrete modules called actions. An action performs a specific task, such as copying a file or cropping an image, and passes its output to Automator to give to the next action in the workflow. Actions are currently implemented as loadable bundles owned by objects of the AMBundleAction class, a subclass of AMAction.</p><pre><code>AMAction</code></pre></section>	https://developer.apple.com/reference/automator/amaction
AMAppleScriptAction	A							https://developer.apple.com/reference/automator/amapplescriptaction			<section class="prog__container"><p>Important: AMAppleScriptAction is considered deprecated. Use the Cocoa-AppleScript template (an instance of AMBundleAction) in Xcode to create AppleScript-based Automator actions.</p><pre><code>AMAppleScriptAction</code></pre></section>	https://developer.apple.com/reference/automator/amapplescriptaction
AMBundleAction	A							https://developer.apple.com/reference/automator/ambundleaction			<section class="prog__container"><p>Instances of the AMBundleAction class manage Automator actions that are loadable bundles. Automator loads action bundles from standard locations in the file system: /System/Library/Automator, /Library/Automator, and ~/Library/Automator.</p><pre><code>AMBundleAction</code></pre></section>	https://developer.apple.com/reference/automator/ambundleaction
AMShellScriptAction	A							https://developer.apple.com/reference/automator/amshellscriptaction			<section class="prog__container"><p>Instances of the AMShellScriptAction class own Automator actions whose runtime behavior is driven by a shell script or by a Perl or Python script. </p><pre><code>AMShellScriptAction</code></pre></section>	https://developer.apple.com/reference/automator/amshellscriptaction
AMWorkflow	A							https://developer.apple.com/reference/automator/amworkflow			<section class="prog__container"><p>The AMWorkflow class lets you use an Automator workflow in your application. You can display a workflow with an instance of AMWorkflowView and control its operation with an instance of AMWorkflowController.</p><pre><code>AMWorkflow</code></pre></section>	https://developer.apple.com/reference/automator/amworkflow
AMWorkflowController	A							https://developer.apple.com/reference/automator/amworkflowcontroller			<section class="prog__container"><p>The AMWorkflowController class lets you manage an Automator workflow in your application. You use the AMWorkflow class to instantiate a workflow and an instance of AMWorkflowView to display it.</p><pre><code>AMWorkflowController</code></pre></section>	https://developer.apple.com/reference/automator/amworkflowcontroller
AMWorkflowView	A							https://developer.apple.com/reference/automator/amworkflowview			<section class="prog__container"><p>You use the AMWorkflowView class to provide viewing and editing of Automator workflows in your application. You use an instance of AMWorkflow to instantiate a workflow and an instance of AMWorkflowController to control its execution. Together, these three classes provide a Model-View-Controller suite for working with workflows.</p><pre><code>AMWorkflowView</code></pre></section>	https://developer.apple.com/reference/automator/amworkflowview
AVAsset	A							https://developer.apple.com/reference/avfoundation/avasset			<section class="prog__container"><p>AVAsset is an abstract, immutable class used to model timed audiovisual media such as videos and sounds. An asset may contain one or more tracks that are intended to be presented or processed together, each of a uniform media type, including but not limited to audio, video, text, closed captions, and subtitles.</p><pre><code>AVAsset</code></pre></section>	https://developer.apple.com/reference/avfoundation/avasset
AVAssetCache	A							https://developer.apple.com/reference/avfoundation/avassetcache			<section class="prog__container"><p>An AVAssetCache is used to inspect the state of an asset’s locally cached media data.</p><pre><code>AVAssetCache</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetcache
AVAssetDownloadDelegate	A							https://developer.apple.com/reference/avfoundation/avassetdownloaddelegate			<section class="prog__container"><p>The AVAssetDownloadDelegate protocol describes the methods that AVAssetDownloadURLSession objects call on their delegates to handle download-related events. These methods should be implemented to be notified of download progress and completion events.</p><pre><code>AVAssetDownloadDelegate</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetdownloaddelegate
AVAssetDownloadTask	A							https://developer.apple.com/reference/avfoundation/avassetdownloadtask			<section class="prog__container"><p>AVAssetDownloadTask is an URLSessionTask subclass used to download HTTP Live Streaming assets. Instances of this class are created using the makeAssetDownloadTask(asset:assetTitle:assetArtworkData:options:) method of AVAssetDownloadURLSession.</p><pre><code>AVAssetDownloadTask</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetdownloadtask
AVAssetDownloadURLSession	A							https://developer.apple.com/reference/avfoundation/avassetdownloadurlsession			<section class="prog__container"><p>A subclass of URLSession used to support creating and executing instances of AVAssetDownloadTask.</p><pre><code>URLSession</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetdownloadurlsession
AVAssetExportSession	A							https://developer.apple.com/reference/avfoundation/avassetexportsession			<section class="prog__container"><p>An AVAssetExportSession object transcodes the contents of an AVAsset source object to create an output of the form described by a specified export preset.</p><pre><code>AVAssetExportSession</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetexportsession
AVAssetImageGenerator	A							https://developer.apple.com/reference/avfoundation/avassetimagegenerator			<section class="prog__container"><p>An AVAssetImageGenerator object provides thumbnail or preview images of assets independently of playback.</p><pre><code>AVAssetImageGenerator</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetimagegenerator
AVAssetReader	A							https://developer.apple.com/reference/avfoundation/avassetreader			<section class="prog__container"><p>You use an AVAssetReader object to obtain media data of an asset, whether the asset is file-based or represents an assemblage of media data from multiple sources (as with an AVComposition object).</p><pre><code>AVAssetReader</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetreader
AVAssetReaderAudioMixOutput	A							https://developer.apple.com/reference/avfoundation/avassetreaderaudiomixoutput			<section class="prog__container"><p>AVAssetReaderAudioMixOutput is a concrete subclass of AVAssetReaderOutput that defines an interface for reading audio samples that result from mixing the audio from one or more tracks of an AVAssetReader object's asset.</p><pre><code>AVAssetReaderAudioMixOutput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetreaderaudiomixoutput
AVAssetReaderOutput	A							https://developer.apple.com/reference/avfoundation/avassetreaderoutput			<section class="prog__container"><p>AVAssetReaderOutput is an abstract class that defines an interface for reading a single collection of samples of a common media type from an AVAssetReader object.</p><pre><code>AVAssetReaderOutput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetreaderoutput
AVAssetReaderOutputMetadataAdaptor	A							https://developer.apple.com/reference/avfoundation/avassetreaderoutputmetadataadaptor			<section class="prog__container"><p>The AVAssetReaderOutputMetadataAdaptor class defines an interface for reading metadata, packaged as instances of AVTimedMetadataGroup, from a single AVAssetReaderTrackOutput object.</p><pre><code>AVAssetReaderOutputMetadataAdaptor</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetreaderoutputmetadataadaptor
AVAssetReaderSampleReferenceOutput	A							https://developer.apple.com/reference/avfoundation/avassetreadersamplereferenceoutput			<section class="prog__container"><p>AVAssetReaderSampleReferenceOutput is a concrete subclass of the AVAssetReaderOutput class that defines an interface for reading sample references from a single AVAssetTrack of an AVAsset instance contained in an AVAssetReader object.</p><pre><code>AVAssetReaderSampleReferenceOutput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetreadersamplereferenceoutput
AVAssetReaderTrackOutput	A							https://developer.apple.com/reference/avfoundation/avassetreadertrackoutput			<section class="prog__container"><p>AVAssetReaderTrackOutput defines an interface for reading media data from a single AVAssetTrack object of an asset reader's asset.</p><pre><code>AVAssetReaderTrackOutput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetreadertrackoutput
AVAssetReaderVideoCompositionOutput	A							https://developer.apple.com/reference/avfoundation/avassetreadervideocompositionoutput			<section class="prog__container"><p>AVAssetReaderVideoCompositionOutput is a subclass of AVAssetReaderOutput you use to read video frames that have been composited together from the frames in one or more tracks of an AVAssetReader object's asset.</p><pre><code>AVAssetReaderVideoCompositionOutput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetreadervideocompositionoutput
AVAssetResourceLoader	A							https://developer.apple.com/reference/avfoundation/avassetresourceloader			<section class="prog__container"><p>An AVAssetResourceLoader object mediates resource requests from an AVURLAsset object with a delegate object that you provide. When a request arrives, the resource loader asks your delegate if it is able to handle the request and reports the results back to the asset.</p><pre><code>AVAssetResourceLoader</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetresourceloader
AVAssetResourceLoaderDelegate	A							https://developer.apple.com/reference/avfoundation/avassetresourceloaderdelegate			<section class="prog__container"><p>The AVAssetResourceLoaderDelegate protocol defines a method that lets your code handle resource loading requests coming from an AVURLAsset object. </p><pre><code>AVAssetResourceLoaderDelegate</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetresourceloaderdelegate
AVAssetResourceLoadingContentInformationRequest	A							https://developer.apple.com/reference/avfoundation/avassetresourceloadingcontentinformationrequest			<section class="prog__container"><p>The AVAssetResourceLoadingContentInformationRequest class represents a query for essential information about a resource referenced by an asset resource loading request.</p><pre><code>AVAssetResourceLoadingContentInformationRequest</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetresourceloadingcontentinformationrequest
AVAssetResourceLoadingDataRequest	A							https://developer.apple.com/reference/avfoundation/avassetresourceloadingdatarequest			<section class="prog__container"><p>Use the AVAssetResourceLoadingDataRequest class to request data from a resource referenced by an AVAssetResourceLoadingRequest instance.</p><pre><code>AVAssetResourceLoadingDataRequest</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetresourceloadingdatarequest
AVAssetResourceLoadingRequest	A							https://developer.apple.com/reference/avfoundation/avassetresourceloadingrequest			<section class="prog__container"><p>An AVAssetResourceLoadingRequest object encapsulates information about a resource request issued from a resource loader object.</p><pre><code>AVAssetResourceLoadingRequest</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetresourceloadingrequest
AVAssetResourceRenewalRequest	A							https://developer.apple.com/reference/avfoundation/avassetresourcerenewalrequest			<section class="prog__container"><p>The AVAssetResourceRenewalRequest class is a subclass of AVAssetResourceLoadingRequest that encapsulates information about a resource request issued by a resource loader for the purpose of renewing a request previously issued.</p><pre><code>AVURLAsset</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetresourcerenewalrequest
AVAssetTrack	A							https://developer.apple.com/reference/avfoundation/avassettrack			<section class="prog__container"><p>An AVAssetTrack object provides the track-level inspection interface for an asset’s media tracks.</p><pre><code>AVAssetTrack</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassettrack
AVAssetTrackGroup	A							https://developer.apple.com/reference/avfoundation/avassettrackgroup			<section class="prog__container"><p>The AVAssetTrackGroup class encapsulates a single group of related tracks in an asset.</p><pre><code>AVAssetTrackGroup</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassettrackgroup
AVAssetTrackSegment	A							https://developer.apple.com/reference/avfoundation/avassettracksegment			<section class="prog__container"><p>An AVAssetTrackSegment object represents a segment of an AVAssetTrack object, comprising of a time mapping from the source to the asset track timeline.</p><pre><code>AVAssetTrackSegment</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassettracksegment
AVAssetWriter	A							https://developer.apple.com/reference/avfoundation/avassetwriter			<section class="prog__container"><p>You use an AVAssetWriter object to write media data to a new file of a specified audiovisual container type, such as a QuickTime movie file or an MPEG-4 file, with support for automatic interleaving of media data for multiple concurrent tracks.</p><pre><code>AVAssetWriter</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetwriter
AVAssetWriterInput	A							https://developer.apple.com/reference/avfoundation/avassetwriterinput			<section class="prog__container"><p>You use an AVAssetWriterInput to append media samples packaged as CMSampleBuffer objects (see CMSampleBuffer), or collections of metadata, to a single track of the output file of an AVAssetWriter object.</p><pre><code>AVAssetWriterInput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetwriterinput
AVAssetWriterInputGroup	A							https://developer.apple.com/reference/avfoundation/avassetwriterinputgroup			<section class="prog__container"><p>The AVAssetWriterInputGroup class associates tracks corresponding to inputs with each other in a mutually exclusive relationship.</p><pre><code>AVAssetWriterInputGroup</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetwriterinputgroup
AVAssetWriterInputMetadataAdaptor	A							https://developer.apple.com/reference/avfoundation/avassetwriterinputmetadataadaptor			<section class="prog__container"><p>The AVAssetWriterInputMetadataAdaptor class defines an interface for writing metadata packaged as instances of AVTimedMetadataGroup to a single AVAssetWriterInput object.</p><pre><code>AVAssetWriterInputMetadataAdaptor</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetwriterinputmetadataadaptor
AVAssetWriterInputPassDescription	A							https://developer.apple.com/reference/avfoundation/avassetwriterinputpassdescription			<section class="prog__container"><p>The AVAssetWriterInputPassDescription class defines an interface for querying information about the requirements of the current pass, such as the time ranges of media data to append.</p><pre><code>AVAssetWriterInputPassDescription</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetwriterinputpassdescription
AVAssetWriterInputPixelBufferAdaptor	A							https://developer.apple.com/reference/avfoundation/avassetwriterinputpixelbufferadaptor			<section class="prog__container"><p>You use an AVAssetWriterInputPixelBufferAdaptor to append video samples packaged as CVPixelBuffer objects to a single AVAssetWriterInput object.</p><pre><code>AVAssetWriterInputPixelBufferAdaptor</code></pre></section>	https://developer.apple.com/reference/avfoundation/avassetwriterinputpixelbufferadaptor
AVAsynchronousCIImageFilteringRequest	A							https://developer.apple.com/reference/avfoundation/avasynchronousciimagefilteringrequest			<section class="prog__container"><p>An AVAsynchronousCIImageFilteringRequest object provides for using Core Image filters to process an individual video frame in a video composition (a AVVideoComposition or AVMutableVideoComposition object).</p><pre><code>AVAsynchronousCIImageFilteringRequest</code></pre></section>	https://developer.apple.com/reference/avfoundation/avasynchronousciimagefilteringrequest
AVAsynchronousKeyValueLoading	A							https://developer.apple.com/reference/avfoundation/avasynchronouskeyvalueloading			<section class="prog__container"><p>The AVAsynchronousKeyValueLoading protocol defines methods that let you use an AVAsset or AVAssetTrack object without blocking the calling thread. A “key” is any property of a class that implements this protocol. Using the protocol’s methods, you can find out the current status of a key (for example, whether the corresponding value has been loaded) and ask the object to load its values asynchronously, informing you when the operation has completed.</p><pre><code>AVAsynchronousKeyValueLoading</code></pre></section>	https://developer.apple.com/reference/avfoundation/avasynchronouskeyvalueloading
AVAsynchronousVideoCompositionRequest	A							https://developer.apple.com/reference/avfoundation/avasynchronousvideocompositionrequest			<section class="prog__container"><p>An AVAsynchronousVideoCompositionRequest instance contains the information necessary for a video compositor to render an output pixel buffer.</p><pre><code>AVAsynchronousVideoCompositionRequest</code></pre></section>	https://developer.apple.com/reference/avfoundation/avasynchronousvideocompositionrequest
AVAudio3DMixing	A							https://developer.apple.com/reference/avfoundation/avaudio3dmixing			<section class="prog__container"><p>The AVAudio3DMixing protocol defines 3D mixing properties. Currently these properties are only implemented by the AVAudioEnvironmentNode mixer.</p><pre><code>AVAudio3DMixing</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudio3dmixing
AVAudioBuffer	A							https://developer.apple.com/reference/avfoundation/avaudiobuffer			<section class="prog__container"><p>The AVAudioBuffer class represents a buffer of audio data and its format.</p><pre><code>AVAudioBuffer</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiobuffer
AVAudioChannelLayout	A							https://developer.apple.com/reference/avfoundation/avaudiochannellayout			<section class="prog__container"><p>The AVAudioChannelLayout class describes the roles of a set of audio channels.</p><pre><code>AVAudioChannelLayout</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiochannellayout
AVAudioEngine	A							https://developer.apple.com/reference/avfoundation/avaudioengine			<section class="prog__container"><p>The AVAudioEngine class defines a group of connected AVAudioNode objects, known as audio nodes. You use audio nodes to generate audio signals, process them, and perform audio input and output.</p><pre><code>AVAudioEngine</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudioengine
AVAudioEnvironmentDistanceAttenuationParameters	A							https://developer.apple.com/reference/avfoundation/avaudioenvironmentdistanceattenuationparameters			<section class="prog__container"><p>The AVAudioEnvironmentDistanceAttenuationParameters class specifies the attenuation distance, the gradual loss in audio intensity, and characteristics.</p><pre><code>AVAudioEnvironmentDistanceAttenuationParameters</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudioenvironmentdistanceattenuationparameters
AVAudioEnvironmentNode	A							https://developer.apple.com/reference/avfoundation/avaudioenvironmentnode			<section class="prog__container"><p>The AVAudioEnvironmentNode class is a mixer node that simulates a 3D audio environment. Any node that conforms to the AVAudioMixing protocol (for example, AVAudioPlayerNode) can act as a source in this environment.</p><pre><code>AVAudioEnvironmentNode</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudioenvironmentnode
AVAudioEnvironmentReverbParameters	A							https://developer.apple.com/reference/avfoundation/avaudioenvironmentreverbparameters			<section class="prog__container"><p>The AVAudioEnvironmentReverbParameters class encapsulates the parameters that you use to control the reverb of the AVAudioEnvironmentNode class.</p><pre><code>AVAudioEnvironmentReverbParameters</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudioenvironmentreverbparameters
AVAudioFile	A							https://developer.apple.com/reference/avfoundation/avaudiofile			<section class="prog__container"><p>The AVAudioFile class represents an audio file that can be opened for reading or writing.</p><pre><code>AVAudioFile</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiofile
AVAudioFormat	A							https://developer.apple.com/reference/avfoundation/avaudioformat			<section class="prog__container"><p>The AVAudioFormat class wraps a Core Audio AudioStreamBasicDescription struct, with convenience initializers and accessors for common formats, including Core Audio’s standard deinterleaved 32-bit floating point format.</p><pre><code>AVAudioFormat</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudioformat
AVAudioInputNode	A							https://developer.apple.com/reference/avfoundation/avaudioinputnode			<section class="prog__container"><p>The AVAudioInputNode class represents a node that connects to the system's audio input.</p><pre><code>AVAudioInputNode</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudioinputnode
AVAudioIONode	A							https://developer.apple.com/reference/avfoundation/avaudioionode			<section class="prog__container"><p>The AVAudioIONode class is the base class for nodes that connects to the system's audio input or output.</p><pre><code>AVAudioIONode</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudioionode
AVAudioMix	A							https://developer.apple.com/reference/avfoundation/avaudiomix			<section class="prog__container"><p>An AVAudioMix object manages the input parameters for mixing audio tracks. It allows custom audio processing to be performed on audio tracks during playback or other operations.</p><pre><code>AVAudioMix</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiomix
AVAudioMixerNode	A							https://developer.apple.com/reference/avfoundation/avaudiomixernode			<section class="prog__container"><p>The AVAudioMixerNode class represents a node that mixes its inputs to a single output.</p><pre><code>AVAudioMixerNode</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiomixernode
AVAudioMixing	A							https://developer.apple.com/reference/avfoundation/avaudiomixing			<section class="prog__container"><p>The AVAudioMixing protocol defines properties applicable to the input bus of a mixer node.</p><pre><code>AVAudioMixing</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiomixing
AVAudioMixInputParameters	A							https://developer.apple.com/reference/avfoundation/avaudiomixinputparameters			<section class="prog__container"><p>An AVAudioMixInputParameters object represents the parameters that should be applied to an audio track when it is added to a mix. </p><pre><code>AVAudioMixInputParameters</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiomixinputparameters
AVAudioNode	A							https://developer.apple.com/reference/avfoundation/avaudionode			<section class="prog__container"><p>The AVAudioNode class is an abstract class for an audio generation, processing, or I/O block.</p><pre><code>AVAudioNode</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudionode
AVAudioOutputNode	A							https://developer.apple.com/reference/avfoundation/avaudiooutputnode			<section class="prog__container"><p>The AVAudioOutputNode class represents a audio node that connects to the system's audio output.</p><pre><code>AVAudioOutputNode</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiooutputnode
AVAudioPCMBuffer	A							https://developer.apple.com/reference/avfoundation/avaudiopcmbuffer			<section class="prog__container"><p>The AVAudioPCMBuffer class is a subclass of AVAudioBuffer for use with PCM audio formats.</p><pre><code>AVAudioPCMBuffer</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiopcmbuffer
AVAudioPlayer	A							https://developer.apple.com/reference/avfoundation/avaudioplayer			<section class="prog__container"><p>An instance of the AVAudioPlayer class, called an audio player, provides playback of audio data from a file or memory.</p><pre><code>AVAudioPlayer</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudioplayer
AVAudioPlayerDelegate	A							https://developer.apple.com/reference/avfoundation/avaudioplayerdelegate			<section class="prog__container"><p>The delegate of an AVAudioPlayer object must adopt the AVAudioPlayerDelegate protocol. All of the methods in this protocol are optional. They allow a delegate to respond to audio interruptions and audio decoding errors, and to the completion of a sound’s playback.</p><pre><code>AVAudioPlayer</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudioplayerdelegate
AVAudioPlayerNode	A							https://developer.apple.com/reference/avfoundation/avaudioplayernode			<section class="prog__container"><p>The AVAudioPlayerNode class plays buffers or segments of audio files.</p><pre><code>AVAudioPlayerNode</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudioplayernode
AVAudioRecorder	A							https://developer.apple.com/reference/avfoundation/avaudiorecorder			<section class="prog__container"><p>An instance of the AVAudioRecorder class, called an audio recorder, provides audio recording capability in your application. Using an audio recorder you can:</p><pre><code>AVAudioRecorder</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiorecorder
AVAudioRecorderDelegate	A							https://developer.apple.com/reference/avfoundation/avaudiorecorderdelegate			<section class="prog__container"><p>The delegate of an AVAudioRecorder object must adopt the AVAudioRecorderDelegate protocol. All of the methods in this protocol are optional. They allow a delegate to respond to audio interruptions and audio decoding errors, and to the completion of a recording.</p><pre><code>AVAudioRecorder</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiorecorderdelegate
AVAudioSession	A							https://developer.apple.com/reference/avfoundation/avaudiosession			<section class="prog__container"><p>An audio session is a Singleton object that you employ to set the audio context for your app and to express to the system your intentions for your app’s audio behavior.</p><pre><code>AVAudioSession</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiosession
AVAudioSessionChannelDescription	A							https://developer.apple.com/reference/avfoundation/avaudiosessionchanneldescription			<section class="prog__container"><p>The AVAudioSessionChannelDescription class provides descriptive information about a hardware channel on the current device. You typically do not create instances of this class yourself but can retrieve them from the port AVAudioSessionPortDescription object used to reference the intended input or output port. </p><pre><code>AVAudioSessionChannelDescription</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiosessionchanneldescription
AVAudioSessionDataSourceDescription	A							https://developer.apple.com/reference/avfoundation/avaudiosessiondatasourcedescription			<section class="prog__container"><p>The AVAudioSessionDataSourceDescription class defines a data source for an audio input or output, providing information such as the source’s name, location and orientation.</p><pre><code>AVAudioSessionDataSourceDescription</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiosessiondatasourcedescription
AVAudioSessionDelegate	A							https://developer.apple.com/reference/avfoundation/avaudiosessiondelegate			<section class="prog__container"><p>The use of this protocol is deprecated in iOS 6 and later. Instead, you should use the notifications declared in AVAudioSession. </p><pre><code>AVAudioSession</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiosessiondelegate
AVAudioSessionPortDescription	A							https://developer.apple.com/reference/avfoundation/avaudiosessionportdescription			<section class="prog__container"><p>An AVAudioSessionPortDescription object describes a single input or output port associated with an audio route. You can use the information in this class to obtain information about the capabilities of the port and the hardware channels it supports.</p><pre><code>AVAudioSessionPortDescription</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiosessionportdescription
AVAudioSessionRouteDescription	A							https://developer.apple.com/reference/avfoundation/avaudiosessionroutedescription			<section class="prog__container"><p>An AVAudioSessionRouteDescription manages the input and output ports associated with the current audio route for a session. </p><pre><code>AVAudioSessionRouteDescription</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiosessionroutedescription
AVAudioStereoMixing	A							https://developer.apple.com/reference/avfoundation/avaudiostereomixing			<section class="prog__container"><p>The AVAudioStereoMixing protocol defines stereo mixing properties used by mixers.</p><pre><code>AVAudioStereoMixing</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiostereomixing
AVAudioTime	A							https://developer.apple.com/reference/avfoundation/avaudiotime			<section class="prog__container"><p>The AVAudioTime class is used by AVAudioEngine to represent time. Instances of the class are immutable.</p><pre><code>AVAudioTime</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiotime
AVAudioUnit	A							https://developer.apple.com/reference/avfoundation/avaudiounit			<section class="prog__container"><p>The AVAudioUnit class is a subclass of the AVAudioNode class that, depending on the type of the audio unit, processes audio either in real-time or non real-time.</p><pre><code>AVAudioUnit</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiounit
AVAudioUnitComponent	A							https://developer.apple.com/reference/avfoundation/avaudiounitcomponent			<section class="prog__container"><p>The AVAudioUnitComponent class provides details about an audio unit such as: type, subtype, manufacturer, and location. User tags can be added to the AVAudioUnitComponent which can be queried later for display.</p><pre><code>AVAudioUnitComponent</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiounitcomponent
AVAudioUnitComponentManager	A							https://developer.apple.com/reference/avfoundation/avaudiounitcomponentmanager			<section class="prog__container"><p>The AVAudioUnitComponentManager class is a singleton object that provides a way to find audio components that are registered with the system. It provides methods to search and query various information about the audio components without opening them. Currently, only audio components that are audio units can only be searched.</p><pre><code>AVAudioUnitComponentManager</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiounitcomponentmanager
AVAudioUnitDelay	A							https://developer.apple.com/reference/avfoundation/avaudiounitdelay			<section class="prog__container"><p>The AVAudioUnitDelay class is an AVAudioUnitEffect subclass that implements a delay effect.</p><pre><code>AVAudioUnitDelay</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiounitdelay
AVAudioUnitDistortion	A							https://developer.apple.com/reference/avfoundation/avaudiounitdistortion			<section class="prog__container"><p>The AVAudioUnitDistortion class is an AVAudioUnitEffect subclass that implements a multi-stage distortion effect.</p><pre><code>AVAudioUnitDistortion</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiounitdistortion
AVAudioUnitEffect	A							https://developer.apple.com/reference/avfoundation/avaudiouniteffect			<section class="prog__container"><p>An AVAudioUnitEffect class that processes audio in real-time using AudioUnits of type: effect, music effect, panner, remote effect or remote music effect. These effects run in real-time and process some number of audio input samples to produce number of audio output samples. A delay unit is an example of an effect unit.</p><pre><code>AVAudioUnitEffect</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiouniteffect
AVAudioUnitEQ	A							https://developer.apple.com/reference/avfoundation/avaudiouniteq			<section class="prog__container"><p>The AVAudioUnitEQ class is an AVAudioUnitEffect subclass that implements a multi-band equalizer.</p><pre><code>AVAudioUnitEQ</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiouniteq
AVAudioUnitEQFilterParameters	A							https://developer.apple.com/reference/avfoundation/avaudiouniteqfilterparameters			<section class="prog__container"><p>The AVAudioUnitEQFilterParameters class encapsulates the parameters used by an AVAudioUnitEQ instance.</p><pre><code>AVAudioUnitEQFilterParameters</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiouniteqfilterparameters
AVAudioUnitGenerator	A							https://developer.apple.com/reference/avfoundation/avaudiounitgenerator			<section class="prog__container"><p>The AVAudioUnitGenerator is an AVAudioUnit subclass that generates audio output.</p><pre><code>AVAudioUnitGenerator</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiounitgenerator
AVAudioUnitMIDIInstrument	A							https://developer.apple.com/reference/avfoundation/avaudiounitmidiinstrument			<section class="prog__container"><p>The AVAudioUnitMIDIInstrument class is an abstract class representing music devices or remote instruments.</p><pre><code>AVAudioUnitMIDIInstrument</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiounitmidiinstrument
AVAudioUnitReverb	A							https://developer.apple.com/reference/avfoundation/avaudiounitreverb			<section class="prog__container"><p>The AVAudioUnitReverb class is an AVAudioUnitEffect subclass that implements a reverb effect.</p><pre><code>AVAudioUnitReverb</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiounitreverb
AVAudioUnitSampler	A							https://developer.apple.com/reference/avfoundation/avaudiounitsampler			<section class="prog__container"><p>The AVAudioUnitSampler class encapsulates Apple's Sampler Audio Unit. The sampler audio unit can be configured by loading different types of instruments such as an “.aupreset” file, a DLS or SF2 sound bank, an EXS24 instrument, a single audio file or with an array of audio files. The output is a single stereo bus.</p><pre><code>AVAudioUnitSampler</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiounitsampler
AVAudioUnitTimeEffect	A							https://developer.apple.com/reference/avfoundation/avaudiounittimeeffect			<section class="prog__container"><p>The AVAudioUnitTimeEffect class is an AVAudioUnit subclass that processes audio in non-realtime.</p><pre><code>AVAudioUnitTimeEffect</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiounittimeeffect
AVAudioUnitTimePitch	A							https://developer.apple.com/reference/avfoundation/avaudiounittimepitch			<section class="prog__container"><p>The AVAudioUnitTimePitch class is an AVAudioUnitTimeEffect subclass that provides good quality playback rate and pitch shifting independent of each other.</p><pre><code>AVAudioUnitTimePitch</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiounittimepitch
AVAudioUnitVarispeed	A							https://developer.apple.com/reference/avfoundation/avaudiounitvarispeed			<section class="prog__container"><p>The AVAudioUnitVarispeed class is an AVAudioUnitTimeEffect subclass that allows control of the playback rate.</p><pre><code>AVAudioUnitVarispeed</code></pre></section>	https://developer.apple.com/reference/avfoundation/avaudiounitvarispeed
AVCaptureAudioChannel	A							https://developer.apple.com/reference/avfoundation/avcaptureaudiochannel			<section class="prog__container"><p>An object that monitors average and peak power levels for an audio channel in a capture connection.</p><pre><code>AVCaptureAudioChannel</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcaptureaudiochannel
AVCaptureAudioDataOutput	A							https://developer.apple.com/reference/avfoundation/avcaptureaudiodataoutput			<section class="prog__container"><p>A capture output that records audio and provides access to audio sample buffers as they are recorded. </p><pre><code>func setSampleBufferDelegate(AVCaptureAudioDataOutputSampleBufferDelegate!, queue: DispatchQueue!)</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcaptureaudiodataoutput
AVCaptureAudioDataOutputSampleBufferDelegate	A							https://developer.apple.com/reference/avfoundation/avcaptureaudiodataoutputsamplebufferdelegate			<section class="prog__container"><p>Methods for receiving audio sample data from an audio capture.</p><pre><code>AVCaptureAudioDataOutputSampleBuffer</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcaptureaudiodataoutputsamplebufferdelegate
AVCaptureAudioFileOutput	A							https://developer.apple.com/reference/avfoundation/avcaptureaudiofileoutput			<section class="prog__container"><p>A capture output that records audio and saves the recorded audio to a file.</p><pre><code>AVCaptureAudioFileOutput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcaptureaudiofileoutput
AVCaptureAudioPreviewOutput	A							https://developer.apple.com/reference/avfoundation/avcaptureaudiopreviewoutput			<section class="prog__container"><p>A capture output that provides preview playback for audio being recorded in a capture session.</p><pre><code>AVCaptureAudioPreviewOutput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcaptureaudiopreviewoutput
AVCaptureAutoExposureBracketedStillImageSettings	A							https://developer.apple.com/reference/avfoundation/avcaptureautoexposurebracketedstillimagesettings			<section class="prog__container"><p>A configuration for defining bracketed photo captures in terms of bias relative to automatic exposure. </p><pre><code>AVCaptureAutoExposureBracketedStillImageSettings</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcaptureautoexposurebracketedstillimagesettings
AVCaptureBracketedStillImageSettings	A							https://developer.apple.com/reference/avfoundation/avcapturebracketedstillimagesettings			<section class="prog__container"><p>The abstract superclass for bracketed photo capture settings.</p><pre><code>AVCaptureBracketedStillImageSettings</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturebracketedstillimagesettings
AVCaptureConnection	A							https://developer.apple.com/reference/avfoundation/avcaptureconnection			<section class="prog__container"><p>A connection between a specific pair of capture input and capture output objects in a capture session.</p><pre><code>AVCaptureInput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcaptureconnection
AVCaptureDevice	A							https://developer.apple.com/reference/avfoundation/avcapturedevice			<section class="prog__container"><p>A device that provides input (such as audio or video) for capture sessions and offers controls for hardware-specific capture features.</p><pre><code>AVCaptureDevice</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturedevice
AVCaptureDeviceDiscoverySession	A							https://developer.apple.com/reference/avfoundation/avcapturedevicediscoverysession			<section class="prog__container"><p>A query for finding and monitoring available capture devices. </p><pre><code>devices</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturedevicediscoverysession
AVCaptureDeviceFormat	A							https://developer.apple.com/reference/avfoundation/avcapturedeviceformat			<section class="prog__container"><p>A set of media format and capture settings (such as video resolution and frame rate) that can be used to configure a capture device. </p><pre><code>AVCaptureDeviceFormat</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturedeviceformat
AVCaptureDeviceInput	A							https://developer.apple.com/reference/avfoundation/avcapturedeviceinput			<section class="prog__container"><p>A capture input that provides media from a capture device to a capture session.</p><pre><code>AVCaptureDeviceInput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturedeviceinput
AVCaptureDeviceInputSource	A							https://developer.apple.com/reference/avfoundation/avcapturedeviceinputsource			<section class="prog__container"><p>A distinct input source on a capture device.</p><pre><code>AVCaptureDevice</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturedeviceinputsource
AVCaptureDeviceType	A							https://developer.apple.com/reference/avfoundation/avcapturedevicetype			<section class="prog__container"><p>Values identifying the general type of a capture device, used with the defaultDevice(withDeviceType:mediaType:position:) method and the AVCaptureDeviceDiscoverySession class.</p><pre><code>defaultDevice(withDeviceType:mediaType:position:)</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturedevicetype
AVCaptureFileOutput	A							https://developer.apple.com/reference/avfoundation/avcapturefileoutput			<section class="prog__container"><p>The abstract superclass for capture outputs that can record captured data to a file.</p><pre><code>var delegate: AVCaptureFileOutputDelegate!</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturefileoutput
AVCaptureFileOutputDelegate	A							https://developer.apple.com/reference/avfoundation/avcapturefileoutputdelegate			<section class="prog__container"><p>Methods for monitoring or controlling the output of a media file capture.</p><pre><code>AVCaptureFileOutputDelegate</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturefileoutputdelegate
AVCaptureFileOutputRecordingDelegate	A							https://developer.apple.com/reference/avfoundation/avcapturefileoutputrecordingdelegate			<section class="prog__container"><p>Methods for responding to events that occur while recording captured media to a file. </p><pre><code>AVCaptureFileOutput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturefileoutputrecordingdelegate
AVCaptureInput	A							https://developer.apple.com/reference/avfoundation/avcaptureinput			<section class="prog__container"><p>The abstract superclass for objects that provide input data to a capture session.</p><pre><code>AVCaptureInput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcaptureinput
AVCaptureInputPort	A							https://developer.apple.com/reference/avfoundation/avcaptureinputport			<section class="prog__container"><p>A specific stream of data provided by a capture input.</p><pre><code>AVCaptureInput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcaptureinputport
AVCaptureManualExposureBracketedStillImageSettings	A							https://developer.apple.com/reference/avfoundation/avcapturemanualexposurebracketedstillimagesettings			<section class="prog__container"><p>A configuration for defining bracketed photo captures in terms of specific exposure and ISO values. </p><pre><code>AVCaptureManualExposureBracketedStillImageSettings</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturemanualexposurebracketedstillimagesettings
AVCaptureMetadataInput	A							https://developer.apple.com/reference/avfoundation/avcapturemetadatainput			<section class="prog__container"><p>A capture input for providing timed metadata to a capture session.</p><pre><code>init!(formatDescription: CMMetadataFormatDescription!, clock: CMClock!)</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturemetadatainput
AVCaptureMetadataOutput	A							https://developer.apple.com/reference/avfoundation/avcapturemetadataoutput			<section class="prog__container"><p>A capture output for processing timed metadata produced by a capture session.</p><pre><code>AVCaptureMetadataOutput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturemetadataoutput
AVCaptureMetadataOutputObjectsDelegate	A							https://developer.apple.com/reference/avfoundation/avcapturemetadataoutputobjectsdelegate			<section class="prog__container"><p>Methods for receiving metadata produced by a metadata capture output.</p><pre><code>AVCaptureMetadataOutputObjectsDelegate</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturemetadataoutputobjectsdelegate
AVCaptureMovieFileOutput	A							https://developer.apple.com/reference/avfoundation/avcapturemoviefileoutput			<section class="prog__container"><p>A capture output that records video and audio to a QuickTime movie file.</p><pre><code>kCMTimeZero</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturemoviefileoutput
AVCaptureOutput	A							https://developer.apple.com/reference/avfoundation/avcaptureoutput			<section class="prog__container"><p>The abstract superclass for objects that output the media recorded in a capture session.</p><pre><code>AVCaptureOutput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcaptureoutput
AVCapturePhotoBracketSettings	A							https://developer.apple.com/reference/avfoundation/avcapturephotobracketsettings			<section class="prog__container"><p>A specification of the features and settings to use for a photo capture request that captures multiple images with varied settings.</p><pre><code>AVCapturePhotoBracketSettings</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturephotobracketsettings
AVCapturePhotoCaptureDelegate	A							https://developer.apple.com/reference/avfoundation/avcapturephotocapturedelegate			<section class="prog__container"><p>Methods for monitoring progress and receiving results from a photo capture output.</p><pre><code>AVCapturePhotoCaptureDelegate</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturephotocapturedelegate
AVCapturePhotoOutput	A							https://developer.apple.com/reference/avfoundation/avcapturephotooutput			<section class="prog__container"><p>A capture output for use in workflows related to still photography.</p><pre><code>AVCapturePhotoOutput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturephotooutput
AVCapturePhotoSettings	A							https://developer.apple.com/reference/avfoundation/avcapturephotosettings			<section class="prog__container"><p>A specification of the features and settings to use for a single photo capture request.</p><pre><code>AVCapturePhotoSettings</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturephotosettings
AVCaptureResolvedPhotoSettings	A							https://developer.apple.com/reference/avfoundation/avcaptureresolvedphotosettings			<section class="prog__container"><p>A description of the features and settings in use for an in-progress or complete photo capture request.</p><pre><code>AVCapturePhotoOutput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcaptureresolvedphotosettings
AVCaptureScreenInput	A							https://developer.apple.com/reference/avfoundation/avcapturescreeninput			<section class="prog__container"><p>A capture input for recording from a Mac's display. </p><pre><code>AVCaptureScreenInput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturescreeninput
AVCaptureSession	A							https://developer.apple.com/reference/avfoundation/avcapturesession			<section class="prog__container"><p>An object that manages capture activity and coordinates the flow of data from input devices to capture outputs. </p><pre><code>AVCaptureSession</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturesession
AVCaptureStillImageOutput	A							https://developer.apple.com/reference/avfoundation/avcapturestillimageoutput			<section class="prog__container"><p>A capture output for recording still images.</p><pre><code>AVCaptureStillImageOutput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturestillimageoutput
AVCaptureVideoDataOutput	A							https://developer.apple.com/reference/avfoundation/avcapturevideodataoutput			<section class="prog__container"><p>A capture output that records video and provides access to video frames for processing.</p><pre><code>AVCaptureVideoDataOutput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturevideodataoutput
AVCaptureVideoDataOutputSampleBufferDelegate	A							https://developer.apple.com/reference/avfoundation/avcapturevideodataoutputsamplebufferdelegate			<section class="prog__container"><p>Methods for receiving sample buffers from and monitoring the status of a video data output.</p><pre><code>AVCaptureVideoDataOutput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturevideodataoutputsamplebufferdelegate
AVCaptureVideoPreviewLayer	A							https://developer.apple.com/reference/avfoundation/avcapturevideopreviewlayer			<section class="prog__container"><p>A Core Animation layer that can display video as it is being captured.</p><pre><code>AVCaptureVideoPreviewLayer</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcapturevideopreviewlayer
AVComposition	A							https://developer.apple.com/reference/avfoundation/avcomposition			<section class="prog__container"><p>An AVComposition object combines media data from multiple file-based sources in a custom temporal arrangement, in order to present or process media data from multiple sources together. All file-based audiovisual assets are eligible to be combined, regardless of container type. The tracks in an AVComposition object are fixed; to change the tracks, you use an instance of its subclass, AVMutableComposition.</p><pre><code>AVComposition</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcomposition
AVCompositionTrack	A							https://developer.apple.com/reference/avfoundation/avcompositiontrack			<section class="prog__container"><p>An AVCompositionTrack object provides the low-level representation of tracks a track in an AVComposition object, comprising a media type, a track identifier, and an array of AVCompositionTrackSegment objects, each comprising a URL, and track identifier, and a time mapping.</p><pre><code>AVCompositionTrack</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcompositiontrack
AVCompositionTrackSegment	A							https://developer.apple.com/reference/avfoundation/avcompositiontracksegment			<section class="prog__container"><p>An AVCompositionTrackSegment object represents a segment of an AVCompositionTrack object, comprising a URL, and track identifier, and a time mapping from the source track to the composition track.</p><pre><code>AVCompositionTrackSegment</code></pre></section>	https://developer.apple.com/reference/avfoundation/avcompositiontracksegment
AVDateRangeMetadataGroup	A							https://developer.apple.com/reference/avfoundation/avdaterangemetadatagroup			<section class="prog__container"><p>AVDateRangeMetadataGroup is used to represent a collection of metadata items that are valid for use within a specific range of dates.</p><pre><code>AVDateRangeMetadataGroup</code></pre></section>	https://developer.apple.com/reference/avfoundation/avdaterangemetadatagroup
AVFoundation Functions	A							https://developer.apple.com/reference/avfoundation/avfoundation_functions			<section class="prog__container"><p>This chapter describes the function defined in the AVFoundation Framework.</p><pre><code>func AVMakeRect(aspectRatio: CGSize, insideRect: CGRect)</code></pre></section>	https://developer.apple.com/reference/avfoundation/avfoundation_functions
AVFrameRateRange	A							https://developer.apple.com/reference/avfoundation/avframeraterange			<section class="prog__container"><p>An AVFrameRateRange object expresses a range of valid frame rates as minimum and maximum rate and minimum and maximum duration.</p><pre><code>AVFrameRateRange</code></pre></section>	https://developer.apple.com/reference/avfoundation/avframeraterange
AVMediaSelection	A							https://developer.apple.com/reference/avfoundation/avmediaselection			<section class="prog__container"><p>An AVMediaSelection represents a complete rendition of media selection options on an AVAsset.</p><pre><code>AVMediaSelection</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmediaselection
AVMediaSelectionGroup	A							https://developer.apple.com/reference/avfoundation/avmediaselectiongroup			<section class="prog__container"><p>An AVMediaSelectionGroup represents a collection of mutually exclusive options for the presentation of media within an asset.</p><pre><code>AVMediaSelectionGroup</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmediaselectiongroup
AVMediaSelectionOption	A							https://developer.apple.com/reference/avfoundation/avmediaselectionoption			<section class="prog__container"><p>An AVMediaSelectionOption object represents a specific option for the presentation of media within a group of options.</p><pre><code>AVMediaSelectionOption</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmediaselectionoption
AVMetadataFaceObject	A							https://developer.apple.com/reference/avfoundation/avmetadatafaceobject			<section class="prog__container"><p>The AVMetadataFaceObject class is a concrete subclass of AVMetadataObject that defines the features of a single detected face. You can retrieve instances of this class from the output of an AVCaptureMetadataOutput object on devices that support face detection.</p><pre><code>AVMetadataFaceObject</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmetadatafaceobject
AVMetadataGroup	A							https://developer.apple.com/reference/avfoundation/avmetadatagroup			<section class="prog__container"><p>AVMetadataGroup is the common superclass for objects representing a collection of metadata items associated with a segment of a timeline.</p><pre><code>AVMetadataGroup</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmetadatagroup
AVMetadataItem	A							https://developer.apple.com/reference/avfoundation/avmetadataitem			<section class="prog__container"><p>An AVMetadataItem object represents an item of metadata associated with an audiovisual asset or with one of its tracks. To create metadata items for your own assets, you use the mutable subclass, AVMutableMetadataItem.</p><pre><code>AVMetadataItem</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmetadataitem
AVMetadataItemFilter	A							https://developer.apple.com/reference/avfoundation/avmetadataitemfilter			<section class="prog__container"><p>The AVMetadataItemFilter class is used to filter selected information from AVMetadataItem objects.</p><pre><code>AVMetadataItemFilter</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmetadataitemfilter
AVMetadataItemValueRequest	A							https://developer.apple.com/reference/avfoundation/avmetadataitemvaluerequest			<section class="prog__container"><p>An AVMetadataItemValueRequest is used to respond to a request to load the value for an AVMetadataItem created using the init(propertiesOf:valueLoadingHandler:) method.</p><pre><code>AVMetadataItemValueRequest</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmetadataitemvaluerequest
AVMetadataMachineReadableCodeObject	A							https://developer.apple.com/reference/avfoundation/avmetadatamachinereadablecodeobject			<section class="prog__container"><p>The AVMetadataMachineReadableCodeObject class is a concrete subclass of AVMetadataObject defining the features of a detected one-dimensional or two-dimensional barcode.</p><pre><code>AVMetadataMachineReadableCodeObject</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmetadatamachinereadablecodeobject
AVMetadataObject	A							https://developer.apple.com/reference/avfoundation/avmetadataobject			<section class="prog__container"><p>The AVMetadataObject class is an abstract class that defines the basic properties associated with a piece of metadata. These attributes reflect information either about the metadata itself or the media from which the metadata originated. Subclasses are responsible for providing appropriate values for each of the relevant properties.</p><pre><code>AVMetadataObject</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmetadataobject
AVMIDIPlayer	A							https://developer.apple.com/reference/avfoundation/avmidiplayer			<section class="prog__container"><p>The AVMIDIPlayer class is a player for music file formats such as MIDI and iMelody.</p><pre><code>AVMIDIPlayer</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmidiplayer
AVMutableAudioMix	A							https://developer.apple.com/reference/avfoundation/avmutableaudiomix			<section class="prog__container"><p>An AVMutableAudioMix object manages the input parameters for mixing audio tracks. It allows custom audio processing to be performed on audio tracks during playback or other operations.</p><pre><code>AVMutableAudioMix</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmutableaudiomix
AVMutableAudioMixInputParameters	A							https://developer.apple.com/reference/avfoundation/avmutableaudiomixinputparameters			<section class="prog__container"><p>An AVMutableAudioMixInputParameters object represents the parameters that should be applied to an audio track when it is added to a mix.</p><pre><code>AVMutableAudioMixInputParameters</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmutableaudiomixinputparameters
AVMutableComposition	A							https://developer.apple.com/reference/avfoundation/avmutablecomposition			<section class="prog__container"><p>AVMutableComposition is a mutable subclass of AVComposition you use when you want to create a new composition from existing assets. You can add and remove tracks, and you can add, remove, and scale time ranges.</p><pre><code>AVMutableComposition</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmutablecomposition
AVMutableCompositionTrack	A							https://developer.apple.com/reference/avfoundation/avmutablecompositiontrack			<section class="prog__container"><p>AVMutableCompositionTrack is a mutable subclass of AVCompositionTrack that lets you for insert, remove, and scale track segments without affecting their low-level representation (that is, the operations you perform are non-destructive on the original).</p><pre><code>AVMutableCompositionTrack</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmutablecompositiontrack
AVMutableDateRangeMetadataGroup	A							https://developer.apple.com/reference/avfoundation/avmutabledaterangemetadatagroup			<section class="prog__container"><p>AVMutableDateRangeMetadataGroup is a mutable subclass of AVDateRangeMetadataGroup used to represent a mutable collection of metadata items that are valid for use within a specific range of dates.</p><pre><code>AVMutableDateRangeMetadataGroup</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmutabledaterangemetadatagroup
AVMutableMediaSelection	A							https://developer.apple.com/reference/avfoundation/avmutablemediaselection			<section class="prog__container"><p>AVMutableMediaSelection is a mutable subclass of AVMediaSelection allowing for the selection of a media option.</p><pre><code>AVMutableMediaSelection</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmutablemediaselection
AVMutableMetadataItem	A							https://developer.apple.com/reference/avfoundation/avmutablemetadataitem			<section class="prog__container"><p>AVMutableMetadataItem is a mutable subclass of AVMetadataItem that lets you build collections of metadata to be written to asset files using AVAssetExportSession.</p><pre><code>AVMutableMetadataItem</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmutablemetadataitem
AVMutableTimedMetadataGroup	A							https://developer.apple.com/reference/avfoundation/avmutabletimedmetadatagroup			<section class="prog__container"><p>You use an AVMutableTimedMetadataGroup object to represent a mutable collection of metadata items.</p><pre><code>AVMutableTimedMetadataGroup</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmutabletimedmetadatagroup
AVMutableVideoComposition	A							https://developer.apple.com/reference/avfoundation/avmutablevideocomposition			<section class="prog__container"><p>The AVMutableVideoComposition class is a mutable subclass of AVVideoComposition.</p><pre><code>AVMutableVideoComposition</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmutablevideocomposition
AVMutableVideoCompositionInstruction	A							https://developer.apple.com/reference/avfoundation/avmutablevideocompositioninstruction			<section class="prog__container"><p>An AVMutableVideoCompositionInstruction object represents an operation to be performed by a compositor.</p><pre><code>AVMutableVideoCompositionInstruction</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmutablevideocompositioninstruction
AVMutableVideoCompositionLayerInstruction	A							https://developer.apple.com/reference/avfoundation/avmutablevideocompositionlayerinstruction			<section class="prog__container"><p>AVMutableVideoCompositionLayerInstruction is a mutable subclass of AVVideoCompositionLayerInstruction that is used to modify the transform, cropping, and opacity ramps to apply to a given track in a composition.</p><pre><code>AVMutableVideoCompositionLayerInstruction</code></pre></section>	https://developer.apple.com/reference/avfoundation/avmutablevideocompositionlayerinstruction
AVOutputSettingsAssistant	A							https://developer.apple.com/reference/avfoundation/avoutputsettingsassistant			<section class="prog__container"><p>The AVOutputSettingsAssistant class specifies a set of parameters for configuring objects that use output settings dictionaries—so that the resulting media file conforms to a specific criteria.</p><pre><code>AVOutputSettingsAssistant</code></pre></section>	https://developer.apple.com/reference/avfoundation/avoutputsettingsassistant
AVPlayer	A							https://developer.apple.com/reference/avfoundation/avplayer			<section class="prog__container"><p>An AVPlayer is a controller object used to manage the playback and timing of a media asset. It provides the interface to control the player’s transport behavior such as its ability to play, pause, change the playback rate, and seek to various points in time within the media’s timeline. You can use an AVPlayer to play local and remote file-based media, such as QuickTime movies and MP3 audio files, as well as audiovisual media served using HTTP Live Streaming.</p><pre><code>AVPlayer</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayer
AVPlayerItem	A							https://developer.apple.com/reference/avfoundation/avplayeritem			<section class="prog__container"><p>AVPlayerItem models the timing and presentation state of an asset played by an AVPlayer object. It provides the interface to seek to various times in the media, determine its presentation size, identify its current time, and much more.</p><pre><code>AVPlayerItem</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayeritem
AVPlayerItemAccessLog	A							https://developer.apple.com/reference/avfoundation/avplayeritemaccesslog			<section class="prog__container"><p>You use an AVPlayerItemAccessLog object to retrieve the access log associated with an AVPlayerItem object.</p><pre><code>AVPlayerItemAccessLog</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayeritemaccesslog
AVPlayerItemAccessLogEvent	A							https://developer.apple.com/reference/avfoundation/avplayeritemaccesslogevent			<section class="prog__container"><p>An AVPlayerItemAccessLogEvent object represents a single entry in an AVPlayerItem object’s access log.</p><pre><code>AVPlayerItemAccessLogEvent</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayeritemaccesslogevent
AVPlayerItemErrorLog	A							https://developer.apple.com/reference/avfoundation/avplayeritemerrorlog			<section class="prog__container"><p>You use an AVPlayerItemErrorLog object to retrieve the error log associated with an AVPlayerItem object.</p><pre><code>AVPlayerItemErrorLog</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayeritemerrorlog
AVPlayerItemErrorLogEvent	A							https://developer.apple.com/reference/avfoundation/avplayeritemerrorlogevent			<section class="prog__container"><p>An AVPlayerItemErrorLogEvent object represents a single item in an AVPlayerItem object’s error log.</p><pre><code>AVPlayerItemErrorLogEvent</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayeritemerrorlogevent
AVPlayerItemLegibleOutput	A							https://developer.apple.com/reference/avfoundation/avplayeritemlegibleoutput			<section class="prog__container"><p>The AVPlayerItemLegibleOutput class is a subclass of AVPlayerItemOutput that can vend media with a legible characteristic as an attributed string.</p><pre><code>AVPlayerItemLegibleOutput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayeritemlegibleoutput
AVPlayerItemLegibleOutputPushDelegate	A							https://developer.apple.com/reference/avfoundation/avplayeritemlegibleoutputpushdelegate			<section class="prog__container"><p>The AVPlayerItemLegibleOutputPushDelegate protocol extends the AVPlayerItemOutputPushDelegate protocol to provide additional methods specific to attributed string output.</p><pre><code>AVPlayerItemLegibleOutputPushDelegate</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayeritemlegibleoutputpushdelegate
AVPlayerItemMediaDataCollector	A							https://developer.apple.com/reference/avfoundation/avplayeritemmediadatacollector			<section class="prog__container"><p>AVPlayerItemMediaDataCollector is the abstract base of media data collectors such as AVPlayerItemMetadataCollector.</p><pre><code>AVPlayerItemMediaDataCollector</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayeritemmediadatacollector
AVPlayerItemMetadataCollector	A							https://developer.apple.com/reference/avfoundation/avplayeritemmetadatacollector			<section class="prog__container"><p>AVPlayerItemMetadataCollector is a subclass of AVPlayerItemMediaDataCollector used to capture the date range metadata defined for an HTTP Live Streaming (HLS) asset.</p><pre><code>AVPlayerItemMetadataCollector</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayeritemmetadatacollector
AVPlayerItemMetadataCollectorPushDelegate	A							https://developer.apple.com/reference/avfoundation/avplayeritemmetadatacollectorpushdelegate			<section class="prog__container"><p>The AVPlayerItemMetadataCollectorPushDelegate protocol should be adopted by objects interested in receiving metadata callbacks from an AVPlayerItemMetadataCollector.</p><pre><code>AVPlayerItemMetadataCollectorPushDelegate</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayeritemmetadatacollectorpushdelegate
AVPlayerItemMetadataOutput	A							https://developer.apple.com/reference/avfoundation/avplayeritemmetadataoutput			<section class="prog__container"><p>The AVPlayerItemMetadataOutput class is a subclass of AVPlayerItemOutput that vends collections of metadata items carried in metadata tracks.</p><pre><code>AVPlayerItemOutput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayeritemmetadataoutput
AVPlayerItemMetadataOutputPushDelegate	A							https://developer.apple.com/reference/avfoundation/avplayeritemmetadataoutputpushdelegate			<section class="prog__container"><p>The AVPlayerItemMetadataOutputPushDelegate protocol extends the AVPlayerItemOutputPushDelegate protocol to provide additional methods specific to metadata output.</p><pre><code>AVPlayerItemMetadataOutputPushDelegate</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayeritemmetadataoutputpushdelegate
AVPlayerItemOutput	A							https://developer.apple.com/reference/avfoundation/avplayeritemoutput			<section class="prog__container"><p>The AVPlayerItemOutput class is an abstract class that defines the common interface for moving samples from an asset to an AVPlayer object. You do not create instances of this class directly but instead use one of the concrete subclasses that manage specific types of assets. </p><pre><code>AVPlayerItemOutput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayeritemoutput
AVPlayerItemOutputPullDelegate	A							https://developer.apple.com/reference/avfoundation/avplayeritemoutputpulldelegate			<section class="prog__container"><p>The AVPlayerItemOutputPullDelegate protocol defines the methods that are called by an AVPlayerItemVideoOutput object in response to pixel buffer changes. </p><pre><code>AVPlayerItemOutputPullDelegate</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayeritemoutputpulldelegate
AVPlayerItemOutputPushDelegate	A							https://developer.apple.com/reference/avfoundation/avplayeritemoutputpushdelegate			<section class="prog__container"><p>The AVPlayerItemOutputPushDelegate protocol defines common delegate methods for objects participating in AVPlayerItemOutput push sample output acquisition.</p><pre><code>AVPlayerItemOutputPushDelegate</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayeritemoutputpushdelegate
AVPlayerItemTrack	A							https://developer.apple.com/reference/avfoundation/avplayeritemtrack			<section class="prog__container"><p>You use an AVPlayerItemTrack object to modify the presentation state of an asset track (AVAssetTrack) being presented by an AVPlayer object.</p><pre><code>AVPlayerItemTrack</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayeritemtrack
AVPlayerItemVideoOutput	A							https://developer.apple.com/reference/avfoundation/avplayeritemvideooutput			<section class="prog__container"><p>The AVPlayerItemVideoOutput lets you coordinate the output of content associated with a Core Video pixel buffer. </p><pre><code>AVPlayerItemVideoOutput</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayeritemvideooutput
AVPlayerLayer	A							https://developer.apple.com/reference/avfoundation/avplayerlayer			<section class="prog__container"><p>AVPlayerLayer is a subclass of CALayer to which an AVPlayer object can direct its visual output. It can be used as the backing layer for a UIView or NSView or can be manually added to the layer hierarchy to present your video content on screen.</p><pre><code>AVPlayerLayer</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayerlayer
AVPlayerLooper	A							https://developer.apple.com/reference/avfoundation/avplayerlooper			<section class="prog__container"><p>AVPlayerLooper is a helper class used to simplify playing looping media content using AVQueuePlayer.</p><pre><code>AVPlayerLooper</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayerlooper
AVPlayerMediaSelectionCriteria	A							https://developer.apple.com/reference/avfoundation/avplayermediaselectioncriteria			<section class="prog__container"><p>The AVPlayerMediaSelectionCriteria class specifies the preferred languages and media characteristics for an AVPlayer instance.</p><pre><code>AVPlayerMediaSelectionCriteria</code></pre></section>	https://developer.apple.com/reference/avfoundation/avplayermediaselectioncriteria
AVQueuePlayer	A							https://developer.apple.com/reference/avfoundation/avqueueplayer			<section class="prog__container"><p>AVQueuePlayer is a subclass of AVPlayer used to play a number of items in sequence. Using this class you can create and manage a queue of player items comprised of local or progressively downloaded file-based media, such as QuickTime movies or MP3 audio files, as well as media served using HTTP Live Streaming.</p><pre><code>AVQueuePlayer</code></pre></section>	https://developer.apple.com/reference/avfoundation/avqueueplayer
AVSampleBufferDisplayLayer	A							https://developer.apple.com/reference/avfoundation/avsamplebufferdisplaylayer			<section class="prog__container"><p>The AVSampleBufferDisplayLayer class is a subclass of CALayer that displays compressed or uncompressed video frames.</p><pre><code>AVSampleBufferDisplayLayer</code></pre></section>	https://developer.apple.com/reference/avfoundation/avsamplebufferdisplaylayer
AVSampleBufferGenerator	A							https://developer.apple.com/reference/avfoundation/avsamplebuffergenerator			<section class="prog__container"><p>The AVSampleBufferGenerator class is used to create CMSampleBuffer opaque objects. </p><pre><code>AVSampleBufferGenerator</code></pre></section>	https://developer.apple.com/reference/avfoundation/avsamplebuffergenerator
AVSampleBufferRequest	A							https://developer.apple.com/reference/avfoundation/avsamplebufferrequest			<section class="prog__container"><p>An AVSampleBufferRequest instance describes a CMSampleBuffer creation request.</p><pre><code>AVSampleBufferRequest</code></pre></section>	https://developer.apple.com/reference/avfoundation/avsamplebufferrequest
AVSampleCursor	A							https://developer.apple.com/reference/avfoundation/avsamplecursor			<section class="prog__container"><p>An AVSampleCursor instance is always positioned at a specific media sample in a sequence of samples as defined by a higher-level construct, such as an AVAssetTrack. It can be moved to a new position in that sequence either backwards or forwards, either in decode order or in presentation order. Movement can be requested according to a count of samples or according to a delta in time.</p><pre><code>AVSampleCursor</code></pre></section>	https://developer.apple.com/reference/avfoundation/avsamplecursor
AVSpeechSynthesisVoice	A							https://developer.apple.com/reference/avfoundation/avspeechsynthesisvoice			<section class="prog__container"><p>An AVSpeechSynthesisVoice object defines a distinct voice for use in speech synthesis. Voices are distinguished primarily by language and locale.</p><pre><code>AVSpeechSynthesisVoice</code></pre></section>	https://developer.apple.com/reference/avfoundation/avspeechsynthesisvoice
AVSpeechSynthesizer	A							https://developer.apple.com/reference/avfoundation/avspeechsynthesizer			<section class="prog__container"><p>The AVSpeechSynthesizer class produces synthesized speech from text on an iOS device, and provides methods for controlling or monitoring the progress of ongoing speech.</p><pre><code>AVSpeechSynthesizer</code></pre></section>	https://developer.apple.com/reference/avfoundation/avspeechsynthesizer
AVSpeechSynthesizerDelegate	A							https://developer.apple.com/reference/avfoundation/avspeechsynthesizerdelegate			<section class="prog__container"><p>The AVSpeechSynthesizerDelegate protocol defines methods that the delegate of an AVSpeechSynthesizer object may implement; all methods in this protocol are optional. You can implement these methods to respond to events that occur during speech synthesis.</p><pre><code>AVSpeechSynthesizerDelegate</code></pre></section>	https://developer.apple.com/reference/avfoundation/avspeechsynthesizerdelegate
AVSpeechUtterance	A							https://developer.apple.com/reference/avfoundation/avspeechutterance			<section class="prog__container"><p>An AVSpeechUtterance is the basic unit of speech synthesis. An utterance encapsulates some amount of text to be spoken and a set of parameters affecting its speech: voice, pitch, rate, and delay.</p><pre><code>AVSpeechUtterance</code></pre></section>	https://developer.apple.com/reference/avfoundation/avspeechutterance
AVSynchronizedLayer	A							https://developer.apple.com/reference/avfoundation/avsynchronizedlayer			<section class="prog__container"><p>AVSynchronizedLayer a subclass of CALayer with layer timing that synchronizes with a specific AVPlayerItem.</p><pre><code>AVSynchronizedLayer</code></pre></section>	https://developer.apple.com/reference/avfoundation/avsynchronizedlayer
AVTextStyleRule	A							https://developer.apple.com/reference/avfoundation/avtextstylerule			<section class="prog__container"><p>An AVTextStyleRule object represents text styling rules that can be applied to text in a media item. You use text style objects to format subtitles, closed captions, and other text-related content of the item. The rules you specify can be applied to all or part of the text in the media item.</p><pre><code>AVTextStyleRule</code></pre></section>	https://developer.apple.com/reference/avfoundation/avtextstylerule
AVTimedMetadataGroup	A							https://developer.apple.com/reference/avfoundation/avtimedmetadatagroup			<section class="prog__container"><p>The AVTimedMetadataGroup class represents a collection of metadata items that are valid for use during a specific range of time.</p><pre><code>AVTimedMetadataGroup</code></pre></section>	https://developer.apple.com/reference/avfoundation/avtimedmetadatagroup
AVURLAsset	A							https://developer.apple.com/reference/avfoundation/avurlasset			<section class="prog__container"><p>AVURLAsset is a concrete subclass of AVAsset that you use to initialize an asset from a local or remote URL.</p><pre><code>AVURLAsset</code></pre></section>	https://developer.apple.com/reference/avfoundation/avurlasset
AVVideoCompositing	A							https://developer.apple.com/reference/avfoundation/avvideocompositing			<section class="prog__container"><p>The AVVideoCompositing protocol defines properties and methods that custom video compositors must implement.</p><pre><code>AVVideoCompositing</code></pre></section>	https://developer.apple.com/reference/avfoundation/avvideocompositing
AVVideoComposition	A							https://developer.apple.com/reference/avfoundation/avvideocomposition			<section class="prog__container"><p>An AVVideoComposition object represents an immutable video composition.</p><pre><code>AVVideoComposition</code></pre></section>	https://developer.apple.com/reference/avfoundation/avvideocomposition
AVVideoCompositionCoreAnimationTool	A							https://developer.apple.com/reference/avfoundation/avvideocompositioncoreanimationtool			<section class="prog__container"><p>You use an AVVideoCompositionCoreAnimationTool object to incorporate Core Animation in a video composition.</p><pre><code>AVVideoCompositionCoreAnimationTool</code></pre></section>	https://developer.apple.com/reference/avfoundation/avvideocompositioncoreanimationtool
AVVideoCompositionInstruction	A							https://developer.apple.com/reference/avfoundation/avvideocompositioninstruction			<section class="prog__container"><p>An AVVideoCompositionInstruction object represents an operation to be performed by a compositor.</p><pre><code>AVVideoCompositionInstruction</code></pre></section>	https://developer.apple.com/reference/avfoundation/avvideocompositioninstruction
AVVideoCompositionInstructionProtocol	A							https://developer.apple.com/reference/avfoundation/avvideocompositioninstructionprotocol			<section class="prog__container"><p>The AVVideoCompositionInstruction protocol represents operations to be performed by a compositor. An AVVideoComposition object maintains an array of instructions to perform its composition.</p><pre><code>AVVideoCompositionInstruction</code></pre></section>	https://developer.apple.com/reference/avfoundation/avvideocompositioninstructionprotocol
AVVideoCompositionLayerInstruction	A							https://developer.apple.com/reference/avfoundation/avvideocompositionlayerinstruction			<section class="prog__container"><p>An AVVideoCompositionLayerInstruction object represents the transform, opacity, and cropping ramps to apply to a given track.</p><pre><code>AVVideoCompositionLayerInstruction</code></pre></section>	https://developer.apple.com/reference/avfoundation/avvideocompositionlayerinstruction
AVVideoCompositionRenderContext	A							https://developer.apple.com/reference/avfoundation/avvideocompositionrendercontext			<section class="prog__container"><p>The AVVideoCompositionRenderContext class defines the context within which custom compositors render new output pixels buffers.</p><pre><code>AVVideoCompositionRenderContext</code></pre></section>	https://developer.apple.com/reference/avfoundation/avvideocompositionrendercontext
AVVideoCompositionValidationHandling	A							https://developer.apple.com/reference/avfoundation/avvideocompositionvalidationhandling			<section class="prog__container"><p>The AVVideoCompositionValidationHandling protocol declares methods that you can implement in the delegate of an AVVideoComposition object to indicate whether validation of a video composition should continue after specific errors have been found.</p><pre><code>AVVideoCompositionValidationHandling</code></pre></section>	https://developer.apple.com/reference/avfoundation/avvideocompositionvalidationhandling
AVCaptureView	A							https://developer.apple.com/reference/avkit/avcaptureview			<section class="prog__container"><p>AVCaptureView is a subclass of NSView that can be used to display standard user interface controls for capturing media data.</p><pre><code>AVCaptureView</code></pre></section>	https://developer.apple.com/reference/avkit/avcaptureview
AVCaptureViewDelegate	A							https://developer.apple.com/reference/avkit/avcaptureviewdelegate			<section class="prog__container"><p>The AVCaptureViewDelegate protocol defines the interface for delegates of AVCaptureView.</p><pre><code>AVCaptureViewDelegate</code></pre></section>	https://developer.apple.com/reference/avkit/avcaptureviewdelegate
AVContentProposal	A							https://developer.apple.com/reference/avkit/avcontentproposal			<section class="prog__container"><p>An AVContentProposal describes content proposed to follow the current item (for example, the next episode of the same series). It models the data about the proposed content such as its title, preview image, presentation time, and content URL.</p><pre><code>AVContentProposal</code></pre></section>	https://developer.apple.com/reference/avkit/avcontentproposal
AVContentProposalViewController	A							https://developer.apple.com/reference/avkit/avcontentproposalviewcontroller			<section class="prog__container"><p>AVContentProposalViewController is a subclass of UIViewController used to create custom content proposal presentations. Your app should subclass this class and provide the interface to present your content proposal.</p><pre><code>AVContentProposalViewController</code></pre></section>	https://developer.apple.com/reference/avkit/avcontentproposalviewcontroller
AVInterstitialTimeRange	A							https://developer.apple.com/reference/avkit/avinterstitialtimerange			<section class="prog__container"><p>An AVInterstitialTimeRange identifies a time range in an audiovisual presentation as interstitial content, such as advertisements or legal notices.</p><pre><code>AVInterstitialTimeRange</code></pre></section>	https://developer.apple.com/reference/avkit/avinterstitialtimerange
AVNavigationMarkersGroup	A							https://developer.apple.com/reference/avkit/avnavigationmarkersgroup			<section class="prog__container"><p>An AVNavigationMarkersGroup represents a set of markers for navigating playback of an audiovisual presentation. The most common form of a navigation markers group is a chapter list; however, you can also provide other sets of markers to allow a user to jump to significant events in the presentation. For example, a “Goals Scored” markers group might summarize key moments in a recorded sporting event. When you associate navigation markers with an AVPlayerItem object you present with an AVPlayerViewController, the user interface provides options for navigating each group.</p><pre><code>AVNavigationMarkersGroup</code></pre></section>	https://developer.apple.com/reference/avkit/avnavigationmarkersgroup
AVPictureInPictureController	A							https://developer.apple.com/reference/avkit/avpictureinpicturecontroller			<section class="prog__container"><p>An AVPictureInPictureController lets you respond to user-initiated playback of video in a floating, resizable window on iPad.</p><pre><code>AVPictureInPictureController</code></pre></section>	https://developer.apple.com/reference/avkit/avpictureinpicturecontroller
AVPictureInPictureControllerDelegate	A							https://developer.apple.com/reference/avkit/avpictureinpicturecontrollerdelegate			<section class="prog__container"><p>The AVPictureInPictureControllerDelegate protocol defines methods you can implement to configure your app’s user interface when participating with the Picture in Picture (PiP) feature on iPad, and to respond to user interactions with the PiP window.</p><pre><code>AVPictureInPictureControllerDelegate</code></pre></section>	https://developer.apple.com/reference/avkit/avpictureinpicturecontrollerdelegate
AVPlayerView	A							https://developer.apple.com/reference/avkit/avplayerview			<section class="prog__container"><p>AVPlayerView is an NSView subclass used to display the visual content of an AVPlayer object and present standard controls to manage its playback. Using AVPlayerView, you can easily build media players with the same core playback features of QuickTime Player.</p><pre><code>AVPlayerView</code></pre></section>	https://developer.apple.com/reference/avkit/avplayerview
AVPlayerViewController	A							https://developer.apple.com/reference/avkit/avplayerviewcontroller			<section class="prog__container"><p>AVPlayerViewController displays the video content of an AVPlayer object along with system-supplied playback controls.</p><pre><code>AVPlayerViewController</code></pre></section>	https://developer.apple.com/reference/avkit/avplayerviewcontroller
AVPlayerViewControllerDelegate	A							https://developer.apple.com/reference/avkit/avplayerviewcontrollerdelegate			<section class="prog__container"><p>The player view controller delegate protocol defines methods you can implement to respond to media playback events associated with an AVPlayerViewController object. On iPad, you can implement methods to manage your app’s participation with Picture in Picture (PiP) playback. On Apple TV, you can implement methods related to playback navigation, interstitial content, and content proposals.</p><pre><code>AVPlayerViewController</code></pre></section>	https://developer.apple.com/reference/avkit/avplayerviewcontrollerdelegate
CXAction	A							https://developer.apple.com/reference/callkit/cxaction			<section class="prog__container"><p>An abstract class that declares a programmatic interface for objects that represent a telephony action.</p><pre><code>CXAction</code></pre></section>	https://developer.apple.com/reference/callkit/cxaction
CXAnswerCallAction	A							https://developer.apple.com/reference/callkit/cxanswercallaction			<section class="prog__container"><p>An encapsulation of the act of answering an incoming call.</p><pre><code>CXAnswerCallAction</code></pre></section>	https://developer.apple.com/reference/callkit/cxanswercallaction
CXCall	A							https://developer.apple.com/reference/callkit/cxcall			<section class="prog__container"><p>A telephony call. </p><pre><code>CXCall</code></pre></section>	https://developer.apple.com/reference/callkit/cxcall
CXCallAction	A							https://developer.apple.com/reference/callkit/cxcallaction			<section class="prog__container"><p>A programmatic interface for objects that represent a telephony action associated with a call object.</p><pre><code>CXCallAction</code></pre></section>	https://developer.apple.com/reference/callkit/cxcallaction
CXCallController	A							https://developer.apple.com/reference/callkit/cxcallcontroller			<section class="prog__container"><p>A programmatic interface for interacting with and observing calls.</p><pre><code>CXCallController</code></pre></section>	https://developer.apple.com/reference/callkit/cxcallcontroller
CXCallDirectoryExtensionContext	A							https://developer.apple.com/reference/callkit/cxcalldirectoryextensioncontext			<section class="prog__container"><p>A programmatic interface for adding identification and blocking entries to a Call Directory app extension. </p><pre><code>CXCallDirectoryExtensionContext</code></pre></section>	https://developer.apple.com/reference/callkit/cxcalldirectoryextensioncontext
CXCallDirectoryExtensionContextDelegate	A							https://developer.apple.com/reference/callkit/cxcalldirectoryextensioncontextdelegate			<section class="prog__container"><p>A collection of methods that are called by a Call Directory extension context object when a request fails.</p><pre><code>func requestFailed(for: CXCallDirectoryExtensionContext, withError: Error)</code></pre></section>	https://developer.apple.com/reference/callkit/cxcalldirectoryextensioncontextdelegate
CXCallDirectoryManager	A							https://developer.apple.com/reference/callkit/cxcalldirectorymanager			<section class="prog__container"><p>The programmatic interface to an object that manages a Call Directory app extension.</p><pre><code>CXCallDirectoryManager.EnabledStatus</code></pre></section>	https://developer.apple.com/reference/callkit/cxcalldirectorymanager
CXCallDirectoryProvider	A							https://developer.apple.com/reference/callkit/cxcalldirectoryprovider			<section class="prog__container"><p>The principal object for a Call Directory app extension for a host app.</p><pre><code>func beginRequest(with: CXCallDirectoryExtensionContext)</code></pre></section>	https://developer.apple.com/reference/callkit/cxcalldirectoryprovider
CXCallObserver	A							https://developer.apple.com/reference/callkit/cxcallobserver			<section class="prog__container"><p>A programmatic interface for an object that manages a list of active calls and observes call changes.</p><pre><code>CXCallObserver</code></pre></section>	https://developer.apple.com/reference/callkit/cxcallobserver
CXCallObserverDelegate	A							https://developer.apple.com/reference/callkit/cxcallobserverdelegate			<section class="prog__container"><p>A collection of methods that are called by a call observer object when a call changes state.</p><pre><code>func callObserver(CXCallObserver, callChanged: CXCall)</code></pre></section>	https://developer.apple.com/reference/callkit/cxcallobserverdelegate
CXCallUpdate	A							https://developer.apple.com/reference/callkit/cxcallupdate			<section class="prog__container"><p>An encapsulation of new and changed information about a call.</p><pre><code>CXCallUpdate</code></pre></section>	https://developer.apple.com/reference/callkit/cxcallupdate
CXEndCallAction	A							https://developer.apple.com/reference/callkit/cxendcallaction			<section class="prog__container"><p>An encapsulation of the act of ending a call.</p><pre><code>CXEndCallAction</code></pre></section>	https://developer.apple.com/reference/callkit/cxendcallaction
CXHandle	A							https://developer.apple.com/reference/callkit/cxhandle			<section class="prog__container"><p>A means by which a call recipient can be reached, such as a phone number or email address.</p><pre><code>CXHandle</code></pre></section>	https://developer.apple.com/reference/callkit/cxhandle
CXPlayDTMFCallAction	A							https://developer.apple.com/reference/callkit/cxplaydtmfcallaction			<section class="prog__container"><p>An encapsulation of the act of playing a DTMF (dual tone multifrequency) sequence.</p><pre><code>CXPlayDTMFCallAction</code></pre></section>	https://developer.apple.com/reference/callkit/cxplaydtmfcallaction
CXProvider	A							https://developer.apple.com/reference/callkit/cxprovider			<section class="prog__container"><p>An object that represents a telephony provider. </p><pre><code>CXProvider</code></pre></section>	https://developer.apple.com/reference/callkit/cxprovider
CXProviderConfiguration	A							https://developer.apple.com/reference/callkit/cxproviderconfiguration			<section class="prog__container"><p>An encapsulation of the configuration of a provider object.</p><pre><code>CXProviderConfiguration</code></pre></section>	https://developer.apple.com/reference/callkit/cxproviderconfiguration
CXProviderDelegate	A							https://developer.apple.com/reference/callkit/cxproviderdelegate			<section class="prog__container"><p>A collection of methods that are called by a telephony provider object.</p><pre><code>CXProviderDelegate</code></pre></section>	https://developer.apple.com/reference/callkit/cxproviderdelegate
CXSetGroupCallAction	A							https://developer.apple.com/reference/callkit/cxsetgroupcallaction			<section class="prog__container"><p>An encapsulation of the act of grouping or ungrouping calls. </p><pre><code>CXSetGroupCallAction</code></pre></section>	https://developer.apple.com/reference/callkit/cxsetgroupcallaction
CXSetHeldCallAction	A							https://developer.apple.com/reference/callkit/cxsetheldcallaction			<section class="prog__container"><p>An encapsulation of the act of placing a call on hold or removing a call from hold. </p><pre><code>CXSetHeldCallAction</code></pre></section>	https://developer.apple.com/reference/callkit/cxsetheldcallaction
CXSetMutedCallAction	A							https://developer.apple.com/reference/callkit/cxsetmutedcallaction			<section class="prog__container"><p>An encapsulation of the act of muting or unmuting a call. </p><pre><code>CXSetMutedCallAction</code></pre></section>	https://developer.apple.com/reference/callkit/cxsetmutedcallaction
CXStartCallAction	A							https://developer.apple.com/reference/callkit/cxstartcallaction			<section class="prog__container"><p>An encapsulation of the act of initiating an outgoing call.</p><pre><code>CXStartCallAction</code></pre></section>	https://developer.apple.com/reference/callkit/cxstartcallaction
CXTransaction	A							https://developer.apple.com/reference/callkit/cxtransaction			<section class="prog__container"><p>An object that contains zero or more action objects to be performed by a call controller.</p><pre><code>init(action: CXAction)</code></pre></section>	https://developer.apple.com/reference/callkit/cxtransaction
Secure Sockets (SOCKS) Errors	A							https://developer.apple.com/reference/cfnetwork/1518266-secure_sockets_socks_errors			<section class="prog__container"><p>Error codes returned by the kCFStreamErrorDomainSOCKS error domain.</p><pre><code>kCFStreamErrorDomainSOCKS</code></pre></section>	https://developer.apple.com/reference/cfnetwork/1518266-secure_sockets_socks_errors
CFHost	A							https://developer.apple.com/reference/cfnetwork/cfhost			<section class="prog__container"><p>An opaque reference representing an CFHost object.</p></section>	https://developer.apple.com/reference/cfnetwork/cfhost
CFHostClientContext	A							https://developer.apple.com/reference/cfnetwork/cfhostclientcontext			<section class="prog__container"><p>A structure containing user-defined data and callbacks for CFHost objects.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/cfnetwork/cfhostclientcontext
CFHostInfoType	A							https://developer.apple.com/reference/cfnetwork/cfhostinfotype			<section class="prog__container"><p>Values indicating the type of data that is to be resolved or the type of data that was resolved.</p><pre><code>case addresses</code></pre></section>	https://developer.apple.com/reference/cfnetwork/cfhostinfotype
CFHTTPAuthentication	A							https://developer.apple.com/reference/cfnetwork/cfhttpauthentication			<section class="prog__container"><p>An opaque reference representing HTTP authentication information.</p></section>	https://developer.apple.com/reference/cfnetwork/cfhttpauthentication
CFHTTPMessage	A							https://developer.apple.com/reference/cfnetwork/cfhttpmessage			<section class="prog__container"><p>An opaque reference representing an HTTP message.</p></section>	https://developer.apple.com/reference/cfnetwork/cfhttpmessage
CFNetDiagnostic	A							https://developer.apple.com/reference/cfnetwork/cfnetdiagnostic			<section class="prog__container"><p>An opaque reference representing a CFNetDiagnostic.</p></section>	https://developer.apple.com/reference/cfnetwork/cfnetdiagnostic
CFNetDiagnosticStatusValues	A							https://developer.apple.com/reference/cfnetwork/cfnetdiagnosticstatusvalues			<section class="prog__container"><p>Constants for diagnostic status values.</p><pre><code>CFNetDiagnosticDiagnoseProblemInteractively(_:)</code></pre></section>	https://developer.apple.com/reference/cfnetwork/cfnetdiagnosticstatusvalues
CFNetService	A							https://developer.apple.com/reference/cfnetwork/cfnetservice			<section class="prog__container"><p>An opaque reference representing a CFNetService.</p></section>	https://developer.apple.com/reference/cfnetwork/cfnetservice
CFNetServiceBrowser	A							https://developer.apple.com/reference/cfnetwork/cfnetservicebrowser			<section class="prog__container"><p>An opaque reference representing a CFNetServiceBrowser.</p></section>	https://developer.apple.com/reference/cfnetwork/cfnetservicebrowser
CFNetServiceClientContext	A							https://developer.apple.com/reference/cfnetwork/cfnetserviceclientcontext			<section class="prog__container"><p>A structure provided when a CFNetService is associated with a callback function or when a CFNetServiceBrowser is created.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/cfnetwork/cfnetserviceclientcontext
CFNetServiceMonitor	A							https://developer.apple.com/reference/cfnetwork/cfnetservicemonitor			<section class="prog__container"><p>An opaque reference for a service monitor.</p></section>	https://developer.apple.com/reference/cfnetwork/cfnetservicemonitor
CFNetServiceMonitorType	A							https://developer.apple.com/reference/cfnetwork/cfnetservicemonitortype			<section class="prog__container"><p>Record type specifier used to tell a service monitor the type of record changes to watch for.</p><pre><code>case TXT</code></pre></section>	https://developer.apple.com/reference/cfnetwork/cfnetservicemonitortype
CFNetServicesError	A							https://developer.apple.com/reference/cfnetwork/cfnetserviceserror			<section class="prog__container"><p>Error codes that may be returned by CFNetServices functions or passed to CFNetServices callback functions.</p><pre><code>case unknown</code></pre></section>	https://developer.apple.com/reference/cfnetwork/cfnetserviceserror
CFNetworkErrors	A							https://developer.apple.com/reference/cfnetwork/cfnetworkerrors			<section class="prog__container"><p>This enumeration contains error codes returned under the error domain kCFErrorDomainCFNetwork.</p><pre><code>kCFErrorDomainCFNetwork</code></pre></section>	https://developer.apple.com/reference/cfnetwork/cfnetworkerrors
CFStreamErrorHTTP	A							https://developer.apple.com/reference/cfnetwork/cfstreamerrorhttp			<section class="prog__container"><p>Error codes that a read stream for an HTTP request may return.</p><pre><code>case parseFailure</code></pre></section>	https://developer.apple.com/reference/cfnetwork/cfstreamerrorhttp
CFStreamErrorHTTPAuthentication	A							https://developer.apple.com/reference/cfnetwork/cfstreamerrorhttpauthentication			<section class="prog__container"><p>Authentication error codes that may be returned when trying to apply authentication to a request.</p><pre><code>case typeUnsupported</code></pre></section>	https://developer.apple.com/reference/cfnetwork/cfstreamerrorhttpauthentication
Error Dictionary Keys	A							https://developer.apple.com/reference/cfnetwork/error_dictionary_keys			<section class="prog__container"><p>Networking-related keys that may be available in a CFErrorRef object’s userInfo dictionary.</p><pre><code>CFErrorRef</code></pre></section>	https://developer.apple.com/reference/cfnetwork/error_dictionary_keys
Error Domains	A							https://developer.apple.com/reference/cfnetwork/error_domains			<section class="prog__container"><p>High-level error domains.</p><pre><code>userInfo</code></pre></section>	https://developer.apple.com/reference/cfnetwork/error_domains
Global Proxy Settings Constants	A							https://developer.apple.com/reference/cfnetwork/global_proxy_settings_constants			<section class="prog__container"><p>Constants for keys in the global proxy settings dictionary returned by CFNetworkCopySystemProxySettings().</p><pre><code>CFNetworkCopySystemProxySettings()</code></pre></section>	https://developer.apple.com/reference/cfnetwork/global_proxy_settings_constants
Property Keys	A							https://developer.apple.com/reference/cfnetwork/property_keys			<section class="prog__container"><p>Keys for calls to property get/set functions such as CFReadStreamSetProperty(_:_:_:) and CFReadStreamCopyProperty(_:_:).</p><pre><code>CFReadStreamSetProperty(_:_:_:)</code></pre></section>	https://developer.apple.com/reference/cfnetwork/property_keys
Proxy Types	A							https://developer.apple.com/reference/cfnetwork/proxy_types			<section class="prog__container"><p>Constants that specify the type of proxy.</p><pre><code>let kCFProxyTypeNone: CFString</code></pre></section>	https://developer.apple.com/reference/cfnetwork/proxy_types
CLKComplication	A							https://developer.apple.com/reference/clockkit/clkcomplication			<section class="prog__container"><p>A CLKComplication object contains metadata about one of your custom complications. You do not create instances of this class directly. Instead, you retrieve them from the CLKComplicationServer object. Complication objects are only available when your complication is in use on the clock face.</p><pre><code>CLKComplication</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplication
CLKComplicationDataSource	A							https://developer.apple.com/reference/clockkit/clkcomplicationdatasource			<section class="prog__container"><p>The CLKComplicationDataSource protocol defines the methods that you use to communicate with the ClockKit framework. Apps that support a complication must define a class that supports this protocol and register it with the system. Your data source object provides the timeline entries displayed by your complication and provides information about the features that your complication supports.</p><pre><code>CLKComplicationDataSource</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationdatasource
CLKComplicationServer	A							https://developer.apple.com/reference/clockkit/clkcomplicationserver			<section class="prog__container"><p>The shared CLKComplicationServer object manages the active complications for a given app. Do not create instances of this class directly. Instead, use the shared object to fetch information about your active complications and to invalidate or extend the data for a specific complication. You can also use it to get information about the minimum and maximum dates for which you need to provide data to support Time Travel.</p><pre><code>CLKComplicationServer</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationserver
CLKComplicationTemplate	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplate			<section class="prog__container"><p>The CLKComplicationTemplate class is a base class for specifying the arrangement of data in your custom watch complication. You do not create instances of this class directly. Instead, you create instances of one of the concrete subclasses and use the resulting object to specify the data for your complication.</p><pre><code>CLKComplicationTemplate</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplate
CLKComplicationTemplateCircularSmallRingImage	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplatecircularsmallringimage			<section class="prog__container"><p>A CLKComplicationTemplateCircularSmallRingImage object is a template for displaying complication data on the clock face. Use this template when you want to display a single image surrounded by a configurable progress ring for a complication in the circularSmall family.</p><pre><code>CLKComplicationTemplateCircularSmallRingImage</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplatecircularsmallringimage
CLKComplicationTemplateCircularSmallRingText	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplatecircularsmallringtext			<section class="prog__container"><p>A CLKComplicationTemplateCircularSmallRingText object is a template for displaying complication data on the clock face. Use this template when you want to display a short text string encircled by a configurable progress ring for a complication in the circularSmall family.</p><pre><code>CLKComplicationTemplateCircularSmallRingText</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplatecircularsmallringtext
CLKComplicationTemplateCircularSmallSimpleImage	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplatecircularsmallsimpleimage			<section class="prog__container"><p>A CLKComplicationTemplateCircularSmallSimpleImage object is a template for displaying complication data on the clock face. Use this template when you want to display a single image for a complication in the circularSmall family.</p><pre><code>CLKComplicationTemplateCircularSmallSimpleImage</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplatecircularsmallsimpleimage
CLKComplicationTemplateCircularSmallSimpleText	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplatecircularsmallsimpletext			<section class="prog__container"><p>A CLKComplicationTemplateCircularSmallSimpleText object is a template for displaying complication data on the clock face. Use this template when you want to display a short text string for a complication in the circularSmall family.</p><pre><code>CLKComplicationTemplateCircularSmallSimpleText</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplatecircularsmallsimpletext
CLKComplicationTemplateCircularSmallStackImage	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplatecircularsmallstackimage			<section class="prog__container"><p>A CLKComplicationTemplateCircularSmallStackImage object is a template for displaying complication data on the clock face. Use this template when you want to display an image with a line of text below it for a complication in the circularSmall family. </p><pre><code>CLKComplicationTemplateCircularSmallStackImage</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplatecircularsmallstackimage
CLKComplicationTemplateCircularSmallStackText	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplatecircularsmallstacktext			<section class="prog__container"><p>A CLKComplicationTemplateCircularSmallStackText object is a template for displaying complication data on the clock face. Use this template when you want to display two text strings stacked on top of each other for a complication in the circularSmall family.</p><pre><code>CLKComplicationTemplateCircularSmallStackText</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplatecircularsmallstacktext
CLKComplicationTemplateExtraLargeColumnsText	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplateextralargecolumnstext			<section class="prog__container"><p>A CLKComplicationTemplateExtraLargeColumnsText object is a template for displaying complication data on the clock face. Use this template when you want to display two rows and two columns of text for a complication in the extraLarge family.</p><pre><code>CLKComplicationTemplateExtraLargeColumnsText</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplateextralargecolumnstext
CLKComplicationTemplateExtraLargeRingImage	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplateextralargeringimage			<section class="prog__container"><p>A CLKComplicationTemplateExtraLargeRingImage object is a template for displaying complication data on the clock face. Use this template when you want to display an image encircled by a configurable progress ring for a complication in the extraLarge family.</p><pre><code>CLKComplicationTemplateExtraLargeRingImage</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplateextralargeringimage
CLKComplicationTemplateExtraLargeRingText	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplateextralargeringtext			<section class="prog__container"><p>A CLKComplicationTemplateExtraLargeRingText object is a template for displaying complication data on the clock face. Use this template when you want to display text encircled by a configurable progress ring for a complication in the extraLarge family.</p><pre><code>CLKComplicationTemplateExtraLargeRingText</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplateextralargeringtext
CLKComplicationTemplateExtraLargeSimpleImage	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplateextralargesimpleimage			<section class="prog__container"><p>A CLKComplicationTemplateExtraLargeSimpleImage object is a template for displaying complication data on the clock face. Use this template when you want to display an image for a complication in the extraLarge family.</p><pre><code>CLKComplicationTemplateExtraLargeSimpleImage</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplateextralargesimpleimage
CLKComplicationTemplateExtraLargeSimpleText	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplateextralargesimpletext			<section class="prog__container"><p>A CLKComplicationTemplateExtraLargeSimpleText object is a template for displaying complication data on the clock face. Use this template when you want to display a small amount of text for a complication in the extraLarge family.</p><pre><code>CLKComplicationTemplateExtraLargeSimpleText</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplateextralargesimpletext
CLKComplicationTemplateExtraLargeStackImage	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplateextralargestackimage			<section class="prog__container"><p>A CLKComplicationTemplateExtraLargeStackImage object is a template for displaying complication data on the clock face. Use this template for complications in the extraLarge family that contain a single image with a short line of text below it.</p><pre><code>CLKComplicationTemplateExtraLargeStackImage</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplateextralargestackimage
CLKComplicationTemplateExtraLargeStackText	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplateextralargestacktext			<section class="prog__container"><p>A CLKComplicationTemplateExtraLargeStackText object is a template for displaying complication data on the clock face. Use this template when you want to display two strings stacked one on top of the other for a complication in the extraLarge family.</p><pre><code>CLKComplicationTemplateExtraLargeStackText</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplateextralargestacktext
CLKComplicationTemplateModularLargeColumns	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularlargecolumns			<section class="prog__container"><p>A CLKComplicationTemplateModularLargeColumns object is a template for displaying complication data on the clock face. Use this template when you want to display multiple columns of data for a complication in the modularLarge family.</p><pre><code>CLKComplicationTemplateModularLargeColumns</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularlargecolumns
CLKComplicationTemplateModularLargeStandardBody	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularlargestandardbody			<section class="prog__container"><p>A CLKComplicationTemplateModularLargeStandardBody object is a template for displaying complication data on the clock face. Use this template when you want to display a header row and two lines of text for a complication in the modularLarge family.</p><pre><code>CLKComplicationTemplateModularLargeStandardBody</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularlargestandardbody
CLKComplicationTemplateModularLargeTable	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularlargetable			<section class="prog__container"><p>A CLKComplicationTemplateModularLargeTable object is a template for displaying complication data on the clock face. Use this template when you want to display a header row and columns for a complication in the modularLarge family.</p><pre><code>CLKComplicationTemplateModularLargeTable</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularlargetable
CLKComplicationTemplateModularLargeTallBody	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularlargetallbody			<section class="prog__container"><p>A CLKComplicationTemplateModularLargeTallBody object is a template for displaying complication data on the clock face. Use this template when you want to display a header row and a tall row of body text for a complication in the modularLarge family.</p><pre><code>CLKComplicationTemplateModularLargeTallBody</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularlargetallbody
CLKComplicationTemplateModularSmallColumnsText	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularsmallcolumnstext			<section class="prog__container"><p>A CLKComplicationTemplateModularSmallColumnsText object is a template for displaying complication data on the clock face. Use this template when you want to display two rows and two columns of text for a complication in the modularSmall family.</p><pre><code>CLKComplicationTemplateModularSmallColumnsText</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularsmallcolumnstext
CLKComplicationTemplateModularSmallRingImage	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularsmallringimage			<section class="prog__container"><p>A CLKComplicationTemplateModularSmallRingImage object is a template for displaying complication data on the clock face. Use this template when you want to display an image encircled by a configurable progress ring for a complication in the modularSmall family.</p><pre><code>CLKComplicationTemplateModularSmallRingImage</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularsmallringimage
CLKComplicationTemplateModularSmallRingText	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularsmallringtext			<section class="prog__container"><p>A CLKComplicationTemplateModularSmallSimpleText object is a template for displaying complication data on the clock face. Use this template when you want to display text encircled by a configurable progress ring for a complication in the modularSmall family.</p><pre><code>CLKComplicationTemplateModularSmallSimpleText</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularsmallringtext
CLKComplicationTemplateModularSmallSimpleImage	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularsmallsimpleimage			<section class="prog__container"><p>A CLKComplicationTemplateModularSmallSimpleImage object is a template for displaying complication data on the clock face. Use this template when you want to display an image for a complication in the modularSmall family.</p><pre><code>CLKComplicationTemplateModularSmallSimpleImage</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularsmallsimpleimage
CLKComplicationTemplateModularSmallSimpleText	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularsmallsimpletext			<section class="prog__container"><p>A CLKComplicationTemplateModularSmallSimpleText object is a template for displaying complication data on the clock face. Use this template when you want to display a small amount of text for a complication in the modularSmall family.</p><pre><code>CLKComplicationTemplateModularSmallSimpleText</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularsmallsimpletext
CLKComplicationTemplateModularSmallStackImage	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularsmallstackimage			<section class="prog__container"><p>A CLKComplicationTemplateModularSmallStackImage object is a template for displaying complication data on the clock face. Use this template for complications in the modularSmall family that contain a single image with a short line of text below it.</p><pre><code>CLKComplicationTemplateModularSmallStackImage</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularsmallstackimage
CLKComplicationTemplateModularSmallStackText	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularsmallstacktext			<section class="prog__container"><p>A CLKComplicationTemplateModularSmallStackText object is a template for displaying complication data on the clock face. Use this template when you want to display two strings stacked one on top of the other for a complication in the modularSmall family.</p><pre><code>CLKComplicationTemplateModularSmallStackText</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplatemodularsmallstacktext
CLKComplicationTemplateUtilitarianLargeFlat	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplateutilitarianlargeflat			<section class="prog__container"><p>A CLKComplicationTemplateUtilitarianLargeFlat object is a template for displaying complication data on the clock face. Use this template when you want to display an image and string in a single long line for a complication in the utilitarianLarge family.</p><pre><code>CLKComplicationTemplateUtilitarianLargeFlat</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplateutilitarianlargeflat
CLKComplicationTemplateUtilitarianSmallFlat	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplateutilitariansmallflat			<section class="prog__container"><p>A CLKComplicationTemplateUtilitarianSmallFlat object is a template for displaying complication data on the clock face. Use this template when you want to display an image and text in a single line for a complication in the utilitarianSmall family.</p><pre><code>CLKComplicationTemplateUtilitarianSmallFlat</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplateutilitariansmallflat
CLKComplicationTemplateUtilitarianSmallRingImage	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplateutilitariansmallringimage			<section class="prog__container"><p>A CLKComplicationTemplateUtilitarianSmallRingImage object is a template for displaying complication data on the clock face. Use this template when you want to display an image encircled by a configurable progress ring for a complication in the utilitarianSmall family.</p><pre><code>CLKComplicationTemplateUtilitarianSmallRingImage</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplateutilitariansmallringimage
CLKComplicationTemplateUtilitarianSmallRingText	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplateutilitariansmallringtext			<section class="prog__container"><p>A CLKComplicationTemplateUtilitarianSmallRingText object is a template for displaying complication data on the clock face. Use this template when you want to display text encircled by a configurable progress ring for a complication in the utilitarianSmall family.</p><pre><code>CLKComplicationTemplateUtilitarianSmallRingText</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplateutilitariansmallringtext
CLKComplicationTemplateUtilitarianSmallSquare	A							https://developer.apple.com/reference/clockkit/clkcomplicationtemplateutilitariansmallsquare			<section class="prog__container"><p>A CLKComplicationTemplateUtilitarianSmallSquare object is a template for displaying complication data on the clock face. Use this template when you want to display a single square image for a complication in the utilitarianSmall family.</p><pre><code>CLKComplicationTemplateUtilitarianSmallSquare</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtemplateutilitariansmallsquare
CLKComplicationTimelineEntry	A							https://developer.apple.com/reference/clockkit/clkcomplicationtimelineentry			<section class="prog__container"><p>A CLKComplicationTimelineEntry object contains a complication template object and the time at which to display it. Each entry object represents a single data point along your complication’s timeline. You create and return timeline entries when asked to do so by ClockKit. When the date associated with a particular timeline entry occurs, ClockKit updates your complication’s interface with the data in the accompanying template object.</p><pre><code>CLKComplicationTimelineEntry</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtimelineentry
CLKComplicationTimeTravelDirections	A							https://developer.apple.com/reference/clockkit/clkcomplicationtimetraveldirections			<section class="prog__container"><p>Constants indicating the supported time travel directions, if any.</p><pre><code>static var forward: CLKComplicationTimeTravelDirections</code></pre></section>	https://developer.apple.com/reference/clockkit/clkcomplicationtimetraveldirections
CLKDateTextProvider	A							https://developer.apple.com/reference/clockkit/clkdatetextprovider			<section class="prog__container"><p>A CLKDateTextProvider object creates a formatted string that conveys a date without any time information. Use a date provider for strings that contain day, month, and year information. The text provider formats the date information consistently and in a way that makes the best use of the available space. It also takes into account the user’s region and locale settings. </p><pre><code>CLKDateTextProvider</code></pre></section>	https://developer.apple.com/reference/clockkit/clkdatetextprovider
CLKImageProvider	A							https://developer.apple.com/reference/clockkit/clkimageprovider			<section class="prog__container"><p>A CLKImageProvider object manages an image displayed by a complication. You create an image provider with at least one image and may specify two additional images to use under certain conditions. The images you specify are template images that have a color applied to them prior to display. The clock face displaying the complication determines how the images are composited together and which tint color is applied. </p><pre><code>CLKImageProvider</code></pre></section>	https://developer.apple.com/reference/clockkit/clkimageprovider
CLKRelativeDateTextProvider	A							https://developer.apple.com/reference/clockkit/clkrelativedatetextprovider			<section class="prog__container"><p>A CLKRelativeDateTextProvider object creates a formatted string that conveys the difference in time between the current date and a date that you specify. You use a relative date text provider to implement timers or other relative time values in an efficient way. Instead of using multiple timeline entries to replicate a countdown timer, create a single timeline entry with a relative date text provider. When the user views the clock face, ClockKit automatically updates the relative time value in your complication, providing up-to-date time information. </p><pre><code>CLKRelativeDateTextProvider</code></pre></section>	https://developer.apple.com/reference/clockkit/clkrelativedatetextprovider
CLKSimpleTextProvider	A							https://developer.apple.com/reference/clockkit/clksimpletextprovider			<section class="prog__container"><p>A CLKSimpleTextProvider object contains a single line of text to display in your complication interface. Use these objects to specify strings that you provide. The simple text object handles the formatting of that string in your complication, which may include tinting it to match the color of the clock face. </p><pre><code>CLKSimpleTextProvider</code></pre></section>	https://developer.apple.com/reference/clockkit/clksimpletextprovider
CLKTextProvider	A							https://developer.apple.com/reference/clockkit/clktextprovider			<section class="prog__container"><p>The CLKTextProvider class is the base class for specifying text-based data in a complication. You do not create instances of this class yourself. Instead, you create instances of an appropriate subclass, based on the type of text data you are trying to create. You can also use the textProviderWithFormat: class method to create a generic text provider constructed from a format string and the data from other text provider</p><pre><code>CLKTextProvider</code></pre></section>	https://developer.apple.com/reference/clockkit/clktextprovider
CLKTimeIntervalTextProvider	A							https://developer.apple.com/reference/clockkit/clktimeintervaltextprovider			<section class="prog__container"><p>A CLKTimeIntervalTextProvider object formats a time range so that it can be displayed by your complication. This provider creates strings like “10:15–11:15AM” where the time range may span hours, days, or some larger time interval. The text provider takes into account the user’s region and locale settings.</p><pre><code>CLKTimeIntervalTextProvider</code></pre></section>	https://developer.apple.com/reference/clockkit/clktimeintervaltextprovider
CLKTimeTextProvider	A							https://developer.apple.com/reference/clockkit/clktimetextprovider			<section class="prog__container"><p>A CLKTimeTextProvider object formats a time value so that it can be displayed in your complication. This provider supports time values in either the 24-hour or 12-hour format and takes into account the user’s region and locale settings. As needed, the provider automatically shortens the string to fit the available space. </p><pre><code>CLKTimeTextProvider</code></pre></section>	https://developer.apple.com/reference/clockkit/clktimetextprovider
CKAcceptSharesOperation	A							https://developer.apple.com/reference/cloudkit/ckacceptsharesoperation			<section class="prog__container"><p>An operation that accepts shared records.</p><pre><code>var acceptSharesCompletionBlock: ((Error?) -> Void)?</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckacceptsharesoperation
CKApplicationPermissions	A							https://developer.apple.com/reference/cloudkit/ckapplicationpermissions			<section class="prog__container"><p>Constants indicating the permissions granted to the app by the user.</p><pre><code>static var userDiscoverability: CKApplicationPermissions</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckapplicationpermissions
CKAsset	A							https://developer.apple.com/reference/cloudkit/ckasset			<section class="prog__container"><p>A CKAsset object represents a large file associated with a record. Use asset objects to incorporate external files—such as image, sound, video, text, and binary data files—into your app’s records. You can also use assets in places where the data you want to assign to a field is more than a few kilobytes in size. To associate an asset with a record, assign it as the value of one of the record’s fields.</p><pre><code>CKAsset</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckasset
CKContainer	A							https://developer.apple.com/reference/cloudkit/ckcontainer			<section class="prog__container"><p>An encapsulation of content associated with an app, including content that is accessible to all users and content that is available only to a specific user.</p><pre><code>CKContainer</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckcontainer
CKDatabase	A							https://developer.apple.com/reference/cloudkit/ckdatabase			<section class="prog__container"><p>A conduit for accessing and for performing operations on the public and private data of an app container.</p><pre><code>CKDatabase</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckdatabase
CKDatabaseNotification	A							https://developer.apple.com/reference/cloudkit/ckdatabasenotification			<section class="prog__container"><p>A notification object about a database.</p><pre><code>var databaseScope: CKDatabaseScope</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckdatabasenotification
CKDatabaseOperation	A							https://developer.apple.com/reference/cloudkit/ckdatabaseoperation			<section class="prog__container"><p>The CKDatabaseOperation class is an abstract parent class for operations that act on the public or private databases in a container. Database operations typically involve fetching and saving records and other database objects, as well as queries on the contents of the database. You use the property of this class to tell the operation object which database to use when executing its task. Do not subclass this class or create instances of it. Instead, create instances of one of its concrete subclasses.</p><pre><code>CKDatabaseOperation</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckdatabaseoperation
CKDatabaseSubscription	A							https://developer.apple.com/reference/cloudkit/ckdatabasesubscription			<section class="prog__container"><p>A subscription for database changes.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckdatabasesubscription
CKDiscoverAllUserIdentitiesOperation	A							https://developer.apple.com/reference/cloudkit/ckdiscoveralluseridentitiesoperation			<section class="prog__container"><p>An operation that finds all discoverable users in the device’s contacts.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckdiscoveralluseridentitiesoperation
CKDiscoverUserIdentitiesOperation	A							https://developer.apple.com/reference/cloudkit/ckdiscoveruseridentitiesoperation			<section class="prog__container"><p>An operation that fetches user identities.</p><pre><code>var discoverUserIdentitiesCompletionBlock: ((Error?) -> Void)?</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckdiscoveruseridentitiesoperation
CKFetchDatabaseChangesOperation	A							https://developer.apple.com/reference/cloudkit/ckfetchdatabasechangesoperation			<section class="prog__container"><p>An operation that fetches changes to the database.</p><pre><code>init(previousServerChangeToken: CKServerChangeToken?)</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckfetchdatabasechangesoperation
CKFetchNotificationChangesOperation	A							https://developer.apple.com/reference/cloudkit/ckfetchnotificationchangesoperation			<section class="prog__container"><p>A CKFetchNotificationChangesOperation object retrieves unread CKNotification objects from a container. Notification objects contain the data associated with push notifications that have already been sent to an app. Fetch notification objects to identify changes that your app might have missed or to retrieve the complete push notification payload, which might have been truncated when it was delivered to the device.</p><pre><code>CKFetchNotificationChangesOperation</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckfetchnotificationchangesoperation
CKFetchRecordsOperation	A							https://developer.apple.com/reference/cloudkit/ckfetchrecordsoperation			<section class="prog__container"><p>A CKFetchRecordsOperation object retrieves CKRecord objects (whose IDs you already know) from iCloud. Use this operation to retrieve the entire contents of each record or only a subset of its contained values. As records become available, the operation object reports progress about the state of the operation to several different blocks, which you can use to process the results.</p><pre><code>CKFetchRecordsOperation</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckfetchrecordsoperation
CKFetchRecordZoneChangesOperation	A							https://developer.apple.com/reference/cloudkit/ckfetchrecordzonechangesoperation			<section class="prog__container"><p>An operation that fetches record changes across the given record zone.</p><pre><code>var fetchAllChanges: Bool</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckfetchrecordzonechangesoperation
CKFetchRecordZoneChangesOptions	A							https://developer.apple.com/reference/cloudkit/ckfetchrecordzonechangesoptions			<section class="prog__container"><p>Options when fetching record zone changes.</p><pre><code>var desiredKeys: [String]?</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckfetchrecordzonechangesoptions
CKFetchRecordZonesOperation	A							https://developer.apple.com/reference/cloudkit/ckfetchrecordzonesoperation			<section class="prog__container"><p>A CKFetchRecordZonesOperation object retrieves CKRecordZone objects (whose IDs you already know) from iCloud. Use this operation object to fetch record zones so that you can ascertain their capabilities. </p><pre><code>CKFetchRecordZonesOperation</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckfetchrecordzonesoperation
CKFetchShareMetadataOperation	A							https://developer.apple.com/reference/cloudkit/ckfetchsharemetadataoperation			<section class="prog__container"><p>An operation that fetches shared record metadata for one or more shares.</p><pre><code>var fetchShareMetadataCompletionBlock: ((Error?) -> Void)?</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckfetchsharemetadataoperation
CKFetchShareParticipantsOperation	A							https://developer.apple.com/reference/cloudkit/ckfetchshareparticipantsoperation			<section class="prog__container"><p>An operation that fetches the participants of a shared record.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckfetchshareparticipantsoperation
CKFetchSubscriptionsOperation	A							https://developer.apple.com/reference/cloudkit/ckfetchsubscriptionsoperation			<section class="prog__container"><p>A CKFetchSubscriptionsOperation object retrieves CKSubscription objects (whose IDs you already know) from iCloud and can fetch all subscriptions associated with the current user. You might fetch subscription objects so you can examine or modify their parameters; for example, to adjust the delivery options for push notifications generated by the subscription.</p><pre><code>CKFetchSubscriptionsOperation</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckfetchsubscriptionsoperation
CKFetchWebAuthTokenOperation	A							https://developer.apple.com/reference/cloudkit/ckfetchwebauthtokenoperation			<section class="prog__container"><p>The CKFetchWebAuthTokenOperation object fetches a web authentication token given an API token that you obtain from CloudKit Dashboard. Use the add(_:) method in the CKDatabase class to add this operation to the operation queue of the public database.</p><pre><code>CKFetchWebAuthTokenOperation</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckfetchwebauthtokenoperation
CKLocationSortDescriptor	A							https://developer.apple.com/reference/cloudkit/cklocationsortdescriptor			<section class="prog__container"><p>A CKLocationSortDescriptor object sorts records containing location data based on their distance from a location that you specify. You can add a location sort descriptor to your queries when searching for records. At creation time, you must provide the sort descriptor with a key whose value is a CLLocation object. The sort descriptor uses the value of that key to perform the sort.</p><pre><code>CKLocationSortDescriptor</code></pre></section>	https://developer.apple.com/reference/cloudkit/cklocationsortdescriptor
CKMarkNotificationsReadOperation	A							https://developer.apple.com/reference/cloudkit/ckmarknotificationsreadoperation			<section class="prog__container"><p>A CKMarkNotificationsReadOperation object marks push notifications as read by your app so that they do not show up in future fetch results. If your app uses push notifications to track changes to records, you can use this operation object to note which push notifications do not need to be processed again. </p><pre><code>CKMarkNotificationsReadOperation</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckmarknotificationsreadoperation
CKModifyBadgeOperation	A							https://developer.apple.com/reference/cloudkit/ckmodifybadgeoperation			<section class="prog__container"><p>A CKModifyBadgeOperation object updates the badge value applied to the app’s icon. This operation object can update the badge for the current device or for all of the user’s devices.</p><pre><code>CKModifyBadgeOperation</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckmodifybadgeoperation
CKModifyRecordsOperation	A							https://developer.apple.com/reference/cloudkit/ckmodifyrecordsoperation			<section class="prog__container"><p>A CKModifyRecordsOperation object saves changes to one or more CKRecord objects. After modifying the fields of a record, use this type of operation object to save those changes to a database. You also use instances of this class to delete records permanently from a database.</p><pre><code>CKModifyRecordsOperation</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckmodifyrecordsoperation
CKModifyRecordZonesOperation	A							https://developer.apple.com/reference/cloudkit/ckmodifyrecordzonesoperation			<section class="prog__container"><p>A CKModifyRecordZonesOperation object saves or deletes record zones. After creating one or more record zones, use this operation object to save those zones to the database. You can also use it to delete existing zones and the records they contain.</p><pre><code>CKModifyRecordZonesOperation</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckmodifyrecordzonesoperation
CKModifySubscriptionsOperation	A							https://developer.apple.com/reference/cloudkit/ckmodifysubscriptionsoperation			<section class="prog__container"><p>A CKModifySubscriptionsOperation object saves changes to one or more CKSubscription objects. After creating or changing the configuration of a subscription object, use this type of operation object to save those changes to an iCloud container. You also use instances of this class to delete subscriptions permanently from a database.</p><pre><code>CKModifySubscriptionsOperation</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckmodifysubscriptionsoperation
CKNotification	A							https://developer.apple.com/reference/cloudkit/cknotification			<section class="prog__container"><p>A CKNotification object represents a push notification that was sent to your app. Notification objects wrap the data associated with a push notification. Use notification objects to wrap recently received push notification data or to fetch notification objects representing already delivered push notifications from a container. In both cases, the information in the notification object tells you what changed. </p><pre><code>CKNotification</code></pre></section>	https://developer.apple.com/reference/cloudkit/cknotification
CKNotificationID	A							https://developer.apple.com/reference/cloudkit/cknotificationid			<section class="prog__container"><p>A CKNotificationID object uniquely identifies a push notification sent from a container. You do not create notification IDs directly. The server creates them when it creates the CKNotification objects that correspond to the push notifications sent to your app. You can compare two IDs using the isEqual(_:) method to determine if two notification objects are the same. This class defines no methods or properties.</p><pre><code>CKNotificationID</code></pre></section>	https://developer.apple.com/reference/cloudkit/cknotificationid
CKNotificationInfo	A							https://developer.apple.com/reference/cloudkit/cknotificationinfo			<section class="prog__container"><p>A CKNotificationInfo object specifies the push notification data that the server sends to your app when a subscription finds a match. When configuring a CKSubscription object, create one of these objects and use it to specify the type of push notifications you want generated when the subscription’s trigger condition is met. You can provide a message for an alert panel, information about the sounds to play, and information about whether the app should be badged. You can also ask the server to provide information about the record that triggered the notification.</p><pre><code>CKNotificationInfo</code></pre></section>	https://developer.apple.com/reference/cloudkit/cknotificationinfo
CKOperation	A							https://developer.apple.com/reference/cloudkit/ckoperation			<section class="prog__container"><p>The abstract base class for all operations that can be executed against a CloudKit database.</p><pre><code>CKOperation</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckoperation
CKQuery	A							https://developer.apple.com/reference/cloudkit/ckquery			<section class="prog__container"><p>A CKQuery object manages the criteria to apply when searching for records in a database. You create a query object as the first step in the search process. The query object stores the search parameters, including the type of records to search, the match criteria (predicate) to apply, and the sort parameters to apply to the results. The second step is to use the query object to initialize a CKQueryOperation object, which you then execute to generate the results.</p><pre><code>CKQuery</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckquery
CKQueryCursor	A							https://developer.apple.com/reference/cloudkit/ckquerycursor			<section class="prog__container"><p>A CKQueryCursor object is an opaque data object that marks the stopping point for a query and the starting point for retrieving the remaining results. You do not create instances of this class yourself. When fetching records using a CKQueryOperation object, if the number of results exceeds the results limit value set for the query, the server provides you with a query cursor object. Use that cursor object to initialize a new CKQueryOperation and retrieve the next batch of results for the same query.</p><pre><code>CKQueryCursor</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckquerycursor
CKQueryNotification	A							https://developer.apple.com/reference/cloudkit/ckquerynotification			<section class="prog__container"><p>A CKQueryNotification object represents a push notification that was generated by a subscription object. Subscription objects represent persistent queries on the server. When the server detects a change related to a subscription, it sends a push notification to the client that created the subscription and logs the push notification in the container. You use instances of this class to get information about the record involved in the push notification. </p><pre><code>CKQueryNotification</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckquerynotification
CKQueryOperation	A							https://developer.apple.com/reference/cloudkit/ckqueryoperation			<section class="prog__container"><p>A CKQueryOperation object is a concrete operation that you can use to execute queries against a database. A query operation takes the query parameters you provide and applies those parameters to the specified database and zone, delivering any matching records asynchronously to the blocks that you provide. </p><pre><code>CKQueryOperation</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckqueryoperation
CKQuerySubscription	A							https://developer.apple.com/reference/cloudkit/ckquerysubscription			<section class="prog__container"><p>Subscription that fires whenever a change matches the specified predicate.</p><pre><code>CKQuerySubscription</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckquerysubscription
CKRecord	A							https://developer.apple.com/reference/cloudkit/ckrecord			<section class="prog__container"><p>A dictionary of key-value pairs that you use to fetch and save the data of your app.</p><pre><code>CKRecord</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckrecord
CKRecordID	A							https://developer.apple.com/reference/cloudkit/ckrecordid			<section class="prog__container"><p>A CKRecordID object uniquely identifies a record in a database. Record ID objects are normally created automatically when you create a new record, but you might also create IDs in several specific situations. For example, you must create record ID objects when you want to save a record in a zone other than the default zone. You can also create record ID objects when you want to retrieve records whose IDs you know from a database.</p><pre><code>CKRecordID</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckrecordid
CKRecordValue	A							https://developer.apple.com/reference/cloudkit/ckrecordvalue			<section class="prog__container"><p>The CKRecordValue protocol provides strong type checking for objects that the CloudKit framework stores on the server. Do not adopt this protocol in your custom classes. CloudKit does not support writing custom data types to the server. Attempting to do so results in an error. </p><pre><code>CKRecordValue</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckrecordvalue
CKRecordZone	A							https://developer.apple.com/reference/cloudkit/ckrecordzone			<section class="prog__container"><p>A definition of a custom area for organizing related records in a database.</p><pre><code>CKRecordZone</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckrecordzone
CKRecordZoneCapabilities	A							https://developer.apple.com/reference/cloudkit/ckrecordzonecapabilities			<section class="prog__container"><p>Constants indicating the special capabilities supported by a zone.</p><pre><code>static var fetchChanges: CKRecordZoneCapabilities</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckrecordzonecapabilities
CKRecordZoneID	A							https://developer.apple.com/reference/cloudkit/ckrecordzoneid			<section class="prog__container"><p>A CKRecordZoneID object uniquely identifies a record zone in a database. Zones are a way to group related records together. You create zone ID objects when you want to fetch an existing zone object or create a new zone with a specific name.</p><pre><code>CKRecordZoneID</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckrecordzoneid
CKRecordZoneNotification	A							https://developer.apple.com/reference/cloudkit/ckrecordzonenotification			<section class="prog__container"><p>A notification that is caused by changes to the contents of a record zone.</p><pre><code>init(fromRemoteNotificationDictionary:)</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckrecordzonenotification
CKRecordZoneSubscription	A							https://developer.apple.com/reference/cloudkit/ckrecordzonesubscription			<section class="prog__container"><p>A subscription that causes a push notification to fire whenever any change happens in the specified record zone.</p><pre><code>var recordType: String?</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckrecordzonesubscription
CKReference	A							https://developer.apple.com/reference/cloudkit/ckreference			<section class="prog__container"><p>A CKReference object creates a many-to-one relationship between records in your database. Each reference object stores information about the one record that is the target of the reference. You then save the reference object in the fields of one or more records to create a link from those records to the target. Both records must be located in the same zone of the same database.</p><pre><code>CKReference</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckreference
CKServerChangeToken	A							https://developer.apple.com/reference/cloudkit/ckserverchangetoken			<section class="prog__container"><p>A CKServerChangeToken object is an opaque data object that identifies a specific version of a record. You do not create instances of this class yourself. When fetching records using a CKFetchRecordChangesOperation object, the server provides one of these objects along with the record changes. The next time you fetch the records, pass the previous token to the server. Passing the previous token tells the server what portions of the records to fetch and return to your app. </p><pre><code>CKServerChangeToken</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckserverchangetoken
CKShare	A							https://developer.apple.com/reference/cloudkit/ckshare			<section class="prog__container"><p>A reference to a shared record.</p><pre><code>var url: URL?</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckshare
CKShareMetadata	A							https://developer.apple.com/reference/cloudkit/cksharemetadata			<section class="prog__container"><p>A reference to the metadata for a shared record.</p><pre><code>var containerIdentifier: String</code></pre></section>	https://developer.apple.com/reference/cloudkit/cksharemetadata
CKShareParticipant	A							https://developer.apple.com/reference/cloudkit/ckshareparticipant			<section class="prog__container"><p>A reference to a person who accepted a shared record.</p><pre><code>var acceptanceStatus: CKShareParticipantAcceptanceStatus</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckshareparticipant
CKSubscription	A							https://developer.apple.com/reference/cloudkit/cksubscription			<section class="prog__container"><p>Use a CKSubscription object to track changes occurring on the server. A subscription acts like a persistent query on the server that can track the creation, deletion, and modification of records. When changes occur, they trigger the delivery of push notifications so that your app can respond appropriately. </p><pre><code>CKSubscription</code></pre></section>	https://developer.apple.com/reference/cloudkit/cksubscription
CKUserIdentity	A							https://developer.apple.com/reference/cloudkit/ckuseridentity			<section class="prog__container"><p>A reference to a user.</p><pre><code>var hasiCloudAccount: Bool</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckuseridentity
CKUserIdentityLookupInfo	A							https://developer.apple.com/reference/cloudkit/ckuseridentitylookupinfo			<section class="prog__container"><p>An object that represents information you use to fetch users.</p><pre><code>var emailAddress: String?</code></pre></section>	https://developer.apple.com/reference/cloudkit/ckuseridentitylookupinfo
CloudKit	A							https://developer.apple.com/reference/cloudkitjs/cloudkit			<section class="prog__container"><p>Use the CloudKit namespace to configure CloudKit JS, and to access app containers and global constants.</p><pre><code>CloudKit</code></pre></section>	https://developer.apple.com/reference/cloudkitjs/cloudkit
CloudKit.CKError	A							https://developer.apple.com/reference/cloudkitjs/cloudkit.ckerror			<section class="prog__container"><p>A CloudKit.CKError object encapsulates an error that may occur when you use CloudKit JS. This includes CloudKit server errors and local errors. </p><pre><code>CloudKit.CKError</code></pre></section>	https://developer.apple.com/reference/cloudkitjs/cloudkit.ckerror
CloudKit.Container	A							https://developer.apple.com/reference/cloudkitjs/cloudkit.container			<section class="prog__container"><p>A CloudKit.Container object provides access to an app container, and through the app container, access to its databases. It also contains methods for authenticating and fetching users.</p><pre><code>CloudKit.Container</code></pre></section>	https://developer.apple.com/reference/cloudkitjs/cloudkit.container
CloudKit.Database	A							https://developer.apple.com/reference/cloudkitjs/cloudkit.database			<section class="prog__container"><p>A CloudKit.Database object represents a public or private database in an app container.</p><pre><code>CloudKit.Database</code></pre></section>	https://developer.apple.com/reference/cloudkitjs/cloudkit.database
CloudKit.DatabaseChangesResponse	A							https://developer.apple.com/reference/cloudkitjs/cloudkit.databasechangesresponse			<section class="prog__container"><p>A CloudKit.DatabaseChangesResponse object encapsulates the results of fetching changed record zones in a database.</p><pre><code>CloudKit.DatabaseChangesResponse</code></pre></section>	https://developer.apple.com/reference/cloudkitjs/cloudkit.databasechangesresponse
CloudKit.Notification	A							https://developer.apple.com/reference/cloudkitjs/cloudkit.notification			<section class="prog__container"><p>A CloudKit.Notification object represents a push notification that was sent to your app. Notifications are triggered by subscriptions that you save to the database. To subscribe to record changes and handle push notifications, see the saveSubscription method in CloudKit.Database.</p><pre><code>CloudKit.Notification</code></pre></section>	https://developer.apple.com/reference/cloudkitjs/cloudkit.notification
CloudKit.QueryNotification	A							https://developer.apple.com/reference/cloudkitjs/cloudkit.querynotification			<section class="prog__container"><p>A CloudKit.QueryNotification object represents a push notification that was generated by a subscription object. A query notification is triggered by subscriptions where the subscriptionType key is query. Use a CloudKit.QueryNotification object to get information about the record that changed. To create query subscriptions and handle push notifications, see the saveSubscriptions method in CloudKit.Database.</p><pre><code>CloudKit.QueryNotification</code></pre></section>	https://developer.apple.com/reference/cloudkitjs/cloudkit.querynotification
CloudKit.QueryResponse	A							https://developer.apple.com/reference/cloudkitjs/cloudkit.queryresponse			<section class="prog__container"><p>A CloudKit.QueryResponse object encapsulates the results of using a query to fetch records</p><pre><code>CloudKit.QueryResponse</code></pre></section>	https://developer.apple.com/reference/cloudkitjs/cloudkit.queryresponse
CloudKit.RecordInfosResponse	A							https://developer.apple.com/reference/cloudkitjs/cloudkit.recordinfosresponse			<section class="prog__container"><p>A CloudKit.RecordInfosResponse object encapsulates the results of fetching information about records in general and shared records in particular.</p><pre><code>CloudKit.RecordInfosResponse</code></pre></section>	https://developer.apple.com/reference/cloudkitjs/cloudkit.recordinfosresponse
CloudKit.RecordsBatchBuilder	A							https://developer.apple.com/reference/cloudkitjs/cloudkit.recordsbatchbuilder			<section class="prog__container"><p>A CloudKit.RecordsBatchBuilder object encapsulates the results of changes to multiple records in a single database operation.</p><pre><code>CloudKit.RecordsBatchBuilder</code></pre></section>	https://developer.apple.com/reference/cloudkitjs/cloudkit.recordsbatchbuilder
CloudKit.RecordsResponse	A							https://developer.apple.com/reference/cloudkitjs/cloudkit.recordsresponse			<section class="prog__container"><p>A CloudKit.RecordsResponse object encapsulates the results of fetching records.</p><pre><code>CloudKit.RecordsResponse</code></pre></section>	https://developer.apple.com/reference/cloudkitjs/cloudkit.recordsresponse
CloudKit.RecordZoneChangesResponse	A							https://developer.apple.com/reference/cloudkitjs/cloudkit.recordzonechangesresponse			<section class="prog__container"><p>The CloudKit.RecordZoneChangesResponse object encapsulates the results of fetching changes to one or more record zones.</p><pre><code>CloudKit.RecordZoneChangesResponse</code></pre></section>	https://developer.apple.com/reference/cloudkitjs/cloudkit.recordzonechangesresponse
CloudKit.RecordZoneNotification	A							https://developer.apple.com/reference/cloudkitjs/cloudkit.recordzonenotification			<section class="prog__container"><p>A CloudKit.RecordZoneNotification object represents a push notification that was caused by changes to the contents of a record zone. A zone notification is triggered by subscriptions where the subscriptionType key is zone. Use a CloudKit.RecordZoneNotification object to get information about the record that changed. To create zone subscriptions and handle push notifications, see the saveSubscriptions method in CloudKit.Database.</p><pre><code>CloudKit.RecordZoneNotification</code></pre></section>	https://developer.apple.com/reference/cloudkitjs/cloudkit.recordzonenotification
CloudKit.RecordZonesResponse	A							https://developer.apple.com/reference/cloudkitjs/cloudkit.recordzonesresponse			<section class="prog__container"><p>A CloudKit.RecordZonesResponse object encapsulates the results of database operations on a record zone.</p><pre><code>CloudKit.RecordZonesResponse</code></pre></section>	https://developer.apple.com/reference/cloudkitjs/cloudkit.recordzonesresponse
CloudKit.Response	A							https://developer.apple.com/reference/cloudkitjs/cloudkit.response			<section class="prog__container"><p>The CloudKit.Response class is an abstract superclass for subclasses that encapsulate the response from server requests. Don’t create instances of this class. Instances of subclasses are returned by methods in the CloudKit.Container and CloudKit.Database classes. Most of these methods return a Promise object that resolves to a subclass of CloudKit.Response if the operation is successful.</p><pre><code>CloudKit.Response</code></pre></section>	https://developer.apple.com/reference/cloudkitjs/cloudkit.response
CloudKit.ShareRecordType	A							https://developer.apple.com/reference/cloudkitjs/cloudkit.sharerecordtype			<section class="prog__container"><p>Display information about the record type of a shared record.</p><pre><code>NAME</code></pre></section>	https://developer.apple.com/reference/cloudkitjs/cloudkit.sharerecordtype
CloudKit.SubscriptionsResponse	A							https://developer.apple.com/reference/cloudkitjs/cloudkit.subscriptionsresponse			<section class="prog__container"><p>A CloudKit.SubscriptionsResponse object encapsulates the results of database operations on subscriptions.</p><pre><code>CloudKit.SubscriptionsResponse</code></pre></section>	https://developer.apple.com/reference/cloudkitjs/cloudkit.subscriptionsresponse
CloudKit.UserIdentitiesResponse	A							https://developer.apple.com/reference/cloudkitjs/cloudkit.useridentitiesresponse			<section class="prog__container"><p>A CloudKit.UserIdentitiesResponse object encapsulates the results of fetching user identities.</p><pre><code>CloudKit.UserIdentitiesResponse</code></pre></section>	https://developer.apple.com/reference/cloudkitjs/cloudkit.useridentitiesresponse
CloudKit JS Data Types	A							https://developer.apple.com/reference/cloudkitjs/cloudkit_js_data_types			<section class="prog__container"><p>This document describes the CloudKit JS data types that are not described in individual class reference documents.</p><pre><code>CloudKit.CloudKitConfig</code></pre></section>	https://developer.apple.com/reference/cloudkitjs/cloudkit_js_data_types
CBGroupIdentity	A							https://developer.apple.com/reference/collaboration/cbgroupidentity			<section class="prog__container"><p>An object of the CBGroupIdentity class represents a group identity and is used for viewing the attributes of group identities from an identity authority. The principal attributes of a CBGroupIdentity object are a POSIX group identifier (GID) and a list of members.</p><pre><code>CBGroupIdentity</code></pre></section>	https://developer.apple.com/reference/collaboration/cbgroupidentity
CBIdentity	A							https://developer.apple.com/reference/collaboration/cbidentity			<section class="prog__container"><p>A CBIdentity object is used for accessing the attributes of an identity stored in an identity authority. You can use an identity object for finding identities, and storing them in an access control list (ACL). If you need to edit these attributes, take advantage of the CSIdentity class in Core Services.</p><pre><code>CBIdentity</code></pre></section>	https://developer.apple.com/reference/collaboration/cbidentity
CBIdentityAuthority	A							https://developer.apple.com/reference/collaboration/cbidentityauthority			<section class="prog__container"><p>An identity authority is a database that stores information about identities. The CBIdentityAuthority class defines one or more identity authorities. This database can be searched for identities in conjunction with the CBIdentity class factory methods.</p><pre><code>CBIdentityAuthority</code></pre></section>	https://developer.apple.com/reference/collaboration/cbidentityauthority
CBIdentityPicker	A							https://developer.apple.com/reference/collaboration/cbidentitypicker			<section class="prog__container"><p>A CBIdentityPicker object allows a user to select identities—for example, user or group objects—that it wants one or more services or shared resources to have access to. An identity picker can be displayed either as an application-modal dialog or as a sheet attached to a document window. An identity picker returns the selected records to be added to access control lists using Collaboration. If a selected record is not a user or group identity, then an identity picker prompts the end user for additional information—such as a password—to promote that record to a sharing account.</p><pre><code>CBIdentityPicker</code></pre></section>	https://developer.apple.com/reference/collaboration/cbidentitypicker
CBUserIdentity	A							https://developer.apple.com/reference/collaboration/cbuseridentity			<section class="prog__container"><p>An object of the CBUserIdentity class represents a user identity and is used for accessing the attributes of a user identity from an identity authority. The principal attributes of CBUserIdentity are a POSIX user identifier (UID), password, and certificate.</p><pre><code>CBUserIdentity</code></pre></section>	https://developer.apple.com/reference/collaboration/cbuseridentity
CNContact	A							https://developer.apple.com/reference/contacts/cncontact			<section class="prog__container"><p>A thread-safe class that represents an immutable value object for contact properties, such as the first name and phone numbers of a contact. </p><pre><code>var identifier: String</code></pre></section>	https://developer.apple.com/reference/contacts/cncontact
CNContactFetchRequest	A							https://developer.apple.com/reference/contacts/cncontactfetchrequest			<section class="prog__container"><p>An object that defines fetching options to use while fetching contacts. </p><pre><code>enumerateContacts(with:usingBlock:)</code></pre></section>	https://developer.apple.com/reference/contacts/cncontactfetchrequest
CNContactFormatter	A							https://developer.apple.com/reference/contacts/cncontactformatter			<section class="prog__container"><p>An object that defines the different formatting styles for contacts. </p><pre><code>CNContactFormatter</code></pre></section>	https://developer.apple.com/reference/contacts/cncontactformatter
CNContactProperty	A							https://developer.apple.com/reference/contacts/cncontactproperty			<section class="prog__container"><p>An object that represents a property of a contact. </p><pre><code>CNContact</code></pre></section>	https://developer.apple.com/reference/contacts/cncontactproperty
CNContactRelation	A							https://developer.apple.com/reference/contacts/cncontactrelation			<section class="prog__container"><p>The CNContactRelation class defines an immutable value object representing a contact related to another. This is a thread-safe class.</p><pre><code>CNContactRelation</code></pre></section>	https://developer.apple.com/reference/contacts/cncontactrelation
CNContactStore	A							https://developer.apple.com/reference/contacts/cncontactstore			<section class="prog__container"><p>The CNContactStore class is a thread-safe class that can fetch and save contacts, groups, and containers.</p><pre><code>CNContactStore</code></pre></section>	https://developer.apple.com/reference/contacts/cncontactstore
CNContactsUserDefaults	A							https://developer.apple.com/reference/contacts/cncontactsuserdefaults			<section class="prog__container"><p>The CNContactsUserDefaults class defines properties used to access the user defaults for a contact.</p><pre><code>CNContactsUserDefaults</code></pre></section>	https://developer.apple.com/reference/contacts/cncontactsuserdefaults
CNContactVCardSerialization	A							https://developer.apple.com/reference/contacts/cncontactvcardserialization			<section class="prog__container"><p>The CNContactVCardSerialization supports vCard representation for the given set of contacts.</p><pre><code>CNContactVCardSerialization</code></pre></section>	https://developer.apple.com/reference/contacts/cncontactvcardserialization
CNContainer	A							https://developer.apple.com/reference/contacts/cncontainer			<section class="prog__container"><p>A thread-safe class that defines an immutable object that represents a container.</p><pre><code>CNContainer</code></pre></section>	https://developer.apple.com/reference/contacts/cncontainer
CNGroup	A							https://developer.apple.com/reference/contacts/cngroup			<section class="prog__container"><p>A thread-safe class that defines an immutable object that represents a group. </p><pre><code>var identifier: String</code></pre></section>	https://developer.apple.com/reference/contacts/cngroup
CNInstantMessageAddress	A							https://developer.apple.com/reference/contacts/cninstantmessageaddress			<section class="prog__container"><p>A thread-safe class that defines an immutable value object representing an instant message address. </p><pre><code>CNInstantMessageAddress</code></pre></section>	https://developer.apple.com/reference/contacts/cninstantmessageaddress
CNLabeledValue	A							https://developer.apple.com/reference/contacts/cnlabeledvalue			<section class="prog__container"><p>A thread-safe class that defines an immutable value object that combines a contact property value with a label, such as a contact phone number combined with a label of Home, Work, or iPhone.</p><pre><code>var identifier: String</code></pre></section>	https://developer.apple.com/reference/contacts/cnlabeledvalue
CNMutableContact	A							https://developer.apple.com/reference/contacts/cnmutablecontact			<section class="prog__container"><p>A mutable value object for the contact properties, such as the first name and the phone number of a contact. </p><pre><code>CNMutableContact</code></pre></section>	https://developer.apple.com/reference/contacts/cnmutablecontact
CNMutableGroup	A							https://developer.apple.com/reference/contacts/cnmutablegroup			<section class="prog__container"><p>A mutable value object representing a group for a contact. </p><pre><code>CNMutableGroup</code></pre></section>	https://developer.apple.com/reference/contacts/cnmutablegroup
CNMutablePostalAddress	A							https://developer.apple.com/reference/contacts/cnmutablepostaladdress			<section class="prog__container"><p>A mutable value object representing the postal address for a contact.</p><pre><code>CNMutablePostalAddress</code></pre></section>	https://developer.apple.com/reference/contacts/cnmutablepostaladdress
CNPhoneNumber	A							https://developer.apple.com/reference/contacts/cnphonenumber			<section class="prog__container"><p>A thread-safe class that defines an immutable value object representing a phone number for a contact.</p><pre><code>init(stringValue: String)</code></pre></section>	https://developer.apple.com/reference/contacts/cnphonenumber
CNPostalAddress	A							https://developer.apple.com/reference/contacts/cnpostaladdress			<section class="prog__container"><p>A thread-safe class that defines an immutable object that represents the postal address for a contact.</p><pre><code>var street: String</code></pre></section>	https://developer.apple.com/reference/contacts/cnpostaladdress
CNPostalAddressFormatter	A							https://developer.apple.com/reference/contacts/cnpostaladdressformatter			<section class="prog__container"><p>A class that formats the postal address in a contact.</p><pre><code>CNPostalAddressFormatter</code></pre></section>	https://developer.apple.com/reference/contacts/cnpostaladdressformatter
CNSaveRequest	A							https://developer.apple.com/reference/contacts/cnsaverequest			<section class="prog__container"><p>A save request operation for contacts. </p><pre><code>CNSaveRequest</code></pre></section>	https://developer.apple.com/reference/contacts/cnsaverequest
CNSocialProfile	A							https://developer.apple.com/reference/contacts/cnsocialprofile			<section class="prog__container"><p>A a thread-safe class that defines an immutable object representing a social profile.</p><pre><code>init(urlString:username:userIdentifier:service:)</code></pre></section>	https://developer.apple.com/reference/contacts/cnsocialprofile
CNContactPicker	A							https://developer.apple.com/reference/contactsui/cncontactpicker			<section class="prog__container"><p>The CNContactPicker object displays the popover-based system interface for selecting a contact. The methods and properties of this class help you choose a contact or a contact's value, such as a phone number or email address, of a contact.</p><pre><code>CNContactPicker</code></pre></section>	https://developer.apple.com/reference/contactsui/cncontactpicker
CNContactPickerDelegate	A							https://developer.apple.com/reference/contactsui/cncontactpickerdelegate			<section class="prog__container"><p>The CNContactPickerDelegate protocol describes the interface that CNContactPickerViewController delegates must adopt to respond to contact-picker user events.</p><pre><code>CNContactPickerDelegate</code></pre></section>	https://developer.apple.com/reference/contactsui/cncontactpickerdelegate
CNContactPickerViewController	A							https://developer.apple.com/reference/contactsui/cncontactpickerviewcontroller			<section class="prog__container"><p>The CNContactPickerViewController class creates a controller object that manages the contacts picker view. This class allows the user to select one or more contacts (or their properties) from the list of contacts displayed in the contact view controller (CNContactViewController). The picker supports both single selection and multiselection of the contacts. The app using contact picker view does not need access to the user’s contacts and the user will not be prompted for “grant permission” access. The app has access only to the user’s final selection.  </p><pre><code>CNContactPickerViewController</code></pre></section>	https://developer.apple.com/reference/contactsui/cncontactpickerviewcontroller
CNContactViewController	A							https://developer.apple.com/reference/contactsui/cncontactviewcontroller			<section class="prog__container"><p>The CNContactViewController class implements the view to display a contact. CNContactViewController can display a new contact, unknown contact, or existing contact. You must use one of the designated initializers from init(forNewContact:), init(forUnknownContact:), or init(for:) respectively.</p><pre><code>CNContactViewController</code></pre></section>	https://developer.apple.com/reference/contactsui/cncontactviewcontroller
CNContactViewControllerDelegate	A							https://developer.apple.com/reference/contactsui/cncontactviewcontrollerdelegate			<section class="prog__container"><p>The CNContactViewControllerDelegate protocol declares the interface that CNContactViewController delegates must implement.</p><pre><code>CNContactViewControllerDelegate</code></pre></section>	https://developer.apple.com/reference/contactsui/cncontactviewcontrollerdelegate
Core Audio Data Types	A							https://developer.apple.com/reference/coreaudio/core_audio_data_types			<section class="prog__container"><p>This document describes data types and constants used throughout Core Audio, as well as some convenience functions for working with these types and constants.</p><pre><code>AudioBuffer</code></pre></section>	https://developer.apple.com/reference/coreaudio/core_audio_data_types
AUCustomViewPersistentData	A							https://developer.apple.com/reference/coreaudiokit/aucustomviewpersistentdata			<section class="prog__container"><p>The delegate of a Cocoa-based audio unit view must adopt the AUCustomViewPersistentData protocol to support preserving view state between uses of the associated audio unit. The view data is an opaque dictionary that can contain any user-interface state information that the view needs to preserve.</p><pre><code>AUCustomViewPersistentData</code></pre></section>	https://developer.apple.com/reference/coreaudiokit/aucustomviewpersistentdata
AUGenericView	A							https://developer.apple.com/reference/coreaudiokit/augenericview			<section class="prog__container"><p>An AUGenericView object, or generic view, provides a generic user interface for a Cocoa audio unit.</p><pre><code>AUGenericView</code></pre></section>	https://developer.apple.com/reference/coreaudiokit/augenericview
AUPannerView	A							https://developer.apple.com/reference/coreaudiokit/aupannerview			<section class="prog__container"><p>An AUPannerView object, or panner view, provides a user interface that is specialized for a Cocoa-based Panner audio unit.</p><pre><code>AUPannerView</code></pre></section>	https://developer.apple.com/reference/coreaudiokit/aupannerview
AUViewController	A							https://developer.apple.com/reference/coreaudiokit/auviewcontroller			<section class="prog__container"><p>The superclass used when creating a custom user interface for an audio unit.</p><pre><code>AUViewController</code></pre></section>	https://developer.apple.com/reference/coreaudiokit/auviewcontroller
CABTMIDICentralViewController	A							https://developer.apple.com/reference/coreaudiokit/cabtmidicentralviewcontroller			<section class="prog__container"><p>A CABTMIDICentralViewController object is a view controller that presents a user interface that displays nearby Bluetooth-based MIDI peripherals. The user can select one of those peripherals and pair it with their IOS device.</p><pre><code>CABTMIDICentralViewController</code></pre></section>	https://developer.apple.com/reference/coreaudiokit/cabtmidicentralviewcontroller
CABTMIDILocalPeripheralViewController	A							https://developer.apple.com/reference/coreaudiokit/cabtmidilocalperipheralviewcontroller			<section class="prog__container"><p>A CABTMIDILocalPeripheralViewController object is a view controller that that advertises the iOS device as a Bluetooth-based MIDI peripheral.</p><pre><code>CABTMIDILocalPeripheralViewController</code></pre></section>	https://developer.apple.com/reference/coreaudiokit/cabtmidilocalperipheralviewcontroller
CBATTRequest	A							https://developer.apple.com/reference/corebluetooth/cbattrequest			<section class="prog__container"><p>The CBATTRequest class represents Attribute Protocol (ATT) read and write requests from remote central devices (represented by CBCentral objects). Remote centrals use these ATT requests to read and write characteristic values on local peripherals (represented by CBPeripheralManager objects). Local peripherals, on the other hand, use the properties of CBATTRequest objects to respond to the read and write requests appropriately, using the respond(to:withResult:) method of the CBPeripheralManager class.</p><pre><code>CBATTRequest</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbattrequest
CBAttribute	A							https://developer.apple.com/reference/corebluetooth/cbattribute			<section class="prog__container"><p>CBAttribute is an abstract base class that defines behavior common to the collection of objects that represent aspects of services offered by a peripheral.</p><pre><code>CBAttribute</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbattribute
CBAttributePermissions	A							https://developer.apple.com/reference/corebluetooth/cbattributepermissions			<section class="prog__container"><p>Values representing the read, write, and encryption permissions for a characteristic’s value.</p><pre><code>readEncryptionRequired</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbattributepermissions
CBCentral	A							https://developer.apple.com/reference/corebluetooth/cbcentral			<section class="prog__container"><p>The CBCentral class represents remote central devices that have connected to an app implementing the peripheral role on a local device. That is, when you are implementing the peripheral role using the CBPeripheralManager class, centrals that connect to your local peripheral are represented as CBCentral objects. Remote centrals are identified by universally unique identifiers (UUIDs), represented by NSUUID objects.</p><pre><code>CBCentral</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbcentral
CBCentralManager	A							https://developer.apple.com/reference/corebluetooth/cbcentralmanager			<section class="prog__container"><p>CBCentralManager objects are used to manage discovered or connected remote peripheral devices (represented by CBPeripheral objects), including scanning for, discovering, and connecting to advertising peripherals.</p><pre><code>CBCentralManager</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbcentralmanager
CBCentralManagerDelegate	A							https://developer.apple.com/reference/corebluetooth/cbcentralmanagerdelegate			<section class="prog__container"><p>The CBCentralManagerDelegate protocol defines the methods that a delegate of a CBCentralManager object must adopt. The optional methods of the protocol allow the delegate to monitor the discovery, connectivity, and retrieval of peripheral devices. The only required method of the protocol indicates the availability of the central manager, and is called when the central manager’s state is updated.</p><pre><code>CBCentralManagerDelegate</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbcentralmanagerdelegate
CBCharacteristic	A							https://developer.apple.com/reference/corebluetooth/cbcharacteristic			<section class="prog__container"><p>CBCharacteristic and its subclass CBMutableCharacteristic represent further information about a peripheral’s service. CBCharacteristic objects in particular represent the characteristics of a remote peripheral’s service (remote peripheral devices are represented by CBPeripheral objects). A characteristic contains a single value and any number of descriptors describing that value. The properties of a characteristic determine how the value of the characteristic can be used and how the descriptors can be accessed.</p><pre><code>CBCharacteristic</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbcharacteristic
CBCharacteristicProperties	A							https://developer.apple.com/reference/corebluetooth/cbcharacteristicproperties			<section class="prog__container"><p>Values representing the possible properties of a characteristic. Since characteristic properties can be combined, a characteristic may have multiple property values set.</p><pre><code>static var broadcast: CBCharacteristicProperties</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbcharacteristicproperties
CBDescriptor	A							https://developer.apple.com/reference/corebluetooth/cbdescriptor			<section class="prog__container"><p>CBDescriptor and it subclass CBMutableDescriptor represent a descriptor of a peripheral’s characteristic. CBDescriptor objects in particular represent the descriptors of a remote peripheral’s characteristic (remote peripheral devices are represented by CBPeripheral objects). Descriptors provide further information about a characteristic’s value. For example, they may describe the value in human-readable form and describe how the value should be formatted for presentation purposes. Characteristic descriptors also indicate whether a characteristic’s value is configured on a server (a peripheral) to indicate or notify a client (a central) when the value of the characteristic changes.</p><pre><code>CBDescriptor</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbdescriptor
CBManager	A							https://developer.apple.com/reference/corebluetooth/cbmanager			<section class="prog__container"><p>The abstract base class for Core Bluetooth manager objects (central and peripheral).</p><pre><code>var state: CBManagerState</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbmanager
CBMutableCharacteristic	A							https://developer.apple.com/reference/corebluetooth/cbmutablecharacteristic			<section class="prog__container"><p>CBMutableCharacteristic objects represent the characteristics of a local peripheral’s service (local peripheral devices are represented by CBPeripheralManager objects). This class adds write access to many of the properties in the CBCharacteristic class it inherits from.</p><pre><code>CBMutableCharacteristic</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbmutablecharacteristic
CBMutableDescriptor	A							https://developer.apple.com/reference/corebluetooth/cbmutabledescriptor			<section class="prog__container"><p>CBMutableDescriptor objects represent the descriptors of a local peripheral’s characteristic (local peripheral devices are represented by CBPeripheralManager objects). </p><pre><code>CBMutableDescriptor</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbmutabledescriptor
CBMutableService	A							https://developer.apple.com/reference/corebluetooth/cbmutableservice			<section class="prog__container"><p>The CBMutableService class adds write access to all of the properties in the CBService class it inherits from. You use this class to create a service or an included service on a local peripheral device (represented by a CBPeripheralManager object). After you create a service, you can add it to the peripheral’s local database using the add(_:) method of the CBPeripheralManager class. After you add a service to the peripheral’s local database, the service is cached and you can no longer make changes to it.</p><pre><code>CBMutableService</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbmutableservice
CBPeer	A							https://developer.apple.com/reference/corebluetooth/cbpeer			<section class="prog__container"><p>The CBPeer class is an abstract base class that defines common behavior for objects representing remote devices. You typically do not create instances of either CBPeer or its concrete subclasses. Instead, the system creates them for you during the process of peer discovery.</p><pre><code>CBPeer</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbpeer
CBPeripheral	A							https://developer.apple.com/reference/corebluetooth/cbperipheral			<section class="prog__container"><p>The CBPeripheral class represents remote peripheral devices that your app—by means of a central manager (an instance of CBCentralManager)—has discovered advertising or is currently connected to. Peripherals are identified by universally unique identifiers (UUIDs), represented by NSUUID objects. Peripherals may contain one or more services or provide useful information about their connected signal strength.</p><pre><code>CBPeripheral</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbperipheral
CBPeripheralDelegate	A							https://developer.apple.com/reference/corebluetooth/cbperipheraldelegate			<section class="prog__container"><p>The delegate of a CBPeripheral object must adopt the CBPeripheralDelegate protocol. The delegate uses this protocol’s methods to monitor the discovery, exploration, and interaction of a remote peripheral’s services and properties. There are no required methods in this protocol.</p><pre><code>CBPeripheral</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbperipheraldelegate
CBPeripheralManager	A							https://developer.apple.com/reference/corebluetooth/cbperipheralmanager			<section class="prog__container"><p>CBPeripheralManager objects are used to manage published services within the local peripheral device’s Generic Attribute Profile (GATT) database and to advertise these services to central devices (represented by CBCentral objects). While a service is in the database, it is visible to, and can be accessed by, any connected central. That said, if your app has not specified the bluetooth-peripheral background mode, the contents of its services become disabled when it is in the background or in a suspended state; any remote central trying to access the service’s characteristic value or characteristic descriptors receives an error.</p><pre><code>CBPeripheralManager</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbperipheralmanager
CBPeripheralManagerDelegate	A							https://developer.apple.com/reference/corebluetooth/cbperipheralmanagerdelegate			<section class="prog__container"><p>The delegate of a CBPeripheralManager object must adopt the CBPeripheralManagerDelegate protocol, a protocol consisting of numerous optional methods and one required method. The protocol’s optional methods are used by the delegate to verify publishing and advertising, and to monitor read, write, and subscription requests from remote central devices. The protocol’s required method, which indicates whether the peripheral manager is available, is called when the peripheral manager’s state is updated.</p><pre><code>CBPeripheralManager</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbperipheralmanagerdelegate
CBService	A							https://developer.apple.com/reference/corebluetooth/cbservice			<section class="prog__container"><p>CBService and its subclass CBMutableService represent a peripheral’s service—a collection of data and associated behaviors for accomplishing a function or feature of a device (or portions of that device). CBService objects in particular represent services of a remote peripheral device (represented by a CBPeripheral object). Services are either primary or secondary and may contain a number of characteristics or included services (references to other services).</p><pre><code>CBService</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbservice
CBUUID	A							https://developer.apple.com/reference/corebluetooth/cbuuid			<section class="prog__container"><p>Instances of the CBUUID class represent the 128-bit universally unique identifiers (UUIDs) of attributes used in Bluetooth low energy communication, such as a peripheral’s services, characteristics, and characteristic descriptors. This class provides a number of factory methods for dealing with long UUIDs when developing your app. For example, instead of passing around the string representation of a 128-bit Bluetooth low energy attribute in your code, you can create a CBUUID object that represents it, and pass that around instead.</p><pre><code>CBUUID</code></pre></section>	https://developer.apple.com/reference/corebluetooth/cbuuid
Core Bluetooth Constants	A							https://developer.apple.com/reference/corebluetooth/core_bluetooth_constants			<section class="prog__container"><p>This document describes the constants found in the Core Bluetooth framework.</p><pre><code>CBATTError.Code</code></pre></section>	https://developer.apple.com/reference/corebluetooth/core_bluetooth_constants
Core Data Constants	A							https://developer.apple.com/reference/coredata/core_data_constants			<section class="prog__container"><p>This document describes the constants defined in the Core Data framework and not described in a document for an individual class.</p><pre><code>General Error Codes</code></pre></section>	https://developer.apple.com/reference/coredata/core_data_constants
NSAtomicStore	A							https://developer.apple.com/reference/coredata/nsatomicstore			<section class="prog__container"><p>NSAtomicStore is an abstract superclass that you can subclass to create a Core Data atomic store. It provides default implementations of some utility methods. You use a custom atomic store if you have a custom file format that you want to integrate with a Core Data application.</p><pre><code>NSAtomicStore</code></pre></section>	https://developer.apple.com/reference/coredata/nsatomicstore
NSAtomicStoreCacheNode	A							https://developer.apple.com/reference/coredata/nsatomicstorecachenode			<section class="prog__container"><p>NSAtomicStoreCacheNode is a concrete class to represent basic nodes in a Core Data atomic store.</p><pre><code>NSAtomicStoreCacheNode</code></pre></section>	https://developer.apple.com/reference/coredata/nsatomicstorecachenode
NSAttributeDescription	A							https://developer.apple.com/reference/coredata/nsattributedescription			<section class="prog__container"><p>The NSAttributeDescription class is used to describe attributes of an entity described by an instance of NSEntityDescription.</p><pre><code>NSAttributeDescription</code></pre></section>	https://developer.apple.com/reference/coredata/nsattributedescription
NSEntityDescription	A							https://developer.apple.com/reference/coredata/nsentitydescription			<section class="prog__container"><p>An NSEntityDescription object describes an entity in Core Data. Entities are to managed objects what Class is to id, or—to use a database analogy—what tables are to rows. An instance specifies an entity’s name, its properties (its attributes and relationships, expressed by instances of NSAttributeDescription and NSRelationshipDescription) and the class by which it is represented. </p><pre><code>NSEntityDescription</code></pre></section>	https://developer.apple.com/reference/coredata/nsentitydescription
NSEntityMapping	A							https://developer.apple.com/reference/coredata/nsentitymapping			<section class="prog__container"><p>Instances of NSEntityMapping specify how to map an entity from a source to a destination managed object model.</p><pre><code>NSEntityMapping</code></pre></section>	https://developer.apple.com/reference/coredata/nsentitymapping
NSEntityMigrationPolicy	A							https://developer.apple.com/reference/coredata/nsentitymigrationpolicy			<section class="prog__container"><p>Instances of NSEntityMigrationPolicy customize the migration process for an entity mapping.</p><pre><code>NSEntityMigrationPolicy</code></pre></section>	https://developer.apple.com/reference/coredata/nsentitymigrationpolicy
NSExpressionDescription	A							https://developer.apple.com/reference/coredata/nsexpressiondescription			<section class="prog__container"><p>Instances of NSExpressionDescription objects represent a special property description type intended for use with the NSFetchRequest propertiesToFetch method.</p><pre><code>NSExpressionDescription</code></pre></section>	https://developer.apple.com/reference/coredata/nsexpressiondescription
NSFetchedPropertyDescription	A							https://developer.apple.com/reference/coredata/nsfetchedpropertydescription			<section class="prog__container"><p>The NSFetchedPropertyDescription class is used to define “fetched properties.” Fetched properties allow you to specify related objects through a weak, unidirectional relationship defined by a fetch request. </p><pre><code>NSFetchedPropertyDescription</code></pre></section>	https://developer.apple.com/reference/coredata/nsfetchedpropertydescription
NSFetchedResultsController	A							https://developer.apple.com/reference/coredata/nsfetchedresultscontroller			<section class="prog__container"><p>You use a fetched results controller to efficiently manage the results returned from a Core Data fetch request to provide data for a UITableView object.</p><pre><code>UITableView</code></pre></section>	https://developer.apple.com/reference/coredata/nsfetchedresultscontroller
NSFetchedResultsControllerDelegate	A							https://developer.apple.com/reference/coredata/nsfetchedresultscontrollerdelegate			<section class="prog__container"><p>An instance of NSFetchedResultsController uses methods in this protocol to notify its delegate that the controller’s fetch results have been changed due to an add, remove, move, or update operations.</p><pre><code>NSFetchedResultsController</code></pre></section>	https://developer.apple.com/reference/coredata/nsfetchedresultscontrollerdelegate
NSFetchedResultsSectionInfo	A							https://developer.apple.com/reference/coredata/nsfetchedresultssectioninfo			<section class="prog__container"><p>This protocol defines the interface for section objects vended by an instance of NSFetchedResultsController.</p><pre><code>NSFetchedResultsController</code></pre></section>	https://developer.apple.com/reference/coredata/nsfetchedresultssectioninfo
NSFetchRequest	A							https://developer.apple.com/reference/coredata/nsfetchrequest			<section class="prog__container"><p>A description of search criteria used to retrieve data from a persistent store.</p><pre><code>NSFetchRequest</code></pre></section>	https://developer.apple.com/reference/coredata/nsfetchrequest
NSFetchRequestExpression	A							https://developer.apple.com/reference/coredata/nsfetchrequestexpression			<section class="prog__container"><p>Instances of NSFetchRequestExpression represent expressions which evaluate to the result of executing a fetch request on a managed object context.</p><pre><code>NSFetchRequestExpression</code></pre></section>	https://developer.apple.com/reference/coredata/nsfetchrequestexpression
NSFetchRequestResultType	A							https://developer.apple.com/reference/coredata/nsfetchrequestresulttype			<section class="prog__container"><p>Constants that specify the possible result types a fetch request can return.</p><pre><code>resultType</code></pre></section>	https://developer.apple.com/reference/coredata/nsfetchrequestresulttype
NSIncrementalStore	A							https://developer.apple.com/reference/coredata/nsincrementalstore			<section class="prog__container"><p>NSIncrementalStore is an abstract superclass defining the API through which Core Data communicates with a store. This interface is designed to allow you to create persistent stores which load and save data incrementally, allowing for the management of large and/or shared datasets. See Incremental Store Programming Guide for an implementation strategy and best practices when implementing your own incremental store.</p><pre><code>NSIncrementalStore</code></pre></section>	https://developer.apple.com/reference/coredata/nsincrementalstore
NSIncrementalStoreNode	A							https://developer.apple.com/reference/coredata/nsincrementalstorenode			<section class="prog__container"><p>NSIncrementalStoreNode is a concrete class to represent basic nodes in a Core Data incremental store.</p><pre><code>NSIncrementalStoreNode</code></pre></section>	https://developer.apple.com/reference/coredata/nsincrementalstorenode
NSManagedObject	A							https://developer.apple.com/reference/coredata/nsmanagedobject			<section class="prog__container"><p>NSManagedObject is a generic class that implements all the basic behavior required of a Core Data model object. It is not possible to use instances of direct subclasses of NSObject (or any other class not inheriting from NSManagedObject) with a managed object context. You may create custom subclasses of NSManagedObject, although this is not always required. If no custom logic is needed, a complete Object graph can be formed with NSManagedObject instances.</p><pre><code>NSManagedObject</code></pre></section>	https://developer.apple.com/reference/coredata/nsmanagedobject
NSManagedObjectContext	A							https://developer.apple.com/reference/coredata/nsmanagedobjectcontext			<section class="prog__container"><p>An instance of NSManagedObjectContext represents a single “object space” or scratch pad in an application. Its primary responsibility is to manage a collection of managed objects. These objects form a group of related model objects that represent an internally consistent view of one or more persistent stores. A single managed object instance exists in one and only one context, but multiple copies of an object can exist in different contexts. Thus object uniquing is scoped to a particular context.</p><pre><code>NSManagedObjectContext</code></pre></section>	https://developer.apple.com/reference/coredata/nsmanagedobjectcontext
NSManagedObjectID	A							https://developer.apple.com/reference/coredata/nsmanagedobjectid			<section class="prog__container"><p>An NSManagedObjectID object is a compact, universal identifier for a managed object. This forms the basis for uniquing in the Core Data Framework. A managed object ID uniquely identifies the same managed object both between managed object contexts in a single application, and in multiple applications (as in distributed systems). Identifiers contain the information needed to exactly describe an object in a persistent store (like the primary key in the database), although the detailed information is not exposed. The framework completely encapsulates the “external” information and presents a clean object oriented interface.</p><pre><code>NSManagedObjectID</code></pre></section>	https://developer.apple.com/reference/coredata/nsmanagedobjectid
NSManagedObjectModel	A							https://developer.apple.com/reference/coredata/nsmanagedobjectmodel			<section class="prog__container"><p>An NSManagedObjectModel object describes a schema—a collection of entities (data models) that you use in your application.</p><pre><code>NSManagedObjectModel</code></pre></section>	https://developer.apple.com/reference/coredata/nsmanagedobjectmodel
NSMappingModel	A							https://developer.apple.com/reference/coredata/nsmappingmodel			<section class="prog__container"><p>Instances of NSMappingModel specify how to map from a source to a destination managed object model.</p><pre><code>NSMappingModel</code></pre></section>	https://developer.apple.com/reference/coredata/nsmappingmodel
NSMergeConflict	A							https://developer.apple.com/reference/coredata/nsmergeconflict			<section class="prog__container"><p>A merge conflict encapsulates conflicts that occur when attempting to save changes in a managed object context.</p><pre><code>NSManagedObjectID</code></pre></section>	https://developer.apple.com/reference/coredata/nsmergeconflict
NSMergePolicy	A							https://developer.apple.com/reference/coredata/nsmergepolicy			<section class="prog__container"><p>You use a merge policy object to resolve conflicts between the persistent store and in-memory versions of managed objects.</p><pre><code>NSMergeConflict</code></pre></section>	https://developer.apple.com/reference/coredata/nsmergepolicy
NSMigrationManager	A							https://developer.apple.com/reference/coredata/nsmigrationmanager			<section class="prog__container"><p>Instances of NSMigrationManager perform a migration of data from one persistent store to another using a given mapping model.</p><pre><code>NSMigrationManager</code></pre></section>	https://developer.apple.com/reference/coredata/nsmigrationmanager
NSPersistentContainer	A							https://developer.apple.com/reference/coredata/nspersistentcontainer			<section class="prog__container"><p>A container that encapsulates the Core Data stack in your application.</p><pre><code>NSManagedObjectModel</code></pre></section>	https://developer.apple.com/reference/coredata/nspersistentcontainer
NSPersistentStore	A							https://developer.apple.com/reference/coredata/nspersistentstore			<section class="prog__container"><p>This class is the abstract base class for all Core Data persistent stores.</p><pre><code>NSPersistentStore</code></pre></section>	https://developer.apple.com/reference/coredata/nspersistentstore
NSPersistentStoreCoordinator	A							https://developer.apple.com/reference/coredata/nspersistentstorecoordinator			<section class="prog__container"><p>Instances of NSPersistentStoreCoordinator associate persistent stores (by type) with a model (or more accurately, a configuration of a model) and serve to mediate between the persistent store or stores and the managed object context or contexts. Instances of NSManagedObjectContext use a coordinator to save object graphs to persistent storage and to retrieve model information. A context without a coordinator is not fully functional as it cannot access a model except through a coordinator. The coordinator is designed to present a façade to the managed object contexts such that a group of persistent stores appears as an aggregate store. A managed object context can then create an object graph based on the union of all the data stores the coordinator covers.</p><pre><code>NSPersistentStoreCoordinator</code></pre></section>	https://developer.apple.com/reference/coredata/nspersistentstorecoordinator
NSPersistentStoreDescription	A							https://developer.apple.com/reference/coredata/nspersistentstoredescription			<section class="prog__container"><p>A description object used to create and/or load a persistent store.</p><pre><code>init(url: URL)</code></pre></section>	https://developer.apple.com/reference/coredata/nspersistentstoredescription
NSPersistentStoreRequest	A							https://developer.apple.com/reference/coredata/nspersistentstorerequest			<section class="prog__container"><p>An instance of NSPersistentStoreRequest describes criteria used to retrieve data from or save data to Persistent store.</p><pre><code>NSPersistentStoreRequest</code></pre></section>	https://developer.apple.com/reference/coredata/nspersistentstorerequest
NSPropertyDescription	A							https://developer.apple.com/reference/coredata/nspropertydescription			<section class="prog__container"><p>The NSPropertyDescription class is used to define properties of an entity in a Core Data managed object model. Properties are to entities what instance variables are to classes.</p><pre><code>NSPropertyDescription</code></pre></section>	https://developer.apple.com/reference/coredata/nspropertydescription
NSPropertyMapping	A							https://developer.apple.com/reference/coredata/nspropertymapping			<section class="prog__container"><p>Instances of NSPropertyMapping specify in a mapping model how to map from a property in a source entity to a property in a destination entity.</p><pre><code>NSPropertyMapping</code></pre></section>	https://developer.apple.com/reference/coredata/nspropertymapping
NSRelationshipDescription	A							https://developer.apple.com/reference/coredata/nsrelationshipdescription			<section class="prog__container"><p>The NSRelationshipDescription class is used to describe relationships of an entity in an NSEntityDescription object.</p><pre><code>NSRelationshipDescription</code></pre></section>	https://developer.apple.com/reference/coredata/nsrelationshipdescription
NSSaveChangesRequest	A							https://developer.apple.com/reference/coredata/nssavechangesrequest			<section class="prog__container"><p>A save changes request encapsulates a collection of changes to be made by an object store in response to a save operation on a managed object context. </p><pre><code>init(inserted: Set<NSManagedObject>?, updated: Set<NSManagedObject>?, deleted: Set<NSManagedObject>?, locked: Set<NSManagedObject>?)</code></pre></section>	https://developer.apple.com/reference/coredata/nssavechangesrequest
NSSnapshotEventType	A							https://developer.apple.com/reference/coredata/nssnapshoteventtype			<section class="prog__container"><p>Constants returned from awake(fromSnapshotEvents:) to denote the reason why a managed object may need to reinitialize values. </p><pre><code>awake(fromSnapshotEvents:)</code></pre></section>	https://developer.apple.com/reference/coredata/nssnapshoteventtype
CFFileDescriptor	A							https://developer.apple.com/reference/corefoundation/cffiledescriptor-ru3			<section class="prog__container"><p>The CFFileDescriptor provides an opaque type to monitor file descriptors for read and write activity via CFRunLoop.</p><pre><code>// cc test.c -framework CoreFoundation -O\n#include <CoreFoundation/CoreFoundation.h>\n#include <unistd.h>\n#include <sys/event.h>\nstatic void noteProcDeath(CFFileDescriptorRef fdref, CFOptionFlags callBackTypes, void *info) {\n  struct kevent kev;\n  int fd = CFFileDescriptorGetNativeDescriptor(fdref);\n  kevent(fd, NULL, 0, &kev, 1, NULL);\n  // take action on death of process here\n  printf("process with pid '%u' died\n", (unsigned int)kev.ident);\n  CFFileDescriptorInvalidate(fdref);\n  CFRelease(fdref); // the CFFileDescriptorRef is no longer of any use in this example\n}\n// one argument, an integer pid to watch, required\nint main(int argc, char *argv[]) {\n  if (argc < 2) exit(1);\n  int fd = kqueue();\n  struct kevent kev;\n  EV_SET(&kev, atoi(argv[1]), EVFILT_PROC, EV_ADD|EV_ENABLE, NOTE_EXIT, 0, NULL);\n  kevent(fd, &kev, 1, NULL, 0, NULL);\n  CFFileDescriptorRef fdref = CFFileDescriptorCreate(kCFAllocatorDefault, fd, true, noteProcDeath, NULL);\n  CFFileDescriptorEnableCallBacks(fdref, kCFFileDescriptorReadCallBack);\n  CFRunLoopSourceRef source = CFFileDescriptorCreateRunLoopSource(kCFAllocatorDefault, fdref, 0);\n  CFRunLoopAddSource(CFRunLoopGetMain(), source, kCFRunLoopDefaultMode);\n  CFRelease(source);\n  // run the run loop for 20 seconds\n  CFRunLoopRunInMode(kCFRunLoopDefaultMode, 20.0, false);\n  return 0;\n}\n</code></pre></section>	https://developer.apple.com/reference/corefoundation/cffiledescriptor-ru3
CFFileSecurity	A							https://developer.apple.com/reference/corefoundation/cffilesecurity			<section class="prog__container"><p>Encapsulates a file system object’s security information in a Core Foundation object.</p></section>	https://developer.apple.com/reference/corefoundation/cffilesecurity
CFStream	A							https://developer.apple.com/reference/corefoundation/cfstream			<section class="prog__container"><p>This document describes the generic CFStream functions, data types, and constants. See also CFReadStream and CFWriteStream for functions and constants specific to read and write streams respectively.</p><pre><code>CFStream</code></pre></section>	https://developer.apple.com/reference/corefoundation/cfstream
CFStringTokenizer	A							https://developer.apple.com/reference/corefoundation/cfstringtokenizer-rf8			<section class="prog__container"><p>CFStringTokenizer allows you to tokenize strings into words, sentences or paragraphs in a language-neutral way. It supports languages such as Japanese and Chinese that do not delimit words by spaces, as well as de-compounding German compounds. You can obtain Latin transcription for tokens. It also provides language identification API.</p><pre><code>CFStringTokenizerCopyBestStringLanguage(_:_:)</code></pre></section>	https://developer.apple.com/reference/corefoundation/cfstringtokenizer-rf8
CFURLEnumerator	A							https://developer.apple.com/reference/corefoundation/cfurlenumerator			<section class="prog__container"><p>A reference to a CFURLEnumerator object.</p><pre><code>CFURLEnumerator</code></pre></section>	https://developer.apple.com/reference/corefoundation/cfurlenumerator
CGAffineTransform	A							https://developer.apple.com/reference/coregraphics/cgaffinetransform			<section class="prog__container"><p>An affine transformation matrix for use in drawing 2D graphics.</p><pre><code>CGAffineTransform</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgaffinetransform
CGColor	A							https://developer.apple.com/reference/coregraphics/cgcolor			<section class="prog__container"><p>A set of components that define a color, with a color space specifying how to interpret them.</p><pre><code>CGColor</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgcolor
CGColorConversionInfo	A							https://developer.apple.com/reference/coregraphics/cgcolorconversioninfo			<section class="prog__container"><p>An object that describes how to convert between color spaces for use by other system services.</p><pre><code>CGColorConversionInfo</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgcolorconversioninfo
CGColorSpace	A							https://developer.apple.com/reference/coregraphics/cgcolorspace			<section class="prog__container"><p>A profile that specifies how to interpret a color value for display.</p><pre><code>init?(calibratedGrayWhitePoint: UnsafePointer<CGFloat>!, blackPoint: UnsafePointer<CGFloat>!, gamma: CGFloat)</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgcolorspace
CGContext	A							https://developer.apple.com/reference/coregraphics/cgcontext			<section class="prog__container"><p>A Quartz 2D drawing environment.</p><pre><code>CGContext</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgcontext
CGDataConsumer	A							https://developer.apple.com/reference/coregraphics/cgdataconsumer			<section class="prog__container"><p>An abstraction for data-writing tasks that eliminates the need to manage a raw memory buffer.</p><pre><code>init?(info: UnsafeMutableRawPointer?, cbks: UnsafePointer<CGDataConsumerCallbacks>)</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgdataconsumer
CGDataProvider	A							https://developer.apple.com/reference/coregraphics/cgdataprovider			<section class="prog__container"><p>An abstraction for data-reading tasks that eliminates the need to manage a raw memory buffer.</p><pre><code>CGDataProviderRef</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgdataprovider
CGFloat	A							https://developer.apple.com/reference/coregraphics/cgfloat			<section class="prog__container"><p>The basic type for floating-point scalar values in Core Graphics and related frameworks.</p><pre><code>Double</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgfloat
CGFont	A							https://developer.apple.com/reference/coregraphics/cgfont			<section class="prog__container"><p>A set of character glyphs and layout information for drawing text.</p><pre><code>init(CGDataProvider)</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgfont
CGFunction	A							https://developer.apple.com/reference/coregraphics/cgfunction			<section class="prog__container"><p>A general facility for defining and using callback functions.</p><pre><code>init?(info: UnsafeMutableRawPointer?, domainDimension: Int, domain: UnsafePointer<CGFloat>?, rangeDimension: Int, range: UnsafePointer<CGFloat>?, callbacks: UnsafePointer<CGFunctionCallbacks>)</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgfunction
CGGradient	A							https://developer.apple.com/reference/coregraphics/cggradient			<section class="prog__container"><p>A definition for a smooth transition between colors for drawing radial and axial gradient fills.</p><pre><code>init?(colorSpace: CGColorSpace, colorComponents: UnsafePointer<CGFloat>, locations: UnsafePointer<CGFloat>?, count: Int)</code></pre></section>	https://developer.apple.com/reference/coregraphics/cggradient
CGImage	A							https://developer.apple.com/reference/coregraphics/cgimage			<section class="prog__container"><p>A bitmap image or image mask.</p><pre><code>init?(width: Int, height: Int, bitsPerComponent: Int, bitsPerPixel: Int, bytesPerRow: Int, space: CGColorSpace, bitmapInfo: CGBitmapInfo, provider: CGDataProvider, decode: UnsafePointer<CGFloat>?, shouldInterpolate: Bool, intent: CGColorRenderingIntent)</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgimage
CGLayer	A							https://developer.apple.com/reference/coregraphics/cglayer			<section class="prog__container"><p>An offscreen context for reusing content drawn with Core Graphics. </p><pre><code>init?(CGContext, size: CGSize, auxiliaryInfo: CFDictionary?)</code></pre></section>	https://developer.apple.com/reference/coregraphics/cglayer
CGMutablePath	A							https://developer.apple.com/reference/coregraphics/cgmutablepath			<section class="prog__container"><p>A mutable graphics path: a mathematical description of shapes or lines to be drawn in a graphics context.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgmutablepath
CGPath	A							https://developer.apple.com/reference/coregraphics/cgpath			<section class="prog__container"><p>An immutable graphics path: a mathematical description of shapes or lines to be drawn in a graphics context.</p><pre><code>init(rect: CGRect, transform: UnsafePointer<CGAffineTransform>?)</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgpath
CGPathFillRule	A							https://developer.apple.com/reference/coregraphics/cgpathfillrule			<section class="prog__container"><p>Rules for determining which regions are interior to a path, used by the fillPath(using:) and clip(using:) methods.</p><pre><code>fillPath(using:)</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgpathfillrule
CGPattern	A							https://developer.apple.com/reference/coregraphics/cgpattern			<section class="prog__container"><p>A 2D pattern to be used for drawing graphics paths.</p><pre><code>init?(info: UnsafeMutableRawPointer?, bounds: CGRect, matrix: CGAffineTransform, xStep: CGFloat, yStep: CGFloat, tiling: CGPatternTiling, isColored: Bool, callbacks: UnsafePointer<CGPatternCallbacks>)</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgpattern
CGPDFDocument	A							https://developer.apple.com/reference/coregraphics/cgpdfdocument			<section class="prog__container"><p>A document that contains PDF (Portable Document Format) drawing information.</p><pre><code>init?(CGDataProvider)</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgpdfdocument
CGPoint	A							https://developer.apple.com/reference/coregraphics/cgpoint			<section class="prog__container"><p>A structure that contains a point in a two-dimensional coordinate system.</p><pre><code>init(x: Double, y: Double)</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgpoint
CGRect	A							https://developer.apple.com/reference/coregraphics/cgrect			<section class="prog__container"><p>A structure that contains the location and dimensions of a rectangle.</p><pre><code>init(origin: CGPoint, size: CGSize)</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgrect
CGRectEdge	A							https://developer.apple.com/reference/coregraphics/cgrectedge			<section class="prog__container"><p>Coordinates that establish the edges of a rectangle.</p><pre><code>case minXEdge</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgrectedge
CGShading	A							https://developer.apple.com/reference/coregraphics/cgshading			<section class="prog__container"><p>A definition for a smooth transition between colors, controlled by a custom function you provide, for drawing radial and axial gradient fills.</p><pre><code>init?(axialSpace: CGColorSpace, start: CGPoint, end: CGPoint, function: CGFunction, extendStart: Bool, extendEnd: Bool)</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgshading
CGSize	A							https://developer.apple.com/reference/coregraphics/cgsize			<section class="prog__container"><p>A structure that contains width and height values.</p><pre><code>CGSize</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgsize
CGVector	A							https://developer.apple.com/reference/coregraphics/cgvector			<section class="prog__container"><p>A structure that contains a two-dimensional vector.</p><pre><code>init(dx: Double, dy: Double)</code></pre></section>	https://developer.apple.com/reference/coregraphics/cgvector
Quartz Display Services	A							https://developer.apple.com/reference/coregraphics/quartz_display_services			<section class="prog__container"><p>Provides direct access to features in the macOS window server for configuring and controlling display hardware.</p><pre><code>func CGMainDisplayID()</code></pre></section>	https://developer.apple.com/reference/coregraphics/quartz_display_services
Quartz Event Services	A							https://developer.apple.com/reference/coregraphics/quartz_event_services			<section class="prog__container"><p>Provides features for managing event taps—filters for observing and altering the stream of low-level user input events in macOS.</p><pre><code>SetWinEventHook</code></pre></section>	https://developer.apple.com/reference/coregraphics/quartz_event_services
Quartz Window Services	A							https://developer.apple.com/reference/coregraphics/quartz_window_services			<section class="prog__container"><p>Provides information about the windows managed by the macOS window server.</p><pre><code>func CGWindowListCopyWindowInfo(CGWindowListOption, CGWindowID)</code></pre></section>	https://developer.apple.com/reference/coregraphics/quartz_window_services
CIColor	A							https://developer.apple.com/reference/coreimage/cicolor			<section class="prog__container"><p>The component values defining a color in a specific color space.</p><pre><code>CIColor</code></pre></section>	https://developer.apple.com/reference/coreimage/cicolor
CIColorKernel	A							https://developer.apple.com/reference/coreimage/cicolorkernel			<section class="prog__container"><p>A GPU-based image processing routine that processes only the color information in images, used to create custom Core Image filters.</p><pre><code>vec4</code></pre></section>	https://developer.apple.com/reference/coreimage/cicolorkernel
CIContext	A							https://developer.apple.com/reference/coreimage/cicontext			<section class="prog__container"><p>An evaluation context for rendering image processing results and performing image analysis.</p><pre><code>CIContext</code></pre></section>	https://developer.apple.com/reference/coreimage/cicontext
CIDetector	A							https://developer.apple.com/reference/coreimage/cidetector			<section class="prog__container"><p>An image processor that identifies notable features (such as faces and barcodes) in a still image or video.</p><pre><code>CIDetector</code></pre></section>	https://developer.apple.com/reference/coreimage/cidetector
CIFaceFeature	A							https://developer.apple.com/reference/coreimage/cifacefeature			<section class="prog__container"><p>Information about a face detected in a still or video image. </p><pre><code>CIFaceFeature</code></pre></section>	https://developer.apple.com/reference/coreimage/cifacefeature
CIFeature	A							https://developer.apple.com/reference/coreimage/cifeature			<section class="prog__container"><p>The abstract superclass for objects representing notable features detected in an image.</p><pre><code>CIFeature</code></pre></section>	https://developer.apple.com/reference/coreimage/cifeature
CIFilter	A							https://developer.apple.com/reference/coreimage/cifilter			<section class="prog__container"><p>An image processor that produces an image by manipulating one or more input images or by generating new image data.</p><pre><code>CIFilter</code></pre></section>	https://developer.apple.com/reference/coreimage/cifilter
CIFilterConstructor	A							https://developer.apple.com/reference/coreimage/cifilterconstructor			<section class="prog__container"><p>A general interface for objects that produce CIFilter instances.</p><pre><code>CIFilter</code></pre></section>	https://developer.apple.com/reference/coreimage/cifilterconstructor
CIFilterGenerator	A							https://developer.apple.com/reference/coreimage/cifiltergenerator			<section class="prog__container"><p>An object that creates and configures chains of individual image filters. </p><pre><code>CIFilterGenerator</code></pre></section>	https://developer.apple.com/reference/coreimage/cifiltergenerator
CIFilterShape	A							https://developer.apple.com/reference/coreimage/cifiltershape			<section class="prog__container"><p>A description of the bounding shape of a filter and the domain of definition for a filter operation.</p><pre><code>CIFilterShape</code></pre></section>	https://developer.apple.com/reference/coreimage/cifiltershape
CIImage	A							https://developer.apple.com/reference/coreimage/ciimage			<section class="prog__container"><p>A representation of an image to be processed or produced by Core Image filters.</p><pre><code>CIImage</code></pre></section>	https://developer.apple.com/reference/coreimage/ciimage
CIImageAccumulator	A							https://developer.apple.com/reference/coreimage/ciimageaccumulator			<section class="prog__container"><p>An object that manages feedback-based image processing for tasks such as painting or fluid simulation.</p><pre><code>CIImageAccumulator</code></pre></section>	https://developer.apple.com/reference/coreimage/ciimageaccumulator
CIImageProcessorInput	A							https://developer.apple.com/reference/coreimage/ciimageprocessorinput			<section class="prog__container"><p>A container of image data and information for use in a custom image processor. </p><pre><code>CIImageProcessorKernel</code></pre></section>	https://developer.apple.com/reference/coreimage/ciimageprocessorinput
CIImageProcessorKernel	A							https://developer.apple.com/reference/coreimage/ciimageprocessorkernel			<section class="prog__container"><p>The abstract class you extend to create custom image processors that can integrate with Core Image workflows.</p><pre><code>CIKernel</code></pre></section>	https://developer.apple.com/reference/coreimage/ciimageprocessorkernel
CIImageProcessorOutput	A							https://developer.apple.com/reference/coreimage/ciimageprocessoroutput			<section class="prog__container"><p>A container for writing image data and information produced by a custom image processor. </p><pre><code>CIImageProcessorKernel</code></pre></section>	https://developer.apple.com/reference/coreimage/ciimageprocessoroutput
CIKernel	A							https://developer.apple.com/reference/coreimage/cikernel			<section class="prog__container"><p>A GPU-based image processing routine used to create custom Core Image filters.</p><pre><code>CIColorKernel</code></pre></section>	https://developer.apple.com/reference/coreimage/cikernel
CIPlugIn	A							https://developer.apple.com/reference/coreimage/ciplugin			<section class="prog__container"><p>The mechanism for loading image units—bundles containing custom Core Image filters—in macOS. </p><pre><code>.plugin</code></pre></section>	https://developer.apple.com/reference/coreimage/ciplugin
CIPlugInRegistration	A							https://developer.apple.com/reference/coreimage/cipluginregistration			<section class="prog__container"><p>The interface for loading Core Image image units.</p><pre><code>func load(UnsafeMutableRawPointer!)</code></pre></section>	https://developer.apple.com/reference/coreimage/cipluginregistration
CIQRCodeFeature	A							https://developer.apple.com/reference/coreimage/ciqrcodefeature			<section class="prog__container"><p>Information about a Quick Response code (a kind of 2D barcode) detected in a still or video image. </p><pre><code>CIQRCodeFeature</code></pre></section>	https://developer.apple.com/reference/coreimage/ciqrcodefeature
CIRectangleFeature	A							https://developer.apple.com/reference/coreimage/cirectanglefeature			<section class="prog__container"><p>Information about a rectangular region detected in a still or video image. </p><pre><code>CIRectangleFeature</code></pre></section>	https://developer.apple.com/reference/coreimage/cirectanglefeature
CISampler	A							https://developer.apple.com/reference/coreimage/cisampler			<section class="prog__container"><p>An object that retrieves pixel samples for processing by a filter kernel.</p><pre><code>CISampler</code></pre></section>	https://developer.apple.com/reference/coreimage/cisampler
CITextFeature	A							https://developer.apple.com/reference/coreimage/citextfeature			<section class="prog__container"><p>Information about a region likely to contain upright text detected in a still or video image. </p><pre><code>CITextFeature</code></pre></section>	https://developer.apple.com/reference/coreimage/citextfeature
CIVector	A							https://developer.apple.com/reference/coreimage/civector			<section class="prog__container"><p>A container for coordinate values, direction vectors, matrices, and other non-scalar values, typically used in Core Image for filter parameters.</p><pre><code>init(values: UnsafePointer<CGFloat>, count: Int)</code></pre></section>	https://developer.apple.com/reference/coreimage/civector
CIWarpKernel	A							https://developer.apple.com/reference/coreimage/ciwarpkernel			<section class="prog__container"><p>A GPU-based image processing routine that processes only the geometry information in an image, used to create custom Core Image filters.</p><pre><code>vec2</code></pre></section>	https://developer.apple.com/reference/coreimage/ciwarpkernel
CLBeacon	A							https://developer.apple.com/reference/corelocation/clbeacon			<section class="prog__container"><p>The CLBeacon class represents a beacon that was encountered during region monitoring. You do not create instances of this class directly. The location manager object reports encountered beacons to its associated delegate object. You can use the information in a beacon object to identify which beacon was encountered.</p><pre><code>CLBeacon</code></pre></section>	https://developer.apple.com/reference/corelocation/clbeacon
CLBeaconRegion	A							https://developer.apple.com/reference/corelocation/clbeaconregion			<section class="prog__container"><p>A CLBeaconRegion object defines a type of region that is based on the device’s proximity to a Bluetooth beacon, as opposed to a geographic location. A beacon region looks for devices whose identifying information matches the information you provide. When that device comes in range, the region triggers the delivery of an appropriate notification. </p><pre><code>CLBeaconRegion</code></pre></section>	https://developer.apple.com/reference/corelocation/clbeaconregion
CLCircularRegion	A							https://developer.apple.com/reference/corelocation/clcircularregion			<section class="prog__container"><p>The CLCircularRegion class defines the location and boundaries for a circular geographic region. You can use instances of this class to define geo fences for a specific location. The crossing of a geo fence’s boundary causes the location manager to notify its delegate. </p><pre><code>CLCircularRegion</code></pre></section>	https://developer.apple.com/reference/corelocation/clcircularregion
CLFloor	A							https://developer.apple.com/reference/corelocation/clfloor			<section class="prog__container"><p>A CLFloor object specifies the floor of the building on which the user is located. In places where floor information can be determined, a CLLocation object may include a floor object along with the regular location data. You do not create instances of this class directly nor should you subclass it. </p><pre><code>CLFloor</code></pre></section>	https://developer.apple.com/reference/corelocation/clfloor
CLGeocoder	A							https://developer.apple.com/reference/corelocation/clgeocoder			<section class="prog__container"><p>The CLGeocoder class provides services for converting between a coordinate (specified as a latitude and longitude) and the user-friendly representation of that coordinate. A user-friendly representation of the coordinate typically consists of the street, city, state, and country information corresponding to the given location, but it may also contain a relevant point of interest, landmarks, or other identifying information. A geocoder object is a single-shot object that works with a network-based service to look up placemark information for its specified coordinate value.</p><pre><code>CLGeocoder</code></pre></section>	https://developer.apple.com/reference/corelocation/clgeocoder
CLHeading	A							https://developer.apple.com/reference/corelocation/clheading			<section class="prog__container"><p>A CLHeading object contains heading data generated by a CLLocationManager object. The heading data consists of computed values for true and magnetic north. It also includes the raw data for the three-dimensional vector used to compute those values. </p><pre><code>CLHeading</code></pre></section>	https://developer.apple.com/reference/corelocation/clheading
CLLocation	A							https://developer.apple.com/reference/corelocation/cllocation			<section class="prog__container"><p>A CLLocation object represents the location data generated by a CLLocationManager object. This object incorporates the geographical coordinates and altitude of the device’s location along with values indicating the accuracy of the measurements and when those measurements were made. In iOS, this class also reports information about the speed and heading in which the device is moving.</p><pre><code>CLLocation</code></pre></section>	https://developer.apple.com/reference/corelocation/cllocation
CLLocationManager	A							https://developer.apple.com/reference/corelocation/cllocationmanager			<section class="prog__container"><p>The CLLocationManager class is the central point for configuring the delivery of location- and heading-related events to your app. You use an instance of this class to establish the parameters that determine when location and heading events should be delivered and to start and stop the actual delivery of those events. You can also use a location manager object to retrieve the most recent location and heading data.</p><pre><code>CLLocationManager</code></pre></section>	https://developer.apple.com/reference/corelocation/cllocationmanager
CLLocationManagerDelegate	A							https://developer.apple.com/reference/corelocation/cllocationmanagerdelegate			<section class="prog__container"><p>The CLLocationManagerDelegate protocol defines the methods used to receive location and heading updates from a CLLocationManager object.</p><pre><code>CLLocationManagerDelegate</code></pre></section>	https://developer.apple.com/reference/corelocation/cllocationmanagerdelegate
CLPlacemark	A							https://developer.apple.com/reference/corelocation/clplacemark			<section class="prog__container"><p>Associates address information with a geographic location or region. </p><pre><code>CLPlacemark</code></pre></section>	https://developer.apple.com/reference/corelocation/clplacemark
CLRegion	A							https://developer.apple.com/reference/corelocation/clregion			<section class="prog__container"><p>The CLRegion class defines an abstract area that can be tracked. In iOS, you do not create instances of this class directly; instead, you instantiate subclasses that define specific types of regions. In macOS, you create instances of this class and use them to store the region information. After you create a region, you must register it with a CLLocationManager object. The location manager generates appropriate events whenever the user crosses the boundaries of the region. </p><pre><code>CLRegion</code></pre></section>	https://developer.apple.com/reference/corelocation/clregion
CLVisit	A							https://developer.apple.com/reference/corelocation/clvisit			<section class="prog__container"><p>A CLVisit object encapsulates information about interesting places that the user has been. Visit objects are created by the system and delivered by the CLLocationManager object to its delegate after you start the delivery of events. The visit includes the location where the visit occurred and information about the arrival and departure times as relevant. You do not create visit objects directly, nor should you subclass CLVisit. </p><pre><code>CLVisit</code></pre></section>	https://developer.apple.com/reference/corelocation/clvisit
CMAttachment	A							https://developer.apple.com/reference/coremedia/cmattachment			<section class="prog__container"><p>An API for attaching additional metadata to a sample buffer.</p><pre><code>CMAttachmentBearer</code></pre></section>	https://developer.apple.com/reference/coremedia/cmattachment
CMAudioClock	A							https://developer.apple.com/reference/coremedia/cmaudioclock			<section class="prog__container"><p>An object providing a specialized reference clock used to synchronize with audio sources.</p><pre><code>CMAudioClock</code></pre></section>	https://developer.apple.com/reference/coremedia/cmaudioclock
CMBlockBuffer	A							https://developer.apple.com/reference/coremedia/cmblockbuffer-u9i			<section class="prog__container"><p>An object used to move blocks of memory through a processing system.</p><pre><code>CMBlockBuffer</code></pre></section>	https://developer.apple.com/reference/coremedia/cmblockbuffer-u9i
CMBufferQueue	A							https://developer.apple.com/reference/coremedia/cmbufferqueue-u8p			<section class="prog__container"><p>An object implementing a queue of timed buffers.</p><pre><code>CMBufferQueues</code></pre></section>	https://developer.apple.com/reference/coremedia/cmbufferqueue-u8p
CMClock	A							https://developer.apple.com/reference/coremedia/cmclock-u5q			<section class="prog__container"><p>An object providing a reference clock used to synchronize applications and devices.</p><pre><code>The CMSync</code></pre></section>	https://developer.apple.com/reference/coremedia/cmclock-u5q
CMFormatDescription	A							https://developer.apple.com/reference/coremedia/cmformatdescription-u8g			<section class="prog__container"><p>An object providing a media format descriptor of the samples in a sample buffer.</p><pre><code>CMFormatDescriptions</code></pre></section>	https://developer.apple.com/reference/coremedia/cmformatdescription-u8g
CMMemoryPool	A							https://developer.apple.com/reference/coremedia/cmmemorypool-u89			<section class="prog__container"><p>A pool used for optimizing memory allocation when large blocks of memory must be repeatedly allocated, deallocated, and then reallocated.</p><pre><code>CMMemoryPool</code></pre></section>	https://developer.apple.com/reference/coremedia/cmmemorypool-u89
CMMetadata	A							https://developer.apple.com/reference/coremedia/cmmetadata			<section class="prog__container"><p>The APIs for working with the framework's Metadata Identifier Services and Metadata Data Type Registry.</p><pre><code>CFString</code></pre></section>	https://developer.apple.com/reference/coremedia/cmmetadata
CMSampleBuffer	A							https://developer.apple.com/reference/coremedia/cmsamplebuffer-u71			<section class="prog__container"><p>An object containing zero or more media samples of a uniform media type. </p><pre><code>CMSampleBuffers</code></pre></section>	https://developer.apple.com/reference/coremedia/cmsamplebuffer-u71
CMSimpleQueue	A							https://developer.apple.com/reference/coremedia/cmsimplequeue-u7k			<section class="prog__container"><p>An object providing a simple, lockless FIFO queue of (void *) elements.</p><pre><code>void *</code></pre></section>	https://developer.apple.com/reference/coremedia/cmsimplequeue-u7k
CMTextMarkup	A							https://developer.apple.com/reference/coremedia/cmtextmarkup			<section class="prog__container"><p>The collection of text markup-related attributes supported by Core Media.</p><pre><code>kCMTextMarkupAttribute_GenericFontFamilyName</code></pre></section>	https://developer.apple.com/reference/coremedia/cmtextmarkup
CMTime	A							https://developer.apple.com/reference/coremedia/cmtime-u58			<section class="prog__container"><p>A struct representing a time value such as a timestamp or duration.</p><pre><code>CMTime</code></pre></section>	https://developer.apple.com/reference/coremedia/cmtime-u58
CMTimebase	A							https://developer.apple.com/reference/coremedia/cmtimebase-nat			<section class="prog__container"><p>An object modeling a timeline under application control.</p><pre><code>func CMTimebaseNotificationBarrier(CMTimebase)</code></pre></section>	https://developer.apple.com/reference/coremedia/cmtimebase-nat
CMTimeRange	A							https://developer.apple.com/reference/coremedia/cmtimerange-qts			<section class="prog__container"><p>A struct representing a range of time.</p><pre><code>CMTimeRange</code></pre></section>	https://developer.apple.com/reference/coremedia/cmtimerange-qts
MIDI Services	A							https://developer.apple.com/reference/coremidi/midi_services			<section class="prog__container"><p></p><pre><code>CFRelease</code></pre></section>	https://developer.apple.com/reference/coremidi/midi_services
MIDI Setup	A							https://developer.apple.com/reference/coremidi/midi_setup			<section class="prog__container"><p>The functions described in this document let you manipulate and customize the global state of the MIDI system. These functions are usually needed only by apps that wish to allow the user some flexibility in how the MIDI system’s state is presented.</p><pre><code>func MIDIDeviceAddEntity(MIDIDeviceRef, CFString, Bool, Int, Int, UnsafeMutablePointer<MIDIEntityRef>)</code></pre></section>	https://developer.apple.com/reference/coremidi/midi_setup
MIDI Thru Connection	A							https://developer.apple.com/reference/coremidi/midi_thru_connection			<section class="prog__container"><p></p><pre><code>func MIDIThruConnectionCreate(CFString?, CFData, UnsafeMutablePointer<MIDIThruConnectionRef>)</code></pre></section>	https://developer.apple.com/reference/coremidi/midi_thru_connection
MIDINetworkConnection	A							https://developer.apple.com/reference/coremidi/midinetworkconnection			<section class="prog__container"><p>A MIDI network connection specifies a connection to a MIDI network host. To establish or break a connection, use methods from the MIDINetworkSession class.</p><pre><code>MIDINetworkSession</code></pre></section>	https://developer.apple.com/reference/coremidi/midinetworkconnection
MIDINetworkHost	A							https://developer.apple.com/reference/coremidi/midinetworkhost			<section class="prog__container"><p>A MIDI network host represents a remote MIDI host</p><pre><code>var name: String</code></pre></section>	https://developer.apple.com/reference/coremidi/midinetworkhost
MIDINetworkSession	A							https://developer.apple.com/reference/coremidi/midinetworksession			<section class="prog__container"><p>The singleton MIDI network session represents one Core MIDI source-destination pair, known as a MIDI entity. The session can have any number of MIDI network connections. MIDI output is broadcast to all the session’s connections. MIDI input from all connections is merged.</p><pre><code>class func `default`()</code></pre></section>	https://developer.apple.com/reference/coremidi/midinetworksession
CMAccelerometerData	A							https://developer.apple.com/reference/coremotion/cmaccelerometerdata			<section class="prog__container"><p>An instance of the CMAccelerometerData class represents an accelerometer event. It is a measurement of acceleration along the three spatial axes at a moment of time.</p><pre><code>CMAccelerometerData</code></pre></section>	https://developer.apple.com/reference/coremotion/cmaccelerometerdata
CMAltimeter	A							https://developer.apple.com/reference/coremotion/cmaltimeter			<section class="prog__container"><p>Use a CMAltimeter object to initiate the delivery of altitude-related data to your app. Altitude events reflect the change in the current altitude, not the absolute altitude. So a hiking app might use this object to track the user’s elevation gain over the course of a hike. Because altitude events may not be available on all devices, always call the isRelativeAltitudeAvailable() method before using this service.</p><pre><code>CMAltimeter</code></pre></section>	https://developer.apple.com/reference/coremotion/cmaltimeter
CMAltitudeData	A							https://developer.apple.com/reference/coremotion/cmaltitudedata			<section class="prog__container"><p>A CMAltitudeData object encapsulates information about relative changes in altitude. You do not create instances of this class directly. When you want to receive altimeter changes, create an instance of the CMAltimeter class and use that object to query for events or to start the delivery of events. The altimeter object creates new instances of this class at appropriate times and delivers them to the handler you specify.</p><pre><code>CMAltitudeData</code></pre></section>	https://developer.apple.com/reference/coremotion/cmaltitudedata
CMAttitude	A							https://developer.apple.com/reference/coremotion/cmattitude			<section class="prog__container"><p>An instance of the CMAttitude class represents a measurement of the device’s attitude at a point in time. "Attitude” refers to the orientation of a body relative to a given frame of reference.</p><pre><code>CMAttitude</code></pre></section>	https://developer.apple.com/reference/coremotion/cmattitude
CMDeviceMotion	A							https://developer.apple.com/reference/coremotion/cmdevicemotion			<section class="prog__container"><p>An instance of CMDeviceMotion encapsulates measurements of the attitude, rotation rate, and acceleration of a device.</p><pre><code>CMDeviceMotion</code></pre></section>	https://developer.apple.com/reference/coremotion/cmdevicemotion
CMGyroData	A							https://developer.apple.com/reference/coremotion/cmgyrodata			<section class="prog__container"><p>An instance of the CMGyroData class contains a single measurement of the device’s rotation rate.</p><pre><code>CMGyroData</code></pre></section>	https://developer.apple.com/reference/coremotion/cmgyrodata
CMLogItem	A							https://developer.apple.com/reference/coremotion/cmlogitem			<section class="prog__container"><p>The CMLogItem class is a base class for Core Motion classes that handle specific types of motion events. Objects of this class represent a piece of time-tagged data that can be logged to a file.</p><pre><code>CMLogItem</code></pre></section>	https://developer.apple.com/reference/coremotion/cmlogitem
CMMagnetometerData	A							https://developer.apple.com/reference/coremotion/cmmagnetometerdata			<section class="prog__container"><p>Instances of the CMMagnetometerData class encapsulated measurements of the magnetic field made by the device’s magnetometer.</p><pre><code>CMMagnetometerData</code></pre></section>	https://developer.apple.com/reference/coremotion/cmmagnetometerdata
CMMotionActivity	A							https://developer.apple.com/reference/coremotion/cmmotionactivity			<section class="prog__container"><p>The CMMotionActivity class contains the data for a single motion update event. On devices that support motion, you can use a CMMotionActivityManager object to request updates when the current type of motion changes. When a change occurs, the update information is packaged into a CMMotionActivity object and sent to your app. </p><pre><code>CMMotionActivity</code></pre></section>	https://developer.apple.com/reference/coremotion/cmmotionactivity
CMMotionActivityManager	A							https://developer.apple.com/reference/coremotion/cmmotionactivitymanager			<section class="prog__container"><p>The CMMotionActivityManager class provides access to the motion data stored by a device. Motion data reflects whether the user is walking, running, in a vehicle, or stationary for periods of time. A navigation app might look for changes in the current type of motion and offer different directions for each. Using this class, you can ask for notifications when the current type of motion changes or you can gather past motion change data.</p><pre><code>CMMotionActivityManager</code></pre></section>	https://developer.apple.com/reference/coremotion/cmmotionactivitymanager
CMMotionManager	A							https://developer.apple.com/reference/coremotion/cmmotionmanager			<section class="prog__container"><p>A CMMotionManager object is the gateway to the motion services provided by iOS. These services provide an app with accelerometer data, rotation-rate data, magnetometer data, and other device-motion data such as attitude. These types of data originate with a device’s accelerometers and (on some models) its magnetometer and gyroscope. </p><pre><code>CMMotionManager</code></pre></section>	https://developer.apple.com/reference/coremotion/cmmotionmanager
CMPedometer	A							https://developer.apple.com/reference/coremotion/cmpedometer			<section class="prog__container"><p>Use a CMPedometer object to fetch pedestrian-related data. You use a pedometer object to retrieve step counts and other information about the distance traveled and the number of floors ascended or descended. The pedometer object manages a cache of historic data that you can query or you can ask for live updates as the data is processed.</p><pre><code>CMPedometer</code></pre></section>	https://developer.apple.com/reference/coremotion/cmpedometer
CMPedometerData	A							https://developer.apple.com/reference/coremotion/cmpedometerdata			<section class="prog__container"><p>A CMPedometerData object encapsulates information about the distance traveled by a user on foot. You do not create instances of this class yourself. Instead, you use a CMPedometer object to request pedometer data from the system. The data for each request is packaged into an instance of this class and delivered to the handlers you registered with the pedometer object.</p><pre><code>CMPedometerData</code></pre></section>	https://developer.apple.com/reference/coremotion/cmpedometerdata
CMRecordedAccelerometerData	A							https://developer.apple.com/reference/coremotion/cmrecordedaccelerometerdata			<section class="prog__container"><p>A CMRecordedAccelerometerData object contains a single piece of accelerometer data that was recorded by the device. You do not create instances of this class directly. Instead, you use a CMSensorRecorder object to retrieve already recorded data from the system. </p><pre><code>CMRecordedAccelerometerData</code></pre></section>	https://developer.apple.com/reference/coremotion/cmrecordedaccelerometerdata
CMSensorDataList	A							https://developer.apple.com/reference/coremotion/cmsensordatalist			<section class="prog__container"><p>A CMSensorDataList object lets you enumerate over the CMRecordedAccelerometerData objects recorded by the system. You do not create instances of this class directly. Instead, you receive one as the result of a query for accelerometer data from a CMSensorRecorder object.</p><pre><code>CMSensorDataList</code></pre></section>	https://developer.apple.com/reference/coremotion/cmsensordatalist
CMSensorRecorder	A							https://developer.apple.com/reference/coremotion/cmsensorrecorder			<section class="prog__container"><p>A CMSensorRecorder object controls the gathering and retrieval of accelerometer data from a device. Use a sensor recorder to initiate the gathering of accelerometer data. Later, use the sensor recorder to fetch the recorded data so that you can analyze it. You might use the recorded data to assess specific types of motion and incorporate the results into your app.</p><pre><code>CMSensorRecorder</code></pre></section>	https://developer.apple.com/reference/coremotion/cmsensorrecorder
CFFTPStream	A							https://developer.apple.com/reference/coreservices/cfftpstream			<section class="prog__container"><p>This document describes the CFStream functions for working with FTP connections. It is part of the CFFTP API.</p><pre><code>func CFReadStreamCreateWithFTPURL(CFAllocator?, CFURL)</code></pre></section>	https://developer.apple.com/reference/coreservices/cfftpstream
CFHost	A							https://developer.apple.com/reference/coreservices/cfhost			<section class="prog__container"><p>The CFHost API allows you to create instances of the CFHost object that you can use to acquire host information, including names, addresses, and reachability information.</p><pre><code>CFHostCreateWithAddress</code></pre></section>	https://developer.apple.com/reference/coreservices/cfhost
CFHTTPAuthentication	A							https://developer.apple.com/reference/coreservices/cfhttpauthentication			<section class="prog__container"><p>The CFHTTPAuthentication opaque type provides an abstraction of HTTP authentication information.</p><pre><code>func CFHTTPAuthenticationCreateFromResponse(CFAllocator?, CFHTTPMessage)</code></pre></section>	https://developer.apple.com/reference/coreservices/cfhttpauthentication
CFHTTPMessage	A							https://developer.apple.com/reference/coreservices/cfhttpmessage			<section class="prog__container"><p>The CFHTTPMessage opaque type represents an HTTP message.</p><pre><code>CFHTTPMessage</code></pre></section>	https://developer.apple.com/reference/coreservices/cfhttpmessage
CFNetDiagnostics	A							https://developer.apple.com/reference/coreservices/cfnetdiagnostics			<section class="prog__container"><p>The CFNetDiagnostics opaque type allows you to diagnose network-related problems.</p><pre><code>func CFNetDiagnosticCreateWithStreams(CFAllocator?, CFReadStream?, CFWriteStream?)</code></pre></section>	https://developer.apple.com/reference/coreservices/cfnetdiagnostics
CFNetServices	A							https://developer.apple.com/reference/coreservices/cfnetservices			<section class="prog__container"><p>The CFNetServices API is part of Bonjour, Apple’s implementation of zero-configuration networking (ZEROCONF). The CFNetServices API allows you to register a network service, such as a printer or file server, so that it can be found by name or browsed for by service type and domain. Applications can use the CFNetServices API to discover the services that are available on the network and to find all access information — such as name, IP address, and port number — needed to use each service.</p><pre><code>func CFNetServiceCreate(CFAllocator?, CFString, CFString, CFString, Int32)</code></pre></section>	https://developer.apple.com/reference/coreservices/cfnetservices
DCSDictionary	A							https://developer.apple.com/reference/coreservices/dcsdictionary			<section class="prog__container"><p>An opaque object that represents a dictionary file.</p></section>	https://developer.apple.com/reference/coreservices/dcsdictionary
Launch Services	A							https://developer.apple.com/reference/coreservices/launch_services			<section class="prog__container"><p>This section describes the functions defined in the Launch Services API.</p><pre><code>func LSCopyDefaultApplicationURLForURL(CFURL, LSRolesMask, UnsafeMutablePointer<Unmanaged<CFError>?>?)</code></pre></section>	https://developer.apple.com/reference/coreservices/launch_services
CSCustomAttributeKey	A							https://developer.apple.com/reference/corespotlight/cscustomattributekey			<section class="prog__container"><p>The CSCustomAttributeKey class defines a key that you can associate with a custom attribute for a searchable item. Item attributes provide metadata about the item that can be indexed and displayed to users in search results. Although the Core Spotlight framework provides several predefined attributes, such as title and description, you can create a CSCustomAttributeKey object to specify a custom attribute that makes sense in your domain.</p><pre><code>CSCustomAttributeKey</code></pre></section>	https://developer.apple.com/reference/corespotlight/cscustomattributekey
CSIndexExtensionRequestHandler	A							https://developer.apple.com/reference/corespotlight/csindexextensionrequesthandler			<section class="prog__container"><p>The CSIndexExtensionRequestHandler class defines an interface you use to implement an index-maintenance app extension. An index-maintenance app extension facilitates communication between the on-device index and your app, even when your app isn’t running. For more information about using an app extension, see Using Advanced Features in App Search Programming Guide.</p><pre><code>NSObject</code></pre></section>	https://developer.apple.com/reference/corespotlight/csindexextensionrequesthandler
CSLocalizedString	A							https://developer.apple.com/reference/corespotlight/cslocalizedstring			<section class="prog__container"><p>The CSLocalizedString class helps you localize text in searchable items. You can use a CSLocalizedString object in place of an NSString object to display localized text in search results related to your app.</p><pre><code>CSLocalizedString</code></pre></section>	https://developer.apple.com/reference/corespotlight/cslocalizedstring
CSPerson	A							https://developer.apple.com/reference/corespotlight/csperson			<section class="prog__container"><p>A CSPerson object represents a person in the context of search results. You can create a CSPerson object when you have a display name and a contact handle of some kind, such as an email address or phone number. If you create a CSPerson object to represent a specific contact, you can use the value of the contact’s identifier property for the person object’s contactIdentifier property. Using the same value lets you avoid using names or phone numbers to look up the contact that’s associated with a person.</p><pre><code>CSPerson</code></pre></section>	https://developer.apple.com/reference/corespotlight/csperson
CSSearchableIndex	A							https://developer.apple.com/reference/corespotlight/cssearchableindex			<section class="prog__container"><p>The CSSearchableIndex class defines an object that represents the on-device index. In your app, you can designate user activities (that is, activities that can be represented by NSUserActivity) and app content as eligible for search. Using CSSearchableItem and CSSearchableItemAttributeSet APIs, you identify and provide information about activities and other items and then use CSSearchableIndex methods to manage the indexing of the items.</p><pre><code>CSSearchableIndex</code></pre></section>	https://developer.apple.com/reference/corespotlight/cssearchableindex
CSSearchableIndexDelegate	A							https://developer.apple.com/reference/corespotlight/cssearchableindexdelegate			<section class="prog__container"><p>The CSSearchableIndexDelegate protocol defines methods that a delegate object or an app extension can use to handle communication from the on-device index. Apps that are long-running or that perform batch updates to the index should implement the required methods of this protocol in either a delegate object or an app extension.</p><pre><code>CSSearchableIndexDelegate</code></pre></section>	https://developer.apple.com/reference/corespotlight/cssearchableindexdelegate
CSSearchableItem	A							https://developer.apple.com/reference/corespotlight/cssearchableitem			<section class="prog__container"><p>The CSSearchableItem class defines an object that represents an item that can be indexed and made available to users when they search on their devices. </p><pre><code>CSSearchableItem</code></pre></section>	https://developer.apple.com/reference/corespotlight/cssearchableitem
CSSearchableItemAttributeSet	A							https://developer.apple.com/reference/corespotlight/cssearchableitemattributeset			<section class="prog__container"><p>The CSSearchableItemAttributeSet class defines an object that encapsulates the set of properties you want to display for a searchable item (that is, an item represented by a CSSearchableItem object). </p><pre><code>CSSearchableItemAttributeSet</code></pre></section>	https://developer.apple.com/reference/corespotlight/cssearchableitemattributeset
CSSearchQuery	A							https://developer.apple.com/reference/corespotlight/cssearchquery			<section class="prog__container"><p>A search query object manages the criteria to apply when searching app content that you have previously indexed by using the Core Spotlight APIs. </p><pre><code>CSSearchQuery</code></pre></section>	https://developer.apple.com/reference/corespotlight/cssearchquery
CTCall	A							https://developer.apple.com/reference/coretelephony/ctcall			<section class="prog__container"><p>Use a cellular call’s CTCall object to obtain an identifier for the call and to determine the call’s state.</p><pre><code>CTCall</code></pre></section>	https://developer.apple.com/reference/coretelephony/ctcall
CTCallCenter	A							https://developer.apple.com/reference/coretelephony/ctcallcenter			<section class="prog__container"><p>Use the CTCallCenter class to obtain a list of current cellular calls, and to respond to state changes for calls such as from a dialing state to a connected state. Such state changes are known as cellular call events.</p><pre><code>CTCallCenter</code></pre></section>	https://developer.apple.com/reference/coretelephony/ctcallcenter
CTCarrier	A							https://developer.apple.com/reference/coretelephony/ctcarrier			<section class="prog__container"><p>Use the CTCarrier class to obtain information about the user’s home cellular service provider, such as its unique identifier and whether or not it allows VoIP (Voice over Internet Protocol) calls on its network.</p><pre><code>CTCarrier</code></pre></section>	https://developer.apple.com/reference/coretelephony/ctcarrier
CTSubscriber	A							https://developer.apple.com/reference/coretelephony/ctsubscriber			<section class="prog__container"><p>The CTSubscriber object provides cellular network subscriber information.</p><pre><code>CTSubscriber</code></pre></section>	https://developer.apple.com/reference/coretelephony/ctsubscriber
CTTelephonyNetworkInfo	A							https://developer.apple.com/reference/coretelephony/cttelephonynetworkinfo			<section class="prog__container"><p>Use the CTTelephonyNetworkInfo class to respond to changes in the user’s cellular service provider. This occurs, for example, if a user swaps the device’s SIM card with one from another provider, while your application is running. This class also gives you access to the CTCarrier object, which contains information about the user’s home cellular service provider.</p><pre><code>CTTelephonyNetworkInfo</code></pre></section>	https://developer.apple.com/reference/coretelephony/cttelephonynetworkinfo
CTFont	A							https://developer.apple.com/reference/coretext/ctfont			<section class="prog__container"><p>A reference to a Core Text font object.</p></section>	https://developer.apple.com/reference/coretext/ctfont
CTFont	A							https://developer.apple.com/reference/coretext/ctfont-q6r			<section class="prog__container"><p>The CTFont opaque type represents a Core Text font object. Font objects represent fonts to an application, providing access to characteristics of the font, such as point size, transform matrix, and other attributes. Fonts provide assistance in laying out glyphs relative to one another and are used to establish the current font when drawing in a graphics context.</p><pre><code>func CTFontCreateWithName(CFString?, CGFloat, UnsafePointer<CGAffineTransform>?)</code></pre></section>	https://developer.apple.com/reference/coretext/ctfont-q6r
CTFontCollection	A							https://developer.apple.com/reference/coretext/ctfontcollection			<section class="prog__container"><p>A reference to a font collection.</p></section>	https://developer.apple.com/reference/coretext/ctfontcollection
CTFontCollection	A							https://developer.apple.com/reference/coretext/ctfontcollection-2ee			<section class="prog__container"><p>The CTFontCollection opaque type represents a font collection, that is, a group of font descriptors taken together as a single object.</p><pre><code>func CTFontCollectionCreateFromAvailableFonts(CFDictionary?)</code></pre></section>	https://developer.apple.com/reference/coretext/ctfontcollection-2ee
CTFontDescriptor	A							https://developer.apple.com/reference/coretext/ctfontdescriptor			<section class="prog__container"><p>A reference to a CTFontDescriptor object.</p></section>	https://developer.apple.com/reference/coretext/ctfontdescriptor
CTFontDescriptor	A							https://developer.apple.com/reference/coretext/ctfontdescriptor-ni4			<section class="prog__container"><p>The CTFontDescriptor opaque type represents a font descriptor, that is, a dictionary of attributes (such as name, point size, and variation) that can completely specify a font.</p><pre><code>func CTFontDescriptorCreateWithNameAndSize(CFString, CGFloat)</code></pre></section>	https://developer.apple.com/reference/coretext/ctfontdescriptor-ni4
CTFrame	A							https://developer.apple.com/reference/coretext/ctframe			<section class="prog__container"><p>A reference to a Core text frame object.</p></section>	https://developer.apple.com/reference/coretext/ctframe
CTFrame	A							https://developer.apple.com/reference/coretext/ctframe-cn8			<section class="prog__container"><p>The CTFrame opaque type represents a frame containing multiple lines of text. The frame object is the output resulting from the text-framing process performed by a framesetter object.</p><pre><code>func CTFrameGetStringRange(CTFrame)</code></pre></section>	https://developer.apple.com/reference/coretext/ctframe-cn8
CTFramesetter	A							https://developer.apple.com/reference/coretext/ctframesetter			<section class="prog__container"><p>A reference to a Core Foundation framesetter object.</p></section>	https://developer.apple.com/reference/coretext/ctframesetter
CTFramesetter	A							https://developer.apple.com/reference/coretext/ctframesetter-2eg			<section class="prog__container"><p>The CTFramesetter opaque type is used to generate text frames. That is, CTFramesetter is an object factory for CTFrame objects.</p><pre><code>func CTFramesetterCreateWithAttributedString(CFAttributedString)</code></pre></section>	https://developer.apple.com/reference/coretext/ctframesetter-2eg
CTGlyphInfo	A							https://developer.apple.com/reference/coretext/ctglyphinfo			<section class="prog__container"><p>A reference to a glyph info object.</p></section>	https://developer.apple.com/reference/coretext/ctglyphinfo
CTGlyphInfo	A							https://developer.apple.com/reference/coretext/ctglyphinfo-61k			<section class="prog__container"><p>The CTGlyphInfo opaque type enables you to override a font's specified mapping from Unicode to the glyph ID.</p><pre><code>func CTGlyphInfoGetTypeID()</code></pre></section>	https://developer.apple.com/reference/coretext/ctglyphinfo-61k
CTLine	A							https://developer.apple.com/reference/coretext/ctline			<section class="prog__container"><p>A reference to a line object.</p></section>	https://developer.apple.com/reference/coretext/ctline
CTLine	A							https://developer.apple.com/reference/coretext/ctline-61l			<section class="prog__container"><p>The CTLine opaque type represents a line of text.</p><pre><code>func CTLineCreateWithAttributedString(CFAttributedString)</code></pre></section>	https://developer.apple.com/reference/coretext/ctline-61l
CTMutableFontCollection	A							https://developer.apple.com/reference/coretext/ctmutablefontcollection			<section class="prog__container"><p>A reference to a mutable font collection.</p></section>	https://developer.apple.com/reference/coretext/ctmutablefontcollection
CTParagraphStyle	A							https://developer.apple.com/reference/coretext/ctparagraphstyle			<section class="prog__container"><p></p></section>	https://developer.apple.com/reference/coretext/ctparagraphstyle
CTParagraphStyle	A							https://developer.apple.com/reference/coretext/ctparagraphstyle-2ej			<section class="prog__container"><p>The CTParagraphStyle opaque type represents paragraph or ruler attributes in an attributed string.</p><pre><code>func CTParagraphStyleCreate(UnsafePointer<CTParagraphStyleSetting>?, Int)</code></pre></section>	https://developer.apple.com/reference/coretext/ctparagraphstyle-2ej
CTRun	A							https://developer.apple.com/reference/coretext/ctrun			<section class="prog__container"><p>A reference to a run object.</p></section>	https://developer.apple.com/reference/coretext/ctrun
CTRun	A							https://developer.apple.com/reference/coretext/ctrun-61n			<section class="prog__container"><p>The CTRun opaque type represents a glyph run, which is a set of consecutive glyphs sharing the same attributes and direction.</p><pre><code>func CTRunGetGlyphCount(CTRun)</code></pre></section>	https://developer.apple.com/reference/coretext/ctrun-61n
CTRunDelegate	A							https://developer.apple.com/reference/coretext/ctrundelegate-q5q			<section class="prog__container"><p>The CTRunDelegate opaque type represents a run delegate, which is assigned to a run (attribute range) to control typographic traits such glyph ascent, glyph descent, and glyph width.</p><pre><code>CTRunDelegate</code></pre></section>	https://developer.apple.com/reference/coretext/ctrundelegate-q5q
CTTextTab	A							https://developer.apple.com/reference/coretext/cttexttab			<section class="prog__container"><p>A reference to a text tab object.</p></section>	https://developer.apple.com/reference/coretext/cttexttab
CTTextTab	A							https://developer.apple.com/reference/coretext/cttexttab-61o			<section class="prog__container"><p>The CTTextTab opaque type represents a tab in a paragraph style, storing an alignment type and location. </p><pre><code>func CTTextTabCreate(CTTextAlignment, Double, CFDictionary?)</code></pre></section>	https://developer.apple.com/reference/coretext/cttexttab-61o
CTTypesetter	A							https://developer.apple.com/reference/coretext/cttypesetter			<section class="prog__container"><p>A reference to a typesetter object.</p></section>	https://developer.apple.com/reference/coretext/cttypesetter
CTTypesetter	A							https://developer.apple.com/reference/coretext/cttypesetter-61p			<section class="prog__container"><p>The CTTypesetter opaque type represents a typesetter, which performs line layout.</p><pre><code>func CTTypesetterCreateWithAttributedString(CFAttributedString)</code></pre></section>	https://developer.apple.com/reference/coretext/cttypesetter-61p
Core Video Result Codes	A							https://developer.apple.com/reference/corevideo/1572713-core_video_result_codes			<section class="prog__container"><p>Describes the result codes generated by Core Video operations.</p><pre><code>var kCVReturnAllocationFailed: CVReturn</code></pre></section>	https://developer.apple.com/reference/corevideo/1572713-core_video_result_codes
CVBuffer	A							https://developer.apple.com/reference/corevideo/cvbuffer-nfm			<section class="prog__container"><p>Serves as an abstract base class that defines how to interact with buffers of data.</p><pre><code>func CVBufferGetAttachment(CVBuffer, CFString, UnsafeMutablePointer<CVAttachmentMode>?)</code></pre></section>	https://developer.apple.com/reference/corevideo/cvbuffer-nfm
CVDisplayLink	A							https://developer.apple.com/reference/corevideo/cvdisplaylink-k0k			<section class="prog__container"><p>An separate high-priority thread to notify your application when a given display will need each frame.</p><pre><code>func CVDisplayLinkCreateWithCGDisplay(CGDirectDisplayID, UnsafeMutablePointer<CVDisplayLink?>)</code></pre></section>	https://developer.apple.com/reference/corevideo/cvdisplaylink-k0k
CVImageBuffer	A							https://developer.apple.com/reference/corevideo/cvimagebuffer-q40			<section class="prog__container"><p>An interface for managing different types of image data.</p><pre><code>func CVImageBufferGetCleanRect(CVImageBuffer)</code></pre></section>	https://developer.apple.com/reference/corevideo/cvimagebuffer-q40
CVMetalTexture	A							https://developer.apple.com/reference/corevideo/cvmetaltexture-q3g			<section class="prog__container"><p>A texture-based image buffer that supplies source image data for use with the Metal framework.</p><pre><code>func CVMetalTextureGetTexture(CVMetalTexture)</code></pre></section>	https://developer.apple.com/reference/corevideo/cvmetaltexture-q3g
CVMetalTextureCache	A							https://developer.apple.com/reference/corevideo/cvmetaltexturecache-q3j			<section class="prog__container"><p>A cache used to create and manage CVMetalTexture objects.</p><pre><code>CVMetalTexture</code></pre></section>	https://developer.apple.com/reference/corevideo/cvmetaltexturecache-q3j
CVOpenGLBuffer	A							https://developer.apple.com/reference/corevideo/cvopenglbuffer-77s			<section class="prog__container"><p>An object deriving from a generic buffer that can be used as an ImageBuffer or PixelBuffer.</p><pre><code>func CVOpenGLBufferCreate(CFAllocator?, Int, Int, CFDictionary?, UnsafeMutablePointer<CVOpenGLBuffer?>)</code></pre></section>	https://developer.apple.com/reference/corevideo/cvopenglbuffer-77s
CVOpenGLBufferPool	A							https://developer.apple.com/reference/corevideo/cvopenglbufferpool-77j			<section class="prog__container"><p>A utility object for managing a set of recyclable CVOpenGLBuffer objects.</p><pre><code>func CVOpenGLBufferPoolCreate(CFAllocator?, CFDictionary?, CFDictionary?, UnsafeMutablePointer<CVOpenGLBufferPool?>)</code></pre></section>	https://developer.apple.com/reference/corevideo/cvopenglbufferpool-77j
CVOpenGLESTexture	A							https://developer.apple.com/reference/corevideo/cvopenglestexture-q2s			<section class="prog__container"><p>A texture-based image buffer that supplies source image data to OpenGL ES.</p><pre><code>CVOpenGLESTextureRef</code></pre></section>	https://developer.apple.com/reference/corevideo/cvopenglestexture-q2s
CVOpenGLESTextureCache	A							https://developer.apple.com/reference/corevideo/cvopenglestexturecache-q2r			<section class="prog__container"><p>An cache used to create and manage CVOpenGLESTexture objects. </p><pre><code>CVOpenGLESTexture</code></pre></section>	https://developer.apple.com/reference/corevideo/cvopenglestexturecache-q2r
CVOpenGLTexture	A							https://developer.apple.com/reference/corevideo/cvopengltexture-782			<section class="prog__container"><p>A texture-based image buffer that supplies source image data to OpenGL.</p><pre><code>func CVOpenGLTextureGetName(CVOpenGLTexture)</code></pre></section>	https://developer.apple.com/reference/corevideo/cvopengltexture-782
CVOpenGLTextureCache	A							https://developer.apple.com/reference/corevideo/cvopengltexturecache-780			<section class="prog__container"><p>An cache used to create and manage CVOpenGLTexture objects.</p><pre><code>func CVOpenGLTextureCacheCreate(CFAllocator?, CFDictionary?, CGLContextObj, CGLPixelFormatObj, CFDictionary?, UnsafeMutablePointer<CVOpenGLTextureCache?>)</code></pre></section>	https://developer.apple.com/reference/corevideo/cvopengltexturecache-780
CVPixelBuffer	A							https://developer.apple.com/reference/corevideo/cvpixelbuffer-q2e			<section class="prog__container"><p>An image buffer that holds pixels in main memory.</p><pre><code>func CVPixelBufferCreate(CFAllocator?, Int, Int, OSType, CFDictionary?, UnsafeMutablePointer<CVPixelBuffer?>)</code></pre></section>	https://developer.apple.com/reference/corevideo/cvpixelbuffer-q2e
CVPixelBufferPool	A							https://developer.apple.com/reference/corevideo/cvpixelbufferpool-77o			<section class="prog__container"><p>A utility object for managing a recyclable set of CVPixelBuffer objects.</p><pre><code>func CVPixelBufferPoolCreate(CFAllocator?, CFDictionary?, CFDictionary?, UnsafeMutablePointer<CVPixelBufferPool?>)</code></pre></section>	https://developer.apple.com/reference/corevideo/cvpixelbufferpool-77o
CVPixelFormatDescription	A							https://developer.apple.com/reference/corevideo/cvpixelformatdescription			<section class="prog__container"><p>A format description API that defines functions and types for defining custom pixel formats.</p><pre><code>func CVPixelFormatDescriptionCreateWithPixelFormatType(CFAllocator?, OSType)</code></pre></section>	https://developer.apple.com/reference/corevideo/cvpixelformatdescription
CVTime	A							https://developer.apple.com/reference/corevideo/cvtime-q1e			<section class="prog__container"><p>A structure used for storing Core Video time values.</p><pre><code>CVTime</code></pre></section>	https://developer.apple.com/reference/corevideo/cvtime-q1e
CoreWLANConstants.h	A							https://developer.apple.com/reference/corewlan/corewlanconstants.h			<section class="prog__container"><p></p></section>	https://developer.apple.com/reference/corewlan/corewlanconstants.h
CoreWLANTypes.h	A							https://developer.apple.com/reference/corewlan/corewlantypes.h			<section class="prog__container"><p></p><pre><code>CWChannelBand</code></pre></section>	https://developer.apple.com/reference/corewlan/corewlantypes.h
CoreWLANUtil.h	A							https://developer.apple.com/reference/corewlan/corewlanutil.h			<section class="prog__container"><p></p><pre><code>func CWKeychainCopyEAPIdentityList(UnsafeMutablePointer<Unmanaged<CFArray>?>?)</code></pre></section>	https://developer.apple.com/reference/corewlan/corewlanutil.h
CWChannel	A							https://developer.apple.com/reference/corewlan/cwchannel			<section class="prog__container"><p>Encapsulates an IEEE 802.11 channel.</p><pre><code>func isEqual(to: CWChannel)</code></pre></section>	https://developer.apple.com/reference/corewlan/cwchannel
CWCipherKeyFlags	A							https://developer.apple.com/reference/corewlan/cwcipherkeyflags			<section class="prog__container"><p></p><pre><code>init(rawValue: UInt)</code></pre></section>	https://developer.apple.com/reference/corewlan/cwcipherkeyflags
CWConfiguration	A							https://developer.apple.com/reference/corewlan/cwconfiguration			<section class="prog__container"><p>Encapsulates an immutable configuration for an AirPort WLAN interface.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/corewlan/cwconfiguration
CWEventDelegate	A							https://developer.apple.com/reference/corewlan/cweventdelegate			<section class="prog__container"><p>The interface a Wi-Fi client object uses to notify its delegate about Wi-Fi events. </p><pre><code>CWEventDelegate</code></pre></section>	https://developer.apple.com/reference/corewlan/cweventdelegate
CWInterface	A							https://developer.apple.com/reference/corewlan/cwinterface			<section class="prog__container"><p>Encapsulates an IEEE 802.11 interface.</p><pre><code>CWWiFiClient</code></pre></section>	https://developer.apple.com/reference/corewlan/cwinterface
CWMutableConfiguration	A							https://developer.apple.com/reference/corewlan/cwmutableconfiguration			<section class="prog__container"><p>Encapsulates a mutable configuration for an AirPort WLAN interface.</p><pre><code>var networkProfiles: NSOrderedSet</code></pre></section>	https://developer.apple.com/reference/corewlan/cwmutableconfiguration
CWMutableNetworkProfile	A							https://developer.apple.com/reference/corewlan/cwmutablenetworkprofile			<section class="prog__container"><p>Encapsulates a mutable network profile entry.</p><pre><code>var security: CWSecurity</code></pre></section>	https://developer.apple.com/reference/corewlan/cwmutablenetworkprofile
CWNetwork	A							https://developer.apple.com/reference/corewlan/cwnetwork			<section class="prog__container"><p>Encapsulates an IEEE 802.11 network, providing read-only accessors to various properties of the network.</p><pre><code>func supportsSecurity(CWSecurity)</code></pre></section>	https://developer.apple.com/reference/corewlan/cwnetwork
CWNetworkProfile	A							https://developer.apple.com/reference/corewlan/cwnetworkprofile			<section class="prog__container"><p>Encapsulates an immutable network profile entry.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/corewlan/cwnetworkprofile
CWWiFiClient	A							https://developer.apple.com/reference/corewlan/cwwificlient			<section class="prog__container"><p>A wrapper around the entire Wi-Fi subsystem that you use to access interfaces and set up event notifications.</p><pre><code>shared()</code></pre></section>	https://developer.apple.com/reference/corewlan/cwwificlient
CryptoTokenKit Constants	A							https://developer.apple.com/reference/cryptotokenkit/cryptotokenkit_constants			<section class="prog__container"><p>This document describes the constants found in the CryptoTokenKit framework.</p><pre><code>TKSmartCardProtocol</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/cryptotokenkit_constants
TKBERTLVRecord	A							https://developer.apple.com/reference/cryptotokenkit/tkbertlvrecord			<section class="prog__container"><p>The TKBERTLVRecord class is a concrete subclass of TKTLVRecord that parses BER-encoded data and produces DER-encoded data for TLV records.</p><pre><code>TKBERTLVRecord</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tkbertlvrecord
TKCompactTLVRecord	A							https://developer.apple.com/reference/cryptotokenkit/tkcompacttlvrecord			<section class="prog__container"><p>The TKCompactTLVRecord class is a concrete subclass of TKTLVRecord that implements encoding using Compact-TLV encoding according to ISO 7816-4.</p><pre><code>TKCompactTLVRecord</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tkcompacttlvrecord
TKSimpleTLVRecord	A							https://developer.apple.com/reference/cryptotokenkit/tksimpletlvrecord			<section class="prog__container"><p>The TKSimpleTLVRecord class is a concrete subclass of TKTLVRecord that implements encoding using Simple-TLV encoding according to ISO 7816-4.</p><pre><code>TKSimpleTLVRecord</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tksimpletlvrecord
TKSmartCard	A							https://developer.apple.com/reference/cryptotokenkit/tksmartcard			<section class="prog__container"><p>A TKSmartCard object represents a Smart Card. The TKSmartCard class provides an interface for managing sessions with a Smart Card, transmitting requests, and facilitating user interaction.</p><pre><code>TKSmartCard</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tksmartcard
TKSmartCardATR	A							https://developer.apple.com/reference/cryptotokenkit/tksmartcardatr			<section class="prog__container"><p>A TKSmartCardATR object represents a parsed ATR (Answer To Reset) message from a Smart Card. The TKSmartCardATR class declares a programmatic interface to parsing an ATR from an NSData object or byte stream, and accessing individual parts.</p><pre><code>TKSmartCardATR</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tksmartcardatr
TKSmartCardATR.InterfaceGroup	A							https://developer.apple.com/reference/cryptotokenkit/tksmartcardatr.interfacegroup			<section class="prog__container"><p>A TKSmartCardATRInterfaceGroup object represents a single interface-bytes group for a Smart Card ATR (Answer to Reset). The TKSmartCardATRInterfaceGroup class declares a programmatic interface for accessing the protocol and the interface bytes of an ATR.</p><pre><code>TKSmartCardATRInterfaceGroup</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tksmartcardatr.interfacegroup
TKSmartCardPINFormat	A							https://developer.apple.com/reference/cryptotokenkit/tksmartcardpinformat			<section class="prog__container"><p>The TKSmartCardPINFormat class encapsulates the formatting properties for a PIN, including the allowed characters, the character encoding, the minimum and maximum length, and the block length, offset, and justification.</p><pre><code>TKSmartCardPINFormat</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tksmartcardpinformat
TKSmartCardSlot	A							https://developer.apple.com/reference/cryptotokenkit/tksmartcardslot			<section class="prog__container"><p>A TKSmartCardSlot object represents a single Smart Card reader slot. The TKSmartCardSlot class declares a programmatic interface to information about the inserted Smart Card and instantiate TKSmartCard objects.</p><pre><code>TKSmartCardSlot</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tksmartcardslot
TKSmartCardSlotManager	A							https://developer.apple.com/reference/cryptotokenkit/tksmartcardslotmanager			<section class="prog__container"><p>The TKSmartCardSlotManager class provides a programmatic interface to the Smart Card reader slots available to the system.</p><pre><code>TKSmartCardSlotManager</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tksmartcardslotmanager
TKSmartCardToken	A							https://developer.apple.com/reference/cryptotokenkit/tksmartcardtoken			<section class="prog__container"><p>The TKSmartCardToken class is a subclass of TKToken that encapsulates a Smart Card based token.</p><pre><code>TKSmartCardToken</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tksmartcardtoken
TKSmartCardTokenDriver	A							https://developer.apple.com/reference/cryptotokenkit/tksmartcardtokendriver			<section class="prog__container"><p>The TKSmartCardTokenDriver class is a TKTokenDriver subclass that encapsulates the driver for specific type of Smart Card.</p><pre><code>TKSmartCardTokenDriver</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tksmartcardtokendriver
TKSmartCardTokenDriverDelegate	A							https://developer.apple.com/reference/cryptotokenkit/tksmartcardtokendriverdelegate			<section class="prog__container"><p>The TKSmartCardTokenDriverDelegate protocol inherits from the TKTokenDriverDelegate protocol and defines the methods that a delegate of a TKSmartCardTokenDriver object can implement to respond to token creation events.</p><pre><code>TKSmartCardTokenDriverDelegate</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tksmartcardtokendriverdelegate
TKSmartCardTokenSession	A							https://developer.apple.com/reference/cryptotokenkit/tksmartcardtokensession			<section class="prog__container"><p>A TKSmartCardTokenSession object represents a token session that is based on a Smart Card token.</p><pre><code>TKSmartCardTokenSession</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tksmartcardtokensession
TKSmartCardUserInteraction	A							https://developer.apple.com/reference/cryptotokenkit/tksmartcarduserinteraction			<section class="prog__container"><p>The TKSmartCardUserInteraction class is the base class for encapsulating user interaction with a Smart Card reader.</p><pre><code>TKSmartCardUserInteraction</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tksmartcarduserinteraction
TKSmartCardUserInteractionDelegate	A							https://developer.apple.com/reference/cryptotokenkit/tksmartcarduserinteractiondelegate			<section class="prog__container"><p>The TKSmartCardUserInteractionDelegate protocol defines the methods that a delegate of a TKSmartCardUserInteraction object can implement to handle user interaction events.</p><pre><code>TKSmartCardUserInteractionDelegate</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tksmartcarduserinteractiondelegate
TKSmartCardUserInteractionForPINOperation	A							https://developer.apple.com/reference/cryptotokenkit/tksmartcarduserinteractionforpinoperation			<section class="prog__container"><p>The TKSmartCardUserInteractionForPINOperation is a base subclass of TKSmartCardUserInteraction that represents the user interaction for the secure PIN operations on a Smart Card reader.</p><pre><code>TKSmartCardUserInteractionForPINOperation</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tksmartcarduserinteractionforpinoperation
TKSmartCardUserInteractionForSecurePINChange	A							https://developer.apple.com/reference/cryptotokenkit/tksmartcarduserinteractionforsecurepinchange			<section class="prog__container"><p>The TKSmartCardUserInteractionForSecurePINChange is a subclass of TKSmartCardUserInteractionForPINOperation that represents the user interaction for the secure PIN change operations on a Smart Card reader.</p><pre><code>TKSmartCardUserInteractionForSecurePINChange</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tksmartcarduserinteractionforsecurepinchange
TKSmartCardUserInteractionForSecurePINVerification	A							https://developer.apple.com/reference/cryptotokenkit/tksmartcarduserinteractionforsecurepinverification			<section class="prog__container"><p>The TKSmartCardUserInteractionForSecurePINVerification is a subclass of TKSmartCardUserInteractionForPINOperation that represents the user interaction for the secure PIN verification operations on a Smart Card reader.</p><pre><code>TKSmartCardUserInteractionForSecurePINVerification</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tksmartcarduserinteractionforsecurepinverification
TKTLVRecord	A							https://developer.apple.com/reference/cryptotokenkit/tktlvrecord			<section class="prog__container"><p>The TKTLVRecord class is the base class encapsulating a Tag-Length-Value record.</p><pre><code>TKTLVRecord</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tktlvrecord
TKToken	A							https://developer.apple.com/reference/cryptotokenkit/tktoken			<section class="prog__container"><p>A TKToken object represents a single cryptographic token.</p><pre><code>TKToken</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tktoken
TKTokenAuthOperation	A							https://developer.apple.com/reference/cryptotokenkit/tktokenauthoperation			<section class="prog__container"><p>The TKTokenAuthOperation class is a base class that encapsulates an authentication operation for a cryptographic token.</p><pre><code>TKTokenAuthOperation</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tktokenauthoperation
TKTokenDelegate	A							https://developer.apple.com/reference/cryptotokenkit/tktokendelegate			<section class="prog__container"><p>The TKTokenDelegate protocol defines the methods that a delegate of a TKToken object can implement to respond to create session and respond to events.</p><pre><code>TKTokenDelegate</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tktokendelegate
TKTokenDriver	A							https://developer.apple.com/reference/cryptotokenkit/tktokendriver			<section class="prog__container"><p>The TKTokenDriver class is the base class for encapsulating token drivers.</p><pre><code>TKTokenDriver</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tktokendriver
TKTokenDriverDelegate	A							https://developer.apple.com/reference/cryptotokenkit/tktokendriverdelegate			<section class="prog__container"><p>The TKTokenDriverDelegate protocol defines the methods that a delegate of a TKTokenDriver object can implement to respond to token creation events.</p><pre><code>TKTokenDriverDelegate</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tktokendriverdelegate
TKTokenKeyAlgorithm	A							https://developer.apple.com/reference/cryptotokenkit/tktokenkeyalgorithm			<section class="prog__container"><p>The TKTokenKeyAlgorithm class encapsulates cryptographic algorithms used by token keys.</p><pre><code>TKTokenKeyAlgorithm</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tktokenkeyalgorithm
TKTokenKeychainCertificate	A							https://developer.apple.com/reference/cryptotokenkit/tktokenkeychaincertificate			<section class="prog__container"><p>The TKTokenKeychainCertificate class is a concrete subclass of TKTokenKeychainItem that encapsulates the propagation of a token’s certificates to the keychain.</p><pre><code>TKTokenKeychainCertificate</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tktokenkeychaincertificate
TKTokenKeychainContents	A							https://developer.apple.com/reference/cryptotokenkit/tktokenkeychaincontents			<section class="prog__container"><p>A TKTokenKeychainContents object contains TKTokenKeychainItem objects, representing the state of the keychain for a particular token.</p><pre><code>TKTokenKeychainContents</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tktokenkeychaincontents
TKTokenKeychainItem	A							https://developer.apple.com/reference/cryptotokenkit/tktokenkeychainitem			<section class="prog__container"><p>The TKTokenKeychainItem class is the base class for encapsulating the propagation of a token’s items to the keychain.</p><pre><code>TKTokenKeychainItem</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tktokenkeychainitem
TKTokenKeychainKey	A							https://developer.apple.com/reference/cryptotokenkit/tktokenkeychainkey			<section class="prog__container"><p>The TKTokenKeychainKey class is a concrete subclass of TKTokenKeychainItem that encapsulates the propagation of a token’s keys to the keychain.</p><pre><code>TKTokenKeychainKey</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tktokenkeychainkey
TKTokenKeyExchangeParameters	A							https://developer.apple.com/reference/cryptotokenkit/tktokenkeyexchangeparameters			<section class="prog__container"><p>The TKTokenKeyExchangeParameters class encapsulates the parameters necessary for performing specific key exchange operations.</p><pre><code>TKTokenKeyExchangeParameters</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tktokenkeyexchangeparameters
TKTokenPasswordAuthOperation	A							https://developer.apple.com/reference/cryptotokenkit/tktokenpasswordauthoperation			<section class="prog__container"><p>The TKTokenPasswordAuthOperation class is a subclass of TKTokenAuthOperation that encapsulates a password-based authentication operation.</p><pre><code>TKTokenPasswordAuthOperation</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tktokenpasswordauthoperation
TKTokenSession	A							https://developer.apple.com/reference/cryptotokenkit/tktokensession			<section class="prog__container"><p>The TKTokenSession class encapsulates a token session that manages the authentication state of a token. A TKTokenSession object communicates with its delegate to perform operations with its token that are bound to the authentication state.</p><pre><code>TKTokenSession</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tktokensession
TKTokenSessionDelegate	A							https://developer.apple.com/reference/cryptotokenkit/tktokensessiondelegate			<section class="prog__container"><p>The TKTokenSessionDelegate protocol defines the methods that a delegate of a TKTokenSession object can implement to respond to token session authentication events.</p><pre><code>TKTokenSessionDelegate</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tktokensessiondelegate
TKTokenSmartCardPINAuthOperation	A							https://developer.apple.com/reference/cryptotokenkit/tktokensmartcardpinauthoperation			<section class="prog__container"><p>The TKTokenSmartCardPINAuthOperation class is a TKTokenAuthOperation subclass that encapsulates the context of a Smart Card PIN authentication operation.</p><pre><code>TKTokenSmartCardPINAuthOperation</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tktokensmartcardpinauthoperation
TKTokenWatcher	A							https://developer.apple.com/reference/cryptotokenkit/tktokenwatcher			<section class="prog__container"><p>The TKTokenWatcher class encapsulates the programmatic interface for monitoring system tokens. A TKTokenWatcher object can register to be notified when tokens are added and removed from the system.</p><pre><code>TKTokenWatcher</code></pre></section>	https://developer.apple.com/reference/cryptotokenkit/tktokenwatcher
Darwin Notification API	A							https://developer.apple.com/reference/darwinnotify/darwin_notification_api?language=objc			<section class="prog__container"><p></p><pre><code>notify_cancel</code></pre></section>	https://developer.apple.com/reference/darwinnotify/darwin_notification_api?language=objc
DADisk.h	A							https://developer.apple.com/reference/diskarbitration/dadisk.h			<section class="prog__container"><p></p><pre><code>func DADiskCopyDescription(DADisk)</code></pre></section>	https://developer.apple.com/reference/diskarbitration/dadisk.h
DADissenter.h	A							https://developer.apple.com/reference/diskarbitration/dadissenter.h			<section class="prog__container"><p></p><pre><code>func DADissenterCreate(CFAllocator?, DAReturn, CFString?)</code></pre></section>	https://developer.apple.com/reference/diskarbitration/dadissenter.h
DASession.h	A							https://developer.apple.com/reference/diskarbitration/dasession.h			<section class="prog__container"><p></p><pre><code>func DASessionCreate(CFAllocator?)</code></pre></section>	https://developer.apple.com/reference/diskarbitration/dasession.h
DiskArbitration.h	A							https://developer.apple.com/reference/diskarbitration/diskarbitration.h			<section class="prog__container"><p>Register for mount/unmount notifications, and block mount/unmount events.</p><pre><code>func DADiskClaim(DADisk, DADiskClaimOptions, DADiskClaimReleaseCallback?, UnsafeMutableRawPointer?, DADiskClaimCallback?, UnsafeMutableRawPointer?)</code></pre></section>	https://developer.apple.com/reference/diskarbitration/diskarbitration.h
Dispatch I/O Channel Closing Options	A							https://developer.apple.com/reference/dispatch/dispatch_i_o_channel_closing_options			<section class="prog__container"><p>The options to use when closing a dispatch I/O channel.</p><pre><code>var DISPATCH_IO_STOP: Int32</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatch_i_o_channel_closing_options
Dispatch I/O Channel Configuration Options	A							https://developer.apple.com/reference/dispatch/dispatch_i_o_channel_configuration_options			<section class="prog__container"><p>The options to use when configuring a channel. </p><pre><code>var DISPATCH_IO_STRICT_INTERVAL: Int32</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatch_i_o_channel_configuration_options
Dispatch I/O Channel Types	A							https://developer.apple.com/reference/dispatch/dispatch_i_o_channel_types			<section class="prog__container"><p>The types of dispatch I/O channels that may be created.</p><pre><code>var DISPATCH_IO_STREAM: Int32</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatch_i_o_channel_types
Dispatch Queue Priorities	A							https://developer.apple.com/reference/dispatch/dispatch_queue_priorities			<section class="prog__container"><p>Used to select the appropriate global concurrent queue.</p><pre><code>var DISPATCH_QUEUE_PRIORITY_HIGH: Int32</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatch_queue_priorities
Dispatch Source Mach Send Event Flags	A							https://developer.apple.com/reference/dispatch/dispatch_source_mach_send_event_flags			<section class="prog__container"><p>Mach send event flags.</p><pre><code>var DISPATCH_MACH_SEND_DEAD: Int32</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatch_source_mach_send_event_flags
Dispatch Source Memory Pressure Event Flags	A							https://developer.apple.com/reference/dispatch/dispatch_source_memory_pressure_event_flags			<section class="prog__container"><p>Memory pressure event flags</p><pre><code>var DISPATCH_MEMORYPRESSURE_NORMAL: Int32</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatch_source_memory_pressure_event_flags
Dispatch Source Process Event Flags	A							https://developer.apple.com/reference/dispatch/dispatch_source_process_event_flags			<section class="prog__container"><p>Process event flags.</p><pre><code>var DISPATCH_PROC_EXIT: UInt32</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatch_source_process_event_flags
Dispatch Source Vnode Event Flags	A							https://developer.apple.com/reference/dispatch/dispatch_source_vnode_event_flags			<section class="prog__container"><p>File-system object event flags.</p><pre><code>var DISPATCH_VNODE_DELETE: Int32</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatch_source_vnode_event_flags
Dispatch Time Constants	A							https://developer.apple.com/reference/dispatch/dispatch_time_constants			<section class="prog__container"><p>Base time constants.</p><pre><code>var DISPATCH_TIME_NOW: UInt64</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatch_time_constants
DispatchData	A							https://developer.apple.com/reference/dispatch/dispatchdata			<section class="prog__container"><p>DispatchData objects manage a memory-based data buffer. The data buffer is exposed as a contiguous block of memory, but internally, it may be comprised of multiple, discontiguous blocks of memory.</p><pre><code>DispatchData</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchdata
DispatchGroup	A							https://developer.apple.com/reference/dispatch/dispatchgroup			<section class="prog__container"><p>DispatchGroup allows for aggregate synchronization of work. You can use them to submit multiple different work items and track when they all complete, even though they might run on different queues. This behavior can be helpful when progress can’t be made until all of the specified tasks are complete.</p><pre><code>DispatchGroup</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchgroup
DispatchIO	A							https://developer.apple.com/reference/dispatch/dispatchio			<section class="prog__container"><p>DispatchIO provides a channel to perform operations on file descriptor using either stream-based and random-access semantics for accessing the contents of a file descriptor.</p><pre><code>DispatchIO</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchio
DispatchIO.CloseFlags	A							https://developer.apple.com/reference/dispatch/dispatchio.closeflags			<section class="prog__container"><p>The semantics of closing an I/O channel.</p><pre><code>static let stop: DispatchIO.CloseFlags</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchio.closeflags
DispatchIO.StreamType	A							https://developer.apple.com/reference/dispatch/dispatchio.streamtype			<section class="prog__container"><p>The semantics for accessing the contents of a file descriptor.</p><pre><code>case stream</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchio.streamtype
DispatchObject	A							https://developer.apple.com/reference/dispatch/dispatchobject			<section class="prog__container"><p>DispatchObject is the base class for many dispatch types, including DispatchQueue, DispatchGroup, and DispatchSource. </p><pre><code>DispatchObject</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchobject
DispatchPredicate	A							https://developer.apple.com/reference/dispatch/dispatchpredicate			<section class="prog__container"><p>DispatchPredicate represents logical conditions that can be evaluated within a given execution context using the dispatchPrecondition(condition:) method.</p><pre><code>DispatchPredicate</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchpredicate
DispatchQoS	A							https://developer.apple.com/reference/dispatch/dispatchqos			<section class="prog__container"><p>DispatchQoS encapsulates quality of service classes. </p><pre><code>DispatchQoS</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchqos
DispatchQoS.QoSClass	A							https://developer.apple.com/reference/dispatch/dispatchqos.qosclass			<section class="prog__container"><p>DispatchQoS.QoSClass encapsulates quality of service classes. </p><pre><code>case userInteractive</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchqos.qosclass
DispatchQueue	A							https://developer.apple.com/reference/dispatch/dispatchqueue			<section class="prog__container"><p>DispatchQueue manages the execution of work items. Each work item submitted to a queue is processed on a pool of threads managed by the system.</p><pre><code>DispatchQueue</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchqueue
DispatchSemaphore	A							https://developer.apple.com/reference/dispatch/dispatchsemaphore			<section class="prog__container"><p>DispatchSemaphore provides an efficient implementation of a traditional counting semaphore, which can be used to control access to a resource across multiple execution contexts.</p><pre><code>DispatchSemaphore</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchsemaphore
DispatchSource	A							https://developer.apple.com/reference/dispatch/dispatchsource			<section class="prog__container"><p>DispatchSource provides an interface for monitoring low-level system objects such as Mach ports, Unix descriptors, Unix signals, and VFS nodes for activity and submitting event handlers to dispatch queues for asynchronous processing when such activity occurs. </p><pre><code>DispatchSource</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchsource
DispatchSource.FileSystemEvent	A							https://developer.apple.com/reference/dispatch/dispatchsource.filesystemevent			<section class="prog__container"><p>A file system event.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchsource.filesystemevent
DispatchSource.MachSendEvent	A							https://developer.apple.com/reference/dispatch/dispatchsource.machsendevent			<section class="prog__container"><p>A Mach port send event.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchsource.machsendevent
DispatchSource.MemoryPressureEvent	A							https://developer.apple.com/reference/dispatch/dispatchsource.memorypressureevent			<section class="prog__container"><p>A memory pressure event.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchsource.memorypressureevent
DispatchSource.ProcessEvent	A							https://developer.apple.com/reference/dispatch/dispatchsource.processevent			<section class="prog__container"><p>A process event.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchsource.processevent
DispatchSourceFileSystemObject	A							https://developer.apple.com/reference/dispatch/dispatchsourcefilesystemobject			<section class="prog__container"><p>A dispatch source that monitors a file descriptor for events defined by DispatchSource.FileSystemEvent. The handle is a file descriptor (Int32).</p><pre><code>DispatchSource.FileSystemEvent</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchsourcefilesystemobject
DispatchSourceMachReceive	A							https://developer.apple.com/reference/dispatch/dispatchsourcemachreceive			<section class="prog__container"><p>A dispatch source that monitors a Mach port for pending messages. The handle is a Mach port with a receive right (mach_port_t).</p><pre><code>var handle: mach_port_t</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchsourcemachreceive
DispatchSourceMachSend	A							https://developer.apple.com/reference/dispatch/dispatchsourcemachsend			<section class="prog__container"><p>A dispatch source that monitors a Mach port for dead name notifications, indicating that a send right no longer has any corresponding receive right. The handle is a Mach port with a send or send-once right (mach_port_t). </p><pre><code>var data: DispatchSource.MachSendEvent</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchsourcemachsend
DispatchSourceMemoryPressure	A							https://developer.apple.com/reference/dispatch/dispatchsourcememorypressure			<section class="prog__container"><p>A dispatch source that monitors the system for changes in memory pressure condition.</p><pre><code>var data: DispatchSource.MemoryPressureEvent</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchsourcememorypressure
DispatchSourceProcess	A							https://developer.apple.com/reference/dispatch/dispatchsourceprocess			<section class="prog__container"><p>A dispatch source that monitors an external process for events defined by DispatchSource.ProcessEvent. The handle is a process identifier (pid_t).</p><pre><code>DispatchSource.ProcessEvent</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchsourceprocess
DispatchSourceProtocol	A							https://developer.apple.com/reference/dispatch/dispatchsourceprotocol			<section class="prog__container"><p>Defines a common set of properties and methods that are shared with all dispatch source types.</p><pre><code>DispatchSourceHandler</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchsourceprotocol
DispatchSourceSignal	A							https://developer.apple.com/reference/dispatch/dispatchsourcesignal			<section class="prog__container"><p>A dispatch source that monitors the current process for Unix signals.</p><pre><code>DispatchSourceProtocol</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchsourcesignal
DispatchSourceTimer	A							https://developer.apple.com/reference/dispatch/dispatchsourcetimer			<section class="prog__container"><p>A dispatch source that submits the event handler block based on a timer.</p><pre><code>func scheduleOneshot(deadline: DispatchTime, leeway: DispatchTimeInterval)</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchsourcetimer
DispatchSourceUserDataAdd	A							https://developer.apple.com/reference/dispatch/dispatchsourceuserdataadd			<section class="prog__container"><p>A dispatch source that coalesces data obtained via calls to calls to the add(data:) method.</p><pre><code>add(data:)</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchsourceuserdataadd
DispatchSourceUserDataOr	A							https://developer.apple.com/reference/dispatch/dispatchsourceuserdataor			<section class="prog__container"><p>A dispatch source that coalesces data obtained via calls to the or(data:) method.</p><pre><code>or(data:)</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchsourceuserdataor
DispatchSpecificKey	A							https://developer.apple.com/reference/dispatch/dispatchspecifickey			<section class="prog__container"><p>DispatchSpecificKey is a class that encapsulates keys that can be associated with a contextual value on a DispatchQueue using the setSpecific<T>(key:value:) method, and accessed using the getSpecific<T>(key:) method.</p><pre><code>DispatchSpecificKey</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchspecifickey
DispatchTime	A							https://developer.apple.com/reference/dispatch/dispatchtime			<section class="prog__container"><p>DispatchTime represents a point in time relative to the default clock with nanosecond precision. On Apple platforms, the default clock is based on the Mach absolute time unit.</p><pre><code>DispatchTime</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchtime
DispatchTimeInterval	A							https://developer.apple.com/reference/dispatch/dispatchtimeinterval			<section class="prog__container"><p>DispatchTimeInterval represents a number of seconds, millisconds, microseconds, or nanoseconds. You use DispatchTimeInterval values to specify the interval at which a DispatchSourceTimer fires or I/O handlers are invoked for a DispatchIO channel, as well as to increment and decrement DispatchTime values.</p><pre><code>DispatchTimeInterval</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchtimeinterval
DispatchTimeoutResult	A							https://developer.apple.com/reference/dispatch/dispatchtimeoutresult			<section class="prog__container"><p>DispatchTimeoutResult indicates whether a dispatch operation finised before a specified time.</p><pre><code>DispatchTimeoutResult</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchtimeoutresult
DispatchWallTime	A							https://developer.apple.com/reference/dispatch/dispatchwalltime			<section class="prog__container"><p>DispatchTime represents an absolute point in time according to the wall clock with microsecond precision. On Apple platforms, the default clock is based on the result of gettimeofday(2).</p><pre><code>DispatchTime</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchwalltime
DispatchWorkItem	A							https://developer.apple.com/reference/dispatch/dispatchworkitem			<section class="prog__container"><p>DispatchWorkItem encapsulates work that can be performed. A work item can be dispatched onto a DispatchQueue and within a DispatchGroup. A DispatchWorkItem can also be set as a DispatchSource event, registration, or cancel handler.</p><pre><code>DispatchWorkItem</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchworkitem
DispatchWorkItemFlags	A							https://developer.apple.com/reference/dispatch/dispatchworkitemflags			<section class="prog__container"><p>DispatchWorkItemFlags are an option set that configure the behavior of a DispatchWorkItem value, including its quality of service class and whether to create a barrier or spawn a new detached thread.</p><pre><code>DispatchWorkItemFlags</code></pre></section>	https://developer.apple.com/reference/dispatch/dispatchworkitemflags
DNS Service Discovery C	A							https://developer.apple.com/reference/dnssd/dns_service_discovery_c?language=objc			<section class="prog__container"><p></p><pre><code>DNSServiceGetProperty</code></pre></section>	https://developer.apple.com/reference/dnssd/dns_service_discovery_c?language=objc
EKAlarm	A							https://developer.apple.com/reference/eventkit/ekalarm			<section class="prog__container"><p>An EKAlarm object represents an alarm in Event Kit. Use the init(absoluteDate:) and init(relativeOffset:) class methods to create an alarm and use the properties to set information about an alarm. In OS X Mountain Lion, you can specify an action to trigger when the alarm fires via the emailAddress, soundName, or url property.</p><pre><code>EKAlarm</code></pre></section>	https://developer.apple.com/reference/eventkit/ekalarm
EKCalendar	A							https://developer.apple.com/reference/eventkit/ekcalendar			<section class="prog__container"><p>An instance of the EKCalendar class represents a calendar in Event Kit. Use the properties in this class to get attributes about a calendar, such as its title and type. Use the init(for:eventStore:) method to create a calendar object.</p><pre><code>EKCalendar</code></pre></section>	https://developer.apple.com/reference/eventkit/ekcalendar
EKCalendarEventAvailabilityMask	A							https://developer.apple.com/reference/eventkit/ekcalendareventavailabilitymask			<section class="prog__container"><p>A bitmask indicating the event availability settings that the calendar can support.</p><pre><code>init(rawValue: UInt)</code></pre></section>	https://developer.apple.com/reference/eventkit/ekcalendareventavailabilitymask
EKCalendarItem	A							https://developer.apple.com/reference/eventkit/ekcalendaritem			<section class="prog__container"><p>The EKCalendarItem class is a an abstract superclass for calendar events and reminders. This class provides common properties and methods for accessing properties of calendar items such as the ability to set the calendar, title, and location as well as support for attaching notes, displaying attendees, setting multiple alarms, and specifying recurrence rules.</p><pre><code>EKCalendarItem</code></pre></section>	https://developer.apple.com/reference/eventkit/ekcalendaritem
EKEntityMask	A							https://developer.apple.com/reference/eventkit/ekentitymask			<section class="prog__container"><p>A bitmask of EKEntityType for specifying multiple entities at once.</p><pre><code>EKEntityType</code></pre></section>	https://developer.apple.com/reference/eventkit/ekentitymask
EKEvent	A							https://developer.apple.com/reference/eventkit/ekevent			<section class="prog__container"><p>An instance of the EKEvent class represents an event added to a calendar in the Event Kit framework.</p><pre><code>EKEvent</code></pre></section>	https://developer.apple.com/reference/eventkit/ekevent
EKEventStore	A							https://developer.apple.com/reference/eventkit/ekeventstore			<section class="prog__container"><p>An instance of the EKEventStore class represents the Calendar database. It is an application’s point of contact for accessing calendar and reminder data.</p><pre><code>EKEventStore</code></pre></section>	https://developer.apple.com/reference/eventkit/ekeventstore
EKObject	A							https://developer.apple.com/reference/eventkit/ekobject			<section class="prog__container"><p>The EKObject class is an abstract superclass for all Event Kit classes whose instances are persistent. It provides fine control when saving and restoring property settings. For example, you can find out if a persistent object was modified locally and whether it needs to be saved. If the object has changed in the event store since it was fetched, you can refresh the local copy by keeping local changes or by removing local changes. You can also roll back the object to the state when it was first fetched.</p><pre><code>EKObject</code></pre></section>	https://developer.apple.com/reference/eventkit/ekobject
EKParticipant	A							https://developer.apple.com/reference/eventkit/ekparticipant			<section class="prog__container"><p>An EKParticipant object represents a participant in a calendar event. A participant can be a person, group, room, or other resource.</p><pre><code>EKParticipant</code></pre></section>	https://developer.apple.com/reference/eventkit/ekparticipant
EKRecurrenceDayOfWeek	A							https://developer.apple.com/reference/eventkit/ekrecurrencedayofweek			<section class="prog__container"><p>The EKRecurrenceDayOfWeek class represents a day of the week for use with an EKRecurrenceRule object. A day of the week can optionally have a week number, indicating a specific day in the recurrence rule’s frequency. For example, a day of the week with a day value of Tuesday and a week number of 2 would represent the second Tuesday of every month in a monthly recurrence rule, and the second Tuesday of every year in a yearly recurrence rule. A day of the week with a week number of 0 ignores its week number.</p><pre><code>EKRecurrenceDayOfWeek</code></pre></section>	https://developer.apple.com/reference/eventkit/ekrecurrencedayofweek
EKRecurrenceEnd	A							https://developer.apple.com/reference/eventkit/ekrecurrenceend			<section class="prog__container"><p>The EKRecurrenceEnd class defines the end of a recurrence rule defined by an EKRecurrenceRule object. The recurrence end can be specified by a date (date-based) or by a maximum count of occurrences (count-based). An event which is set to never end should have its EKRecurrenceEnd set to nil.</p><pre><code>EKRecurrenceEnd</code></pre></section>	https://developer.apple.com/reference/eventkit/ekrecurrenceend
EKRecurrenceRule	A							https://developer.apple.com/reference/eventkit/ekrecurrencerule			<section class="prog__container"><p>The EKRecurrenceRule class is used to describe the recurrence pattern for a recurring event.</p><pre><code>EKRecurrenceRule</code></pre></section>	https://developer.apple.com/reference/eventkit/ekrecurrencerule
EKReminder	A							https://developer.apple.com/reference/eventkit/ekreminder			<section class="prog__container"><p>An instance of the EKReminder class represents a reminder added to a calendar in the Event Kit framework.</p><pre><code>EKReminder</code></pre></section>	https://developer.apple.com/reference/eventkit/ekreminder
EKSource	A							https://developer.apple.com/reference/eventkit/eksource			<section class="prog__container"><p>An instance of the EKSource class represents the account that a calendar belongs to. You do not create instances of this class. You retrieve EKSource objects from an EKEventStore object. Use the sources property to get all the EKSource objects for an event store, and use the methods in this class to access properties of the source object.</p><pre><code>EKSource</code></pre></section>	https://developer.apple.com/reference/eventkit/eksource
EKStructuredLocation	A							https://developer.apple.com/reference/eventkit/ekstructuredlocation			<section class="prog__container"><p>The EKStructuredLocation class specifies a geofence that can be used to trigger the alarm of a calendar item. </p><pre><code>EKStructuredLocation</code></pre></section>	https://developer.apple.com/reference/eventkit/ekstructuredlocation
EKCalendarChooser	A							https://developer.apple.com/reference/eventkitui/ekcalendarchooser			<section class="prog__container"><p>An instance of the EKCalendarChooser class is a view controller that displays an interface for selecting one or more calendars in an event store. This view controller can be pushed on a navigation stack or presented modally. Use a delegate that conforms to the EKCalendarChooserDelegate protocol to receive callbacks when the user selects calendars or cancels the operation.</p><pre><code>EKCalendarChooser</code></pre></section>	https://developer.apple.com/reference/eventkitui/ekcalendarchooser
EKCalendarChooserDelegate	A							https://developer.apple.com/reference/eventkitui/ekcalendarchooserdelegate			<section class="prog__container"><p>The EKCalendarChooserDelegate protocol defines methods that a calendar chooser’s delegate may optionally implement to be notified when a user finishes selecting calendars or cancels the process.</p><pre><code>EKCalendarChooserDelegate</code></pre></section>	https://developer.apple.com/reference/eventkitui/ekcalendarchooserdelegate
EKEventEditViewController	A							https://developer.apple.com/reference/eventkitui/ekeventeditviewcontroller			<section class="prog__container"><p>An EKEventEditViewController object allows the user to create and edit a calendar event. You can use this class to create a new event or a partially constructed event. If the new event has no calendar, the default calendar is used. You should present this type of view controller modally.</p><pre><code>EKEventEditViewController</code></pre></section>	https://developer.apple.com/reference/eventkitui/ekeventeditviewcontroller
EKEventEditViewDelegate	A							https://developer.apple.com/reference/eventkitui/ekeventeditviewdelegate			<section class="prog__container"><p>Delegates of an EKEventEditViewController object conform to this protocol. Use an EKEventEditViewController object to allow the user to either create an event or edit an existing event. To be notified when the user finishes editing the event, set the delegate to an object conforming to this protocol.</p><pre><code>EKEventEditViewController</code></pre></section>	https://developer.apple.com/reference/eventkitui/ekeventeditviewdelegate
EKEventViewController	A							https://developer.apple.com/reference/eventkitui/ekeventviewcontroller			<section class="prog__container"><p>An EKEventViewController object displays the details of a calendar event. You can set whether users are allowed to edit the event. If the event is an invitation, where the organizer is not the user, you can set whether a calendar preview is shown.</p><pre><code>EKEventViewController</code></pre></section>	https://developer.apple.com/reference/eventkitui/ekeventviewcontroller
EKEventViewDelegate	A							https://developer.apple.com/reference/eventkitui/ekeventviewdelegate			<section class="prog__container"><p>Delegates of an EKEventViewController object conform to this protocol. An event view controller’s delegate is notified when the event view controller should be closed. It is your responsibility to close the event view controller and perform any additional desired tasks within this protocol’s method.</p><pre><code>EKEventViewController</code></pre></section>	https://developer.apple.com/reference/eventkitui/ekeventviewdelegate
NSExceptionHandler	A							https://developer.apple.com/reference/exceptionhandling/nsexceptionhandler			<section class="prog__container"><p>The NSExceptionHandler class provides facilities for monitoring and debugging exceptional conditions in Objective-C programs. It works by installing a special uncaught exception handler via the NSSetUncaughtExceptionHandler(_:) function. Consequently, to use the services of NSExceptionHandler, you must not install your own custom uncaught exception handler.</p><pre><code>NSExceptionHandler</code></pre></section>	https://developer.apple.com/reference/exceptionhandling/nsexceptionhandler
NSExceptionHandlerDelegate	A							https://developer.apple.com/reference/exceptionhandling/nsexceptionhandlerdelegate			<section class="prog__container"><p>The NSExceptionHandlerDelegate informal protocol describes methods that NSExceptionHandler objects call on their delegates when exceptions occur. An NSExceptionHandler object does not need to have a delegate. When one does, these delegate methods are asked to approve exception handling and logging for each monitored NSExceptionHandler object.</p><pre><code>NSExceptionHandlerDelegate</code></pre></section>	https://developer.apple.com/reference/exceptionhandling/nsexceptionhandlerdelegate
EAAccessory	A							https://developer.apple.com/reference/externalaccessory/eaaccessory			<section class="prog__container"><p>The EAAccessory class provides your application with information about a single connected hardware accessory. You can use the information in this class to determine if your application is able to open a session to a given accessory. After you have an open session, you can also associate a custom delegate with the accessory object to be notified to changes in the accessory state. Your delegate must adopt the EAAccessoryDelegate protocol.</p><pre><code>EAAccessory</code></pre></section>	https://developer.apple.com/reference/externalaccessory/eaaccessory
EAAccessoryDelegate	A							https://developer.apple.com/reference/externalaccessory/eaaccessorydelegate			<section class="prog__container"><p>The EAAccessoryDelegate protocol defines a single method for receiving notifications when the associated EAAccessory object is disconnected. Implementation of this method is optional. </p><pre><code>EAAccessoryDelegate</code></pre></section>	https://developer.apple.com/reference/externalaccessory/eaaccessorydelegate
EAAccessoryManager	A							https://developer.apple.com/reference/externalaccessory/eaaccessorymanager			<section class="prog__container"><p>The EAAccessoryManager class coordinates the attached accessories for an iOS-based device. You use this class to retrieve a list of accessories to which your application might want to connect. You also use this class to start and stop the sending of accessory-related connect and disconnect notifications.</p><pre><code>EAAccessoryManager</code></pre></section>	https://developer.apple.com/reference/externalaccessory/eaaccessorymanager
EASession	A							https://developer.apple.com/reference/externalaccessory/easession			<section class="prog__container"><p>The EASession class is used to create a communications channel between your application and a connected hardware accessory. When creating a session, you must specify the protocol you wish to use to communicate with the accessory. After initializing an instance of this class, you use the provided output and input streams to transfer data to and from the accessory using that protocol.</p><pre><code>EASession</code></pre></section>	https://developer.apple.com/reference/externalaccessory/easession
EAWiFiUnconfiguredAccessory	A							https://developer.apple.com/reference/externalaccessory/eawifiunconfiguredaccessory			<section class="prog__container"><p>The EAWiFiUnconfiguredAccessory class provides your app information about an unconfigured MFI Wireless Accessory Configuration accessory.</p><pre><code>EAWiFiUnconfiguredAccessory</code></pre></section>	https://developer.apple.com/reference/externalaccessory/eawifiunconfiguredaccessory
EAWiFiUnconfiguredAccessoryBrowser	A							https://developer.apple.com/reference/externalaccessory/eawifiunconfiguredaccessorybrowser			<section class="prog__container"><p>The EAWiFiUnconfiguredAccessoryBrowser class gives your app access to the MFi Wireless Accessory Configuration process. You use a browser object to scan for unconfigured accessories, connect them to the user's Wi-Fi infrastructure, and configure attributes of the accessories. An accessory is represented by an instance of EAWiFiUnconfiguredAccessory.</p><pre><code>EAWiFiUnconfiguredAccessoryBrowser</code></pre></section>	https://developer.apple.com/reference/externalaccessory/eawifiunconfiguredaccessorybrowser
EAWiFiUnconfiguredAccessoryBrowserDelegate	A							https://developer.apple.com/reference/externalaccessory/eawifiunconfiguredaccessorybrowserdelegate			<section class="prog__container"><p>The EAWiFiUnconfiguredAccessoryBrowserDelegate protocol defines several required callbacks that tell the delegate of an EAWiFiUnconfiguredAccessoryBrowser object about the state of the search for unconfigured accessories and the configuration processes.</p><pre><code>EAWiFiUnconfiguredAccessoryBrowserDelegate</code></pre></section>	https://developer.apple.com/reference/externalaccessory/eawifiunconfiguredaccessorybrowserdelegate
EAWiFiUnconfiguredAccessoryProperties	A							https://developer.apple.com/reference/externalaccessory/eawifiunconfiguredaccessoryproperties			<section class="prog__container"><p>Options that can be combined using the C bitwise OR operator to represent the properties of an EAWiFiUnconfiguredAccessory object.</p><pre><code>OR</code></pre></section>	https://developer.apple.com/reference/externalaccessory/eawifiunconfiguredaccessoryproperties
ForceFeedback.h	A							https://developer.apple.com/reference/forcefeedback/forcefeedback.h			<section class="prog__container"><p>Public Interfaces to the Force Feedback implementation in macOS.</p><pre><code>func FFCreateDevice(io_service_t, UnsafeMutablePointer<FFDeviceObjectReference?>!)</code></pre></section>	https://developer.apple.com/reference/forcefeedback/forcefeedback.h
ForceFeedbackConstants.h	A							https://developer.apple.com/reference/forcefeedback/forcefeedbackconstants.h			<section class="prog__container"><p>Constants used in the public interfaces to the Force Feedback implementation in macOS.</p><pre><code>FFCapabilitiesEffectSubType</code></pre></section>	https://developer.apple.com/reference/forcefeedback/forcefeedbackconstants.h
BlockOperation	A							https://developer.apple.com/reference/foundation/blockoperation			<section class="prog__container"><p>The NSBlockOperation class is a concrete subclass of Operation that manages the concurrent execution of one or more blocks. You can use this object to execute several blocks at once without having to create separate operation objects for each. When executing more than one block, the operation itself is considered finished only when all blocks have finished executing. </p><pre><code>NSBlockOperation</code></pre></section>	https://developer.apple.com/reference/foundation/blockoperation
Bundle	A							https://developer.apple.com/reference/foundation/bundle			<section class="prog__container"><p>An NSBundle object helps you access the code and resources in a bundle directory on disk. Apple uses bundles to represent apps, frameworks, plug-ins, and many other specific types of content. Bundles organize their contained resources into well-defined subdirectories, and bundle structures vary depending on the platform and the type of the bundle. By using a bundle object, you do not have to know the structure of a bundle to access its resources. The bundle object provides a single interface for locating items, taking into account the bundle structure, user preferences, available localizations, and other relevant factors.</p><pre><code>NSBundle</code></pre></section>	https://developer.apple.com/reference/foundation/bundle
ByteCountFormatter	A							https://developer.apple.com/reference/foundation/bytecountformatter			<section class="prog__container"><p>The ByteCountFormatter class converts a byte count value into a localized description that is formatted with the appropriate byte modifier (KB, MB, GB and so on).</p><pre><code>ByteCountFormatter</code></pre></section>	https://developer.apple.com/reference/foundation/bytecountformatter
CachedURLResponse	A							https://developer.apple.com/reference/foundation/cachedurlresponse			<section class="prog__container"><p>An NSCachedURLResponse object represents a cached response to a URL request. It provides the server’s response metadata in the form of an NSURLResponse object, along with an NSData object containing the actual cached content data. Its storage policy determines whether the response should be cached on disk, in memory, or not at all.</p><pre><code>NSCachedURLResponse</code></pre></section>	https://developer.apple.com/reference/foundation/cachedurlresponse
CocoaError	A							https://developer.apple.com/reference/foundation/cocoaerror			<section class="prog__container"><p>Describes errors within the Cocoa error domain.</p><pre><code>CocoaError.Code</code></pre></section>	https://developer.apple.com/reference/foundation/cocoaerror
CocoaError.Code	A							https://developer.apple.com/reference/foundation/cocoaerror.code			<section class="prog__container"><p>The error code itself.</p><pre><code>init(rawValue: Int)</code></pre></section>	https://developer.apple.com/reference/foundation/cocoaerror.code
CustomNSError	A							https://developer.apple.com/reference/foundation/customnserror			<section class="prog__container"><p>Describes an error type that specifically provides a domain, code, and user-info dictionary.</p><pre><code>var errorCode: Int</code></pre></section>	https://developer.apple.com/reference/foundation/customnserror
DateComponentsFormatter	A							https://developer.apple.com/reference/foundation/datecomponentsformatter			<section class="prog__container"><p>An NSDateComponentsFormatter object takes quantities of time and formats them as a user-readable string. Use a date components formatter to create strings for your app’s interface. The formatter object has many options for creating both abbreviated and expanded strings. The formatter takes the current user’s locale and language into account when generating strings.</p><pre><code>NSDateComponentsFormatter</code></pre></section>	https://developer.apple.com/reference/foundation/datecomponentsformatter
DateFormatter	A							https://developer.apple.com/reference/foundation/dateformatter			<section class="prog__container"><p>Instances of NSDateFormatter create string representations of NSDate objects, and convert textual representations of dates and times into NSDate objects. For user-visible representations of dates and times, NSDateFormatter provides a variety of localized presets and configuration options. For fixed format representations of dates and times, you can specify a custom format string.</p><pre><code>NSDateFormatter</code></pre></section>	https://developer.apple.com/reference/foundation/dateformatter
DateIntervalFormatter	A							https://developer.apple.com/reference/foundation/dateintervalformatter			<section class="prog__container"><p>An NSDateIntervalFormatter object creates user-readable strings from pairs of dates. Use a date interval formatter to create user-readable strings of the form <start> - <end> for your app’s interface, where <start> and <end> are date values that you supply. The formatter uses locale and language information, along with custom formatting options, to define the content of the resulting string. You can specify different styles for the date and time information in each date value.</p><pre><code>NSDateIntervalFormatter</code></pre></section>	https://developer.apple.com/reference/foundation/dateintervalformatter
Dimension	A							https://developer.apple.com/reference/foundation/dimension			<section class="prog__container"><p>NSDimension is an abstract subclass of Unit that declares a programmatic interface for objects that represent a dimensional unit of measure. The Foundation framework provides concrete subclasses for many of the most common types of physical units.</p><pre><code>NSDimension</code></pre></section>	https://developer.apple.com/reference/foundation/dimension
DistributedNotificationCenter	A							https://developer.apple.com/reference/foundation/distributednotificationcenter			<section class="prog__container"><p>The NSDistributedNotificationCenter class provides a way to send notifications to objects in other tasks. It takes NSNotification objects and broadcasts them to any objects in other tasks that have registered for the notification with their task’s default distributed notification center.</p><pre><code>NSDistributedNotificationCenter</code></pre></section>	https://developer.apple.com/reference/foundation/distributednotificationcenter
EnergyFormatter	A							https://developer.apple.com/reference/foundation/energyformatter			<section class="prog__container"><p>The NSEnergyFormatter class provides properly formatted, localized descriptions of energy values. Use this class to create localized strings when displaying energy information (for example, joules or calories) to users.</p><pre><code>NSEnergyFormatter</code></pre></section>	https://developer.apple.com/reference/foundation/energyformatter
FileHandle	A							https://developer.apple.com/reference/foundation/filehandle			<section class="prog__container"><p>The FileHandle class is an object-oriented wrapper for a file descriptor. You use file handle objects to access data associated with files, sockets, pipes, and devices. For files, you can read, write, and seek within the file. For sockets, pipes, and devices, you can use a file handle object to monitor the device and process data asynchronously.</p><pre><code>FileHandle</code></pre></section>	https://developer.apple.com/reference/foundation/filehandle
FileManager	A							https://developer.apple.com/reference/foundation/filemanager			<section class="prog__container"><p>An FileManager object lets you examine the contents of the file system and make changes to it. The FileManager class provides convenient access to a shared file manager object that is suitable for most types of file-related manipulations. A file manager object is typically your primary mode of interaction with the file system. You use it to locate, create, copy, and move files and directories. You also use it to get information about a file or directory or change some of its attributes.</p><pre><code>FileManager</code></pre></section>	https://developer.apple.com/reference/foundation/filemanager
FileManager.DirectoryEnumerator	A							https://developer.apple.com/reference/foundation/filemanager.directoryenumerator			<section class="prog__container"><p>An NSDirectoryEnumerator object enumerates the contents of a directory, returning the pathnames of all files and directories contained within that directory. These pathnames are relative to the directory.</p><pre><code>NSDirectoryEnumerator</code></pre></section>	https://developer.apple.com/reference/foundation/filemanager.directoryenumerator
FileManagerDelegate	A							https://developer.apple.com/reference/foundation/filemanagerdelegate			<section class="prog__container"><p>The FileManagerDelegate protocol defines optional methods for managing operations involving the copying, moving, linking, or removal of files and directories. When you use an FileManager object to initiate a copy, move, link, or remove operation, the file manager asks its delegate whether the operation should begin at all and whether it should proceed when an error occurs.</p><pre><code>FileManagerDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/filemanagerdelegate
FileWrapper	A							https://developer.apple.com/reference/foundation/filewrapper			<section class="prog__container"><p>The NSFileWrapper class provides access to the attributes and contents of file-system nodes. A file-system node is a file, directory, or symbolic link. Instances of this class are known as file wrappers.</p><pre><code>NSFileWrapper</code></pre></section>	https://developer.apple.com/reference/foundation/filewrapper
Formatter	A							https://developer.apple.com/reference/foundation/formatter			<section class="prog__container"><p>NSFormatter is an abstract class that declares an interface for objects that create, interpret, and validate the textual representation of values. The Foundation framework provides several concrete subclasses of NSFormatter, including ByteCountFormatter, DateFormatter, DateComponentsFormatter, DateIntervalFormatter, EnergyFormatter, LengthFormatter, MassFormatter, NumberFormatter, and PersonNameComponentsFormatter.</p><pre><code>NSFormatter</code></pre></section>	https://developer.apple.com/reference/foundation/formatter
Foundation Data Types	A							https://developer.apple.com/reference/foundation/foundation_data_types			<section class="prog__container"><p>This document describes the data types and constants found in the Foundation framework.</p><pre><code>ErrorPointer</code></pre></section>	https://developer.apple.com/reference/foundation/foundation_data_types
Foundation Functions	A							https://developer.apple.com/reference/foundation/foundation_functions			<section class="prog__container"><p>This document describes the functions and function-like macros defined in the Foundation Framework.</p><pre><code>func NSConvertHostDoubleToSwapped(Double)</code></pre></section>	https://developer.apple.com/reference/foundation/foundation_functions
Host	A							https://developer.apple.com/reference/foundation/host			<section class="prog__container"><p>The NSHost class provides methods to access the network name and address information for a host. Instances of the NSHost class represent individual hosts on a network. Use NSHost objects to get the current host’s names and addresses and to look up other hosts by name or by address.</p><pre><code>NSHost</code></pre></section>	https://developer.apple.com/reference/foundation/host
HTTPCookie	A							https://developer.apple.com/reference/foundation/httpcookie			<section class="prog__container"><p>An NSHTTPCookie object represents an HTTP cookie. It is an immutable object, initialized from a dictionary containing the cookie attributes.</p><pre><code>NSHTTPCookie</code></pre></section>	https://developer.apple.com/reference/foundation/httpcookie
HTTPCookieStorage	A							https://developer.apple.com/reference/foundation/httpcookiestorage			<section class="prog__container"><p>NSHTTPCookieStorage implements a singleton object (shared instance) that manages storage of cookies. Each cookie is represented by an instance of the HTTPCookie class. As a rule, cookies are shared among all applications and are kept in sync across process boundaries. Session cookies (where the cookie object’s isSessionOnly method returns true) are local to a single process and are not shared.</p><pre><code>NSHTTPCookieStorage</code></pre></section>	https://developer.apple.com/reference/foundation/httpcookiestorage
HTTPURLResponse	A							https://developer.apple.com/reference/foundation/httpurlresponse			<section class="prog__container"><p>The NSHTTPURLResponse class is a subclass of URLResponse that provides methods for accessing information specific to HTTP protocol responses. Whenever you make HTTP URL load requests, any response objects you get back from the URLSession, NSURLConnection, or NSURLDownload class are instances of the NSHTTPURLResponse class.</p><pre><code>NSHTTPURLResponse</code></pre></section>	https://developer.apple.com/reference/foundation/httpurlresponse
IndexPath	A							https://developer.apple.com/reference/foundation/indexpath			<section class="prog__container"><p>IndexPath represents the path to a specific node in a tree of nested array collections.</p><pre><code>IndexPath</code></pre></section>	https://developer.apple.com/reference/foundation/indexpath
InputStream	A							https://developer.apple.com/reference/foundation/inputstream			<section class="prog__container"><p>NSInputStream is a subclass of NSStream that provides read-only stream functionality.</p><pre><code>NSInputStream</code></pre></section>	https://developer.apple.com/reference/foundation/inputstream
ISO8601DateFormatter	A							https://developer.apple.com/reference/foundation/iso8601dateformatter			<section class="prog__container"><p>The NSISO8601DateFormatter class generates and parses string representations of dates following the ISO 8601 standard. Use this class to create ISO 8601 representations of dates and create dates from text strings in ISO 8601 format.</p><pre><code>NSISO8601DateFormatter</code></pre></section>	https://developer.apple.com/reference/foundation/iso8601dateformatter
JSONSerialization	A							https://developer.apple.com/reference/foundation/jsonserialization			<section class="prog__container"><p>You use the NSJSONSerialization class to convert JSON to Foundation objects and convert Foundation objects to JSON.</p><pre><code>NSJSONSerialization</code></pre></section>	https://developer.apple.com/reference/foundation/jsonserialization
LengthFormatter	A							https://developer.apple.com/reference/foundation/lengthformatter			<section class="prog__container"><p>The NSLengthFormatter class provides properly formatted, localized descriptions of linear distances (for example, length and height measurements). Use this class to create localized length strings when displaying distance information to users.</p><pre><code>NSLengthFormatter</code></pre></section>	https://developer.apple.com/reference/foundation/lengthformatter
LocalizedError	A							https://developer.apple.com/reference/foundation/localizederror			<section class="prog__container"><p>Describes an error that provides localized messages describing why an error occurred and provides more information about the error.</p><pre><code>var errorDescription: String?</code></pre></section>	https://developer.apple.com/reference/foundation/localizederror
MassFormatter	A							https://developer.apple.com/reference/foundation/massformatter			<section class="prog__container"><p>The NSMassFormatter class provides properly formatted, localized descriptions of mass and weight values. Use this class to create localized mass strings when displaying mass information to the users.</p><pre><code>NSMassFormatter</code></pre></section>	https://developer.apple.com/reference/foundation/massformatter
MeasurementFormatter	A							https://developer.apple.com/reference/foundation/measurementformatter			<section class="prog__container"><p>The NSMeasurementFormatter class provides properly formatted, localized representations of units and measurements. Use this class to create localized representations of measurements when displaying quantities of units to the user.</p><pre><code>NSMeasurementFormatter</code></pre></section>	https://developer.apple.com/reference/foundation/measurementformatter
MessagePort	A							https://developer.apple.com/reference/foundation/messageport			<section class="prog__container"><p>NSMessagePort is a subclass of NSPort that can be used as an endpoint for distributed object connections (or raw messaging). NSMessagePort allows for local (on the same machine) communication only. A companion class, NSSocketPort, allows for both local and remote communication, but may be more expensive than NSMessagePort for the local case.</p><pre><code>NSMessagePort</code></pre></section>	https://developer.apple.com/reference/foundation/messageport
NetService	A							https://developer.apple.com/reference/foundation/netservice			<section class="prog__container"><p>The NSNetService class represents a network service, either one your application publishes or is a client of. This class and the NSNetServiceBrowser class use multicast DNS to convey information about network services to and from your application. The API of NSNetService provides a convenient way to publish the services offered by your application and to resolve the socket address for a service.</p><pre><code>NSNetService</code></pre></section>	https://developer.apple.com/reference/foundation/netservice
NetServiceBrowser	A							https://developer.apple.com/reference/foundation/netservicebrowser			<section class="prog__container"><p>The NSNetServiceBrowser class defines an interface for finding published services on a network using multicast DNS. An instance of NSNetServiceBrowser is known as a network service browser.</p><pre><code>NSNetServiceBrowser</code></pre></section>	https://developer.apple.com/reference/foundation/netservicebrowser
NetServiceBrowserDelegate	A							https://developer.apple.com/reference/foundation/netservicebrowserdelegate			<section class="prog__container"><p>The NSNetServiceBrowserDelegate protocol defines the optional methods implemented by delegates of NetServiceBrowser objects.</p><pre><code>NSNetServiceBrowserDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/netservicebrowserdelegate
NetServiceDelegate	A							https://developer.apple.com/reference/foundation/netservicedelegate			<section class="prog__container"><p>The NSNetServiceDelegate protocol defines the optional methods implemented by delegates of NetService objects.</p><pre><code>NSNetServiceDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/netservicedelegate
NotificationCenter	A							https://developer.apple.com/reference/foundation/notificationcenter			<section class="prog__container"><p>An NSNotificationCenter object (or simply, notification center) provides a mechanism for broadcasting information within a program. An NSNotificationCenter object is essentially a notification dispatch table.</p><pre><code>NSNotificationCenter</code></pre></section>	https://developer.apple.com/reference/foundation/notificationcenter
NotificationQueue	A							https://developer.apple.com/reference/foundation/notificationqueue			<section class="prog__container"><p>NSNotificationQueue objects (or simply notification queues) act as buffers for notification centers (instances of NSNotificationCenter). Whereas a notification center distributes notifications when posted, notifications placed into the queue can be delayed until the end of the current pass through the run loop or until the run loop is idle. Duplicate notifications can also be coalesced so that only one notification is sent although multiple notifications are posted. A notification queue maintains notifications (instances of NSNotification) generally in a first in first out (FIFO) order. When a notification rises to the front of the queue, the queue posts it to the notification center, which in turn dispatches the notification to all objects registered as observers.</p><pre><code>NotificationQueue.PostingStyle</code></pre></section>	https://developer.apple.com/reference/foundation/notificationqueue
NSAffineTransform	A							https://developer.apple.com/reference/foundation/nsaffinetransform			<section class="prog__container"><p>The NSAffineTransform class provides methods for creating, concatenating, and applying affine transformations. </p><pre><code>NSAffineTransform</code></pre></section>	https://developer.apple.com/reference/foundation/nsaffinetransform
NSAppleEventDescriptor	A							https://developer.apple.com/reference/foundation/nsappleeventdescriptor			<section class="prog__container"><p>An instance of NSAppleEventDescriptor represents a descriptor—the basic building block for Apple events. This class is a wrapper for the underlying Apple event descriptor data type, AEDesc. Scriptable Cocoa applications frequently work with instances of NSAppleEventDescriptor, but should rarely need to work directly with the AEDesc data structure.</p><pre><code>NSAppleEventDescriptor</code></pre></section>	https://developer.apple.com/reference/foundation/nsappleeventdescriptor
NSAppleEventManager	A							https://developer.apple.com/reference/foundation/nsappleeventmanager			<section class="prog__container"><p>Provides a mechanism for registering handler routines for specific types of Apple events and dispatching events to those handlers.</p><pre><code>NSAppleEventManager</code></pre></section>	https://developer.apple.com/reference/foundation/nsappleeventmanager
NSAppleScript	A							https://developer.apple.com/reference/foundation/nsapplescript			<section class="prog__container"><p>The NSAppleScript class provides the ability to load, compile, and execute scripts.</p><pre><code>NSAppleScript</code></pre></section>	https://developer.apple.com/reference/foundation/nsapplescript
NSArchiver	A							https://developer.apple.com/reference/foundation/nsarchiver			<section class="prog__container"><p>NSArchiver, a concrete subclass of NSCoder, provides a way to encode objects into an architecture-independent format that can be stored in a file. When you archive a graph of objects, the class information and instance variables for each object are written to the archive. NSArchiver's companion class, NSUnarchiver, decodes the data in an archive and creates a graph of objects equivalent to the original set.</p><pre><code>NSArchiver</code></pre></section>	https://developer.apple.com/reference/foundation/nsarchiver
NSArray	A							https://developer.apple.com/reference/foundation/nsarray			<section class="prog__container"><p>NSArray and its subclass NSMutableArray manage ordered collections of objects called arrays. NSArray creates static arrays, and NSMutableArray creates dynamic arrays. You can use arrays when you need an ordered collection of objects.</p><pre><code>NSArray</code></pre></section>	https://developer.apple.com/reference/foundation/nsarray
NSAssertionHandler	A							https://developer.apple.com/reference/foundation/nsassertionhandler			<section class="prog__container"><p>NSAssertionHandler objects are automatically created to handle false assertions. Assertion macros, such as NSAssert and NSCAssert, are used to evaluate a condition, and, if the condition evaluates to false, the macros pass a string to an NSAssertionHandler object describing the failure. Each thread has its own NSAssertionHandler object. When invoked, an assertion handler prints an error message that includes the method and class (or function) containing the assertion and raises an NSInternalInconsistencyException.</p><pre><code>NSAssertionHandler</code></pre></section>	https://developer.apple.com/reference/foundation/nsassertionhandler
NSAttributedString	A							https://developer.apple.com/reference/foundation/nsattributedstring			<section class="prog__container"><p>An NSAttributedString object manages character strings and associated sets of attributes (for example, font and kerning) that apply to individual characters or ranges of characters in the string. An association of characters and their attributes is called an attributed string. The cluster’s two public classes, NSAttributedString and NSMutableAttributedString, declare the programmatic interface for read-only attributed strings and modifiable attributed strings, respectively.</p><pre><code>NSAttributedString</code></pre></section>	https://developer.apple.com/reference/foundation/nsattributedstring
NSBackgroundActivityScheduler	A							https://developer.apple.com/reference/foundation/nsbackgroundactivityscheduler			<section class="prog__container"><p>An NSBackgroundActivityScheduler object is used to schedule an arbitrary maintenance or background task. It’s similar to an Timer object, in that it lets you schedule a repeating or nonrepeating task. However, NSBackgroundActivityScheduler gives the system flexibility to determine the most efficient time to execute based on energy usage, thermal conditions, and CPU use.</p><pre><code>NSBackgroundActivityScheduler</code></pre></section>	https://developer.apple.com/reference/foundation/nsbackgroundactivityscheduler
NSBundleResourceRequest	A							https://developer.apple.com/reference/foundation/nsbundleresourcerequest			<section class="prog__container"><p>An NSBundleResourceRequest object manages the availability of on-demand resources. On-demand resources are app contents hosted on the App Store that you download only when you need them.</p><pre><code>NSBundleResourceRequest</code></pre></section>	https://developer.apple.com/reference/foundation/nsbundleresourcerequest
NSCache	A							https://developer.apple.com/reference/foundation/nscache			<section class="prog__container"><p>An NSCache object is a mutable collection that stores key-value pairs, similar to an NSDictionary object. The NSCache class provides a programmatic interface to adding and removing objects and setting eviction policies based on the total cost and number of objects in the cache.</p><pre><code>NSCache</code></pre></section>	https://developer.apple.com/reference/foundation/nscache
NSCacheDelegate	A							https://developer.apple.com/reference/foundation/nscachedelegate			<section class="prog__container"><p>The delegate of an NSCache object implements this protocol to perform specialized actions when an object is about to be evicted or removed from the cache.</p><pre><code>NSCache</code></pre></section>	https://developer.apple.com/reference/foundation/nscachedelegate
NSCalendar	A							https://developer.apple.com/reference/foundation/nscalendar			<section class="prog__container"><p>NSCalendar objects encapsulate information about systems of reckoning time in which the beginning, length, and divisions of a year are defined. They provide information about the calendar and support for calendrical computations such as determining the range of a given calendrical unit and adding units to a given absolute time.</p><pre><code>NSCalendar</code></pre></section>	https://developer.apple.com/reference/foundation/nscalendar
NSCharacterSet	A							https://developer.apple.com/reference/foundation/nscharacterset			<section class="prog__container"><p>An NSCharacterSet object represents a set of Unicode-compliant characters. NSString and NSScanner objects use NSCharacterSet objects to group characters together for searching operations, so that they can find any of a particular set of characters during a search. The cluster’s two public classes, NSCharacterSet and NSMutableCharacterSet, declare the programmatic interface for static and dynamic character sets, respectively.</p><pre><code>NSCharacterSet</code></pre></section>	https://developer.apple.com/reference/foundation/nscharacterset
NSClassDescription	A							https://developer.apple.com/reference/foundation/nsclassdescription			<section class="prog__container"><p>NSClassDescription is an abstract class that provides the interface for querying the relationships and properties of a class. Concrete subclasses of NSClassDescription provide the available attributes of objects of a particular class and the relationships between that class and other classes. Defining these relationships between classes allows for more intelligent and flexible manipulation of objects with key-value coding.</p><pre><code>NSClassDescription</code></pre></section>	https://developer.apple.com/reference/foundation/nsclassdescription
NSCloneCommand	A							https://developer.apple.com/reference/foundation/nsclonecommand			<section class="prog__container"><p>An instance of NSCloneCommand clones the specified scriptable object or objects (such as words, paragraphs, images, and so on) and inserts them in the specified location, or the default location if no location is specified. The cloned scriptable objects typically correspond to objects in the application, but aren’t required to. This command corresponds to AppleScript’s duplicate command.</p><pre><code>NSCloneCommand</code></pre></section>	https://developer.apple.com/reference/foundation/nsclonecommand
NSCloseCommand	A							https://developer.apple.com/reference/foundation/nsclosecommand			<section class="prog__container"><p>An instance of NSCloseCommand closes the specified scriptable object or objects—typically a document or window (and its associated document, if any). The command may optionally specify a location to save in and how to handle modified documents (by automatically saving changes, not saving them, or asking the user).</p><pre><code>NSCloseCommand</code></pre></section>	https://developer.apple.com/reference/foundation/nsclosecommand
NSCoder	A							https://developer.apple.com/reference/foundation/nscoder			<section class="prog__container"><p>The NSCoder abstract class declares the interface used by concrete subclasses to transfer objects and other values between memory and some other format. This capability provides the basis for archiving (where objects and data items are stored on disk) and distribution (where objects and data items are copied between different processes or threads). The concrete subclasses provided by Foundation for these purposes are NSArchiver, NSUnarchiver, NSKeyedArchiver, NSKeyedUnarchiver, and NSPortCoder. Concrete subclasses of NSCoder are referred to in general as coder classes, and instances of these classes as coder objects (or simply coders). A coder object that can only encode values is referred to as an encoder object, and one that can only decode values as a decoder object.</p><pre><code>NSCoder</code></pre></section>	https://developer.apple.com/reference/foundation/nscoder
NSCoding	A							https://developer.apple.com/reference/foundation/nscoding			<section class="prog__container"><p>The NSCoding protocol declares the two methods that a class must implement so that instances of that class can be encoded and decoded. This capability provides the basis for archiving (where objects and other structures are stored on disk) and distribution (where objects are copied to different address spaces).</p><pre><code>NSCoding</code></pre></section>	https://developer.apple.com/reference/foundation/nscoding
NSComparisonMethods	A							https://developer.apple.com/reference/foundation/nscomparisonmethods			<section class="prog__container"><p>This informal protocol defines a set of default comparison methods useful for the comparisons in NSSpecifierTest. </p><pre><code>NSSpecifierTest</code></pre></section>	https://developer.apple.com/reference/foundation/nscomparisonmethods
NSComparisonPredicate	A							https://developer.apple.com/reference/foundation/nscomparisonpredicate			<section class="prog__container"><p>NSComparisonPredicate is a subclass of NSPredicate that you use to compare expressions.</p><pre><code>NSComparisonPredicate</code></pre></section>	https://developer.apple.com/reference/foundation/nscomparisonpredicate
NSCompoundPredicate	A							https://developer.apple.com/reference/foundation/nscompoundpredicate			<section class="prog__container"><p>NSCompoundPredicate is a subclass of NSPredicate used to represent logical “gate” operations (AND/OR/NOT) and comparison operations.</p><pre><code>NSCompoundPredicate</code></pre></section>	https://developer.apple.com/reference/foundation/nscompoundpredicate
NSCondition	A							https://developer.apple.com/reference/foundation/nscondition			<section class="prog__container"><p>The NSCondition class implements a condition variable whose semantics follow those used for POSIX-style conditions. A condition object acts as both a lock and a checkpoint in a given thread. The lock protects your code while it tests the condition and performs the task triggered by the condition. The checkpoint behavior requires that the condition be true before the thread proceeds with its task. While the condition is not true, the thread blocks. It remains blocked until another thread signals the condition object. </p><pre><code>NSCondition</code></pre></section>	https://developer.apple.com/reference/foundation/nscondition
NSConditionLock	A							https://developer.apple.com/reference/foundation/nsconditionlock			<section class="prog__container"><p>The NSConditionLock class defines objects whose locks can be associated with specific, user-defined conditions. Using an NSConditionLock object, you can ensure that a thread can acquire a lock only if a certain condition is met. Once it has acquired the lock and executed the critical section of code, the thread can relinquish the lock and set the associated condition to something new. The conditions themselves are arbitrary: you define them as needed for your application.</p><pre><code>NSConditionLock</code></pre></section>	https://developer.apple.com/reference/foundation/nsconditionlock
NSCopying	A							https://developer.apple.com/reference/foundation/nscopying			<section class="prog__container"><p>The NSCopying protocol declares a method for providing functional copies of an object. The exact meaning of “copy” can vary from class to class, but a copy must be a functionally independent object with values identical to the original at the time the copy was made. A copy produced with NSCopying is implicitly retained by the sender, who is responsible for releasing it.</p><pre><code>NSCopying</code></pre></section>	https://developer.apple.com/reference/foundation/nscopying
NSCountCommand	A							https://developer.apple.com/reference/foundation/nscountcommand			<section class="prog__container"><p>An instance of NSCountCommand counts the number of objects of a specified class in the specified object container (such as the number of words in a paragraph or document) and returns the result.</p><pre><code>NSCountCommand</code></pre></section>	https://developer.apple.com/reference/foundation/nscountcommand
NSCountedSet	A							https://developer.apple.com/reference/foundation/nscountedset			<section class="prog__container"><p>The NSCountedSet class declares the programmatic interface to a mutable, unordered collection of distinct objects. A counted set is also known as a bag.</p><pre><code>NSCountedSet</code></pre></section>	https://developer.apple.com/reference/foundation/nscountedset
NSCreateCommand	A							https://developer.apple.com/reference/foundation/nscreatecommand			<section class="prog__container"><p>An instance of NSCreateCommand creates the specified scriptable object (such as a document), optionally supplying the new object with the specified attributes. This command corresponds to AppleScript’s make command.</p><pre><code>NSCreateCommand</code></pre></section>	https://developer.apple.com/reference/foundation/nscreatecommand
NSData	A							https://developer.apple.com/reference/foundation/nsdata			<section class="prog__container"><p>NSData and its mutable subclass NSMutableData provide data objects, object-oriented wrappers for byte buffers. Data objects let simple allocated buffers (that is, data with no embedded pointers) take on the behavior of Foundation objects. </p><pre><code>NSData</code></pre></section>	https://developer.apple.com/reference/foundation/nsdata
NSDataDetector	A							https://developer.apple.com/reference/foundation/nsdatadetector			<section class="prog__container"><p>The NSDataDetector class is a specialized subclass of NSRegularExpression designed to match natural language text for predefined data patterns.</p><pre><code>NSDataDetector</code></pre></section>	https://developer.apple.com/reference/foundation/nsdatadetector
NSDate	A							https://developer.apple.com/reference/foundation/nsdate			<section class="prog__container"><p>NSDate objects encapsulate a single point in time, independent of any particular calendrical system or time zone. Date objects are immutable, representing an invariant time interval relative to an absolute reference date (00:00:00 UTC on 1 January 2001).</p><pre><code>NSDate</code></pre></section>	https://developer.apple.com/reference/foundation/nsdate
NSDateComponents	A							https://developer.apple.com/reference/foundation/nsdatecomponents			<section class="prog__container"><p>NSDateComponents encapsulates the components of a date in an extendable, object-oriented manner. It is used to specify a date by providing the temporal components that make up a date and time: hour, minutes, seconds, day, month, year, and so on. It can also be used to specify a duration of time, for example, 5 hours and 16 minutes. An NSDateComponents object is not required to define all the component fields. When a new instance of NSDateComponents is created the date components are set to NSDateComponentUndefined.</p><pre><code>NSDateComponents</code></pre></section>	https://developer.apple.com/reference/foundation/nsdatecomponents
NSDateInterval	A							https://developer.apple.com/reference/foundation/nsdateinterval			<section class="prog__container"><p>An NSDateInterval object represents a closed interval between two dates. The NSDateInterval class provides a programmatic interface for calculating the duration of a time interval and determining whether a date falls within it, as well as comparing date intervals and checking to see whether they intersect.</p><pre><code>NSDateInterval</code></pre></section>	https://developer.apple.com/reference/foundation/nsdateinterval
NSDecimalNumber	A							https://developer.apple.com/reference/foundation/nsdecimalnumber			<section class="prog__container"><p>NSDecimalNumber, an immutable subclass of NSNumber, provides an object-oriented wrapper for doing base-10 arithmetic. An instance can represent any number that can be expressed as mantissa x 10^exponent where mantissa is a decimal integer up to 38 digits long, and exponent is an integer from –128 through 127.</p><pre><code>NSDecimalNumber</code></pre></section>	https://developer.apple.com/reference/foundation/nsdecimalnumber
NSDecimalNumberBehaviors	A							https://developer.apple.com/reference/foundation/nsdecimalnumberbehaviors			<section class="prog__container"><p>The NSDecimalBehaviors protocol declares three methods that control the discretionary aspects of working with NSDecimalNumber objects.</p><pre><code>NSDecimalBehaviors</code></pre></section>	https://developer.apple.com/reference/foundation/nsdecimalnumberbehaviors
NSDecimalNumberHandler	A							https://developer.apple.com/reference/foundation/nsdecimalnumberhandler			<section class="prog__container"><p>NSDecimalNumberHandler is a class that adopts the NSDecimalNumberBehaviors protocol. This class allows you to set the way an NSDecimalNumber object rounds off and handles errors, without having to create a custom class.</p><pre><code>NSDecimalNumberHandler</code></pre></section>	https://developer.apple.com/reference/foundation/nsdecimalnumberhandler
NSDeleteCommand	A							https://developer.apple.com/reference/foundation/nsdeletecommand			<section class="prog__container"><p>An instance of NSDeleteCommand deletes the specified scriptable object or objects (such as words, paragraphs, and so on).</p><pre><code>NSDeleteCommand</code></pre></section>	https://developer.apple.com/reference/foundation/nsdeletecommand
NSDictionary	A							https://developer.apple.com/reference/foundation/nsdictionary			<section class="prog__container"><p>The NSDictionary class declares the programmatic interface to objects that manage immutable associations of keys and values. Use this class or its subclass NSMutableDictionary when you need a convenient and efficient way to retrieve data associated with an arbitrary key. NSDictionary creates static dictionaries, and NSMutableDictionary creates dynamic dictionaries. (For convenience, the term dictionary refers to any instance of one of these classes without specifying its exact class membership.)</p><pre><code>NSDictionary</code></pre></section>	https://developer.apple.com/reference/foundation/nsdictionary
NSDiscardableContent	A							https://developer.apple.com/reference/foundation/nsdiscardablecontent			<section class="prog__container"><p>You implement this protocol when a class’s objects have subcomponents that can be discarded when not being used, thereby giving an application a smaller memory footprint.</p><pre><code>NSDiscardableContent</code></pre></section>	https://developer.apple.com/reference/foundation/nsdiscardablecontent
NSDistributedLock	A							https://developer.apple.com/reference/foundation/nsdistributedlock			<section class="prog__container"><p>The NSDistributedLock class defines an object that multiple applications on multiple hosts can use to restrict access to some shared resource, such as a file.</p><pre><code>NSDistributedLock</code></pre></section>	https://developer.apple.com/reference/foundation/nsdistributedlock
NSEnumerator	A							https://developer.apple.com/reference/foundation/nsenumerator			<section class="prog__container"><p>NSEnumerator is an abstract class, instances of whose subclasses enumerate collections of other objects, such as arrays and dictionaries.</p><pre><code>NSEnumerator</code></pre></section>	https://developer.apple.com/reference/foundation/nsenumerator
NSError	A							https://developer.apple.com/reference/foundation/nserror			<section class="prog__container"><p>An NSError object encapsulates information about an error condition in an extendable, object-oriented manner. It consists of a predefined error domain, a domain-specific error code, and a user info dictionary containing application-specific information.</p><pre><code>NSError</code></pre></section>	https://developer.apple.com/reference/foundation/nserror
NSErrorRecoveryAttempting	A							https://developer.apple.com/reference/foundation/nserrorrecoveryattempting			<section class="prog__container"><p>The NSErrorRecoveryAttempting informal protocol provides methods that allow your application to attempt to recover from an error. These methods are invoked when an NSError object is returned that specifies the implementing object as the error recoveryAttempter and the user has selected one of the error’s localized recovery options.</p><pre><code>NSErrorRecoveryAttempting</code></pre></section>	https://developer.apple.com/reference/foundation/nserrorrecoveryattempting
NSException	A							https://developer.apple.com/reference/foundation/nsexception			<section class="prog__container"><p>NSException is used to implement exception handling and contains information about an exception. An exception is a special condition that interrupts the normal flow of program execution. Each application can interrupt the program for different reasons. For example, one application might interpret saving a file in a directory that is write-protected as an exception. In this sense, the exception is equivalent to an error. Another application might interpret the user’s key-press (for example, Control-C) as an exception: an indication that a long-running process should be aborted.</p><pre><code>NSException</code></pre></section>	https://developer.apple.com/reference/foundation/nsexception
NSExistsCommand	A							https://developer.apple.com/reference/foundation/nsexistscommand			<section class="prog__container"><p>An instance of NSExistsCommand determines whether a specified scriptable object, such as a word, paragraph, or image, exists.</p><pre><code>NSExistsCommand</code></pre></section>	https://developer.apple.com/reference/foundation/nsexistscommand
NSExpression	A							https://developer.apple.com/reference/foundation/nsexpression			<section class="prog__container"><p>NSExpression is used to represent expressions in a predicate.</p><pre><code>NSExpression</code></pre></section>	https://developer.apple.com/reference/foundation/nsexpression
NSExtensionContext	A							https://developer.apple.com/reference/foundation/nsextensioncontext			<section class="prog__container"><p>Represents the host app context from which an app extension is invoked.</p><pre><code>inputItems</code></pre></section>	https://developer.apple.com/reference/foundation/nsextensioncontext
NSExtensionItem	A							https://developer.apple.com/reference/foundation/nsextensionitem			<section class="prog__container"><p>An NSExtensionItem object is an immutable collection of values representing different aspects of an item for the extension to act upon.</p><pre><code>NSExtensionItem</code></pre></section>	https://developer.apple.com/reference/foundation/nsextensionitem
NSExtensionRequestHandling	A							https://developer.apple.com/reference/foundation/nsextensionrequesthandling			<section class="prog__container"><p>The NSExtensionRequestHandling protocol provides a life cycle hook into an app extension. An extension’s principal object can implement this protocol and use beginRequest(with:) to keep track of the request from a host app.</p><pre><code>NSExtensionRequestHandling</code></pre></section>	https://developer.apple.com/reference/foundation/nsextensionrequesthandling
NSFastEnumeration	A							https://developer.apple.com/reference/foundation/nsfastenumeration			<section class="prog__container"><p>The fast enumeration protocol NSFastEnumeration must be adopted and implemented by objects used in conjunction with the for language construct used in conjunction with Cocoa objects.</p><pre><code>NSFastEnumeration</code></pre></section>	https://developer.apple.com/reference/foundation/nsfastenumeration
NSFileAccessIntent	A							https://developer.apple.com/reference/foundation/nsfileaccessintent			<section class="prog__container"><p>The NSFileAccessIntent class stores the details of coordinated-read and coordinated-write operations. Use this class when performing asynchronous operations with a file coordinator using the coordinator’s coordinate(with:queue:byAccessor:) method.</p><pre><code>NSFileAccessIntent</code></pre></section>	https://developer.apple.com/reference/foundation/nsfileaccessintent
NSFileCoordinator	A							https://developer.apple.com/reference/foundation/nsfilecoordinator			<section class="prog__container"><p>The NSFileCoordinator class coordinates the reading and writing of files and directories among multiple processes and objects in the same process. You use instances of this class as is to read from, write to, modify the attributes of, change the location of, or delete a file or directory, but before your code to perform those actions executes, the file coordinator lets registered file presenter objects perform any tasks that they might require to ensure their own integrity. For example, if you want to change the location of a file, other objects interested in that file need to know where you intend to move it so that they can update their references.</p><pre><code>NSFileCoordinator</code></pre></section>	https://developer.apple.com/reference/foundation/nsfilecoordinator
NSFilePresenter	A							https://developer.apple.com/reference/foundation/nsfilepresenter			<section class="prog__container"><p>The NSFilePresenter protocol should be implemented by objects that allow the user to view or edit the content of files or directories. You use file presenters in conjunction with an NSFileCoordinator object to coordinate access to a file or directory among the objects of your application and between your application and other processes. When changes to an item occur, the system notifies objects that adopt this protocol and gives them a chance to respond appropriately. </p><pre><code>NSFilePresenter</code></pre></section>	https://developer.apple.com/reference/foundation/nsfilepresenter
NSFileSecurity	A							https://developer.apple.com/reference/foundation/nsfilesecurity			<section class="prog__container"><p>The NSFileSecurity class is an Objective-C stub class that is transparently bridged to CFFileSecurity. It is used to encapsulate security information about a file. This class contains no methods. To access the contents of this object, use the accessor functions described in CFFileSecurity.</p><pre><code>NSFileSecurity</code></pre></section>	https://developer.apple.com/reference/foundation/nsfilesecurity
NSFileVersion	A							https://developer.apple.com/reference/foundation/nsfileversion			<section class="prog__container"><p>An NSFileVersion object represents a snapshot of a file at a specific point in time. Use the methods of this class to access, create, and manage file revisions in your app.</p><pre><code>NSFileVersion</code></pre></section>	https://developer.apple.com/reference/foundation/nsfileversion
NSGetCommand	A							https://developer.apple.com/reference/foundation/nsgetcommand			<section class="prog__container"><p>An instance of NSGetCommand gets the specified value or object from the specified scriptable object: for example, the words from a paragraph or the name of a document.</p><pre><code>NSGetCommand</code></pre></section>	https://developer.apple.com/reference/foundation/nsgetcommand
NSHashTable	A							https://developer.apple.com/reference/foundation/nshashtable			<section class="prog__container"><p>NSHashTable is modeled after NSSet but provides different options, in particular to support weak relationships.</p><pre><code>NSHashTable</code></pre></section>	https://developer.apple.com/reference/foundation/nshashtable
NSIndexPath	A							https://developer.apple.com/reference/foundation/nsindexpath			<section class="prog__container"><p>The NSIndexPath class represents the path to a specific node in a tree of nested array collections. This path is known as an index path.</p><pre><code>NSIndexPath</code></pre></section>	https://developer.apple.com/reference/foundation/nsindexpath
NSIndexSet	A							https://developer.apple.com/reference/foundation/nsindexset			<section class="prog__container"><p>The NSIndexSet class represents an immutable collection of unique unsigned integers, known as indexes because of the way they are used. This collection is referred to as an index set. Indexes must be in the range 0 .. NSNotFound - 1.</p><pre><code>NSIndexSet</code></pre></section>	https://developer.apple.com/reference/foundation/nsindexset
NSIndexSpecifier	A							https://developer.apple.com/reference/foundation/nsindexspecifier			<section class="prog__container"><p>The NSIndexSpecifier class represents an object in a collection (or container) with an index number. The script terms first and front specify the object with index 0, while last specifies the object with index of count-1. A negative index indicates a location by counting backward from the last object in the collection.</p><pre><code>NSIndexSpecifier</code></pre></section>	https://developer.apple.com/reference/foundation/nsindexspecifier
NSItemProvider	A							https://developer.apple.com/reference/foundation/nsitemprovider			<section class="prog__container"><p>An NSItemProvider object provides a lazy and secure way to convey data between a host app and extension. An item provider object wraps data such as text, images, or URLs and stores type information to help processes identify that data. When you actually want the data in an item provider, you load it asynchronously, which gives the item provider time to transfer it from another process as needed. </p><pre><code>NSItemProvider</code></pre></section>	https://developer.apple.com/reference/foundation/nsitemprovider
NSKeyedArchiver	A							https://developer.apple.com/reference/foundation/nskeyedarchiver			<section class="prog__container"><p>NSKeyedArchiver, a concrete subclass of NSCoder, provides a way to encode objects (and scalar values) into an architecture-independent format that can be stored in a file. When you archive a set of objects, the class information and instance variables for each object are written to the archive. NSKeyedArchiver’s companion class, NSKeyedUnarchiver, decodes the data in an archive and creates a set of objects equivalent to the original set.</p><pre><code>NSKeyedArchiver</code></pre></section>	https://developer.apple.com/reference/foundation/nskeyedarchiver
NSKeyedArchiverDelegate	A							https://developer.apple.com/reference/foundation/nskeyedarchiverdelegate			<section class="prog__container"><p>The NSKeyedArchiverDelegate protocol defines the optional methods implemented by delegates of NSKeyedArchiver objects.</p><pre><code>NSKeyedArchiverDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/nskeyedarchiverdelegate
NSKeyedUnarchiver	A							https://developer.apple.com/reference/foundation/nskeyedunarchiver			<section class="prog__container"><p>NSKeyedUnarchiver, a concrete subclass of NSCoder, defines methods for decoding a set of named objects (and scalar values) from a keyed archive. Such archives are produced by instances of the NSKeyedArchiver class.</p><pre><code>NSKeyedUnarchiver</code></pre></section>	https://developer.apple.com/reference/foundation/nskeyedunarchiver
NSKeyedUnarchiverDelegate	A							https://developer.apple.com/reference/foundation/nskeyedunarchiverdelegate			<section class="prog__container"><p>The NSKeyedUnarchiverDelegate protocol defines the optional methods implemented by delegates of NSKeyedUnarchiver objects.</p><pre><code>NSKeyedUnarchiverDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/nskeyedunarchiverdelegate
NSKeyValueCoding	A							https://developer.apple.com/reference/foundation/nskeyvaluecoding			<section class="prog__container"><p>The NSKeyValueCoding informal protocol defines a mechanism by which you can access the properties of an object indirectly by name (or key), rather than directly through invocation of an accessor method or as instance variables. Thus, all of an object’s properties can be accessed in a consistent manner.</p><pre><code>NSKeyValueCoding</code></pre></section>	https://developer.apple.com/reference/foundation/nskeyvaluecoding
NSKeyValueObserving	A							https://developer.apple.com/reference/foundation/nskeyvalueobserving			<section class="prog__container"><p>The NSKeyValueObserving (KVO) informal protocol defines a mechanism that allows objects to be notified of changes to the specified properties of other objects.</p><pre><code>NSKeyValueObserving</code></pre></section>	https://developer.apple.com/reference/foundation/nskeyvalueobserving
NSLinguisticTagger	A							https://developer.apple.com/reference/foundation/nslinguistictagger			<section class="prog__container"><p>The NSLinguisticTagger class is used to automatically segment natural-language text and tag it with information, such as parts of speech. It can also tag languages, scripts, stem forms of words, etc. An instance of this class is assigned a string to tag, and clients can then obtain tags and ranges for tokens in that string appropriate to a given tag scheme.</p><pre><code>NSLinguisticTagger</code></pre></section>	https://developer.apple.com/reference/foundation/nslinguistictagger
NSLocale	A							https://developer.apple.com/reference/foundation/nslocale			<section class="prog__container"><p>NSLocale objects encapsulate information about linguistic, cultural, and technological conventions and standards. Examples of information encapsulated by a locale include the symbol used for the decimal separator in numbers and the way dates are formatted.</p><pre><code>NSLocale</code></pre></section>	https://developer.apple.com/reference/foundation/nslocale
NSLock	A							https://developer.apple.com/reference/foundation/nslock			<section class="prog__container"><p>An NSLock object is used to coordinate the operation of multiple threads of execution within the same application. An NSLock object can be used to mediate access to an application’s global data or to protect a critical section of code, allowing it to run atomically.</p><pre><code>NSLock</code></pre></section>	https://developer.apple.com/reference/foundation/nslock
NSLocking	A							https://developer.apple.com/reference/foundation/nslocking			<section class="prog__container"><p>The NSLocking protocol declares the elementary methods adopted by classes that define lock objects. A lock object is used to coordinate the actions of multiple threads of execution within a single application. By using a lock object, an application can protect critical sections of code from being executed simultaneously by separate threads, thus protecting shared data and other shared resources from corruption.</p><pre><code>NSLocking</code></pre></section>	https://developer.apple.com/reference/foundation/nslocking
NSLogicalTest	A							https://developer.apple.com/reference/foundation/nslogicaltest			<section class="prog__container"><p>Instances of this class perform logical operations of AND, OR, and NOT on Boolean expressions represented by NSSpecifierTest objects. These operators are equivalent to “&&”, “||”, and “!” in the C language.</p><pre><code>AND</code></pre></section>	https://developer.apple.com/reference/foundation/nslogicaltest
NSMachPort	A							https://developer.apple.com/reference/foundation/nsmachport			<section class="prog__container"><p>NSMachPort is a subclass of Port that can be used as an endpoint for distributed object connections (or raw messaging). NSMachPort is an object wrapper for a Mach port, the fundamental communication port in macOS. NSMachPort allows for local (on the same machine) communication only. A companion class, SocketPort, allows for both local and remote distributed object communication, but may be more expensive than NSMachPort for the local case.</p><pre><code>NSMachPort</code></pre></section>	https://developer.apple.com/reference/foundation/nsmachport
NSMachPortDelegate	A							https://developer.apple.com/reference/foundation/nsmachportdelegate			<section class="prog__container"><p>The NSMachPortDelegate protocol defines the optional methods implemented by delegates of NSMachPort objects.</p><pre><code>NSMachPortDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/nsmachportdelegate
NSMapTable	A							https://developer.apple.com/reference/foundation/nsmaptable			<section class="prog__container"><p>The NSMapTable class is a mutable collection modeled after NSDictionary, with the following differences:</p><pre><code>NSMapTable</code></pre></section>	https://developer.apple.com/reference/foundation/nsmaptable
NSMeasurement	A							https://developer.apple.com/reference/foundation/nsmeasurement			<section class="prog__container"><p>An NSMeasurement object represents a quantity and unit of measure. The NSMeasurement class provides a programmatic interface to converting measurements into different units, as well as calculating the sum or difference between two measurements.</p><pre><code>NSMeasurement</code></pre></section>	https://developer.apple.com/reference/foundation/nsmeasurement
NSMetadataItem	A							https://developer.apple.com/reference/foundation/nsmetadataitem			<section class="prog__container"><p>The NSMetadataItem class represents the metadata associated with a file, providing a simple interface to retrieve the available attribute names and values.</p><pre><code>NSMetadataItem</code></pre></section>	https://developer.apple.com/reference/foundation/nsmetadataitem
NSMetadataQuery	A							https://developer.apple.com/reference/foundation/nsmetadataquery			<section class="prog__container"><p>The NSMetadataQuery class encapsulates the functionality provided by the MDQuery opaque type for querying the Spotlight metadata.</p><pre><code>NSMetadataQuery</code></pre></section>	https://developer.apple.com/reference/foundation/nsmetadataquery
NSMetadataQueryAttributeValueTuple	A							https://developer.apple.com/reference/foundation/nsmetadataqueryattributevaluetuple			<section class="prog__container"><p>The NSMetadataQueryAttributeValueTuple class represents attribute-value tuples, which are objects that contain the attribute name and value of a metadata attribute.</p><pre><code>NSMetadataQueryAttributeValueTuple</code></pre></section>	https://developer.apple.com/reference/foundation/nsmetadataqueryattributevaluetuple
NSMetadataQueryDelegate	A							https://developer.apple.com/reference/foundation/nsmetadataquerydelegate			<section class="prog__container"><p>The NSMetadataQueryDelegate protocol defines the optional methods implemented by delegates of NSMetadataQuery objects.</p><pre><code>NSMetadataQueryDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/nsmetadataquerydelegate
NSMetadataQueryResultGroup	A							https://developer.apple.com/reference/foundation/nsmetadataqueryresultgroup			<section class="prog__container"><p>The NSMetadataQueryResultGroup class represents a collection of grouped attribute results returned by an NSMetadataQuery object.</p><pre><code>NSMetadataQueryResultGroup</code></pre></section>	https://developer.apple.com/reference/foundation/nsmetadataqueryresultgroup
NSMiddleSpecifier	A							https://developer.apple.com/reference/foundation/nsmiddlespecifier			<section class="prog__container"><p>Specifies the middle object in a collection or, if not a one-to-many relationship, the sole object. You don’t normally subclass NSMiddleSpecifier.</p><pre><code>NSMiddleSpecifier</code></pre></section>	https://developer.apple.com/reference/foundation/nsmiddlespecifier
NSMoveCommand	A							https://developer.apple.com/reference/foundation/nsmovecommand			<section class="prog__container"><p>An instance of NSMoveCommand moves the specified scriptable object or objects; for example, it may move words to a new location in a document or a file to a new directory.</p><pre><code>NSMoveCommand</code></pre></section>	https://developer.apple.com/reference/foundation/nsmovecommand
NSMutableArray	A							https://developer.apple.com/reference/foundation/nsmutablearray			<section class="prog__container"><p>The NSMutableArray class declares the programmatic interface to objects that manage a modifiable array of objects. This class adds insertion and deletion operations to the basic array-handling behavior inherited from NSArray.</p><pre><code>NSMutableArray</code></pre></section>	https://developer.apple.com/reference/foundation/nsmutablearray
NSMutableAttributedString	A							https://developer.apple.com/reference/foundation/nsmutableattributedstring			<section class="prog__container"><p>The NSMutableAttributedString class declares additional methods for mutating the content of an attributed string. You can add and remove characters (raw strings) and attributes separately or together as attributed strings. See the class description for NSAttributedString for more information about attributed strings.</p><pre><code>NSMutableAttributedString</code></pre></section>	https://developer.apple.com/reference/foundation/nsmutableattributedstring
NSMutableCharacterSet	A							https://developer.apple.com/reference/foundation/nsmutablecharacterset			<section class="prog__container"><p>The NSMutableCharacterSet class declares the programmatic interface to objects that manage a modifiable set of Unicode characters. You can add or remove characters from a mutable character set as numeric values in NSRange structures or as character values in strings, combine character sets by union or intersection, and invert a character set.</p><pre><code>NSMutableCharacterSet</code></pre></section>	https://developer.apple.com/reference/foundation/nsmutablecharacterset
NSMutableCopying	A							https://developer.apple.com/reference/foundation/nsmutablecopying			<section class="prog__container"><p>The NSMutableCopying protocol declares a method for providing mutable copies of an object. Only classes that define an “immutable vs. mutable” distinction should adopt this protocol. Classes that don’t define such a distinction should adopt NSCopying instead.</p><pre><code>NSMutableCopying</code></pre></section>	https://developer.apple.com/reference/foundation/nsmutablecopying
NSMutableData	A							https://developer.apple.com/reference/foundation/nsmutabledata			<section class="prog__container"><p>NSMutableData and its superclass NSData provide data objects, or object-oriented wrappers for byte buffers. Data objects let simple allocated buffers (that is, data with no embedded pointers) take on the behavior of Foundation objects. They are typically used for data storage and are also useful in Distributed Objects applications, where data contained in data objects can be copied or moved between applications. NSData creates static data objects, and NSMutableData creates dynamic data objects. You can easily convert one type of data object to the other with the initializer that takes an NSData object or an NSMutableData object as an argument.</p><pre><code>NSMutableData</code></pre></section>	https://developer.apple.com/reference/foundation/nsmutabledata
NSMutableDictionary	A							https://developer.apple.com/reference/foundation/nsmutabledictionary			<section class="prog__container"><p>The NSMutableDictionary class declares the programmatic interface to objects that manage mutable associations of keys and values. It adds modification operations to the basic operations it inherits from NSDictionary.</p><pre><code>NSMutableDictionary</code></pre></section>	https://developer.apple.com/reference/foundation/nsmutabledictionary
NSMutableIndexSet	A							https://developer.apple.com/reference/foundation/nsmutableindexset			<section class="prog__container"><p>The NSMutableIndexSet class represents a mutable collection of unique unsigned integers, known as indexes because of the way they are used. This collection is referred to as a mutable index set. The inclusive range of valid indexes is 0...(NSNotFound - 1); trying to use indexes outside this range is invalid.</p><pre><code>NSMutableIndexSet</code></pre></section>	https://developer.apple.com/reference/foundation/nsmutableindexset
NSMutableOrderedSet	A							https://developer.apple.com/reference/foundation/nsmutableorderedset			<section class="prog__container"><p>NSMutableOrderedSet class declares the programmatic interface to a mutable, ordered collection of distinct objects.</p><pre><code>NSMutableOrderedSet</code></pre></section>	https://developer.apple.com/reference/foundation/nsmutableorderedset
NSMutableSet	A							https://developer.apple.com/reference/foundation/nsmutableset			<section class="prog__container"><p>The NSMutableSet class declares the programmatic interface to a mutable, unordered collection of distinct objects.</p><pre><code>NSMutableSet</code></pre></section>	https://developer.apple.com/reference/foundation/nsmutableset
NSMutableString	A							https://developer.apple.com/reference/foundation/nsmutablestring			<section class="prog__container"><p>The NSMutableString class declares the programmatic interface to an object that manages a mutable string—that is, a string whose contents can be edited—that conceptually represents an array of Unicode characters. To construct and manage an immutable string—or a string that cannot be changed after it has been created—use an object of the NSString class.</p><pre><code>NSMutableString</code></pre></section>	https://developer.apple.com/reference/foundation/nsmutablestring
NSMutableURLRequest	A							https://developer.apple.com/reference/foundation/nsmutableurlrequest			<section class="prog__container"><p>NSMutableURLRequest is a subclass of NSURLRequest provided to aid developers who may find it more convenient to mutate a single request object for a series of URL load requests instead of creating an immutable NSURLRequest object for each load.</p><pre><code>NSMutableURLRequest</code></pre></section>	https://developer.apple.com/reference/foundation/nsmutableurlrequest
NSNotification	A							https://developer.apple.com/reference/foundation/nsnotification			<section class="prog__container"><p>NSNotification objects encapsulate information so that it can be broadcast to other objects by an NSNotificationCenter object. An NSNotification object (referred to as a notification) contains a name, an object, and an optional dictionary. The name is a tag identifying the notification. The object is any object that the poster of the notification wants to send to observers of that notification (typically, it is the object that posted the notification). The dictionary stores other related objects, if any. NSNotification objects are immutable objects.</p><pre><code>init(name:object:)</code></pre></section>	https://developer.apple.com/reference/foundation/nsnotification
NSNotification.Name	A							https://developer.apple.com/reference/foundation/nsnotification.name			<section class="prog__container"><p>The type used for the name of a notification. </p><pre><code>NSNotification</code></pre></section>	https://developer.apple.com/reference/foundation/nsnotification.name
NSNull	A							https://developer.apple.com/reference/foundation/nsnull			<section class="prog__container"><p>The NSNull class defines a singleton object used to represent null values in collection objects (which don’t allow nil values).</p><pre><code>NSNull</code></pre></section>	https://developer.apple.com/reference/foundation/nsnull
NSNumber	A							https://developer.apple.com/reference/foundation/nsnumber			<section class="prog__container"><p>NSNumber is a subclass of NSValue that offers a value as any C scalar (numeric) type. It defines a set of methods specifically for setting and accessing the value as a signed or unsigned char, short int, int, long int, long long int, float, or double or as a BOOL. (Note that number objects do not necessarily preserve the type they are created with.) It also defines a compare(_:) method to determine the ordering of two NSNumber objects.</p><pre><code>NSNumber</code></pre></section>	https://developer.apple.com/reference/foundation/nsnumber
NSOrderedSet	A							https://developer.apple.com/reference/foundation/nsorderedset			<section class="prog__container"><p>NSOrderedSet and its subclass, NSMutableOrderedSet, declare the programmatic interfaces to an ordered collection of objects.</p><pre><code>NSOrderedSet</code></pre></section>	https://developer.apple.com/reference/foundation/nsorderedset
NSOrthography	A							https://developer.apple.com/reference/foundation/nsorthography			<section class="prog__container"><p>The NSOrthography class describes the linguistic content of a piece of text, typically used for the purposes of spelling and grammar checking.</p><pre><code>NSOrthography</code></pre></section>	https://developer.apple.com/reference/foundation/nsorthography
NSPersonNameComponents	A							https://developer.apple.com/reference/foundation/nspersonnamecomponents			<section class="prog__container"><p>An NSPersonNameComponents object encapsulates the components of a person's name in an extendable, object-oriented manner. It is used to specify a person's name by providing the components comprising a full name: given name, middle name, family name, prefix, suffix, nickname, and phonetic representation.</p><pre><code>NSPersonNameComponents</code></pre></section>	https://developer.apple.com/reference/foundation/nspersonnamecomponents
NSPointerArray	A							https://developer.apple.com/reference/foundation/nspointerarray			<section class="prog__container"><p>The NSPointerArray class represents a mutable collection modeled after NSArray, but can also hold nil values. nil values may be inserted or removed and contribute to the object’s count. An NSPointerArray object can also increase and decrease its count directly.</p><pre><code>NSPointerArray</code></pre></section>	https://developer.apple.com/reference/foundation/nspointerarray
NSPointerFunctions	A							https://developer.apple.com/reference/foundation/nspointerfunctions			<section class="prog__container"><p>An instance of NSPointerFunctions defines callout functions appropriate for managing a pointer reference held somewhere else. </p><pre><code>NSPointerFunctions</code></pre></section>	https://developer.apple.com/reference/foundation/nspointerfunctions
NSPositionalSpecifier	A							https://developer.apple.com/reference/foundation/nspositionalspecifier			<section class="prog__container"><p>Instances of NSPositionalSpecifier specify an insertion point in a container relative to another object in the container, for example, before first word or after paragraph 4. The container is specified by an instance of NSScriptObjectSpecifier. NSPositionalSpecifier objects commonly encapsulate object specifiers used as arguments to the make (create) and move commands and indicate where the created or moved object is to be inserted relative to the object represented by an object specifier.</p><pre><code>NSPositionalSpecifier</code></pre></section>	https://developer.apple.com/reference/foundation/nspositionalspecifier
NSPredicate	A							https://developer.apple.com/reference/foundation/nspredicate			<section class="prog__container"><p>The NSPredicate class is used to define logical conditions used to constrain a search either for a fetch or for in-memory filtering.</p><pre><code>NSPredicate</code></pre></section>	https://developer.apple.com/reference/foundation/nspredicate
NSPropertySpecifier	A							https://developer.apple.com/reference/foundation/nspropertyspecifier			<section class="prog__container"><p>Specifies a simple attribute value, a one-to-one relationship, or all elements of a to-many relationship. You don’t normally subclass NSPropertySpecifier.</p><pre><code>NSPropertySpecifier</code></pre></section>	https://developer.apple.com/reference/foundation/nspropertyspecifier
NSProtocolChecker	A							https://developer.apple.com/reference/foundation/nsprotocolchecker			<section class="prog__container"><p>The NSProtocolChecker class defines an object that restricts the messages that can be sent to another object (referred to as the checker’s delegate). This fact can be particularly useful when an object with many methods, only a few of which ought to be remotely accessible, is made available using the distributed objects system.</p><pre><code>NSProtocolChecker</code></pre></section>	https://developer.apple.com/reference/foundation/nsprotocolchecker
NSProxy	A							https://developer.apple.com/reference/foundation/nsproxy			<section class="prog__container"><p>NSProxy is an abstract superclass defining an API for objects that act as stand-ins for other objects or for objects that don’t exist yet. Typically, a message to a proxy is forwarded to the real object or causes the proxy to load (or transform itself into) the real object. Subclasses of NSProxy can be used to implement transparent distributed messaging (for example, NSDistantObject) or for lazy instantiation of objects that are expensive to create.</p><pre><code>NSProxy</code></pre></section>	https://developer.apple.com/reference/foundation/nsproxy
NSPurgeableData	A							https://developer.apple.com/reference/foundation/nspurgeabledata			<section class="prog__container"><p>You should use the NSPurgeableData class when you have objects with bytes that can be discarded when no longer needed. Purging these bytes may be advantageous for your system, because doing so frees up memory needed by other applications. The NSPurgeableData class provides a default implementation of the NSDiscardableContent protocol, from which it inherits its interface.</p><pre><code>NSPurgeableData</code></pre></section>	https://developer.apple.com/reference/foundation/nspurgeabledata
NSQuitCommand	A							https://developer.apple.com/reference/foundation/nsquitcommand			<section class="prog__container"><p>An instance of NSQuitCommand quits the specified application. The command may optionally specify how to handle modified documents (automatically save changes, don’t save them, or ask the user). For details, see the description for the quit command in "Apple Events Sent By the Mac OS" in How Cocoa Applications Handle Apple Events inCocoa Scripting Guide.</p><pre><code>NSQuitCommand</code></pre></section>	https://developer.apple.com/reference/foundation/nsquitcommand
NSRandomSpecifier	A							https://developer.apple.com/reference/foundation/nsrandomspecifier			<section class="prog__container"><p>Specifies an arbitrary object in a collection or, if not a one-to-many relationship, the sole object.</p><pre><code>NSScriptObjectSpecifier</code></pre></section>	https://developer.apple.com/reference/foundation/nsrandomspecifier
NSRangeSpecifier	A							https://developer.apple.com/reference/foundation/nsrangespecifier			<section class="prog__container"><p>An NSRangeSpecifier object specifies a range (that is, an uninterrupted series) of objects in a container through two delimiting objects. The range is represented by two object specifiers, a start specifier and an end specifier, which can be of any specifier type (such as NSIndexSpecifier or NSWhoseSpecifier object). These specifiers are evaluated in the context of the same container object as the range specifier itself.</p><pre><code>NSRangeSpecifier</code></pre></section>	https://developer.apple.com/reference/foundation/nsrangespecifier
NSRecursiveLock	A							https://developer.apple.com/reference/foundation/nsrecursivelock			<section class="prog__container"><p>NSRecursiveLock defines a lock that may be acquired multiple times by the same thread without causing a deadlock, a situation where a thread is permanently blocked waiting for itself to relinquish a lock. While the locking thread has one or more locks, all other threads are prevented from accessing the code protected by the lock.</p><pre><code>NSRecursiveLock</code></pre></section>	https://developer.apple.com/reference/foundation/nsrecursivelock
NSRegularExpression	A							https://developer.apple.com/reference/foundation/nsregularexpression			<section class="prog__container"><p>The NSRegularExpression class is used to represent and apply regular expressions to Unicode strings. An instance of this class is an immutable representation of a compiled regular expression pattern and various option flags. The pattern syntax currently supported is that specified by ICU. The ICU regular expressions are described at http://userguide.icu-project.org/strings/regexp.</p><pre><code>NSRegularExpression</code></pre></section>	https://developer.apple.com/reference/foundation/nsregularexpression
NSRelativeSpecifier	A							https://developer.apple.com/reference/foundation/nsrelativespecifier			<section class="prog__container"><p>Specifies an object in a collection by its position relative to another object. You don’t normally subclass NSRelativeSpecifier.</p><pre><code>NSRelativeSpecifier</code></pre></section>	https://developer.apple.com/reference/foundation/nsrelativespecifier
NSScriptClassDescription	A							https://developer.apple.com/reference/foundation/nsscriptclassdescription			<section class="prog__container"><p>An instance of NSScriptClassDescription describes a script class that a Cocoa application supports.</p><pre><code>NSScriptClassDescription</code></pre></section>	https://developer.apple.com/reference/foundation/nsscriptclassdescription
NSScriptCoercionHandler	A							https://developer.apple.com/reference/foundation/nsscriptcoercionhandler			<section class="prog__container"><p>Provides a mechanism for converting one kind of scripting data to another. A shared instance of this class coerces (converts) object values to objects of another class, using information supplied by classes that register with it. Coercions frequently are required during key-value coding.</p><pre><code>class func shared()</code></pre></section>	https://developer.apple.com/reference/foundation/nsscriptcoercionhandler
NSScriptCommand	A							https://developer.apple.com/reference/foundation/nsscriptcommand			<section class="prog__container"><p>An instance of NSScriptCommand represents a scripting statement, such as set word 5 of the front document to word 1 of the second document, and contains the information needed to perform the operation specified by the statement.</p><pre><code>NSScriptCommand</code></pre></section>	https://developer.apple.com/reference/foundation/nsscriptcommand
NSScriptCommandDescription	A							https://developer.apple.com/reference/foundation/nsscriptcommanddescription			<section class="prog__container"><p>An instance of NSScriptCommandDescription describes a script command that a Cocoa application supports.</p><pre><code>NSScriptCommandDescription</code></pre></section>	https://developer.apple.com/reference/foundation/nsscriptcommanddescription
NSScriptExecutionContext	A							https://developer.apple.com/reference/foundation/nsscriptexecutioncontext			<section class="prog__container"><p>An NSScriptExecutionContext object is a shared instance (there is only one instance of the class) that represents the context in which the current script command is executed. NSScriptExecutionContext tracks global state relating to the command being executed, especially the top-level container object (that is, the container implied by a specifier object that specifies no container) used in an evaluation of an NSScriptObjectSpecifier object.</p><pre><code>NSScriptExecutionContext</code></pre></section>	https://developer.apple.com/reference/foundation/nsscriptexecutioncontext
NSScriptingComparisonMethods	A							https://developer.apple.com/reference/foundation/nsscriptingcomparisonmethods			<section class="prog__container"><p>This informal protocol defines a set of methods useful for comparing script objects.</p><pre><code> is equal</code></pre></section>	https://developer.apple.com/reference/foundation/nsscriptingcomparisonmethods
NSScriptKeyValueCoding	A							https://developer.apple.com/reference/foundation/nsscriptkeyvaluecoding			<section class="prog__container"><p>Cocoa scripting takes advantage of key-value coding to get and set information in scriptable objects. The methods in this category provide additional capabilities for working with key-value coding, including getting and setting key values by index in multivalue keys and coercing (or converting) a key value. Additional methods allow the implementer of a scriptable container class to provide fast access to elements that are being referenced by name and unique ID.</p><pre><code>setValue:forKey:</code></pre></section>	https://developer.apple.com/reference/foundation/nsscriptkeyvaluecoding
NSScriptObjectSpecifier	A							https://developer.apple.com/reference/foundation/nsscriptobjectspecifier			<section class="prog__container"><p>NSScriptObjectSpecifier is the abstract superclass for classes that instantiate objects called “object specifiers.” An object specifier represents an AppleScript reference form, which is a natural-language expression such as words 10 through 20 or front document or words whose color is red.</p><pre><code>NSScriptObjectSpecifier</code></pre></section>	https://developer.apple.com/reference/foundation/nsscriptobjectspecifier
NSScriptObjectSpecifiers	A							https://developer.apple.com/reference/foundation/nsscriptobjectspecifiers			<section class="prog__container"><p>Informal protocol. Allows scriptable objects that can provide a fully specified object specifier to themselves within an application to do so. It also enables containers of objects to perform their own specifier evaluation.</p><pre><code>protocol</code></pre></section>	https://developer.apple.com/reference/foundation/nsscriptobjectspecifiers
NSScriptSuiteRegistry	A							https://developer.apple.com/reference/foundation/nsscriptsuiteregistry			<section class="prog__container"><p>NSScriptSuiteRegistry functions as the top-level repository of scriptability information for an application at runtime.</p><pre><code>NSScriptSuiteRegistry</code></pre></section>	https://developer.apple.com/reference/foundation/nsscriptsuiteregistry
NSScriptWhoseTest	A							https://developer.apple.com/reference/foundation/nsscriptwhosetest			<section class="prog__container"><p>NSScriptWhoseTest is an abstract class whose sole method is isTrue(). Two concrete subclasses of NSScriptWhoseTest generate objects representing Boolean expressions comparing one object with another and objects representing multiple Boolean expressions connected by logical operators (OR, AND, NOT). These classes are, respectively, NSSpecifierTest and NSLogicalTest. In evaluating itself, an NSWhoseSpecifier invokes the isTrue() method of its “test” object.</p><pre><code>NSScriptWhoseTest</code></pre></section>	https://developer.apple.com/reference/foundation/nsscriptwhosetest
NSSecureCoding	A							https://developer.apple.com/reference/foundation/nssecurecoding			<section class="prog__container"><p>Conforming to the NSSecureCoding protocol indicates that an object handles encoding and decoding instances of itself in a manner that is robust against object substitution attacks.</p><pre><code>if let object = decoder.decodeObjectForKey("myKey") as MyClass {\n  ...succeeds...\n} else {\n  ...fail...\n}\n</code></pre></section>	https://developer.apple.com/reference/foundation/nssecurecoding
NSSet	A							https://developer.apple.com/reference/foundation/nsset			<section class="prog__container"><p>The NSSet, NSMutableSet, and NSCountedSet classes declare the programmatic interface to an unordered collection of objects.</p><pre><code>NSSet</code></pre></section>	https://developer.apple.com/reference/foundation/nsset
NSSetCommand	A							https://developer.apple.com/reference/foundation/nssetcommand			<section class="prog__container"><p>An instance of NSSetCommand sets one or more attributes or relationships to one or more values; for example, it may set the (x, y) coordinates for a window’s position or set the name of a document.</p><pre><code>NSSetCommand</code></pre></section>	https://developer.apple.com/reference/foundation/nssetcommand
NSSortDescriptor	A							https://developer.apple.com/reference/foundation/nssortdescriptor			<section class="prog__container"><p>An NSSortDescriptor object describes a basis for ordering objects by specifying the property to use to compare the objects, the method to use to compare the properties, and whether the comparison should be ascending or descending. Instances of NSSortDescriptor are immutable.</p><pre><code>NSSortDescriptor</code></pre></section>	https://developer.apple.com/reference/foundation/nssortdescriptor
NSSpecifierTest	A							https://developer.apple.com/reference/foundation/nsspecifiertest			<section class="prog__container"><p>Instances of this class represent a Boolean expression; they evaluate an object specifier and compare the resulting object to another object using a given comparison method. For more information on NSSpecifierTest, see the method description for its sole public method, its initializer, init(objectSpecifier:comparisonOperator:test:).</p><pre><code>NSSpecifierTest</code></pre></section>	https://developer.apple.com/reference/foundation/nsspecifiertest
NSSpellServer	A							https://developer.apple.com/reference/foundation/nsspellserver			<section class="prog__container"><p>The NSSpellServer class gives you a way to make your application’s spell checker available as a spelling service available to any application.</p><pre><code>NSSpellServer</code></pre></section>	https://developer.apple.com/reference/foundation/nsspellserver
NSSpellServerDelegate	A							https://developer.apple.com/reference/foundation/nsspellserverdelegate			<section class="prog__container"><p>The NSSpellServerDelegate protocol defines the optional methods implemented by delegates of NSSpellServer objects.</p><pre><code>NSSpellServerDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/nsspellserverdelegate
NSString	A							https://developer.apple.com/reference/foundation/nsstring			<section class="prog__container"><p>The NSString class and its mutable subclass, NSMutableString, provide an extensive set of APIs for working with strings, including methods for comparing, searching, and modifying strings. NSString objects are used throughout Foundation and other Cocoa frameworks, serving as the basis for all textual and linguistic functionality on the platform.</p><pre><code>NSString</code></pre></section>	https://developer.apple.com/reference/foundation/nsstring
NSTextCheckingResult	A							https://developer.apple.com/reference/foundation/nstextcheckingresult			<section class="prog__container"><p>NSTextCheckingResult is a class used to describe items located by text checking. Each of these objects represents an occurrence of requested textual content that has been found during the analysis of a block of text.</p><pre><code>NSTextCheckingResult</code></pre></section>	https://developer.apple.com/reference/foundation/nstextcheckingresult
NSTimeZone	A							https://developer.apple.com/reference/foundation/nstimezone			<section class="prog__container"><p>NSTimeZone is an abstract class that defines the behavior of time zone objects. Time zone objects represent geopolitical regions. Consequently, these objects have names for these regions. Time zone objects also represent a temporal offset, either plus or minus, from Greenwich Mean Time (GMT) and an abbreviation (such as PST for Pacific Standard Time).</p><pre><code>NSTimeZone</code></pre></section>	https://developer.apple.com/reference/foundation/nstimezone
NSUbiquitousKeyValueStore	A							https://developer.apple.com/reference/foundation/nsubiquitouskeyvaluestore			<section class="prog__container"><p>Use the iCloud key-value store to make preference, configuration, and app-state data available to every instance of your app on every device connected to a user’s iCloud account. You can store scalar values such as BOOL, as well as values containing any of the property list object types: NSNumber, NSString, NSDate, NSData, NSArray, and NSDictionary.</p><pre><code>BOOL</code></pre></section>	https://developer.apple.com/reference/foundation/nsubiquitouskeyvaluestore
NSUnarchiver	A							https://developer.apple.com/reference/foundation/nsunarchiver			<section class="prog__container"><p>NSUnarchiver, a concrete subclass of NSCoder, defines methods for decoding a set of Objective-C objects from an archive. Such archives are produced by objects of the NSArchiver class.</p><pre><code>NSUnarchiver</code></pre></section>	https://developer.apple.com/reference/foundation/nsunarchiver
NSUniqueIDSpecifier	A							https://developer.apple.com/reference/foundation/nsuniqueidspecifier			<section class="prog__container"><p>Specifies an object in a collection (or container) by unique ID. This specifier works only for objects that have an ID property. The unique ID object passed to an instance of NSUniqueIDSpecifier must be either an NSNumber object or an NSString object. The exact type should match the scripting dictionary declaration of the ID attribute for the relevant scripting class.</p><pre><code>NSUniqueIDSpecifier</code></pre></section>	https://developer.apple.com/reference/foundation/nsuniqueidspecifier
NSURL	A							https://developer.apple.com/reference/foundation/nsurl			<section class="prog__container"><p>An NSURL object represents a URL that can potentially contain the location of a resource on a remote server, the path of a local file on disk, or even an arbitrary piece of encoded data.</p><pre><code>NSURL</code></pre></section>	https://developer.apple.com/reference/foundation/nsurl
NSURLComponents	A							https://developer.apple.com/reference/foundation/nsurlcomponents			<section class="prog__container"><p>The NSURLComponents class is a class that is designed to parse URLs based on RFC 3986 and to construct URLs from their constituent parts. Its behavior differs subtly from the NSURL class, which conforms to older RFCs. However, you can easily obtain an NSURL object based on the contents of a URL components object or vice versa.</p><pre><code>NSURLComponents</code></pre></section>	https://developer.apple.com/reference/foundation/nsurlcomponents
NSURLConnection	A							https://developer.apple.com/reference/foundation/nsurlconnection			<section class="prog__container"><p>An NSURLConnection object lets you load the contents of a URL by providing a URL request object. The interface for NSURLConnection is sparse, providing only the controls to start and cancel asynchronous loads of a URL request. You perform most of your configuration on the URL request object itself.</p><pre><code>NSURLConnection</code></pre></section>	https://developer.apple.com/reference/foundation/nsurlconnection
NSURLConnectionDataDelegate	A							https://developer.apple.com/reference/foundation/nsurlconnectiondatadelegate			<section class="prog__container"><p>The NSURLConnectionDataDelegate protocol describes methods that should be implemented by the delegate for an instance of the NSURLConnection class. Many methods in this protocol existed as part of an informal protocol in previous versions of macOS and iOS.</p><pre><code>NSURLConnectionDataDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/nsurlconnectiondatadelegate
NSURLConnectionDelegate	A							https://developer.apple.com/reference/foundation/nsurlconnectiondelegate			<section class="prog__container"><p>The NSURLConnectionDelegate protocol defines methods common to the NSURLConnectionDataDelegate and NSURLConnectionDownloadDelegate protocols.</p><pre><code>NSURLConnectionDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/nsurlconnectiondelegate
NSURLConnectionDownloadDelegate	A							https://developer.apple.com/reference/foundation/nsurlconnectiondownloaddelegate			<section class="prog__container"><p>The NSURLConnectionDownloadDelegate protocol describes methods that should be implemented by the delegate of instances of NSURLConnection created using Newsstand Kit’s download(with:) method. The methods in this protocol provide progress information about the download of a URL asset and, when downloading concludes, provide a file URL where the downloaded file can be accessed.</p><pre><code>NSURLConnectionDownloadDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/nsurlconnectiondownloaddelegate
NSURLDownload	A							https://developer.apple.com/reference/foundation/nsurldownload			<section class="prog__container"><p>The NSURLDownload class downloads a request asynchronously and saves the data to a file. The interface for NSURLDownload provides methods to initialize a download, set the destination path and cancel loading the request.</p><pre><code>NSURLDownload</code></pre></section>	https://developer.apple.com/reference/foundation/nsurldownload
NSURLDownloadDelegate	A							https://developer.apple.com/reference/foundation/nsurldownloaddelegate			<section class="prog__container"><p>The NSURLDownloadDelegate protocol defines methods that allow an object to receive informational callbacks about the asynchronous load of a download’s URL request. Other delegate methods provide facilities that allow the delegate to customize the process of performing an asynchronous URL load.</p><pre><code>NSURLDownloadDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/nsurldownloaddelegate
NSURLHandle	A							https://developer.apple.com/reference/foundation/nsurlhandle			<section class="prog__container"><p>NSURLHandle declares the programmatic interface for an object that accesses and manages resource data indicated by an NSURL object. A single NSURLHandle can service multiple equivalent NSURL objects, but only if these URLs map to the same resource.</p><pre><code>NSURLHandle</code></pre></section>	https://developer.apple.com/reference/foundation/nsurlhandle
NSURLHandleClient	A							https://developer.apple.com/reference/foundation/nsurlhandleclient			<section class="prog__container"><p>This protocol defines the interface for clients to NSURLHandle.</p><pre><code>NSURLHandle</code></pre></section>	https://developer.apple.com/reference/foundation/nsurlhandleclient
NSURLQueryItem	A							https://developer.apple.com/reference/foundation/nsurlqueryitem			<section class="prog__container"><p>An NSURLQueryItem object represents a single name/value pair for an item in the query portion of a URL. You use query items with the queryItems property of an NSURLComponents object.</p><pre><code>NSURLQueryItem</code></pre></section>	https://developer.apple.com/reference/foundation/nsurlqueryitem
NSURLRequest	A							https://developer.apple.com/reference/foundation/nsurlrequest			<section class="prog__container"><p>NSURLRequest objects represent a URL load request in a manner independent of protocol and URL scheme.</p><pre><code>NSURLRequest</code></pre></section>	https://developer.apple.com/reference/foundation/nsurlrequest
NSUserActivity	A							https://developer.apple.com/reference/foundation/nsuseractivity			<section class="prog__container"><p>An NSUserActivity object provides a lightweight way to capture the state of your app and put it to use later. You create user activity objects and use them to capture information about what the user was doing, such as viewing app content, editing a document, viewing a web page, or watching a video. When the system launches your app and an activity object is available, your app can use the information in that object to restore itself to an appropriate state. Spotlight also uses your user activity objects to improve search results for the user. </p><pre><code>NSUserActivity</code></pre></section>	https://developer.apple.com/reference/foundation/nsuseractivity
NSUserActivityDelegate	A							https://developer.apple.com/reference/foundation/nsuseractivitydelegate			<section class="prog__container"><p>An object conforming to the NSUserActivityDelegate protocol works with an NSUserActivity object, which encapsulates the state of a user activity in an application on a particular device and enables the same activity to be continued on another device. For example, a user browsing an article in Safari on a Mac can move to an iOS device where the same webpage automatically opens in Safari with the same scroll position.</p><pre><code>NSUserActivityDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/nsuseractivitydelegate
NSUserAppleScriptTask	A							https://developer.apple.com/reference/foundation/nsuserapplescripttask			<section class="prog__container"><p>The NSUserAppleScriptTask class is intended to run AppleScript scripts from your application. It is intended to execute user-supplied scripts and will execute them outside of the application's sandbox, if any.</p><pre><code>NSUserAppleScriptTask</code></pre></section>	https://developer.apple.com/reference/foundation/nsuserapplescripttask
NSUserAutomatorTask	A							https://developer.apple.com/reference/foundation/nsuserautomatortask			<section class="prog__container"><p>The NSUserAutomatorTask class is intended to run Automator workflows from your application. It is intended to execute user-supplied workflows, and will execute them outside of the application's sandbox, if any.</p><pre><code>NSUserAutomatorTask</code></pre></section>	https://developer.apple.com/reference/foundation/nsuserautomatortask
NSUserNotification	A							https://developer.apple.com/reference/foundation/nsusernotification			<section class="prog__container"><p>The NSUserNotification class is used to configure a notification that is scheduled for display by the NSUserNotificationCenter class.</p><pre><code>NSUserNotification</code></pre></section>	https://developer.apple.com/reference/foundation/nsusernotification
NSUserNotificationCenter	A							https://developer.apple.com/reference/foundation/nsusernotificationcenter			<section class="prog__container"><p>The NSUserNotificationCenter class delivers user notifications to the user from applications or helper applications.</p><pre><code>NSUserNotificationCenter</code></pre></section>	https://developer.apple.com/reference/foundation/nsusernotificationcenter
NSUserNotificationCenterDelegate	A							https://developer.apple.com/reference/foundation/nsusernotificationcenterdelegate			<section class="prog__container"><p>The NSUserNotificationCenterDelegate protocol allows customization of the behavior of the default NSUserNotificationCenter instance.</p><pre><code>NSUserNotificationCenterDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/nsusernotificationcenterdelegate
NSUserScriptTask	A							https://developer.apple.com/reference/foundation/nsuserscripttask			<section class="prog__container"><p>The NSUserScriptTask class is an abstract class that is able to run all the scripts normally run by the one of its subclasses, however it ignores the results.. It is intended to execute user-supplied scripts and will execute them outside of the application's sandbox, if any.</p><pre><code>NSUserScriptTask</code></pre></section>	https://developer.apple.com/reference/foundation/nsuserscripttask
NSUserUnixTask	A							https://developer.apple.com/reference/foundation/nsuserunixtask			<section class="prog__container"><p>The NSUserUnixTask class is intended to run unix applications, typically a shell script, from your application. It is intended to execute user-supplied scripts, and will execute them outside of the application's sandbox, if any.</p><pre><code>NSUserUnixTask</code></pre></section>	https://developer.apple.com/reference/foundation/nsuserunixtask
NSUUID	A							https://developer.apple.com/reference/foundation/nsuuid			<section class="prog__container"><p>The NSUUID class creates UUID strings that are to uniquely identify types, interfaces, and other items.</p><pre><code>NSUUID</code></pre></section>	https://developer.apple.com/reference/foundation/nsuuid
NSValue	A							https://developer.apple.com/reference/foundation/nsvalue			<section class="prog__container"><p>An NSValue object is a simple container for a single C or Objective-C data item. It can hold any of the scalar types such as int, float, and char, as well as pointers, structures, and object id references. Use this class to work with such data types in collections (such as NSArray and NSSet), Key-value coding, and other APIs that require Objective-C objects. NSValue objects are always immutable.</p><pre><code>NSValue</code></pre></section>	https://developer.apple.com/reference/foundation/nsvalue
NSWhoseSpecifier	A							https://developer.apple.com/reference/foundation/nswhosespecifier			<section class="prog__container"><p>NSWhoseSpecifier specifies every object in a collection (or every element in a container) that matches the condition defined by a single Boolean expression or multiple Boolean expressions connected by logical operators. NSWhoseSpecifier is unique among object specifiers in that its top-level container is typically not the application object but an evaluated object specifier involved in the tested-for condition. An NSWhoseSpecifier object encapsulates a “test” object for defining this condition. A test object is instantiated from a subclass of the abstract NSScriptWhoseTest class, whose one declared method is isTrue(). See "Boolean Expressions and Logical Operations" in NSScriptObjectSpecifier and the descriptions in NSComparisonMethods and NSScriptingComparisonMethods for more information.</p><pre><code>NSWhoseSpecifier</code></pre></section>	https://developer.apple.com/reference/foundation/nswhosespecifier
NSXPCConnection	A							https://developer.apple.com/reference/foundation/nsxpcconnection			<section class="prog__container"><p>The NSXPCConnection class provides a bi-directional communication channel between two processes.</p><pre><code>NSXPCConnection</code></pre></section>	https://developer.apple.com/reference/foundation/nsxpcconnection
NSXPCInterface	A							https://developer.apple.com/reference/foundation/nsxpcinterface			<section class="prog__container"><p>Class that describes the methods that may be sent to an exported object or remote object proxy.</p><pre><code>func classes(for: Selector, argumentIndex: Int, ofReply: Bool)</code></pre></section>	https://developer.apple.com/reference/foundation/nsxpcinterface
NSXPCListener	A							https://developer.apple.com/reference/foundation/nsxpclistener			<section class="prog__container"><p>The NSXPCListener class and its delegate are responsible for waiting for new incoming connections, configuring them, and accepting or rejecting them.</p><pre><code>NSXPCListener</code></pre></section>	https://developer.apple.com/reference/foundation/nsxpclistener
NSXPCListenerDelegate	A							https://developer.apple.com/reference/foundation/nsxpclistenerdelegate			<section class="prog__container"><p>Protocol for delegates to the NSXPC listener class that allows you to accept or reject new connections to the listener.</p><pre><code>func listener(NSXPCListener, shouldAcceptNewConnection: NSXPCConnection)</code></pre></section>	https://developer.apple.com/reference/foundation/nsxpclistenerdelegate
NSXPCListenerEndpoint	A							https://developer.apple.com/reference/foundation/nsxpclistenerendpoint			<section class="prog__container"><p>Class that "names" a specific NSXPCListener object.</p><pre><code>NSXPCListener</code></pre></section>	https://developer.apple.com/reference/foundation/nsxpclistenerendpoint
NSXPCProxyCreating	A							https://developer.apple.com/reference/foundation/nsxpcproxycreating			<section class="prog__container"><p>Describes the methods for creating new proxy objects.</p><pre><code>NSXPCConnection</code></pre></section>	https://developer.apple.com/reference/foundation/nsxpcproxycreating
NumberFormatter	A							https://developer.apple.com/reference/foundation/numberformatter			<section class="prog__container"><p>Instances of NSNumberFormatter format the textual representation of cells that contain NSNumber objects and convert textual representations of numeric values into NSNumber objects. The representation encompasses integers, floats, and doubles; floats and doubles can be formatted to a specified decimal position. NSNumberFormatter objects can also impose ranges on the numeric values cells can accept.</p><pre><code>NSNumberFormatter</code></pre></section>	https://developer.apple.com/reference/foundation/numberformatter
Operation	A							https://developer.apple.com/reference/foundation/operation			<section class="prog__container"><p>The NSOperation class is an abstract class you use to encapsulate the code and data associated with a single task. Because it is abstract, you do not use this class directly but instead subclass or use one of the system-defined subclasses (NSInvocationOperation or BlockOperation) to perform the actual task. Despite being abstract, the base implementation of NSOperation does include significant logic to coordinate the safe execution of your task. The presence of this built-in logic allows you to focus on the actual implementation of your task, rather than on the glue code needed to ensure it works correctly with other system objects.</p><pre><code>NSOperation</code></pre></section>	https://developer.apple.com/reference/foundation/operation
OperationQueue	A							https://developer.apple.com/reference/foundation/operationqueue			<section class="prog__container"><p>The OperationQueue class regulates the execution of a set of Operation objects. After being added to a queue, an operation remains in that queue until it is explicitly canceled or finishes executing its task. Operations within the queue (but not yet executing) are themselves organized according to priority levels and inter-operation object dependencies and are executed accordingly. An application may create multiple operation queues and submit operations to any of them. </p><pre><code>OperationQueue</code></pre></section>	https://developer.apple.com/reference/foundation/operationqueue
OutputStream	A							https://developer.apple.com/reference/foundation/outputstream			<section class="prog__container"><p>The NSOutputStream class is a subclass of NSStream that provides write-only stream functionality.</p><pre><code>NSOutputStream</code></pre></section>	https://developer.apple.com/reference/foundation/outputstream
PersonNameComponentsFormatter	A							https://developer.apple.com/reference/foundation/personnamecomponentsformatter			<section class="prog__container"><p>The NSPersonNameComponentsFormatter class provides localized representations of the components of a person’s name, as represented by a NSPersonNameComponents object. Use this class to create localized names when displaying person name information to the user.</p><pre><code>NSPersonNameComponentsFormatter</code></pre></section>	https://developer.apple.com/reference/foundation/personnamecomponentsformatter
Pipe	A							https://developer.apple.com/reference/foundation/pipe			<section class="prog__container"><p>NSPipe objects provide an object-oriented interface for accessing pipes. An NSPipe object represents both ends of a pipe and enables communication through the pipe. A pipe is a one-way communications channel between related processes; one process writes data, while the other process reads that data. The data that passes through the pipe is buffered; the size of the buffer is determined by the underlying operating system. NSPipe is an abstract class, the public interface of a class cluster.</p><pre><code>NSPipe</code></pre></section>	https://developer.apple.com/reference/foundation/pipe
Port	A							https://developer.apple.com/reference/foundation/port			<section class="prog__container"><p>NSPort is an abstract class that represents a communication channel. Communication occurs between NSPort objects, which typically reside in different threads or tasks. The distributed objects system uses NSPort objects to send PortMessage objects back and forth. You should implement interapplication communication using distributed objects whenever possible and use NSPort objects only when necessary. </p><pre><code>NSPort</code></pre></section>	https://developer.apple.com/reference/foundation/port
PortDelegate	A							https://developer.apple.com/reference/foundation/portdelegate			<section class="prog__container"><p>The NSPortDelegate protocol defines the optional methods implemented by delegates of Port objects.</p><pre><code>NSPortDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/portdelegate
PortMessage	A							https://developer.apple.com/reference/foundation/portmessage			<section class="prog__container"><p>An NSPortMessage defines a low-level, operating system-independent type for inter-application (and inter-thread) messages. Port messages are used primarily by the distributed objects system. You should implement inter-application communication using distributed objects whenever possible and use NSPortMessage only when necessary.</p><pre><code>NSPortMessage</code></pre></section>	https://developer.apple.com/reference/foundation/portmessage
Process	A							https://developer.apple.com/reference/foundation/process			<section class="prog__container"><p>Using the NSTask class, your program can run another program as a subprocess and can monitor that program’s execution. An NSTask object creates a separate executable entity; it differs from NSThread in that it does not share memory space with the process that creates it.</p><pre><code>NSTask</code></pre></section>	https://developer.apple.com/reference/foundation/process
ProcessInfo	A							https://developer.apple.com/reference/foundation/processinfo			<section class="prog__container"><p>The NSProcessInfo class provides methods that you use to access information about the current process. Each process has a single, shared NSProcessInfo object, known as a process information agent.</p><pre><code>NSProcessInfo</code></pre></section>	https://developer.apple.com/reference/foundation/processinfo
Progress	A							https://developer.apple.com/reference/foundation/progress			<section class="prog__container"><p>The Progress class provides a self-contained mechanism for progress reporting. It makes it easy for code that does work to report the progress of that work, and for user interface code to observe that progress for presentation to the user. Specifically, it can be used to show the user a progress bar and explanatory text, both updated properly as progress is made. It also allows work to be cancelled or paused by the user.</p><pre><code>Progress</code></pre></section>	https://developer.apple.com/reference/foundation/progress
ProgressReporting	A							https://developer.apple.com/reference/foundation/progressreporting			<section class="prog__container"><p>Implement the ProgressReporting protocol to report progress for classes that return only one progress object.</p><pre><code>ProgressReporting</code></pre></section>	https://developer.apple.com/reference/foundation/progressreporting
PropertyListSerialization	A							https://developer.apple.com/reference/foundation/propertylistserialization			<section class="prog__container"><p>The NSPropertyListSerialization class provides methods that convert Property list to and from several serialized formats. Property list objects include NSData, NSString, NSArray, NSDictionary, NSDate, and NSNumber objects.</p><pre><code>NSPropertyListSerialization</code></pre></section>	https://developer.apple.com/reference/foundation/propertylistserialization
RecoverableError	A							https://developer.apple.com/reference/foundation/recoverableerror			<section class="prog__container"><p>Describes an error that may be recoverable by presenting several potential recovery options to the user.</p><pre><code>var recoveryOptions: [String]</code></pre></section>	https://developer.apple.com/reference/foundation/recoverableerror
ReferenceConvertible	A							https://developer.apple.com/reference/foundation/referenceconvertible			<section class="prog__container"><p>Decorates types which are backed by a Foundation reference type.</p><pre><code>ReferenceConvertible</code></pre></section>	https://developer.apple.com/reference/foundation/referenceconvertible
RunLoop	A							https://developer.apple.com/reference/foundation/runloop			<section class="prog__container"><p>The RunLoop class declares the programmatic interface to objects that manage input sources. An RunLoop object processes input for sources such as mouse and keyboard events from the window system, Port objects, and NSConnection objects. An RunLoop object also processes Timer events.</p><pre><code>RunLoop</code></pre></section>	https://developer.apple.com/reference/foundation/runloop
Scanner	A							https://developer.apple.com/reference/foundation/scanner			<section class="prog__container"><p>The NSScanner class is an abstract superclass of a class cluster that declares the programmatic interface for an object that scans values from an NSString object. </p><pre><code>NSScanner</code></pre></section>	https://developer.apple.com/reference/foundation/scanner
SocketPort	A							https://developer.apple.com/reference/foundation/socketport			<section class="prog__container"><p>NSSocketPort is a subclass of NSPort that represents a BSD socket. An NSSocketPort object can be used as an endpoint for distributed object connections. Companion classes, NSMachPort and NSMessagePort, allow for local (on the same machine) communication only. The NSSocketPort class allows for both local and remote communication, but may be more expensive than the others for the local case.</p><pre><code>NSSocketPort</code></pre></section>	https://developer.apple.com/reference/foundation/socketport
Stream	A							https://developer.apple.com/reference/foundation/stream			<section class="prog__container"><p>NSStream is an abstract class for objects representing streams. Its interface is common to all Cocoa stream classes, including its concrete subclasses InputStream and OutputStream.</p><pre><code>NSStream</code></pre></section>	https://developer.apple.com/reference/foundation/stream
StreamDelegate	A							https://developer.apple.com/reference/foundation/streamdelegate			<section class="prog__container"><p>The NSStreamDelegate protocol defines the optional methods implemented by delegates of Stream objects.</p><pre><code>NSStreamDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/streamdelegate
Thread	A							https://developer.apple.com/reference/foundation/thread			<section class="prog__container"><p>An Thread object controls a thread of execution. Use this class when you want to have an Objective-C method run in its own thread of execution. Threads are especially useful when you need to perform a lengthy task, but don’t want it to block the execution of the rest of the application. In particular, you can use threads to avoid blocking the main thread of the application, which handles user interface and event-related actions. Threads can also be used to divide a large job into several smaller jobs, which can lead to performance increases on multi-core computers.</p><pre><code>Thread</code></pre></section>	https://developer.apple.com/reference/foundation/thread
Timer	A							https://developer.apple.com/reference/foundation/timer			<section class="prog__container"><p>You use the NSTimer class to create timer objects or, more simply, timers. A timer waits until a certain time interval has elapsed and then fires, sending a specified message to a target object. For example, you could create an NSTimer object that sends a message to a window, telling it to update itself after a certain time interval.</p><pre><code>NSTimer</code></pre></section>	https://developer.apple.com/reference/foundation/timer
UndoManager	A							https://developer.apple.com/reference/foundation/undomanager			<section class="prog__container"><p>NSUndoManager is a general-purpose recorder of operations for undo and redo. </p><pre><code>NSUndoManager</code></pre></section>	https://developer.apple.com/reference/foundation/undomanager
Unit	A							https://developer.apple.com/reference/foundation/unit			<section class="prog__container"><p>NSUnit is an abstract class that declares a programmatic interface for objects that represent a unit of measure.</p><pre><code>NSUnit</code></pre></section>	https://developer.apple.com/reference/foundation/unit
UnitAcceleration	A							https://developer.apple.com/reference/foundation/unitacceleration			<section class="prog__container"><p>The NSUnitAcceleration class is an Dimension subclass that encapsulates units of measure for acceleration.</p><pre><code>NSUnitAcceleration</code></pre></section>	https://developer.apple.com/reference/foundation/unitacceleration
UnitAngle	A							https://developer.apple.com/reference/foundation/unitangle			<section class="prog__container"><p>The NSUnitAngle class is an Dimension subclass that encapsulates units of measure for rotation.</p><pre><code>NSUnitAngle</code></pre></section>	https://developer.apple.com/reference/foundation/unitangle
UnitArea	A							https://developer.apple.com/reference/foundation/unitarea			<section class="prog__container"><p>The NSUnitArea class is an Dimension subclass that encapsulates units of measure for area.</p><pre><code>NSUnitArea</code></pre></section>	https://developer.apple.com/reference/foundation/unitarea
UnitConcentrationMass	A							https://developer.apple.com/reference/foundation/unitconcentrationmass			<section class="prog__container"><p>The NSUnitConcentrationMass class is an Dimension subclass that encapsulates units of measure for concentration of mass.</p><pre><code>NSUnitConcentrationMass</code></pre></section>	https://developer.apple.com/reference/foundation/unitconcentrationmass
UnitConverter	A							https://developer.apple.com/reference/foundation/unitconverter			<section class="prog__container"><p>NSUnitConverter is an abstract class that describes how to convert a unit to and from the base unit of its dimension.</p><pre><code>NSUnitConverter</code></pre></section>	https://developer.apple.com/reference/foundation/unitconverter
UnitConverterLinear	A							https://developer.apple.com/reference/foundation/unitconverterlinear			<section class="prog__container"><p>NSUnitConverterLinear is an UnitConverter subclass for converting between units using a linear equation.</p><pre><code>NSUnitConverterLinear</code></pre></section>	https://developer.apple.com/reference/foundation/unitconverterlinear
UnitDispersion	A							https://developer.apple.com/reference/foundation/unitdispersion			<section class="prog__container"><p>The NSUnitDispersion class is an Dimension subclass that encapsulates units of measure for an amount-of-substance fraction.</p><pre><code>NSUnitDispersion</code></pre></section>	https://developer.apple.com/reference/foundation/unitdispersion
UnitDuration	A							https://developer.apple.com/reference/foundation/unitduration			<section class="prog__container"><p>The NSUnitDuration class is an Dimension subclass that encapsulates units of measure for duration of time.</p><pre><code>NSUnitDuration</code></pre></section>	https://developer.apple.com/reference/foundation/unitduration
UnitElectricCharge	A							https://developer.apple.com/reference/foundation/unitelectriccharge			<section class="prog__container"><p>The NSUnitElectricCharge class is an Dimension subclass that encapsulates units of measure for electric charge.</p><pre><code>NSUnitElectricCharge</code></pre></section>	https://developer.apple.com/reference/foundation/unitelectriccharge
UnitElectricCurrent	A							https://developer.apple.com/reference/foundation/unitelectriccurrent			<section class="prog__container"><p>The NSUnitElectricCurrent class is an Dimension subclass that encapsulates units of measure for electric current.</p><pre><code>NSUnitElectricCurrent</code></pre></section>	https://developer.apple.com/reference/foundation/unitelectriccurrent
UnitElectricPotentialDifference	A							https://developer.apple.com/reference/foundation/unitelectricpotentialdifference			<section class="prog__container"><p>The NSUnitElectricPotentialDifference class is an Dimension subclass that encapsulates units of measure for electric potential difference.</p><pre><code>NSUnitElectricPotentialDifference</code></pre></section>	https://developer.apple.com/reference/foundation/unitelectricpotentialdifference
UnitElectricResistance	A							https://developer.apple.com/reference/foundation/unitelectricresistance			<section class="prog__container"><p>The NSUnitElectricResistance class is an Dimension subclass that encapsulates units of measure for electric resistance.</p><pre><code>NSUnitElectricResistance</code></pre></section>	https://developer.apple.com/reference/foundation/unitelectricresistance
UnitEnergy	A							https://developer.apple.com/reference/foundation/unitenergy			<section class="prog__container"><p>The NSUnitEnergy class is an Dimension subclass that encapsulates units of measure for energy.</p><pre><code>NSUnitEnergy</code></pre></section>	https://developer.apple.com/reference/foundation/unitenergy
UnitFrequency	A							https://developer.apple.com/reference/foundation/unitfrequency			<section class="prog__container"><p>The NSUnitFrequency class is an Dimension subclass that encapsulates units of measure for frequency.</p><pre><code>NSUnitFrequency</code></pre></section>	https://developer.apple.com/reference/foundation/unitfrequency
UnitFuelEfficiency	A							https://developer.apple.com/reference/foundation/unitfuelefficiency			<section class="prog__container"><p>The NSUnitFuelEfficiency class is an Dimension subclass that encapsulates units of measure for fuel efficiency.</p><pre><code>NSUnitFuelEfficiency</code></pre></section>	https://developer.apple.com/reference/foundation/unitfuelefficiency
UnitIlluminance	A							https://developer.apple.com/reference/foundation/unitilluminance			<section class="prog__container"><p>The NSUnitIlluminance class is an Dimension subclass that encapsulates units of measure for illuminance.</p><pre><code>NSUnitIlluminance</code></pre></section>	https://developer.apple.com/reference/foundation/unitilluminance
UnitLength	A							https://developer.apple.com/reference/foundation/unitlength			<section class="prog__container"><p>The NSUnitLength class is an Dimension subclass that encapsulates units of measure for length.</p><pre><code>NSUnitLength</code></pre></section>	https://developer.apple.com/reference/foundation/unitlength
UnitMass	A							https://developer.apple.com/reference/foundation/unitmass			<section class="prog__container"><p>The NSUnitMass class is an Dimension subclass that encapsulates units of measure for mass.</p><pre><code>NSUnitMass</code></pre></section>	https://developer.apple.com/reference/foundation/unitmass
UnitPower	A							https://developer.apple.com/reference/foundation/unitpower			<section class="prog__container"><p>The NSUnitPower class is an Dimension subclass that encapsulates units of measure for power.</p><pre><code>NSUnitPower</code></pre></section>	https://developer.apple.com/reference/foundation/unitpower
UnitPressure	A							https://developer.apple.com/reference/foundation/unitpressure			<section class="prog__container"><p>The NSUnitPressure class is an Dimension subclass that encapsulates units of measure for pressure.</p><pre><code>NSUnitPressure</code></pre></section>	https://developer.apple.com/reference/foundation/unitpressure
UnitSpeed	A							https://developer.apple.com/reference/foundation/unitspeed			<section class="prog__container"><p>The NSUnitSpeed class is an Dimension subclass that encapsulates units of measure for speed.</p><pre><code>NSUnitSpeed</code></pre></section>	https://developer.apple.com/reference/foundation/unitspeed
UnitTemperature	A							https://developer.apple.com/reference/foundation/unittemperature			<section class="prog__container"><p>The NSUnitTemperature class is an Dimension subclass that encapsulates units of measure for temperature.</p><pre><code>NSUnitTemperature</code></pre></section>	https://developer.apple.com/reference/foundation/unittemperature
UnitVolume	A							https://developer.apple.com/reference/foundation/unitvolume			<section class="prog__container"><p>The NSUnitVolume class is an Dimension subclass that encapsulates units of measure for volume.</p><pre><code>NSUnitVolume</code></pre></section>	https://developer.apple.com/reference/foundation/unitvolume
URLAuthenticationChallenge	A							https://developer.apple.com/reference/foundation/urlauthenticationchallenge			<section class="prog__container"><p>NSURLAuthenticationChallenge encapsulates a challenge from a server requiring authentication from the client.</p><pre><code>URLProtocol</code></pre></section>	https://developer.apple.com/reference/foundation/urlauthenticationchallenge
URLAuthenticationChallengeSender	A							https://developer.apple.com/reference/foundation/urlauthenticationchallengesender			<section class="prog__container"><p>The NSURLAuthenticationChallengeSender protocol represents the interface that the sender of an authentication challenge must implement.</p><pre><code>NSURLAuthenticationChallengeSender</code></pre></section>	https://developer.apple.com/reference/foundation/urlauthenticationchallengesender
URLCache	A							https://developer.apple.com/reference/foundation/urlcache			<section class="prog__container"><p>The URLCache class implements the caching of responses to URL load requests by mapping NSURLRequest objects to NSCachedURLResponse objects. It provides a composite in-memory and on-disk cache, and lets you manipulate the sizes of both the in-memory and on-disk portions. You can also control the path where cache data is stored persistently.</p><pre><code>URLCache</code></pre></section>	https://developer.apple.com/reference/foundation/urlcache
URLCredential	A							https://developer.apple.com/reference/foundation/urlcredential			<section class="prog__container"><p>NSURLCredential is an immutable object representing an authentication credential consisting of authentication information specific to the type of credential and the type of persistent storage to use, if any.</p><pre><code>NSURLCredential</code></pre></section>	https://developer.apple.com/reference/foundation/urlcredential
URLCredentialStorage	A							https://developer.apple.com/reference/foundation/urlcredentialstorage			<section class="prog__container"><p>NSURLCredentialStorage implements a singleton (shared object) that manages the credential storage.</p><pre><code>class var shared: URLCredentialStorage</code></pre></section>	https://developer.apple.com/reference/foundation/urlcredentialstorage
URLProtectionSpace	A							https://developer.apple.com/reference/foundation/urlprotectionspace			<section class="prog__container"><p>An NSURLProtectionSpace object represents a server or an area on a server, commonly referred to as a realm, that requires authentication. The protection space defines a series of matching constraints that determine which credential should be provided.</p><pre><code>NSURLProtectionSpace</code></pre></section>	https://developer.apple.com/reference/foundation/urlprotectionspace
URLProtocol	A							https://developer.apple.com/reference/foundation/urlprotocol			<section class="prog__container"><p>An NSURLProtocol object handles the loading of protocol-specific URL data. The NSURLProtocol class itself is an abstract class that provides the infrastructure for processing URLs with a specific URL scheme. You create subclasses for any custom protocols or URL schemes that your app supports. </p><pre><code>NSURLProtocol</code></pre></section>	https://developer.apple.com/reference/foundation/urlprotocol
URLProtocolClient	A							https://developer.apple.com/reference/foundation/urlprotocolclient			<section class="prog__container"><p>The NSURLProtocolClient protocol provides the interface used by NSURLProtocol subclasses to communicate with the URL loading system. An application should never have the need to implement this protocol.</p><pre><code>NSURLProtocolClient</code></pre></section>	https://developer.apple.com/reference/foundation/urlprotocolclient
URLResourceValues	A							https://developer.apple.com/reference/foundation/urlresourcevalues			<section class="prog__container"><p>URLs to file system resources support the properties defined below. Note that not all property values will exist for all file system URLs. For example, if a file is located on a volume that does not support creation dates, it is valid to request the creation date property, but the returned value will be nil, and no error will be generated.</p><pre><code>URL</code></pre></section>	https://developer.apple.com/reference/foundation/urlresourcevalues
URLResponse	A							https://developer.apple.com/reference/foundation/urlresponse			<section class="prog__container"><p>The NSURLResponse class encapsulates the metadata associated with the response to a a URL load request in a manner independent of protocol and URL scheme.</p><pre><code>NSURLResponse</code></pre></section>	https://developer.apple.com/reference/foundation/urlresponse
URLSession	A							https://developer.apple.com/reference/foundation/urlsession			<section class="prog__container"><p>The NSURLSession class and related classes provide an API for downloading content. This API provides a rich set of delegate methods for supporting authentication and gives your app the ability to perform background downloads when your app is not running or, in iOS, while your app is suspended.</p><pre><code>NSURLSession</code></pre></section>	https://developer.apple.com/reference/foundation/urlsession
URLSessionConfiguration	A							https://developer.apple.com/reference/foundation/urlsessionconfiguration			<section class="prog__container"><p>An NSURLSessionConfiguration object defines the behavior and policies to use when uploading and downloading data using an URLSession object. When uploading or downloading data, creating a configuration object is always the first step you must take. You use this object to configure the timeout values, caching policies, connection requirements, and other types of information that you intend to use with your URLSession object. </p><pre><code>NSURLSessionConfiguration</code></pre></section>	https://developer.apple.com/reference/foundation/urlsessionconfiguration
URLSessionDataDelegate	A							https://developer.apple.com/reference/foundation/urlsessiondatadelegate			<section class="prog__container"><p>The NSURLSessionDataDelegate protocol defines the methods that a delegate of an URLSession object can implement to handle task-level events specific to data tasks and upload tasks. Your session delegate should also implement the methods in the URLSessionTaskDelegate protocol to handle task-level events that are common to all task types, and methods in the URLSessionDelegate protocol to handle session-level events.</p><pre><code>NSURLSessionDataDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/urlsessiondatadelegate
URLSessionDataTask	A							https://developer.apple.com/reference/foundation/urlsessiondatatask			<section class="prog__container"><p>An NSURLSessionDataTask is a concrete subclass of URLSessionTask. The methods in the NSURLSessionDataTask class are documented in URLSessionTask.</p><pre><code>NSURLSessionDataTask</code></pre></section>	https://developer.apple.com/reference/foundation/urlsessiondatatask
URLSessionDelegate	A							https://developer.apple.com/reference/foundation/urlsessiondelegate			<section class="prog__container"><p>The NSURLSessionDelegate protocol describes the methods that URLSession objects call on their delegates to handle session-level events. In addition to the methods defined in this protocol, most delegates should also implement some or all of the methods in the URLSessionTaskDelegate, URLSessionDataDelegate, and URLSessionDownloadDelegate protocols to handle task-level events.</p><pre><code>NSURLSessionDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/urlsessiondelegate
URLSessionDownloadDelegate	A							https://developer.apple.com/reference/foundation/urlsessiondownloaddelegate			<section class="prog__container"><p>The NSURLSessionDownloadDelegate protocol defines delegate methods that you should implement when using URLSession download tasks. In addition to these methods, be sure to implement the methods in the URLSessionTaskDelegate and URLSessionDelegate protocols to handle events common to all task types and session-level events, respectively.</p><pre><code>NSURLSessionDownloadDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/urlsessiondownloaddelegate
URLSessionDownloadTask	A							https://developer.apple.com/reference/foundation/urlsessiondownloadtask			<section class="prog__container"><p>An NSURLSessionDownloadTask is a concrete subclass of URLSessionTask. Most of the methods associated with this class are documented in URLSessionTask.</p><pre><code>NSURLSessionDownloadTask</code></pre></section>	https://developer.apple.com/reference/foundation/urlsessiondownloadtask
URLSessionStreamDelegate	A							https://developer.apple.com/reference/foundation/urlsessionstreamdelegate			<section class="prog__container"><p>The NSURLSessionStreamDelegate protocol defines delegate methods that you should implement when using URLSession stream tasks. In addition to these methods, be sure to implement the methods in the URLSessionTaskDelegate and URLSessionDelegate protocols to handle events common to all task types and session-level events, respectively.</p><pre><code>NSURLSessionStreamDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/urlsessionstreamdelegate
URLSessionStreamTask	A							https://developer.apple.com/reference/foundation/urlsessionstreamtask			<section class="prog__container"><p>NSURLSessionStreamTask is a concrete subclass of URLSessionTask. Many of the methods in the NSURLSessionStreamTask class are documented in URLSessionTask.</p><pre><code>NSURLSessionStreamTask</code></pre></section>	https://developer.apple.com/reference/foundation/urlsessionstreamtask
URLSessionTask	A							https://developer.apple.com/reference/foundation/urlsessiontask			<section class="prog__container"><p>The URLSessionTask class is the base class for tasks in a URL session. Tasks are always part of a session; you create a task by calling one of the task creation methods on an URLSession object. The method you call determines the type of task.</p><pre><code>URLSessionTask</code></pre></section>	https://developer.apple.com/reference/foundation/urlsessiontask
URLSessionTaskDelegate	A							https://developer.apple.com/reference/foundation/urlsessiontaskdelegate			<section class="prog__container"><p>The NSURLSessionTaskDelegate protocol defines the task-specific delegate methods that you should implement when working with any type of URLSession task.</p><pre><code>NSURLSessionTaskDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/urlsessiontaskdelegate
URLSessionTaskMetrics	A							https://developer.apple.com/reference/foundation/urlsessiontaskmetrics			<section class="prog__container"><p>An NSURLSessionTaskMetrics object encapsulates the metrics for a session task. Each object contains the taskInterval and redirectCount, as well as metrics for each request / response transaction made during the execution of the task.</p><pre><code>NSURLSessionTaskMetrics</code></pre></section>	https://developer.apple.com/reference/foundation/urlsessiontaskmetrics
URLSessionTaskTransactionMetrics	A							https://developer.apple.com/reference/foundation/urlsessiontasktransactionmetrics			<section class="prog__container"><p>An NSURLSessionTaskTransactionMetrics object encapsulates the performance metrics collected during the execution of a session task. Each object consists of a request and response property, corresponding to the request and response of the corresponding task. It also contains temporal metrics, starting with fetchStartDate and ending with responseEndDate, as well as other characteristics like networkProtocolName and resourceFetchType.</p><pre><code>NSURLSessionTaskTransactionMetrics</code></pre></section>	https://developer.apple.com/reference/foundation/urlsessiontasktransactionmetrics
URLSessionUploadTask	A							https://developer.apple.com/reference/foundation/urlsessionuploadtask			<section class="prog__container"><p>The NSURLSessionUploadTask class is a subclass of URLSessionDataTask, which in turn is a concrete subclass of URLSessionTask. The methods associated with the NSURLSessionUploadTask class are documented in URLSessionTask.</p><pre><code>NSURLSessionUploadTask</code></pre></section>	https://developer.apple.com/reference/foundation/urlsessionuploadtask
UserDefaults	A							https://developer.apple.com/reference/foundation/userdefaults			<section class="prog__container"><p>The NSUserDefaults class provides a programmatic interface for interacting with the defaults system. The defaults system allows an application to customize its behavior to match a user’s preferences. For example, you can allow users to determine what units of measurement your application displays or how often documents are automatically saved. Applications record such preferences by assigning values to a set of parameters in a user’s defaults database. The parameters are referred to as defaults since they’re commonly used to determine an application’s default state at startup or the way it acts by default.</p><pre><code>NSUserDefaults</code></pre></section>	https://developer.apple.com/reference/foundation/userdefaults
ValueTransformer	A							https://developer.apple.com/reference/foundation/valuetransformer			<section class="prog__container"><p>NSValueTransformer is an abstract class that is used by the Cocoa Bindings technology to transform values from one representation to another. </p><pre><code>NSValueTransformer</code></pre></section>	https://developer.apple.com/reference/foundation/valuetransformer
XMLDocument	A							https://developer.apple.com/reference/foundation/xmldocument			<section class="prog__container"><p>An instance of NSXMLDocument represents an XML document as internalized into a logical tree structure. An NSXMLDocument object can have multiple child nodes but only one element, the root element. Any other node must be a XMLNode object representing a comment or a processing instruction. If you attempt to add any other kind of child node to an NSXMLDocument object, such as an attribute, namespace, another document object, or an element other than the root, NSXMLDocument raises an exception. If you add a valid child node and that object already has a parent, NSXMLDocument raises an exception. An NSXMLDocument object may also have document-global attributes, such as XML version, character encoding, referenced DTD, and MIME type. </p><pre><code>NSXMLDocument</code></pre></section>	https://developer.apple.com/reference/foundation/xmldocument
XMLDTD	A							https://developer.apple.com/reference/foundation/xmldtd			<section class="prog__container"><p>An instance of the NSXMLDTD class represents a Document Type Definition. It is held as a property of an XMLDocument instance, accessed through the NSXMLDocument method dtd (and set via setDTD:).</p><pre><code>NSXMLDTD</code></pre></section>	https://developer.apple.com/reference/foundation/xmldtd
XMLDTDNode	A							https://developer.apple.com/reference/foundation/xmldtdnode			<section class="prog__container"><p>Instances of the NSXMLDTDNode class represent element, attribute-list, entity, and notation declarations in a Document Type Definition. NSXMLDTDNode objects are the sole children of a NSXMLDTD object (possibly along with comment nodes and processing-instruction nodes). They themselves cannot have any children.</p><pre><code>NSXMLDTDNode</code></pre></section>	https://developer.apple.com/reference/foundation/xmldtdnode
XMLElement	A							https://developer.apple.com/reference/foundation/xmlelement			<section class="prog__container"><p>Instances of the NSXMLElement class represent element nodes in an XML tree structure. An NSXMLElement object may have child nodes, specifically comment nodes, processing-instruction nodes, text nodes, and other NSXMLElement nodes. It may also have attribute nodes and namespace nodes associated with it (however, namespace and attribute nodes are not considered children). Any attempt to add a XMLDocument node, XMLDTD node, namespace node, or attribute node as a child raises an exception. If you add a child node to an NSXMLElement object and that child already has a parent, NSXMLElement raises an exception; the child must be detached or copied first.</p><pre><code>NSXMLElement</code></pre></section>	https://developer.apple.com/reference/foundation/xmlelement
XMLNode	A							https://developer.apple.com/reference/foundation/xmlnode			<section class="prog__container"><p>Objects of the NSXMLNode class are nodes in the abstract, logical tree structure that represents an XML document. Node objects can be of different kinds, corresponding to the following markup constructs in an XML document: element, attribute, text, processing instruction, namespace, and comment. In addition, a document-node object (specifically, an instance of XMLDocument) represents an XML document in its entirety. NSXMLNode objects can also represent document type declarations as well as declarations in Document Type Definitions (DTDs). Class factory methods of NSXMLNode enable you to create nodes of each kind. Only document, element, and DTD nodes may have child nodes. </p><pre><code>NSXMLNode</code></pre></section>	https://developer.apple.com/reference/foundation/xmlnode
XMLParser	A							https://developer.apple.com/reference/foundation/xmlparser			<section class="prog__container"><p>Instances of this class parse XML documents (including DTD declarations) in an event-driven manner. An NSXMLParser notifies its delegate about the items (elements, attributes, CDATA blocks, comments, and so on) that it encounters as it processes an XML document. It does not itself do anything with those parsed items except report them. It also reports parsing errors. For convenience, an NSXMLParser object in the following descriptions is sometimes referred to as a parser object. Unless used in a callback, the NSXMLParser is a thread-safe class as long as any given instance is only used in one thread.</p><pre><code>NSXMLParser</code></pre></section>	https://developer.apple.com/reference/foundation/xmlparser
XMLParserDelegate	A							https://developer.apple.com/reference/foundation/xmlparserdelegate			<section class="prog__container"><p>The NSXMLParserDelegate protocol defines the optional methods implemented by delegates of XMLParser objects.</p><pre><code>NSXMLParserDelegate</code></pre></section>	https://developer.apple.com/reference/foundation/xmlparserdelegate
FWAUserLib.h	A							https://developer.apple.com/reference/fwauserlib/fwauserlib.h			<section class="prog__container"><p>This header contains the C interface to the AppleFWAudio driver. The functions in this library allow applications to create and manage audio and MIDI streams and plugs, audio engines, and audio devices. In addition, this library can be used to implement mLAN support in macOS.</p><pre><code>func FWAAttachFWAudioMIDIStream(FWARef!, FWAMIDIStreamRef!, FWAIsochStreamRef!)</code></pre></section>	https://developer.apple.com/reference/fwauserlib/fwauserlib.h
Fx3DAPI	A							https://developer.apple.com/reference/fxplug/fx3dapi?language=objc			<section class="prog__container"><p>The Fx3DAPI protocol defines the methods the host application provides to get information about the 3D environment, including camera and object transforms.</p><pre><code>Fx3DAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fx3dapi?language=objc
Fx3DAPI_v2	A							https://developer.apple.com/reference/fxplug/fx3dapi_v2?language=objc			<section class="prog__container"><p>The Fx3DAPI_v2 protocol defines the methods the host application provides to get information about the 3D environment, including camera and object transforms.</p><pre><code>Fx3DAPI_v2</code></pre></section>	https://developer.apple.com/reference/fxplug/fx3dapi_v2?language=objc
Fx3DAPI_v3	A							https://developer.apple.com/reference/fxplug/fx3dapi_v3?language=objc			<section class="prog__container"><p>The Fx3DAPI_v3 protocol defines the methods the host application provides to get information about the 3D environment, including camera and object transforms.</p><pre><code>Fx3DAPI_v3</code></pre></section>	https://developer.apple.com/reference/fxplug/fx3dapi_v3?language=objc
FxAppearanceAPI	A							https://developer.apple.com/reference/fxplug/fxappearanceapi?language=objc			<section class="prog__container"><p>The FxAppearanceAPI protocol defines methods the host application provides to retrieve the current colors being used.</p><pre><code>FxAppearanceAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxappearanceapi?language=objc
FxBaseEffect	A							https://developer.apple.com/reference/fxplug/fxbaseeffect?language=objc			<section class="prog__container"><p>The FxBaseEffect protocol defines the methods that all plug-ins need to implement.</p><pre><code>FxBaseEffect</code></pre></section>	https://developer.apple.com/reference/fxplug/fxbaseeffect?language=objc
FxBitmap	A							https://developer.apple.com/reference/fxplug/fxbitmap?language=objc			<section class="prog__container"><p>The FxBitmap class provides the RAM-based image for software rendering.</p><pre><code>FxBitmap</code></pre></section>	https://developer.apple.com/reference/fxplug/fxbitmap?language=objc
FxColorGamutAPI	A							https://developer.apple.com/reference/fxplug/fxcolorgamutapi?language=objc			<section class="prog__container"><p>The FxColorGamutAPI protocol defines the host application methods for retrieving information about a project's color gamut and conversions to other color spaces.</p><pre><code>FxColorGamutAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxcolorgamutapi?language=objc
FxCustomParameterActionAPI	A							https://developer.apple.com/reference/fxplug/fxcustomparameteractionapi?language=objc			<section class="prog__container"><p>The FxCustomParameterActionAPI protocol defines the methods the host application provides to support a custom parameter view.</p><pre><code>FxCustomParameterActionAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxcustomparameteractionapi?language=objc
FxCustomParameterActionAPI_v2	A							https://developer.apple.com/reference/fxplug/fxcustomparameteractionapi_v2?language=objc			<section class="prog__container"><p>The FxCustomParameterActionAPI_v2 protocol defines the methods supported by the host application in FxPlug SDK 2.0 to support a custom parameter view.</p><pre><code>FxCustomParameterActionAPI_v2</code></pre></section>	https://developer.apple.com/reference/fxplug/fxcustomparameteractionapi_v2?language=objc
FxCustomParameterActionAPI_v3	A							https://developer.apple.com/reference/fxplug/fxcustomparameteractionapi_v3?language=objc			<section class="prog__container"><p>The FxCustomParameterActionAPI_v3 protocol defines the methods supported by the host application in FxPlug SDK 3 to support a custom parameter view.</p><pre><code>FxCustomParameterActionAPI_v3</code></pre></section>	https://developer.apple.com/reference/fxplug/fxcustomparameteractionapi_v3?language=objc
FxCustomParameterInterpolation	A							https://developer.apple.com/reference/fxplug/fxcustomparameterinterpolation?language=objc			<section class="prog__container"><p>The FxCustomParameterInterpolation protocol defines the methods a plug-in must implement to generate interpolated (in-between) values between keyframes of custom parameters</p><pre><code>FxCustomParameterInterpolation</code></pre></section>	https://developer.apple.com/reference/fxplug/fxcustomparameterinterpolation?language=objc
FxCustomParameterViewHost	A							https://developer.apple.com/reference/fxplug/fxcustomparameterviewhost?language=objc			<section class="prog__container"><p>The FxCustomParameterViewHost protocol defines the interface a plug-in implements to present a custom user interface for one or more of its parameters.</p><pre><code>FxCustomParameterViewHost</code></pre></section>	https://developer.apple.com/reference/fxplug/fxcustomparameterviewhost?language=objc
FxDynamicParameterAPI	A							https://developer.apple.com/reference/fxplug/fxdynamicparameterapi?language=objc			<section class="prog__container"><p>The FxDynamicParameterAPI protocol is implemented by the host application and specifies how plug-ins create parameters dynamically.</p><pre><code>FxDynamicParameterAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxdynamicparameterapi?language=objc
FxFilter	A							https://developer.apple.com/reference/fxplug/fxfilter?language=objc			<section class="prog__container"><p>The FxFilter protocol defines the methods a filter plug-in must implement to render output.</p><pre><code>FxFilter</code></pre></section>	https://developer.apple.com/reference/fxplug/fxfilter?language=objc
FxGenerator	A							https://developer.apple.com/reference/fxplug/fxgenerator?language=objc			<section class="prog__container"><p>The FxGenerator protocol defines the methods a generator plug-in must implement to render output. </p><pre><code>FxGenerator</code></pre></section>	https://developer.apple.com/reference/fxplug/fxgenerator?language=objc
FxHostCapabilities	A							https://developer.apple.com/reference/fxplug/fxhostcapabilities?language=objc			<section class="prog__container"><p>The FxHostCapabilities class is implemented by the plug-in and provides information about the host application’s environment.</p><pre><code>FxHostCapabilities</code></pre></section>	https://developer.apple.com/reference/fxplug/fxhostcapabilities?language=objc
FxHostResourcesAPI	A							https://developer.apple.com/reference/fxplug/fxhostresourcesapi?language=objc			<section class="prog__container"><p>The FxHostResourcesAPI protocol defines methods that the host application implements to allocate and track resources.</p><pre><code>FxHostResourcesAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxhostresourcesapi?language=objc
FxHostResourcesClient	A							https://developer.apple.com/reference/fxplug/fxhostresourcesclient?language=objc			<section class="prog__container"><p>The FxHostResourcesClient protocol defines methods that plug-ins implement if they want the host application to request that the plug-in free memory in low-memory situations.</p><pre><code>FxHostResourcesClient</code></pre></section>	https://developer.apple.com/reference/fxplug/fxhostresourcesclient?language=objc
FxImage	A							https://developer.apple.com/reference/fxplug/fximage?language=objc			<section class="prog__container"><p>The FxImage class is the parent class of the FxBitmap and FxTexture classes.</p><pre><code>FxImage</code></pre></section>	https://developer.apple.com/reference/fxplug/fximage?language=objc
FxKeyframeAPI	A							https://developer.apple.com/reference/fxplug/fxkeyframeapi?language=objc			<section class="prog__container"><p>The FxKeyframeAPI protocol defines the host application’s methods that allow plug-ins to set and retrieve keyframes for the parameters they have.</p><pre><code>FxKeyframeAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxkeyframeapi?language=objc
FxKeyframeAPI_v2	A							https://developer.apple.com/reference/fxplug/fxkeyframeapi_v2?language=objc			<section class="prog__container"><p>The FxKeyframeAPI_v2 protocol defines the host application’s methods that allow plug-ins to set and retrieve keyframes for the parameters they have.</p><pre><code>FxKeyframeAPI_v2</code></pre></section>	https://developer.apple.com/reference/fxplug/fxkeyframeapi_v2?language=objc
FxLightingAPI	A							https://developer.apple.com/reference/fxplug/fxlightingapi?language=objc			<section class="prog__container"><p>The FxLightingAPI protocol defines the host interface that allows a plug-in to get information about lights in a scene in a Motion project.</p><pre><code>FxLightingAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxlightingapi?language=objc
FxLightingAPI_v2	A							https://developer.apple.com/reference/fxplug/fxlightingapi_v2?language=objc			<section class="prog__container"><p>The FxLightingAPI_v2 protocol defines the host interface that allows a plug-in to get information about lights in a scene in a Motion project.</p><pre><code>FxLightingAPI_v2</code></pre></section>	https://developer.apple.com/reference/fxplug/fxlightingapi_v2?language=objc
FxMatrix44	A							https://developer.apple.com/reference/fxplug/fxmatrix44?language=objc			<section class="prog__container"><p>The FxMatrix class encapsulates a 4x4 matrix object and provides matrix inversion and transforming of 2D and 3D points.</p><pre><code>FxMatrix</code></pre></section>	https://developer.apple.com/reference/fxplug/fxmatrix44?language=objc
FxOnScreenControl	A							https://developer.apple.com/reference/fxplug/fxonscreencontrol?language=objc			<section class="prog__container"><p>The FxOnScreenControl protocol defines the methods a plug-in must implement to create on-screen parameter controls.</p><pre><code>FxOnScreenControl</code></pre></section>	https://developer.apple.com/reference/fxplug/fxonscreencontrol?language=objc
FxOnScreenControl_v2	A							https://developer.apple.com/reference/fxplug/fxonscreencontrol_v2?language=objc			<section class="prog__container"><p>The FxOnScreenControl_v2 protocol is defined by the host to allow plug-ins to create on-screen controls that keep track of when the mouse enters or leaves an object and when the cursor is moved within an object.</p><pre><code>FxOnScreenControl_v2</code></pre></section>	https://developer.apple.com/reference/fxplug/fxonscreencontrol_v2?language=objc
FxOnScreenControlAPI	A							https://developer.apple.com/reference/fxplug/fxonscreencontrolapi?language=objc			<section class="prog__container"><p>The FxOnScreenControlAPI protocol defines the methods the host application uses to draw controls and other user interface elements directly on the canvas where the user has applied the plug-in.</p><pre><code>FxOnScreenControlAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxonscreencontrolapi?language=objc
FxOnScreenControlAPI_v2	A							https://developer.apple.com/reference/fxplug/fxonscreencontrolapi_v2?language=objc			<section class="prog__container"><p>The FxOnScreenControlAPI_v2 protocol specifies additions to the FxOnScreenControlAPI protocol which defines the methods the host application provides to manage conversions between various on-screen coordinate spaces.</p><pre><code>FxOnScreenControlAPI_v2</code></pre></section>	https://developer.apple.com/reference/fxplug/fxonscreencontrolapi_v2?language=objc
FxOnScreenControlAPI_v3	A							https://developer.apple.com/reference/fxplug/fxonscreencontrolapi_v3?language=objc			<section class="prog__container"><p>The FxOnScreenControlAPI_v3 protocol specifies additions to the FxOnScreenControlAPI protocol which defines the methods the host application provides to manage conversions between various on-screen coordinate spaces.</p><pre><code>FxOnScreenControlAPI_v3</code></pre></section>	https://developer.apple.com/reference/fxplug/fxonscreencontrolapi_v3?language=objc
FxOnScreenControlAPI_v4	A							https://developer.apple.com/reference/fxplug/fxonscreencontrolapi_v4?language=objc			<section class="prog__container"><p>The FxOnScreenControlAPI_v4 protocol specifies additions to the FxOnScreenControlAPI protocol which defines the methods the host application provides to manage conversions between various on-screen coordinate spaces.</p><pre><code>FxOnScreenControlAPI_v4</code></pre></section>	https://developer.apple.com/reference/fxplug/fxonscreencontrolapi_v4?language=objc
FxOptionalParameterCreationAPI	A							https://developer.apple.com/reference/fxplug/fxoptionalparametercreationapi?language=objc			<section class="prog__container"><p>The FxOptionalParameterCreationAPI protocol defines the methods implemented by the host application for creating parameters of optional types.</p><pre><code>FxParameterCreationAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxoptionalparametercreationapi?language=objc
FxOptionalParameterRetrievalAPI	A							https://developer.apple.com/reference/fxplug/fxoptionalparameterretrievalapi?language=objc			<section class="prog__container"><p>The FxOptionalParameterRetrievalAPI protocol defines the methods the host application provides to retrieve parameter values.</p><pre><code>FxOptionalParameterRetrievalAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxoptionalparameterretrievalapi?language=objc
FxOptionalParameterRetrievalAPI_v2	A							https://developer.apple.com/reference/fxplug/fxoptionalparameterretrievalapi_v2?language=objc			<section class="prog__container"><p>The FxOptionalParameterRetrievalAPI_v2 protocol defines the methods the host application provides to retrieve parameter values.</p><pre><code>FxOptionalParameterRetrievalAPI_v2</code></pre></section>	https://developer.apple.com/reference/fxplug/fxoptionalparameterretrievalapi_v2?language=objc
FxOptionalParameterSettingAPI	A							https://developer.apple.com/reference/fxplug/fxoptionalparametersettingapi?language=objc			<section class="prog__container"><p>The FxOptionalParameterSettingAPI protocol defines the methods that host application provide to set parameter values.</p><pre><code>FxOptionalParameterSettingAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxoptionalparametersettingapi?language=objc
FxParameterCreationAPI	A							https://developer.apple.com/reference/fxplug/fxparametercreationapi?language=objc			<section class="prog__container"><p>The FxParameterCreationAPI protocol defines the methods provided by the host application to create parameters.</p><pre><code>FxParameterCreationAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxparametercreationapi?language=objc
FxParameterCreationAPI_v2	A							https://developer.apple.com/reference/fxplug/fxparametercreationapi_v2?language=objc			<section class="prog__container"><p>The FxParameterCreationAPI_v2 protocol defines the methods provided by the host application to create parameters.</p><pre><code>FxParameterCreationAPI_v2</code></pre></section>	https://developer.apple.com/reference/fxplug/fxparametercreationapi_v2?language=objc
FxParameterCreationAPI_v3	A							https://developer.apple.com/reference/fxplug/fxparametercreationapi_v3?language=objc			<section class="prog__container"><p>The FxParameterCreationAPI_v3 protocol defines the methods provided by the host application to create parameters.</p><pre><code>FxParameterCreationAPI_v3</code></pre></section>	https://developer.apple.com/reference/fxplug/fxparametercreationapi_v3?language=objc
FxParameterCreationAPI_v4	A							https://developer.apple.com/reference/fxplug/fxparametercreationapi_v4?language=objc			<section class="prog__container"><p>The FxParameterCreationAPI_v4 protocol defines the methods provided by the host application to create parameters.</p><pre><code>FxParameterCreationAPI_v4</code></pre></section>	https://developer.apple.com/reference/fxplug/fxparametercreationapi_v4?language=objc
FxParameterRetrievalAPI	A							https://developer.apple.com/reference/fxplug/fxparameterretrievalapi?language=objc			<section class="prog__container"><p>The FxParameterRetrievalAPI protocol defines the methods the host application provides to retrieve parameter values.</p><pre><code>FxParameterRetrievalAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxparameterretrievalapi?language=objc
FxParameterRetrievalAPI_v2	A							https://developer.apple.com/reference/fxplug/fxparameterretrievalapi_v2?language=objc			<section class="prog__container"><p>The FxParameterRetrievalAPI_v2 protocol defines the methods the host application provides to retrieve parameter values.</p><pre><code>FxParameterRetrievalAPI_v2</code></pre></section>	https://developer.apple.com/reference/fxplug/fxparameterretrievalapi_v2?language=objc
FxParameterRetrievalAPI_v3	A							https://developer.apple.com/reference/fxplug/fxparameterretrievalapi_v3?language=objc			<section class="prog__container"><p>The FxParameterRetrievalAPI_v3 protocol defines the methods the host application provides to retrieve parameter values.</p><pre><code>FxParameterRetrievalAPI_v3</code></pre></section>	https://developer.apple.com/reference/fxplug/fxparameterretrievalapi_v3?language=objc
FxParameterRetrievalAPI_v4	A							https://developer.apple.com/reference/fxplug/fxparameterretrievalapi_v4?language=objc			<section class="prog__container"><p>The FxParameterRetrievalAPI_v4 protocol defines the methods the host application provides to retrieve parameter values.</p><pre><code>FxParameterRetrievalAPI_v4</code></pre></section>	https://developer.apple.com/reference/fxplug/fxparameterretrievalapi_v4?language=objc
FxParameterRetrievalAPI_v5	A							https://developer.apple.com/reference/fxplug/fxparameterretrievalapi_v5?language=objc			<section class="prog__container"><p>The FxParameterRetrievalAPI_v5 protocol defines the methods the host application provides to retrieve parameter values.</p><pre><code>FxParameterRetrievalAPI_v5</code></pre></section>	https://developer.apple.com/reference/fxplug/fxparameterretrievalapi_v5?language=objc
FxParameterSettingAPI	A							https://developer.apple.com/reference/fxplug/fxparametersettingapi?language=objc			<section class="prog__container"><p>The FxParameterSettingAPI protocol defines the methods the host application provides to set a plug-in’s parameter values.</p><pre><code>FxParameterSettingAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxparametersettingapi?language=objc
FxParameterSettingAPI_v2	A							https://developer.apple.com/reference/fxplug/fxparametersettingapi_v2?language=objc			<section class="prog__container"><p>The FxParameterSettingAPI protocol defines the methods the host application provides to set a plug-in’s parameter values.</p><pre><code>FxParameterSettingAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxparametersettingapi_v2?language=objc
FxParameterSettingAPI_v3	A							https://developer.apple.com/reference/fxplug/fxparametersettingapi_v3?language=objc			<section class="prog__container"><p>The FxParameterSettingAPI_v3 protocol defines the methods the host application provides to set a plug-in’s parameter values.</p><pre><code>FxParameterSettingAPI_v3</code></pre></section>	https://developer.apple.com/reference/fxplug/fxparametersettingapi_v3?language=objc
FxParameterSettingAPI_v4	A							https://developer.apple.com/reference/fxplug/fxparametersettingapi_v4?language=objc			<section class="prog__container"><p>The FxParameterSettingAPI_v4 protocol defines the methods the host application provides to set a plug-in’s parameter values.</p><pre><code>FxParameterSettingAPI_v4</code></pre></section>	https://developer.apple.com/reference/fxplug/fxparametersettingapi_v4?language=objc
FxPathAPI	A							https://developer.apple.com/reference/fxplug/fxpathapi?language=objc			<section class="prog__container"><p>The FxPathAPI protocol provides an interface that the host application implements to allow for retrieving information about paths, shapes, and masks the user has drawn on an object.</p><pre><code>FxPathAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxpathapi?language=objc
FxPathAPI_v2	A							https://developer.apple.com/reference/fxplug/fxpathapi_v2?language=objc			<section class="prog__container"><p>The FxPathAPI_v2 protocol provides an interface that the host application implements to allow for retrieving information about paths, shapes, and masks the user has drawn on an object. It is a new API that uses FxTime and handles NSError's consistently with other familiar APIs.</p><pre><code>FxPathAPI_v2</code></pre></section>	https://developer.apple.com/reference/fxplug/fxpathapi_v2?language=objc
FxPlug Constants	A							https://developer.apple.com/reference/fxplug/fxplug_constants?language=objc			<section class="prog__container"><p>This document describes the constants defined in the FxPlug SDK that are not class specific.</p><pre><code>kFxActiveAlternateListRowColor</code></pre></section>	https://developer.apple.com/reference/fxplug/fxplug_constants?language=objc
FxPlug Data Types	A							https://developer.apple.com/reference/fxplug/fxplug_data_types?language=objc			<section class="prog__container"><p>This document describes the data types defined in the FxPlug SDK that are not class specific.</p><pre><code>FxColorPrimaries</code></pre></section>	https://developer.apple.com/reference/fxplug/fxplug_data_types?language=objc
FxPrincipalAPI	A							https://developer.apple.com/reference/fxplug/fxprincipalapi?language=objc			<section class="prog__container"><p>The FxPrincipalAPI protocol provides an interface that the host application implements to retrieve an XPC proxy object for communicating with its XPC.</p><pre><code>FxPrincipalAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxprincipalapi?language=objc
FxProgressAPI	A							https://developer.apple.com/reference/fxplug/fxprogressapi?language=objc			<section class="prog__container"><p>The FxProgressAPI protocol defines the methods implemented by a host application that allow a plug-in to report progress and support user cancellation.</p><pre><code>FxProgressAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxprogressapi?language=objc
FxRenderNotificationAPI	A							https://developer.apple.com/reference/fxplug/fxrendernotificationapi?language=objc			<section class="prog__container"><p>The FxRenderNotificationAPI protocol defines a host method that allows the plug-in to force host application to re-render.</p><pre><code>FxRenderNotificationAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxrendernotificationapi?language=objc
FxTemporalImageAPI	A							https://developer.apple.com/reference/fxplug/fxtemporalimageapi?language=objc			<section class="prog__container"><p>The FxTemporalImageAPI protocol defines the methods the host application provides to access an input image at a specific time.</p><pre><code>FxTemporalImageAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxtemporalimageapi?language=objc
FxTemporalImageAPI_v2	A							https://developer.apple.com/reference/fxplug/fxtemporalimageapi_v2?language=objc			<section class="prog__container"><p>The FxTemporalImageAPI_v2 protocol defines the methods the host application provides to access an input image at a specific time.</p><pre><code>FxTemporalImageAPI_v2</code></pre></section>	https://developer.apple.com/reference/fxplug/fxtemporalimageapi_v2?language=objc
FxTemporalTransitionImageAPI	A							https://developer.apple.com/reference/fxplug/fxtemporaltransitionimageapi?language=objc			<section class="prog__container"><p>The FxTemporalTransitionImageAPI protocol defines the methods the host application provides to access an input image at a specific time from a transition.</p><pre><code>FxTemporalTransitionImageAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxtemporaltransitionimageapi?language=objc
FxTexture	A							https://developer.apple.com/reference/fxplug/fxtexture?language=objc			<section class="prog__container"><p>The FxTexture class defines the methods that allow VRAM-based images to be used for hardware-accelerated rendering.</p><pre><code>FxTexture</code></pre></section>	https://developer.apple.com/reference/fxplug/fxtexture?language=objc
FxTimingAPI	A							https://developer.apple.com/reference/fxplug/fxtimingapi?language=objc			<section class="prog__container"><p>The FxTimingAPI protocol defines the methods provided by the host application to allow a plug-in to query the timing properties of its input image or images, image parameters, effect, timeline, and in/out points.</p><pre><code>FxTimingAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxtimingapi?language=objc
FxTimingAPI_v2	A							https://developer.apple.com/reference/fxplug/fxtimingapi_v2?language=objc			<section class="prog__container"><p>The FxTimingAPI_v2 protocol defines the method implemented by the host application that allows a plug-in to query the timing properties of its input image or images, image parameters, effect, timeline, and in/out points.</p><pre><code>FxTimingAPI_v2</code></pre></section>	https://developer.apple.com/reference/fxplug/fxtimingapi_v2?language=objc
FxTimingAPI_v3	A							https://developer.apple.com/reference/fxplug/fxtimingapi_v3?language=objc			<section class="prog__container"><p>The FxTimingAPI_v3 protocol defines the methods implemented by the host application that allows a plug-in to query the timing properties of its input image or images, image parameters, effect, timeline, and in/out points.</p><pre><code>FxTimingAPI_v3</code></pre></section>	https://developer.apple.com/reference/fxplug/fxtimingapi_v3?language=objc
FxTransition	A							https://developer.apple.com/reference/fxplug/fxtransition?language=objc			<section class="prog__container"><p>The FxTransition protocol defines the the methods a transition plug-in needs to implement.</p><pre><code>FxTransition</code></pre></section>	https://developer.apple.com/reference/fxplug/fxtransition?language=objc
FxUndoAPI	A							https://developer.apple.com/reference/fxplug/fxundoapi?language=objc			<section class="prog__container"><p>The FxUndoAPI protocol defines the methods implemented by the host application to allow a plug-in to manage the host application's undo queue.</p><pre><code>FxUndoAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxundoapi?language=objc
FxVersioningAPI	A							https://developer.apple.com/reference/fxplug/fxversioningapi?language=objc			<section class="prog__container"><p>The FxVersioningAPI protocol defines the methods a host application implements for identifying the version of the plug-in that was used by a project when the project was first created.</p><pre><code>FxVersioningAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxversioningapi?language=objc
FxWindowAPI	A							https://developer.apple.com/reference/fxplug/fxwindowapi?language=objc			<section class="prog__container"><p>The FxWindowAPI protocol defines a set of methods a host application implements that allows plug-in to create and destroy a window.</p><pre><code>FxWindowAPI</code></pre></section>	https://developer.apple.com/reference/fxplug/fxwindowapi?language=objc
FxWindowHost	A							https://developer.apple.com/reference/fxplug/fxwindowhost?language=objc			<section class="prog__container"><p>the FxWindowHost protocol must be implemented by a plug-in if it wishes to host windows in the applications user interface.</p><pre><code>FxWindowHost</code></pre></section>	https://developer.apple.com/reference/fxplug/fxwindowhost?language=objc
GCController	A							https://developer.apple.com/reference/gamecontroller/gccontroller			<section class="prog__container"><p>A representation of a physical game controller, connected to the device either physically or through a wireless connection.</p><pre><code>class func startWirelessControllerDiscovery(completionHandler: (() -> Void)? = nil)</code></pre></section>	https://developer.apple.com/reference/gamecontroller/gccontroller
GCControllerAxisInput	A							https://developer.apple.com/reference/gamecontroller/gccontrolleraxisinput			<section class="prog__container"><p>A control element measuring movement along a particular axis.</p><pre><code>var value: Float</code></pre></section>	https://developer.apple.com/reference/gamecontroller/gccontrolleraxisinput
GCControllerButtonInput	A							https://developer.apple.com/reference/gamecontroller/gccontrollerbuttoninput			<section class="prog__container"><p>A control element measuring a button press. </p><pre><code>var isPressed: Bool</code></pre></section>	https://developer.apple.com/reference/gamecontroller/gccontrollerbuttoninput
GCControllerDirectionPad	A							https://developer.apple.com/reference/gamecontroller/gccontrollerdirectionpad			<section class="prog__container"><p>A control element associated with a directional pad or a thumbstick.</p><pre><code>var xAxis: GCControllerAxisInput</code></pre></section>	https://developer.apple.com/reference/gamecontroller/gccontrollerdirectionpad
GCControllerElement	A							https://developer.apple.com/reference/gamecontroller/gccontrollerelement			<section class="prog__container"><p>An input associated with a physical control, such as a button or thumbstick.</p><pre><code>isAnalog</code></pre></section>	https://developer.apple.com/reference/gamecontroller/gccontrollerelement
GCEventViewController	A							https://developer.apple.com/reference/gamecontroller/gceventviewcontroller			<section class="prog__container"><p>A view controller that determines how game controller input data is routed by the operating system.</p><pre><code>GCEventViewController</code></pre></section>	https://developer.apple.com/reference/gamecontroller/gceventviewcontroller
GCExtendedGamepad	A							https://developer.apple.com/reference/gamecontroller/gcextendedgamepad			<section class="prog__container"><p>The extended set of gamepad controls.</p><pre><code>var controller: GCController?</code></pre></section>	https://developer.apple.com/reference/gamecontroller/gcextendedgamepad
GCExtendedGamepadSnapshot	A							https://developer.apple.com/reference/gamecontroller/gcextendedgamepadsnapshot			<section class="prog__container"><p>A recording of all of the values provided by a GCExtendedGamepad object. </p><pre><code>GCExtendedGamepad</code></pre></section>	https://developer.apple.com/reference/gamecontroller/gcextendedgamepadsnapshot
GCGamepad	A							https://developer.apple.com/reference/gamecontroller/gcgamepad			<section class="prog__container"><p>The standard set of gamepad controls. </p><pre><code>var controller: GCController?</code></pre></section>	https://developer.apple.com/reference/gamecontroller/gcgamepad
GCGamepadSnapshot	A							https://developer.apple.com/reference/gamecontroller/gcgamepadsnapshot			<section class="prog__container"><p>A recording of all of the values provided by a GCGamepad object.</p><pre><code>GCGamepad</code></pre></section>	https://developer.apple.com/reference/gamecontroller/gcgamepadsnapshot
GCMicroGamepad	A							https://developer.apple.com/reference/gamecontroller/gcmicrogamepad			<section class="prog__container"><p>The controls provided by the Siri Remote.</p><pre><code>var controller: GCController?</code></pre></section>	https://developer.apple.com/reference/gamecontroller/gcmicrogamepad
GCMicroGamepadSnapshot	A							https://developer.apple.com/reference/gamecontroller/gcmicrogamepadsnapshot			<section class="prog__container"><p>A recording of all of the values provided by a GCMicroGamepad object.</p><pre><code>GCMicroGamepad</code></pre></section>	https://developer.apple.com/reference/gamecontroller/gcmicrogamepadsnapshot
GCMotion	A							https://developer.apple.com/reference/gamecontroller/gcmotion			<section class="prog__container"><p>Information about the orientation and motion of the controller.</p><pre><code>var controller: GCController?</code></pre></section>	https://developer.apple.com/reference/gamecontroller/gcmotion
GameKit Constants	A							https://developer.apple.com/reference/gamekit/gamekit_constants			<section class="prog__container"><p>GameKit constants affecting multiple classes.</p><pre><code>let GKPlayerAuthenticationDidChangeNotificationName: String</code></pre></section>	https://developer.apple.com/reference/gamekit/gamekit_constants
GameKit Data Types	A							https://developer.apple.com/reference/gamekit/gamekit_data_types			<section class="prog__container"><p>GameKit data types affecting multiple classes.</p><pre><code>GKChallengeComposeCompletionBlock</code></pre></section>	https://developer.apple.com/reference/gamekit/gamekit_data_types
GameKit Enumerations	A							https://developer.apple.com/reference/gamekit/gamekit_enumerations			<section class="prog__container"><p>GameKit enumerations affecting multiple classes.</p><pre><code>GKConnectionState</code></pre></section>	https://developer.apple.com/reference/gamekit/gamekit_enumerations
GameKit Error Domains	A							https://developer.apple.com/reference/gamekit/gamekit_error_domains			<section class="prog__container"><p>The error code domains for GameKit.</p><pre><code>GKError</code></pre></section>	https://developer.apple.com/reference/gamekit/gamekit_error_domains
GKAchievement	A							https://developer.apple.com/reference/gamekit/gkachievement			<section class="prog__container"><p>An object that communicates with Game Center about the local player’s progress towards completing an achievement.</p><pre><code>percentComplete</code></pre></section>	https://developer.apple.com/reference/gamekit/gkachievement
GKAchievementChallenge	A							https://developer.apple.com/reference/gamekit/gkachievementchallenge			<section class="prog__container"><p>A challenge sent to another player urging them to complete a specific achievement.</p><pre><code>var achievement: GKAchievement?</code></pre></section>	https://developer.apple.com/reference/gamekit/gkachievementchallenge
GKAchievementDescription	A							https://developer.apple.com/reference/gamekit/gkachievementdescription			<section class="prog__container"><p>An object holding text and images used to describe an achievement for an app.</p><pre><code>notAuthenticated</code></pre></section>	https://developer.apple.com/reference/gamekit/gkachievementdescription
GKBasePlayer	A							https://developer.apple.com/reference/gamekit/gkbaseplayer			<section class="prog__container"><p>The top level player object containing basic identifying information for a player.</p><pre><code>GKBasePlayer</code></pre></section>	https://developer.apple.com/reference/gamekit/gkbaseplayer
GKChallenge	A							https://developer.apple.com/reference/gamekit/gkchallenge			<section class="prog__container"><p>An object representing a challenge issued by the local player to another player.</p><pre><code>notAuthenticated</code></pre></section>	https://developer.apple.com/reference/gamekit/gkchallenge
GKChallengeListener	A							https://developer.apple.com/reference/gamekit/gkchallengelistener			<section class="prog__container"><p>An object that responds to challenge events.</p><pre><code>GKChallengeListener</code></pre></section>	https://developer.apple.com/reference/gamekit/gkchallengelistener
GKCloudPlayer	A							https://developer.apple.com/reference/gamekit/gkcloudplayer			<section class="prog__container"><p>The object representing the currently signed in iCloud user.</p><pre><code>class func getCurrentSignedInPlayer(forContainer: String?, completionHandler: @escaping (GKCloudPlayer?, Error?) -> Void)</code></pre></section>	https://developer.apple.com/reference/gamekit/gkcloudplayer
GKDialogController	A							https://developer.apple.com/reference/gamekit/gkdialogcontroller			<section class="prog__container"><p>An object that provides the ability to present Game Center view controller classes in macOS.</p><pre><code>GKDialogController</code></pre></section>	https://developer.apple.com/reference/gamekit/gkdialogcontroller
GKFriendRequestComposeViewControllerDelegate	A							https://developer.apple.com/reference/gamekit/gkfriendrequestcomposeviewcontrollerdelegate			<section class="prog__container"><p>The GKFriendRequestComposeViewControllerDelegate protocol is implemented by delegates of the GKFriendRequestComposeViewController class. The delegate is called when the player dismisses the friend request.</p><pre><code>GKFriendRequestComposeViewControllerDelegate</code></pre></section>	https://developer.apple.com/reference/gamekit/gkfriendrequestcomposeviewcontrollerdelegate
GKGameCenterControllerDelegate	A							https://developer.apple.com/reference/gamekit/gkgamecentercontrollerdelegate			<section class="prog__container"><p>The delegate is called when the player dismisses the Game Center user interface.</p><pre><code>GKGameCenterViewController</code></pre></section>	https://developer.apple.com/reference/gamekit/gkgamecentercontrollerdelegate
GKGameCenterViewController	A							https://developer.apple.com/reference/gamekit/gkgamecenterviewcontroller			<section class="prog__container"><p>A single user interface used to display achievements and leaderboards supported by Game Center.</p><pre><code>notAuthenticated</code></pre></section>	https://developer.apple.com/reference/gamekit/gkgamecenterviewcontroller
GKGameSession	A							https://developer.apple.com/reference/gamekit/gkgamesession			<section class="prog__container"><p>An object used for saving game data, inviting other players, and creating turn-based and realtime game apps.</p><pre><code>GKGameSession</code></pre></section>	https://developer.apple.com/reference/gamekit/gkgamesession
GKGameSessionEventListener	A							https://developer.apple.com/reference/gamekit/gkgamesessioneventlistener			<section class="prog__container"><p>An object that handles game session events.</p><pre><code>func session(GKGameSession, didAdd: GKCloudPlayer)</code></pre></section>	https://developer.apple.com/reference/gamekit/gkgamesessioneventlistener
GKGameSessionSharingViewController	A							https://developer.apple.com/reference/gamekit/gkgamesessionsharingviewcontroller			<section class="prog__container"><p>An object that displays a user interface, allowing users to invite others into their tvOS game session.</p><pre><code>init(session: GKGameSession)</code></pre></section>	https://developer.apple.com/reference/gamekit/gkgamesessionsharingviewcontroller
GKGameSessionSharingViewControllerDelegate	A							https://developer.apple.com/reference/gamekit/gkgamesessionsharingviewcontrollerdelegate			<section class="prog__container"><p>The protocol you implement to respond to changes to a sharing user interface, represented by a GKGameSessionSharingViewController.</p><pre><code>GKGameSessionSharingViewController</code></pre></section>	https://developer.apple.com/reference/gamekit/gkgamesessionsharingviewcontrollerdelegate
GKInviteEventListener	A							https://developer.apple.com/reference/gamekit/gkinviteeventlistener			<section class="prog__container"><p>An object that handles invite events from Game Center.</p><pre><code>GKInviteEventListener</code></pre></section>	https://developer.apple.com/reference/gamekit/gkinviteeventlistener
GKLeaderboard	A							https://developer.apple.com/reference/gamekit/gkleaderboard			<section class="prog__container"><p>An object used to read data from a leaderboard stored on Game Center.</p><pre><code>notAuthenticated</code></pre></section>	https://developer.apple.com/reference/gamekit/gkleaderboard
GKLeaderboardSet	A							https://developer.apple.com/reference/gamekit/gkleaderboardset			<section class="prog__container"><p>An object that organizes leaderboards into logical and coherent groups.</p><pre><code>GKLeaderboardSet</code></pre></section>	https://developer.apple.com/reference/gamekit/gkleaderboardset
GKLocalPlayer	A							https://developer.apple.com/reference/gamekit/gklocalplayer			<section class="prog__container"><p>An object representing the authenticated Game Center player running your game on a device.</p><pre><code>localPlayer()</code></pre></section>	https://developer.apple.com/reference/gamekit/gklocalplayer
GKLocalPlayerListener	A							https://developer.apple.com/reference/gamekit/gklocalplayerlistener			<section class="prog__container"><p>The protocol you implement to handle events for Game Center accounts.</p><pre><code>GKChallengeListener</code></pre></section>	https://developer.apple.com/reference/gamekit/gklocalplayerlistener
GKPeerPickerControllerDelegate	A							https://developer.apple.com/reference/gamekit/gkpeerpickercontrollerdelegate			<section class="prog__container"><p>The GKPeerPickerControllerDelegate protocol is implemented on an object to customize the behavior of a GKPeerPickerController object. The delegate is called by the peer picker to create a session object and to respond as the session is configured by the controller.</p><pre><code>GKPeerPickerControllerDelegate</code></pre></section>	https://developer.apple.com/reference/gamekit/gkpeerpickercontrollerdelegate
GKPlayer	A							https://developer.apple.com/reference/gamekit/gkplayer			<section class="prog__container"><p>An object that provides information about a player on Game Center.</p><pre><code>notAuthenticated</code></pre></section>	https://developer.apple.com/reference/gamekit/gkplayer
GKScore	A							https://developer.apple.com/reference/gamekit/gkscore			<section class="prog__container"><p>An object containing information for a score that was earned by the player.</p><pre><code>notAuthenticated</code></pre></section>	https://developer.apple.com/reference/gamekit/gkscore
GKScoreChallenge	A							https://developer.apple.com/reference/gamekit/gkscorechallenge			<section class="prog__container"><p>An object representing a challenge based on a score in a leaderboard.</p><pre><code>var score: GKScore?</code></pre></section>	https://developer.apple.com/reference/gamekit/gkscorechallenge
GKSessionDelegate	A							https://developer.apple.com/reference/gamekit/gksessiondelegate			<section class="prog__container"><p>An object implements the GKSessionDelegate protocol to control the behavior of a GKSession object. The delegate is called when other visible peers change their state relative to the session. It is also called to determine whether another peer is allowed to connect to the session.</p><pre><code>GKSessionDelegate</code></pre></section>	https://developer.apple.com/reference/gamekit/gksessiondelegate
GKViewController	A							https://developer.apple.com/reference/gamekit/gkviewcontroller			<section class="prog__container"><p>An abstract base class for Game Center view controller classes.</p><pre><code>GKChallengesViewController</code></pre></section>	https://developer.apple.com/reference/gamekit/gkviewcontroller
GKVoiceChatClient	A							https://developer.apple.com/reference/gamekit/gkvoicechatclient			<section class="prog__container"><p>The GKVoiceChatClient protocol is implemented to control the behavior of the GKVoiceChatService object. The voice chat client has a number of responsibilities:</p><pre><code>GKVoiceChatClient</code></pre></section>	https://developer.apple.com/reference/gamekit/gkvoicechatclient
GKAgent	A							https://developer.apple.com/reference/gameplaykit/gkagent			<section class="prog__container"><p>A component that moves a game entity according to a set of goals and realistic constraints.</p><pre><code>GKAgent</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkagent
GKAgent2D	A							https://developer.apple.com/reference/gameplaykit/gkagent2d			<section class="prog__container"><p>An agent that operates in a two-dimensional space. </p><pre><code>GKAgent</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkagent2d
GKAgent3D	A							https://developer.apple.com/reference/gameplaykit/gkagent3d			<section class="prog__container"><p>An agent that operates in a three-dimensional space.</p><pre><code>GKAgent</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkagent3d
GKAgentDelegate	A							https://developer.apple.com/reference/gameplaykit/gkagentdelegate			<section class="prog__container"><p>Implement this protocol to synchronize the state of an agent with its visual representation in your game.</p><pre><code>GKAgent</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkagentdelegate
GKARC4RandomSource	A							https://developer.apple.com/reference/gameplaykit/gkarc4randomsource			<section class="prog__container"><p>A basic random number generator implementing the ARC4 algorithm, which is suitable for most gameplay mechanics. </p><pre><code>GKRandom</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkarc4randomsource
GKBehavior	A							https://developer.apple.com/reference/gameplaykit/gkbehavior			<section class="prog__container"><p>A set of goals that together influence the movement of an agent.</p><pre><code>GKGoal</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkbehavior
GKBillowNoiseSource	A							https://developer.apple.com/reference/gameplaykit/gkbillownoisesource			<section class="prog__container"><p>A procedural noise generator whose output is a type of fractal coherent noise with smooth features.</p><pre><code>GKPerlinNoiseSource</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkbillownoisesource
GKCheckerboardNoiseSource	A							https://developer.apple.com/reference/gameplaykit/gkcheckerboardnoisesource			<section class="prog__container"><p>A procedural noise generator whose output is an alternating square pattern.</p><pre><code>GKNoise</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkcheckerboardnoisesource
GKCircleObstacle	A							https://developer.apple.com/reference/gameplaykit/gkcircleobstacle			<section class="prog__container"><p>A circular impassable area to be avoided by agents.</p><pre><code>GKAgent</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkcircleobstacle
GKCoherentNoiseSource	A							https://developer.apple.com/reference/gameplaykit/gkcoherentnoisesource			<section class="prog__container"><p>The abstract superclass for procedural noise generators that create coherent noise.</p><pre><code>GKCoherentNoiseSource</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkcoherentnoisesource
GKComponent	A							https://developer.apple.com/reference/gameplaykit/gkcomponent			<section class="prog__container"><p>The abstract superclass for creating objects that add specific gameplay functionality to an entity.</p><pre><code>GKComponent</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkcomponent
GKComponentSystem	A							https://developer.apple.com/reference/gameplaykit/gkcomponentsystem			<section class="prog__container"><p>Manages periodic update messages for all component objects of a specified class.</p><pre><code>GKComponentSystem</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkcomponentsystem
GKCompositeBehavior	A							https://developer.apple.com/reference/gameplaykit/gkcompositebehavior			<section class="prog__container"><p>A set of behaviors, each of which is a set of goals, that together influence the movement of an agent.</p><pre><code>GKGoal</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkcompositebehavior
GKConstantNoiseSource	A							https://developer.apple.com/reference/gameplaykit/gkconstantnoisesource			<section class="prog__container"><p>A procedural noise generator that outputs a field of a single constant value.</p><pre><code>GKNoise</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkconstantnoisesource
GKCylindersNoiseSource	A							https://developer.apple.com/reference/gameplaykit/gkcylindersnoisesource			<section class="prog__container"><p>A procedural noise generator whose output is a 3D field of concentric cylindrical shells.</p><pre><code>GKNoiseSource</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkcylindersnoisesource
GKDecisionNode	A							https://developer.apple.com/reference/gameplaykit/gkdecisionnode			<section class="prog__container"><p>A node for use in manually creating decision trees, representing a specific question and possible answers, or an action that follows from answering other questions.</p><pre><code>GKDecisionNode</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkdecisionnode
GKDecisionTree	A							https://developer.apple.com/reference/gameplaykit/gkdecisiontree			<section class="prog__container"><p>A data structure that models a set of specific questions, their possible answers, and the actions that follow from a series of answers.</p><pre><code>GKDecisionTree</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkdecisiontree
GKEntity	A							https://developer.apple.com/reference/gameplaykit/gkentity			<section class="prog__container"><p>An object relevant to gameplay, with functionality entirely provided by a collection of component objects. </p><pre><code>GKEntity</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkentity
GKGameModel	A							https://developer.apple.com/reference/gameplaykit/gkgamemodel			<section class="prog__container"><p>Implement this protocol to describe your gameplay model so that a strategist object can plan game moves.</p><pre><code>GKStrategist</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkgamemodel
GKGameModelPlayer	A							https://developer.apple.com/reference/gameplaykit/gkgamemodelplayer			<section class="prog__container"><p>Implement this protocol to describe a player in your turn-based game so that a strategist object can plan game moves.</p><pre><code>GKStrategist</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkgamemodelplayer
GKGameModelUpdate	A							https://developer.apple.com/reference/gameplaykit/gkgamemodelupdate			<section class="prog__container"><p>Implement this protocol to describe a move in your turn-based game so that a strategist object can plan game moves.</p><pre><code>GKGameModel</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkgamemodelupdate
GKGaussianDistribution	A							https://developer.apple.com/reference/gameplaykit/gkgaussiandistribution			<section class="prog__container"><p>A generator for random numbers that follow a Gaussian distribution (also known as a normal distribution) across multiple samplings. </p><pre><code>GKRandomDistribution</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkgaussiandistribution
GKGoal	A							https://developer.apple.com/reference/gameplaykit/gkgoal			<section class="prog__container"><p>An influence that motivates the movement of one or more agents.</p><pre><code>GKAgent</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkgoal
GKGraph	A							https://developer.apple.com/reference/gameplaykit/gkgraph			<section class="prog__container"><p>A collection of nodes that describes the navigability of a game world and provides pathfinding methods to search for routes through that space.</p><pre><code>GKGraph</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkgraph
GKGraphNode	A							https://developer.apple.com/reference/gameplaykit/gkgraphnode			<section class="prog__container"><p>A single node in a navigation graph for use in pathfinding.</p><pre><code>GKGraph</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkgraphnode
GKGraphNode2D	A							https://developer.apple.com/reference/gameplaykit/gkgraphnode2d			<section class="prog__container"><p>A node in a navigation graph, associated with a point in continuous 2D space.</p><pre><code>GKGraph</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkgraphnode2d
GKGraphNode3D	A							https://developer.apple.com/reference/gameplaykit/gkgraphnode3d			<section class="prog__container"><p>A node in a navigation graph, associated with a point in continuous 3D space.</p><pre><code>GKGraph</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkgraphnode3d
GKGridGraph	A							https://developer.apple.com/reference/gameplaykit/gkgridgraph			<section class="prog__container"><p>A navigation graph for 2D game worlds where movement is constrained to an integer grid.</p><pre><code>GKGridGraphNode</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkgridgraph
GKGridGraphNode	A							https://developer.apple.com/reference/gameplaykit/gkgridgraphnode			<section class="prog__container"><p>A node in a navigation graph, associated with a position on a discrete two-dimensional grid.</p><pre><code>GKGridGraph</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkgridgraphnode
GKLinearCongruentialRandomSource	A							https://developer.apple.com/reference/gameplaykit/gklinearcongruentialrandomsource			<section class="prog__container"><p>A basic random number generator implementing the linear congruential generator algorithm, which is faster but less random than the default random source.</p><pre><code>GKRandom</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gklinearcongruentialrandomsource
GKMersenneTwisterRandomSource	A							https://developer.apple.com/reference/gameplaykit/gkmersennetwisterrandomsource			<section class="prog__container"><p>A basic random number generator implementing the Mersenne Twister algorithm, which is more random, but slower than the default random source.</p><pre><code>GKRandom</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkmersennetwisterrandomsource
GKMeshGraph	A							https://developer.apple.com/reference/gameplaykit/gkmeshgraph			<section class="prog__container"><p>A navigation graph for 2D game worlds that creates a space-filling network for smooth pathfinding around obstacles.</p><pre><code>GKObstacle</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkmeshgraph
GKMinmaxStrategist	A							https://developer.apple.com/reference/gameplaykit/gkminmaxstrategist			<section class="prog__container"><p>An AI that chooses moves in turn-based games using a deterministic strategy.</p><pre><code>GKGameModel</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkminmaxstrategist
GKMonteCarloStrategist	A							https://developer.apple.com/reference/gameplaykit/gkmontecarlostrategist			<section class="prog__container"><p>An AI that chooses moves in turn-based games using a probabilistic strategy.</p><pre><code>GKGameModel</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkmontecarlostrategist
GKNoise	A							https://developer.apple.com/reference/gameplaykit/gknoise			<section class="prog__container"><p>A representation of procedural noise, generated by a noise source, that you can use to process, transform, or combine noise.</p><pre><code>GKNoiseSource</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gknoise
GKNoiseMap	A							https://developer.apple.com/reference/gameplaykit/gknoisemap			<section class="prog__container"><p>A sample of procedural noise data from which you can read noise values directly or create noise textures.</p><pre><code>GKNoiseSource</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gknoisemap
GKNoiseSource	A							https://developer.apple.com/reference/gameplaykit/gknoisesource			<section class="prog__container"><p>The abstract superclass for procedural noise generators.</p><pre><code>GKPerlinNoiseSource</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gknoisesource
GKNSPredicateRule	A							https://developer.apple.com/reference/gameplaykit/gknspredicaterule			<section class="prog__container"><p>A rule for use in a rule system that uses a Foundation NSPredicate object to evaluate itself.</p><pre><code>NSPredicate</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gknspredicaterule
GKObstacle	A							https://developer.apple.com/reference/gameplaykit/gkobstacle			<section class="prog__container"><p>The abstract base class for objects representing impassable areas in a game world.</p><pre><code>GKCircleObstacle</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkobstacle
GKObstacleGraph	A							https://developer.apple.com/reference/gameplaykit/gkobstaclegraph			<section class="prog__container"><p>A navigation graph for 2D game worlds that creates a minimal network for precise pathfinding around obstacles.</p><pre><code>GKObstacle</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkobstaclegraph
GKOctree	A							https://developer.apple.com/reference/gameplaykit/gkoctree			<section class="prog__container"><p>A data structure for organizing objects based on their locations in a three-dimensional space.</p><pre><code>GKOctree</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkoctree
GKOctreeNode	A							https://developer.apple.com/reference/gameplaykit/gkoctreenode			<section class="prog__container"><p>A helper class for managing the objects you organize in an octree.</p><pre><code>GKOctree</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkoctreenode
GKPath	A							https://developer.apple.com/reference/gameplaykit/gkpath			<section class="prog__container"><p>A polygonal path that can be followed by an agent.</p><pre><code>init(toStayOn:maxPredictionTime:)</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkpath
GKPerlinNoiseSource	A							https://developer.apple.com/reference/gameplaykit/gkperlinnoisesource			<section class="prog__container"><p>A procedural noise generator whose output is a type of fractal coherent noise resembling natural phenomena such as clouds and terrain.</p><pre><code>GKNoiseSource</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkperlinnoisesource
GKPolygonObstacle	A							https://developer.apple.com/reference/gameplaykit/gkpolygonobstacle			<section class="prog__container"><p>A polygon-shaped impassable area in a 2D game world. </p><pre><code>GKObstacleGraph</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkpolygonobstacle
GKQuadtree	A							https://developer.apple.com/reference/gameplaykit/gkquadtree			<section class="prog__container"><p>A data structure for organizing objects based on their locations in a two-dimensional space.</p><pre><code>GKQuadtree</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkquadtree
GKQuadtreeNode	A							https://developer.apple.com/reference/gameplaykit/gkquadtreenode			<section class="prog__container"><p>A helper class for managing the objects you organize in a quadtree.</p><pre><code>GKQuadtree</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkquadtreenode
GKRandom	A							https://developer.apple.com/reference/gameplaykit/gkrandom			<section class="prog__container"><p>The common interface for all randomization classes in (or usable with) GameplayKit.</p><pre><code>GKRandomSource</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkrandom
GKRandomDistribution	A							https://developer.apple.com/reference/gameplaykit/gkrandomdistribution			<section class="prog__container"><p>A generator for random numbers that fall within a specific range and that exhibit a specific distribution over multiple samplings.</p><pre><code>GKRandom</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkrandomdistribution
GKRandomSource	A							https://developer.apple.com/reference/gameplaykit/gkrandomsource			<section class="prog__container"><p>The superclass for all basic randomization classes in GameplayKit.</p><pre><code>GKRandomDistribution</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkrandomsource
GKRidgedNoiseSource	A							https://developer.apple.com/reference/gameplaykit/gkridgednoisesource			<section class="prog__container"><p>A procedural noise generator whose output is a type of multifractal coherent noise with sharply defined features.</p><pre><code>GKPerlinNoiseSource</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkridgednoisesource
GKRTree	A							https://developer.apple.com/reference/gameplaykit/gkrtree			<section class="prog__container"><p>A data structure that adaptively organizes objects based on their locations in a two-dimensional space.</p><pre><code>GKRTree</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkrtree
GKRule	A							https://developer.apple.com/reference/gameplaykit/gkrule			<section class="prog__container"><p>A rule to be used in the context of a rule system, with a predicate to be tested and an action to be executed when the test succeeds.</p><pre><code>GKRuleSystem</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkrule
GKRuleSystem	A							https://developer.apple.com/reference/gameplaykit/gkrulesystem			<section class="prog__container"><p>A list of rules, together with a context for evaluating them and interpreting results, for use in constructing data-driven logic or fuzzy logic systems.</p><pre><code>GKRuleSystem</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkrulesystem
GKScene	A							https://developer.apple.com/reference/gameplaykit/gkscene			<section class="prog__container"><p>A container for associating GameplayKit objects with a SpriteKit scene.</p><pre><code>GKScene</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkscene
GKSceneRootNodeType	A							https://developer.apple.com/reference/gameplaykit/gkscenerootnodetype			<section class="prog__container"><p>Identifies scene classes from other frameworks that support embedded GameplayKit information. </p><pre><code>SKScene</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkscenerootnodetype
GKShuffledDistribution	A							https://developer.apple.com/reference/gameplaykit/gkshuffleddistribution			<section class="prog__container"><p>A generator for random numbers that are uniformly distributed across many samplings, but where short sequences of similar values are unlikely. </p><pre><code>GKRandomDistribution</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkshuffleddistribution
GKSKNodeComponent	A							https://developer.apple.com/reference/gameplaykit/gksknodecomponent			<section class="prog__container"><p>A component that manages a SpriteKit node.</p><pre><code>GKSKNodeComponent</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gksknodecomponent
GKSphereObstacle	A							https://developer.apple.com/reference/gameplaykit/gksphereobstacle			<section class="prog__container"><p>A spherical impassable volume to be avoided by agents.</p><pre><code>GKAgent</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gksphereobstacle
GKSpheresNoiseSource	A							https://developer.apple.com/reference/gameplaykit/gkspheresnoisesource			<section class="prog__container"><p>A procedural noise generator whose output is a 3D field of concentric spherical shells.</p><pre><code>GKNoiseSource</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkspheresnoisesource
GKState	A							https://developer.apple.com/reference/gameplaykit/gkstate			<section class="prog__container"><p>The abstract superclass for defining state-specific logic as part of a state machine.</p><pre><code>GKState</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkstate
GKStateMachine	A							https://developer.apple.com/reference/gameplaykit/gkstatemachine			<section class="prog__container"><p>A finite-state machine—a collection of state objects that each define logic for a particular state of gameplay and rules for transitioning between states. </p><pre><code>GKState</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkstatemachine
GKStrategist	A							https://developer.apple.com/reference/gameplaykit/gkstrategist			<section class="prog__container"><p>A general interface for objects that provide artificial intelligence for use in turn-based (and similar) games.</p><pre><code>GKGameModel</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkstrategist
GKVoronoiNoiseSource	A							https://developer.apple.com/reference/gameplaykit/gkvoronoinoisesource			<section class="prog__container"><p>A procedural noise generator whose output (also called Worley noise or cellular noise) divides space into discrete cells surrounding random seed points.</p><pre><code>GKNoiseSource</code></pre></section>	https://developer.apple.com/reference/gameplaykit/gkvoronoinoisesource
GLKBaseEffect	A							https://developer.apple.com/reference/glkit/glkbaseeffect			<section class="prog__container"><p>A simple lighting and shading system for use in shader-based OpenGL rendering.</p><pre><code>GLKBaseEffect</code></pre></section>	https://developer.apple.com/reference/glkit/glkbaseeffect
GLKEffectProperty	A							https://developer.apple.com/reference/glkit/glkeffectproperty			<section class="prog__container"><p>The abstract superclass for configuration information used in GLKit rendering effects.</p><pre><code>GLKEffectProperty</code></pre></section>	https://developer.apple.com/reference/glkit/glkeffectproperty
GLKEffectPropertyFog	A							https://developer.apple.com/reference/glkit/glkeffectpropertyfog			<section class="prog__container"><p>Fog drawing information for use in GLKit rendering effects. </p><pre><code>0.0</code></pre></section>	https://developer.apple.com/reference/glkit/glkeffectpropertyfog
GLKEffectPropertyLight	A							https://developer.apple.com/reference/glkit/glkeffectpropertylight			<section class="prog__container"><p>Lighting information for use in GLKit rendering effects.</p><pre><code>GLKEffectPropertyLight</code></pre></section>	https://developer.apple.com/reference/glkit/glkeffectpropertylight
GLKEffectPropertyMaterial	A							https://developer.apple.com/reference/glkit/glkeffectpropertymaterial			<section class="prog__container"><p>Surface appearance properties for use in GLKit rendering effects. </p><pre><code>GLKEffectPropertyMaterial</code></pre></section>	https://developer.apple.com/reference/glkit/glkeffectpropertymaterial
GLKEffectPropertyTexture	A							https://developer.apple.com/reference/glkit/glkeffectpropertytexture			<section class="prog__container"><p>Texture drawing parameters for use in GLKit rendering effects. </p><pre><code>GLKEffectPropertyTexture</code></pre></section>	https://developer.apple.com/reference/glkit/glkeffectpropertytexture
GLKEffectPropertyTransform	A							https://developer.apple.com/reference/glkit/glkeffectpropertytransform			<section class="prog__container"><p>Coordinate transform information for use in GLKit rendering effects. </p><pre><code>GLKEffectPropertyTransform</code></pre></section>	https://developer.apple.com/reference/glkit/glkeffectpropertytransform
GLKMatrixStack	A							https://developer.apple.com/reference/glkit/glkmatrixstack			<section class="prog__container"><p>An opaque type that represents a stack of 4 x 4 matrices, providing support for hierarchical transform modeling and similar tasks. </p></section>	https://developer.apple.com/reference/glkit/glkmatrixstack
GLKNamedEffect	A							https://developer.apple.com/reference/glkit/glknamedeffect			<section class="prog__container"><p>A standard interface for objects that provide shader-based OpenGL rendering effects.</p><pre><code>GLKNamedEffect</code></pre></section>	https://developer.apple.com/reference/glkit/glknamedeffect
GLKReflectionMapEffect	A							https://developer.apple.com/reference/glkit/glkreflectionmapeffect			<section class="prog__container"><p>A lighting and shading system that supports reflection mapping for use in shader-based OpenGL rendering.</p><pre><code>GLKBaseEffect</code></pre></section>	https://developer.apple.com/reference/glkit/glkreflectionmapeffect
GLKSkyboxEffect	A							https://developer.apple.com/reference/glkit/glkskyboxeffect			<section class="prog__container"><p>A simple skybox visual effect for use in shader-based OpenGL rendering.</p><pre><code>GLKSkyboxEffect</code></pre></section>	https://developer.apple.com/reference/glkit/glkskyboxeffect
GLKTextureInfo	A							https://developer.apple.com/reference/glkit/glktextureinfo			<section class="prog__container"><p>Information about OpenGL textures created by the GLKTextureLoader class.</p><pre><code>GLKTextureLoader</code></pre></section>	https://developer.apple.com/reference/glkit/glktextureinfo
GLKTextureLoader	A							https://developer.apple.com/reference/glkit/glktextureloader			<section class="prog__container"><p>A utility class that simplifies loading OpenGL or OpenGL ES texture datas from a variety of image file formats.</p><pre><code>GLKTextureLoader</code></pre></section>	https://developer.apple.com/reference/glkit/glktextureloader
GLKView	A							https://developer.apple.com/reference/glkit/glkview			<section class="prog__container"><p>A default implementation for views that draw their content using OpenGL ES.</p><pre><code>GLKView</code></pre></section>	https://developer.apple.com/reference/glkit/glkview
GLKViewController	A							https://developer.apple.com/reference/glkit/glkviewcontroller			<section class="prog__container"><p>A view controller that manages an OpenGL ES rendering loop.</p><pre><code>GLKViewController</code></pre></section>	https://developer.apple.com/reference/glkit/glkviewcontroller
GLKViewControllerDelegate	A							https://developer.apple.com/reference/glkit/glkviewcontrollerdelegate			<section class="prog__container"><p>Rendering loop callback methods for use with a GLKViewController object.</p><pre><code>GLKViewController</code></pre></section>	https://developer.apple.com/reference/glkit/glkviewcontrollerdelegate
GLKViewDelegate	A							https://developer.apple.com/reference/glkit/glkviewdelegate			<section class="prog__container"><p>Drawing callback methods for use with a GLKView object.</p><pre><code>GLKView</code></pre></section>	https://developer.apple.com/reference/glkit/glkviewdelegate
HKActivitySummary	A							https://developer.apple.com/reference/healthkit/hkactivitysummary			<section class="prog__container"><p>An HKActivitySummary object contains a summary of the user’s activity for a given day.</p><pre><code>HKActivitySummary</code></pre></section>	https://developer.apple.com/reference/healthkit/hkactivitysummary
HKActivitySummaryQuery	A							https://developer.apple.com/reference/healthkit/hkactivitysummaryquery			<section class="prog__container"><p>An activity summary query lets you read HKActivitySummary objects from the HealthKit store. </p><pre><code>HKActivitySummary</code></pre></section>	https://developer.apple.com/reference/healthkit/hkactivitysummaryquery
HKActivitySummaryType	A							https://developer.apple.com/reference/healthkit/hkactivitysummarytype			<section class="prog__container"><p>The HKActivitySummaryType class is a concrete subclass of the HKObjectType class. Use activity summary type objects when requesting permission to read HKActivitySummary objects from the HealthKit store. To create an activity summary type, use the activitySummaryType() convenience method.</p><pre><code>HKActivitySummaryType</code></pre></section>	https://developer.apple.com/reference/healthkit/hkactivitysummarytype
HKAnchoredObjectQuery	A							https://developer.apple.com/reference/healthkit/hkanchoredobjectquery			<section class="prog__container"><p>Anchored object queries provide an easy way to search for new data in the HealthKit store. An HKAnchoredObjectQuery object returns an anchor value that corresponds to the last sample or deleted object received by that query. Subsequent queries can use this anchor to restrict their results to only samples saved or deleted after the anchor’s sample.</p><pre><code>updateHandler</code></pre></section>	https://developer.apple.com/reference/healthkit/hkanchoredobjectquery
HKBiologicalSexObject	A							https://developer.apple.com/reference/healthkit/hkbiologicalsexobject			<section class="prog__container"><p>This class acts as a wrapper for the HKBiologicalSex enumeration.</p><pre><code>HKBiologicalSex</code></pre></section>	https://developer.apple.com/reference/healthkit/hkbiologicalsexobject
HKBloodTypeObject	A							https://developer.apple.com/reference/healthkit/hkbloodtypeobject			<section class="prog__container"><p>This class acts as a wrapper for the HKBloodType enumeration.</p><pre><code>HKBloodType</code></pre></section>	https://developer.apple.com/reference/healthkit/hkbloodtypeobject
HKCategorySample	A							https://developer.apple.com/reference/healthkit/hkcategorysample			<section class="prog__container"><p>The HKCategorySample class is a concrete subclass of the HKSample class. This class describes samples whose values are selected from an enumeration of values.</p><pre><code>HKCategorySample</code></pre></section>	https://developer.apple.com/reference/healthkit/hkcategorysample
HKCategoryType	A							https://developer.apple.com/reference/healthkit/hkcategorytype			<section class="prog__container"><p>The HKCategoryType class is a concrete subclass of the HKObjectType class. HealthKit uses category types to represent data that can be categorized into an enumeration of values. Use category type instances to create category samples that you can then save in the HealthKit store. For more information, see HKCategorySample.</p><pre><code>HKCategoryType</code></pre></section>	https://developer.apple.com/reference/healthkit/hkcategorytype
HKCDADocument	A							https://developer.apple.com/reference/healthkit/hkcdadocument			<section class="prog__container"><p>An HKCDADocument object represents a Clinical Document Architecture (CDA) document in HealthKit.</p><pre><code>HKCDADocument</code></pre></section>	https://developer.apple.com/reference/healthkit/hkcdadocument
HKCDADocumentSample	A							https://developer.apple.com/reference/healthkit/hkcdadocumentsample			<section class="prog__container"><p>The HKCDADocumentSample class is a concrete subclass of the HKDocumentSample class.</p><pre><code>HKCDADocumentSample</code></pre></section>	https://developer.apple.com/reference/healthkit/hkcdadocumentsample
HKCharacteristicType	A							https://developer.apple.com/reference/healthkit/hkcharacteristictype			<section class="prog__container"><p>The HKCharacteristicType class is a concrete subclass of the HKObjectType class. HealthKit uses characteristic types to represent data that does not typically change over time. Unlike the other object types, characteristic types cannot be used to create new HealthKit objects. Instead, users must enter and edit their characteristic data using the Health app. Characteristic types are used only when asking for permission to read data from the HealthKit store.</p><pre><code>HKCharacteristicType</code></pre></section>	https://developer.apple.com/reference/healthkit/hkcharacteristictype
HKCorrelation	A							https://developer.apple.com/reference/healthkit/hkcorrelation			<section class="prog__container"><p>The HKCorrelation class is a concrete subclass of the HKSample class. Use a correlation object to group multiple samples into a single data entry. HealthKit uses correlations to represent both blood pressure and food. Blood pressure correlations always include two quantity samples that represent the systolic and diastolic values. In contrast, food correlations can contain a wide range of dietary information about the food, including information about the fat, protein, carbohydrates, energy, and vitamins consumed. </p><pre><code>HKCorrelation</code></pre></section>	https://developer.apple.com/reference/healthkit/hkcorrelation
HKCorrelationQuery	A							https://developer.apple.com/reference/healthkit/hkcorrelationquery			<section class="prog__container"><p>HealthKit uses correlation queries to search for correlations in the HealthKit store. A correlation is a container that groups together a number of quantity or category samples. Use correlation queries to perform complex searches for HKCorrelation objects.</p><pre><code>HKCorrelation</code></pre></section>	https://developer.apple.com/reference/healthkit/hkcorrelationquery
HKCorrelationType	A							https://developer.apple.com/reference/healthkit/hkcorrelationtype			<section class="prog__container"><p>The HKCorrelationType class is a concrete subclass of the HKObjectType class. HealthKit uses correlation types to create correlation objects that group multiple samples into a single data entry. iOS 8.0 provides support for using correlation types to represent both food and blood pressure.</p><pre><code>HKCorrelationType</code></pre></section>	https://developer.apple.com/reference/healthkit/hkcorrelationtype
HKDeletedObject	A							https://developer.apple.com/reference/healthkit/hkdeletedobject			<section class="prog__container"><p>The HKDeletedObject class is used to represent samples that have been deleted from the HealthKit store.</p><pre><code>HKDeletedObject</code></pre></section>	https://developer.apple.com/reference/healthkit/hkdeletedobject
HKDevice	A							https://developer.apple.com/reference/healthkit/hkdevice			<section class="prog__container"><p>An HKDevice instance represents a device that generates data for HealthKit. These devices include Apple Watch, iPhone, and any other health or fitness peripherals that produce the sample data stored in HealthKit. Device objects are immutable: You set the device’s properties when you create the HKDevice object, and they cannot change. </p><pre><code>HKDevice</code></pre></section>	https://developer.apple.com/reference/healthkit/hkdevice
HKDocumentQuery	A							https://developer.apple.com/reference/healthkit/hkdocumentquery			<section class="prog__container"><p>The HKDocumentQuery class is a concrete subclass of the HKQuery class, that provides an interface for retrieving documents from the HealthKit store.</p><pre><code>HKDocumentQuery</code></pre></section>	https://developer.apple.com/reference/healthkit/hkdocumentquery
HKDocumentSample	A							https://developer.apple.com/reference/healthkit/hkdocumentsample			<section class="prog__container"><p>The HKDocumentSample class is an abstract class that represents a health document in the HealthKit store.</p><pre><code>HKDocumentSample</code></pre></section>	https://developer.apple.com/reference/healthkit/hkdocumentsample
HKDocumentType	A							https://developer.apple.com/reference/healthkit/hkdocumenttype			<section class="prog__container"><p>The HKDocumentType class is a concrete subclass of the HKSampleType class. Use document type objects when creating queries for documents.</p><pre><code>HKDocumentType</code></pre></section>	https://developer.apple.com/reference/healthkit/hkdocumenttype
HKFitzpatrickSkinTypeObject	A							https://developer.apple.com/reference/healthkit/hkfitzpatrickskintypeobject			<section class="prog__container"><p>The HKFitzpatrickSkinTypeObject class acts as a wrapper for the values representing the user’s skin type, based on the Fitzpatrick scale. This wrapper allows you to read and write skin type values in the HealthKit store.</p><pre><code>HKFitzpatrickSkinTypeObject</code></pre></section>	https://developer.apple.com/reference/healthkit/hkfitzpatrickskintypeobject
HKHealthStore	A							https://developer.apple.com/reference/healthkit/hkhealthstore			<section class="prog__container"><p>The HealthKit store acts as your link to all the data managed by HealthKit. Use a HKHealthStore object to request permission to share or read HealthKit data. Once permission is granted, you can use the HealthKit store to save new samples to the store, or to manage the samples that your app has saved. Additionally, you can use the HealthKit store to start, stop, and manage queries.</p><pre><code>HKHealthStore</code></pre></section>	https://developer.apple.com/reference/healthkit/hkhealthstore
HKObject	A							https://developer.apple.com/reference/healthkit/hkobject			<section class="prog__container"><p>A piece of data that can be stored inside the HealthKit store.</p><pre><code>HKObject</code></pre></section>	https://developer.apple.com/reference/healthkit/hkobject
HKObjectType	A							https://developer.apple.com/reference/healthkit/hkobjecttype			<section class="prog__container"><p>HealthKit uses HKObjectType instances to store type information about data saved in the HealthKit store.</p><pre><code>HKObjectType</code></pre></section>	https://developer.apple.com/reference/healthkit/hkobjecttype
HKObserverQuery	A							https://developer.apple.com/reference/healthkit/hkobserverquery			<section class="prog__container"><p>Observer queries set up a long-running task on a background queue. This task watches the HealthKit store, and alerts you whenever matching data is saved to or removed from the store. Observer queries let your app respond to changes made by other apps and devices.</p><pre><code>init(sampleType:predicate:updateHandler:)</code></pre></section>	https://developer.apple.com/reference/healthkit/hkobserverquery
HKQuantity	A							https://developer.apple.com/reference/healthkit/hkquantity			<section class="prog__container"><p>HealthKit uses quantity objects to store numerical data. Quantities store a value for a given unit. You can request the value in any compatible units. For example, if you can create a length property in feet, you can then request the value in meters. The quantity object automatically converts its value to the requested units, as needed.</p><pre><code>HKQuantity</code></pre></section>	https://developer.apple.com/reference/healthkit/hkquantity
HKQuantitySample	A							https://developer.apple.com/reference/healthkit/hkquantitysample			<section class="prog__container"><p>The HKQuantitySample class is a concrete subclass of the HKSample class. Each quantity sample instance represent a piece of data with a single numeric value. For example, you can use a quantity sample to record the user’s height, the user’s current heart rate, or the number of calories in a hamburger. HealthKit provides a wide range of quantity types, letting you track a number of different health and fitness features.</p><pre><code>HKQuantitySample</code></pre></section>	https://developer.apple.com/reference/healthkit/hkquantitysample
HKQuantityType	A							https://developer.apple.com/reference/healthkit/hkquantitytype			<section class="prog__container"><p>The HKQuantityType class is a concrete subclass of the HKObjectType class. HealthKit uses quantity types to create samples that store a numerical value. Use quantity type instances to create quantity samples that you can save in the HealthKit store. For more information, see HKQuantitySample.</p><pre><code>HKQuantityType</code></pre></section>	https://developer.apple.com/reference/healthkit/hkquantitytype
HKQuery	A							https://developer.apple.com/reference/healthkit/hkquery			<section class="prog__container"><p>The HKQuery class is the basis for all the query objects that retrieve data from the HealthKit store. The HKQuery class is an abstract class. You should never instantiate an HKQuery object directly. Instead, you always work with one of its concrete subclasses: HKAnchoredObjectQuery, HKCorrelationQuery, HKObserverQuery, HKSampleQuery, HKSourceQuery, HKStatisticsQuery, or HKStatisticsCollectionQuery objects.</p><pre><code>HKQuery</code></pre></section>	https://developer.apple.com/reference/healthkit/hkquery
HKQueryAnchor	A							https://developer.apple.com/reference/healthkit/hkqueryanchor			<section class="prog__container"><p>The HKQueryAnchor object corresponds to the last sample returned by a previous anchored object query. Use this anchor to query for samples added to or deleted from the store since the previous query. </p><pre><code>init(fromValue: Int)</code></pre></section>	https://developer.apple.com/reference/healthkit/hkqueryanchor
HKQueryOptions	A							https://developer.apple.com/reference/healthkit/hkqueryoptions			<section class="prog__container"><p>Constants that describe how a sample’s time period overlaps with the target time period.</p><pre><code>static var strictStartDate: HKQueryOptions</code></pre></section>	https://developer.apple.com/reference/healthkit/hkqueryoptions
HKSample	A							https://developer.apple.com/reference/healthkit/hksample			<section class="prog__container"><p>A HealthKit sample represents a piece of data associated with a start and end time. If the sample represents data over a duration, the start time must be earlier than the end time. If the sample represents data at a particular instant, the start and end times can be the same.</p><pre><code>HKSample</code></pre></section>	https://developer.apple.com/reference/healthkit/hksample
HKSampleQuery	A							https://developer.apple.com/reference/healthkit/hksamplequery			<section class="prog__container"><p>HealthKit uses sample queries to search for sample data in the HealthKit store. You can use sample queries to search for any concrete subclasses of the HKSample class, including HKCategorySample, HKCorrelation, HKQuantitySample, and HKWorkout objects.</p><pre><code>HKSample</code></pre></section>	https://developer.apple.com/reference/healthkit/hksamplequery
HKSampleType	A							https://developer.apple.com/reference/healthkit/hksampletype			<section class="prog__container"><p>The HKSampleType class is an abstract subclass of the HKObjectType class, used to represent data samples. Never instantiate an HKSampleType object directly. Instead, you should always work with one of its concrete subclasses: HKCategoryType, HKCorrelationType, HKQuantityType or HKWorkoutType classes.</p><pre><code>HKCategoryType</code></pre></section>	https://developer.apple.com/reference/healthkit/hksampletype
HKSource	A							https://developer.apple.com/reference/healthkit/hksource			<section class="prog__container"><p>Source objects represents the different data sources in HealthKit. These sources may include apps and devices whose data can be directly imported into the HealthKit store. Currently, HealthKit supports only the direct import of heart rate data from Bluetooth LE devices. All other devices need a companion app to collect and save the data to HealthKit.</p><pre><code>class func `default`()</code></pre></section>	https://developer.apple.com/reference/healthkit/hksource
HKSourceQuery	A							https://developer.apple.com/reference/healthkit/hksourcequery			<section class="prog__container"><p>Source queries let you search for the sources (apps and devices) that have saved data to the HealthKit store. These queries return a set containing all the sources for any samples that match the query.</p><pre><code>init(sampleType:samplePredicate:completionHandler:)</code></pre></section>	https://developer.apple.com/reference/healthkit/hksourcequery
HKSourceRevision	A							https://developer.apple.com/reference/healthkit/hksourcerevision			<section class="prog__container"><p>An HKSourceRevision object represents both the app and the version of the app that saved an object into the HealthKit store. This class acts as a wrapper for the HKSource class, adding version information to the source.</p><pre><code>HKSourceRevision</code></pre></section>	https://developer.apple.com/reference/healthkit/hksourcerevision
HKStatistics	A							https://developer.apple.com/reference/healthkit/hkstatistics			<section class="prog__container"><p>Statistics objects represent the result of calculating the minimum, maximum, average, or sum over a set of samples in the HealthKit store. HealthKit creates statistic objects using either a statistics query or a statistics collection query. For the statistics query, it performs the specified calculations over all the samples that match the query. For the statistics collection query, it partitions the matching samples into a set of time intervals and performs the calculations over each interval separately.</p><pre><code>separateBySource</code></pre></section>	https://developer.apple.com/reference/healthkit/hkstatistics
HKStatisticsCollection	A							https://developer.apple.com/reference/healthkit/hkstatisticscollection			<section class="prog__container"><p>As the name suggests, an HKStatisticsCollection object manages a collection of statistics. Each statistics object represents the data calculated over a separate time interval.</p><pre><code>HKStatisticsCollection</code></pre></section>	https://developer.apple.com/reference/healthkit/hkstatisticscollection
HKStatisticsCollectionQuery	A							https://developer.apple.com/reference/healthkit/hkstatisticscollectionquery			<section class="prog__container"><p>The statistics collection query lets you perform multiple statistics queries over a series of fixed-length time intervals. For example, you might create a statistics collection query that calculates the total number of steps for each day or the average heart rate for each hour. Statistics collection queries are often used to produce data for graphs and charts. Like observer queries, collection queries can also receive updates when matching samples are added to or removed from the HealthKit store.</p><pre><code>initialResultsHandler</code></pre></section>	https://developer.apple.com/reference/healthkit/hkstatisticscollectionquery
HKStatisticsOptions	A							https://developer.apple.com/reference/healthkit/hkstatisticsoptions			<section class="prog__container"><p>Options for specifying which statistics to calculate.</p><pre><code>separateBySource</code></pre></section>	https://developer.apple.com/reference/healthkit/hkstatisticsoptions
HKStatisticsQuery	A							https://developer.apple.com/reference/healthkit/hkstatisticsquery			<section class="prog__container"><p>Statistics queries perform statistical calculations over the set of matching quantity samples. Statistics queries can calculate the minimum, maximum, and average value for discrete quantities. They can also calculate the sum for cumulative quantities. For more information about the available quantity types and to learn whether they are discrete or cumulative values, see the type identifier constants in the HealthKit Constants. </p><pre><code>init(quantityType:quantitySamplePredicate:options:completionHandler:)</code></pre></section>	https://developer.apple.com/reference/healthkit/hkstatisticsquery
HKUnit	A							https://developer.apple.com/reference/healthkit/hkunit			<section class="prog__container"><p>Use the HKUnit class to manage units of measure within HealthKit.</p><pre><code>HKUnit</code></pre></section>	https://developer.apple.com/reference/healthkit/hkunit
HKWheelchairUseObject	A							https://developer.apple.com/reference/healthkit/hkwheelchairuseobject			<section class="prog__container"><p>The HKWheelchairUseObject class acts as a wrapper for the HKWheelchairUse enumeration.</p><pre><code>HKWheelchairUseObject</code></pre></section>	https://developer.apple.com/reference/healthkit/hkwheelchairuseobject
HKWorkout	A							https://developer.apple.com/reference/healthkit/hkworkout			<section class="prog__container"><p>The HKWorkout class is a concrete subclass of the HKSample class. The workout object records information about a single physical activity in the HealthKit store. HealthKit supports a wide range of activity types. The workout object not only stores summary information about the activity (for example, duration, total distance, and total energy burned), it also acts as a container for other HKSample objects. You can associate any number of samples with a workout, letting you track changes to the workout over time. For example, you may want to break a single run into a number of intervals, and then add samples to track the user’s heart rate, energy burned, distance traveled, and steps taken for each interval.</p><pre><code>HKWorkout</code></pre></section>	https://developer.apple.com/reference/healthkit/hkworkout
HKWorkoutConfiguration	A							https://developer.apple.com/reference/healthkit/hkworkoutconfiguration			<section class="prog__container"><p>The HKWorkoutConfiguration class contains configuration information about a workout session.</p><pre><code>HKWorkoutConfiguration</code></pre></section>	https://developer.apple.com/reference/healthkit/hkworkoutconfiguration
HKWorkoutEvent	A							https://developer.apple.com/reference/healthkit/hkworkoutevent			<section class="prog__container"><p>You can use workout events to toggle a workout object between an active and an inactive state. Workouts start in an active state. A pause event switches it to an inactive state; a resume event switches it back to an active state. Adding a pause event when the workout is already inactive, or a resume event when the workout is already active, does not affect the workout’s state. These events are ignored.</p><pre><code>init(type: HKWorkoutEventType, date: Date)</code></pre></section>	https://developer.apple.com/reference/healthkit/hkworkoutevent
HKWorkoutSession	A							https://developer.apple.com/reference/healthkit/hkworkoutsession			<section class="prog__container"><p>Use an HKWorkoutSession object to track the user’s workout on Apple Watch.</p><pre><code>HKWorkoutSession</code></pre></section>	https://developer.apple.com/reference/healthkit/hkworkoutsession
HKWorkoutSessionDelegate	A							https://developer.apple.com/reference/healthkit/hkworkoutsessiondelegate			<section class="prog__container"><p>The HKWorkoutSessionDelegate protocol defines an interface for receiving notifications about errors and changes in the workout session’s state. All the methods are required. HealthKit calls these methods on an anonymous serial background queue.</p><pre><code>func workoutSession(HKWorkoutSession, didChangeTo: HKWorkoutSessionState, from: HKWorkoutSessionState, date: Date)</code></pre></section>	https://developer.apple.com/reference/healthkit/hkworkoutsessiondelegate
HKWorkoutType	A							https://developer.apple.com/reference/healthkit/hkworkouttype			<section class="prog__container"><p>The HKWorkoutType class is a concrete subclass of the HKObjectType class. Use workout type objects when creating queries for workout objects. To create a workout type instances, use the workoutType() convenience method.</p><pre><code>HKWorkoutType</code></pre></section>	https://developer.apple.com/reference/healthkit/hkworkouttype
HKActivityRingView	A							https://developer.apple.com/reference/healthkitui/hkactivityringview			<section class="prog__container"><p>This view displays data from an HKActivitySummary object, using the Move, Exercise, and Stand activity rings. For example, Figure 1 shows how the rings can display a summary view of the user's activity.</p><pre><code>HKActivitySummary</code></pre></section>	https://developer.apple.com/reference/healthkitui/hkactivityringview
HMAccessory	A							https://developer.apple.com/reference/homekit/hmaccessory			<section class="prog__container"><p>An HMAccessory object represents a home automation accessory in the home, such as a garage door opener or a thermostat. Each physical accessory in the home is represented by one and only one accessory object. A single accessory provides one or more services, represented by instances of HMService.</p><pre><code>HMAccessory</code></pre></section>	https://developer.apple.com/reference/homekit/hmaccessory
HMAccessoryBrowser	A							https://developer.apple.com/reference/homekit/hmaccessorybrowser			<section class="prog__container"><p>An HMAccessoryBrowser object is a network browser used to discover new accessories.</p><pre><code>HMAccessoryBrowser</code></pre></section>	https://developer.apple.com/reference/homekit/hmaccessorybrowser
HMAccessoryBrowserDelegate	A							https://developer.apple.com/reference/homekit/hmaccessorybrowserdelegate			<section class="prog__container"><p>HMAccessoryBrowserDelegate defines the interface for an HMAccessoryBrowser object to notify its delegate of new accessories.</p><pre><code>HMAccessoryBrowserDelegate</code></pre></section>	https://developer.apple.com/reference/homekit/hmaccessorybrowserdelegate
HMAccessoryCategory	A							https://developer.apple.com/reference/homekit/hmaccessorycategory			<section class="prog__container"><p>An HMAccessoryCategory object specifies the primary category for a HomeKit accessory.</p><pre><code>HMAccessoryCategory</code></pre></section>	https://developer.apple.com/reference/homekit/hmaccessorycategory
HMAccessoryDelegate	A							https://developer.apple.com/reference/homekit/hmaccessorydelegate			<section class="prog__container"><p>The HMAccessoryDelegate protocol defines the communication method for state updates from accessories to their delegates.</p><pre><code>HMAccessoryDelegate</code></pre></section>	https://developer.apple.com/reference/homekit/hmaccessorydelegate
HMAction	A							https://developer.apple.com/reference/homekit/hmaction			<section class="prog__container"><p>HMAction is an abstract base class for actions in HomeKit.</p><pre><code>HMAction</code></pre></section>	https://developer.apple.com/reference/homekit/hmaction
HMActionSet	A							https://developer.apple.com/reference/homekit/hmactionset			<section class="prog__container"><p>An HMActionSet object represents a set of actions (instances of HMAction) to be applied as a single set.</p><pre><code>HMActionSet</code></pre></section>	https://developer.apple.com/reference/homekit/hmactionset
HMCharacteristic	A							https://developer.apple.com/reference/homekit/hmcharacteristic			<section class="prog__container"><p>An HMCharacteristic object represents a specific characteristic of a service—for example, if a light is on or off, or what temperature a thermostat is set to.</p><pre><code>HMCharacteristic</code></pre></section>	https://developer.apple.com/reference/homekit/hmcharacteristic
HMCharacteristicMetadata	A							https://developer.apple.com/reference/homekit/hmcharacteristicmetadata			<section class="prog__container"><p>An HMCharacteristicMetadata object represents metadata for a characteristic. Characteristic metadata is information that further specifies a characteristic’s value and that may be useful for presentation purposes.</p><pre><code>HMCharacteristicMetadata</code></pre></section>	https://developer.apple.com/reference/homekit/hmcharacteristicmetadata
HMCharacteristicWriteAction	A							https://developer.apple.com/reference/homekit/hmcharacteristicwriteaction			<section class="prog__container"><p>An HMCharacteristicWriteAction object is used to represent an action in an action set that writes a value to a characteristic.</p><pre><code>HMCharacteristicWriteAction</code></pre></section>	https://developer.apple.com/reference/homekit/hmcharacteristicwriteaction
HMEventTrigger	A							https://developer.apple.com/reference/homekit/hmeventtrigger			<section class="prog__container"><p>An HMEventTrigger object represents a trigger for executing a scene that is based on a set of events and optional conditions.</p><pre><code>HMEventTrigger</code></pre></section>	https://developer.apple.com/reference/homekit/hmeventtrigger
HMHome	A							https://developer.apple.com/reference/homekit/hmhome			<section class="prog__container"><p>An HMHome object allows you to communicate with and configure the different accessories in a home. Homes are the central organizing object for HomeKit.</p><pre><code>HMHome</code></pre></section>	https://developer.apple.com/reference/homekit/hmhome
HMHomeDelegate	A							https://developer.apple.com/reference/homekit/hmhomedelegate			<section class="prog__container"><p>The HMHomeDelegate protocol define the communication method for configuration changes to a home and for the state of executing action sets in the home.</p><pre><code>HMHomeDelegate</code></pre></section>	https://developer.apple.com/reference/homekit/hmhomedelegate
HMHomeManager	A							https://developer.apple.com/reference/homekit/hmhomemanager			<section class="prog__container"><p>A home manager object manages a collection of one or more homes. Use the home manager to add homes, get the list of homes, and track changes to homes with the home manager’s delegate.</p><pre><code>var primaryHome: HMHome?</code></pre></section>	https://developer.apple.com/reference/homekit/hmhomemanager
HMHomeManagerDelegate	A							https://developer.apple.com/reference/homekit/hmhomemanagerdelegate			<section class="prog__container"><p>The HMHomeManagerDelegate protocol defines how home manager objects communicate changes to their delegate. Implement this protocol and set your object as the delegate of a HMHomeManager object if you want to track changes to a collection of homes.</p><pre><code>HMHomeManagerDelegate</code></pre></section>	https://developer.apple.com/reference/homekit/hmhomemanagerdelegate
HMRoom	A							https://developer.apple.com/reference/homekit/hmroom			<section class="prog__container"><p>An HMRoom object is used to represent a room in a home. Accessories can be assigned to rooms.</p><pre><code>HMRoom</code></pre></section>	https://developer.apple.com/reference/homekit/hmroom
HMService	A							https://developer.apple.com/reference/homekit/hmservice			<section class="prog__container"><p>An HMService object represents a service provided by an accessory.</p><pre><code>HMService</code></pre></section>	https://developer.apple.com/reference/homekit/hmservice
HMServiceGroup	A							https://developer.apple.com/reference/homekit/hmservicegroup			<section class="prog__container"><p>An HMServiceGroup object represents a collection of accessory services, making it easier to address the services as a single entity. For example, a user might choose to group a set of lights together as “Desk Lamps”, and have another set of lights grouped as “Ceiling Lights”.</p><pre><code>HMServiceGroup</code></pre></section>	https://developer.apple.com/reference/homekit/hmservicegroup
HMTimerTrigger	A							https://developer.apple.com/reference/homekit/hmtimertrigger			<section class="prog__container"><p>An HMTimerTrigger object represents a trigger based on periodic timers.</p><pre><code>HMTimerTrigger</code></pre></section>	https://developer.apple.com/reference/homekit/hmtimertrigger
HMTrigger	A							https://developer.apple.com/reference/homekit/hmtrigger			<section class="prog__container"><p>An HMTrigger object represents a trigger event, used to trigger one or more action sets (instances of HMActionSet) when the conditions of the trigger are satisfied.</p><pre><code>HMTrigger</code></pre></section>	https://developer.apple.com/reference/homekit/hmtrigger
HMUser	A							https://developer.apple.com/reference/homekit/hmuser			<section class="prog__container"><p>An HMUser object represents a person in the home who may have access to control accessories and services in the home.</p><pre><code>var name: String</code></pre></section>	https://developer.apple.com/reference/homekit/hmuser
HMZone	A							https://developer.apple.com/reference/homekit/hmzone			<section class="prog__container"><p>An HMZone object represents a collection of rooms that the user thinks of as a single area or zone—for example, “Living Room” and “Kitchen” might be grouped into a zone called “Downstairs”. A single room can be in multiple zones—for example, “Kitchen” might be in both “Downstairs” and “Entertainment Area”.</p><pre><code>HMZone</code></pre></section>	https://developer.apple.com/reference/homekit/hmzone
hv_vmx_capability_t	A							https://developer.apple.com/reference/hypervisor/hv_vmx_capability_t			<section class="prog__container"><p>VMX capability field IDs.</p><pre><code>var HV_VMX_CAP_PINBASED: hv_vmx_capability_t</code></pre></section>	https://developer.apple.com/reference/hypervisor/hv_vmx_capability_t
hv_x86_reg_t	A							https://developer.apple.com/reference/hypervisor/hv_x86_reg_t			<section class="prog__container"><p>x86 architectural register IDs.</p><pre><code>var HV_X86_RIP: hv_x86_reg_t</code></pre></section>	https://developer.apple.com/reference/hypervisor/hv_x86_reg_t
ADBannerViewDelegate	A							https://developer.apple.com/reference/iad/adbannerviewdelegate			<section class="prog__container"><p>The ADBannerViewDelegate protocol is implemented by an object to react to changes in an ADBannerView object. The banner view calls its delegate when a new advertisement is loaded, when the user interacts with an advertisement, and when errors occur.</p><pre><code>ADBannerViewDelegate</code></pre></section>	https://developer.apple.com/reference/iad/adbannerviewdelegate
ADClient	A							https://developer.apple.com/reference/iad/adclient			<section class="prog__container"><p>The ADClient class is used to determine iAd-specific information about the app. Specifically, you use it to determine whether the app was installed as the result of user interaction with an ad associated with an iAd Network campaign.</p><pre><code>ADClient</code></pre></section>	https://developer.apple.com/reference/iad/adclient
ADInterstitialAdDelegate	A							https://developer.apple.com/reference/iad/adinterstitialaddelegate			<section class="prog__container"><p>The ADInterstitialAdDelegate protocol is implemented by an object so that your application can respond to changes in an ADInterstitialAd object. An ad object calls its delegate whenever the state of the ad changes.</p><pre><code>ADInterstitialAdDelegate</code></pre></section>	https://developer.apple.com/reference/iad/adinterstitialaddelegate
Element	A							https://developer.apple.com/reference/iadjs/element			<section class="prog__container"><p>These Safari additions to the Element class are mainly used to support full-screen mode. There’s also a method for comparing selectors.</p><pre><code>Element</code></pre></section>	https://developer.apple.com/reference/iadjs/element
Element iAd JS Additions	A							https://developer.apple.com/reference/iadjs/element_iad_js_additions			<section class="prog__container"><p>The DOM Element interface is extended in iAd JS to include additional CSS class name support.</p><pre><code>Element</code></pre></section>	https://developer.apple.com/reference/iadjs/element_iad_js_additions
iAd	A							https://developer.apple.com/reference/iadjs/iad			<section class="prog__container"><p>iAd. is the namespace for all iAd JS classes. The iAd object also contains singleton instances of iAd JS classes that have no constructor, such as the iAd.Utils class, and common constants.</p><pre><code>iAd.</code></pre></section>	https://developer.apple.com/reference/iadjs/iad
iAd.ActivityIndicatorView	A							https://developer.apple.com/reference/iadjs/iad.activityindicatorview			<section class="prog__container"><p>The iAd.ActivityIndicatorView class creates and manages an indicator showing the indeterminate progress of a task. Visually, this indicator is a gear that spins but you can customize the appearance and behavior of the spinner. </p><pre><code>iAd.ActivityIndicatorView</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.activityindicatorview
iAd.Analytics	A							https://developer.apple.com/reference/iadjs/iad.analytics			<section class="prog__container"><p>The iAd.Analytics class provides class properties and methods for configuring analytics. For example, if you want to turn on logging in the Simulator, then you use this class. Use other properties and methods inherited from the iAd.ObjectAnalytics class to setup analytics logging per object.</p><pre><code>iAd.Analytics</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.analytics
iAd.AnalyticsDetails	A							https://developer.apple.com/reference/iadjs/iad.analyticsdetails			<section class="prog__container"><p>iAd.AnalyticsDetails is a protocol that allows the definition of a dictionary of properties for an iAd.Analytics instance. This configuration allows the specification of the object, name, type, and section. Any additional properties would get populated into the additional arguments variable in the log.</p><pre><code>iAd.AnalyticsDetails</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.analyticsdetails
iAd.AnalyticsEventHandler	A							https://developer.apple.com/reference/iadjs/iad.analyticseventhandler			<section class="prog__container"><p>iAd.AnalyticsEventHandler allows developers to decorate the customizable properties of the iAd.AnalyticsDetails message and log that message on the server. An iAd.AnalyticsEventHandler can handle analytic events for any class it is registered for. Simply create an iAd.Class object and implement one or more methods on the analytics event handlers prototype. The methods must be named by the following convention: "handle" + TypeOfEvent.</p><pre><code>iAd.AnalyticsEventHandler</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.analyticseventhandler
iAd.Archiver	A							https://developer.apple.com/reference/iadjs/iad.archiver			<section class="prog__container"><p>The iAd.Archiver class encodes and decodes objects to and from a JSON format. When a view is no longer visible, you can archive the objects in that view by calling archive to reduce the number of elements in the DOM. This helps improve animation performance, memory usage, and DOM complexity. You can call restoreFromArchive when the view becomes active to restore the archive right where it left off in its interactive state.</p><pre><code>iAd.Archiver</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.archiver
iAd.Array	A							https://developer.apple.com/reference/iadjs/iad.array			<section class="prog__container"><p>The iAd.Array class contains utilities for working with arrays.</p><pre><code>iAd.Array</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.array
iAd.Audio	A							https://developer.apple.com/reference/iadjs/iad.audio			<section class="prog__container"><p>The iAd.Audio class is responsible for creating and controlling an HTML audio element. It extends the iAd.Media class.</p><pre><code>iAd.Audio</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.audio
iAd.AudioPlayer	A							https://developer.apple.com/reference/iadjs/iad.audioplayer			<section class="prog__container"><p>iAd.AudioPlayer is a view that manages the playback of audio.</p><pre><code>iAd.AudioPlayer</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.audioplayer
iAd.BarButtonItem	A							https://developer.apple.com/reference/iadjs/iad.barbuttonitem			<section class="prog__container"><p>The iAd.BarButtonItem class encapsulates the properties and behaviors of items added to iAd.Toolbar and iAd.NavigationBar objects. In the case of iAd.NavigationBar, you use iAd.BarButtonItem objects to create custom buttons for an iAd.NavigationItem object.</p><pre><code>iAd.BarButtonItem</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.barbuttonitem
iAd.BarItem	A							https://developer.apple.com/reference/iadjs/iad.baritem			<section class="prog__container"><p>The iAd.BarItem class is an abstract superclass for items added to a bar, such as iAd.BarButtonItem and iAd.TabBarItem objects. Items on a bar behave in a way similar to the way buttons behave. They have a title, image, action, and target. You can also enable and disable an item on a bar.</p><pre><code>iAd.BarItem</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.baritem
iAd.BindingContent	A							https://developer.apple.com/reference/iadjs/iad.bindingcontent			<section class="prog__container"><p>This is an abstract class that represents content that can be saved and shared on devices. This can be a ringtone, address book entry, pdf, et al. Subclasses implement the present method to display a dialog to the user to save the content or a share sheet to the user to share the content.</p><pre><code>present</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.bindingcontent
iAd.BindingError	A							https://developer.apple.com/reference/iadjs/iad.bindingerror			<section class="prog__container"><p>The error constants related to working with system bindings.</p><pre><code>INVALID_PRESENTATION_RECT_ERROR</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.bindingerror
iAd.Bindings	A							https://developer.apple.com/reference/iadjs/iad.bindings			<section class="prog__container"><p>Bindings allow you to access operating system functionality from within an iAd, such as saving a ringtone to the user’s library or taking a picture with the camera. iAd JS Bindings are available in iAd JS 1.6 and later.</p><pre><code>// if a user hasn't set up a Mail account,\n// we won't be able to send mail messages!\nif (iAd.MailMessage.available) {\n var mail_message = new iAd.MailMessage(configuration, my_delegate);\n}\n</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.bindings
iAd.Button	A							https://developer.apple.com/reference/iadjs/iad.button			<section class="prog__container"><p>An instance of the iAd.Button class implements a button on the touch screen. A button intercepts touch events and sends a iAd.Control.TOUCH_UP_INSIDE_EVENT event when tapped. Methods for registering an event listener are inherited from iAd.Control.</p><pre><code>iAd.Button</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.button
iAd.CalendarEvent	A							https://developer.apple.com/reference/iadjs/iad.calendarevent			<section class="prog__container"><p>This class defines information about an event, which can be saved to a user’s calendar. The present method requires a rectangle parameter when on iPad.</p><pre><code>allDay</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.calendarevent
iAd.CalendarEventRecurrenceDefinition	A							https://developer.apple.com/reference/iadjs/iad.calendareventrecurrencedefinition			<section class="prog__container"><p>An abstract class that represents the recurrence for an iAd.CalendarEvent.</p><pre><code>daysInMonth</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.calendareventrecurrencedefinition
iAd.CarouselView	A							https://developer.apple.com/reference/iadjs/iad.carouselview			<section class="prog__container"><p>An instance of the iAd.CarouselView class presents a rotating 3D carousel with its contents. It is very much like the iAd.TableView class and offers very similar protocols, but uses a different visual presentation.</p><pre><code>iAd.CarouselView</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.carouselview
iAd.CarouselViewDelegate	A							https://developer.apple.com/reference/iadjs/iad.carouselviewdelegate			<section class="prog__container"><p>The iAd.CarouselViewDelegate protocol provides an interface adopted by objects that support carousel views by performing an action when the user makes a selection.</p><pre><code>iAd.CarouselViewDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.carouselviewdelegate
iAd.Cell	A							https://developer.apple.com/reference/iadjs/iad.cell			<section class="prog__container"><p>Cells are instances of iAd.View or one of its subclasses whose display is managed by an iAd.CellContainer.</p><pre><code>iAd.View</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.cell
iAd.CellContainer	A							https://developer.apple.com/reference/iadjs/iad.cellcontainer			<section class="prog__container"><p>Cell Containers are subclasses of iAd.View that manage an ordered set of subviews referred to as cells. All cell containers provide a way for one of their cells to come into focus (i.e. become visually prominent) at a time. An example of a cell container is iAd.CarouselView.</p><pre><code>iAd.View</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.cellcontainer
iAd.CellContainerDataSource	A							https://developer.apple.com/reference/iadjs/iad.cellcontainerdatasource			<section class="prog__container"><p>The iAd.CellContainerDataSource protocol provides an interface adopted by objects that provide data to an iAd.CellContainer in the form of iAd.View instances.</p><pre><code>iAd.CellContainerDataSource</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.cellcontainerdatasource
iAd.CellContainerDelegate	A							https://developer.apple.com/reference/iadjs/iad.cellcontainerdelegate			<section class="prog__container"><p>The iAd.CellContainerDelegate protocol provides an interface adopted by objects that support an iAd.CellContainer by performing an action when the user focuses on a cell.</p><pre><code>iAd.CellContainerDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.cellcontainerdelegate
iAd.Class	A							https://developer.apple.com/reference/iadjs/iad.class			<section class="prog__container"><p>Creates subclasses with the ability to incorporate superclass implementations, add mixins, and synthesize properties. Subclasses also have the ability to observe change notifications to property values. You create a subclass using the iAd.Class constructor. </p><pre><code>iAd.Class</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.class
iAd.ContactAddress	A							https://developer.apple.com/reference/iadjs/iad.contactaddress			<section class="prog__container"><p>An abstract class that represents an address entry for an iAd.ContactCard.</p><pre><code>city</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.contactaddress
iAd.ContactCard	A							https://developer.apple.com/reference/iadjs/iad.contactcard			<section class="prog__container"><p>This class defines information about a contact that can be saved to the user’s address book.</p><pre><code>addresses</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.contactcard
iAd.ContactEmail	A							https://developer.apple.com/reference/iadjs/iad.contactemail			<section class="prog__container"><p>An abstract class that represents an email entry for an iAd.ContactCard</p><pre><code>address</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.contactemail
iAd.ContactPhoneNumber	A							https://developer.apple.com/reference/iadjs/iad.contactphonenumber			<section class="prog__container"><p>An abstract class that represents an phone number entry for an iAd.ContactCard</p><pre><code>number</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.contactphonenumber
iAd.Content	A							https://developer.apple.com/reference/iadjs/iad.content			<section class="prog__container"><p>iAd.Content provides an interface for defining and retrieving content (typically strings), organized in key-values pairs. Content is defined upon a context - a combination of definable parameters and when the context is active i.e. the defined parameters are met, the content becomes active. Content defined with a more specific context (a greater number of parameters) will supersede content defined with fewer parameters.</p><pre><code>iAd.Content</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.content
iAd.Control	A							https://developer.apple.com/reference/iadjs/iad.control			<section class="prog__container"><p>iAd.Control is the base class for controls, objects such as buttons and sliders that are used to convey user intent to the application. This class defines the common interface and behavioral structure for all subclasses of it.</p><pre><code>iAd.Control</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.control
iAd.CSS	A							https://developer.apple.com/reference/iadjs/iad.css			<section class="prog__container"><p>The iAd.CSS class provides a series of utilities for working with CSS.</p><pre><code>iAd.CSS</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.css
iAd.Device	A							https://developer.apple.com/reference/iadjs/iad.device			<section class="prog__container"><p>The iAd.Device class provides a series of utilities that can access device information, such as device orientation, iOS version, and pixel density.</p><pre><code>iAd.Device</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.device
iAd.EdgeInsets	A							https://developer.apple.com/reference/iadjs/iad.edgeinsets			<section class="prog__container"><p>Edge inset values are used by iAd.ScrollView objects to set the inset of scroll indicators with the scrollIndicatorInsets property.</p><pre><code>iAd.ScrollView</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.edgeinsets
iAd.Element	A							https://developer.apple.com/reference/iadjs/iad.element			<section class="prog__container"><p>The iAd.Element class provides a series of utilities for working with DOM elements.</p><pre><code>iAd.Element</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.element
iAd.Event	A							https://developer.apple.com/reference/iadjs/iad.event			<section class="prog__container"><p>The iAd.Event class provides a series of utilities for working with events.</p><pre><code>iAd.Event</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.event
iAd.EventTarget	A							https://developer.apple.com/reference/iadjs/iad.eventtarget			<section class="prog__container"><p>The iAd.EventTarget mixin provides custom event dispatching to classes. It provides an implementation of the DOM EventTarget interface for non-DOM objects. Principal classes in iAd JS—such as iAd.View, iAd.ViewController, iAd.BarButtonItem, and iAd.Transition—mix in iAd.EventTarget to dispatch custom events including events that correspond to delegate messages. Classes that mix in iAd.EventTarget must set the eventTarget property to an element in the DOM tree to dispatch events.</p><pre><code>iAd.EventTarget</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.eventtarget
iAd.FlowView	A							https://developer.apple.com/reference/iadjs/iad.flowview			<section class="prog__container"><p>The iAd.FlowView class, a subclass of iAd.CellContainer, is an implementation of "Cover Flow". To use the iAd.FlowView class, a client creates a new instance, setting its size and position, implements the required methods from the iAd.CellContainerDataSource protocol and then tells the view that all data is ready to display using the reloadData method. Should a controller wish to know when cells in the flow are selected, the iAd.FlowViewDelegate protocol's methods should be implemented.</p><pre><code>iAd.FlowView</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.flowview
iAd.FlowViewDataSource	A							https://developer.apple.com/reference/iadjs/iad.flowviewdatasource			<section class="prog__container"><p>The iAd.FlowViewDataSource protocol is adopted by an object that mediates the data model for an iAd.FlowView object. The data source provides the flow view with the information it needs to construct and modify a Cover Flow view.</p><pre><code>iAd.FlowViewDataSource</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.flowviewdatasource
iAd.Image	A							https://developer.apple.com/reference/iadjs/iad.image			<section class="prog__container"><p>The iAd.Image class represents an image and provides the core data type for images. The loaded property is an easy way to track the loading of an image by using iAd.Object's built-in property change notification system. </p><pre><code>iAd.Image</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.image
iAd.ImageAction	A							https://developer.apple.com/reference/iadjs/iad.imageaction			<section class="prog__container"><p>This class serves as a reference to a system-level image action (e.g. saving image to photo library, setting as wallpaper), and should not be instantiated directly. You can listen for notifications by assigning an iAd.ImageActionDelegate as its delegate.</p><pre><code>iAd.ImageActionDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.imageaction
iAd.ImageEffects	A							https://developer.apple.com/reference/iadjs/iad.imageeffects			<section class="prog__container"><p>The iAd.ImageEffects object is a singleton that is used to load and create Effect objects. By default, the ImageEffects object has no Effects loaded. The author must configure effects via the registerEffect method, giving the following implementation details for the effect:</p><pre><code>iAd.ImageEffects</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.imageeffects
iAd.ImageEffects.Effect	A							https://developer.apple.com/reference/iadjs/iad.imageeffects.effect			<section class="prog__container"><p>An Effect is an instance of a Image Effect that can apply to content. You should not create an Effect manually, but instead use the iAd.ImageEffects singleton to register and retrieve instances.</p><pre><code>iAd.ImageEffects</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.imageeffects.effect
iAd.ImageLoader	A							https://developer.apple.com/reference/iadjs/iad.imageloader			<section class="prog__container"><p>The iAd.ImageLoader class extends iAd.Loader and manages the load of an img DOM element.</p><pre><code>iAd.ImageLoader</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.imageloader
iAd.ImageView	A							https://developer.apple.com/reference/iadjs/iad.imageview			<section class="prog__container"><p>The iAd.ImageView class is an iAd.View subclass that provides a view-based container for displaying either a single image or an image sprite. A different image or sprite may be specified for the highlighted state of this view. For the image sprite, the class provides controls to set the duration and frequency of the animation.</p><pre><code>iAd.ImageView</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.imageview
iAd.IndexPath	A							https://developer.apple.com/reference/iadjs/iad.indexpath			<section class="prog__container"><p>The iAd.IndexPath class provides the path to an iAd.TableView cell.</p><pre><code>iAd.IndexPath</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.indexpath
iAd.Label	A							https://developer.apple.com/reference/iadjs/iad.label			<section class="prog__container"><p>The iAd.Label class implements a read-only text view. Use this class to draw one or more lines of static text, such as text to identify other parts of your user interface.</p><pre><code>iAd.Label</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.label
iAd.Loader	A							https://developer.apple.com/reference/iadjs/iad.loader			<section class="prog__container"><p>The iAd.Loader class is the base class for loading content in iAd JS. You should never instantiate this class directly, but rather one of its subclasses (iAd.ImageLoader, iAd.ScriptLoader, iAd.StyleLoader, and iAd.XHRLoader).</p><pre><code>iAd.Loader</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.loader
iAd.LoaderBatch	A							https://developer.apple.com/reference/iadjs/iad.loaderbatch			<section class="prog__container"><p>The iAd.LoaderBatch class extends iAd.LoaderManager and is used to manage the concurrent load of multiple iAd.Loader instances.</p><pre><code>iAd.LoaderBatch</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.loaderbatch
iAd.LoaderDelegate	A							https://developer.apple.com/reference/iadjs/iad.loaderdelegate			<section class="prog__container"><p>The iAd.LoaderDelegate protocol describes an interface for which iAd.Loader objects can conform.</p><pre><code>iAd.LoaderDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.loaderdelegate
iAd.LoaderManager	A							https://developer.apple.com/reference/iadjs/iad.loadermanager			<section class="prog__container"><p>iAd.LoaderManager is the base class for iAd.LoaderBatch and iAd.LoaderQueue, providing the backing management for multiple iAd.Loader objects.</p><pre><code>iAd.LoaderManager</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.loadermanager
iAd.LoaderManagerDelegate	A							https://developer.apple.com/reference/iadjs/iad.loadermanagerdelegate			<section class="prog__container"><p>The iAd.LoaderManagerDelegate protocol extends the iAd.LoaderDelegate protocol, with one parameter addition to loaderDidProgress.</p><pre><code>iAd.LoaderManagerDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.loadermanagerdelegate
iAd.LoaderQueue	A							https://developer.apple.com/reference/iadjs/iad.loaderqueue			<section class="prog__container"><p>The iAd.LoaderQueue class is used to manage the load of multiple iAd.Loader instances sequentially.</p><pre><code>iAd.LoaderQueue</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.loaderqueue
iAd.LoaderQueueDelegate	A							https://developer.apple.com/reference/iadjs/iad.loaderqueuedelegate			<section class="prog__container"><p>The iAd.LoaderQueueDelegate protocol extends the iAd.LoaderManagerDelegate protocol, adding a new notification called loaderWillLoadNextItem.</p><pre><code>iAd.LoaderQueueDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.loaderqueuedelegate
iAd.MailMessage	A							https://developer.apple.com/reference/iadjs/iad.mailmessage			<section class="prog__container"><p>iAd.MailMessage allows you to compose email messages and present them to the user. Mail messages support attachments.</p><pre><code>iAd.MailMessage</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.mailmessage
iAd.MapAnnotation	A							https://developer.apple.com/reference/iadjs/iad.mapannotation			<section class="prog__container"><p>iAd.MapAnnotation allows you to create an annotation for use with an iAd.MapView.</p><pre><code>coordinate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.mapannotation
iAd.MapCoordinate	A							https://developer.apple.com/reference/iadjs/iad.mapcoordinate			<section class="prog__container"><p>iAd.MapCoordinate is a coordinate, a latitude and longitude pair, used with an iAd.MapView.</p><pre><code>latitude</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.mapcoordinate
iAd.MapOverlay	A							https://developer.apple.com/reference/iadjs/iad.mapoverlay			<section class="prog__container"><p>iAd.MapOverlay is used to create an overlay for use with an iAd.MapView.</p><pre><code>coordinates</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.mapoverlay
iAd.MapRegion	A							https://developer.apple.com/reference/iadjs/iad.mapregion			<section class="prog__container"><p>iAd.MapRegion defines a region on a map specified by latitude and longitude values.</p><pre><code>MapRegion</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.mapregion
iAd.MapUserLocation	A							https://developer.apple.com/reference/iadjs/iad.mapuserlocation			<section class="prog__container"><p>An abstract class that defines the dictionary of location-related properties as issued when an iAd.MapView reports a user location.</p><pre><code>MapUserLocation</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.mapuserlocation
iAd.MapView	A							https://developer.apple.com/reference/iadjs/iad.mapview			<section class="prog__container"><p>The iAd.MapView class is used to display an interactive map.</p><pre><code>MapView</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.mapview
iAd.MapViewDelegate	A							https://developer.apple.com/reference/iadjs/iad.mapviewdelegate			<section class="prog__container"><p>iAd.MapViewDelegate defines a set of methods you can use to receive map-related update methods.</p><pre><code>mapViewAnnotationDidFinishDrag</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.mapviewdelegate
iAd.Media	A							https://developer.apple.com/reference/iadjs/iad.media			<section class="prog__container"><p>The iAd.Media class extends iAd.Object and is the base class for iAd JS media, providing the core API to manage loading and control playback. This class should never be instantiated directly, instead use the provided factory methods of its subclasses iAd.Video.videoForURL and iAd.Audio.audioForURL. See iAd.Video and iAd.Audio.</p><pre><code>iAd.Media</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.media
iAd.MediaDelegate	A							https://developer.apple.com/reference/iadjs/iad.mediadelegate			<section class="prog__container"><p>The iAd.MediaDelegate protocol provides an interface adopted by iAd.Media objects. The delegate handles useful methods for determining load and playback state.</p><pre><code>iAd.MediaDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.mediadelegate
iAd.MediaLoadReadyStrategy	A							https://developer.apple.com/reference/iadjs/iad.medialoadreadystrategy			<section class="prog__container"><p>iAd.MediaLoadReadyStrategy is a special function that is executed by loading iAd.Media objects.</p><pre><code>iAd.MediaLoadReadyStrategy</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.medialoadreadystrategy
iAd.MediaPlayer	A							https://developer.apple.com/reference/iadjs/iad.mediaplayer			<section class="prog__container"><p>The iAd.MediaPlayer provides a backing view for interacting with media and a basic API to control its playback. It is the base class for iAd.AudioPlayer and iAd.VideoPlayer.</p><pre><code>iAd.MediaPlayer</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.mediaplayer
iAd.MediaPlayerDelegate	A							https://developer.apple.com/reference/iadjs/iad.mediaplayerdelegate			<section class="prog__container"><p>The iAd.MediaPlayerDelegate protocol describes an interface for which iAd.MediaPlayer objects can conform to assist in determining playback state.</p><pre><code>iAd.MediaPlayerDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.mediaplayerdelegate
iAd.MediaUrlStrategy	A							https://developer.apple.com/reference/iadjs/iad.mediaurlstrategy			<section class="prog__container"><p>iAd.MediaUrlStrategy is a special function that is executed when iAd.Media objects are instantiated.</p><pre><code>iAd.MediaUrlStrategy</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.mediaurlstrategy
iAd.Message	A							https://developer.apple.com/reference/iadjs/iad.message			<section class="prog__container"><p>iAd.Message is an abstract class for composing messages.</p><pre><code>iAd.Message</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.message
iAd.MessageAttachment	A							https://developer.apple.com/reference/iadjs/iad.messageattachment			<section class="prog__container"><p>An abstract class that represents an attachment for an iAd.Message object.</p><pre><code>name</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.messageattachment
iAd.MessageDelegate	A							https://developer.apple.com/reference/iadjs/iad.messagedelegate			<section class="prog__container"><p>iAd.MessageDelegate is the delegate for iAd.Message.</p><pre><code>iAd.MessageDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.messagedelegate
iAd.NavigationBar	A							https://developer.apple.com/reference/iadjs/iad.navigationbar			<section class="prog__container"><p>The iAd.NavigationBar class implements a view for navigating hierarchical content. It’s a bar, typically displayed at the top of the screen, containing buttons for navigating up and down a hierarchy. The primary properties are a left (back) button, a center title, and an optional right button. You can specify custom buttons for each of these.</p><pre><code>iAd.NavigationBar</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.navigationbar
iAd.NavigationBarDelegate	A							https://developer.apple.com/reference/iadjs/iad.navigationbardelegate			<section class="prog__container"><p>The iAd.NavigationBarDelegate protocol defines optional methods that an iAd.NavigationBar delegate should implement to update its views when items are pushed and popped from the navigation bar stack. The navigation bar represents only the bar at the top of the screen, not the view below. It’s the application’s responsibility to implement the behavior when the top item changes.</p><pre><code>iAd.NavigationBarDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.navigationbardelegate
iAd.NavigationController	A							https://developer.apple.com/reference/iadjs/iad.navigationcontroller			<section class="prog__container"><p>The iAd.NavigationController class implements a specialized controller for a navigation bar that manages all aspects of drilling down a hierarchy of objects. It uses application-supplied view controllers to configure the navigation bar and display views below it. Each view controller has a navigation item (instance of iAd.NavigationItem) that provides information on how to set the navigation bar left, middle, and right views. </p><pre><code>iAd.NavigationController</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.navigationcontroller
iAd.NavigationControllerDelegate	A							https://developer.apple.com/reference/iadjs/iad.navigationcontrollerdelegate			<section class="prog__container"><p>The iAd.NavigationControllerDelegate protocol defines methods a navigation controller delegate can implement to change the behavior when view controllers are pushed and popped from the stack of a navigation controller.</p><pre><code>iAd.NavigationControllerDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.navigationcontrollerdelegate
iAd.NavigationItem	A							https://developer.apple.com/reference/iadjs/iad.navigationitem			<section class="prog__container"><p>The iAd.NavigationItem class encapsulates information about a navigation item pushed on an iAd.NavigationBar object’s stack. A navigation bar is a view used to navigate hierarchical content. An iAd.NavigationItem specifies what is displayed on the navigation bar when it is the top item and also how it is represented when it is the back item.</p><pre><code>iAd.NavigationItem</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.navigationitem
iAd.Number	A							https://developer.apple.com/reference/iadjs/iad.number			<section class="prog__container"><p>The iAd.Number class describes a series of utilities for working with numbers.</p><pre><code>iAd.Number</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.number
iAd.Object	A							https://developer.apple.com/reference/iadjs/iad.object			<section class="prog__container"><p>The iAd.Object class is the root class for all iAd objects; it provides a way to receive and trigger notifications when a JavaScript property changes.</p><pre><code>iAd.Object</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.object
iAd.PageControl	A							https://developer.apple.com/reference/iadjs/iad.pagecontrol			<section class="prog__container"><p>Instances of iAd.PageControl represent page controls and are displayed as a series of dots centered in the control. Each dot corresponds to a page of content in the document (or other data model). The page currently being displayed is indicated by a white dot.</p><pre><code>iAd.PageControl</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.pagecontrol
iAd.PageController	A							https://developer.apple.com/reference/iadjs/iad.pagecontroller			<section class="prog__container"><p>The iAd.PageController class provides a way for the user to page between multiple views managed by other view controllers. For example, this style of user interface is used by the Weather application in iOS to page between cities. A page controller provides a scroll view to contain the views and a page control to navigate between them. The behavior of the page controller can be changed by changing the settings of the associated scroll view and page control.</p><pre><code>iAd.PageController</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.pagecontroller
iAd.PassbookPass	A							https://developer.apple.com/reference/iadjs/iad.passbookpass			<section class="prog__container"><p>This class represents a pass that can be saved to a user's Passbook.</p><pre><code>iAd.PassbookPass</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.passbookpass
iAd.PassbookPassDelegate	A							https://developer.apple.com/reference/iadjs/iad.passbookpassdelegate			<section class="prog__container"><p>The delegate protocol for iAd.PassbookPass.</p><pre><code>iAd.PassbookPass</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.passbookpassdelegate
iAd.Path	A							https://developer.apple.com/reference/iadjs/iad.path			<section class="prog__container"><p>The iAd.Path class provides a series of utilities for working with paths.</p><pre><code>iAd.Loader</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.path
iAd.PDF	A							https://developer.apple.com/reference/iadjs/iad.pdf			<section class="prog__container"><p>This class defines information about a PDF resource which can be saved to a user's iBooks library.</p><pre><code>PDF</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.pdf
iAd.PickerView	A							https://developer.apple.com/reference/iadjs/iad.pickerview			<section class="prog__container"><p>The iAd.PickerView class presents a spinning-wheel user interface, visually similar to a slot machine. The user selects a values by rotating the wheels.</p><pre><code>iAd.PickerView</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.pickerview
iAd.PickerViewDataSource	A							https://developer.apple.com/reference/iadjs/iad.pickerviewdatasource			<section class="prog__container"><p>The iAd.PickerViewDataSource protocol must be adopted by an object that mediates between an iAd.PickerView object and your application’s data model for that picker view. The data source provides the picker view with the number of components, and the number of rows in each component, for displaying the picker view data. Both methods in this protocol are required.</p><pre><code>iAd.PickerViewDataSource</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.pickerviewdatasource
iAd.PickerViewDelegate	A							https://developer.apple.com/reference/iadjs/iad.pickerviewdelegate			<section class="prog__container"><p>The delegate of an iAd.PickerView object must adopt the iAd.PickerViewDelegate protocol. The methods of the protocol allow the delegate to manage selections and provide the picker view with the data it needs to construct itself. This protocol is analogous to the UIKit framework’s UIPickerViewDelegate protocol.</p><pre><code>iAd.PickerView</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.pickerviewdelegate
iAd.Point	A							https://developer.apple.com/reference/iadjs/iad.point			<section class="prog__container"><p>The iAd.Point class defines a location in the coordinate space of a view or an element.</p><pre><code>iAd.Point</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.point
iAd.PopoverController	A							https://developer.apple.com/reference/iadjs/iad.popovercontroller			<section class="prog__container"><p>The PopoverController class is used to manage the presentation of content in a popover. You use popovers to present information temporarily but in a way that does not take over the entire screen like a modal view does. The popover content is layered on top of your existing content. The popover remains visible until the user taps outside of the popover view or you explicitly dismiss it. Popover controllers are for use exclusively on iPad devices.</p><pre><code>PopoverController</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.popovercontroller
iAd.PopoverControllerDelegate	A							https://developer.apple.com/reference/iadjs/iad.popovercontrollerdelegate			<section class="prog__container"><p>The delegate of an iAd.PopoverController object must adopt the iAd.PopoverControllerDelegate protocol.</p><pre><code>iAd.PopoverController</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.popovercontrollerdelegate
iAd.ProgressView	A							https://developer.apple.com/reference/iadjs/iad.progressview			<section class="prog__container"><p>An iAd.ProgressView object depicts the progress of a task over time. An iAd.ProgressView object provides properties for setting its current value and style.</p><pre><code>iAd.ProgressView</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.progressview
iAd.PropertyValueChange	A							https://developer.apple.com/reference/iadjs/iad.propertyvaluechange			<section class="prog__container"><p>The iAd.PropertyValueChange protocol provides a single method for observers of property changes to use as a callback instead of specifying a callback per property. An observer is specified as a parameter to the addPropertyObserver method in iAd.Object.</p><pre><code>iAd.PropertyValueChange</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.propertyvaluechange
iAd.RatingControl	A							https://developer.apple.com/reference/iadjs/iad.ratingcontrol			<section class="prog__container"><p>You use the iAd.RatingControl class to provide a star-based rating control so that the user can set a grade for an item on the screen.</p><pre><code>iAd.RatingControl</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.ratingcontrol
iAd.Rect	A							https://developer.apple.com/reference/iadjs/iad.rect			<section class="prog__container"><p>The Rect class is used to create rectangle objects. A rectangle is an object comprised of a width, height, and x- and y-coordinates for its origin point.</p><pre><code>Rect</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.rect
iAd.Reminder	A							https://developer.apple.com/reference/iadjs/iad.reminder			<section class="prog__container"><p>This class defines information about a reminder which can be saved to a user's reminders, and is available as of iOS 6.0.</p><pre><code>Reminder</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.reminder
iAd.RewardLoader	A							https://developer.apple.com/reference/iadjs/iad.rewardloader			<section class="prog__container"><p>An iAd.Loader instance that loads metadata for a reward token. Never instantiate directly, instead use rewardLoaderForToken to create one.</p><pre><code>iAd.Loader</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.rewardloader
iAd.Rewards	A							https://developer.apple.com/reference/iadjs/iad.rewards			<section class="prog__container"><p>An interface for the rewards lookup service.</p><pre><code>iAd.Rewards</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.rewards
iAd.Ringtone	A							https://developer.apple.com/reference/iadjs/iad.ringtone			<section class="prog__container"><p>This class defines information about a ringtone resource which can be saved to a user's ringtone library.</p><pre><code>artist</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.ringtone
iAd.RootView	A							https://developer.apple.com/reference/iadjs/iad.rootview			<section class="prog__container"><p>An iAd.RootView object represents the root of an iAd.View view hierarchy. A single instance of this class should be stored in the class’s sharedRoot property. The root view is usually created automatically by the iAd JS runtime using the body element as the supporting layer. You can change the root view by setting the sharedRoot property manually. </p><pre><code>iAd.RootView</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.rootview
iAd.RootViewController	A							https://developer.apple.com/reference/iadjs/iad.rootviewcontroller			<section class="prog__container"><p>Typically, this class is used as an abstract superclass for creating the application view controller that manages all other view controllers in the application. For example, the root view controller presents view controllers for each function or mode of the application. When this class or subclass is instantiated, the sharedRootViewController class property returns this instance. This class also provides support for transitioning between views when a view controller is presented using the transitionController property.</p><pre><code>sharedRootViewController</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.rootviewcontroller
iAd.SavableContent	A							https://developer.apple.com/reference/iadjs/iad.savablecontent			<section class="prog__container"><p>This is an abstract class that represents a resource that can be added to a user's device. This can be a ringtone, address book entry, pdf, et al. Subclasses implement the present method to display a dialog to the user to save.</p><pre><code>init</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.savablecontent
iAd.SavableContentDelegate	A							https://developer.apple.com/reference/iadjs/iad.savablecontentdelegate			<section class="prog__container"><p>iAd.SavableContentDelegate is the delegate for iAd.SavableContent.</p><pre><code>SavableContentDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.savablecontentdelegate
iAd.ScriptAction	A							https://developer.apple.com/reference/iadjs/iad.scriptaction			<section class="prog__container"><p>All JavaScript Action Classes are required to subclass from iAd.ScriptAction to support actions such as audio/video playback and complex animations that can't be accomplished using CSS keyframes. iAd.ScriptAction extends iAd.Object.</p><pre><code>iAd.ScriptAction</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.scriptaction
iAd.ScriptLoader	A							https://developer.apple.com/reference/iadjs/iad.scriptloader			<section class="prog__container"><p>The iAd.ScriptLoader class extends iAd.Loader and manages the load of a JavaScript file via a script DOM element.</p><pre><code>iAd.ScriptLoader</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.scriptloader
iAd.ScrollView	A							https://developer.apple.com/reference/iadjs/iad.scrollview			<section class="prog__container"><p>The iAd.ScrollView class provides support for displaying content that is larger than the size of the application’s window. This class enables users to scroll within that content by making swiping gestures.</p><pre><code>iAd.ScrollView</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.scrollview
iAd.ScrollViewDelegate	A							https://developer.apple.com/reference/iadjs/iad.scrollviewdelegate			<section class="prog__container"><p>The methods declared by the iAd.ScrollViewDelegate protocol allow objects to respond to messages from the iAd.ScrollView class and thus respond to operations such as scrolling, zooming, deceleration of scrolled content, and scrolling animations. This protocol is analogous to the UIKit framework’s UIScrollViewDelegate protocol.</p><pre><code>iAd.ScrollViewDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.scrollviewdelegate
iAd.SearchBar	A							https://developer.apple.com/reference/iadjs/iad.searchbar			<section class="prog__container"><p>The iAd.SearchBar class implements a text field control for text-based searches. The control provides a text field (for entering text) and an optional cancel button. You use a delegate, an object conforming to the iAd.SearchBarDelegate protocol, to implement the actions when text is entered and buttons are clicked. The iAd.SearchBar object does not actually perform any searches; you are responsible for displaying results as the user interacts with the search bar.</p><pre><code>iAd.SearchBar</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.searchbar
iAd.SearchBarDelegate	A							https://developer.apple.com/reference/iadjs/iad.searchbardelegate			<section class="prog__container"><p>The iAd.SearchBarDelegate protocol defines methods you implement to customize the behavior of an iAd.SearchBar object. An iAd.SearchBar object provides the user interface for a search field on a bar, but it’s the application’s responsibility to implement the actions when text is entered into the search field or the search is canceled. At a minimum, the delegate needs to perform the actual search when text is entered in the text field.</p><pre><code>iAd.SearchBarDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.searchbardelegate
iAd.SearchDisplayController	A							https://developer.apple.com/reference/iadjs/iad.searchdisplaycontroller			<section class="prog__container"><p>The iAd.SearchDisplayController class manages the display of a search bar and a table view that displays the results of a search.</p><pre><code>iAd.SearchDisplayController</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.searchdisplaycontroller
iAd.SearchDisplayDelegate	A							https://developer.apple.com/reference/iadjs/iad.searchdisplaydelegate			<section class="prog__container"><p>The delegate of an iAd.SearchDisplayController object must adopt the iAd.SearchDisplayDelegate protocol.</p><pre><code>iAd.SearchDisplayController</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.searchdisplaydelegate
iAd.SegmentedControl	A							https://developer.apple.com/reference/iadjs/iad.segmentedcontrol			<section class="prog__container"><p>An iAd.SegmentedControl object is a horizontal control made of multiple segments, each segment functioning as a discrete button. You use a segmented control to group a number of controls compactly. This class is analogous to the UIKit framework’s UISegmentedControl class.</p><pre><code>iAd.SegmentedControl</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.segmentedcontrol
iAd.ShareableContent	A							https://developer.apple.com/reference/iadjs/iad.shareablecontent			<section class="prog__container"><p>iAd.ShareableContent allows ads to share images and text to any of the standard sharing services available on iOS. These include Facebook, Twitter, Email, Copy, Print, etc. For a full list, please consult the documentation for the target version of iOS.</p><pre><code>iAd.ShareableContent</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.shareablecontent
iAd.ShareableContentConfiguration	A							https://developer.apple.com/reference/iadjs/iad.shareablecontentconfiguration			<section class="prog__container"><p>An abstract class that allows the definition of a dictionary of properties for an iAd.ShareableContent instance.</p><pre><code>iAd.ShareableContent</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.shareablecontentconfiguration
iAd.ShareableContentDelegate	A							https://developer.apple.com/reference/iadjs/iad.shareablecontentdelegate			<section class="prog__container"><p>[iAd.ShareableContentDelegate] is the delegate for [iAd.ShareableContent].</p><pre><code>shareableContentSaveDidCancel</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.shareablecontentdelegate
iAd.Size	A							https://developer.apple.com/reference/iadjs/iad.size			<section class="prog__container"><p>The iAd.Size class represents a two-dimensional size.</p><pre><code>iAd.Size</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.size
iAd.Slider	A							https://developer.apple.com/reference/iadjs/iad.slider			<section class="prog__container"><p>An iAd.Slider object is a visual control used to select a single value from a continuous range of values. Sliders are always displayed as horizontal bars. An indicator, or thumb, notes the current value of the slider and can be moved by the user to change the setting. This class is analogous to the UIKit framework’s UISlider class.</p><pre><code>iAd.Slider</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.slider
iAd.SMSMessage	A							https://developer.apple.com/reference/iadjs/iad.smsmessage			<section class="prog__container"><p>iAd.SMSMessage allows you to compose SMS messages and present them to the user.</p><pre><code>iAd.SMSMessage</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.smsmessage
iAd.SpatialNavigationManager	A							https://developer.apple.com/reference/iadjs/iad.spatialnavigationmanager			<section class="prog__container"><p>iAd.SpatialNavigationManager handles spatial navigation to allow the user traverse elements.</p><pre><code>SpatialNavigationManager</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.spatialnavigationmanager
iAd.Stepper	A							https://developer.apple.com/reference/iadjs/iad.stepper			<section class="prog__container"><p>The iAd.Stepper class provides a user interface for incrementing or decrementing a value. It extends the iAd.Control class.</p><pre><code>iAd.Stepper</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.stepper
iAd.Store	A							https://developer.apple.com/reference/iadjs/iad.store			<section class="prog__container"><p>The iAd.Store is your starting point for interactions with the iTunes store in an ad, providing methods for registering items for purchase, and loading iAd.StoreItems which you can use to display information about available offers or to make a purchase.</p><pre><code>iAd.Store</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.store
iAd.StoreAction	A							https://developer.apple.com/reference/iadjs/iad.storeaction			<section class="prog__container"><p>A class that represents an action in the iTunes store. You can listen for notifications by assigning an iAd.StoreActionDelegate as its delegate. An iAd.StoreAction should not be directly created, but rather should be returned from other helper methods on iAd.Store.</p><pre><code>iAd.StoreActionDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.storeaction
iAd.StoreActionDelegate	A							https://developer.apple.com/reference/iadjs/iad.storeactiondelegate			<section class="prog__container"><p>A protocol to subscribe for success or failure notifications from store actions.</p><pre><code>iAd.StoreActionDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.storeactiondelegate
iAd.StoreItem	A							https://developer.apple.com/reference/iadjs/iad.storeitem			<section class="prog__container"><p>An object representing an item in the store. You should not instantiate one directly, instead use iAd.Store.loaderForItemId to load one.</p><pre><code>purchaseWithOffer</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.storeitem
iAd.StoreItemDelegate	A							https://developer.apple.com/reference/iadjs/iad.storeitemdelegate			<section class="prog__container"><p>The delegate protocol for the iAd.StoreItem object.</p><pre><code>storeItemMetadataDidExpire</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.storeitemdelegate
iAd.StoreItemLoader	A							https://developer.apple.com/reference/iadjs/iad.storeitemloader			<section class="prog__container"><p>An iAd.Loader subclass that loads an iAd.StoreItem. You should never instantiate one directly, instead use loaderForItemId to retrieve a store item loader instance.</p><pre><code>iAd.Loader</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.storeitemloader
iAd.StoreItemOffer	A							https://developer.apple.com/reference/iadjs/iad.storeitemoffer			<section class="prog__container"><p>An abstract class that represents an offer for an item in the iTunes store. An offer contains the price for a given item and indicates whether the item can be preordered.</p><pre><code>action</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.storeitemoffer
iAd.StorePage	A							https://developer.apple.com/reference/iadjs/iad.storepage			<section class="prog__container"><p>An interface for showing an iTunes Store page in an overlay. Metadata for a store page must first be loaded using load then the store page can be presented to the user using present. Only one store page may be loaded at a time. If a new store page needs to be loaded then unload must be called on the prior instance.</p><pre><code>load</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.storepage
iAd.StorePageDelegate	A							https://developer.apple.com/reference/iadjs/iad.storepagedelegate			<section class="prog__container"><p>iAd.StorePageDelegate is the delegate for iAd.StorePage.</p><pre><code>iAd.StorePageDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.storepagedelegate
iAd.StoreWishList	A							https://developer.apple.com/reference/iadjs/iad.storewishlist			<section class="prog__container"><p>The iAd.StoreWishList provides an interface for adding items to the user's iTunes wish list.</p><pre><code>iAd.StoreWishList</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.storewishlist
iAd.StyleLoader	A							https://developer.apple.com/reference/iadjs/iad.styleloader			<section class="prog__container"><p>The iAd.StyleLoader class extends iAd.Loader and manages the load of a stylesheet via a link DOM element.</p><pre><code>iAd.StyleLoader</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.styleloader
iAd.Switch	A							https://developer.apple.com/reference/iadjs/iad.switch			<section class="prog__container"><p>You use the iAd.Switch class to create and manage On/Off buttons. These objects are known as switches. This class is analogous to the UIKit framework’s UISwitch class.</p><pre><code>iAd.Switch</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.switch
iAd.TabBar	A							https://developer.apple.com/reference/iadjs/iad.tabbar			<section class="prog__container"><p>The iAd.TabBar class implements a control for selecting one of two or more buttons, called items. The most common use of a tab bar is to implement a modal interface where tapping an item changes the selection. Use an iAd.Toolbar object if you want to momentarily highlight or not change the appearance of an item when tapped. The iAd.TabBar class provides the ability for the user to customize the tab bar by reordering, removing, and adding items to the bar. You can use a tab bar delegate to augment this behavior.</p><pre><code>iAd.TabBar</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.tabbar
iAd.TabBarDelegate	A							https://developer.apple.com/reference/iadjs/iad.tabbardelegate			<section class="prog__container"><p>The iAd.TabBarDelegate protocol defines optional methods for a delegate of an iAd.TabBar object. The iAd.TabBar class provides the ability for the user to customize the tab bar by reordering, removing or adding items. The tab bar delegate receives messages when customizing occurs. </p><pre><code>iAd.TabBarDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.tabbardelegate
iAd.TabBarItem	A							https://developer.apple.com/reference/iadjs/iad.tabbaritem			<section class="prog__container"><p>The iAd.TabBarItem class implements an item on a tab bar, instances of the iAd.TabBar class. A tab bar operates strictly in radio mode, where one item is selected at a time—tapping a tab bar item toggles the view above the tab bar. You can also specify a badge value on the tab bar item for adding additional visual information—for example, the Phone application uses a badge on the item to show the number of new messages.</p><pre><code>iAd.TabBarItem</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.tabbaritem
iAd.TableView	A							https://developer.apple.com/reference/iadjs/iad.tableview			<section class="prog__container"><p>The iAd.TableView object displays and edits hierarchical lists of information. A table view is made up of zero or more sections, each with its own rows. Sections are identified by their index number within the table view, and rows are identified by their index number within a section. Any section can optionally be preceded by a section header, and optionally be followed by a section footer. This class is analogous to the UIKit framework’s UITableView class.</p><pre><code>iAd.TableView</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.tableview
iAd.TableViewCell	A							https://developer.apple.com/reference/iadjs/iad.tableviewcell			<section class="prog__container"><p>The iAd.TableViewCell class defines the attributes and behavior of the cells that appear in iAd.TableView objects. An iAd.TableViewCell object (or table cell) includes properties and methods for managing cell’s selection state and appearance. This class is analogous to the UIKit framework’s UITableViewCell class.</p><pre><code>iAd.TableViewCell</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.tableviewcell
iAd.TableViewDataSource	A							https://developer.apple.com/reference/iadjs/iad.tableviewdatasource			<section class="prog__container"><p>The iAd.TableViewDataSource protocol is adopted by an object that mediates the data model for an iAd.TableView object. The data source provides the table-view object with the information it needs to construct and modify a table view. This protocol is analogous to the UIKit framework’s UITableViewDataSource protocol.</p><pre><code>iAd.TableViewDataSource</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.tableviewdatasource
iAd.TableViewDelegate	A							https://developer.apple.com/reference/iadjs/iad.tableviewdelegate			<section class="prog__container"><p>The delegate of an iAd.TableView object must adopt the iAd.TableViewDelegate protocol. The methods of the protocol allow the delegate to manage selections, configure section headings and footers, help to delete and reorder cells, and perform other actions. This protocol is analogous to the UIKit framework’s UITableViewDelegate protocol.</p><pre><code>iAd.TableView</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.tableviewdelegate
iAd.Toolbar	A							https://developer.apple.com/reference/iadjs/iad.toolbar			<section class="prog__container"><p>An instance of the iAd.Toolbar class is a control for presenting buttons, called toolbar items, that users tap to perform some action. A toolbar item momentarily highlights or does not change its appearance when a user taps it. Use the iAd.TabBar class if you need a radio button style control.</p><pre><code>iAd.Toolbar</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.toolbar
iAd.Transaction	A							https://developer.apple.com/reference/iadjs/iad.transaction			<section class="prog__container"><p>The iAd.Transaction class is used to create an animation block in which any changes made to properties you specify within it are animated—specifically, transitions are applied within a transaction. Transactions allow you to synchronize multiple transitions no matter what function or JavaScript script applies those transitions. Transactions can be nested in which case a transaction is committed only when there are no other open transactions. In other words, there must be as many calls to the begin class method as there are calls to the commit class method before any transition in one of those transactions is applied.</p><pre><code>iAd.Transaction</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.transaction
iAd.Transition	A							https://developer.apple.com/reference/iadjs/iad.transition			<section class="prog__container"><p>The iAd.Transition class allows you to animate and synchronize changes to one or more property values of a view or of any DOM element object.</p><pre><code>iAd.Transition</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.transition
iAd.TransitionController	A							https://developer.apple.com/reference/iadjs/iad.transitioncontroller			<section class="prog__container"><p>The iAd.TransitionController class manages the display of another view controller’s view that animates when it appears and disappears.</p><pre><code>iAd.TransitionController</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.transitioncontroller
iAd.TransitionControllerDelegate	A							https://developer.apple.com/reference/iadjs/iad.transitioncontrollerdelegate			<section class="prog__container"><p>The iAd.TransitionControllerDelegate protocol defines methods a transition controller delegate can implement to track when views are presented and hidden by the transition controller, an iAd.TransitionController object.</p><pre><code>iAd.TransitionControllerDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.transitioncontrollerdelegate
iAd.TransitionDefinition	A							https://developer.apple.com/reference/iadjs/iad.transitiondefinition			<section class="prog__container"><p>The iAd.TransitionDefinition class defines transitions that can be applied to any target object. iAd.TransitionDefinition objects are used to describe the properties of a target to animate and not animate, as well as the from and to values of the properties. You can create common types of transitions using this class or use any of the predefined transition definitions, described in View Transitions, and apply them to a view using the applyTransition method.</p><pre><code>iAd.TransitionDefinition</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.transitiondefinition
iAd.TransitionDelegate	A							https://developer.apple.com/reference/iadjs/iad.transitiondelegate			<section class="prog__container"><p>The iAd.TransitionDelegate protocol defines a delegate method for an iAd.Transition object. Delegates can implement the transitionDidComplete method to be notified when a transition ends.</p><pre><code>iAd.TransitionDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.transitiondelegate
iAd.Twitter	A							https://developer.apple.com/reference/iadjs/iad.twitter			<section class="prog__container"><p>A set of methods for interacting with Twitter.</p><pre><code>followSupported</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.twitter
iAd.TwitterAction	A							https://developer.apple.com/reference/iadjs/iad.twitteraction			<section class="prog__container"><p>This class serves as a reference to a Twitter action (e.g. following a user). It should never be instantiated directly; one will be returned to you via methods on iAd.Twitter. You can listen for notifications by assigning an iAd.TwitterActionDelegate as its delegate.</p><pre><code>delegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.twitteraction
iAd.TwitterActionDelegate	A							https://developer.apple.com/reference/iadjs/iad.twitteractiondelegate			<section class="prog__container"><p>The delegate protocol for iAd.TwitterAction.</p><pre><code>twitterActionDidComplete</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.twitteractiondelegate
iAd.TwitterMessage	A							https://developer.apple.com/reference/iadjs/iad.twittermessage			<section class="prog__container"><p>iAd.TwitterMessage allows you to compose Twitter messages and present them to the user. Twitter messages support image and URL attachment types.</p><pre><code>iAd.TwitterMessage</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.twittermessage
iAd.URLResourceError	A							https://developer.apple.com/reference/iadjs/iad.urlresourceerror			<section class="prog__container"><p>Error constants related to loading URL resources associated with system bindings in iAds.</p><pre><code>INVALID_OR_CORRUPT_ERROR</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.urlresourceerror
iAd.Utils	A							https://developer.apple.com/reference/iadjs/iad.utils			<section class="prog__container"><p>The iAd.Utils class defines static methods that simplify a wide range of tasks, including determining object types, and converting angles in ads. Use the Utils property in iAd to get the singleton iAd.Utils instance.</p><pre><code>iAd.Utils</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.utils
iAd.Video	A							https://developer.apple.com/reference/iadjs/iad.video			<section class="prog__container"><p>The iAd.Video class is responsible for creating and controlling an HTML video element. It extends the iAd.Media class.</p><pre><code>iAd.Video</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.video
iAd.VideoDelegate	A							https://developer.apple.com/reference/iadjs/iad.videodelegate			<section class="prog__container"><p>The iAd.VideoDelegate class extends iAd.MediaDelegate, adding in video related methods.</p><pre><code>iAd.VideoDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.videodelegate
iAd.VideoLoader	A							https://developer.apple.com/reference/iadjs/iad.videoloader			<section class="prog__container"><p>The iAd.VideoLoader manages the load of an iAd.Video object.</p><pre><code>iAd.VideoLoader</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.videoloader
iAd.VideoPlayer	A							https://developer.apple.com/reference/iadjs/iad.videoplayer			<section class="prog__container"><p>The iAd.VideoPlayer is a view that manages the playback of a video. It extends the iAd.MediaPlayer class.</p><pre><code>iAd.VideoPlayer</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.videoplayer
iAd.VideoPlayerDelegate	A							https://developer.apple.com/reference/iadjs/iad.videoplayerdelegate			<section class="prog__container"><p>The iAd.VideoPlayerDelegate extends iAd.MediaDelegate, adding in video related methods.</p><pre><code>videoDidChangeFullScreen</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.videoplayerdelegate
iAd.View	A							https://developer.apple.com/reference/iadjs/iad.view			<section class="prog__container"><p>The iAd.View class is the superclass for all iAd JS views. The iAd.View class is the base class for all the iAd JS views. In DOM terms, an iAd.View is backed by a layer, which really is an HTMLElement with that is subject to hardware-accelerated transforms, using the -webkit-transform CSS property. Most views have additional structure underneath this containing layer, and, because of this, a separate hosting layer can be provided by iAd.View subclasses by setting the hostingLayer property, the hostingLayer accessor returning this layer if available, or the top container layer otherwise. Using this hosting layer, developers can add contents freely.</p><pre><code>iAd.View</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.view
iAd.View Additions	A							https://developer.apple.com/reference/iadjs/iad.view_additions			<section class="prog__container"><p>iAd Producer adds properties to the iAd.View class to get the instances of iAd Producer-only views.</p><pre><code>iAd.View</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.view_additions
iAd.ViewController	A							https://developer.apple.com/reference/iadjs/iad.viewcontroller			<section class="prog__container"><p>The iAd.ViewController class provides the fundamental view-management model for iAd content.The main feature of iAd view controllers is to automate the loading of the managed contentView and related style, script and image assets by providing a list of required files using the configuration parameter when constructing a view controller. By providing such a list of required files, the view will be automatically set up using the iAd declarative layer and using delegation, the developer can be notified of the progress loading these required files allowing to provide visual feedback to the user.</p><pre><code>iAd.ViewController</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.viewcontroller
iAd.ViewControllerConfiguration	A							https://developer.apple.com/reference/iadjs/iad.viewcontrollerconfiguration			<section class="prog__container"><p>iAd.ViewControllerConfiguration is a dictionary-like class used for setting properties of an iAd.ViewController object. Use instances of this class when creating a view controller to specify an identifier and if creating a view controller’s content view from files, to specify the required files to load. Use an iAd.ViewControllerConfigurationRequiredFileURIs object to specify the file URIs.</p><pre><code>iAd.ViewControllerConfiguration</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.viewcontrollerconfiguration
iAd.ViewControllerConfigurationAnalytics	A							https://developer.apple.com/reference/iadjs/iad.viewcontrollerconfigurationanalytics			<section class="prog__container"><p>The iAd.ViewControllerConfigurationAnalytics class provides the analytics message definitions and event associations for an iAd.ViewController.</p><pre><code>iAd.ViewControllerConfigurationAnalytics</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.viewcontrollerconfigurationanalytics
iAd.ViewControllerConfigurationAnalyticsEventAssociation	A							https://developer.apple.com/reference/iadjs/iad.viewcontrollerconfigurationanalyticseventassociation			<section class="prog__container"><p>The iAd.ViewControllerConfigurationAnalyticsEventAssociation class defines the event association of an analytics message.</p><pre><code>iAd.ViewControllerConfigurationAnalyticsEventAssociation</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.viewcontrollerconfigurationanalyticseventassociation
iAd.ViewControllerConfigurationRequiredFileURIs	A							https://developer.apple.com/reference/iadjs/iad.viewcontrollerconfigurationrequiredfileuris			<section class="prog__container"><p>An iAd.ViewControllerConfigurationRequiredFileURIs object specifies the file URIs for the web content to load when creating the content view for a view controller. All file URIs should be relative to the loaded webpage’s document URI.</p><pre><code>iAd.ViewControllerConfigurationRequiredFileURIs</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.viewcontrollerconfigurationrequiredfileuris
iAd.ViewControllerRequiredFilesLoadDelegate	A							https://developer.apple.com/reference/iadjs/iad.viewcontrollerrequiredfilesloaddelegate			<section class="prog__container"><p>iAd.ViewControllerRequiredFilesLoadDelegate is the protocol that the requiredFilesLoadDelegate property of a view controller conforms to. The delegate receives messages defined in this protocol on the progress of loading one or more required files. Typically, you implement this protocol to show a progress bar or otherwise engage the user while files are loaded.</p><pre><code>iAd.ViewControllerRequiredFilesLoadDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.viewcontrollerrequiredfilesloaddelegate
iAd.ViewControllerStateChangeDelegate	A							https://developer.apple.com/reference/iadjs/iad.viewcontrollerstatechangedelegate			<section class="prog__container"><p>The iAd.ViewControllerStateChangeDelegate protocol defines a set of methods that delegates may implement to track the state of a view controller. If a view controller’s stateChangeDelegate property is set to an object conforming to this protocol, the object receives these messages when the view controller enters and exits a state.</p><pre><code>iAd.ViewControllerStateChangeDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.viewcontrollerstatechangedelegate
iAd.XHRLoader	A							https://developer.apple.com/reference/iadjs/iad.xhrloader			<section class="prog__container"><p>The iAd.XHRLoader extends iAd.Loader and manages the load of an XMLHttpRequest.</p><pre><code>iAd.XHRLoader</code></pre></section>	https://developer.apple.com/reference/iadjs/iad.xhrloader
iAP.AnimationAction	A							https://developer.apple.com/reference/iadjs/iap.animationaction			<section class="prog__container"><p>The iAP.AnimationAction protocol defines methods necessary for implementing animation actions in iAd Producer plug-ins. Animation actions are iAd JS classes which generate CSS keyframes for inclusion in Action Lists.</p><pre><code>iAP.AnimationAction</code></pre></section>	https://developer.apple.com/reference/iadjs/iap.animationaction
iAP.AudioButton	A							https://developer.apple.com/reference/iadjs/iap.audiobutton			<section class="prog__container"><p>iAP.AudioButton plays an audio file when tapped. Once tapped, the button displays the progress of loading its assigned audio file. After the audio file is loaded, it displays the playback progress.</p><pre><code>iAP.AudioButton</code></pre></section>	https://developer.apple.com/reference/iadjs/iap.audiobutton
iAP.DrawingView	A							https://developer.apple.com/reference/iadjs/iap.drawingview			<section class="prog__container"><p>The iAP.DrawingView class provides an area for users to paint on the screen with their fingers.</p><pre><code>iAP.DrawingView</code></pre></section>	https://developer.apple.com/reference/iadjs/iap.drawingview
iAP.FlowView	A							https://developer.apple.com/reference/iadjs/iap.flowview			<section class="prog__container"><p>The iAP.FlowView class implements a view for displaying many images. Each cell uses a similar layout of user interface objects, but contains a different set of assets and objects. Users use gestures, such as tap, drag, and flick, to see the items in each cell of this multicell object.</p><pre><code>iAP.FlowView</code></pre></section>	https://developer.apple.com/reference/iadjs/iap.flowview
iAP.GalleryView	A							https://developer.apple.com/reference/iadjs/iap.galleryview			<section class="prog__container"><p>The iAP.GalleryView class combines a paged scroll view with a paging control to provide a convenient way to view a series of images. The gallery view contains several cells in a sequence. Users flick the cells or tap the page dots to view the contents of each cell in turn. Users can also tap the current cell to view a minimized or full-size version of the content.</p><pre><code>iAP.GalleryView</code></pre></section>	https://developer.apple.com/reference/iadjs/iap.galleryview
iAP.GridView	A							https://developer.apple.com/reference/iadjs/iap.gridview			<section class="prog__container"><p>Instances of the iAP.GridView class present a gallery of images laid out on a grid. Tapping on an image triggers an animated transition that shows a larger view of the image.</p><pre><code>iAP.GridView</code></pre></section>	https://developer.apple.com/reference/iadjs/iap.gridview
iAP.HTMLView	A							https://developer.apple.com/reference/iadjs/iap.htmlview			<section class="prog__container"><p>The iAP.HTMLView class is used by iAd Producer to enable developers to manually inject HTML fragments into their pages.</p><pre><code>iAP.HTMLView</code></pre></section>	https://developer.apple.com/reference/iadjs/iap.htmlview
iAP.MosaicView	A							https://developer.apple.com/reference/iadjs/iap.mosaicview			<section class="prog__container"><p>An iAP.MosaicView instance splits an image into small pieces and reveals them one at a time to assemble the full image. This class supports a variety of effects and patterns.</p><pre><code>iAP.MosaicView</code></pre></section>	https://developer.apple.com/reference/iadjs/iap.mosaicview
iAP.MultiView	A							https://developer.apple.com/reference/iadjs/iap.multiview			<section class="prog__container"><p>iAP.MultiView is a view that contains a front and back view. It adds a button to each subview that triggers a transition between the views.</p><pre><code>iAd.CellContainer</code></pre></section>	https://developer.apple.com/reference/iadjs/iap.multiview
iAP.PanoramaView	A							https://developer.apple.com/reference/iadjs/iap.panoramaview			<section class="prog__container"><p>The iAP.PanoramaView class represents a 3D room that a user can pan around, like a Gallery. Tapping twice toggles the zoom. The room’s walls are comprised of child views, and the top and bottom images can be set separately.</p><pre><code>iAP.PanoramaView</code></pre></section>	https://developer.apple.com/reference/iadjs/iap.panoramaview
iAP.PanoramaViewDelegate	A							https://developer.apple.com/reference/iadjs/iap.panoramaviewdelegate			<section class="prog__container"><p>The iAP.PanoramaViewDelegate protocol provides an interface adopted by objects for performing an action when the user interacts with the panorama views.</p><pre><code>iAP.PanoramaViewDelegate</code></pre></section>	https://developer.apple.com/reference/iadjs/iap.panoramaviewdelegate
iAP.RootViewController	A							https://developer.apple.com/reference/iadjs/iap.rootviewcontroller			<section class="prog__container"><p>The iAP.RootViewController class adds features to the iAd.RootViewController class used by iAd Producer-only ads. This view controller listens for system events and redispatches them as global events to iAd Producer ads described in System Events.</p><pre><code>iAP.RootViewController</code></pre></section>	https://developer.apple.com/reference/iadjs/iap.rootviewcontroller
iAP.SharedView	A							https://developer.apple.com/reference/iadjs/iap.sharedview			<section class="prog__container"><p>The iAP.SharedView class encapsulates a Shared Layer in iAd Producer. It is subclass of iAd.View that is managed by an iAP.ViewController.</p><pre><code>iAP.SharedView</code></pre></section>	https://developer.apple.com/reference/iadjs/iap.sharedview
iAP.StackView	A							https://developer.apple.com/reference/iadjs/iap.stackview			<section class="prog__container"><p>The iAP.StackView class displays a pile of images that can be flipped through using swipe gestures. This class implements the iAd.CellContainer protocol.</p><pre><code>iAP.StackView</code></pre></section>	https://developer.apple.com/reference/iadjs/iap.stackview
iAP.StoreView	A							https://developer.apple.com/reference/iadjs/iap.storeview			<section class="prog__container"><p>The iAP.StoreView class implements a view that allows the user to purchase one or more items from the iTunes Store. This view is similar to an item page on the iTunes Store.</p><pre><code>iAP.StoreView</code></pre></section>	https://developer.apple.com/reference/iadjs/iap.storeview
iAP.TextField	A							https://developer.apple.com/reference/iadjs/iap.textfield			<section class="prog__container"><p>An iAP.TextField instance represents a user-editable text field. It is an extension of the iAd.Control class, and is backed by an HTML input element.</p><pre><code>iAP.TextField</code></pre></section>	https://developer.apple.com/reference/iadjs/iap.textfield
iAP.View360	A							https://developer.apple.com/reference/iadjs/iap.view360			<section class="prog__container"><p>The iAP.View360 class displays a series of images that can be flipped through using swipe gestures. It is suitable for 360 degree product viewers and frame-based animation. This class implements the iAd.CellContainer protocol.</p><pre><code>iAP.View360</code></pre></section>	https://developer.apple.com/reference/iadjs/iap.view360
iAP.ViewController	A							https://developer.apple.com/reference/iadjs/iap.viewcontroller			<section class="prog__container"><p>The iAP.ViewController class adds support for transitioning between the current view controller and the next view controller in a sequence of view controllers.</p><pre><code>iAP.ViewController</code></pre></section>	https://developer.apple.com/reference/iadjs/iap.viewcontroller
iAP.WebGLView	A							https://developer.apple.com/reference/iadjs/iap.webglview			<section class="prog__container"><p>The iAP.WebGLView class displays interactive 3D objects rendered in WebGL. It extends the iAd.View class.</p><pre><code>iAP.WebGLView</code></pre></section>	https://developer.apple.com/reference/iadjs/iap.webglview
Node iAd JS Additions Reference	A							https://developer.apple.com/reference/iadjs/node_iad_js_additions_reference			<section class="prog__container"><p>The DOM Node interface is extended in iAd JS to include support for views.</p><pre><code>Node</code></pre></section>	https://developer.apple.com/reference/iadjs/node_iad_js_additions_reference
ADAd	A							https://developer.apple.com/reference/iadjsbindings/adad			<section class="prog__container"><p>The ADAd singleton instance encapsulates system bindings support in an ad. It provides store support, methods for saving images and setting the ad’s orientation, and listeners for responding to various native events. The ADAd singleton instance is accessible from the ad property of the window object.</p><pre><code>ADAd</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adad
ADAdListener	A							https://developer.apple.com/reference/iadjsbindings/adadlistener			<section class="prog__container"><p>The ADAdListener protocol is adopted by an object that responds to events related to changes in the ad’s environment. Implement these methods to respond to events such as the dismissal of the ad and pausing and resuming ad activity.</p><pre><code>ADAdListener</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adadlistener
ADBooks	A							https://developer.apple.com/reference/iadjsbindings/adbooks			<section class="prog__container"><p>The ADBooks class grants access to add content to the iBooks library, and is accessed via window.ad.books. If iBooks is not installed, then this object will be null.</p><pre><code>ADBooks</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adbooks
ADBooksListener	A							https://developer.apple.com/reference/iadjsbindings/adbookslistener			<section class="prog__container"><p>The ADBooksListener protocol is an interface that objects implement to get callbacks indicating the result of a downloaded book.</p><pre><code>ADBooksListener</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adbookslistener
ADCalendar	A							https://developer.apple.com/reference/iadjsbindings/adcalendar			<section class="prog__container"><p>The ADCalendar singleton instance encapsulates calendar access available in ad content. It is accessible from the calendar property of the ADAd singleton instance.</p><pre><code>ADCalendar</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adcalendar
ADCalendarEvent	A							https://developer.apple.com/reference/iadjsbindings/adcalendarevent			<section class="prog__container"><p>The ADCalendarEvent class is used to represent events that a user can add to their calendar. After creating a calendar event object, you give the user the opportunity to add it to their calendar with the presentComposer method of the ADCalendar singleton instance.</p><pre><code>ADCalendarEvent</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adcalendarevent
ADCalendarListener	A							https://developer.apple.com/reference/iadjsbindings/adcalendarlistener			<section class="prog__container"><p>The ADCalendarListener protocol is adopted by an object that responds to events generated by the ADCalendar class. Implement these methods to respond to the result of a user’s interaction with the calendar composer.</p><pre><code>ADCalendarListener</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adcalendarlistener
ADCalendarRecurrenceRule	A							https://developer.apple.com/reference/iadjsbindings/adcalendarrecurrencerule			<section class="prog__container"><p>The ADCalendarRecurrenceRule class specifies the properties that should be included in a JSON object sent to ADCalendar for creating an event.</p><pre><code>ADCalendarRecurrenceRule</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adcalendarrecurrencerule
ADCamera	A							https://developer.apple.com/reference/iadjsbindings/adcamera			<section class="prog__container"><p>The ADCamera class grants access to take pictures with the built in cameras via the standard UI. It can be accessed via window.ad.camera. On devices without cameras, this object will be null.</p><pre><code>ADCamera</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adcamera
ADContactAddress	A							https://developer.apple.com/reference/iadjsbindings/adcontactaddress			<section class="prog__container"><p>The ADContactAddress class is a JSON object specifying the properties of an address in an ADContactInfo instance.</p><pre><code>ADContactAddress</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adcontactaddress
ADContactEmail	A							https://developer.apple.com/reference/iadjsbindings/adcontactemail			<section class="prog__container"><p>The ADContactEmail class is a JSON object specifying the properties of an email address in an ADContactInfo instance. </p><pre><code>ADContactEmail</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adcontactemail
ADContactInfo	A							https://developer.apple.com/reference/iadjsbindings/adcontactinfo			<section class="prog__container"><p>The ADContactInfo object is a JSON object specifying the properties of an address book entry.</p><pre><code>ADContactInfo</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adcontactinfo
ADContactPhoneNumber	A							https://developer.apple.com/reference/iadjsbindings/adcontactphonenumber			<section class="prog__container"><p>The ADContactPhoneNumber class is a JSON object specifying the properties of an phone number in an ADContactInfo instance.</p><pre><code>ADContactPhoneNumber</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adcontactphonenumber
ADContacts	A							https://developer.apple.com/reference/iadjsbindings/adcontacts			<section class="prog__container"><p>The ADContacts class provides an interface to the address book on the device. It is available to the DOM as window.ad.contacts.</p><pre><code>ADContacts</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adcontacts
ADImageWriteListener	A							https://developer.apple.com/reference/iadjsbindings/adimagewritelistener			<section class="prog__container"><p>The ADImageWriteListener protocol is adopted by an object that responds to events generated by methods of the ADAd class that allow the user to save an image to their photo library. Implement these methods to respond to the result of an attempted image write.</p><pre><code>ADImageWriteListener</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adimagewritelistener
ADMailComposer	A							https://developer.apple.com/reference/iadjsbindings/admailcomposer			<section class="prog__container"><p>The ADMailComposer singleton instance allows an ad to provide a standard interface for sending email messages from within the ad. The ADMailComposer singleton instance is accessible from the mailComposer property of the ADAd singleton instance. </p><pre><code>ADMailComposer</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/admailcomposer
ADMailComposerListener	A							https://developer.apple.com/reference/iadjsbindings/admailcomposerlistener			<section class="prog__container"><p>The ADMailComposerListener protocol is adopted by an object that responds to events generated by the ADMailComposer class. Implement these methods to respond to the result of a user’s interaction with the mail composer.</p><pre><code>ADMailComposerListener</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/admailcomposerlistener
ADNetworkTypeListener	A							https://developer.apple.com/reference/iadjsbindings/adnetworktypelistener			<section class="prog__container"><p>The ADNetworkTypeListener protocol is adopted by an object that responds to changes in the current network interface of the device. This object should be set as the networkTypeListener property of the ADAd singleton.</p><pre><code>ADNetworkTypeListener</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adnetworktypelistener
ADOrientationListener	A							https://developer.apple.com/reference/iadjsbindings/adorientationlistener			<section class="prog__container"><p>The ADOrientationListener protocol is adopted by an object that responds to changes in the orientation of the device. This object should be set as the deviceOrientationListener property of the ADAd singleton instance. Implement these methods to respond to an orientation change.</p><pre><code>ADOrientationListener</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adorientationlistener
ADRegisteredStoreItem	A							https://developer.apple.com/reference/iadjsbindings/adregisteredstoreitem			<section class="prog__container"><p>An ADRegisteredStoreItem represents an item in the iTunes store your ad has registered for purchase. You obtain an ADRegisteredStoreItem object from the storeItemLookupDidSucceed method of the ADStoreItemListener protocol. A store item contains an item’s unique identifier, offers for the item, and a localized title of the item.</p><pre><code>ADRegisteredStoreItem</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adregisteredstoreitem
ADShakeEventsListener	A							https://developer.apple.com/reference/iadjsbindings/adshakeeventslistener			<section class="prog__container"><p>The ADShakeEventsListener protocol is adopted by an object that responds to shake events from the device. This object should be set as the shakeEventsListener property of the ADAd singleton instance. Implement these methods to respond to a shake event.</p><pre><code>ADShakeEventsListener</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adshakeeventslistener
ADSMSComposer	A							https://developer.apple.com/reference/iadjsbindings/adsmscomposer			<section class="prog__container"><p>The ADSMSComposer singleton instance allows an ad to provide a standard interface for sending SMS messages from within the ad. It is accessible from the smsComposer property of the ADAd singleton instance. </p><pre><code>ADSMSComposer</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adsmscomposer
ADSMSComposerListener	A							https://developer.apple.com/reference/iadjsbindings/adsmscomposerlistener			<section class="prog__container"><p>The ADSMSComposerListener protocol is adopted by an object that responds to events generated by the ADSMSComposer class. Implement these methods to respond to the result of a user’s interaction with the SMS composer.</p><pre><code>ADSMSComposerListener</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adsmscomposerlistener
ADStore	A							https://developer.apple.com/reference/iadjsbindings/adstore			<section class="prog__container"><p>The ADStore class is a singleton accessible from the store property of the ADAd singleton instance. The ADStore class encapsulates interactions with the iTunes store in an ad. It provides methods for registering items for purchase, looking up current information on items, and purchasing items.</p><pre><code>ADStore</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adstore
ADStoreItemListener	A							https://developer.apple.com/reference/iadjsbindings/adstoreitemlistener			<section class="prog__container"><p>The ADStoreItemListener protocol is adopted by an object that responds to events generated by methods of the ADStore singleton instance. Implement these methods to respond to the results of a store item lookup or a purchase request.</p><pre><code>ADStoreItemListener</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adstoreitemlistener
ADStoreItemOffer	A							https://developer.apple.com/reference/iadjsbindings/adstoreitemoffer			<section class="prog__container"><p>An ADStoreItemOffer represents an offer for an item in the iTunes store. You obtain an offer for a given item from the item parameter of the storeItemLookupDidSucceed method of ADStoreItemListener. An offer contains the price for a given item and indicates whether the item can be preordered. To purchase a given item, call the purchaseItemWithID method of the ADStore singleton and provide the identifier property of the item’s offer.</p><pre><code>ADStoreItemOffer</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adstoreitemoffer
ADTwitterComposer	A							https://developer.apple.com/reference/iadjsbindings/adtwittercomposer			<section class="prog__container"><p>The ADTwitterComposer class allows short messages, images, and URLs to be sent via the Twitter service, if the user has configured a Twitter account on the device. It is accessible via window.ad.twitterComposer.</p><pre><code>ADTwitterComposer</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adtwittercomposer
ADTwitterComposerListener	A							https://developer.apple.com/reference/iadjsbindings/adtwittercomposerlistener			<section class="prog__container"><p>The ADTwitterComposerListener protocol is an interface that objects implement to get callbacks for tweet results.</p><pre><code>ADTwitterComposerListener</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adtwittercomposerlistener
ADVolumeListener	A							https://developer.apple.com/reference/iadjsbindings/advolumelistener			<section class="prog__container"><p>The ADVolumeListener protocol is adopted by an object that responds to changes in the current device volume. Such an object should be assigned to the deviceVolumeListener property of the ADAd singleton instance.</p><pre><code>ADVolumeListener</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/advolumelistener
ADWallpaperListener	A							https://developer.apple.com/reference/iadjsbindings/adwallpaperlistener			<section class="prog__container"><p>The ADWallpaperListener protocol is adopted by an object that responds to events generated by the setImageAsWallpaper method of the ADAd singleton instance. Implement these methods to respond to the result of setting a wallpaper.</p><pre><code>ADWallpaperListener</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/adwallpaperlistener
DOMWindow iAd System Bindings Additions	A							https://developer.apple.com/reference/iadjsbindings/domwindow_iad_system_bindings_additions			<section class="prog__container"><p>The DOMWindow class is extended by the iAd System Bindings library to provide access to the ADAd singleton.</p><pre><code>DOMWindow</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/domwindow_iad_system_bindings_additions
MapAnnotation	A							https://developer.apple.com/reference/iadjsbindings/mapannotation			<section class="prog__container"><p>A MapAnnotation object represents an annotation on an ad’s map, which is represented by the MapView class.</p><pre><code>MapAnnotation</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/mapannotation
MapCoordinate	A							https://developer.apple.com/reference/iadjsbindings/mapcoordinate			<section class="prog__container"><p>The MapCoordinate class represents the latitude and longitude of a location on a map.</p><pre><code>MapCoordinate</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/mapcoordinate
MapEventsListener	A							https://developer.apple.com/reference/iadjsbindings/mapeventslistener			<section class="prog__container"><p>The MapEventsListener protocol is adopted by an object that responds to events generated by the MapPlugin class. Implement these methods to respond to events related to the user’s location, the map’s current region, and map annotations.</p><pre><code>MapEventsListener</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/mapeventslistener
MapOverlay	A							https://developer.apple.com/reference/iadjsbindings/mapoverlay			<section class="prog__container"><p>A MapOverlay object represents an overlay on an ad’s map, which is represented by the MapPlugin class. A map overlay object can have one of three different types: polyline, polygon, and circle. A map overlay object has certain required properties that depend on its type, in addition to optional properties that describe how it is drawn. See type for more information on a map overlay’s required properties.</p><pre><code>MapOverlay</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/mapoverlay
MapPoint	A							https://developer.apple.com/reference/iadjsbindings/mappoint			<section class="prog__container"><p>A MapPoint encapsulates the x and y values of a screen coordinate.</p><pre><code>MapPoint</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/mappoint
MapRect	A							https://developer.apple.com/reference/iadjsbindings/maprect			<section class="prog__container"><p>The MapRect class describes the interface used to specify a rectangular region of a MapPlugin object’s screen coordinate space.</p><pre><code>MapRect</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/maprect
MapRegion	A							https://developer.apple.com/reference/iadjsbindings/mapregion			<section class="prog__container"><p>A MapRegion object defines a region on a map specified by latitude and longitude values.</p><pre><code>MapRegion</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/mapregion
MapUserLocation	A							https://developer.apple.com/reference/iadjsbindings/mapuserlocation			<section class="prog__container"><p>The MapUserLocation class defines the interface for the user’s current location. You obtain the user’s current location from the userLocation property of the MapPlugin class.</p><pre><code>MapUserLocation</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/mapuserlocation
MapView	A							https://developer.apple.com/reference/iadjsbindings/mapview			<section class="prog__container"><p>The MapPlugin class lets you embed an interactive map in your ad. The MapPlugin class represents the JavaScript interface for an element with the application/x-geomap MIME type.</p><pre><code>MapPlugin</code></pre></section>	https://developer.apple.com/reference/iadjsbindings/mapview
IMServiceApplication	A							https://developer.apple.com/reference/imserviceplugin/imserviceapplication			<section class="prog__container"><p>A service plug-in communicates with the instant messaging client using the IMServiceApplication protocol. An object implementing this protocol is passed to your service plug-in by the init(serviceApplication:) method.</p><pre><code>IMServiceApplication</code></pre></section>	https://developer.apple.com/reference/imserviceplugin/imserviceapplication
IMServiceApplicationChatRoomSupport	A							https://developer.apple.com/reference/imserviceplugin/imserviceapplicationchatroomsupport			<section class="prog__container"><p>This protocol is used to pass incoming chat room events from the server to the instant messaging client and to provide response callbacks to methods in the IMServicePlugInChatRoomSupport protocol.</p><pre><code>IMServicePlugInChatRoomSupport</code></pre></section>	https://developer.apple.com/reference/imserviceplugin/imserviceapplicationchatroomsupport
IMServiceApplicationGroupListAuthorizationSupport	A							https://developer.apple.com/reference/imserviceplugin/imserviceapplicationgrouplistauthorizationsupport			<section class="prog__container"><p>This protocol is used to pass group-list authorization requests from the server to the instant messaging client.</p><pre><code>IMServicePlugInGroupListAuthorizationSupport</code></pre></section>	https://developer.apple.com/reference/imserviceplugin/imserviceapplicationgrouplistauthorizationsupport
IMServiceApplicationGroupListSupport	A							https://developer.apple.com/reference/imserviceplugin/imserviceapplicationgrouplistsupport			<section class="prog__container"><p>This protocol is used to pass incoming group list events from the server to the instant messaging client and to provide response callbacks to methods in the IMServicePlugInGroupListSupport protocol.</p><pre><code>IMServicePlugInGroupListSupport</code></pre></section>	https://developer.apple.com/reference/imserviceplugin/imserviceapplicationgrouplistsupport
IMServiceApplicationInstantMessagingSupport	A							https://developer.apple.com/reference/imserviceplugin/imserviceapplicationinstantmessagingsupport			<section class="prog__container"><p>This protocol is used to pass incoming instant messaging events from the server to the instant messaging client and to provide response callbacks to methods in the IMServicePlugInInstantMessagingSupport protocol.</p><pre><code>IMServicePlugInInstantMessagingSupport</code></pre></section>	https://developer.apple.com/reference/imserviceplugin/imserviceapplicationinstantmessagingsupport
IMServicePlugIn	A							https://developer.apple.com/reference/imserviceplugin/imserviceplugin			<section class="prog__container"><p>The principal class for each service plug-in must implement the IMServicePlugIn protocol. Implementing this protocol indicates that your service plug-in instance can perform basic tasks such as logging in, logging out, and updating account settings.</p><pre><code>IMServicePlugIn</code></pre></section>	https://developer.apple.com/reference/imserviceplugin/imserviceplugin
IMServicePlugInChatRoomSupport	A							https://developer.apple.com/reference/imserviceplugin/imservicepluginchatroomsupport			<section class="prog__container"><p>Implement this protocol on your service plug-in’s principal class to indicate that your service supports chat-room-based messaging. If you implement this protocol, you must also include IMServiceCapabilityChatRoomSupport as a value for the IMServiceCapabilities key in the Info.plist file of your service plug-in.</p><pre><code>IMServiceCapabilityChatRoomSupport</code></pre></section>	https://developer.apple.com/reference/imserviceplugin/imservicepluginchatroomsupport
IMServicePlugInGroupListAuthorizationSupport	A							https://developer.apple.com/reference/imserviceplugin/imserviceplugingrouplistauthorizationsupport			<section class="prog__container"><p>Implementing this protocol on your service plug-in’s principal class indicates that your service requires authorization when adding a handle to the group list. If you implement this protocol, you must also include IMServiceCapabilityGroupListAuthorizationSupport as a value for the IMServiceCapabilities key in the Info.plist file of your service plug-in. file of your service plug-in. Implementing this protocol requires that you implement the IMServicePlugInGroupListSupport protocol.</p><pre><code>IMServiceCapabilityGroupListAuthorizationSupport</code></pre></section>	https://developer.apple.com/reference/imserviceplugin/imserviceplugingrouplistauthorizationsupport
IMServicePlugInGroupListEditingSupport	A							https://developer.apple.com/reference/imserviceplugin/imserviceplugingrouplisteditingsupport			<section class="prog__container"><p>Implementing this protocol on your service plug-in’s principal class indicates that your service supports editing the group list. If you implement this protocol, you must also include IMServiceCapabilityGroupListAuthorizationSupport as a value for the IMServiceCapabilities key in the Info.plist file of your service plug-in. Implementing this protocol requires that you implement the IMServicePlugInGroupListSupport protocol.</p><pre><code>IMServiceCapabilityGroupListAuthorizationSupport</code></pre></section>	https://developer.apple.com/reference/imserviceplugin/imserviceplugingrouplisteditingsupport
IMServicePlugInGroupListHandlePictureSupport	A							https://developer.apple.com/reference/imserviceplugin/imserviceplugingrouplisthandlepicturesupport			<section class="prog__container"><p>Implementing this protocol on your service plug-in’s principal class indicates that your service supports handle pictures. If you implement this protocol, you must also include IMServiceCapabilityGroupListHandlePictureSupport as a value for the IMServiceCapabilities key in the Info.plist file of your service plug-in. Implementing this protocol requires that you implement the IMServicePlugInGroupListSupport protocol.</p><pre><code>IMServiceCapabilityGroupListHandlePictureSupport</code></pre></section>	https://developer.apple.com/reference/imserviceplugin/imserviceplugingrouplisthandlepicturesupport
IMServicePlugInGroupListOrderingSupport	A							https://developer.apple.com/reference/imserviceplugin/imserviceplugingrouplistorderingsupport			<section class="prog__container"><p>Implementing this protocol on your service plug-in’s principal class indicates that your service supports ordered group lists. If you implement this protocol, you must also include IMServiceCapabilityGroupListOrderingSupport as a value for the IMServiceCapabilities key in the Info.plist file of your service plug-in. Implementing this protocol requires that you implement the IMServicePlugInGroupListSupport protocol.</p><pre><code>IMServiceCapabilityGroupListOrderingSupport</code></pre></section>	https://developer.apple.com/reference/imserviceplugin/imserviceplugingrouplistorderingsupport
IMServicePlugInGroupListSupport	A							https://developer.apple.com/reference/imserviceplugin/imserviceplugingrouplistsupport			<section class="prog__container"><p>Implementing this protocol on your service plug-in’s principal class indicates that your service supports a group list. If you implement this protocol, you must also include IMServiceCapabilityGroupListSupport as a value for the IMServiceCapabilities key in the Info.plist file of your service plug-in.</p><pre><code>IMServiceCapabilityGroupListSupport</code></pre></section>	https://developer.apple.com/reference/imserviceplugin/imserviceplugingrouplistsupport
IMServicePlugInInstantMessagingSupport	A							https://developer.apple.com/reference/imserviceplugin/imserviceplugininstantmessagingsupport			<section class="prog__container"><p>Implementing this protocol on your service plug-in's principal class indicates that your service supports one-to-one instant messaging If you implement this protocol, you must also include IMServiceCapabilityInstantMessagingSupport as a value for the IMServiceCapabilities key in the Info.plist file of your service plug-in.</p><pre><code>IMServiceCapabilityInstantMessagingSupport</code></pre></section>	https://developer.apple.com/reference/imserviceplugin/imserviceplugininstantmessagingsupport
IMServicePlugInMessage	A							https://developer.apple.com/reference/imserviceplugin/imservicepluginmessage			<section class="prog__container"><p>Instances of the IMServicePlugInMessage class represent instant messages.</p><pre><code>IMServicePlugInMessage</code></pre></section>	https://developer.apple.com/reference/imserviceplugin/imservicepluginmessage
IMServicePlugInPresenceSupport	A							https://developer.apple.com/reference/imserviceplugin/imservicepluginpresencesupport			<section class="prog__container"><p>Implementing this protocol on your service plug-in’s principal class indicates that your service supports presence information, such as handle availability, status message, idle state, and picture changes. If you implement this protocol, you must also include IMServicePlugInPresenceSupport as a value for the IMServiceCapabilities key in the Info.plist file of your service plug-in.</p><pre><code>IMServicePlugInPresenceSupport</code></pre></section>	https://developer.apple.com/reference/imserviceplugin/imservicepluginpresencesupport
IMKCandidates	A							https://developer.apple.com/reference/inputmethodkit/imkcandidates			<section class="prog__container"><p>The IMKCandidates class presents candidates to users and notifies the appropriate IMKInputController object when the user selects a candidate. Candidates are alternate characters for a given input sequence. The IMKCandidates class supports using a candidates window in your input method; using IMKCandidates is optional. Not all input methods require them.</p><pre><code>IMKCandidates</code></pre></section>	https://developer.apple.com/reference/inputmethodkit/imkcandidates
IMKInputController	A							https://developer.apple.com/reference/inputmethodkit/imkinputcontroller			<section class="prog__container"><p>The IMKInputController class provides a base class for custom input controller classes. The IMKServer class, which is allocated in the main function of an input method, creates an input controller object for each input session created by a client application. For every input session there is a corresponding IMKInputController object.</p><pre><code>IMKInputController</code></pre></section>	https://developer.apple.com/reference/inputmethodkit/imkinputcontroller
IMKMouseHandling	A							https://developer.apple.com/reference/inputmethodkit/imkmousehandling			<section class="prog__container"><p>The IMKMouseHandling protocol defines methods that your input method can implement to handle mouse events.</p><pre><code>IMKMouseHandling</code></pre></section>	https://developer.apple.com/reference/inputmethodkit/imkmousehandling
IMKServer	A							https://developer.apple.com/reference/inputmethodkit/imkserver			<section class="prog__container"><p>The IMKServer class manages client connections to your input method. When you write the main function for your input method, you create an IMKServer object. You should never need to override this class.</p><pre><code>IMKServer</code></pre></section>	https://developer.apple.com/reference/inputmethodkit/imkserver
IMKServerInput	A							https://developer.apple.com/reference/inputmethodkit/imkserverinput			<section class="prog__container"><p>IMKServerInput is an informal protocol that defines methods for receiving text events. This is intentionally not a formal protocol because there are three ways to receive events. An input method chooses one of the following approaches and implements the appropriate methods: </p><pre><code>IMKServerInput</code></pre></section>	https://developer.apple.com/reference/inputmethodkit/imkserverinput
IMKStateSetting	A							https://developer.apple.com/reference/inputmethodkit/imkstatesetting			<section class="prog__container"><p>The IMKStateSetting protocol defines methods for setting or accessing values that indicate the state of an input method.</p><pre><code>IMKStateSetting</code></pre></section>	https://developer.apple.com/reference/inputmethodkit/imkstatesetting
Applications	A							https://developer.apple.com/reference/installerjs/applications			<section class="prog__container"><p>The Applications object provides methods to obtain information about running applications. This object is accessed using the system.applications property.</p><pre><code>system.applications</code></pre></section>	https://developer.apple.com/reference/installerjs/applications
Choice	A							https://developer.apple.com/reference/installerjs/choice			<section class="prog__container"><p>A Choice object represents a single installation choice. Choice objects are properties of the choices global variable and represent the installation choices defined in a distribution package.</p><pre><code>choices</code></pre></section>	https://developer.apple.com/reference/installerjs/choice
Files	A							https://developer.apple.com/reference/installerjs/files			<section class="prog__container"><p>The Files object provides methods for accessing files. This object is accessed using the system.files property.</p><pre><code>system.files</code></pre></section>	https://developer.apple.com/reference/installerjs/files
IORegistry	A							https://developer.apple.com/reference/installerjs/ioregistry			<section class="prog__container"><p>The IORegistry object provides access to the IOKit registry. This object is accessed using the system.ioregistry property.</p><pre><code>system.ioregistry</code></pre></section>	https://developer.apple.com/reference/installerjs/ioregistry
ProcessInformation	A							https://developer.apple.com/reference/installerjs/processinformation			<section class="prog__container"><p>A ProcessInformation object is a dictionary (associative array) describing an application. The following table describes the items available in the dictionary.</p><pre><code>'PSN'</code></pre></section>	https://developer.apple.com/reference/installerjs/processinformation
Result	A							https://developer.apple.com/reference/installerjs/result			<section class="prog__container"><p>The Result object provides methods to obtain information about the result of an Installation Check or Volume Check script. This object is accessed using the my.result property.</p><pre><code>my.result</code></pre></section>	https://developer.apple.com/reference/installerjs/result
System	A							https://developer.apple.com/reference/installerjs/system			<section class="prog__container"><p>The System object provides access to information about the target host. This object is accessed using the system global variable.</p><pre><code>system</code></pre></section>	https://developer.apple.com/reference/installerjs/system
Target	A							https://developer.apple.com/reference/installerjs/target			<section class="prog__container"><p>The Target object provides methods to obtain information about the installation volume. This object is accessed using the my.target property.</p><pre><code>my.target</code></pre></section>	https://developer.apple.com/reference/installerjs/target
Error Domain	A							https://developer.apple.com/reference/intents/error_domain			<section class="prog__container"><p>The intent error domain.</p><pre><code>let INIntentErrorDomain: String</code></pre></section>	https://developer.apple.com/reference/intents/error_domain
INBillDetails	A							https://developer.apple.com/reference/intents/inbilldetails			<section class="prog__container"><p>The detailed information associated with a bill. </p><pre><code>INBillDetails</code></pre></section>	https://developer.apple.com/reference/intents/inbilldetails
INBillPayee	A							https://developer.apple.com/reference/intents/inbillpayee			<section class="prog__container"><p>The entity that receives the proceeds from a bill payment. </p><pre><code>INBillPayee</code></pre></section>	https://developer.apple.com/reference/intents/inbillpayee
INBillPayeeResolutionResult	A							https://developer.apple.com/reference/intents/inbillpayeeresolutionresult			<section class="prog__container"><p>Describes the result of resolving the entity that receives payment for a bill. </p><pre><code>INBillPayeeResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/inbillpayeeresolutionresult
INBillTypeResolutionResult	A							https://developer.apple.com/reference/intents/inbilltyperesolutionresult			<section class="prog__container"><p>Provides the resolution for intent parameters whose type is INBillType. </p><pre><code>INBillType</code></pre></section>	https://developer.apple.com/reference/intents/inbilltyperesolutionresult
INBookRestaurantReservationIntent	A							https://developer.apple.com/reference/intents/inbookrestaurantreservationintent			<section class="prog__container"><p>Requests the creation of a reservation at the specified restaurant.</p><pre><code>INBookRestaurantReservationIntent</code></pre></section>	https://developer.apple.com/reference/intents/inbookrestaurantreservationintent
INBookRestaurantReservationIntentHandling	A							https://developer.apple.com/reference/intents/inbookrestaurantreservationintenthandling			<section class="prog__container"><p>Handles the booking of a reservation that the user selected.</p><pre><code>INBookRestaurantReservationIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/inbookrestaurantreservationintenthandling
INBookRestaurantReservationIntentResponse	A							https://developer.apple.com/reference/intents/inbookrestaurantreservationintentresponse			<section class="prog__container"><p>Contains your app’s response to a book restaurant reservation intent.</p><pre><code>INBookRestaurantReservationIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/inbookrestaurantreservationintentresponse
INBooleanResolutionResult	A							https://developer.apple.com/reference/intents/inbooleanresolutionresult			<section class="prog__container"><p>Describes the result of resolving a Boolean value associated with an intent.</p><pre><code>INBooleanResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/inbooleanresolutionresult
INCallCapabilityOptions	A							https://developer.apple.com/reference/intents/incallcapabilityoptions			<section class="prog__container"><p>Constants indicating the capabilities of the call.</p><pre><code>static var audioCall: INCallCapabilityOptions</code></pre></section>	https://developer.apple.com/reference/intents/incallcapabilityoptions
INCallRecordType	A							https://developer.apple.com/reference/intents/incallrecordtype			<section class="prog__container"><p>Constants describing the type of the call.</p><pre><code>case unknown</code></pre></section>	https://developer.apple.com/reference/intents/incallrecordtype
INCallRecordTypeResolutionResult	A							https://developer.apple.com/reference/intents/incallrecordtyperesolutionresult			<section class="prog__container"><p>Provides the resolution for intent parameters whose type is INCallRecordType. </p><pre><code>INCallRecordType</code></pre></section>	https://developer.apple.com/reference/intents/incallrecordtyperesolutionresult
INCallsDomainHandling	A							https://developer.apple.com/reference/intents/incallsdomainhandling			<section class="prog__container"><p>Provides a convenient way to adopt all of the protocols in the VoIP calling domain</p><pre><code>INCallsDomainHandling</code></pre></section>	https://developer.apple.com/reference/intents/incallsdomainhandling
INCancelWorkoutIntent	A							https://developer.apple.com/reference/intents/incancelworkoutintent			<section class="prog__container"><p>Cancels an active workout.</p><pre><code>INCancelWorkoutIntent</code></pre></section>	https://developer.apple.com/reference/intents/incancelworkoutintent
INCancelWorkoutIntentHandling	A							https://developer.apple.com/reference/intents/incancelworkoutintenthandling			<section class="prog__container"><p>Handles the cancellation of a workout. </p><pre><code>INCancelWorkoutIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/incancelworkoutintenthandling
INCancelWorkoutIntentResponse	A							https://developer.apple.com/reference/intents/incancelworkoutintentresponse			<section class="prog__container"><p>Contains your app’s response to a cancel workout intent.</p><pre><code>INCancelWorkoutIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/incancelworkoutintentresponse
INCarAirCirculationMode	A							https://developer.apple.com/reference/intents/incaraircirculationmode			<section class="prog__container"><p>Constants indicating the circulation mode for the climate system.</p><pre><code>case unknown</code></pre></section>	https://developer.apple.com/reference/intents/incaraircirculationmode
INCarAirCirculationModeResolutionResult	A							https://developer.apple.com/reference/intents/incaraircirculationmoderesolutionresult			<section class="prog__container"><p>Describes the result of resolving the air circulation mode to use in a car.</p><pre><code>INCarAirCirculationModeResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/incaraircirculationmoderesolutionresult
INCarAudioSource	A							https://developer.apple.com/reference/intents/incaraudiosource			<section class="prog__container"><p>Constants indicating the source of audio.</p><pre><code>case sourceUnknown</code></pre></section>	https://developer.apple.com/reference/intents/incaraudiosource
INCarAudioSourceResolutionResult	A							https://developer.apple.com/reference/intents/incaraudiosourceresolutionresult			<section class="prog__container"><p>Describes the result of resolving the audio source to use in a car.</p><pre><code>INCarAudioSourceResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/incaraudiosourceresolutionresult
INCarDefroster	A							https://developer.apple.com/reference/intents/incardefroster			<section class="prog__container"><p>Constants indicating the defroster type.</p><pre><code>case unknown</code></pre></section>	https://developer.apple.com/reference/intents/incardefroster
INCarDefrosterResolutionResult	A							https://developer.apple.com/reference/intents/incardefrosterresolutionresult			<section class="prog__container"><p>Describes the result of resolving which defroster to use in a car.</p><pre><code>INCarDefrosterResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/incardefrosterresolutionresult
INCarPlayDomainHandling	A							https://developer.apple.com/reference/intents/incarplaydomainhandling			<section class="prog__container"><p>Provides a convenient way to adopt all of the protocols in the CarPlay domain. </p><pre><code>INCarPlayDomainHandling</code></pre></section>	https://developer.apple.com/reference/intents/incarplaydomainhandling
INCarSeat	A							https://developer.apple.com/reference/intents/incarseat			<section class="prog__container"><p>Constants indicating a seat position.</p><pre><code>case unknown</code></pre></section>	https://developer.apple.com/reference/intents/incarseat
INCarSeatResolutionResult	A							https://developer.apple.com/reference/intents/incarseatresolutionresult			<section class="prog__container"><p>Describes the result of resolving which car seat was selected.</p><pre><code>INCarSeatResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/incarseatresolutionresult
INConditionalOperator	A							https://developer.apple.com/reference/intents/inconditionaloperator			<section class="prog__container"><p>Constants indicating how search attributes are interpreted.</p><pre><code>case all</code></pre></section>	https://developer.apple.com/reference/intents/inconditionaloperator
INCurrencyAmount	A							https://developer.apple.com/reference/intents/incurrencyamount			<section class="prog__container"><p>Represents an amount of money to transfer during a financial transaction.</p><pre><code>INCurrencyAmount</code></pre></section>	https://developer.apple.com/reference/intents/incurrencyamount
INCurrencyAmountResolutionResult	A							https://developer.apple.com/reference/intents/incurrencyamountresolutionresult			<section class="prog__container"><p>Describes the result of resolving a currency amount associated with an intent.</p><pre><code>INCurrencyAmountResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/incurrencyamountresolutionresult
INDateComponentsRange	A							https://developer.apple.com/reference/intents/indatecomponentsrange			<section class="prog__container"><p>Specifies a span of time.</p><pre><code>INDateComponentsRange</code></pre></section>	https://developer.apple.com/reference/intents/indatecomponentsrange
INDateComponentsRangeResolutionResult	A							https://developer.apple.com/reference/intents/indatecomponentsrangeresolutionresult			<section class="prog__container"><p>Describes the result of resolving a range of dates associated with an intent.</p><pre><code>INDateComponentsRangeResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/indatecomponentsrangeresolutionresult
INDateComponentsResolutionResult	A							https://developer.apple.com/reference/intents/indatecomponentsresolutionresult			<section class="prog__container"><p>Describes the result of resolving the date information associated with an intent.</p><pre><code>INDateComponentsResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/indatecomponentsresolutionresult
INDoubleResolutionResult	A							https://developer.apple.com/reference/intents/indoubleresolutionresult			<section class="prog__container"><p>Describes the result of resolving a double value associated with an intent.</p><pre><code>INDoubleResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/indoubleresolutionresult
INEndWorkoutIntent	A							https://developer.apple.com/reference/intents/inendworkoutintent			<section class="prog__container"><p>Ends the current workout and saves the results.</p><pre><code>INEndWorkoutIntent</code></pre></section>	https://developer.apple.com/reference/intents/inendworkoutintent
INEndWorkoutIntentHandling	A							https://developer.apple.com/reference/intents/inendworkoutintenthandling			<section class="prog__container"><p>Handles the completion of a workout. </p><pre><code>INEndWorkoutIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/inendworkoutintenthandling
INEndWorkoutIntentResponse	A							https://developer.apple.com/reference/intents/inendworkoutintentresponse			<section class="prog__container"><p>Contains your app’s response to an end workout intent.</p><pre><code>INEndWorkoutIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/inendworkoutintentresponse
INExtension	A							https://developer.apple.com/reference/intents/inextension			<section class="prog__container"><p>Represents the entry point for an Intents extension. </p><pre><code>INExtension</code></pre></section>	https://developer.apple.com/reference/intents/inextension
INGetAvailableRestaurantReservationBookingDefaultsIntent	A							https://developer.apple.com/reference/intents/ingetavailablerestaurantreservationbookingdefaultsintent			<section class="prog__container"><p>Requests the default values to use when fetching potential reservation options.</p><pre><code>INGetAvailableRestaurantReservationBookingDefaultsIntent</code></pre></section>	https://developer.apple.com/reference/intents/ingetavailablerestaurantreservationbookingdefaultsintent
INGetAvailableRestaurantReservationBookingDefaultsIntentHandling	A							https://developer.apple.com/reference/intents/ingetavailablerestaurantreservationbookingdefaultsintenthandling			<section class="prog__container"><p>Provides default values for the system to use when pre-fetching an initial set of possible reservation times.</p><pre><code>INGetAvailableRestaurantReservationBookingDefaultsIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/ingetavailablerestaurantreservationbookingdefaultsintenthandling
INGetAvailableRestaurantReservationBookingDefaultsIntentResponse	A							https://developer.apple.com/reference/intents/ingetavailablerestaurantreservationbookingdefaultsintentresponse			<section class="prog__container"><p>Contains your app’s response to a get available restaurant reservation booking defaults intent.</p><pre><code>INGetAvailableRestaurantReservationBookingDefaultsIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/ingetavailablerestaurantreservationbookingdefaultsintentresponse
INGetAvailableRestaurantReservationBookingsIntent	A							https://developer.apple.com/reference/intents/ingetavailablerestaurantreservationbookingsintent			<section class="prog__container"><p>Requests the time slots available for making a reservation.</p><pre><code>INGetAvailableRestaurantReservationBookingsIntent</code></pre></section>	https://developer.apple.com/reference/intents/ingetavailablerestaurantreservationbookingsintent
INGetAvailableRestaurantReservationBookingsIntentHandling	A							https://developer.apple.com/reference/intents/ingetavailablerestaurantreservationbookingsintenthandling			<section class="prog__container"><p>Generates a list of potential reservation times from which the user can select.</p><pre><code>INGetAvailableRestaurantReservationBookingsIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/ingetavailablerestaurantreservationbookingsintenthandling
INGetAvailableRestaurantReservationBookingsIntentResponse	A							https://developer.apple.com/reference/intents/ingetavailablerestaurantreservationbookingsintentresponse			<section class="prog__container"><p>Contains your app’s response to a get available restaurant reservation bookings intent.</p><pre><code>INGetAvailableRestaurantReservationBookingsIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/ingetavailablerestaurantreservationbookingsintentresponse
INGetRestaurantGuestIntent	A							https://developer.apple.com/reference/intents/ingetrestaurantguestintent			<section class="prog__container"><p>Requests information about the guest who is making reservations.</p><pre><code>INGetRestaurantGuestIntent</code></pre></section>	https://developer.apple.com/reference/intents/ingetrestaurantguestintent
INGetRestaurantGuestIntentHandling	A							https://developer.apple.com/reference/intents/ingetrestaurantguestintenthandling			<section class="prog__container"><p>Fetches information about the person making a reservation.</p><pre><code>INGetRestaurantGuestIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/ingetrestaurantguestintenthandling
INGetRestaurantGuestIntentResponse	A							https://developer.apple.com/reference/intents/ingetrestaurantguestintentresponse			<section class="prog__container"><p>Contains your app’s response to a get restaurant guest intent.</p><pre><code>INGetRestaurantGuestIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/ingetrestaurantguestintentresponse
INGetRideStatusIntent	A							https://developer.apple.com/reference/intents/ingetridestatusintent			<section class="prog__container"><p>Requests the current status of a previously booked ride. </p><pre><code>INGetRideStatusIntent</code></pre></section>	https://developer.apple.com/reference/intents/ingetridestatusintent
INGetRideStatusIntentHandling	A							https://developer.apple.com/reference/intents/ingetridestatusintenthandling			<section class="prog__container"><p>Fetches the status of the user’s current ride.</p><pre><code>INGetRideStatusIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/ingetridestatusintenthandling
INGetRideStatusIntentResponse	A							https://developer.apple.com/reference/intents/ingetridestatusintentresponse			<section class="prog__container"><p>Contains your app’s response to a get ride status intent. </p><pre><code>INGetRideStatusIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/ingetridestatusintentresponse
INGetRideStatusIntentResponseObserver	A							https://developer.apple.com/reference/intents/ingetridestatusintentresponseobserver			<section class="prog__container"><p>Defines an interface for providing updated status for an active ride. </p><pre><code>INGetRideStatusIntentResponseObserver</code></pre></section>	https://developer.apple.com/reference/intents/ingetridestatusintentresponseobserver
INGetUserCurrentRestaurantReservationBookingsIntent	A							https://developer.apple.com/reference/intents/ingetusercurrentrestaurantreservationbookingsintent			<section class="prog__container"><p>Requests a list of the user’s current reservations.</p><pre><code>INGetUserCurrentRestaurantReservationBookingsIntent</code></pre></section>	https://developer.apple.com/reference/intents/ingetusercurrentrestaurantreservationbookingsintent
INGetUserCurrentRestaurantReservationBookingsIntentHandling	A							https://developer.apple.com/reference/intents/ingetusercurrentrestaurantreservationbookingsintenthandling			<section class="prog__container"><p>Fetches and delivers the user’s current reservations.</p><pre><code>INGetUserCurrentRestaurantReservationBookingsIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/ingetusercurrentrestaurantreservationbookingsintenthandling
INGetUserCurrentRestaurantReservationBookingsIntentResponse	A							https://developer.apple.com/reference/intents/ingetusercurrentrestaurantreservationbookingsintentresponse			<section class="prog__container"><p>Contains your app’s response to a get user current restaurant reservation bookings intent.</p><pre><code>INGetUserCurrentRestaurantReservationBookingsIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/ingetusercurrentrestaurantreservationbookingsintentresponse
INImage	A							https://developer.apple.com/reference/intents/inimage			<section class="prog__container"><p>Manages image data inside an Intents extension or Intents UI extension.</p><pre><code>INImage</code></pre></section>	https://developer.apple.com/reference/intents/inimage
INIntegerResolutionResult	A							https://developer.apple.com/reference/intents/inintegerresolutionresult			<section class="prog__container"><p>Describes the result of resolving an integer value associated with an intent.</p><pre><code>INIntegerResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/inintegerresolutionresult
INIntent	A							https://developer.apple.com/reference/intents/inintent			<section class="prog__container"><p>Describes a request for you to fulfill using your Intents extension.</p><pre><code>INIntent</code></pre></section>	https://developer.apple.com/reference/intents/inintent
INIntentError.Code	A							https://developer.apple.com/reference/intents/inintenterror.code			<section class="prog__container"><p>Constants for error codes returned by the framework.</p><pre><code>case interactionOperationNotSupported</code></pre></section>	https://developer.apple.com/reference/intents/inintenterror.code
INIntentHandlerProviding	A							https://developer.apple.com/reference/intents/inintenthandlerproviding			<section class="prog__container"><p>Contains the interface for dispatching intents to the custom objects that handle those intents. </p><pre><code>INIntentHandlerProviding</code></pre></section>	https://developer.apple.com/reference/intents/inintenthandlerproviding
INIntentHandlingStatus	A							https://developer.apple.com/reference/intents/inintenthandlingstatus			<section class="prog__container"><p>Constants indicating the current state of the interaction.</p><pre><code>case unspecified</code></pre></section>	https://developer.apple.com/reference/intents/inintenthandlingstatus
INIntentResolutionResult	A							https://developer.apple.com/reference/intents/inintentresolutionresult			<section class="prog__container"><p>Describes the result of resolving a parameter of an intent object.</p><pre><code>INIntentResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/inintentresolutionresult
INIntentResponse	A							https://developer.apple.com/reference/intents/inintentresponse			<section class="prog__container"><p>Contains your response to an intent object. </p><pre><code>INIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/inintentresponse
INInteraction	A							https://developer.apple.com/reference/intents/ininteraction			<section class="prog__container"><p>Defines an interaction between the user and your app involving an intent object.</p><pre><code>INInteraction</code></pre></section>	https://developer.apple.com/reference/intents/ininteraction
INInteractionDirection	A							https://developer.apple.com/reference/intents/ininteractiondirection			<section class="prog__container"><p>Constants indicating whether the app is providing or receiving information. </p><pre><code>case unspecified</code></pre></section>	https://developer.apple.com/reference/intents/ininteractiondirection
INListRideOptionsIntent	A							https://developer.apple.com/reference/intents/inlistrideoptionsintent			<section class="prog__container"><p>Requests the types of rides available from a ride booking service.</p><pre><code>INListRideOptionsIntent</code></pre></section>	https://developer.apple.com/reference/intents/inlistrideoptionsintent
INListRideOptionsIntentHandling	A							https://developer.apple.com/reference/intents/inlistrideoptionsintenthandling			<section class="prog__container"><p>Fetches the list of rides currently available from your ride booking service.</p><pre><code>INListRideOptionsIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/inlistrideoptionsintenthandling
INListRideOptionsIntentResponse	A							https://developer.apple.com/reference/intents/inlistrideoptionsintentresponse			<section class="prog__container"><p>Contains your app’s response to a list ride options intent. </p><pre><code>INListRideOptionsIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/inlistrideoptionsintentresponse
INMessage	A							https://developer.apple.com/reference/intents/inmessage			<section class="prog__container"><p>Contains information about a message managed by your app.</p><pre><code>INMessage</code></pre></section>	https://developer.apple.com/reference/intents/inmessage
INMessageAttribute	A							https://developer.apple.com/reference/intents/inmessageattribute			<section class="prog__container"><p>Constants indicating an attribute of a message.</p><pre><code>case unknown</code></pre></section>	https://developer.apple.com/reference/intents/inmessageattribute
INMessageAttributeOptions	A							https://developer.apple.com/reference/intents/inmessageattributeoptions			<section class="prog__container"><p>Constants indicating the status of a message.</p><pre><code>init(rawValue: UInt)</code></pre></section>	https://developer.apple.com/reference/intents/inmessageattributeoptions
INMessageAttributeOptionsResolutionResult	A							https://developer.apple.com/reference/intents/inmessageattributeoptionsresolutionresult			<section class="prog__container"><p>Provides the resolution for intent parameters whose type is INMessageAttributeOptions. </p><pre><code>INMessageAttributeOptions</code></pre></section>	https://developer.apple.com/reference/intents/inmessageattributeoptionsresolutionresult
INMessageAttributeResolutionResult	A							https://developer.apple.com/reference/intents/inmessageattributeresolutionresult			<section class="prog__container"><p>Provides the resolution for intent parameters whose type is INMessageAttribute. </p><pre><code>INMessageAttribute</code></pre></section>	https://developer.apple.com/reference/intents/inmessageattributeresolutionresult
INMessagesDomainHandling	A							https://developer.apple.com/reference/intents/inmessagesdomainhandling			<section class="prog__container"><p>Provides a convenient way to adopt all of the protocols in the messages domain. </p><pre><code>INMessagesDomainHandling</code></pre></section>	https://developer.apple.com/reference/intents/inmessagesdomainhandling
INPauseWorkoutIntent	A							https://developer.apple.com/reference/intents/inpauseworkoutintent			<section class="prog__container"><p>Pauses the current workout.</p><pre><code>INPauseWorkoutIntent</code></pre></section>	https://developer.apple.com/reference/intents/inpauseworkoutintent
INPauseWorkoutIntentHandling	A							https://developer.apple.com/reference/intents/inpauseworkoutintenthandling			<section class="prog__container"><p>Handles the pausing of a workout. </p><pre><code>INPauseWorkoutIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/inpauseworkoutintenthandling
INPauseWorkoutIntentResponse	A							https://developer.apple.com/reference/intents/inpauseworkoutintentresponse			<section class="prog__container"><p>Contains your app’s response to a pause workout intent.</p><pre><code>INPauseWorkoutIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/inpauseworkoutintentresponse
INPayBillIntent	A							https://developer.apple.com/reference/intents/inpaybillintent			<section class="prog__container"><p>Requests the transfer of money to facilitate payment of a bill. </p><pre><code>INPayBillIntent</code></pre></section>	https://developer.apple.com/reference/intents/inpaybillintent
INPayBillIntentHandling	A							https://developer.apple.com/reference/intents/inpaybillintenthandling			<section class="prog__container"><p>Handles the payment of a bill using money from the user's account.</p><pre><code>INPayBillIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/inpaybillintenthandling
INPayBillIntentResponse	A							https://developer.apple.com/reference/intents/inpaybillintentresponse			<section class="prog__container"><p>Contains your app's response to a pay bill intent.</p><pre><code>INPayBillIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/inpaybillintentresponse
INPaymentAccount	A							https://developer.apple.com/reference/intents/inpaymentaccount			<section class="prog__container"><p>A user account that provides the funds when making a payment.</p><pre><code>INPaymentAccount</code></pre></section>	https://developer.apple.com/reference/intents/inpaymentaccount
INPaymentAccountResolutionResult	A							https://developer.apple.com/reference/intents/inpaymentaccountresolutionresult			<section class="prog__container"><p>Describes the result of resolving the user account that provides the funds to pay a bill.</p><pre><code>INPaymentAccountResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/inpaymentaccountresolutionresult
INPaymentAmount	A							https://developer.apple.com/reference/intents/inpaymentamount			<section class="prog__container"><p>The amount of money to apply to a bill payment.</p><pre><code>INPaymentAmount</code></pre></section>	https://developer.apple.com/reference/intents/inpaymentamount
INPaymentAmountResolutionResult	A							https://developer.apple.com/reference/intents/inpaymentamountresolutionresult			<section class="prog__container"><p>Describes the result of resolving the amount to be paid for a bill.</p><pre><code>INPaymentAmountResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/inpaymentamountresolutionresult
INPaymentMethod	A							https://developer.apple.com/reference/intents/inpaymentmethod			<section class="prog__container"><p>Contains information about a form of payment supported by your app.</p><pre><code>INPaymentMethod</code></pre></section>	https://developer.apple.com/reference/intents/inpaymentmethod
INPaymentRecord	A							https://developer.apple.com/reference/intents/inpaymentrecord			<section class="prog__container"><p>Contains detailed information about a financial transaction made between two users.</p><pre><code>INPaymentRecord</code></pre></section>	https://developer.apple.com/reference/intents/inpaymentrecord
INPaymentsDomainHandling	A							https://developer.apple.com/reference/intents/inpaymentsdomainhandling			<section class="prog__container"><p>Provides a convenient way to adopt all of the protocols in the payments domain.</p><pre><code>INPaymentsDomainHandling</code></pre></section>	https://developer.apple.com/reference/intents/inpaymentsdomainhandling
INPaymentStatus	A							https://developer.apple.com/reference/intents/inpaymentstatus			<section class="prog__container"><p>Constants indicating the state of the financial transaction.</p><pre><code>case unknown</code></pre></section>	https://developer.apple.com/reference/intents/inpaymentstatus
INPaymentStatusResolutionResult	A							https://developer.apple.com/reference/intents/inpaymentstatusresolutionresult			<section class="prog__container"><p>Describes the result of resolving the payment status for bill during a search.</p><pre><code>INPaymentStatusResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/inpaymentstatusresolutionresult
INPerson	A							https://developer.apple.com/reference/intents/inperson			<section class="prog__container"><p>Contains information about a user involved in a SiriKit interaction.</p><pre><code>INPerson</code></pre></section>	https://developer.apple.com/reference/intents/inperson
INPersonHandle	A							https://developer.apple.com/reference/intents/inpersonhandle			<section class="prog__container"><p>Contains identifying information for a user of your app.</p><pre><code>INPersonHandle</code></pre></section>	https://developer.apple.com/reference/intents/inpersonhandle
INPersonResolutionResult	A							https://developer.apple.com/reference/intents/inpersonresolutionresult			<section class="prog__container"><p>Describes the result of resolving user information associated with an intent.</p><pre><code>INPersonResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/inpersonresolutionresult
INPersonSuggestionType	A							https://developer.apple.com/reference/intents/inpersonsuggestiontype			<section class="prog__container"><p>Constants indicating how to display the person’s identity.</p><pre><code>case socialProfile</code></pre></section>	https://developer.apple.com/reference/intents/inpersonsuggestiontype
INPhotoAttributeOptions	A							https://developer.apple.com/reference/intents/inphotoattributeoptions			<section class="prog__container"><p>Constants indicating attributes of a photo.</p><pre><code>static var photo: INPhotoAttributeOptions</code></pre></section>	https://developer.apple.com/reference/intents/inphotoattributeoptions
INPhotosDomainHandling	A							https://developer.apple.com/reference/intents/inphotosdomainhandling			<section class="prog__container"><p>Provides a convenient way to adopt all of the protocols in the photos domain. </p><pre><code>INPhotosDomainHandling</code></pre></section>	https://developer.apple.com/reference/intents/inphotosdomainhandling
INPlacemarkResolutionResult	A							https://developer.apple.com/reference/intents/inplacemarkresolutionresult			<section class="prog__container"><p>Describes the result of resolving placemark information associated with an intent.</p><pre><code>INPlacemarkResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/inplacemarkresolutionresult
INPreferences	A							https://developer.apple.com/reference/intents/inpreferences			<section class="prog__container"><p>Manages the preferences and authorization related to using SiriKit. </p><pre><code>INPreferences</code></pre></section>	https://developer.apple.com/reference/intents/inpreferences
INPriceRange	A							https://developer.apple.com/reference/intents/inpricerange			<section class="prog__container"><p>Represents price information as a range of possible values.</p><pre><code>INPriceRange</code></pre></section>	https://developer.apple.com/reference/intents/inpricerange
INRadioDomainHandling	A							https://developer.apple.com/reference/intents/inradiodomainhandling			<section class="prog__container"><p>Provides a convenient way to adopt all of the protocols in the radio domain. </p><pre><code>INRadioDomainHandling</code></pre></section>	https://developer.apple.com/reference/intents/inradiodomainhandling
INRadioType	A							https://developer.apple.com/reference/intents/inradiotype			<section class="prog__container"><p>Constants indicating the type of radio.</p><pre><code>case unknown</code></pre></section>	https://developer.apple.com/reference/intents/inradiotype
INRadioTypeResolutionResult	A							https://developer.apple.com/reference/intents/inradiotyperesolutionresult			<section class="prog__container"><p>Describes the result of resolving the type of radio to use in a car.</p><pre><code>INRadioTypeResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/inradiotyperesolutionresult
INRelativeReference	A							https://developer.apple.com/reference/intents/inrelativereference			<section class="prog__container"><p>Constants indicating relative positions.</p><pre><code>case unknown</code></pre></section>	https://developer.apple.com/reference/intents/inrelativereference
INRelativeReferenceResolutionResult	A							https://developer.apple.com/reference/intents/inrelativereferenceresolutionresult			<section class="prog__container"><p>Describes the result of resolving a choice between the next or previous option.</p><pre><code>INRelativeReferenceResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/inrelativereferenceresolutionresult
INRelativeSetting	A							https://developer.apple.com/reference/intents/inrelativesetting			<section class="prog__container"><p>Constants indicating relative settings.</p><pre><code>case unknown</code></pre></section>	https://developer.apple.com/reference/intents/inrelativesetting
INRelativeSettingResolutionResult	A							https://developer.apple.com/reference/intents/inrelativesettingresolutionresult			<section class="prog__container"><p>Describes the result of resolving a setting value relative to a known minimum, current, or maximum value.</p><pre><code>INRelativeSettingResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/inrelativesettingresolutionresult
INRequestPaymentIntent	A							https://developer.apple.com/reference/intents/inrequestpaymentintent			<section class="prog__container"><p>Requests money from another user’s account. </p><pre><code>INRequestPaymentIntent</code></pre></section>	https://developer.apple.com/reference/intents/inrequestpaymentintent
INRequestPaymentIntentHandling	A							https://developer.apple.com/reference/intents/inrequestpaymentintenthandling			<section class="prog__container"><p>Handles the delivery of a request for payment from another user of your app. </p><pre><code>INRequestPaymentIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/inrequestpaymentintenthandling
INRequestPaymentIntentResponse	A							https://developer.apple.com/reference/intents/inrequestpaymentintentresponse			<section class="prog__container"><p>Contains your app’s response to a request payment intent.</p><pre><code>INRequestPaymentIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/inrequestpaymentintentresponse
INRequestRideIntent	A							https://developer.apple.com/reference/intents/inrequestrideintent			<section class="prog__container"><p>Contains a request to your service to book the specified ride. </p><pre><code>INRequestRideIntent</code></pre></section>	https://developer.apple.com/reference/intents/inrequestrideintent
INRequestRideIntentHandling	A							https://developer.apple.com/reference/intents/inrequestrideintenthandling			<section class="prog__container"><p>Handles the booking of a ride for the user.</p><pre><code>INRequestRideIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/inrequestrideintenthandling
INRequestRideIntentResponse	A							https://developer.apple.com/reference/intents/inrequestrideintentresponse			<section class="prog__container"><p>Contains your app’s response to a request ride intent.</p><pre><code>INRequestRideIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/inrequestrideintentresponse
INRestaurant	A							https://developer.apple.com/reference/intents/inrestaurant			<section class="prog__container"><p>Identifies a restaurant for which your app can make and manage reservations.</p><pre><code>INRestaurant</code></pre></section>	https://developer.apple.com/reference/intents/inrestaurant
INRestaurantGuest	A							https://developer.apple.com/reference/intents/inrestaurantguest			<section class="prog__container"><p>Identifies the person assigned to a reservation. </p><pre><code>INRestaurantGuest</code></pre></section>	https://developer.apple.com/reference/intents/inrestaurantguest
INRestaurantGuestDisplayPreferences	A							https://developer.apple.com/reference/intents/inrestaurantguestdisplaypreferences			<section class="prog__container"><p>Contains options about how to display guest information from system interfaces.</p><pre><code>INRestaurantGuestDisplayPreferences</code></pre></section>	https://developer.apple.com/reference/intents/inrestaurantguestdisplaypreferences
INRestaurantGuestResolutionResult	A							https://developer.apple.com/reference/intents/inrestaurantguestresolutionresult			<section class="prog__container"><p>Describes the result of resolving the identity of a user involved in booking a reservation at a restaurant.</p><pre><code>INRestaurantGuestResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/inrestaurantguestresolutionresult
INRestaurantOffer	A							https://developer.apple.com/reference/intents/inrestaurantoffer			<section class="prog__container"><p>Contains information about special offers made by a restaurant.</p><pre><code>INRestaurantOffer</code></pre></section>	https://developer.apple.com/reference/intents/inrestaurantoffer
INRestaurantReservationBooking	A							https://developer.apple.com/reference/intents/inrestaurantreservationbooking			<section class="prog__container"><p>Describes a potential reservation that can be booked by a user. </p><pre><code>INRestaurantReservationBooking</code></pre></section>	https://developer.apple.com/reference/intents/inrestaurantreservationbooking
INRestaurantReservationUserBooking	A							https://developer.apple.com/reference/intents/inrestaurantreservationuserbooking			<section class="prog__container"><p>Describes a reservation that was created by a user. </p><pre><code>INRestaurantReservationUserBooking</code></pre></section>	https://developer.apple.com/reference/intents/inrestaurantreservationuserbooking
INRestaurantResolutionResult	A							https://developer.apple.com/reference/intents/inrestaurantresolutionresult			<section class="prog__container"><p>Describes the result of resolving the restaurant selected by a user.</p><pre><code>INRestaurantResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/inrestaurantresolutionresult
INResumeWorkoutIntent	A							https://developer.apple.com/reference/intents/inresumeworkoutintent			<section class="prog__container"><p>Resumes a paused workout.</p><pre><code>INResumeWorkoutIntent</code></pre></section>	https://developer.apple.com/reference/intents/inresumeworkoutintent
INResumeWorkoutIntentHandling	A							https://developer.apple.com/reference/intents/inresumeworkoutintenthandling			<section class="prog__container"><p>Handles the resumption of a workout. </p><pre><code>INResumeWorkoutIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/inresumeworkoutintenthandling
INResumeWorkoutIntentResponse	A							https://developer.apple.com/reference/intents/inresumeworkoutintentresponse			<section class="prog__container"><p>Contains your app’s response to a resume workout intent.</p><pre><code>INResumeWorkoutIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/inresumeworkoutintentresponse
INRideCompletionStatus	A							https://developer.apple.com/reference/intents/inridecompletionstatus			<section class="prog__container"><p>Provides additional details about whether a ride completed successfully or was canceled. </p><pre><code>INRideCompletionStatus</code></pre></section>	https://developer.apple.com/reference/intents/inridecompletionstatus
INRideDriver	A							https://developer.apple.com/reference/intents/inridedriver			<section class="prog__container"><p>Provides identifying information about a driver of a ride service. </p><pre><code>INRideDriver</code></pre></section>	https://developer.apple.com/reference/intents/inridedriver
INRideFareLineItem	A							https://developer.apple.com/reference/intents/inridefarelineitem			<section class="prog__container"><p>Describes a specific type of ride-related charge. </p><pre><code>INRideFareLineItem</code></pre></section>	https://developer.apple.com/reference/intents/inridefarelineitem
INRideOption	A							https://developer.apple.com/reference/intents/inrideoption			<section class="prog__container"><p>Provides details about a type of ride offered by your ride-booking service.</p><pre><code>INRideOption</code></pre></section>	https://developer.apple.com/reference/intents/inrideoption
INRidePartySizeOption	A							https://developer.apple.com/reference/intents/inridepartysizeoption			<section class="prog__container"><p>Describes the price of a ride involving the specified number of people. </p><pre><code>INRidePartySizeOption</code></pre></section>	https://developer.apple.com/reference/intents/inridepartysizeoption
INRidePhase	A							https://developer.apple.com/reference/intents/inridephase			<section class="prog__container"><p>Constants indicating the current ride status. </p><pre><code>case unknown</code></pre></section>	https://developer.apple.com/reference/intents/inridephase
INRidesharingDomainHandling	A							https://developer.apple.com/reference/intents/inridesharingdomainhandling			<section class="prog__container"><p>Provides a convenient way to adopt all of the protocols in the ride booking domain. </p><pre><code>INRidesharingDomainHandling</code></pre></section>	https://developer.apple.com/reference/intents/inridesharingdomainhandling
INRideStatus	A							https://developer.apple.com/reference/intents/inridestatus			<section class="prog__container"><p>Provides the status of a ride booked through a ride-booking service </p><pre><code>INRideStatus</code></pre></section>	https://developer.apple.com/reference/intents/inridestatus
INRideVehicle	A							https://developer.apple.com/reference/intents/inridevehicle			<section class="prog__container"><p>Describes a specific vehicle used by a ride booking service.</p><pre><code>INRideVehicle</code></pre></section>	https://developer.apple.com/reference/intents/inridevehicle
INSaveProfileInCarIntent	A							https://developer.apple.com/reference/intents/insaveprofileincarintent			<section class="prog__container"><p>Saves the user’s vehicle environment settings in a CarPlay-enabled vehicle. </p><pre><code>INSaveProfileInCarIntent</code></pre></section>	https://developer.apple.com/reference/intents/insaveprofileincarintent
INSaveProfileInCarIntentHandling	A							https://developer.apple.com/reference/intents/insaveprofileincarintenthandling			<section class="prog__container"><p>Handles the saving of vehicle environment settings to a user-specified profile.</p><pre><code>INSaveProfileInCarIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/insaveprofileincarintenthandling
INSaveProfileInCarIntentResponse	A							https://developer.apple.com/reference/intents/insaveprofileincarintentresponse			<section class="prog__container"><p>Contains your app’s response to a save profile in car intent.</p><pre><code>INSaveProfileInCarIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/insaveprofileincarintentresponse
INSearchCallHistoryIntent	A							https://developer.apple.com/reference/intents/insearchcallhistoryintent			<section class="prog__container"><p>Requests a list of calls matching the specified criteria. </p><pre><code>INSearchCallHistoryIntent</code></pre></section>	https://developer.apple.com/reference/intents/insearchcallhistoryintent
INSearchCallHistoryIntentHandling	A							https://developer.apple.com/reference/intents/insearchcallhistoryintenthandling			<section class="prog__container"><p>Handles the searching of the user’s call history.</p><pre><code>INSearchCallHistoryIntent</code></pre></section>	https://developer.apple.com/reference/intents/insearchcallhistoryintenthandling
INSearchCallHistoryIntentResponse	A							https://developer.apple.com/reference/intents/insearchcallhistoryintentresponse			<section class="prog__container"><p>Contains your app’s response to a search call history intent. </p><pre><code>INSearchCallHistoryIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/insearchcallhistoryintentresponse
INSearchForBillsIntent	A							https://developer.apple.com/reference/intents/insearchforbillsintent			<section class="prog__container"><p>Requests a list of bills matching the specified criteria.</p><pre><code>INSearchForBillsIntent</code></pre></section>	https://developer.apple.com/reference/intents/insearchforbillsintent
INSearchForBillsIntentHandling	A							https://developer.apple.com/reference/intents/insearchforbillsintenthandling			<section class="prog__container"><p>Searches for bills associated with the user. </p><pre><code>INSearchForBillsIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/insearchforbillsintenthandling
INSearchForBillsIntentResponse	A							https://developer.apple.com/reference/intents/insearchforbillsintentresponse			<section class="prog__container"><p>Contains your app's response to a search for bills intent.</p><pre><code>INSearchForBillsIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/insearchforbillsintentresponse
INSearchForMessagesIntent	A							https://developer.apple.com/reference/intents/insearchformessagesintent			<section class="prog__container"><p>Requests a list of messages matching the specified criteria.</p><pre><code>INSearchForMessagesIntent</code></pre></section>	https://developer.apple.com/reference/intents/insearchformessagesintent
INSearchForMessagesIntentHandling	A							https://developer.apple.com/reference/intents/insearchformessagesintenthandling			<section class="prog__container"><p>Handles the searching of the current user’s messages.</p><pre><code>INSearchForMessagesIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/insearchformessagesintenthandling
INSearchForMessagesIntentResponse	A							https://developer.apple.com/reference/intents/insearchformessagesintentresponse			<section class="prog__container"><p>Contains your app’s response to a search for messages intent.</p><pre><code>INSearchForMessagesIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/insearchformessagesintentresponse
INSearchForPhotosIntent	A							https://developer.apple.com/reference/intents/insearchforphotosintent			<section class="prog__container"><p>Requests a list of photos that match the specified criteria.</p><pre><code>INSearchForPhotosIntent</code></pre></section>	https://developer.apple.com/reference/intents/insearchforphotosintent
INSearchForPhotosIntentHandling	A							https://developer.apple.com/reference/intents/insearchforphotosintenthandling			<section class="prog__container"><p>Handles the searching of the user’s photos.</p><pre><code>INSearchForPhotosIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/insearchforphotosintenthandling
INSearchForPhotosIntentResponse	A							https://developer.apple.com/reference/intents/insearchforphotosintentresponse			<section class="prog__container"><p>Contains your app’s response to a search for photos intent.</p><pre><code>INSearchForPhotosIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/insearchforphotosintentresponse
INSendMessageIntent	A							https://developer.apple.com/reference/intents/insendmessageintent			<section class="prog__container"><p>Requests the sending of a message to the designated recipients. </p><pre><code>INSendMessageIntent</code></pre></section>	https://developer.apple.com/reference/intents/insendmessageintent
INSendMessageIntentHandling	A							https://developer.apple.com/reference/intents/insendmessageintenthandling			<section class="prog__container"><p>Handles the sending of messages to one or more designated users.</p><pre><code>INSendMessageIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/insendmessageintenthandling
INSendMessageIntentResponse	A							https://developer.apple.com/reference/intents/insendmessageintentresponse			<section class="prog__container"><p>Contains your app’s response to a send message intent.</p><pre><code>INSendMessageIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/insendmessageintentresponse
INSendPaymentIntent	A							https://developer.apple.com/reference/intents/insendpaymentintent			<section class="prog__container"><p>Requests the transfer of money from the current user’s account to a different user’s account. </p><pre><code>INSendPaymentIntent</code></pre></section>	https://developer.apple.com/reference/intents/insendpaymentintent
INSendPaymentIntentHandling	A							https://developer.apple.com/reference/intents/insendpaymentintenthandling			<section class="prog__container"><p>Handles the transfer of money from the current user’s account to a different user’s account.</p><pre><code>INSendPaymentIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/insendpaymentintenthandling
INSendPaymentIntentResponse	A							https://developer.apple.com/reference/intents/insendpaymentintentresponse			<section class="prog__container"><p>Contains your app’s response to a send payment intent.</p><pre><code>INSendPaymentIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/insendpaymentintentresponse
INSetAudioSourceInCarIntent	A							https://developer.apple.com/reference/intents/insetaudiosourceincarintent			<section class="prog__container"><p>Changes the source of audio playback in a CarPlay-enabled vehicle. </p><pre><code>INSetAudioSourceInCarIntent</code></pre></section>	https://developer.apple.com/reference/intents/insetaudiosourceincarintent
INSetAudioSourceInCarIntentHandling	A							https://developer.apple.com/reference/intents/insetaudiosourceincarintenthandling			<section class="prog__container"><p>Handles the changing of a vehicle’s audio source.</p><pre><code>INSetAudioSourceInCarIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/insetaudiosourceincarintenthandling
INSetAudioSourceInCarIntentResponse	A							https://developer.apple.com/reference/intents/insetaudiosourceincarintentresponse			<section class="prog__container"><p>Contains your app’s response to a set audio source in car intent.</p><pre><code>INSetAudioSourceInCarIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/insetaudiosourceincarintentresponse
INSetClimateSettingsInCarIntent	A							https://developer.apple.com/reference/intents/insetclimatesettingsincarintent			<section class="prog__container"><p>Changes the climate settings in a CarPlay-enabled vehicle. </p><pre><code>INSetClimateSettingsInCarIntent</code></pre></section>	https://developer.apple.com/reference/intents/insetclimatesettingsincarintent
INSetClimateSettingsInCarIntentHandling	A							https://developer.apple.com/reference/intents/insetclimatesettingsincarintenthandling			<section class="prog__container"><p>Handles the changing of a vehicle’s climate control settings.</p><pre><code>INSetClimateSettingsInCarIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/insetclimatesettingsincarintenthandling
INSetClimateSettingsInCarIntentResponse	A							https://developer.apple.com/reference/intents/insetclimatesettingsincarintentresponse			<section class="prog__container"><p>Contains your app’s response to a set climate settings in car intent.</p><pre><code>INSetClimateSettingsInCarIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/insetclimatesettingsincarintentresponse
INSetDefrosterSettingsInCarIntent	A							https://developer.apple.com/reference/intents/insetdefrostersettingsincarintent			<section class="prog__container"><p>Changes the defroster settings in a CarPlay-enabled vehicle. </p><pre><code>INSetDefrosterSettingsInCarIntent</code></pre></section>	https://developer.apple.com/reference/intents/insetdefrostersettingsincarintent
INSetDefrosterSettingsInCarIntentHandling	A							https://developer.apple.com/reference/intents/insetdefrostersettingsincarintenthandling			<section class="prog__container"><p>Handles the changing of a vehicle’s defroster settings.</p><pre><code>INSetDefrosterSettingsInCarIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/insetdefrostersettingsincarintenthandling
INSetDefrosterSettingsInCarIntentResponse	A							https://developer.apple.com/reference/intents/insetdefrostersettingsincarintentresponse			<section class="prog__container"><p>Contains your app’s response to a set defroster settings in car intent.</p><pre><code>INSetDefrosterSettingsInCarIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/insetdefrostersettingsincarintentresponse
INSetMessageAttributeIntent	A							https://developer.apple.com/reference/intents/insetmessageattributeintent			<section class="prog__container"><p>Requests that you modify the attributes of a message. </p><pre><code>INSetMessageAttributeIntent</code></pre></section>	https://developer.apple.com/reference/intents/insetmessageattributeintent
INSetMessageAttributeIntentHandling	A							https://developer.apple.com/reference/intents/insetmessageattributeintenthandling			<section class="prog__container"><p>Handles the modification of message attributes.</p><pre><code>INSetMessageAttributeIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/insetmessageattributeintenthandling
INSetMessageAttributeIntentResponse	A							https://developer.apple.com/reference/intents/insetmessageattributeintentresponse			<section class="prog__container"><p>Contains your app’s response to a set message attribute intent.</p><pre><code>INSetMessageAttributeIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/insetmessageattributeintentresponse
INSetProfileInCarIntent	A							https://developer.apple.com/reference/intents/insetprofileincarintent			<section class="prog__container"><p>Changes the user’s vehicle environment settings to the ones from the specified profile.</p><pre><code>INSetProfileInCarIntent</code></pre></section>	https://developer.apple.com/reference/intents/insetprofileincarintent
INSetProfileInCarIntentHandling	A							https://developer.apple.com/reference/intents/insetprofileincarintenthandling			<section class="prog__container"><p>Handles the restoration of vehicle environment settings from a user-specified profile.</p><pre><code>INSetProfileInCarIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/insetprofileincarintenthandling
INSetProfileInCarIntentResponse	A							https://developer.apple.com/reference/intents/insetprofileincarintentresponse			<section class="prog__container"><p>Contains your app’s response to a set profile in car intent.</p><pre><code>INSetProfileInCarIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/insetprofileincarintentresponse
INSetRadioStationIntent	A							https://developer.apple.com/reference/intents/insetradiostationintent			<section class="prog__container"><p>Changes the current radio station. </p><pre><code>INSetRadioStationIntent</code></pre></section>	https://developer.apple.com/reference/intents/insetradiostationintent
INSetRadioStationIntentHandling	A							https://developer.apple.com/reference/intents/insetradiostationintenthandling			<section class="prog__container"><p>Handles the changing of a radio station.</p><pre><code>INSetRadioStationIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/insetradiostationintenthandling
INSetRadioStationIntentResponse	A							https://developer.apple.com/reference/intents/insetradiostationintentresponse			<section class="prog__container"><p>Contains your app’s response to a set radio station intent.</p><pre><code>INSetRadioStationIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/insetradiostationintentresponse
INSetSeatSettingsInCarIntent	A							https://developer.apple.com/reference/intents/insetseatsettingsincarintent			<section class="prog__container"><p>Changes the seat-related settings in a CarPlay-enabled vehicle. </p><pre><code>INSetSeatSettingsInCarIntent</code></pre></section>	https://developer.apple.com/reference/intents/insetseatsettingsincarintent
INSetSeatSettingsInCarIntentHandling	A							https://developer.apple.com/reference/intents/insetseatsettingsincarintenthandling			<section class="prog__container"><p>Handles the changing of a vehicle’s seat-related settings.</p><pre><code>INSetSeatSettingsInCarIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/insetseatsettingsincarintenthandling
INSetSeatSettingsInCarIntentResponse	A							https://developer.apple.com/reference/intents/insetseatsettingsincarintentresponse			<section class="prog__container"><p>Contains your app’s response to a set seat settings in car intent.</p><pre><code>INSetSeatSettingsInCarIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/insetseatsettingsincarintentresponse
INSiriAuthorizationStatus	A							https://developer.apple.com/reference/intents/insiriauthorizationstatus			<section class="prog__container"><p>Constants indicating the authorization status of your Intents extension.</p><pre><code>case notDetermined</code></pre></section>	https://developer.apple.com/reference/intents/insiriauthorizationstatus
INSpeakable	A							https://developer.apple.com/reference/intents/inspeakable			<section class="prog__container"><p>Provides pronunciation hints for strings used in a spoken interface. </p><pre><code>INSpeakable</code></pre></section>	https://developer.apple.com/reference/intents/inspeakable
INSpeakableString	A							https://developer.apple.com/reference/intents/inspeakablestring			<section class="prog__container"><p>Represents a custom phrase to be resolved by an Intents extension.</p><pre><code>AppIntentVocabulary.plist</code></pre></section>	https://developer.apple.com/reference/intents/inspeakablestring
INSpeakableStringResolutionResult	A							https://developer.apple.com/reference/intents/inspeakablestringresolutionresult			<section class="prog__container"><p>Describes the result of resolving a speakable string object associated with an intent.</p><pre><code>INSpeakableStringResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/inspeakablestringresolutionresult
INStartAudioCallIntent	A							https://developer.apple.com/reference/intents/instartaudiocallintent			<section class="prog__container"><p>Requests an audio-only call with one or more users. </p><pre><code>INStartAudioCallIntent</code></pre></section>	https://developer.apple.com/reference/intents/instartaudiocallintent
INStartAudioCallIntentHandling	A							https://developer.apple.com/reference/intents/instartaudiocallintenthandling			<section class="prog__container"><p>Handles the initiation of an audio call by your app.</p><pre><code>INStartAudioCallIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/instartaudiocallintenthandling
INStartAudioCallIntentResponse	A							https://developer.apple.com/reference/intents/instartaudiocallintentresponse			<section class="prog__container"><p>Contains your app’s response to a start audio call intent. </p><pre><code>INStartAudioCallIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/instartaudiocallintentresponse
INStartPhotoPlaybackIntent	A							https://developer.apple.com/reference/intents/instartphotoplaybackintent			<section class="prog__container"><p>Requests a search for photos and the initiation of a slideshow containing the results. </p><pre><code>INStartPhotoPlaybackIntent</code></pre></section>	https://developer.apple.com/reference/intents/instartphotoplaybackintent
INStartPhotoPlaybackIntentHandling	A							https://developer.apple.com/reference/intents/instartphotoplaybackintenthandling			<section class="prog__container"><p>Handles the searching of the user’s photos and the playback of the results.</p><pre><code>INStartPhotoPlaybackIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/instartphotoplaybackintenthandling
INStartPhotoPlaybackIntentResponse	A							https://developer.apple.com/reference/intents/instartphotoplaybackintentresponse			<section class="prog__container"><p>Contains your app’s response to a start photo playback intent.</p><pre><code>INStartPhotoPlaybackIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/instartphotoplaybackintentresponse
INStartVideoCallIntent	A							https://developer.apple.com/reference/intents/instartvideocallintent			<section class="prog__container"><p>Requests a video call with one or more users. </p><pre><code>INStartVideoCallIntent</code></pre></section>	https://developer.apple.com/reference/intents/instartvideocallintent
INStartVideoCallIntentHandling	A							https://developer.apple.com/reference/intents/instartvideocallintenthandling			<section class="prog__container"><p>Handles the initiation of a video call by your app.</p><pre><code>INStartVideoCallIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/instartvideocallintenthandling
INStartVideoCallIntentResponse	A							https://developer.apple.com/reference/intents/instartvideocallintentresponse			<section class="prog__container"><p>Contains your app’s response to a start video call intent. </p><pre><code>INStartVideoCallIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/instartvideocallintentresponse
INStartWorkoutIntent	A							https://developer.apple.com/reference/intents/instartworkoutintent			<section class="prog__container"><p>Starts a workout for the user.</p><pre><code>INStartWorkoutIntent</code></pre></section>	https://developer.apple.com/reference/intents/instartworkoutintent
INStartWorkoutIntentHandling	A							https://developer.apple.com/reference/intents/instartworkoutintenthandling			<section class="prog__container"><p>Handles the starting of a workout. </p><pre><code>INStartWorkoutIntentHandling</code></pre></section>	https://developer.apple.com/reference/intents/instartworkoutintenthandling
INStartWorkoutIntentResponse	A							https://developer.apple.com/reference/intents/instartworkoutintentresponse			<section class="prog__container"><p>Contains your app’s response to a start workout intent.</p><pre><code>INStartWorkoutIntentResponse</code></pre></section>	https://developer.apple.com/reference/intents/instartworkoutintentresponse
INStringResolutionResult	A							https://developer.apple.com/reference/intents/instringresolutionresult			<section class="prog__container"><p>Describes the result of resolving a string value associated with an intent.</p><pre><code>INStringResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/instringresolutionresult
INTemperatureResolutionResult	A							https://developer.apple.com/reference/intents/intemperatureresolutionresult			<section class="prog__container"><p>Describes the result of resolving a temperature value to the correct units.</p><pre><code>INTemperatureResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/intemperatureresolutionresult
Intent Class Identifiers	A							https://developer.apple.com/reference/intents/intent_class_identifiers			<section class="prog__container"><p>Constants for identifying the type of intent that was specified.</p><pre><code>let INStartAudioCallIntentIdentifier: String</code></pre></section>	https://developer.apple.com/reference/intents/intent_class_identifiers
INTermsAndConditions	A							https://developer.apple.com/reference/intents/intermsandconditions			<section class="prog__container"><p>Informs the user about the terms and conditions of service when making restaurant reservations.</p><pre><code>INTermsAndConditions</code></pre></section>	https://developer.apple.com/reference/intents/intermsandconditions
INVocabulary	A							https://developer.apple.com/reference/intents/invocabulary			<section class="prog__container"><p>Registers any user-specific vocabulary that might be included in Siri requests. </p><pre><code>INVocabulary</code></pre></section>	https://developer.apple.com/reference/intents/invocabulary
INWorkoutGoalUnitType	A							https://developer.apple.com/reference/intents/inworkoutgoalunittype			<section class="prog__container"><p>Constants describing the unit of measure for a workout.</p><pre><code>case unknown</code></pre></section>	https://developer.apple.com/reference/intents/inworkoutgoalunittype
INWorkoutGoalUnitTypeResolutionResult	A							https://developer.apple.com/reference/intents/inworkoutgoalunittyperesolutionresult			<section class="prog__container"><p>Describes the result of resolving the units for a workout goal.</p><pre><code>INWorkoutGoalUnitTypeResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/inworkoutgoalunittyperesolutionresult
INWorkoutLocationType	A							https://developer.apple.com/reference/intents/inworkoutlocationtype			<section class="prog__container"><p>Constants describing the location of a workout.</p><pre><code>case unknown</code></pre></section>	https://developer.apple.com/reference/intents/inworkoutlocationtype
INWorkoutLocationTypeResolutionResult	A							https://developer.apple.com/reference/intents/inworkoutlocationtyperesolutionresult			<section class="prog__container"><p>Describes the result of resolving the location type of a workout.</p><pre><code>INWorkoutLocationTypeResolutionResult</code></pre></section>	https://developer.apple.com/reference/intents/inworkoutlocationtyperesolutionresult
INWorkoutNameIdentifier	A							https://developer.apple.com/reference/intents/inworkoutnameidentifier			<section class="prog__container"><p>Constants indicating the type of workout.</p><pre><code>init(rawValue: String)</code></pre></section>	https://developer.apple.com/reference/intents/inworkoutnameidentifier
INWorkoutsDomainHandling	A							https://developer.apple.com/reference/intents/inworkoutsdomainhandling			<section class="prog__container"><p>Provides a convenient way to adopt all of the protocols in the workouts domain.</p><pre><code>INWorkoutsDomainHandling</code></pre></section>	https://developer.apple.com/reference/intents/inworkoutsdomainhandling
INUIHostedViewControlling	A							https://developer.apple.com/reference/intentsui/inuihostedviewcontrolling			<section class="prog__container"><p>Supports the presentation of custom content in the Siri and Maps interfaces. </p><pre><code>INUIHostedViewControlling</code></pre></section>	https://developer.apple.com/reference/intentsui/inuihostedviewcontrolling
INUIHostedViewSiriProviding	A							https://developer.apple.com/reference/intentsui/inuihostedviewsiriproviding			<section class="prog__container"><p>Supports the removal of the default interfaces that Siri provide for your content. </p><pre><code>INUIHostedViewSiriProviding</code></pre></section>	https://developer.apple.com/reference/intentsui/inuihostedviewsiriproviding
IOBluetoothDevice	A							https://developer.apple.com/reference/iobluetooth/iobluetoothdevice			<section class="prog__container"><p>An instance of IOBluetoothDevice represents a single remote Bluetooth device.</p><pre><code>func addToFavorites()</code></pre></section>	https://developer.apple.com/reference/iobluetooth/iobluetoothdevice
IOBluetoothDeviceInquiry	A							https://developer.apple.com/reference/iobluetooth/iobluetoothdeviceinquiry			<section class="prog__container"><p>Object representing a device inquiry that finds Bluetooth devices in-range of the computer, and (optionally) retrieves name information for them.</p><pre><code>func clearFoundDevices()</code></pre></section>	https://developer.apple.com/reference/iobluetooth/iobluetoothdeviceinquiry
IOBluetoothDeviceInquiryDelegate	A							https://developer.apple.com/reference/iobluetooth/iobluetoothdeviceinquirydelegate			<section class="prog__container"><p>This category on NSObject describes the delegate methods for the IOBluetoothDeviceInquiry object. All methods are optional, but it is highly recommended you implement them all. Do NOT invoke remote name requests on found IOBluetoothDevice objects unless the inquiry object has been stopped. Doing so may deadlock your process.</p><pre><code>func deviceInquiryComplete(IOBluetoothDeviceInquiry!, error: IOReturn, aborted: Bool)</code></pre></section>	https://developer.apple.com/reference/iobluetooth/iobluetoothdeviceinquirydelegate
IOBluetoothDevicePair	A							https://developer.apple.com/reference/iobluetooth/iobluetoothdevicepair			<section class="prog__container"><p>An instance of IOBluetoothDevicePair represents a pairing attempt to a remote Bluetooth device.</p><pre><code>func device()</code></pre></section>	https://developer.apple.com/reference/iobluetooth/iobluetoothdevicepair
IOBluetoothHandsFree	A							https://developer.apple.com/reference/iobluetooth/iobluetoothhandsfree			<section class="prog__container"><p>Hands free profile class.</p><pre><code>func connect()</code></pre></section>	https://developer.apple.com/reference/iobluetooth/iobluetoothhandsfree
IOBluetoothHostController	A							https://developer.apple.com/reference/iobluetooth/iobluetoothhostcontroller			<section class="prog__container"><p>This class is a representation of a Bluetooth Host Controller Interface that is present on the local computer (either plugged in externally or available internally).</p><pre><code>func addressAsString()</code></pre></section>	https://developer.apple.com/reference/iobluetooth/iobluetoothhostcontroller
IOBluetoothHostControllerDelegate	A							https://developer.apple.com/reference/iobluetooth/iobluetoothhostcontrollerdelegate			<section class="prog__container"><p>This category on NSObject describes the delegate methods for the IOBluetoothHostController object. All methods are optional, but it is highly recommended you implement them all. Do NOT invoke remote name requests on found IOBluetoothDevice objects unless the controller object has been stopped. Doing so may deadlock your process.</p><pre><code>func readLinkQuality(forDeviceComplete: Any!, device: IOBluetoothDevice!, info: UnsafeMutablePointer<BluetoothHCILinkQualityInfo>!, error: IOReturn)</code></pre></section>	https://developer.apple.com/reference/iobluetooth/iobluetoothhostcontrollerdelegate
IOBluetoothL2CAPChannel	A							https://developer.apple.com/reference/iobluetooth/iobluetoothl2capchannel			<section class="prog__container"><p>An instance of IOBluetoothL2CAPChannel represents a single open L2CAP channel.</p><pre><code>func close()</code></pre></section>	https://developer.apple.com/reference/iobluetooth/iobluetoothl2capchannel
IOBluetoothOBEXSession	A							https://developer.apple.com/reference/iobluetooth/iobluetoothobexsession			<section class="prog__container"><p>An OBEX Session with a Bluetooth RFCOMM channel as the transport.</p><pre><code>func closeTransportConnection()</code></pre></section>	https://developer.apple.com/reference/iobluetooth/iobluetoothobexsession
IOBluetoothRFCOMMChannel	A							https://developer.apple.com/reference/iobluetooth/iobluetoothrfcommchannel			<section class="prog__container"><p>An instance of this class represents an rfcomm channel as defined by the Bluetooth SDP spec..</p><pre><code>func close()</code></pre></section>	https://developer.apple.com/reference/iobluetooth/iobluetoothrfcommchannel
IOBluetoothSDPDataElement	A							https://developer.apple.com/reference/iobluetooth/iobluetoothsdpdataelement			<section class="prog__container"><p>An instance of this class represents a single SDP data element as defined by the Bluetooth SDP spec.</p><pre><code>func contains(IOBluetoothSDPDataElement!)</code></pre></section>	https://developer.apple.com/reference/iobluetooth/iobluetoothsdpdataelement
IOBluetoothSDPServiceAttribute	A							https://developer.apple.com/reference/iobluetooth/iobluetoothsdpserviceattribute			<section class="prog__container"><p>IOBluetoothSDPServiceAttribute represents a single SDP service attribute.</p><pre><code>func getID()</code></pre></section>	https://developer.apple.com/reference/iobluetooth/iobluetoothsdpserviceattribute
IOBluetoothSDPServiceRecord	A							https://developer.apple.com/reference/iobluetooth/iobluetoothsdpservicerecord			<section class="prog__container"><p>An instance of this class represents a single SDP service record.</p><pre><code>func getAttributeDataElement(BluetoothSDPServiceAttributeID)</code></pre></section>	https://developer.apple.com/reference/iobluetooth/iobluetoothsdpservicerecord
IOBluetoothSDPUUID	A							https://developer.apple.com/reference/iobluetooth/iobluetoothsdpuuid			<section class="prog__container"><p>An NSData subclass that represents a UUID as defined in the Bluetooth SDP spec.</p><pre><code>func getWithLength(UInt32)</code></pre></section>	https://developer.apple.com/reference/iobluetooth/iobluetoothsdpuuid
IOBluetoothUserLib.h	A							https://developer.apple.com/reference/iobluetooth/iobluetoothuserlib.h			<section class="prog__container"><p>Public Interfaces for Apple's implementation of Bluetooth technology.</p><pre><code>func IOBluetoothDeviceRegisterForDisconnectNotification(IOBluetoothDeviceRef!, IOBluetoothUserNotificationCallback!, UnsafeMutableRawPointer!)</code></pre></section>	https://developer.apple.com/reference/iobluetooth/iobluetoothuserlib.h
IOBluetoothUserNotification	A							https://developer.apple.com/reference/iobluetooth/iobluetoothusernotification			<section class="prog__container"><p>Represents a registered notification.</p><pre><code>func unregister()</code></pre></section>	https://developer.apple.com/reference/iobluetooth/iobluetoothusernotification
IOBluetoothUtilities.h	A							https://developer.apple.com/reference/iobluetooth/iobluetoothutilities.h			<section class="prog__container"><p></p><pre><code>func IOBluetoothFindNumberOfRegistryEntriesOfClassName(UnsafePointer<Int8>!)</code></pre></section>	https://developer.apple.com/reference/iobluetooth/iobluetoothutilities.h
OBEX.h	A							https://developer.apple.com/reference/iobluetooth/obex.h			<section class="prog__container"><p>Public OBEX technology interfaces.</p><pre><code>func OBEXAddApplicationParameterHeader(UnsafeRawPointer!, UInt32, CFMutableDictionary!)</code></pre></section>	https://developer.apple.com/reference/iobluetooth/obex.h
OBEXFileTransferServices	A							https://developer.apple.com/reference/iobluetooth/obexfiletransferservices			<section class="prog__container"><p>Implements advanced OBEX operations in addition to simple PUT and GET.</p><pre><code>func abort()</code></pre></section>	https://developer.apple.com/reference/iobluetooth/obexfiletransferservices
OBEXFileTransferServices.h	A							https://developer.apple.com/reference/iobluetooth/obexfiletransferservices.h			<section class="prog__container"><p></p></section>	https://developer.apple.com/reference/iobluetooth/obexfiletransferservices.h
OBEXSession	A							https://developer.apple.com/reference/iobluetooth/obexsession			<section class="prog__container"><p>Object representing an OBEX connection to a remote target.</p><pre><code>func clientHandleIncomingData(UnsafeMutablePointer<OBEXTransportEvent>!)</code></pre></section>	https://developer.apple.com/reference/iobluetooth/obexsession
IOBluetoothDeviceSelectorController	A							https://developer.apple.com/reference/iobluetoothui/iobluetoothdeviceselectorcontroller			<section class="prog__container"><p>A NSWindowController subclass to display a window to initiate pairing to other bluetooth devices.</p><pre><code>func addAllowedUUID(IOBluetoothSDPUUID!)</code></pre></section>	https://developer.apple.com/reference/iobluetoothui/iobluetoothdeviceselectorcontroller
IOBluetoothObjectPushUIController	A							https://developer.apple.com/reference/iobluetoothui/iobluetoothobjectpushuicontroller			<section class="prog__container"><p>An NSWindowController subclass that supports the creation of an IOBluetoothObjectPushUIController object.</p><pre><code>func beginSheetModal(for: NSWindow!, modalDelegate: Any!, didEnd: Selector!, contextInfo: UnsafeMutableRawPointer!)</code></pre></section>	https://developer.apple.com/reference/iobluetoothui/iobluetoothobjectpushuicontroller
IOBluetoothPairingController	A							https://developer.apple.com/reference/iobluetoothui/iobluetoothpairingcontroller			<section class="prog__container"><p>A NSWindowController subclass to display a window to initiate pairing to other bluetooth devices.</p><pre><code>func addAllowedUUID(IOBluetoothSDPUUID!)</code></pre></section>	https://developer.apple.com/reference/iobluetoothui/iobluetoothpairingcontroller
IOBluetoothServiceBrowserController	A							https://developer.apple.com/reference/iobluetoothui/iobluetoothservicebrowsercontroller			<section class="prog__container"><p>A NSWindowController subclass to display a window to search for and perform SDP queries on bluetooth devices within range.</p><pre><code>func addAllowedUUID(IOBluetoothSDPUUID!)</code></pre></section>	https://developer.apple.com/reference/iobluetoothui/iobluetoothservicebrowsercontroller
IOBluetoothUIUserLib.h	A							https://developer.apple.com/reference/iobluetoothui/iobluetoothuiuserlib.h			<section class="prog__container"><p></p><pre><code>IOBluetoothServiceBrowserControllerOptions</code></pre></section>	https://developer.apple.com/reference/iobluetoothui/iobluetoothuiuserlib.h
IODataQueueClient.h	A							https://developer.apple.com/reference/iokit/iodataqueueclient.h			<section class="prog__container"><p></p><pre><code>func IODataQueueAllocateNotificationPort()</code></pre></section>	https://developer.apple.com/reference/iokit/iodataqueueclient.h
IOKitLib.h	A							https://developer.apple.com/reference/iokit/iokitlib.h			<section class="prog__container"><p></p><pre><code>func IOBSDNameMatching(mach_port_t, UInt32, UnsafePointer<Int8>!)</code></pre></section>	https://developer.apple.com/reference/iokit/iokitlib.h
IOTypes.h User-Space	A							https://developer.apple.com/reference/iokit/iotypes.h_user_space			<section class="prog__container"><p></p></section>	https://developer.apple.com/reference/iokit/iotypes.h_user_space
IOSurfaceAPI.h	A							https://developer.apple.com/reference/iosurface/iosurfaceapi.h			<section class="prog__container"><p>The IOSurfaceAPI header contains the public API for the IOSurface framework. The IOSurface framework provides a framebuffer object suitable for sharing across process boundaries. It is commonly used to allow applications to move complex image decompression and draw logic into a separate process to enhance security.</p><pre><code><IOSurface/IOSurface.h></code></pre></section>	https://developer.apple.com/reference/iosurface/iosurfaceapi.h
ITLibAlbum	A							https://developer.apple.com/reference/ituneslibrary/itlibalbum?language=objc			<section class="prog__container"><p>The ITLibAlbum class provides information about an album in the iTunes library. Each track associated with the album is represented as an ITLibMediaItem in this framework.</p><pre><code>ITLibAlbum</code></pre></section>	https://developer.apple.com/reference/ituneslibrary/itlibalbum?language=objc
ITLibArtist	A							https://developer.apple.com/reference/ituneslibrary/itlibartist?language=objc			<section class="prog__container"><p>The ITLibArtist class represents an artist such as the performer of a song.</p><pre><code>ITLibArtist</code></pre></section>	https://developer.apple.com/reference/ituneslibrary/itlibartist?language=objc
ITLibArtwork	A							https://developer.apple.com/reference/ituneslibrary/itlibartwork?language=objc			<section class="prog__container"><p>The ITLibArtwork class represents the artwork attached to a track (media item).</p><pre><code>ITLibArtwork</code></pre></section>	https://developer.apple.com/reference/ituneslibrary/itlibartwork?language=objc
ITLibMediaEntity	A							https://developer.apple.com/reference/ituneslibrary/itlibmediaentity?language=objc			<section class="prog__container"><p>The ITLibMediaEntity class describes a media entity which can be a media item such as an audio track (see ITLibMediaItem) or a playlist (see ITLibPlaylist). Each media entity has a persistent unique ID assigned by iTunes and a set of properties.</p><pre><code>ITLibMediaEntity</code></pre></section>	https://developer.apple.com/reference/ituneslibrary/itlibmediaentity?language=objc
ITLibMediaItem	A							https://developer.apple.com/reference/ituneslibrary/itlibmediaitem?language=objc			<section class="prog__container"><p>The ITLibMediaItem class describes a media item (a track) in the iTunes library such as a song, a video, or a podcast. Like all media entities, each media item has a unique identifier and a set of properties. </p><pre><code>ITLibMediaItem</code></pre></section>	https://developer.apple.com/reference/ituneslibrary/itlibmediaitem?language=objc
ITLibMediaItemVideoInfo	A							https://developer.apple.com/reference/ituneslibrary/itlibmediaitemvideoinfo?language=objc			<section class="prog__container"><p>The ITLibMediaItemVideoInfo class encapsulates the video information of a video media item. Video media items include TV shows, movies, video podcasts, etc.</p><pre><code>- videoWidth</code></pre></section>	https://developer.apple.com/reference/ituneslibrary/itlibmediaitemvideoinfo?language=objc
ITLibPlaylist	A							https://developer.apple.com/reference/ituneslibrary/itlibplaylist?language=objc			<section class="prog__container"><p>The ITLibPlaylist class describes a playlist in the iTunes library. A playlist is a collection of media items (tracks). Playlists may be created and organized manually by the user or automatically generated by iTunes. Playlists are modeled as media entities. Each contains a unique identifier and a set of properties. Playlists may form a hierarchical structure. In those cases, the parentID property of ITLibPlaylist returns the persistent ID of the parent playlist.</p><pre><code>ITLibPlaylist</code></pre></section>	https://developer.apple.com/reference/ituneslibrary/itlibplaylist?language=objc
ITLibrary	A							https://developer.apple.com/reference/ituneslibrary/itlibrary?language=objc			<section class="prog__container"><p>The ITLibrary class serves as the entry point to the iTunesLibrary framework. The properties and methods of ITLibrary may be used to retrieve media items (tracks) and playlists from the user's iTunes library. ITLibrary also provides methods for extracting artwork from a media file that may or may not be in the iTunes library. This functionality is provided to sandboxed and non-sandboxed applications wanting to re-use iTunes' ability to extract artwork.</p><pre><code>ITLibrary</code></pre></section>	https://developer.apple.com/reference/ituneslibrary/itlibrary?language=objc
JSBase.h	A							https://developer.apple.com/reference/javascriptcore/jsbase.h			<section class="prog__container"><p>Defines the JavaScriptCore interface engine</p><pre><code>func JSCheckScriptSyntax(JSContextRef!, JSStringRef!, JSStringRef!, Int32, UnsafeMutablePointer<JSValueRef?>!)</code></pre></section>	https://developer.apple.com/reference/javascriptcore/jsbase.h
JSContext	A							https://developer.apple.com/reference/javascriptcore/jscontext			<section class="prog__container"><p>A JSContext object represents a JavaScript execution environment. You create and use JavaScript contexts to evaluate JavaScript scripts from Objective-C or Swift code, to access values defined in or calculated in JavaScript, and to make native objects, methods, or functions accessible to JavaScript.</p><pre><code>JSContext</code></pre></section>	https://developer.apple.com/reference/javascriptcore/jscontext
JSContextRef.h	A							https://developer.apple.com/reference/javascriptcore/jscontextref.h			<section class="prog__container"><p></p><pre><code>func JSContextGetGlobalObject(JSContextRef!)</code></pre></section>	https://developer.apple.com/reference/javascriptcore/jscontextref.h
JSExport	A							https://developer.apple.com/reference/javascriptcore/jsexport			<section class="prog__container"><p>The protocol you implement to export Objective-C classes and their instance methods, class methods, and properties to JavaScript code.</p><pre><code>JSValue</code></pre></section>	https://developer.apple.com/reference/javascriptcore/jsexport
JSManagedValue	A							https://developer.apple.com/reference/javascriptcore/jsmanagedvalue			<section class="prog__container"><p>A JSManagedValue object wraps a JSValue object, adding “conditional retain” behavior to provide automatic memory management of values. The primary use case for a managed value is to store a JavaScript value in an Objective-C or Swift object that is itself exported to JavaScript.</p><pre><code>JSManagedValue</code></pre></section>	https://developer.apple.com/reference/javascriptcore/jsmanagedvalue
JSObjectRef.h	A							https://developer.apple.com/reference/javascriptcore/jsobjectref.h			<section class="prog__container"><p>A JavaScript Object</p><pre><code>func JSClassCreate(UnsafePointer<JSClassDefinition>!)</code></pre></section>	https://developer.apple.com/reference/javascriptcore/jsobjectref.h
JSStringRef.h	A							https://developer.apple.com/reference/javascriptcore/jsstringref.h			<section class="prog__container"><p>A UTF16 character buffer that is the fundamental string representation in JavaScript.</p><pre><code>func JSStringCreateWithCharacters(UnsafePointer<JSChar>!, Int)</code></pre></section>	https://developer.apple.com/reference/javascriptcore/jsstringref.h
JSStringRefCF.h	A							https://developer.apple.com/reference/javascriptcore/jsstringrefcf.h			<section class="prog__container"><p>Contains CFString convenience methods.</p><pre><code>func JSStringCopyCFString(CFAllocator!, JSStringRef!)</code></pre></section>	https://developer.apple.com/reference/javascriptcore/jsstringrefcf.h
JSValue	A							https://developer.apple.com/reference/javascriptcore/jsvalue			<section class="prog__container"><p>A JSValue instance is a reference to a JavaScript value. You use the JSValue class to convert basic values (such as numbers and strings) between JavaScript and Objective-C or Swift representations in order to pass data between native code and JavaScript code. You can also use this class to create JavaScript objects that wrap native objects of custom classes or JavaScript functions whose implementations are provided by native methods or blocks.</p><pre><code>JSValue</code></pre></section>	https://developer.apple.com/reference/javascriptcore/jsvalue
JSValueRef.h	A							https://developer.apple.com/reference/javascriptcore/jsvalueref.h			<section class="prog__container"><p>A JavaScript value that is the base type for all JavaScript values and the polymorphic functions on them.</p><pre><code>func JSValueCreateJSONString(JSContextRef!, JSValueRef!, UInt32, UnsafeMutablePointer<JSValueRef?>!)</code></pre></section>	https://developer.apple.com/reference/javascriptcore/jsvalueref.h
JSVirtualMachine	A							https://developer.apple.com/reference/javascriptcore/jsvirtualmachine			<section class="prog__container"><p>A JSVirtualMachine instance represents a self-contained environment for JavaScript execution. You use this class for two main purposes: to support concurrent JavaScript execution, and to manage memory for objects bridged between JavaScript and Objective-C or Swift.</p><pre><code>JSVirtualMachine</code></pre></section>	https://developer.apple.com/reference/javascriptcore/jsvirtualmachine
ATADeviceNub	A							https://developer.apple.com/reference/kernel/atadevicenub?language=objc			<section class="prog__container"><p>ATADeviceNub is a concrete implementation of IOATADevice.</p><pre><code>- allocCommand</code></pre></section>	https://developer.apple.com/reference/kernel/atadevicenub?language=objc
ATATimerEventSource	A							https://developer.apple.com/reference/kernel/atatimereventsource?language=objc			<section class="prog__container"><p>Extend the timer event source to allow checking for timer expiration from behind the workloop.</p><pre><code>- ataTimerEventSource</code></pre></section>	https://developer.apple.com/reference/kernel/atatimereventsource?language=objc
Bluetooth.h	A							https://developer.apple.com/reference/kernel/bluetooth.h?language=objc			<section class="prog__container"><p>Bluetooth wireless technology</p></section>	https://developer.apple.com/reference/kernel/bluetooth.h?language=objc
bpf.h	A							https://developer.apple.com/reference/kernel/bpf.h?language=objc			<section class="prog__container"><p></p><pre><code>bpf_attach</code></pre></section>	https://developer.apple.com/reference/kernel/bpf.h?language=objc
buf.h	A							https://developer.apple.com/reference/kernel/buf.h?language=objc			<section class="prog__container"><p></p><pre><code>buf_alloc</code></pre></section>	https://developer.apple.com/reference/kernel/buf.h?language=objc
in_arp.h	A							https://developer.apple.com/reference/kernel/in_arp.h?language=objc			<section class="prog__container"><p></p><pre><code>inet_arp_handle_input</code></pre></section>	https://developer.apple.com/reference/kernel/in_arp.h?language=objc
init.h	A							https://developer.apple.com/reference/kernel/init.h?language=objc			<section class="prog__container"><p>This header defines an API to register a function that will be called when the network stack is being initialized. This gives a kernel extensions an opportunity to install filters before sockets are created and network operations occur.</p><pre><code>net_init_add</code></pre></section>	https://developer.apple.com/reference/kernel/init.h?language=objc
IOAGPDevice	A							https://developer.apple.com/reference/kernel/ioagpdevice?language=objc			<section class="prog__container"><p>An IOService class representing an AGP master device.</p><pre><code>- commitAGPMemory</code></pre></section>	https://developer.apple.com/reference/kernel/ioagpdevice?language=objc
IOATABusCommand	A							https://developer.apple.com/reference/kernel/ioatabuscommand?language=objc			<section class="prog__container"><p></p><pre><code>- allocateCmd</code></pre></section>	https://developer.apple.com/reference/kernel/ioatabuscommand?language=objc
IOATABusInfo	A							https://developer.apple.com/reference/kernel/ioatabusinfo?language=objc			<section class="prog__container"><p>used to indicate the capabilities of the bus the device is connected to, PIO and DMA modes supported, etc.</p><pre><code>- atabusinfo</code></pre></section>	https://developer.apple.com/reference/kernel/ioatabusinfo?language=objc
IOATACommand.h	A							https://developer.apple.com/reference/kernel/ioatacommand.h?language=objc			<section class="prog__container"><p></p><pre><code>IOATACompletionFunction</code></pre></section>	https://developer.apple.com/reference/kernel/ioatacommand.h?language=objc
IOATACommand	A							https://developer.apple.com/reference/kernel/ioatacommand?language=objc			<section class="prog__container"><p></p><pre><code>- getActualTransfer</code></pre></section>	https://developer.apple.com/reference/kernel/ioatacommand?language=objc
IOATAController	A							https://developer.apple.com/reference/kernel/ioatacontroller?language=objc			<section class="prog__container"><p>The base class for ata controller family. Provides the interface common to all ata bus controllers.</p><pre><code>- busCanDispatch</code></pre></section>	https://developer.apple.com/reference/kernel/ioatacontroller?language=objc
IOATADevConfig	A							https://developer.apple.com/reference/kernel/ioatadevconfig?language=objc			<section class="prog__container"><p>used for configuring and communicating the desired transfer modes of a device. A disk driver would typically use this object in conjunction with the 512-bytes of identification data from the drive and the IOATABusInfo object for the bus it is connected to. This object will determine the best matching transfer speeds available. the device driver will then send a series of Set Features commands to configure the drive and this object to the bus through the IOATADevice nub in order to configure the optimum transfer mode. The driver for the disk drive may choose to populate this object with whatever transfer mode desired, in the event that a different mode is required.</p><pre><code>- atadevconfig</code></pre></section>	https://developer.apple.com/reference/kernel/ioatadevconfig?language=objc
IOATADevice	A							https://developer.apple.com/reference/kernel/ioatadevice?language=objc			<section class="prog__container"><p>This object implements a relay to an ATA Bus where a drive is attached.</p><pre><code>- allocCommand</code></pre></section>	https://developer.apple.com/reference/kernel/ioatadevice?language=objc
IOATAPIProtocolTransport.h	A							https://developer.apple.com/reference/kernel/ioatapiprotocoltransport.h?language=objc			<section class="prog__container"><p>Contains the class definition for IOATAPIProtocolTransport.</p><pre><code>ATAPIClientData</code></pre></section>	https://developer.apple.com/reference/kernel/ioatapiprotocoltransport.h?language=objc
IOATAPIProtocolTransport	A							https://developer.apple.com/reference/kernel/ioatapiprotocoltransport?language=objc			<section class="prog__container"><p>SCSI Protocol Driver Family for ATAPI Devices.</p><pre><code>- AbortSCSICommand</code></pre></section>	https://developer.apple.com/reference/kernel/ioatapiprotocoltransport?language=objc
IOAudioBlitterLibDispatch.h	A							https://developer.apple.com/reference/kernel/ioaudioblitterlibdispatch.h?language=objc			<section class="prog__container"><p></p><pre><code>IOAF_bcopy_WriteCombine</code></pre></section>	https://developer.apple.com/reference/kernel/ioaudioblitterlibdispatch.h?language=objc
IOAudioControl	A							https://developer.apple.com/reference/kernel/ioaudiocontrol?language=objc			<section class="prog__container"><p>Represents any controllable attribute of an IOAudioDevice.</p><pre><code>- addUserClient</code></pre></section>	https://developer.apple.com/reference/kernel/ioaudiocontrol?language=objc
IOAudioDefines.h	A							https://developer.apple.com/reference/kernel/ioaudiodefines.h?language=objc			<section class="prog__container"><p></p></section>	https://developer.apple.com/reference/kernel/ioaudiodefines.h?language=objc
IOAudioDevice.h	A							https://developer.apple.com/reference/kernel/ioaudiodevice.h?language=objc			<section class="prog__container"><p></p><pre><code>IOAudioDevicePowerState</code></pre></section>	https://developer.apple.com/reference/kernel/ioaudiodevice.h?language=objc
IOAudioDevice	A							https://developer.apple.com/reference/kernel/ioaudiodevice?language=objc			<section class="prog__container"><p>Abstract base class for a single piece of audio hardware. The IOAudioDevice provides the central coordination point for an audio driver.</p><pre><code>- activateAudioEngine(IOAudioEngine *)</code></pre></section>	https://developer.apple.com/reference/kernel/ioaudiodevice?language=objc
IOAudioEngine.h	A							https://developer.apple.com/reference/kernel/ioaudioengine.h?language=objc			<section class="prog__container"><p></p><pre><code>IOAudioEnginePosition</code></pre></section>	https://developer.apple.com/reference/kernel/ioaudioengine.h?language=objc
IOAudioEngine	A							https://developer.apple.com/reference/kernel/ioaudioengine?language=objc			<section class="prog__container"><p>Abstract base class for a single audio audio / I/O engine.</p><pre><code> \n <t> fCurrentLoopCount - the number of times the sample buffer has wrapped around to the beginning\n <t> fLastLoopTime - timestamp of the most recent time that the I/O engine looped back to the\n beginning of the sample buffer\n \n</code></pre></section>	https://developer.apple.com/reference/kernel/ioaudioengine?language=objc
IOAudioLevelControl	A							https://developer.apple.com/reference/kernel/ioaudiolevelcontrol?language=objc			<section class="prog__container"><p></p><pre><code>- create</code></pre></section>	https://developer.apple.com/reference/kernel/ioaudiolevelcontrol?language=objc
IOAudioPort	A							https://developer.apple.com/reference/kernel/ioaudioport?language=objc			<section class="prog__container"><p>Represents a logical or physical port or functional unit in an audio device.</p><pre><code>- addAudioControl</code></pre></section>	https://developer.apple.com/reference/kernel/ioaudioport?language=objc
IOAudioStream	A							https://developer.apple.com/reference/kernel/ioaudiostream?language=objc			<section class="prog__container"><p>This class wraps a single sample buffer in an audio driver.</p><pre><code>- addAvailableFormat</code></pre></section>	https://developer.apple.com/reference/kernel/ioaudiostream?language=objc
IOAudioTimeIntervalFilterFIR	A							https://developer.apple.com/reference/kernel/ioaudiotimeintervalfilterfir?language=objc			<section class="prog__container"><p>A concrete IOAudioTimeIntervalFilter class that provides an FIR-based filtered timeline based on snapshots from jittery time captures</p><pre><code>- free</code></pre></section>	https://developer.apple.com/reference/kernel/ioaudiotimeintervalfilterfir?language=objc
IOAudioTimeIntervalFilterIIR	A							https://developer.apple.com/reference/kernel/ioaudiotimeintervalfilteriir?language=objc			<section class="prog__container"><p>A concrete IOAudioTimeIntervalFilter class that provides an IIR-based filtered timeline based on snapshots from jittery time captures</p><pre><code>- initFilter</code></pre></section>	https://developer.apple.com/reference/kernel/ioaudiotimeintervalfilteriir?language=objc
IOAudioToggleControl	A							https://developer.apple.com/reference/kernel/ioaudiotogglecontrol?language=objc			<section class="prog__container"><p></p><pre><code>- create</code></pre></section>	https://developer.apple.com/reference/kernel/ioaudiotogglecontrol?language=objc
IOAudioTypes.h	A							https://developer.apple.com/reference/kernel/ioaudiotypes.h?language=objc			<section class="prog__container"><p></p><pre><code>IOAudioControlCalls</code></pre></section>	https://developer.apple.com/reference/kernel/ioaudiotypes.h?language=objc
IOBasicOutputQueue	A							https://developer.apple.com/reference/kernel/iobasicoutputqueue?language=objc			<section class="prog__container"><p>A concrete implementation of an IOOutputQueue.</p><pre><code>- enqueue</code></pre></section>	https://developer.apple.com/reference/kernel/iobasicoutputqueue?language=objc
IOBDBlockStorageDevice.h	A							https://developer.apple.com/reference/kernel/iobdblockstoragedevice.h?language=objc			<section class="prog__container"><p>This header contains the IOBDBlockStorageDevice class definition.</p></section>	https://developer.apple.com/reference/kernel/iobdblockstoragedevice.h?language=objc
IOBDBlockStorageDevice	A							https://developer.apple.com/reference/kernel/iobdblockstoragedevice?language=objc			<section class="prog__container"><p>The IOBDBlockStorageDevice class is a generic BD block storage device abstraction.</p><pre><code>- init</code></pre></section>	https://developer.apple.com/reference/kernel/iobdblockstoragedevice?language=objc
IOBDMedia.h	A							https://developer.apple.com/reference/kernel/iobdmedia.h?language=objc			<section class="prog__container"><p>This header contains the IOBDMedia class definition.</p></section>	https://developer.apple.com/reference/kernel/iobdmedia.h?language=objc
IOBDMedia	A							https://developer.apple.com/reference/kernel/iobdmedia?language=objc			<section class="prog__container"><p>The IOBDMedia class is a random-access disk device abstraction for BDs.</p><pre><code>- getSpeed</code></pre></section>	https://developer.apple.com/reference/kernel/iobdmedia?language=objc
IOBigMemoryCursor	A							https://developer.apple.com/reference/kernel/iobigmemorycursor?language=objc			<section class="prog__container"><p>An IOMemoryCursor subclass that outputs a vector of PhysicalSegments in the big endian byte order.</p><pre><code>- getPhysicalSegments</code></pre></section>	https://developer.apple.com/reference/kernel/iobigmemorycursor?language=objc
IOBlockStorageDevice.h	A							https://developer.apple.com/reference/kernel/ioblockstoragedevice.h?language=objc			<section class="prog__container"><p>This header contains the IOBlockStorageDevice class definition.</p><pre><code>IOBlockStorageDeviceExtent</code></pre></section>	https://developer.apple.com/reference/kernel/ioblockstoragedevice.h?language=objc
IOBlockStorageDevice	A							https://developer.apple.com/reference/kernel/ioblockstoragedevice?language=objc			<section class="prog__container"><p>A generic block storage device abstraction.</p><pre><code>- doAsyncReadWrite</code></pre></section>	https://developer.apple.com/reference/kernel/ioblockstoragedevice?language=objc
IOBlockStorageDriver.h	A							https://developer.apple.com/reference/kernel/ioblockstoragedriver.h?language=objc			<section class="prog__container"><p>This header contains the IOBlockStorageDriver class definition.</p></section>	https://developer.apple.com/reference/kernel/ioblockstoragedriver.h?language=objc
IOBlockStorageDriver	A							https://developer.apple.com/reference/kernel/ioblockstoragedriver?language=objc			<section class="prog__container"><p>The common base class for generic block storage drivers.</p><pre><code>- acceptNewMedia</code></pre></section>	https://developer.apple.com/reference/kernel/ioblockstoragedriver?language=objc
IOBufferMemoryDescriptor	A							https://developer.apple.com/reference/kernel/iobuffermemorydescriptor?language=objc			<section class="prog__container"><p>Provides a simple memory descriptor that allocates its own buffer memory.</p><pre><code>- inTaskWithOptions</code></pre></section>	https://developer.apple.com/reference/kernel/iobuffermemorydescriptor?language=objc
IOCatalogue	A							https://developer.apple.com/reference/kernel/iocatalogue?language=objc			<section class="prog__container"><p>In-kernel database for IOKit driver personalities.</p><pre><code>- addDrivers</code></pre></section>	https://developer.apple.com/reference/kernel/iocatalogue?language=objc
IOCDBlockStorageDevice.h	A							https://developer.apple.com/reference/kernel/iocdblockstoragedevice.h?language=objc			<section class="prog__container"><p>This header contains the IOCDBlockStorageDevice class definition.</p></section>	https://developer.apple.com/reference/kernel/iocdblockstoragedevice.h?language=objc
IOCDBlockStorageDevice	A							https://developer.apple.com/reference/kernel/iocdblockstoragedevice?language=objc			<section class="prog__container"><p>The IOCDBlockStorageDevice class is a generic CD block storage device abstraction.</p><pre><code>- doAsyncReadCD</code></pre></section>	https://developer.apple.com/reference/kernel/iocdblockstoragedevice?language=objc
IOCDMedia.h	A							https://developer.apple.com/reference/kernel/iocdmedia.h?language=objc			<section class="prog__container"><p>This header contains the IOCDMedia class definition.</p></section>	https://developer.apple.com/reference/kernel/iocdmedia.h?language=objc
IOCDMedia	A							https://developer.apple.com/reference/kernel/iocdmedia?language=objc			<section class="prog__container"><p>The IOCDMedia class is a random-access disk device abstraction for CDs.</p><pre><code>- getSpeed</code></pre></section>	https://developer.apple.com/reference/kernel/iocdmedia?language=objc
IOCommand	A							https://developer.apple.com/reference/kernel/iocommand?language=objc			<section class="prog__container"><p>This class is an abstract class which represents an I/O command.</p><pre><code>fCommandChain</code></pre></section>	https://developer.apple.com/reference/kernel/iocommand?language=objc
IOCommandGate	A							https://developer.apple.com/reference/kernel/iocommandgate?language=objc			<section class="prog__container"><p>Single-threaded work-loop client request mechanism.</p><pre><code>- attemptAction</code></pre></section>	https://developer.apple.com/reference/kernel/iocommandgate?language=objc
IOCommandPool	A							https://developer.apple.com/reference/kernel/iocommandpool?language=objc			<section class="prog__container"><p>Manipulates a pool of commands which inherit from IOCommand.</p><pre><code>- commandPool</code></pre></section>	https://developer.apple.com/reference/kernel/iocommandpool?language=objc
IOConfigDirectory	A							https://developer.apple.com/reference/kernel/ioconfigdirectory?language=objc			<section class="prog__container"><p></p><pre><code>- getIndexEntry</code></pre></section>	https://developer.apple.com/reference/kernel/ioconfigdirectory?language=objc
IODataQueueShared.h	A							https://developer.apple.com/reference/kernel/iodataqueueshared.h?language=objc			<section class="prog__container"><p></p><pre><code>IODataQueueAppendix</code></pre></section>	https://developer.apple.com/reference/kernel/iodataqueueshared.h?language=objc
IODCLProgram	A							https://developer.apple.com/reference/kernel/iodclprogram?language=objc			<section class="prog__container"><p></p><pre><code>ExpansionData</code></pre></section>	https://developer.apple.com/reference/kernel/iodclprogram?language=objc
IODCLTranslateListen	A							https://developer.apple.com/reference/kernel/iodcltranslatelisten?language=objc			<section class="prog__container"><p></p><pre><code>- compile</code></pre></section>	https://developer.apple.com/reference/kernel/iodcltranslatelisten?language=objc
IODCLTranslateTalk	A							https://developer.apple.com/reference/kernel/iodcltranslatetalk?language=objc			<section class="prog__container"><p></p><pre><code>- compile</code></pre></section>	https://developer.apple.com/reference/kernel/iodcltranslatetalk?language=objc
IODCLTranslator	A							https://developer.apple.com/reference/kernel/iodcltranslator?language=objc			<section class="prog__container"><p></p><pre><code>- allocateHW</code></pre></section>	https://developer.apple.com/reference/kernel/iodcltranslator?language=objc
IODeviceMemory	A							https://developer.apple.com/reference/kernel/iodevicememory?language=objc			<section class="prog__container"><p>An IOMemoryDescriptor used for device physical memory ranges.</p><pre><code>- arrayFromList</code></pre></section>	https://developer.apple.com/reference/kernel/iodevicememory?language=objc
IODMACommand	A							https://developer.apple.com/reference/kernel/iodmacommand?language=objc			<section class="prog__container"><p>A mechanism to convert memory references to I/O bus addresses.</p><pre><code>- clearMemoryDescriptor</code></pre></section>	https://developer.apple.com/reference/kernel/iodmacommand?language=objc
IODVDBlockStorageDevice.h	A							https://developer.apple.com/reference/kernel/iodvdblockstoragedevice.h?language=objc			<section class="prog__container"><p>This header contains the IODVDBlockStorageDevice class definition.</p></section>	https://developer.apple.com/reference/kernel/iodvdblockstoragedevice.h?language=objc
IODVDBlockStorageDevice	A							https://developer.apple.com/reference/kernel/iodvdblockstoragedevice?language=objc			<section class="prog__container"><p>The IODVDBlockStorageDevice class is a generic DVD block storage device abstraction.</p><pre><code>- getMetaClass</code></pre></section>	https://developer.apple.com/reference/kernel/iodvdblockstoragedevice?language=objc
IODVDMedia.h	A							https://developer.apple.com/reference/kernel/iodvdmedia.h?language=objc			<section class="prog__container"><p>This header contains the IODVDMedia class definition.</p></section>	https://developer.apple.com/reference/kernel/iodvdmedia.h?language=objc
IODVDMedia	A							https://developer.apple.com/reference/kernel/iodvdmedia?language=objc			<section class="prog__container"><p>The IODVDMedia class is a random-access disk device abstraction for DVDs.</p><pre><code>- getSpeed</code></pre></section>	https://developer.apple.com/reference/kernel/iodvdmedia?language=objc
IOEthernetController.h	A							https://developer.apple.com/reference/kernel/ioethernetcontroller.h?language=objc			<section class="prog__container"><p></p></section>	https://developer.apple.com/reference/kernel/ioethernetcontroller.h?language=objc
IOEthernetController	A							https://developer.apple.com/reference/kernel/ioethernetcontroller?language=objc			<section class="prog__container"><p>Abstract superclass for Ethernet controllers.</p><pre><code>- createInterface</code></pre></section>	https://developer.apple.com/reference/kernel/ioethernetcontroller?language=objc
IOEthernetInterface.h	A							https://developer.apple.com/reference/kernel/ioethernetinterface.h?language=objc			<section class="prog__container"><p></p></section>	https://developer.apple.com/reference/kernel/ioethernetinterface.h?language=objc
IOEthernetInterface	A							https://developer.apple.com/reference/kernel/ioethernetinterface?language=objc			<section class="prog__container"><p>The Ethernet interface object.</p><pre><code>- controllerDidChangePowerState</code></pre></section>	https://developer.apple.com/reference/kernel/ioethernetinterface?language=objc
IOEthernetStats.h	A							https://developer.apple.com/reference/kernel/ioethernetstats.h?language=objc			<section class="prog__container"><p>Ethernet statistics.</p><pre><code>IODot3CollEntry</code></pre></section>	https://developer.apple.com/reference/kernel/ioethernetstats.h?language=objc
IOEventSource	A							https://developer.apple.com/reference/kernel/ioeventsource?language=objc			<section class="prog__container"><p>Abstract class for all work-loop event sources.</p><pre><code>- checkForWork</code></pre></section>	https://developer.apple.com/reference/kernel/ioeventsource?language=objc
IOExtendedLBA	A							https://developer.apple.com/reference/kernel/ioextendedlba?language=objc			<section class="prog__container"><p>If 48-bit LBAs are supported, IOExtendedLBA is used to represent a 48-bit LBA. The driver examines the ATA identify data to determine if 48-bit addressing is supported.</p><pre><code>- getCommand</code></pre></section>	https://developer.apple.com/reference/kernel/ioextendedlba?language=objc
IOFilterInterruptEventSource	A							https://developer.apple.com/reference/kernel/iofilterinterrupteventsource?language=objc			<section class="prog__container"><p>Filtering varient of the $link IOInterruptEventSource.</p><pre><code>- disableInterruptOccurred</code></pre></section>	https://developer.apple.com/reference/kernel/iofilterinterrupteventsource?language=objc
IOFilterScheme.h	A							https://developer.apple.com/reference/kernel/iofilterscheme.h?language=objc			<section class="prog__container"><p>This header contains the IOFilterScheme class definition.</p></section>	https://developer.apple.com/reference/kernel/iofilterscheme.h?language=objc
IOFilterScheme	A							https://developer.apple.com/reference/kernel/iofilterscheme?language=objc			<section class="prog__container"><p>The common base class for all filter scheme objects.</p><pre><code>- copyPhysicalExtent</code></pre></section>	https://developer.apple.com/reference/kernel/iofilterscheme?language=objc
IOFireWireAVCNub	A							https://developer.apple.com/reference/kernel/iofirewireavcnub?language=objc			<section class="prog__container"><p>nub for AVC devices</p><pre><code>- AVCCommand</code></pre></section>	https://developer.apple.com/reference/kernel/iofirewireavcnub?language=objc
IOFireWireAVCSubUnit	A							https://developer.apple.com/reference/kernel/iofirewireavcsubunit?language=objc			<section class="prog__container"><p>nub for sub unit of AVC devices. Just for matching, calls the AVC unit for all functions.</p><pre><code>- AVCCommand</code></pre></section>	https://developer.apple.com/reference/kernel/iofirewireavcsubunit?language=objc
IOFireWireAVCTargetSpace	A							https://developer.apple.com/reference/kernel/iofirewireavctargetspace?language=objc			<section class="prog__container"><p>object to centralize the AVC Target mode support</p><pre><code>- getAVCTargetSpace</code></pre></section>	https://developer.apple.com/reference/kernel/iofirewireavctargetspace?language=objc
IOFireWireAVCUnit	A							https://developer.apple.com/reference/kernel/iofirewireavcunit?language=objc			<section class="prog__container"><p>nub for AVC devices</p><pre><code>- AVCCommand</code></pre></section>	https://developer.apple.com/reference/kernel/iofirewireavcunit?language=objc
IOFireWireBus	A							https://developer.apple.com/reference/kernel/iofirewirebus?language=objc			<section class="prog__container"><p>IOFireWireBus is a public class the provides access to general FireWire functionality...</p><pre><code>- createLocalIsochPort</code></pre></section>	https://developer.apple.com/reference/kernel/iofirewirebus?language=objc
IOFireWireDevice	A							https://developer.apple.com/reference/kernel/iofirewiredevice?language=objc			<section class="prog__container"><p>Represents a FireWire device.</p><pre><code>IOFireWireDevice</code></pre></section>	https://developer.apple.com/reference/kernel/iofirewiredevice?language=objc
IOFireWireFamilyCommon.h	A							https://developer.apple.com/reference/kernel/iofirewirefamilycommon.h?language=objc			<section class="prog__container"><p>This file contains useful definitions for working with FireWire in the kernel and in user space</p></section>	https://developer.apple.com/reference/kernel/iofirewirefamilycommon.h?language=objc
IOFireWirePCRSpace.h	A							https://developer.apple.com/reference/kernel/iofirewirepcrspace.h?language=objc			<section class="prog__container"><p></p><pre><code>IOFireWirePCRCallback</code></pre></section>	https://developer.apple.com/reference/kernel/iofirewirepcrspace.h?language=objc
IOFireWirePCRSpace	A							https://developer.apple.com/reference/kernel/iofirewirepcrspace?language=objc			<section class="prog__container"><p>object to multiplex users of the PCR plug registers</p><pre><code>- allocateInputPlug</code></pre></section>	https://developer.apple.com/reference/kernel/iofirewirepcrspace?language=objc
IOFireWireSBP2Login.h	A							https://developer.apple.com/reference/kernel/iofirewiresbp2login.h?language=objc			<section class="prog__container"><p>Contains the class definition for IOFireWireSBP2Login.</p><pre><code>FWSBP2FetchAgentWriteCallback</code></pre></section>	https://developer.apple.com/reference/kernel/iofirewiresbp2login.h?language=objc
IOFireWireSBP2Login	A							https://developer.apple.com/reference/kernel/iofirewiresbp2login?language=objc			<section class="prog__container"><p>Supplies the login maintenance and Normal Command ORB execution portions of the API.</p><pre><code>- createORB</code></pre></section>	https://developer.apple.com/reference/kernel/iofirewiresbp2login?language=objc
IOFireWireSBP2LSIWorkaroundDescriptor	A							https://developer.apple.com/reference/kernel/iofirewiresbp2lsiworkarounddescriptor?language=objc			<section class="prog__container"><p>This is a subclass of IOGeneralMemoryDescriptor. It is designed to work around a hardware problem in a common SBP2 target. It takes a memory descriptor as an argument. It retains this descriptor and returns a new one with resegmented physical segments and potentially some "unfixable" segments double buffered.</p><pre><code>- initWithDescriptor</code></pre></section>	https://developer.apple.com/reference/kernel/iofirewiresbp2lsiworkarounddescriptor?language=objc
IOFireWireSBP2LUN	A							https://developer.apple.com/reference/kernel/iofirewiresbp2lun?language=objc			<section class="prog__container"><p>Provider for most drivers.</p><pre><code>- attach</code></pre></section>	https://developer.apple.com/reference/kernel/iofirewiresbp2lun?language=objc
IOFireWireSBP2ManagementORB.h	A							https://developer.apple.com/reference/kernel/iofirewiresbp2managementorb.h?language=objc			<section class="prog__container"><p>Contains the class definition for IOFireWireSBP2ManagementORB.</p><pre><code>FWSBP2ManagementCallback</code></pre></section>	https://developer.apple.com/reference/kernel/iofirewiresbp2managementorb.h?language=objc
IOFireWireSBP2ManagementORB	A							https://developer.apple.com/reference/kernel/iofirewiresbp2managementorb?language=objc			<section class="prog__container"><p>Supplies non login related management ORBs. Management ORBs can be executed independent of a login, if necessary. Management ORBs are created using the IOFireWireSBP2LUN interface.</p><pre><code>- getCommandFunction()</code></pre></section>	https://developer.apple.com/reference/kernel/iofirewiresbp2managementorb?language=objc
IOFireWireSBP2ORB	A							https://developer.apple.com/reference/kernel/iofirewiresbp2orb?language=objc			<section class="prog__container"><p>Represents an SBP2 normal command ORB. Supplies the APIs for configuring normal command ORBs. This includes setting the command block and writing the page tables for I/O. The ORBs are executed using the submitORB method in IOFireWireSBP2Login.</p><pre><code>- allocatePageTable</code></pre></section>	https://developer.apple.com/reference/kernel/iofirewiresbp2orb?language=objc
IOFireWireSBP2Target	A							https://developer.apple.com/reference/kernel/iofirewiresbp2target?language=objc			<section class="prog__container"><p>Serves as bridge between IOFireWireUnit and IOFireWireLUN.</p><pre><code>- getFireWireUnit</code></pre></section>	https://developer.apple.com/reference/kernel/iofirewiresbp2target?language=objc
IOFireWireSerialBusProtocolTransport	A							https://developer.apple.com/reference/kernel/iofirewireserialbusprotocoltransport?language=objc			<section class="prog__container"><p>SCSI Protocol Driver Family for FireWire SBP2 Devices.</p><pre><code>- AbortSCSICommand</code></pre></section>	https://developer.apple.com/reference/kernel/iofirewireserialbusprotocoltransport?language=objc
IOFireWireStorageCharacteristics.h	A							https://developer.apple.com/reference/kernel/iofirewirestoragecharacteristics.h?language=objc			<section class="prog__container"><p></p></section>	https://developer.apple.com/reference/kernel/iofirewirestoragecharacteristics.h?language=objc
IOFramebuffer	A							https://developer.apple.com/reference/kernel/ioframebuffer?language=objc			<section class="prog__container"><p>The base class for graphics devices to be made available as part of the desktop.</p><pre><code>- connectFlags</code></pre></section>	https://developer.apple.com/reference/kernel/ioframebuffer?language=objc
IOFramebufferShared.h	A							https://developer.apple.com/reference/kernel/ioframebuffershared.h?language=objc			<section class="prog__container"><p></p><pre><code>bm12Cursor</code></pre></section>	https://developer.apple.com/reference/kernel/ioframebuffershared.h?language=objc
IOFWAddressSpace.h	A							https://developer.apple.com/reference/kernel/iofwaddressspace.h?language=objc			<section class="prog__container"><p></p><pre><code>FWReadCallback</code></pre></section>	https://developer.apple.com/reference/kernel/iofwaddressspace.h?language=objc
IOFWAddressSpace	A							https://developer.apple.com/reference/kernel/iofwaddressspace?language=objc			<section class="prog__container"><p></p><pre><code>- activate</code></pre></section>	https://developer.apple.com/reference/kernel/iofwaddressspace?language=objc
IOFWAsyncCommand	A							https://developer.apple.com/reference/kernel/iofwasynccommand?language=objc			<section class="prog__container"><p>Send an async request to a device</p><pre><code>- setMaxPacket</code></pre></section>	https://developer.apple.com/reference/kernel/iofwasynccommand?language=objc
IOFWAsyncPHYCommand	A							https://developer.apple.com/reference/kernel/iofwasyncphycommand?language=objc			<section class="prog__container"><p>Send an async PHY packet</p><pre><code>- complete</code></pre></section>	https://developer.apple.com/reference/kernel/iofwasyncphycommand?language=objc
IOFWAsyncStreamCommand	A							https://developer.apple.com/reference/kernel/iofwasyncstreamcommand?language=objc			<section class="prog__container"><p>Send an async stream packet</p><pre><code>- complete</code></pre></section>	https://developer.apple.com/reference/kernel/iofwasyncstreamcommand?language=objc
IOFWAsyncStreamListener	A							https://developer.apple.com/reference/kernel/iofwasyncstreamlistener?language=objc			<section class="prog__container"><p></p><pre><code>- getFlags</code></pre></section>	https://developer.apple.com/reference/kernel/iofwasyncstreamlistener?language=objc
IOFWBusCommand	A							https://developer.apple.com/reference/kernel/iofwbuscommand?language=objc			<section class="prog__container"><p>Bus control commands</p><pre><code>ExpansionData</code></pre></section>	https://developer.apple.com/reference/kernel/iofwbuscommand?language=objc
IOFWCommand.h	A							https://developer.apple.com/reference/kernel/iofwcommand.h?language=objc			<section class="prog__container"><p></p><pre><code>IOFWCmdQ</code></pre></section>	https://developer.apple.com/reference/kernel/iofwcommand.h?language=objc
IOFWCommand	A							https://developer.apple.com/reference/kernel/iofwcommand?language=objc			<section class="prog__container"><p>Base class for FireWire commands</p><pre><code>- insertAfter</code></pre></section>	https://developer.apple.com/reference/kernel/iofwcommand?language=objc
IOFWCompareAndSwapCommand	A							https://developer.apple.com/reference/kernel/iofwcompareandswapcommand?language=objc			<section class="prog__container"><p></p><pre><code>- createMemberVariables</code></pre></section>	https://developer.apple.com/reference/kernel/iofwcompareandswapcommand?language=objc
IOFWDCL	A							https://developer.apple.com/reference/kernel/iofwdcl?language=objc			<section class="prog__container"><p></p><pre><code>- addRange</code></pre></section>	https://developer.apple.com/reference/kernel/iofwdcl?language=objc
IOFWDCLPool	A							https://developer.apple.com/reference/kernel/iofwdclpool?language=objc			<section class="prog__container"><p>You should never subclass IOFWDCLPool</p></section>	https://developer.apple.com/reference/kernel/iofwdclpool?language=objc
IOFWDelayCommand	A							https://developer.apple.com/reference/kernel/iofwdelaycommand?language=objc			<section class="prog__container"><p>Command to execute some code after a specified delay (in microseconds) All it does is timeout after the specified delay, hence calling the completion callback.</p><pre><code>ExpansionData</code></pre></section>	https://developer.apple.com/reference/kernel/iofwdelaycommand?language=objc
IOFWLocalIsochPort	A							https://developer.apple.com/reference/kernel/iofwlocalisochport?language=objc			<section class="prog__container"><p></p><pre><code>- notify</code></pre></section>	https://developer.apple.com/reference/kernel/iofwlocalisochport?language=objc
IOFWPhysicalAddressSpace	A							https://developer.apple.com/reference/kernel/iofwphysicaladdressspace?language=objc			<section class="prog__container"><p></p><pre><code>- checkMemoryInRange</code></pre></section>	https://developer.apple.com/reference/kernel/iofwphysicaladdressspace?language=objc
IOFWPseudoAddressSpace	A							https://developer.apple.com/reference/kernel/iofwpseudoaddressspace?language=objc			<section class="prog__container"><p></p><pre><code>- contains</code></pre></section>	https://developer.apple.com/reference/kernel/iofwpseudoaddressspace?language=objc
IOFWPseudoAddressSpaceAux	A							https://developer.apple.com/reference/kernel/iofwpseudoaddressspaceaux?language=objc			<section class="prog__container"><p></p><pre><code>- setARxReqIntCompleteHandler</code></pre></section>	https://developer.apple.com/reference/kernel/iofwpseudoaddressspaceaux?language=objc
IOFWReadQuadCommand	A							https://developer.apple.com/reference/kernel/iofwreadquadcommand?language=objc			<section class="prog__container"><p>An easier to use version of IOFWReadCommand for use when the data to be transferred is an integer number of quads. Note that block read requests will be used for transfers greater than one quad unless setMaxPacket(4) is called.</p><pre><code>- createMemberVariables</code></pre></section>	https://developer.apple.com/reference/kernel/iofwreadquadcommand?language=objc
IOFWWriteQuadCommand	A							https://developer.apple.com/reference/kernel/iofwwritequadcommand?language=objc			<section class="prog__container"><p>An easier to use version of IOFWWriteCommand for use when the data to be transferred is small and an integer number of quads. Note that block read requests will be used for transfers greater than one quad unless setMaxPacket(4) is called. kMaxWriteQuads is the largest legal number of quads that this object can be asked to transfer (the data is copied into an internal buffer in init() and reinit()).</p><pre><code>- createMemberVariables</code></pre></section>	https://developer.apple.com/reference/kernel/iofwwritequadcommand?language=objc
IOGatedOutputQueue	A							https://developer.apple.com/reference/kernel/iogatedoutputqueue?language=objc			<section class="prog__container"><p>An extension of an IOBasicOutputQueue.</p><pre><code>- free</code></pre></section>	https://developer.apple.com/reference/kernel/iogatedoutputqueue?language=objc
IOGraphicsTypes.h	A							https://developer.apple.com/reference/kernel/iographicstypes.h?language=objc			<section class="prog__container"><p></p><pre><code>IOColorEntry</code></pre></section>	https://developer.apple.com/reference/kernel/iographicstypes.h?language=objc
IOHIDDescriptorParser.h	A							https://developer.apple.com/reference/kernel/iohiddescriptorparser.h?language=objc			<section class="prog__container"><p></p><pre><code>HIDCloseReportDescriptor</code></pre></section>	https://developer.apple.com/reference/kernel/iohiddescriptorparser.h?language=objc
IOHIDDevice.h	A							https://developer.apple.com/reference/kernel/iohiddevice.h?language=objc			<section class="prog__container"><p></p><pre><code>IOHIDCompletionAction</code></pre></section>	https://developer.apple.com/reference/kernel/iohiddevice.h?language=objc
IOHIDDevice	A							https://developer.apple.com/reference/kernel/iohiddevice?language=objc			<section class="prog__container"><p>IOHIDDevice defines a Human Interface Device (HID) object, which will interact with the HID Manager by publishing static properties in the registry, and also by reporting HID events through shared memory. IOHIDDevice is an abstract class that must be subclassed to support a specific type of HID devices, such as USB HID class devices.</p><pre><code>- checkEventDelivery</code></pre></section>	https://developer.apple.com/reference/kernel/iohiddevice?language=objc
IOHIDEventService	A							https://developer.apple.com/reference/kernel/iohideventservice?language=objc			<section class="prog__container"><p></p><pre><code>- dispatchDigitizerEvent</code></pre></section>	https://developer.apple.com/reference/kernel/iohideventservice?language=objc
IOHIDInterface	A							https://developer.apple.com/reference/kernel/iohidinterface?language=objc			<section class="prog__container"><p>In kernel interface to a HID device.</p><pre><code>- free</code></pre></section>	https://developer.apple.com/reference/kernel/iohidinterface?language=objc
IOHIDKeys.h	A							https://developer.apple.com/reference/kernel/iohidkeys.h?language=objc			<section class="prog__container"><p></p><pre><code>IOHIDElementCookie</code></pre></section>	https://developer.apple.com/reference/kernel/iohidkeys.h?language=objc
IOI2CInterface.h	A							https://developer.apple.com/reference/kernel/ioi2cinterface.h?language=objc			<section class="prog__container"><p></p><pre><code>IOFBCopyI2CInterfaceForBus</code></pre></section>	https://developer.apple.com/reference/kernel/ioi2cinterface.h?language=objc
IOInterleavedMemoryDescriptor	A							https://developer.apple.com/reference/kernel/iointerleavedmemorydescriptor?language=objc			<section class="prog__container"><p>The IOInterleavedMemoryDescriptor object describes a memory area made up of portions of several other IOMemoryDescriptors.</p><pre><code>- clearMemoryDescriptors</code></pre></section>	https://developer.apple.com/reference/kernel/iointerleavedmemorydescriptor?language=objc
IOInterruptEventSource	A							https://developer.apple.com/reference/kernel/iointerrupteventsource?language=objc			<section class="prog__container"><p>Event source for interrupt delivery to work-loop based drivers.</p><pre><code>- checkForWork</code></pre></section>	https://developer.apple.com/reference/kernel/iointerrupteventsource?language=objc
IOKernelDebugger.h	A							https://developer.apple.com/reference/kernel/iokerneldebugger.h?language=objc			<section class="prog__container"><p></p><pre><code>IODebuggerLinkStatusHandler</code></pre></section>	https://developer.apple.com/reference/kernel/iokerneldebugger.h?language=objc
IOKernelDebugger	A							https://developer.apple.com/reference/kernel/iokerneldebugger?language=objc			<section class="prog__container"><p>Kernel debugger nub.</p><pre><code>- debugger</code></pre></section>	https://developer.apple.com/reference/kernel/iokerneldebugger?language=objc
IOKitServer.h	A							https://developer.apple.com/reference/kernel/iokitserver.h?language=objc			<section class="prog__container"><p></p></section>	https://developer.apple.com/reference/kernel/iokitserver.h?language=objc
IOLib.h	A							https://developer.apple.com/reference/kernel/iolib.h?language=objc			<section class="prog__container"><p></p><pre><code>IOThreadSelf</code></pre></section>	https://developer.apple.com/reference/kernel/iolib.h?language=objc
IOLittleMemoryCursor	A							https://developer.apple.com/reference/kernel/iolittlememorycursor?language=objc			<section class="prog__container"><p>An IOMemoryCursor subclass that outputs a vector of PhysicalSegments in the little endian byte order.</p><pre><code>- getPhysicalSegments</code></pre></section>	https://developer.apple.com/reference/kernel/iolittlememorycursor?language=objc
IOLocalConfigDirectory	A							https://developer.apple.com/reference/kernel/iolocalconfigdirectory?language=objc			<section class="prog__container"><p></p><pre><code>- update</code></pre></section>	https://developer.apple.com/reference/kernel/iolocalconfigdirectory?language=objc
IOLocks.h	A							https://developer.apple.com/reference/kernel/iolocks.h?language=objc			<section class="prog__container"><p></p><pre><code>IOLockAlloc</code></pre></section>	https://developer.apple.com/reference/kernel/iolocks.h?language=objc
IOMbufBigMemoryCursor	A							https://developer.apple.com/reference/kernel/iombufbigmemorycursor?language=objc			<section class="prog__container"><p>An IOMbufMemoryCursor subclass that outputs a vector of IOPhysicalSegments in the big endian byte order.</p><pre><code>- getPhysicalSegments</code></pre></section>	https://developer.apple.com/reference/kernel/iombufbigmemorycursor?language=objc
IOMbufDBDMAMemoryCursor	A							https://developer.apple.com/reference/kernel/iombufdbdmamemorycursor?language=objc			<section class="prog__container"><p>An IOMbufMemoryCursor subclass that outputs a vector of IODBDMADescriptors.</p><pre><code>- getPhysicalSegments</code></pre></section>	https://developer.apple.com/reference/kernel/iombufdbdmamemorycursor?language=objc
IOMbufLittleMemoryCursor	A							https://developer.apple.com/reference/kernel/iombuflittlememorycursor?language=objc			<section class="prog__container"><p>An IOMbufMemoryCursor subclass that outputs a vector of IOPhysicalSegments in the little endian byte order.</p><pre><code>- getPhysicalSegments</code></pre></section>	https://developer.apple.com/reference/kernel/iombuflittlememorycursor?language=objc
IOMbufMemoryCursor	A							https://developer.apple.com/reference/kernel/iombufmemorycursor?language=objc			<section class="prog__container"><p>A mechanism to convert mbuf chains to physical addresses.</p><pre><code>- genPhysicalSegments</code></pre></section>	https://developer.apple.com/reference/kernel/iombufmemorycursor?language=objc
IOMbufNaturalMemoryCursor	A							https://developer.apple.com/reference/kernel/iombufnaturalmemorycursor?language=objc			<section class="prog__container"><p>An IOMbufMemoryCursor subclass that outputs a vector of IOPhysicalSegments in the natural byte orientation for the cpu.</p><pre><code>- getPhysicalSegments</code></pre></section>	https://developer.apple.com/reference/kernel/iombufnaturalmemorycursor?language=objc
IOMedia.h	A							https://developer.apple.com/reference/kernel/iomedia.h?language=objc			<section class="prog__container"><p>This header contains the IOMedia class definition.</p></section>	https://developer.apple.com/reference/kernel/iomedia.h?language=objc
IOMedia	A							https://developer.apple.com/reference/kernel/iomedia?language=objc			<section class="prog__container"><p>A random-access disk device abstraction.</p><pre><code>- copyPhysicalExtent</code></pre></section>	https://developer.apple.com/reference/kernel/iomedia?language=objc
IOMemoryCursor	A							https://developer.apple.com/reference/kernel/iomemorycursor?language=objc			<section class="prog__container"><p>A mechanism to convert memory references to physical addresses.</p><pre><code>- genPhysicalSegments</code></pre></section>	https://developer.apple.com/reference/kernel/iomemorycursor?language=objc
IOMemoryDescriptor	A							https://developer.apple.com/reference/kernel/iomemorydescriptor?language=objc			<section class="prog__container"><p>An abstract base class defining common methods for describing physical or virtual memory.</p><pre><code>- complete</code></pre></section>	https://developer.apple.com/reference/kernel/iomemorydescriptor?language=objc
IOMemoryMap	A							https://developer.apple.com/reference/kernel/iomemorymap?language=objc			<section class="prog__container"><p>A class defining common methods for describing a memory mapping.</p><pre><code>- getAddress()</code></pre></section>	https://developer.apple.com/reference/kernel/iomemorymap?language=objc
IOMessage.h	A							https://developer.apple.com/reference/kernel/iomessage.h?language=objc			<section class="prog__container"><p>Defines message type constants for several IOKit messaging API's.</p><pre><code>iokit_vendor_specific_msg</code></pre></section>	https://developer.apple.com/reference/kernel/iomessage.h?language=objc
IOMultiMemoryDescriptor	A							https://developer.apple.com/reference/kernel/iomultimemorydescriptor?language=objc			<section class="prog__container"><p>The IOMultiMemoryDescriptor object describes a memory area made up of several other IOMemoryDescriptors.</p><pre><code>- complete</code></pre></section>	https://developer.apple.com/reference/kernel/iomultimemorydescriptor?language=objc
IONaturalMemoryCursor	A							https://developer.apple.com/reference/kernel/ionaturalmemorycursor?language=objc			<section class="prog__container"><p>An IOMemoryCursor subclass that outputs a vector of PhysicalSegments in the natural byte orientation for the CPU.</p><pre><code>- getPhysicalSegments</code></pre></section>	https://developer.apple.com/reference/kernel/ionaturalmemorycursor?language=objc
IONetworkController.h	A							https://developer.apple.com/reference/kernel/ionetworkcontroller.h?language=objc			<section class="prog__container"><p></p><pre><code>IOPacketBufferConstraints</code></pre></section>	https://developer.apple.com/reference/kernel/ionetworkcontroller.h?language=objc
IONetworkController	A							https://developer.apple.com/reference/kernel/ionetworkcontroller?language=objc			<section class="prog__container"><p>Implements the framework for a generic network controller.</p><pre><code>- allocatePacket</code></pre></section>	https://developer.apple.com/reference/kernel/ionetworkcontroller?language=objc
IONetworkData.h	A							https://developer.apple.com/reference/kernel/ionetworkdata.h?language=objc			<section class="prog__container"><p></p></section>	https://developer.apple.com/reference/kernel/ionetworkdata.h?language=objc
IONetworkData	A							https://developer.apple.com/reference/kernel/ionetworkdata?language=objc			<section class="prog__container"><p>An object that manages a fixed-size named buffer.</p><pre><code>- clearBuffer</code></pre></section>	https://developer.apple.com/reference/kernel/ionetworkdata?language=objc
IONetworkInterface.h	A							https://developer.apple.com/reference/kernel/ionetworkinterface.h?language=objc			<section class="prog__container"><p></p><pre><code>BPF_FUNC</code></pre></section>	https://developer.apple.com/reference/kernel/ionetworkinterface.h?language=objc
IONetworkInterface	A							https://developer.apple.com/reference/kernel/ionetworkinterface?language=objc			<section class="prog__container"><p>Abstract class that manages the connection between an IONetworkController and the data link interface layer.</p><pre><code>- addNetworkData</code></pre></section>	https://developer.apple.com/reference/kernel/ionetworkinterface?language=objc
IONetworkMedium.h	A							https://developer.apple.com/reference/kernel/ionetworkmedium.h?language=objc			<section class="prog__container"><p></p><pre><code>IOMediumType</code></pre></section>	https://developer.apple.com/reference/kernel/ionetworkmedium.h?language=objc
IONetworkMedium	A							https://developer.apple.com/reference/kernel/ionetworkmedium?language=objc			<section class="prog__container"><p>An object that encapsulates information about a network medium (i.e. 10Base-T, or 100Base-T Full Duplex).</p><pre><code>- addMedium</code></pre></section>	https://developer.apple.com/reference/kernel/ionetworkmedium?language=objc
IONetworkStats.h	A							https://developer.apple.com/reference/kernel/ionetworkstats.h?language=objc			<section class="prog__container"><p>Generic network statistics.</p><pre><code>IONetworkStats</code></pre></section>	https://developer.apple.com/reference/kernel/ionetworkstats.h?language=objc
IONotifier	A							https://developer.apple.com/reference/kernel/ionotifier?language=objc			<section class="prog__container"><p>An abstract base class defining common methods for controlling a notification request.</p><pre><code>- disable</code></pre></section>	https://developer.apple.com/reference/kernel/ionotifier?language=objc
IOOutputQueue.h	A							https://developer.apple.com/reference/kernel/iooutputqueue.h?language=objc			<section class="prog__container"><p></p><pre><code>OutputCommands</code></pre></section>	https://developer.apple.com/reference/kernel/iooutputqueue.h?language=objc
IOOutputQueue	A							https://developer.apple.com/reference/kernel/iooutputqueue?language=objc			<section class="prog__container"><p>A packet queue that supports multiple producers and a single consumer.</p><pre><code>- cancelServiceThread</code></pre></section>	https://developer.apple.com/reference/kernel/iooutputqueue?language=objc
IOPacketQueue	A							https://developer.apple.com/reference/kernel/iopacketqueue?language=objc			<section class="prog__container"><p>Implements a bounded FIFO queue of mbuf packets.</p><pre><code>- dequeue</code></pre></section>	https://developer.apple.com/reference/kernel/iopacketqueue?language=objc
IOPartitionScheme.h	A							https://developer.apple.com/reference/kernel/iopartitionscheme.h?language=objc			<section class="prog__container"><p>This header contains the IOPartitionScheme class definition.</p></section>	https://developer.apple.com/reference/kernel/iopartitionscheme.h?language=objc
IOPartitionScheme	A							https://developer.apple.com/reference/kernel/iopartitionscheme?language=objc			<section class="prog__container"><p>The common base class for all partition scheme objects.</p><pre><code>- copyPhysicalExtent</code></pre></section>	https://developer.apple.com/reference/kernel/iopartitionscheme?language=objc
IOPCIATA	A							https://developer.apple.com/reference/kernel/iopciata?language=objc			<section class="prog__container"><p>The base class for PCI-IDE ata controller family.</p><pre><code>ExpansionData</code></pre></section>	https://developer.apple.com/reference/kernel/iopciata?language=objc
IOPCIDevice	A							https://developer.apple.com/reference/kernel/iopcidevice?language=objc			<section class="prog__container"><p>An IOService class representing a PCI device.</p><pre><code>- configRead16</code></pre></section>	https://developer.apple.com/reference/kernel/iopcidevice?language=objc
IOPM.h	A							https://developer.apple.com/reference/kernel/iopm.h?language=objc			<section class="prog__container"><p>Defines power management constants and keys used by both in-kernel and user space power management.</p><pre><code>IOPMSystemCapabilityChangeParameters</code></pre></section>	https://developer.apple.com/reference/kernel/iopm.h?language=objc
IOPMPowerSource	A							https://developer.apple.com/reference/kernel/iopmpowersource?language=objc			<section class="prog__container"><p></p><pre><code> \n ExternalConnected\n Type: bool\n IORegistry Key: kIOPMPSExternalConnectedKey\n True if computer is drawing external power\n \n ExternalChargeCapable\n Type: bool\n IORegistry Key: kIOPMPSExternalChargeCapableKey\n True if external power is capable of charging internal battery\n \n BatteryInstalled\n Type: bool\n IORegistry Key: kIOPMPSBatteryInstalledKey\n True if a battery is present; false if removed\n \n IsCharging\n Type: bool\n IORegistry Key: kIOPMPSIsChargingKey\n True if battery is charging itself from external power\n \n AtWarnLevel\n Type: bool\n IORegistry Key: kIOPMPSAtWarnLevelKey\n True if draining battery capacity and past warn level\n \n AtCriticalLevel\n Type: bool\n IORegistry Key: kIOPMPSAtCriticalLevelKey\n True if draining battery capacity and past critical level\n \n CurrentCapacity\n MaxCapacity\n Type: unsigned int\n IORegistry Key: kIOPMPSCurrentCapacityKey, kIOPMPSMaxCapacityKey\n Capacity measured in mAh\n \n TimeRemaining\n Type: int\n IORegistry Key: kIOPMPSTimeRemainingKey\n Time remaining measured in minutes\n \n Amperage\n Type: int\n IORegistry Key: kIOPMPSAmperageKey\n Current is measured in mA\n \n Voltage\n Type: unsigned int\n IORegistry Key: kIOPMPSVoltageKey\n Voltage measured in mV\n \n CycleCount\n Type: unsigned int\n IORegistry Key: kIOPMPSCycleCountKey\n Number of charge/discharge cycles\n \n AdapterInfo\n Type: int\n IORegistry Key: kIOPMPSAdapterInfoKey\n Power adapter information\n \n Location\n Type: int\n IORegistry Key: kIOPMPSLocationKey\n Clue about battery's location in machine - Left vs. Right\n \n ErrorCondition\n Type: OSSymbol\n IORegistry Key: kIOPMPSErrorConditionKey\n String describing error state of battery\n \n Manufacturer\n Type: OSSymbol\n IORegistry Key: kIOPMPSManufacturerKey\n String describing battery manufacturer\n \n Manufactured Date\n Type: unsigned 16-bit bitfield\n IORegistry Key: kIOPMPSManufactureDateKey\n Date is published in a bitfield per the Smart Battery Data spec rev 1.1\n in section 5.1.26\n  Bits 0...4 => day (value 1-31; 5 bits)\n  Bits 5...8 => month (value 1-12; 4 bits)\n  Bits 9...15 => years since 1980 (value 0-127; 7 bits)\n \n Model\n Type: OSSymbol\n IORegistry Key: kIOPMPSModelKey\n String describing model number\n \n Serial\n Type: OSSymbol\n IORegistry Key: kIOPMPSSerialKey\n String describing serial number or unique info\n The serial number published hear bears no correspondence to the Apple serial\n number printed on each battery. This is a manufacturer serial number with\n no correlation to the printed serial number.\n \n LegacyIOBatteryInfo\n Type: OSDictionary\n IORegistry Key: kIOPMPSLegacyBatteryInfoKey\n Dictionary conforming to the OS X 10.0-10.4\n \n</code></pre></section>	https://developer.apple.com/reference/kernel/iopmpowersource?language=objc
IOPMpowerState.h	A							https://developer.apple.com/reference/kernel/iopmpowerstate.h?language=objc			<section class="prog__container"><p>Defines the struct IOPMPowerState that power managed drivers should use to describe their power states.</p><pre><code>IOPMPowerState</code></pre></section>	https://developer.apple.com/reference/kernel/iopmpowerstate.h?language=objc
IOPowerConnection	A							https://developer.apple.com/reference/kernel/iopowerconnection?language=objc			<section class="prog__container"><p></p><pre><code>- childHasRequestedPower</code></pre></section>	https://developer.apple.com/reference/kernel/iopowerconnection?language=objc
IORangeAllocator	A							https://developer.apple.com/reference/kernel/iorangeallocator?language=objc			<section class="prog__container"><p>A utility class to manage allocations from a range.</p><pre><code>- allocate</code></pre></section>	https://developer.apple.com/reference/kernel/iorangeallocator?language=objc
IORegistryEntry	A							https://developer.apple.com/reference/kernel/ioregistryentry?language=objc			<section class="prog__container"><p>The base class for all objects in the registry.</p><pre><code>- attachToChild</code></pre></section>	https://developer.apple.com/reference/kernel/ioregistryentry?language=objc
IORegistryIterator	A							https://developer.apple.com/reference/kernel/ioregistryiterator?language=objc			<section class="prog__container"><p>An iterator over the registry.</p><pre><code>- enterEntry()</code></pre></section>	https://developer.apple.com/reference/kernel/ioregistryiterator?language=objc
IORemoteConfigDirectory	A							https://developer.apple.com/reference/kernel/ioremoteconfigdirectory?language=objc			<section class="prog__container"><p></p><pre><code>- update</code></pre></section>	https://developer.apple.com/reference/kernel/ioremoteconfigdirectory?language=objc
IOReportTypes.h	A							https://developer.apple.com/reference/kernel/ioreporttypes.h?language=objc			<section class="prog__container"><p></p><pre><code>__IOR_lshiftchr</code></pre></section>	https://developer.apple.com/reference/kernel/ioreporttypes.h?language=objc
IOSCSIParallelInterfaceController	A							https://developer.apple.com/reference/kernel/ioscsiparallelinterfacecontroller?language=objc			<section class="prog__container"><p>Class that represents a SCSI Host Bus Adapter.</p><pre><code>- CompleteParallelTask</code></pre></section>	https://developer.apple.com/reference/kernel/ioscsiparallelinterfacecontroller?language=objc
IOSCSIProtocolInterface.h	A							https://developer.apple.com/reference/kernel/ioscsiprotocolinterface.h?language=objc			<section class="prog__container"><p>This file contains definitions for the IOSCSIProtocolInterface class, SCSI Protocol Features used by this interface, and additional constants used by this interface.</p><pre><code>SCSIProtocolFeature</code></pre></section>	https://developer.apple.com/reference/kernel/ioscsiprotocolinterface.h?language=objc
IOSCSIProtocolInterface	A							https://developer.apple.com/reference/kernel/ioscsiprotocolinterface?language=objc			<section class="prog__container"><p>This class defines the public SCSI Protocol Layer API for any class that provides Protocol services or needs to provide the Protocol Service API for passing service requests to a Protocol Service driver.</p><pre><code>- AbortCommand</code></pre></section>	https://developer.apple.com/reference/kernel/ioscsiprotocolinterface?language=objc
IOSCSIProtocolServices	A							https://developer.apple.com/reference/kernel/ioscsiprotocolservices?language=objc			<section class="prog__container"><p>This class defines the public SCSI Protocol Services Layer API for any class that implements SCSI protocol services. A protocol services layer driver is responsible for taking incoming SCSITaskIdentifier objects and translating them to the native command type for the native protocol interface (e.g. SBP-2 ORB on FireWire).</p><pre><code>- AbortCommand</code></pre></section>	https://developer.apple.com/reference/kernel/ioscsiprotocolservices?language=objc
IOService.h	A							https://developer.apple.com/reference/kernel/ioservice.h?language=objc			<section class="prog__container"><p>This header contains the definition of the IOService class. IOService is the sole direct subclass of IORegistryEntry and is the base class of almost all I/O Kit family superclasses. IOService defines methods that support the life cycle of I/O Kit drivers. For more information on IOService, see IOKit Fundamentals.</p><pre><code>IORegistryEntry</code></pre></section>	https://developer.apple.com/reference/kernel/ioservice.h?language=objc
IOService	A							https://developer.apple.com/reference/kernel/ioservice?language=objc			<section class="prog__container"><p>The base class for most I/O Kit families, devices, and drivers.</p><pre><code>kIOProbeScoreKey</code></pre></section>	https://developer.apple.com/reference/kernel/ioservice?language=objc
IOSharedDataQueue	A							https://developer.apple.com/reference/kernel/ioshareddataqueue?language=objc			<section class="prog__container"><p>A generic queue designed to pass data both from the kernel to a user process and from a user process to the kernel.</p><pre><code>- dequeue</code></pre></section>	https://developer.apple.com/reference/kernel/ioshareddataqueue?language=objc
IOStorage.h	A							https://developer.apple.com/reference/kernel/iostorage.h?language=objc			<section class="prog__container"><p>This header contains the IOStorage class definition.</p><pre><code>IOStorageCompletionAction</code></pre></section>	https://developer.apple.com/reference/kernel/iostorage.h?language=objc
IOStorage	A							https://developer.apple.com/reference/kernel/iostorage?language=objc			<section class="prog__container"><p>The common base class for mass storage objects.</p><pre><code>- complete</code></pre></section>	https://developer.apple.com/reference/kernel/iostorage?language=objc
IOStorageCardCharacteristics.h	A							https://developer.apple.com/reference/kernel/iostoragecardcharacteristics.h?language=objc			<section class="prog__container"><p></p></section>	https://developer.apple.com/reference/kernel/iostoragecardcharacteristics.h?language=objc
IOStorageDeviceCharacteristics.h	A							https://developer.apple.com/reference/kernel/iostoragedevicecharacteristics.h?language=objc			<section class="prog__container"><p></p></section>	https://developer.apple.com/reference/kernel/iostoragedevicecharacteristics.h?language=objc
IOStorageProtocolCharacteristics.h	A							https://developer.apple.com/reference/kernel/iostorageprotocolcharacteristics.h?language=objc			<section class="prog__container"><p></p></section>	https://developer.apple.com/reference/kernel/iostorageprotocolcharacteristics.h?language=objc
IOStream	A							https://developer.apple.com/reference/kernel/iostream?language=objc			<section class="prog__container"><p>A class representing a stream of data buffers passed from kernel to user space and back again.</p><pre><code>- getStreamMode</code></pre></section>	https://developer.apple.com/reference/kernel/iostream?language=objc
IOStreamBuffer	A							https://developer.apple.com/reference/kernel/iostreambuffer?language=objc			<section class="prog__container"><p>A class representing a data buffer that is part of an IOStream.</p><pre><code>- getBufferID</code></pre></section>	https://developer.apple.com/reference/kernel/iostreambuffer?language=objc
IOStreamShared.h	A							https://developer.apple.com/reference/kernel/iostreamshared.h?language=objc			<section class="prog__container"><p>IOStream definitions shared between kernel and user space.</p><pre><code>IOStreamBufferID</code></pre></section>	https://developer.apple.com/reference/kernel/iostreamshared.h?language=objc
IOSubMemoryDescriptor	A							https://developer.apple.com/reference/kernel/iosubmemorydescriptor?language=objc			<section class="prog__container"><p>The IOSubMemoryDescriptor object describes a memory area made up of a portion of another IOMemoryDescriptor.</p><pre><code>- withSubRange</code></pre></section>	https://developer.apple.com/reference/kernel/iosubmemorydescriptor?language=objc
IOTimerEventSource	A							https://developer.apple.com/reference/kernel/iotimereventsource?language=objc			<section class="prog__container"><p>Time based event source mechanism.</p><pre><code>- cancelTimeout</code></pre></section>	https://developer.apple.com/reference/kernel/iotimereventsource?language=objc
IOTypes.h	A							https://developer.apple.com/reference/kernel/iotypes.h?language=objc			<section class="prog__container"><p></p></section>	https://developer.apple.com/reference/kernel/iotypes.h?language=objc
IOUSBCompositeDriver	A							https://developer.apple.com/reference/kernel/iousbcompositedriver?language=objc			<section class="prog__container"><p>Driver that matches to USB composite devices.</p><pre><code>- ConfigureDevicePowerManagement</code></pre></section>	https://developer.apple.com/reference/kernel/iousbcompositedriver?language=objc
IOUSBController.h	A							https://developer.apple.com/reference/kernel/iousbcontroller.h?language=objc			<section class="prog__container"><p></p><pre><code>ErrataListEntryStruct</code></pre></section>	https://developer.apple.com/reference/kernel/iousbcontroller.h?language=objc
IOUSBController	A							https://developer.apple.com/reference/kernel/iousbcontroller?language=objc			<section class="prog__container"><p>Base class for USB hardware driver</p><pre><code>- abortPipe</code></pre></section>	https://developer.apple.com/reference/kernel/iousbcontroller?language=objc
IOUSBControllerV2	A							https://developer.apple.com/reference/kernel/iousbcontrollerv2?language=objc			<section class="prog__container"><p>subclass of the IOUSBController to provide support for high speed devices and split transactions.</p><pre><code>- ConfigureDeviceZero</code></pre></section>	https://developer.apple.com/reference/kernel/iousbcontrollerv2?language=objc
IOUSBControllerV3	A							https://developer.apple.com/reference/kernel/iousbcontrollerv3?language=objc			<section class="prog__container"><p>subclass of the IOUSBControllerV2 to provide support for new USB Power Management techniques.</p><pre><code>- GetRootHub3Descriptor</code></pre></section>	https://developer.apple.com/reference/kernel/iousbcontrollerv3?language=objc
IOUSBDevice	A							https://developer.apple.com/reference/kernel/iousbdevice?language=objc			<section class="prog__container"><p>The IOService object representing a device on the USB bus.</p><pre><code>- CreateInterfaceIterator</code></pre></section>	https://developer.apple.com/reference/kernel/iousbdevice?language=objc
IOUSBHIDDriver	A							https://developer.apple.com/reference/kernel/iousbhiddriver?language=objc			<section class="prog__container"><p>Driver that matches to USB HID devices.</p><pre><code>- SuspendPort</code></pre></section>	https://developer.apple.com/reference/kernel/iousbhiddriver?language=objc
IOUSBHubDevice	A							https://developer.apple.com/reference/kernel/iousbhubdevice?language=objc			<section class="prog__container"><p>New in OS X 10.5. The IOKit object representing a hub device on the USB bus. It is a subclass of IOUSBDevice.</p><pre><code>- GetHubCharacteristics</code></pre></section>	https://developer.apple.com/reference/kernel/iousbhubdevice?language=objc
IOUSBInterface	A							https://developer.apple.com/reference/kernel/iousbinterface?language=objc			<section class="prog__container"><p>The object representing an interface of a device on the USB bus.</p><pre><code>- DeviceRequest(IOUSBDevRequest *, IOUSBCompletion *)</code></pre></section>	https://developer.apple.com/reference/kernel/iousbinterface?language=objc
IOUSBPipe	A							https://developer.apple.com/reference/kernel/iousbpipe?language=objc			<section class="prog__container"><p>The object representing an open pipe for a device.</p><pre><code>- Abort</code></pre></section>	https://developer.apple.com/reference/kernel/iousbpipe?language=objc
IOUSBPipeV2	A							https://developer.apple.com/reference/kernel/iousbpipev2?language=objc			<section class="prog__container"><p>The object representing an open pipe for a device.</p><pre><code>- Abort</code></pre></section>	https://developer.apple.com/reference/kernel/iousbpipev2?language=objc
IOUserClient.h	A							https://developer.apple.com/reference/kernel/iouserclient.h?language=objc			<section class="prog__container"><p></p><pre><code>kIOExternalMethodScalarInputCountMax</code></pre></section>	https://developer.apple.com/reference/kernel/iouserclient.h?language=objc
IOUserClient	A							https://developer.apple.com/reference/kernel/iouserclient?language=objc			<section class="prog__container"><p>Provides a basis for communication between client applications and I/O Kit objects.</p><pre><code>- exportObjectToClient</code></pre></section>	https://developer.apple.com/reference/kernel/iouserclient?language=objc
IOVideoDevice	A							https://developer.apple.com/reference/kernel/iovideodevice?language=objc			<section class="prog__container"><p>A class that represents a video device.</p><pre><code>- getStream</code></pre></section>	https://developer.apple.com/reference/kernel/iovideodevice?language=objc
IOVideoDeviceInterface	A							https://developer.apple.com/reference/kernel/iovideodeviceinterface?language=objc			<section class="prog__container"><p>Interface for accessing kernel-space video drivers from user space.</p><pre><code>AddToRunLoop</code></pre></section>	https://developer.apple.com/reference/kernel/iovideodeviceinterface?language=objc
IOVideoDeviceLib.h	A							https://developer.apple.com/reference/kernel/iovideodevicelib.h?language=objc			<section class="prog__container"><p></p><pre><code>IOVideoDeviceNotificationCallback</code></pre></section>	https://developer.apple.com/reference/kernel/iovideodevicelib.h?language=objc
IOVideoDeviceShared.h	A							https://developer.apple.com/reference/kernel/iovideodeviceshared.h?language=objc			<section class="prog__container"><p>IOVideoDevice definitions shared between kernel and user space.</p></section>	https://developer.apple.com/reference/kernel/iovideodeviceshared.h?language=objc
IOVideoDeviceUserClient.h	A							https://developer.apple.com/reference/kernel/iovideodeviceuserclient.h?language=objc			<section class="prog__container"><p></p></section>	https://developer.apple.com/reference/kernel/iovideodeviceuserclient.h?language=objc
IOVideoStream	A							https://developer.apple.com/reference/kernel/iovideostream?language=objc			<section class="prog__container"><p>A class representing a stream of video data buffers passed from kernel to user space and back again.</p><pre><code>- getStreamMode</code></pre></section>	https://developer.apple.com/reference/kernel/iovideostream?language=objc
IOVideoTypes.h	A							https://developer.apple.com/reference/kernel/iovideotypes.h?language=objc			<section class="prog__container"><p></p><pre><code>IOVideoNotification</code></pre></section>	https://developer.apple.com/reference/kernel/iovideotypes.h?language=objc
IOWorkLoop	A							https://developer.apple.com/reference/kernel/ioworkloop?language=objc			<section class="prog__container"><p></p><pre><code>- _maintRequest</code></pre></section>	https://developer.apple.com/reference/kernel/ioworkloop?language=objc
kern_control.h	A							https://developer.apple.com/reference/kernel/kern_control.h?language=objc			<section class="prog__container"><p>This header defines an API to communicate between a kernel extension and a process outside of the kernel.</p><pre><code>ctl_deregister</code></pre></section>	https://developer.apple.com/reference/kernel/kern_control.h?language=objc
kern_event.h	A							https://developer.apple.com/reference/kernel/kern_event.h?language=objc			<section class="prog__container"><p>This header defines in-kernel functions for generating kernel events as well as functions for receiving kernel events using a kernel event socket.</p><pre><code>kev_msg_post</code></pre></section>	https://developer.apple.com/reference/kernel/kern_event.h?language=objc
kpi_interface.h	A							https://developer.apple.com/reference/kernel/kpi_interface.h?language=objc			<section class="prog__container"><p>This header defines an API to interact with network interfaces in the kernel. The network interface KPI may be used to implement network interfaces or to attach protocols to existing interfaces.</p><pre><code>ifaddr_address</code></pre></section>	https://developer.apple.com/reference/kernel/kpi_interface.h?language=objc
kpi_interfacefilter.h	A							https://developer.apple.com/reference/kernel/kpi_interfacefilter.h?language=objc			<section class="prog__container"><p>This header defines an API to attach interface filters. Interface filters may be attached to a specific interface. The filters can intercept all packets in to and out of the specific interface. In addition, the filters may intercept interface specific events and ioctls.</p><pre><code>iflt_attach</code></pre></section>	https://developer.apple.com/reference/kernel/kpi_interfacefilter.h?language=objc
kpi_ipfilter.h	A							https://developer.apple.com/reference/kernel/kpi_ipfilter.h?language=objc			<section class="prog__container"><p>This header defines an API to attach IP filters. IP filters may be attached to intercept either IPv4 or IPv6 packets. The filters can intercept all IP packets in to and out of the host regardless of interface.</p><pre><code>ipf_addv4</code></pre></section>	https://developer.apple.com/reference/kernel/kpi_ipfilter.h?language=objc
kpi_mbuf.h	A							https://developer.apple.com/reference/kernel/kpi_mbuf.h?language=objc			<section class="prog__container"><p></p><pre><code>mbuf_adj</code></pre></section>	https://developer.apple.com/reference/kernel/kpi_mbuf.h?language=objc
kpi_protocol.h	A							https://developer.apple.com/reference/kernel/kpi_protocol.h?language=objc			<section class="prog__container"><p>This header defines an API to interact with protocols in the kernel. The KPIs in this header file can be used to interact with protocols that already exist in the stack. These KPIs can be used to support existing protocols over media types that are not natively supported in the kernel, such as ATM.</p><pre><code>proto_inject</code></pre></section>	https://developer.apple.com/reference/kernel/kpi_protocol.h?language=objc
kpi_socket.h	A							https://developer.apple.com/reference/kernel/kpi_socket.h?language=objc			<section class="prog__container"><p>This header defines an API for creating and interacting with sockets in the kernel. It is possible to create sockets in the kernel without an associated file descriptor. In some cases, a reference to the socket may be known while the file descriptor is not. These functions can be used for interacting with sockets in the kernel. The API is similar to the user space socket API.</p><pre><code>sock_accept</code></pre></section>	https://developer.apple.com/reference/kernel/kpi_socket.h?language=objc
kpi_socketfilter.h	A							https://developer.apple.com/reference/kernel/kpi_socketfilter.h?language=objc			<section class="prog__container"><p></p><pre><code>sflt_attach</code></pre></section>	https://developer.apple.com/reference/kernel/kpi_socketfilter.h?language=objc
mac_data.h	A							https://developer.apple.com/reference/kernel/mac_data.h?language=objc			<section class="prog__container"><p></p><pre><code>mac_module_data_element</code></pre></section>	https://developer.apple.com/reference/kernel/mac_data.h?language=objc
mac_policy.h	A							https://developer.apple.com/reference/kernel/mac_policy.h?language=objc			<section class="prog__container"><p>Kernel Interfaces for MAC policy modules</p><pre><code>mac_policy_register</code></pre></section>	https://developer.apple.com/reference/kernel/mac_policy.h?language=objc
mount.h	A							https://developer.apple.com/reference/kernel/mount.h?language=objc			<section class="prog__container"><p></p><pre><code>vfs_64bitready</code></pre></section>	https://developer.apple.com/reference/kernel/mount.h?language=objc
OSArray	A							https://developer.apple.com/reference/kernel/osarray?language=objc			<section class="prog__container"><p>OSArray provides an indexed store of objects.</p><pre><code>OSObject</code></pre></section>	https://developer.apple.com/reference/kernel/osarray?language=objc
OSAtomic.h	A							https://developer.apple.com/reference/kernel/osatomic.h?language=objc			<section class="prog__container"><p>This header declares the OSAtomic group of functions for atomic reading and updating of values.</p><pre><code>OSAddAtomic</code></pre></section>	https://developer.apple.com/reference/kernel/osatomic.h?language=objc
OSBoolean.h	A							https://developer.apple.com/reference/kernel/osboolean.h?language=objc			<section class="prog__container"><p>This header declares the OSBoolean container class.</p></section>	https://developer.apple.com/reference/kernel/osboolean.h?language=objc
OSBoolean	A							https://developer.apple.com/reference/kernel/osboolean?language=objc			<section class="prog__container"><p>OSBoolean wraps a boolean value in a C++ object for use in Libkern collections.</p><pre><code>true</code></pre></section>	https://developer.apple.com/reference/kernel/osboolean?language=objc
OSCollection	A							https://developer.apple.com/reference/kernel/oscollection?language=objc			<section class="prog__container"><p>The abstract superclass for Libkern collections.</p><pre><code>- copyCollection</code></pre></section>	https://developer.apple.com/reference/kernel/oscollection?language=objc
OSCollectionIterator	A							https://developer.apple.com/reference/kernel/oscollectioniterator?language=objc			<section class="prog__container"><p></p><pre><code>getNextObject</code></pre></section>	https://developer.apple.com/reference/kernel/oscollectioniterator?language=objc
OSData	A							https://developer.apple.com/reference/kernel/osdata?language=objc			<section class="prog__container"><p>OSData wraps an array of bytes in a C++ object for use in Libkern collections.</p><pre><code>- appendByte</code></pre></section>	https://developer.apple.com/reference/kernel/osdata?language=objc
OSDebug.h	A							https://developer.apple.com/reference/kernel/osdebug.h?language=objc			<section class="prog__container"><p></p><pre><code>OSKernelStackRemaining</code></pre></section>	https://developer.apple.com/reference/kernel/osdebug.h?language=objc
OSDictionary	A							https://developer.apple.com/reference/kernel/osdictionary?language=objc			<section class="prog__container"><p>OSDictionary provides an associative store using strings for keys.</p><pre><code>OSString</code></pre></section>	https://developer.apple.com/reference/kernel/osdictionary?language=objc
OSEndianTypes.h	A							https://developer.apple.com/reference/kernel/osendiantypes.h?language=objc			<section class="prog__container"><p>C++ inline types for byte-swapping.</p><pre><code>UInt32</code></pre></section>	https://developer.apple.com/reference/kernel/osendiantypes.h?language=objc
OSIterator	A							https://developer.apple.com/reference/kernel/ositerator?language=objc			<section class="prog__container"><p>The abstract superclass for Libkern iterators.</p><pre><code>- getNextObject</code></pre></section>	https://developer.apple.com/reference/kernel/ositerator?language=objc
OSKextLib.h	A							https://developer.apple.com/reference/kernel/oskextlib.h?language=objc			<section class="prog__container"><p>Declares functions, basic return values, and other constants related to kernel extensions (kexts).</p><pre><code>OSKextSymbolIsResolved</code></pre></section>	https://developer.apple.com/reference/kernel/oskextlib.h?language=objc
OSMalloc.h	A							https://developer.apple.com/reference/kernel/osmalloc.h?language=objc			<section class="prog__container"><p>This header declares the OSMalloc memory-allocation KPI.</p><pre><code>OSFree</code></pre></section>	https://developer.apple.com/reference/kernel/osmalloc.h?language=objc
OSMetaClassBase	A							https://developer.apple.com/reference/kernel/osmetaclassbase?language=objc			<section class="prog__container"><p>OSMetaClassBase is the abstract bootstrap class for the Libkern and I/O Kit run-time type information system.</p><pre><code>OSCheckTypeInst</code></pre></section>	https://developer.apple.com/reference/kernel/osmetaclassbase?language=objc
OSNumber	A							https://developer.apple.com/reference/kernel/osnumber?language=objc			<section class="prog__container"><p>OSNumber wraps an integer value in a C++ object for use in Libkern collections.</p><pre><code>- addValue</code></pre></section>	https://developer.apple.com/reference/kernel/osnumber?language=objc
OSObject	A							https://developer.apple.com/reference/kernel/osobject?language=objc			<section class="prog__container"><p>OSObject is the concrete root class of the Libkern and I/O Kit C++ class hierarchy.</p><pre><code>new</code></pre></section>	https://developer.apple.com/reference/kernel/osobject?language=objc
OSOrderedSet	A							https://developer.apple.com/reference/kernel/osorderedset?language=objc			<section class="prog__container"><p>OSOrderedSet provides an ordered set store of objects.</p><pre><code>- containsObject</code></pre></section>	https://developer.apple.com/reference/kernel/osorderedset?language=objc
OSReturn.h	A							https://developer.apple.com/reference/kernel/osreturn.h?language=objc			<section class="prog__container"><p>Declares functions, basic return values, and other constants related to kernel extensions (kexts).</p><pre><code>OSReturn</code></pre></section>	https://developer.apple.com/reference/kernel/osreturn.h?language=objc
OSSerialize	A							https://developer.apple.com/reference/kernel/osserialize?language=objc			<section class="prog__container"><p>OSSerialize coordinates serialization of Libkern C++ objects into an XML stream.</p><pre><code>- addChar</code></pre></section>	https://developer.apple.com/reference/kernel/osserialize?language=objc
OSSet	A							https://developer.apple.com/reference/kernel/osset?language=objc			<section class="prog__container"><p>OSSet provides an unordered set store of objects.</p><pre><code>- containsObject</code></pre></section>	https://developer.apple.com/reference/kernel/osset?language=objc
OSString	A							https://developer.apple.com/reference/kernel/osstring?language=objc			<section class="prog__container"><p>OSString wraps a C string in a C++ object for use in Libkern collections.</p><pre><code>- free</code></pre></section>	https://developer.apple.com/reference/kernel/osstring?language=objc
OSSymbol	A							https://developer.apple.com/reference/kernel/ossymbol?language=objc			<section class="prog__container"><p>OSSymbol wraps a C string in a unique C++ object for use as keys in Libkern collections.</p><pre><code>- free</code></pre></section>	https://developer.apple.com/reference/kernel/ossymbol?language=objc
OSUnserialize.h	A							https://developer.apple.com/reference/kernel/osunserialize.h?language=objc			<section class="prog__container"><p>This header declares the OSUnserializeXML function.</p><pre><code>OSUnserializeXML</code></pre></section>	https://developer.apple.com/reference/kernel/osunserialize.h?language=objc
pmc.h	A							https://developer.apple.com/reference/kernel/pmc.h?language=objc			<section class="prog__container"><p></p><pre><code>pmc_reservation</code></pre></section>	https://developer.apple.com/reference/kernel/pmc.h?language=objc
proc.h	A							https://developer.apple.com/reference/kernel/proc.h?language=objc			<section class="prog__container"><p></p><pre><code>proc_pgrpid</code></pre></section>	https://developer.apple.com/reference/kernel/proc.h?language=objc
RootDomain.h	A							https://developer.apple.com/reference/kernel/rootdomain.h?language=objc			<section class="prog__container"><p></p><pre><code>copyPMSetting</code></pre></section>	https://developer.apple.com/reference/kernel/rootdomain.h?language=objc
SCSICmds_INQUIRY_Definitions.h	A							https://developer.apple.com/reference/kernel/scsicmds_inquiry_definitions.h?language=objc			<section class="prog__container"><p>This file contains all definitions for the data returned from the INQUIRY (0x12) command.</p><pre><code>SCSICmd_INQUIRY_Page00_Header</code></pre></section>	https://developer.apple.com/reference/kernel/scsicmds_inquiry_definitions.h?language=objc
SCSICmds_MODE_Definitions.h	A							https://developer.apple.com/reference/kernel/scsicmds_mode_definitions.h?language=objc			<section class="prog__container"><p>This file contains all definitions for the data returned from the MODE_SENSE_6 and MODE_SENSE_10 commands.</p><pre><code>DASDModeParameterBlockDescriptor</code></pre></section>	https://developer.apple.com/reference/kernel/scsicmds_mode_definitions.h?language=objc
SCSICmds_READ_CAPACITY_Definitions.h	A							https://developer.apple.com/reference/kernel/scsicmds_read_capacity_definitions.h?language=objc			<section class="prog__container"><p>This file contains all definitions for the data returned from the READ CAPACITY 10 (0x25) and READ CAPACITY 16 (0x9E) commands.</p><pre><code>SCSI_Capacity_Data</code></pre></section>	https://developer.apple.com/reference/kernel/scsicmds_read_capacity_definitions.h?language=objc
SCSICmds_REPORT_LUNS_Definitions.h	A							https://developer.apple.com/reference/kernel/scsicmds_report_luns_definitions.h?language=objc			<section class="prog__container"><p>This file contains all definitions for the data returned from the REPORT_LUNS (0xA0) command.</p><pre><code>REPORT_LUNS_LOGICAL_UNIT_ADDRESSING</code></pre></section>	https://developer.apple.com/reference/kernel/scsicmds_report_luns_definitions.h?language=objc
SCSICmds_REQUEST_SENSE_Defs.h	A							https://developer.apple.com/reference/kernel/scsicmds_request_sense_defs.h?language=objc			<section class="prog__container"><p>This file contains all definitions for the data returned from the REQUEST SENSE (0x03) command and from auto sense on protocols that support it.</p><pre><code>SCSI_Sense_Data</code></pre></section>	https://developer.apple.com/reference/kernel/scsicmds_request_sense_defs.h?language=objc
SCSICommandDefinitions.h	A							https://developer.apple.com/reference/kernel/scsicommanddefinitions.h?language=objc			<section class="prog__container"><p></p><pre><code>SCSICmdField10Bit</code></pre></section>	https://developer.apple.com/reference/kernel/scsicommanddefinitions.h?language=objc
SCSIPort.h	A							https://developer.apple.com/reference/kernel/scsiport.h?language=objc			<section class="prog__container"><p>This file contains all the definitions for SCSIPort notifications and status.</p><pre><code>SCSIPortStatus</code></pre></section>	https://developer.apple.com/reference/kernel/scsiport.h?language=objc
SCSITask.h	A							https://developer.apple.com/reference/kernel/scsitask.h?language=objc			<section class="prog__container"><p></p><pre><code>SCSITaskCompletion</code></pre></section>	https://developer.apple.com/reference/kernel/scsitask.h?language=objc
security.defs	A							https://developer.apple.com/reference/kernel/security.defs?language=objc			<section class="prog__container"><p></p><pre><code>mac_check_service</code></pre></section>	https://developer.apple.com/reference/kernel/security.defs?language=objc
thread.h	A							https://developer.apple.com/reference/kernel/thread.h?language=objc			<section class="prog__container"><p></p><pre><code>kernel_thread_start</code></pre></section>	https://developer.apple.com/reference/kernel/thread.h?language=objc
thread_call.h	A							https://developer.apple.com/reference/kernel/thread_call.h?language=objc			<section class="prog__container"><p>Facilities for executing work asynchronously.</p><pre><code>thread_call_allocate</code></pre></section>	https://developer.apple.com/reference/kernel/thread_call.h?language=objc
USB.h	A							https://developer.apple.com/reference/kernel/usb.h?language=objc			<section class="prog__container"><p></p><pre><code>iokit_usb_err</code></pre></section>	https://developer.apple.com/reference/kernel/usb.h?language=objc
USBHub.h	A							https://developer.apple.com/reference/kernel/usbhub.h?language=objc			<section class="prog__container"><p>Constants and definitions used with Hub devices.</p><pre><code>IOUSBHubPortReEnumerateParam</code></pre></section>	https://developer.apple.com/reference/kernel/usbhub.h?language=objc
USBSpec.h	A							https://developer.apple.com/reference/kernel/usbspec.h?language=objc			<section class="prog__container"><p></p></section>	https://developer.apple.com/reference/kernel/usbspec.h?language=objc
vnode.h	A							https://developer.apple.com/reference/kernel/vnode.h?language=objc			<section class="prog__container"><p></p><pre><code>cache_enter</code></pre></section>	https://developer.apple.com/reference/kernel/vnode.h?language=objc
vnode_if.h	A							https://developer.apple.com/reference/kernel/vnode_if.h?language=objc			<section class="prog__container"><p></p><pre><code>VNOP_BWRITE</code></pre></section>	https://developer.apple.com/reference/kernel/vnode_if.h?language=objc
LatentSemanticMapping.h	A							https://developer.apple.com/reference/latentsemanticmapping/latentsemanticmapping.h			<section class="prog__container"><p>Semantic Mapping This framework classifies texts based on latent semantic information.</p><pre><code>func LSMMapAddCategory(LSMMap)</code></pre></section>	https://developer.apple.com/reference/latentsemanticmapping/latentsemanticmapping.h
LAContext	A							https://developer.apple.com/reference/localauthentication/lacontext			<section class="prog__container"><p>An LAContext object represents an authentication context. The LAContext class provides a programmatic interface for evaluating authentication policies and access controls, managing credentials, and invalidating authentication contexts.</p><pre><code>LAContext</code></pre></section>	https://developer.apple.com/reference/localauthentication/lacontext
MapKit Constants	A							https://developer.apple.com/reference/mapkit/mapkit_constants			<section class="prog__container"><p>This document describes the constants found in the Map Kit framework</p><pre><code>MKError.Code</code></pre></section>	https://developer.apple.com/reference/mapkit/mapkit_constants
MapKit Data Types	A							https://developer.apple.com/reference/mapkit/mapkit_data_types			<section class="prog__container"><p>This document describes the data types found in the Map Kit framework.</p><pre><code>MKCoordinateRegion</code></pre></section>	https://developer.apple.com/reference/mapkit/mapkit_data_types
MapKit Functions	A							https://developer.apple.com/reference/mapkit/mapkit_functions			<section class="prog__container"><p>The functions of the MapKit framework provide convenient ways to package map-related data structures. </p><pre><code>func MKCoordinateSpanMake(CLLocationDegrees, CLLocationDegrees)</code></pre></section>	https://developer.apple.com/reference/mapkit/mapkit_functions
MKAnnotation	A							https://developer.apple.com/reference/mapkit/mkannotation			<section class="prog__container"><p>The MKAnnotation protocol is used to provide annotation-related information to a map view. To use this protocol, you adopt it in any custom objects that store or represent annotation data. Each object then serves as the source of information about a single map annotation and provides critical information, such as the annotation’s location on the map. Annotation objects do not provide the visual representation of the annotation but typically coordinate (in conjunction with the map view’s delegate) the creation of an appropriate MKAnnotationView object to handle the display.</p><pre><code>MKAnnotation</code></pre></section>	https://developer.apple.com/reference/mapkit/mkannotation
MKAnnotationView	A							https://developer.apple.com/reference/mapkit/mkannotationview			<section class="prog__container"><p>The MKAnnotationView class is responsible for presenting annotations visually in a map view. Annotation views are loosely coupled to a corresponding annotation object, which is an object that corresponds to the MKAnnotation protocol. When an annotation’s coordinate point is in the visible region, the map view asks its delegate to provide a corresponding annotation view. Annotation views may be recycled later and put into a reuse queue that is maintained by the map view. </p><pre><code>MKAnnotationView</code></pre></section>	https://developer.apple.com/reference/mapkit/mkannotationview
MKCircle	A							https://developer.apple.com/reference/mapkit/mkcircle			<section class="prog__container"><p>The MKCircle class is a concrete overlay object representing a circular area on a map. This class manages the data that defines the area and is typically used in conjunction with an MKCircleView object, which handles the drawing of the circular area on a map.</p><pre><code>MKCircle</code></pre></section>	https://developer.apple.com/reference/mapkit/mkcircle
MKCircleRenderer	A							https://developer.apple.com/reference/mapkit/mkcirclerenderer			<section class="prog__container"><p>The MKCircleRenderer class provides a visual representation for an MKCircle overlay object. This renderer draws by filling and stroking the circle represented by the overlay object. You can change the color and other drawing attributes of the circle by modifying the properties inherited from the parent class. You typically use this class as is and do not subclass it. </p><pre><code>MKCircleRenderer</code></pre></section>	https://developer.apple.com/reference/mapkit/mkcirclerenderer
MKCircleView	A							https://developer.apple.com/reference/mapkit/mkcircleview			<section class="prog__container"><p>The MKCircleView class provides the visual representation for an MKCircle annotation object. This view fills and strokes the circle represented by the annotation. You can change the color and other drawing attributes of the circle by modifying the properties inherited from the MKOverlayPathView class. This class is typically used as is and not subclassed. </p><pre><code>MKCircleView</code></pre></section>	https://developer.apple.com/reference/mapkit/mkcircleview
MKDirections	A							https://developer.apple.com/reference/mapkit/mkdirections			<section class="prog__container"><p>An MKDirections object provides you with route-based directions data from Apple servers. You can use instances of this class to get travel-time information or driving or walking directions based on the data in an MKDirectionsRequest object that you provide. The directions object passes your request to the Apple servers and returns the requested information to a block that you provide.</p><pre><code>MKDirections</code></pre></section>	https://developer.apple.com/reference/mapkit/mkdirections
MKDirectionsRequest	A							https://developer.apple.com/reference/mapkit/mkdirectionsrequest			<section class="prog__container"><p>The MKDirectionsRequest class is used by apps that work with turn-based directions. When the Maps app sends a directions-related URL to your app, you use this class to decode the URL contents and determine the start and end points of a route. You then use that data to compute the actual route and display the results to the user. For apps that want to supplement their own routing directions, you can also use instances of this class to specify route information that you want from Apple.</p><pre><code>MKDirectionsRequest</code></pre></section>	https://developer.apple.com/reference/mapkit/mkdirectionsrequest
MKDirectionsResponse	A							https://developer.apple.com/reference/mapkit/mkdirectionsresponse			<section class="prog__container"><p>The MKDirectionsResponse class provides a container for route information returned by the Apple servers. You do not create instances of this class directly. Instead, you initiate a request for directions between two points by calling the calculate(completionHandler:) method of an MKDirections object. You receive an instance of this class as the result. </p><pre><code>MKDirectionsResponse</code></pre></section>	https://developer.apple.com/reference/mapkit/mkdirectionsresponse
MKDistanceFormatter	A							https://developer.apple.com/reference/mapkit/mkdistanceformatter			<section class="prog__container"><p>The MKDistanceFormatter class implements a formatter object for geographic distances. You can apply a distance formatter in places where you need to specify distances and know that the values are formatted appropriately for the user’s locale and language. You can also parse existing format strings to retrieve the corresponding distance value.</p><pre><code>MKDistanceFormatter</code></pre></section>	https://developer.apple.com/reference/mapkit/mkdistanceformatter
MKETAResponse	A							https://developer.apple.com/reference/mapkit/mketaresponse			<section class="prog__container"><p>The MKETAResponse class provides a container for travel-time information returned by the Apple servers. You do not create instances of this class directly. Instead, you initiate a request for the travel time between two points by calling the calculateETA(completionHandler:) method of an MKDirections object. You receive an instance of this class as the result.</p><pre><code>MKETAResponse</code></pre></section>	https://developer.apple.com/reference/mapkit/mketaresponse
MKGeodesicPolyline	A							https://developer.apple.com/reference/mapkit/mkgeodesicpolyline			<section class="prog__container"><p>The MKGeodesicPolyline class represents a line shape that traces the shortest path along the surface of the Earth. As with regular polyline overlays, you specify a geodesic polyline using a set of end-to-end points where the first and last points are not connected to each other. When displayed on a two-dimensional map view, the line segment between any two points may appear curved. </p><pre><code>MKGeodesicPolyline</code></pre></section>	https://developer.apple.com/reference/mapkit/mkgeodesicpolyline
MKLocalSearch	A							https://developer.apple.com/reference/mapkit/mklocalsearch			<section class="prog__container"><p>An MKLocalSearch object initiates a map-based search operation and delivers the results back to your app asynchronously. Search objects are designed to perform one search operation only. To perform several different searches, you must create separate instances of this class and start them separately.</p><pre><code>MKLocalSearch</code></pre></section>	https://developer.apple.com/reference/mapkit/mklocalsearch
MKLocalSearchCompleter	A							https://developer.apple.com/reference/mapkit/mklocalsearchcompleter			<section class="prog__container"><p>An MKLocalSearchCompleter object takes a partial search string and generates a list of potential completions. You use a search completer object to retrieve auto-complete suggestions for your own map-based search controls. As the user types text, you feed the current text string into the search completer object, which delivers possible string completions that match locations or points of interest. You then use the fully-formed search completion objects to create an MKLocalSearch object and retrieve more detailed information about the geographic location. </p><pre><code>MKLocalSearchCompleter</code></pre></section>	https://developer.apple.com/reference/mapkit/mklocalsearchcompleter
MKLocalSearchCompleterDelegate	A							https://developer.apple.com/reference/mapkit/mklocalsearchcompleterdelegate			<section class="prog__container"><p>The MKLocalSearchCompleterDelegate protocol defines the methods for receiving search completion data from an MKLocalSearchCompleter object. You use this protocol when implementing an auto-complete solution that is tied to a map in your app. Upon receiving a partial search string, the MKLocalSearchCompleter object performs searches for valid completions matching that string and returns them to your delegate object as one or more MKLocalSearchCompletion objects. </p><pre><code>MKLocalSearchCompleterDelegate</code></pre></section>	https://developer.apple.com/reference/mapkit/mklocalsearchcompleterdelegate
MKLocalSearchCompletion	A							https://developer.apple.com/reference/mapkit/mklocalsearchcompletion			<section class="prog__container"><p>An MKLocalSearchCompletion object contains a fully formed search term derived from a partial term. You do not create instances of this class directly. Instead, you use an MKLocalSearchCompleter to start initiate a search using a partial search string and then return instances of this class to you. You can use the information in MKLocalSearchCompletion objects to update your user interface and to perform geographic searches using an MKLocalSearch object.</p><pre><code>MKLocalSearchCompletion</code></pre></section>	https://developer.apple.com/reference/mapkit/mklocalsearchcompletion
MKLocalSearchRequest	A							https://developer.apple.com/reference/mapkit/mklocalsearchrequest			<section class="prog__container"><p>An MKLocalSearchRequest object is a utility object that you use to specify map-based search parameters. You can create an instance of this object and specify a natural language search string yourself, or you can use an MKLocalSearchCompleter object to obtain a more specific search term based on user input. You should also specify a specific map region to narrow the search results. You then use the configured object to initialize an MKLocalSearch object and perform your search. </p><pre><code>MKLocalSearchRequest</code></pre></section>	https://developer.apple.com/reference/mapkit/mklocalsearchrequest
MKLocalSearchResponse	A							https://developer.apple.com/reference/mapkit/mklocalsearchresponse			<section class="prog__container"><p>An MKLocalSearchResponse object contains the search results from a map-based search that was started using an MKLocalSearch object.</p><pre><code>MKLocalSearchResponse</code></pre></section>	https://developer.apple.com/reference/mapkit/mklocalsearchresponse
MKMapCamera	A							https://developer.apple.com/reference/mapkit/mkmapcamera			<section class="prog__container"><p>An MKMapCamera object describes a virtual camera that you use to define the appearance of the map. A camera object creates a virtual viewpoint above the map surface and affects how the map renders its tiles and other content. You use a camera object to specify the location of the camera on the map, the compass heading that corresponds to the camera’s viewing direction, the pitch of the camera relative to the map perpendicular, and the camera’s altitude above the map. These factors let you create a map view that is not just flat but offers a more 3D-like experience. </p><pre><code>MKMapCamera</code></pre></section>	https://developer.apple.com/reference/mapkit/mkmapcamera
MKMapItem	A							https://developer.apple.com/reference/mapkit/mkmapitem			<section class="prog__container"><p>The MKMapItem class encapsulates information about a specific point on a map. This information includes the map location and any other data that might be relevant, such as the name of a business at that location. Apps use this class to share map-related data with the Maps app.</p><pre><code>MKMapItem</code></pre></section>	https://developer.apple.com/reference/mapkit/mkmapitem
MKMapSnapshot	A							https://developer.apple.com/reference/mapkit/mkmapsnapshot			<section class="prog__container"><p>An MKMapSnapshot object contains an image generated by a snapshotter object. You do not create instances of this class directly. Instead, you use an MKMapSnapshotter object capture the map contents asynchronously. Upon completion, the snapshotter object generates an image based on the options you provide and delivers that image inside an instance of this class.</p><pre><code>MKMapSnapshot</code></pre></section>	https://developer.apple.com/reference/mapkit/mkmapsnapshot
MKMapSnapshotOptions	A							https://developer.apple.com/reference/mapkit/mkmapsnapshotoptions			<section class="prog__container"><p>The MKMapSnapshotOptions class specifies the options to use when capturing map-based imagery. After creating and configuring an instance of this class, you pass that instance to an MKMapSnapshotter object. The snapshotter uses the options you specify to determine the portion of the map to capture, the viewing angle to use for the camera, and the map appearance.</p><pre><code>MKMapSnapshotOptions</code></pre></section>	https://developer.apple.com/reference/mapkit/mkmapsnapshotoptions
MKMapSnapshotter	A							https://developer.apple.com/reference/mapkit/mkmapsnapshotter			<section class="prog__container"><p>An MKMapSnapshotter object captures map-based imagery asynchronously. Use instances of this class in situations where you want to capture the system-provided map content, including the map tiles and imagery. The snapshotter object always captures the best image possible, loading all of the available map tiles before capturing the image.</p><pre><code>MKMapSnapshotter</code></pre></section>	https://developer.apple.com/reference/mapkit/mkmapsnapshotter
MKMapView	A							https://developer.apple.com/reference/mapkit/mkmapview			<section class="prog__container"><p>An MKMapView object provides an embeddable map interface, similar to the one provided by the Maps application. You use this class as-is to display map information and to manipulate the map contents from your application. You can center the map on a given coordinate, specify the size of the area you want to display, and annotate the map with custom information. </p><pre><code>MKMapView</code></pre></section>	https://developer.apple.com/reference/mapkit/mkmapview
MKMapViewDelegate	A							https://developer.apple.com/reference/mapkit/mkmapviewdelegate			<section class="prog__container"><p>A protocol that defines a set of optional methods that you can use to receive map-related update messages. </p><pre><code>MKMapView</code></pre></section>	https://developer.apple.com/reference/mapkit/mkmapviewdelegate
MKMultiPoint	A							https://developer.apple.com/reference/mapkit/mkmultipoint			<section class="prog__container"><p>The MKMultiPoint class is an abstract superclass used to define shapes composed of multiple points. You should not create instances of this class directly. Instead, you should create instances of the MKPolyline or MKPolygon classes. However, you can use the methods and property of this class to access information about the specific points associated with the line or polygon.</p><pre><code>MKMultiPoint</code></pre></section>	https://developer.apple.com/reference/mapkit/mkmultipoint
MKOverlay	A							https://developer.apple.com/reference/mapkit/mkoverlay			<section class="prog__container"><p>The MKOverlay protocol defines a specific type of annotation that represents both a point and an area on a map. Overlay objects are essentially data objects that contain the geographic data needed to represent the map area. For example, overlays can take the form of common shapes such as rectangles and circles. They can also describe polygons and other complex shapes. </p><pre><code>MKOverlay</code></pre></section>	https://developer.apple.com/reference/mapkit/mkoverlay
MKOverlayPathRenderer	A							https://developer.apple.com/reference/mapkit/mkoverlaypathrenderer			<section class="prog__container"><p>The MKOverlayPathRenderer class draws a map overlay whose shape is represented by a CGPath data type. The default drawing behavior of this class is to apply the object’s current fill attributes, fill the path, apply the current stroke attributes, and then stroke the path.</p><pre><code>MKOverlayPathRenderer</code></pre></section>	https://developer.apple.com/reference/mapkit/mkoverlaypathrenderer
MKOverlayPathView	A							https://developer.apple.com/reference/mapkit/mkoverlaypathview			<section class="prog__container"><p>The MKOverlayPathView class represents a generic overlay that draws its contents using a CGPath data type. You can use this class to implement simple path-based overlay views or subclass it to define additional drawing behaviors. The default drawing behavior of this class is to apply the object’s current fill attributes, fill the path, apply the current stroke attributes, and then stroke the path. </p><pre><code>MKOverlayPathView</code></pre></section>	https://developer.apple.com/reference/mapkit/mkoverlaypathview
MKOverlayRenderer	A							https://developer.apple.com/reference/mapkit/mkoverlayrenderer			<section class="prog__container"><p>The MKOverlayRenderer class defines the basic behavior associated with all map-based overlays. An overlay renderer draws the visual representation of an overlay object—that is, an object that conforms to the MKOverlay protocol. This class defines the drawing infrastructure used by the map view. Subclasses are expected to override the draw(_:zoomScale:in:) method to draw the contents of the overlay.</p><pre><code>MKOverlayRenderer</code></pre></section>	https://developer.apple.com/reference/mapkit/mkoverlayrenderer
MKOverlayView	A							https://developer.apple.com/reference/mapkit/mkoverlayview			<section class="prog__container"><p>The MKOverlayView class defines the basic behavior associated with all overlay views. An overlay view provides the visual representation of an overlay object—that is, an object that conforms to the MKOverlay protocol. This class defines the drawing infrastructure used by the map view but does not do any actual drawing. Subclasses are expected to override the drawMapRect:zoomScale:inContext: method in order to draw the contents of the overlay view. </p><pre><code>MKOverlayView</code></pre></section>	https://developer.apple.com/reference/mapkit/mkoverlayview
MKPinAnnotationView	A							https://developer.apple.com/reference/mapkit/mkpinannotationview			<section class="prog__container"><p>The MKPinAnnotationView class provides a concrete annotation view that displays a pin icon like the ones found in the Maps application. Using this class, you can configure the type of pin to drop and whether you want the pin to be animated into place. </p><pre><code>MKPinAnnotationView</code></pre></section>	https://developer.apple.com/reference/mapkit/mkpinannotationview
MKPlacemark	A							https://developer.apple.com/reference/mapkit/mkplacemark			<section class="prog__container"><p>A MKPlacemark object stores placemark data for a given latitude and longitude. Placemark data includes information such as the country, state, city, and street address associated with the specified coordinate. You can initialize a placemark using the init(placemark:) inherited method or the init(coordinate:addressDictionary:) method specifying a coordinate and address dictionary. </p><pre><code>MKPlacemark</code></pre></section>	https://developer.apple.com/reference/mapkit/mkplacemark
MKPointAnnotation	A							https://developer.apple.com/reference/mapkit/mkpointannotation			<section class="prog__container"><p>The MKPointAnnotation class defines a concrete annotation object located at a specified point. You can use this class, rather than define your own, in situations where all you want to do is associate a point on the map with a title. </p><pre><code>MKPointAnnotation</code></pre></section>	https://developer.apple.com/reference/mapkit/mkpointannotation
MKPolygon	A							https://developer.apple.com/reference/mapkit/mkpolygon			<section class="prog__container"><p>The MKPolygon class represents a shape consisting of one or more points that define a closed polygon. The points are connected end-to-end in the order they are provided. The first and last points are connected to each other to create the closed shape. </p><pre><code>MKPolygon</code></pre></section>	https://developer.apple.com/reference/mapkit/mkpolygon
MKPolygonRenderer	A							https://developer.apple.com/reference/mapkit/mkpolygonrenderer			<section class="prog__container"><p>The MKPolygonRenderer class provides the visual representation for an MKPolygon overlay object. This renderer fills and strokes the polygon represented by first filling the shape and then stroking its outline. You can change the color and other drawing attributes of the polygon by modifying the properties inherited from the parent class. You typically use this class as is and do not subclass it. </p><pre><code>MKPolygonRenderer</code></pre></section>	https://developer.apple.com/reference/mapkit/mkpolygonrenderer
MKPolygonView	A							https://developer.apple.com/reference/mapkit/mkpolygonview			<section class="prog__container"><p>The MKPolygonView class provides the visual representation for an MKPolygon annotation object. This view fills and strokes the area represented by the annotation. You can change the color and other drawing attributes of the polygon by modifying the properties inherited from the MKOverlayPathView class. This class is typically used as is and not subclassed. </p><pre><code>MKPolygonView</code></pre></section>	https://developer.apple.com/reference/mapkit/mkpolygonview
MKPolyline	A							https://developer.apple.com/reference/mapkit/mkpolyline			<section class="prog__container"><p>The MKPolyline class represents a shape consisting of one or more points that define connecting line segments. The points are connected end-to-end in the order they are provided. The first and last points are not connected to each other.</p><pre><code>MKPolyline</code></pre></section>	https://developer.apple.com/reference/mapkit/mkpolyline
MKPolylineRenderer	A							https://developer.apple.com/reference/mapkit/mkpolylinerenderer			<section class="prog__container"><p>The MKPolylineRenderer class provides the visual representation for an MKPolyline overlay object. This renderer strokes the line only; it does not fill it. You can change the color and other drawing attributes of the polygon by modifying the properties inherited from the parent class. You typically use this class as is and do not subclass it. </p><pre><code>MKPolylineRenderer</code></pre></section>	https://developer.apple.com/reference/mapkit/mkpolylinerenderer
MKPolylineView	A							https://developer.apple.com/reference/mapkit/mkpolylineview			<section class="prog__container"><p>The MKPolylineView class provides the visual representation for an MKPolyline annotation object. This view strokes the path represented by the annotation. (This class does not fill the area enclosed by the path.) You can change the color and other drawing attributes of the path by modifying the properties inherited from the MKOverlayPathView class. This class is typically used as is and not subclassed. </p><pre><code>MKPolylineView</code></pre></section>	https://developer.apple.com/reference/mapkit/mkpolylineview
MKRoute	A							https://developer.apple.com/reference/mapkit/mkroute			<section class="prog__container"><p>The MKRoute class defines a single route that the user can follow between a requested start and end point. The route object defines the geometry for the route and includes information you can display to the user in association with that route, such as the name of the route, its distance, and the expected travel time.</p><pre><code>MKRoute</code></pre></section>	https://developer.apple.com/reference/mapkit/mkroute
MKRouteStep	A							https://developer.apple.com/reference/mapkit/mkroutestep			<section class="prog__container"><p>An MKRouteStep object represents one part of an overall route. Each step in a route corresponds to a single instruction that would need to be followed by the user. For example, a step might involve following a single road until a turn is required. </p><pre><code>MKRouteStep</code></pre></section>	https://developer.apple.com/reference/mapkit/mkroutestep
MKShape	A							https://developer.apple.com/reference/mapkit/mkshape			<section class="prog__container"><p>The MKShape class is an abstract class that defines the basic properties for all shape-based annotation objects. This class must be subclassed and cannot be used as is. Subclasses are responsible for defining the geometry of the shape and providing an appropriate value for the coordinate property inherited from the MKAnnotation protocol. </p><pre><code>MKShape</code></pre></section>	https://developer.apple.com/reference/mapkit/mkshape
MKTileOverlay	A							https://developer.apple.com/reference/mapkit/mktileoverlay			<section class="prog__container"><p>The MKTileOverlay class implements an overlay that is optimized for covering an area of the map using individual bitmap tiles. (In general, a map tile is a prerendered map image that covers a specific geographic area.) You can use tile overlay objects to represent your own tile-based content and to coordinate the display of that content in a map view. Your tiles can supplement the underlying map content or replace it completely. A tile overlay object coordinates the loading and management of the tiles while a corresponding MKTileOverlayRenderer object handles the actual drawing of the tiles on the map.</p><pre><code>MKTileOverlay</code></pre></section>	https://developer.apple.com/reference/mapkit/mktileoverlay
MKTileOverlayRenderer	A							https://developer.apple.com/reference/mapkit/mktileoverlayrenderer			<section class="prog__container"><p>An MKTileOverlayRenderer object handles the drawing of tiles managed by an MKTileOverlay object. You create instances of this class when tile overlays become visible on the map view. A renderer works closely with its associated tile overlay object to coordinate the loading and drawing of tiles at appropriate times. </p><pre><code>MKTileOverlayRenderer</code></pre></section>	https://developer.apple.com/reference/mapkit/mktileoverlayrenderer
MKUserLocation	A							https://developer.apple.com/reference/mapkit/mkuserlocation			<section class="prog__container"><p>The MKUserLocation class defines a specific type of annotation that identifies the user’s current location. You do not create instances of this class directly. Instead, you retrieve an existing MKUserLocation object from the userLocation property of the map view displayed in your app.</p><pre><code>MKUserLocation</code></pre></section>	https://developer.apple.com/reference/mapkit/mkuserlocation
MKUserTrackingBarButtonItem	A							https://developer.apple.com/reference/mapkit/mkusertrackingbarbuttonitem			<section class="prog__container"><p>AnMKUserTrackingBarButtonItem object is a specialized bar button item that allows the user to toggle through the user tracking modes. For example, when the user taps the button, the map view toggles between tracking the user with and without heading. The button also reflects the current user tracking mode if set elsewhere. This bar button item is associated to a single map view.</p><pre><code>MKUserTrackingBarButtonItem</code></pre></section>	https://developer.apple.com/reference/mapkit/mkusertrackingbarbuttonitem
MLMediaGroup	A							https://developer.apple.com/reference/medialibrary/mlmediagroup			<section class="prog__container"><p>The MLMediaGroup class provides groupings for media objects from a single source of media, such as iTunes or Aperture. The media objects—individual files containing a piece of media such as a photo, song, or movie—are referenced by one or more groups within each media source. These groupings serve as filters, providing hierarchical structure to the collection of objects in each source.</p><pre><code>MLMediaGroup</code></pre></section>	https://developer.apple.com/reference/medialibrary/mlmediagroup
MLMediaLibrary	A							https://developer.apple.com/reference/medialibrary/mlmedialibrary			<section class="prog__container"><p>The MLMediaLibrary class provides an interface for accessing a collection of media objects from various sources. It serves as the initial access point of the Media Library framework.</p><pre><code>MLMediaLibrary</code></pre></section>	https://developer.apple.com/reference/medialibrary/mlmedialibrary
MLMediaObject	A							https://developer.apple.com/reference/medialibrary/mlmediaobject			<section class="prog__container"><p>The MLMediaObject class describes a single media file, such as a photo, song, or movie. Each media object contains basic metadata including a name, media type, URL, and so on. Additional information about each object is stored in its list of attributes. For a list of possible object attribute keys, see Media Object Attribute Keys.</p><pre><code>MLMediaObject</code></pre></section>	https://developer.apple.com/reference/medialibrary/mlmediaobject
MLMediaSource	A							https://developer.apple.com/reference/medialibrary/mlmediasource			<section class="prog__container"><p>The MLMediaSource class identifies a specific provider of media. Conceptually, a media source respresents a single app, such as iTunes or Aperture. Each media source contains multiple groups of media objects—individual files containing a piece of media such as a photo, song, or movie.</p><pre><code>MLMediaSource</code></pre></section>	https://developer.apple.com/reference/medialibrary/mlmediasource
Global Volume Setting Methods	A							https://developer.apple.com/reference/mediaplayer/global_volume_setting_methods			<section class="prog__container"><p>Contains global functions for setting the volume alert window status.</p><pre><code>func MPVolumeSettingsAlertShow()</code></pre></section>	https://developer.apple.com/reference/mediaplayer/global_volume_setting_methods
Language Option Characteristic Constants	A							https://developer.apple.com/reference/mediaplayer/language_option_characteristic_constants			<section class="prog__container"><p>Contains the constants used to define language characteristics</p><pre><code>let MPLanguageOptionCharacteristicContainsOnlyForcedSubtitles: String</code></pre></section>	https://developer.apple.com/reference/mediaplayer/language_option_characteristic_constants
MPContentItem	A							https://developer.apple.com/reference/mediaplayer/mpcontentitem			<section class="prog__container"><p>An MPContentItem object contains the information for a particular media item. An MPContentItem object can represent any media item—for example, a song, movie, radio station, or podcast episode. The information stored in an MPContentItem is consumed by the media player and displayed to the user.</p><pre><code>MPContentItem</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpcontentitem
MPMediaEntity	A							https://developer.apple.com/reference/mediaplayer/mpmediaentity			<section class="prog__container"><p>The MPMediaEntity class serves as the abstract superclass for MPMediaItem and MPMediaItemCollection instances, and in turn for MPMediaPlaylist instances. As the superclass, MPMediaEntity defines methods used by those subclasses.</p><pre><code>MPMediaEntity</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpmediaentity
MPMediaItem	A							https://developer.apple.com/reference/mediaplayer/mpmediaitem			<section class="prog__container"><p>A media item represents a single piece of media (such as one song or one video podcast) in the Media library. A media item has an overall unique identifier, accessed using the MPMediaItemPropertyPersistentID property key, as well as specific identifiers for its metadata. These identifiers persists across application launches.</p><pre><code>MPMediaItemPropertyPersistentID</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpmediaitem
MPMediaItemArtwork	A							https://developer.apple.com/reference/mediaplayer/mpmediaitemartwork			<section class="prog__container"><p>An MPMediaItemArtwork object, or media item artwork, represents a graphical image, such as music album cover art, associated with a media item. Media items are described in MPMediaItem.</p><pre><code>MPMediaItemArtwork</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpmediaitemartwork
MPMediaItemCollection	A							https://developer.apple.com/reference/mediaplayer/mpmediaitemcollection			<section class="prog__container"><p>A media item collection is a sorted set of media items (instances of the MPMediaItem class) from the iPod library. Typically, you use this class by requesting an array of collections from a media query by way of its collections property. Media queries are described in MPMediaQuery.</p><pre><code>MPMediaItem</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpmediaitemcollection
MPMediaLibrary	A							https://developer.apple.com/reference/mediaplayer/mpmedialibrary			<section class="prog__container"><p>An object that represents the state of the set of synced media items (such as songs) on a device.</p><pre><code>MPMediaPropertyPredicate</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpmedialibrary
MPMediaPickerController	A							https://developer.apple.com/reference/mediaplayer/mpmediapickercontroller			<section class="prog__container"><p>An MPMediaPickerController object, or media item picker, is a specialized view controller that you employ to provide a graphical interface for selecting media items. To display a media item picker, present it modally on an existing view controller. Media items are described in MPMediaItem.</p><pre><code>MPMediaPickerController</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpmediapickercontroller
MPMediaPickerControllerDelegate	A							https://developer.apple.com/reference/mediaplayer/mpmediapickercontrollerdelegate			<section class="prog__container"><p>The delegate for a media item picker can respond to a user making media item selections. The delegate is also responsible for dismissing the media item picker from the parent view controller. The methods in this protocol are optional.</p><pre><code>MPMediaItem</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpmediapickercontrollerdelegate
MPMediaPlayback	A							https://developer.apple.com/reference/mediaplayer/mpmediaplayback			<section class="prog__container"><p>A protocol that defines the interface for controlling media playback. </p><pre><code>func play()</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpmediaplayback
MPMediaPlaylist	A							https://developer.apple.com/reference/mediaplayer/mpmediaplaylist			<section class="prog__container"><p>A media playlist is a playable collection of related media items. (Media items are described in MPMediaItem.) Each playlist has a name, a set of attributes, and a unique identifier that persists across application launches.</p><pre><code>MPMediaItem</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpmediaplaylist
MPMediaPlaylistAttribute	A							https://developer.apple.com/reference/mediaplayer/mpmediaplaylistattribute			<section class="prog__container"><p>Playlist attributes, used as possible values for the MPMediaPlaylistPropertyPlaylistAttributes property.</p><pre><code>MPMediaPlaylistPropertyPlaylistAttributes</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpmediaplaylistattribute
MPMediaPredicate	A							https://developer.apple.com/reference/mediaplayer/mpmediapredicate			<section class="prog__container"><p>This is an abstract class that defines classes for filtering media in an media query.</p><pre><code>MPMediaPropertyPredicate</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpmediapredicate
MPMediaPropertyPredicate	A							https://developer.apple.com/reference/mediaplayer/mpmediapropertypredicate			<section class="prog__container"><p>Use one or more MPMediaPropertyPredicate objects, or media property predicates, to define the filter in a media query to retrieve a subset of media items from the iPod library. A predicate in this context is a statement of a logical condition that you want to test each media item against. Those items that satisfy the condition are retrieved in the query result.</p><pre><code>MPMediaPropertyPredicate</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpmediapropertypredicate
MPMediaQuery	A							https://developer.apple.com/reference/mediaplayer/mpmediaquery			<section class="prog__container"><p>A media query specifies a set of media items (instances of MPMediaItem) from the library by way of a filter and a grouping type. </p><pre><code>MPMediaItem</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpmediaquery
MPMediaQuerySection	A							https://developer.apple.com/reference/mediaplayer/mpmediaquerysection			<section class="prog__container"><p>A media query section represents a range of media items or media item collections from within a media query. You can use sections when displaying a query’s items or collections in your app’s user interface.</p><pre><code>itemSections</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpmediaquerysection
MPMusicPlayerController	A							https://developer.apple.com/reference/mediaplayer/mpmusicplayercontroller			<section class="prog__container"><p>Use an MPMusicPlayerController object, or music player, to play media items from the device Music library. There are two types of music player:</p><pre><code>MPMusicPlayerController</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpmusicplayercontroller
MPNowPlayingInfoCenter	A							https://developer.apple.com/reference/mediaplayer/mpnowplayinginfocenter			<section class="prog__container"><p>Use a now playing info center to set now-playing information for media being played by your app.</p><pre><code>nowPlayingInfo</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpnowplayinginfocenter
MPPlayableContentDataSource	A							https://developer.apple.com/reference/mediaplayer/mpplayablecontentdatasource			<section class="prog__container"><p>To support external media players, create a class that conforms to the MPPlayableContentDataSource protocol. When your app launches, create an instance of this class and assign it to the shared MPPlayableContentManagerdataSource property. This data source provides media metadata to external media players so that they can build user interfaces displaying your app’s content. It is best to set this data source as early as possible in your app’s lifecycle, as iOS may start asking for content right away.</p><pre><code>MPPlayableContentDataSource</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpplayablecontentdatasource
MPPlayableContentDelegate	A							https://developer.apple.com/reference/mediaplayer/mpplayablecontentdelegate			<section class="prog__container"><p>Use the MPPlayableContentDelegate protocol to let external media players send playback commands to an app. After the media player determines that a media item is to be played, the app’s content delegate requests for playback to be initiated.</p><pre><code>MPPlayableContentDelegate</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpplayablecontentdelegate
MPPlayableContentManager	A							https://developer.apple.com/reference/mediaplayer/mpplayablecontentmanager			<section class="prog__container"><p>Use the MPPlayableContentManager class to control interactions between a media app and system-provided or external media player interfaces. Data is provided by the app to the content manager so that the media player can browse the content provided. A delegate provides the media player the ability to perform actions that manage the app’s playback queue.</p><pre><code>MPPlayableContentManager</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpplayablecontentmanager
MPVolumeView	A							https://developer.apple.com/reference/mediaplayer/mpvolumeview			<section class="prog__container"><p>Use a volume view to present the user with a slider control for setting the system audio output volume, and a button for choosing the audio output route. When first displayed, the slider’s position reflects the current system audio output volume. As the user drags the slider, the changes update the volume. If the user presses the device volume buttons while sound is playing, the slider moves to reflect the new volume.</p><pre><code>UIView</code></pre></section>	https://developer.apple.com/reference/mediaplayer/mpvolumeview
Responding to Changes to Media Playback Mode Events	A							https://developer.apple.com/reference/mediaplayer/responding_to_changes_to_media_playback_mode_events			<section class="prog__container"><p>Contains classes that respond to changes in how media items are played.</p><pre><code>MPChangePlaybackRateCommand</code></pre></section>	https://developer.apple.com/reference/mediaplayer/responding_to_changes_to_media_playback_mode_events
Responding to Feedback and Rating Events	A							https://developer.apple.com/reference/mediaplayer/responding_to_feedback_and_rating_events			<section class="prog__container"><p>Contains classes that handle incoming feedback and rating events.</p><pre><code>MPFeedbackCommand</code></pre></section>	https://developer.apple.com/reference/mediaplayer/responding_to_feedback_and_rating_events
Responding to Track Navigation Events	A							https://developer.apple.com/reference/mediaplayer/responding_to_track_navigation_events			<section class="prog__container"><p>Contains classes that respond to requests to change what part of a media item is played.</p><pre><code>MPChangePlaybackPositionCommand</code></pre></section>	https://developer.apple.com/reference/mediaplayer/responding_to_track_navigation_events
Setting up the Remote Event Handler	A							https://developer.apple.com/reference/mediaplayer/setting_up_the_remote_event_handler			<section class="prog__container"><p>Contains classes to set up remote event handling.</p><pre><code>MPRemoteCommandCenter</code></pre></section>	https://developer.apple.com/reference/mediaplayer/setting_up_the_remote_event_handler
Errors	A							https://developer.apple.com/reference/messages/errors			<section class="prog__container"><p>This document describes the error domains and codes used in sticker packs and iMessage apps.</p><pre><code>NSError</code></pre></section>	https://developer.apple.com/reference/messages/errors
MSConversation	A							https://developer.apple.com/reference/messages/msconversation			<section class="prog__container"><p>The MSConversation class represents a conversation in the Messages app. Use conversation objects to access information about the currently selected message or the conversation participants, or to send text, stickers, attachments, or message objects.</p><pre><code>MSConversation</code></pre></section>	https://developer.apple.com/reference/messages/msconversation
MSMessage	A							https://developer.apple.com/reference/messages/msmessage			<section class="prog__container"><p>Use the MSMessage class to create interactive message objects. To create a message that can be updated by the conversation’s participants, instantiate a message with a session using the init(session:) method. Otherwise, instantiate the message using the init() method. </p><pre><code>MSMessage</code></pre></section>	https://developer.apple.com/reference/messages/msmessage
MSMessageLayout	A							https://developer.apple.com/reference/messages/msmessagelayout			<section class="prog__container"><p>The MSMessageLayout class is an abstract base class that defines the appearance of MSMessage objects in the conversation transcript.</p><pre><code>MSMessageLayout</code></pre></section>	https://developer.apple.com/reference/messages/msmessagelayout
MSMessagesAppViewController	A							https://developer.apple.com/reference/messages/msmessagesappviewcontroller			<section class="prog__container"><p>The MSMessagesAppViewController class acts as the principal view controller for Messages extensions. Use this class to manage your extension. For more information on app extensions, see App Extension Programming Guide.</p><pre><code>MSMessagesAppViewController</code></pre></section>	https://developer.apple.com/reference/messages/msmessagesappviewcontroller
MSMessageTemplateLayout	A							https://developer.apple.com/reference/messages/msmessagetemplatelayout			<section class="prog__container"><p>The MSMessageTemplateLayout describes how an MSMessage object is presented in the transcript. The message template includes the Message extension’s icon, an image, video, or audio file, and a number of text elements (title, subtitle, caption, subcaption, trailing caption, and trailing subcaption). These elements are laid out as shown in Figure 1.</p><pre><code>MSMessageTemplateLayout</code></pre></section>	https://developer.apple.com/reference/messages/msmessagetemplatelayout
MSSession	A							https://developer.apple.com/reference/messages/mssession			<section class="prog__container"><p>Use the MSSession class to create and update messages.</p><pre><code>MSSession</code></pre></section>	https://developer.apple.com/reference/messages/mssession
MSSticker	A							https://developer.apple.com/reference/messages/mssticker			<section class="prog__container"><p>A sticker for use in the Messages app. A sticker can be sent as a new message or attached to an existing balloon in the transcript.</p><pre><code>init(contentsOfFileURL: URL, localizedDescription: String)</code></pre></section>	https://developer.apple.com/reference/messages/mssticker
MSStickerBrowserView	A							https://developer.apple.com/reference/messages/msstickerbrowserview			<section class="prog__container"><p>Use the MSStickerBrowserView class to display a dynamically generated list of stickers. The browser provides drag-and-drop functionality. The user can press and hold a sticker to peel it from the browser, then drag the sticker to any balloon in the transcript. The user can also tap stickers to add them to the Messages app’s input field.</p><pre><code>MSStickerBrowserView</code></pre></section>	https://developer.apple.com/reference/messages/msstickerbrowserview
MSStickerBrowserViewController	A							https://developer.apple.com/reference/messages/msstickerbrowserviewcontroller			<section class="prog__container"><p>Use the MSStickerBrowserViewController to present the standard sticker browser. This browser provides drag-and-drop functionality. The user can press and hold a sticker to peel it from the browser, then drag the sticker to any balloon in the transcript. The user can also tap stickers to add them to the Messages app’s input field.</p><pre><code>MSStickerBrowserViewController</code></pre></section>	https://developer.apple.com/reference/messages/msstickerbrowserviewcontroller
MSStickerBrowserViewDataSource	A							https://developer.apple.com/reference/messages/msstickerbrowserviewdatasource			<section class="prog__container"><p>Implement the MSStickerBrowserViewDataSource protocol to dynamically provide stickers for a browser.</p><pre><code>MSStickerBrowserViewDataSource</code></pre></section>	https://developer.apple.com/reference/messages/msstickerbrowserviewdatasource
MSStickerView	A							https://developer.apple.com/reference/messages/msstickerview			<section class="prog__container"><p>Use the MSStickerView class to display sticker objects. The sticker view also provides drag-and-drop functionality. The user can press and hold a sticker to peel it from the view, and then drag the sticker to any balloon in the transcript.</p><pre><code>MSStickerView</code></pre></section>	https://developer.apple.com/reference/messages/msstickerview
MFMailComposeViewController	A							https://developer.apple.com/reference/messageui/mfmailcomposeviewcontroller			<section class="prog__container"><p>The MFMailComposeViewController class provides a standard interface for managing, editing, and sending an email message. Use this view controller to display a standard email interface inside your app. Before presenting the interface, populate the fields with initial values for the subject, email recipients, body text, and attachments of the email. After presenting the interface, the user can edit your initial values before sending the email.</p><pre><code>MFMailComposeViewController</code></pre></section>	https://developer.apple.com/reference/messageui/mfmailcomposeviewcontroller
MFMailComposeViewControllerDelegate	A							https://developer.apple.com/reference/messageui/mfmailcomposeviewcontrollerdelegate			<section class="prog__container"><p>The MFMailComposeViewControllerDelegate protocol defines the method that your delegate must implement to manage the mail composition interface. The method of this protocol notifies your delegate object when the user has finished with the interface and is ready to dismiss it. </p><pre><code>MFMailComposeViewControllerDelegate</code></pre></section>	https://developer.apple.com/reference/messageui/mfmailcomposeviewcontrollerdelegate
MFMessageComposeViewController	A							https://developer.apple.com/reference/messageui/mfmessagecomposeviewcontroller			<section class="prog__container"><p>Provides a standard interface for composing and sending SMS or MMS messages. </p><pre><code>MFMessageComposeViewController</code></pre></section>	https://developer.apple.com/reference/messageui/mfmessagecomposeviewcontroller
MFMessageComposeViewControllerDelegate	A							https://developer.apple.com/reference/messageui/mfmessagecomposeviewcontrollerdelegate			<section class="prog__container"><p>The MFMessageComposeViewControllerDelegate protocol defines a single method that custom objects can implement to respond to updates from a message composition view (an instance of the MFMessageComposeViewController class). Use the method of this protocol to respond to the end of the user composing an SMS message. The method includes information about whether the user chose to send or cancel the message or whether the attempt to send it failed.</p><pre><code>MFMessageComposeViewControllerDelegate</code></pre></section>	https://developer.apple.com/reference/messageui/mfmessagecomposeviewcontrollerdelegate
MTLArgument	A							https://developer.apple.com/reference/metal/mtlargument			<section class="prog__container"><p>A MTLArgument object describes a single argument to a Metal function. Your app uses the MTLArgument properties to read details about a function argument as it was defined in the Metal Shading Language. You can determine the argument’s data type, access restrictions, and its associated resource type. For buffer, texture, and threadgroup memory arguments, additional properties can be read to determine more details about the argument.</p><pre><code>MTLArgument</code></pre></section>	https://developer.apple.com/reference/metal/mtlargument
MTLArrayType	A							https://developer.apple.com/reference/metal/mtlarraytype			<section class="prog__container"><p>A MTLArrayType object provides details about a MTLStructMember object that is an array. Your app does not create a MTLArrayType or MTLStructMember object directly. A reflection object, MTLRenderPipelineReflection or MTLComputePipelineReflection, can contain a MTLStructMember object, if one of its arguments is a struct (that is, if the bufferDataType property of MTLArgument is struct). If the dataType property of MTLStructMember is array, then the MTLStructMember object is an array, and the arrayType() method of MTLStructMember returns a MTLArrayType object that contains array details such as length, stride, and element type.</p><pre><code>MTLArrayType</code></pre></section>	https://developer.apple.com/reference/metal/mtlarraytype
MTLAttribute	A							https://developer.apple.com/reference/metal/mtlattribute			<section class="prog__container"><p>An object which represents the attributes of a function.</p><pre><code>var attributeIndex: Int</code></pre></section>	https://developer.apple.com/reference/metal/mtlattribute
MTLAttributeDescriptor	A							https://developer.apple.com/reference/metal/mtlattributedescriptor			<section class="prog__container"><p>An object that determines how attribute data is stored in memory and how it is mapped to arguments for a function.</p><pre><code>var bufferIndex: Int</code></pre></section>	https://developer.apple.com/reference/metal/mtlattributedescriptor
MTLAttributeDescriptorArray	A							https://developer.apple.com/reference/metal/mtlattributedescriptorarray			<section class="prog__container"><p>An array of objects that define how attribute data is formatted and assigned to an index in the attribute argument table.</p><pre><code>subscript(Int)</code></pre></section>	https://developer.apple.com/reference/metal/mtlattributedescriptorarray
MTLBlitCommandEncoder	A							https://developer.apple.com/reference/metal/mtlblitcommandencoder			<section class="prog__container"><p>The MTLBlitCommandEncoder protocol is used to define the interface for objects that can encode resource-copying commands into a command buffer. Use these commands to manage the contents of textures and buffers.</p><pre><code>MTLBlitCommandEncoder</code></pre></section>	https://developer.apple.com/reference/metal/mtlblitcommandencoder
MTLBlitOption	A							https://developer.apple.com/reference/metal/mtlblitoption			<section class="prog__container"><p>Options for controlling a blit operation.</p><pre><code>static var depthFromDepthStencil: MTLBlitOption</code></pre></section>	https://developer.apple.com/reference/metal/mtlblitoption
MTLBuffer	A							https://developer.apple.com/reference/metal/mtlbuffer			<section class="prog__container"><p>The MTLBuffer protocol defines the interface for objects that represent an allocation of unformatted, device-accessible memory that can contain any type of data. Your app does not define classes that implement this protocol. </p><pre><code>MTLBuffer</code></pre></section>	https://developer.apple.com/reference/metal/mtlbuffer
MTLBufferLayoutDescriptor	A							https://developer.apple.com/reference/metal/mtlbufferlayoutdescriptor			<section class="prog__container"><p>An object that is used to configure how function input and attribute data are fetched by a function.</p><pre><code>var stepFunction: MTLStepFunction</code></pre></section>	https://developer.apple.com/reference/metal/mtlbufferlayoutdescriptor
MTLBufferLayoutDescriptorArray	A							https://developer.apple.com/reference/metal/mtlbufferlayoutdescriptorarray			<section class="prog__container"><p>An array of buffer layout states.</p><pre><code>subscript(Int)</code></pre></section>	https://developer.apple.com/reference/metal/mtlbufferlayoutdescriptorarray
MTLColorWriteMask	A							https://developer.apple.com/reference/metal/mtlcolorwritemask			<section class="prog__container"><p>Values used to specify a mask to permit or restrict writing to color channels of a color value. The values red, green, blue, and alpha select one color channel each, and they can be bitwise combined.</p><pre><code>red</code></pre></section>	https://developer.apple.com/reference/metal/mtlcolorwritemask
MTLCommandBuffer	A							https://developer.apple.com/reference/metal/mtlcommandbuffer			<section class="prog__container"><p>The MTLCommandBuffer protocol defines the interface for a transient, single-use object that stores encoded commands that are eventually committed for execution by the GPU.</p><pre><code>MTLCommandBuffer</code></pre></section>	https://developer.apple.com/reference/metal/mtlcommandbuffer
MTLCommandEncoder	A							https://developer.apple.com/reference/metal/mtlcommandencoder			<section class="prog__container"><p>The MTLCommandEncoder protocol defines the common interface for objects that can write commands into a command buffer.</p><pre><code>MTLCommandEncoder</code></pre></section>	https://developer.apple.com/reference/metal/mtlcommandencoder
MTLCommandQueue	A							https://developer.apple.com/reference/metal/mtlcommandqueue			<section class="prog__container"><p>The MTLCommandQueue protocol defines the interface for an object that can queue an ordered list of command buffers for a Metal device to execute. In general, command queues are thread-safe and allow multiple outstanding command buffers to be encoded simultaneously.</p><pre><code>MTLCommandQueue</code></pre></section>	https://developer.apple.com/reference/metal/mtlcommandqueue
MTLCompileOptions	A							https://developer.apple.com/reference/metal/mtlcompileoptions			<section class="prog__container"><p>A MTLCompileOptions object is used to specify how a new Metal shader library should be compiled. If you want to set the following options, use standard allocation and initialization techniques to create a MTLCompileOptions object and then set any or all of these properties:</p><pre><code>MTLCompileOptions</code></pre></section>	https://developer.apple.com/reference/metal/mtlcompileoptions
MTLComputeCommandEncoder	A							https://developer.apple.com/reference/metal/mtlcomputecommandencoder			<section class="prog__container"><p>Methods that allow the encoding of commands that specify the data-parallel compute processing state and execute the compute function.</p><pre><code>MTLComputeCommandEncoder</code></pre></section>	https://developer.apple.com/reference/metal/mtlcomputecommandencoder
MTLComputePipelineDescriptor	A							https://developer.apple.com/reference/metal/mtlcomputepipelinedescriptor			<section class="prog__container"><p>The MTLComputePipelineDescriptor object specifies the compute configuration state used during a compute operation pass. Use standard allocation and initialization techniques to create a MTLComputePipelineDescriptor object. A MTLComputePipelineDescriptor object is later used to create a MTLComputePipelineState object.</p><pre><code>MTLComputePipelineDescriptor</code></pre></section>	https://developer.apple.com/reference/metal/mtlcomputepipelinedescriptor
MTLComputePipelineReflection	A							https://developer.apple.com/reference/metal/mtlcomputepipelinereflection			<section class="prog__container"><p>A MTLComputePipelineReflection object provides access to the arguments of the compute function used in a MTLComputePipelineState object. A MTLComputePipelineReflection object can be created along with a MTLComputePipelineState object. Do not use standard allocation and initialization techniques to create a MTLComputePipelineReflection object.</p><pre><code>MTLComputePipelineReflection</code></pre></section>	https://developer.apple.com/reference/metal/mtlcomputepipelinereflection
MTLComputePipelineState	A							https://developer.apple.com/reference/metal/mtlcomputepipelinestate			<section class="prog__container"><p>The MTLComputePipelineState protocol defines the interface for a lightweight object used to encode a reference to a compiled compute program. A MTLComputePipelineState object is fully thread-safe and can be used by many MTLComputeCommandEncoder objects, even if they are associated with different command buffers. </p><pre><code>MTLComputePipelineState</code></pre></section>	https://developer.apple.com/reference/metal/mtlcomputepipelinestate
MTLDepthStencilDescriptor	A							https://developer.apple.com/reference/metal/mtldepthstencildescriptor			<section class="prog__container"><p>A MTLDepthStencilDescriptor object is used to define a specific configuration of the depth and stencil stages of a rendering pipeline. To create a MTLDepthStencilDescriptor object, use standard allocation and initialization techniques.</p><pre><code>MTLDepthStencilDescriptor</code></pre></section>	https://developer.apple.com/reference/metal/mtldepthstencildescriptor
MTLDepthStencilState	A							https://developer.apple.com/reference/metal/mtldepthstencilstate			<section class="prog__container"><p>The MTLDepthStencilState protocol defines the interface for a lightweight object used to encode how a graphics rendering pass should perform depth and stencil operations. The MTLRenderCommandEncoder uses a MTLDepthStencilState object to set the depth and stencil state for a rendering pass.</p><pre><code>MTLDepthStencilState</code></pre></section>	https://developer.apple.com/reference/metal/mtldepthstencilstate
MTLDevice	A							https://developer.apple.com/reference/metal/mtldevice			<section class="prog__container"><p>The MTLDevice protocol defines the interface to a single graphics processor (GPU). You use an object that conforms to this protocol to query the capabilities of the processor and to allocate objects used to access those capabilities.</p><pre><code>MTLDevice</code></pre></section>	https://developer.apple.com/reference/metal/mtldevice
MTLDrawable	A							https://developer.apple.com/reference/metal/mtldrawable			<section class="prog__container"><p>The MTLDrawable protocol defines the interface for an object that represents a displayable resource that can be used as a destination for rendering commands.</p><pre><code>MTLDrawable</code></pre></section>	https://developer.apple.com/reference/metal/mtldrawable
MTLFence	A							https://developer.apple.com/reference/metal/mtlfence			<section class="prog__container"><p>The MTLFence protocol defines the interface for an object that can track and manage resource dependencies across command encoders.</p><pre><code>MTLFence</code></pre></section>	https://developer.apple.com/reference/metal/mtlfence
MTLFunction	A							https://developer.apple.com/reference/metal/mtlfunction			<section class="prog__container"><p>The MTLFunction protocol defines the interface for an object that represents a single graphics or compute function.</p><pre><code>MTLFunction</code></pre></section>	https://developer.apple.com/reference/metal/mtlfunction
MTLFunctionConstant	A							https://developer.apple.com/reference/metal/mtlfunctionconstant			<section class="prog__container"><p>A MTLFunctionConstant object describes a function constant referenced in a graphics or compute function.</p><pre><code>MTLFunctionConstant</code></pre></section>	https://developer.apple.com/reference/metal/mtlfunctionconstant
MTLFunctionConstantValues	A							https://developer.apple.com/reference/metal/mtlfunctionconstantvalues			<section class="prog__container"><p>A MTLFunctionConstantValues object contains a set of constant values that specialize a graphics or compute function.</p><pre><code>MTLFunctionConstantValues</code></pre></section>	https://developer.apple.com/reference/metal/mtlfunctionconstantvalues
MTLHeap	A							https://developer.apple.com/reference/metal/mtlheap			<section class="prog__container"><p>The MTLHeap protocol defines the interface for an object that represents an abstract memory pool.</p><pre><code>MTLHeap</code></pre></section>	https://developer.apple.com/reference/metal/mtlheap
MTLHeapDescriptor	A							https://developer.apple.com/reference/metal/mtlheapdescriptor			<section class="prog__container"><p>A MTLHeapDescriptor object is used to configure new MTLHeap objects.</p><pre><code>MTLHeapDescriptor</code></pre></section>	https://developer.apple.com/reference/metal/mtlheapdescriptor
MTLLibrary	A							https://developer.apple.com/reference/metal/mtllibrary			<section class="prog__container"><p>The MTLLibrary protocol defines the interface for an object that represents a library of graphics or compute functions.</p><pre><code>MTLLibrary</code></pre></section>	https://developer.apple.com/reference/metal/mtllibrary
MTLParallelRenderCommandEncoder	A							https://developer.apple.com/reference/metal/mtlparallelrendercommandencoder			<section class="prog__container"><p>The MTLParallelRenderCommandEncoder protocol is used to define the interface for objects that can break up a single graphics rendering pass so that it can be encoded from multiple threads simultaneously.</p><pre><code>MTLParallelRenderCommandEncoder</code></pre></section>	https://developer.apple.com/reference/metal/mtlparallelrendercommandencoder
MTLPipelineOption	A							https://developer.apple.com/reference/metal/mtlpipelineoption			<section class="prog__container"><p>Controls which argument information is made available for reflection by the creation of the pipeline. </p><pre><code>static var argumentInfo: MTLPipelineOption</code></pre></section>	https://developer.apple.com/reference/metal/mtlpipelineoption
MTLRenderCommandEncoder	A							https://developer.apple.com/reference/metal/mtlrendercommandencoder			<section class="prog__container"><p>The MTLRenderCommandEncoder protocol is used to define the interface for objects that encode graphics rendering state and commands into a command buffer. Your app does not define classes that implement this protocol. </p><pre><code>MTLRenderCommandEncoder</code></pre></section>	https://developer.apple.com/reference/metal/mtlrendercommandencoder
MTLRenderPassAttachmentDescriptor	A							https://developer.apple.com/reference/metal/mtlrenderpassattachmentdescriptor			<section class="prog__container"><p>A MTLRenderPassAttachmentDescriptor object is used to configure an individual render target of a framebuffer. Each MTLRenderPassAttachmentDescriptor object specifies one texture that a graphics rendering pass can write into.</p><pre><code>MTLRenderPassAttachmentDescriptor</code></pre></section>	https://developer.apple.com/reference/metal/mtlrenderpassattachmentdescriptor
MTLRenderPassColorAttachmentDescriptor	A							https://developer.apple.com/reference/metal/mtlrenderpasscolorattachmentdescriptor			<section class="prog__container"><p>A MTLRenderPassColorAttachmentDescriptor object is used to configure an individual render target whose texture has a color-renderable pixel format.</p><pre><code>MTLRenderPassColorAttachmentDescriptor</code></pre></section>	https://developer.apple.com/reference/metal/mtlrenderpasscolorattachmentdescriptor
MTLRenderPassColorAttachmentDescriptorArray	A							https://developer.apple.com/reference/metal/mtlrenderpasscolorattachmentdescriptorarray			<section class="prog__container"><p>An array of MTLRenderPassColorAttachmentDescriptor objects.</p><pre><code>MTLRenderPassColorAttachmentDescriptor</code></pre></section>	https://developer.apple.com/reference/metal/mtlrenderpasscolorattachmentdescriptorarray
MTLRenderPassDepthAttachmentDescriptor	A							https://developer.apple.com/reference/metal/mtlrenderpassdepthattachmentdescriptor			<section class="prog__container"><p>A MTLRenderPassDepthAttachmentDescriptor object is used to configure an individual render target whose texture has a depth-renderable pixel format.</p><pre><code>MTLRenderPassDepthAttachmentDescriptor</code></pre></section>	https://developer.apple.com/reference/metal/mtlrenderpassdepthattachmentdescriptor
MTLRenderPassDescriptor	A							https://developer.apple.com/reference/metal/mtlrenderpassdescriptor			<section class="prog__container"><p>A MTLRenderPassDescriptor object contains a collection of attachments that are the rendering destination for pixels generated by a rendering pass. The MTLRenderPassDescriptor class is also used to set the destination buffer for visibility information generated by a rendering pass.</p><pre><code>MTLRenderPassDescriptor</code></pre></section>	https://developer.apple.com/reference/metal/mtlrenderpassdescriptor
MTLRenderPassStencilAttachmentDescriptor	A							https://developer.apple.com/reference/metal/mtlrenderpassstencilattachmentdescriptor			<section class="prog__container"><p>A MTLRenderPassStencilAttachmentDescriptor object is used to configure an individual render target that has a texture with a stencil-renderable pixel format.</p><pre><code>MTLRenderPassStencilAttachmentDescriptor</code></pre></section>	https://developer.apple.com/reference/metal/mtlrenderpassstencilattachmentdescriptor
MTLRenderPipelineColorAttachmentDescriptor	A							https://developer.apple.com/reference/metal/mtlrenderpipelinecolorattachmentdescriptor			<section class="prog__container"><p>A MTLRenderPipelineColorAttachmentDescriptor object defines the configuration of a color attachment associated with a rendering pipeline.</p><pre><code>MTLRenderPipelineColorAttachmentDescriptor</code></pre></section>	https://developer.apple.com/reference/metal/mtlrenderpipelinecolorattachmentdescriptor
MTLRenderPipelineColorAttachmentDescriptorArray	A							https://developer.apple.com/reference/metal/mtlrenderpipelinecolorattachmentdescriptorarray			<section class="prog__container"><p>A MTLRenderPipelineColorAttachmentDescriptorArray object contains an array of render pipeline states for an array of color attachments. The methods of MTLRenderPipelineColorAttachmentDescriptorArray set the render pipeline state or retrieve a copy of the render pipeline state for one of the color attachments in the array.</p><pre><code>MTLRenderPipelineColorAttachmentDescriptorArray</code></pre></section>	https://developer.apple.com/reference/metal/mtlrenderpipelinecolorattachmentdescriptorarray
MTLRenderPipelineDescriptor	A							https://developer.apple.com/reference/metal/mtlrenderpipelinedescriptor			<section class="prog__container"><p>The MTLRenderPipelineDescriptor object specifies the rendering configuration state used during a rendering pass, including rasterization (such as multisampling), visibility, blending, tessellation, and graphics function state. Use standard allocation and initialization techniques to create a MTLRenderPipelineDescriptor object. A MTLRenderPipelineDescriptor object is later used to create a MTLRenderPipelineState object. </p><pre><code>MTLRenderPipelineDescriptor</code></pre></section>	https://developer.apple.com/reference/metal/mtlrenderpipelinedescriptor
MTLRenderPipelineReflection	A							https://developer.apple.com/reference/metal/mtlrenderpipelinereflection			<section class="prog__container"><p>A MTLRenderPipelineReflection object provides access to the arguments of a vertex or fragment function of a MTLRenderPipelineState object. A MTLRenderPipelineReflection object can be created along with a MTLRenderPipelineState object. Do not use standard allocation and initialization techniques to create a MTLRenderPipelineReflection object.</p><pre><code>MTLRenderPipelineReflection</code></pre></section>	https://developer.apple.com/reference/metal/mtlrenderpipelinereflection
MTLRenderPipelineState	A							https://developer.apple.com/reference/metal/mtlrenderpipelinestate			<section class="prog__container"><p>The MTLRenderPipelineState protocol defines the interface for a lightweight object used to encode the state for a configured graphics rendering pipeline.</p><pre><code>MTLRenderPipelineState</code></pre></section>	https://developer.apple.com/reference/metal/mtlrenderpipelinestate
MTLResource	A							https://developer.apple.com/reference/metal/mtlresource			<section class="prog__container"><p>The MTLResource protocol defines the interface for any resource object that represents an allocation of memory.</p><pre><code>MTLResource</code></pre></section>	https://developer.apple.com/reference/metal/mtlresource
MTLResourceOptions	A							https://developer.apple.com/reference/metal/mtlresourceoptions			<section class="prog__container"><p>Optional arguments used to create and influence behavior of buffer and texture objects.</p><pre><code>static var cpuCacheModeWriteCombined: MTLResourceOptions</code></pre></section>	https://developer.apple.com/reference/metal/mtlresourceoptions
MTLSamplerDescriptor	A							https://developer.apple.com/reference/metal/mtlsamplerdescriptor			<section class="prog__container"><p>MTLSamplerDescriptor objects are used to define a specific configuration of a MTLSamplerState object.</p><pre><code>MTLSamplerDescriptor</code></pre></section>	https://developer.apple.com/reference/metal/mtlsamplerdescriptor
MTLSamplerState	A							https://developer.apple.com/reference/metal/mtlsamplerstate			<section class="prog__container"><p>The MTLSamplerState protocol defines the interface for a lightweight object used to encode how a shader or compute kernel should sample a texture. To create a sampler state object:</p><pre><code>MTLSamplerState</code></pre></section>	https://developer.apple.com/reference/metal/mtlsamplerstate
MTLStageInputOutputDescriptor	A							https://developer.apple.com/reference/metal/mtlstageinputoutputdescriptor			<section class="prog__container"><p>An object that describes the inputs, outputs, and attribute data to Metal vertex, fragment or compute functions. </p><pre><code>var attributes: MTLAttributeDescriptorArray</code></pre></section>	https://developer.apple.com/reference/metal/mtlstageinputoutputdescriptor
MTLStencilDescriptor	A							https://developer.apple.com/reference/metal/mtlstencildescriptor			<section class="prog__container"><p>A MTLStencilDescriptor object is used to configure a stencil test operation.</p><pre><code>MTLStencilDescriptor</code></pre></section>	https://developer.apple.com/reference/metal/mtlstencildescriptor
MTLStructMember	A							https://developer.apple.com/reference/metal/mtlstructmember			<section class="prog__container"><p>MTLStructMember is part of the reflection API that allows Metal framework code to query details about an argument of a Metal shading language function. A MTLStructMember object describes the data type of one field in a struct that is passed as a MTLFunction argument, which is represented by MTLArgument.</p><pre><code>MTLStructMember</code></pre></section>	https://developer.apple.com/reference/metal/mtlstructmember
MTLStructType	A							https://developer.apple.com/reference/metal/mtlstructtype			<section class="prog__container"><p>MTLStructType is part of the reflection API that allows Metal framework code to query details of a struct that is passed as an argument of a Metal shading language function. You do not allocate or initialize MTLStructType objects. To obtain a MTLStructType object, you can query the bufferStructType property of a MTLArgument object, or call the structType() method for a MTLStructMember object. To examine the details of the struct, you can recursively drill down the members property of the MTLStructType object, which contains details about struct members, each of which is represented by a MTLStructMember object.</p><pre><code>MTLStructType</code></pre></section>	https://developer.apple.com/reference/metal/mtlstructtype
MTLTexture	A							https://developer.apple.com/reference/metal/mtltexture			<section class="prog__container"><p>The MTLTexture protocol defines the interface for an object that represents an allocation of formatted image data. Textures are used as source data for a vertex shader, a fragment shader, or a compute kernel. They are also used as an attachment that acts as a rendering destination.</p><pre><code>MTLTexture</code></pre></section>	https://developer.apple.com/reference/metal/mtltexture
MTLTextureDescriptor	A							https://developer.apple.com/reference/metal/mtltexturedescriptor			<section class="prog__container"><p>A MTLTextureDescriptor object is used to configure new texture objects.</p><pre><code>MTLTextureDescriptor</code></pre></section>	https://developer.apple.com/reference/metal/mtltexturedescriptor
MTLTextureUsage	A							https://developer.apple.com/reference/metal/mtltextureusage			<section class="prog__container"><p>The options that describe how a texture will be used in your app.</p><pre><code>MTLTextureUsage</code></pre></section>	https://developer.apple.com/reference/metal/mtltextureusage
MTLVertexAttribute	A							https://developer.apple.com/reference/metal/mtlvertexattribute			<section class="prog__container"><p>A MTLVertexAttribute object represents an attribute for per-vertex input in a vertex function. You use vertex attribute objects to inspect the inputs of a vertex function by examining the vertexAttributes property of the corresponding MTLFunction object.</p><pre><code>MTLVertexAttribute</code></pre></section>	https://developer.apple.com/reference/metal/mtlvertexattribute
MTLVertexAttributeDescriptor	A							https://developer.apple.com/reference/metal/mtlvertexattributedescriptor			<section class="prog__container"><p>MTLVertexAttributeDescriptor determines how vertex attribute data is stored in memory and how it is mapped to arguments for a vertex shader function.</p><pre><code>MTLVertexAttributeDescriptor</code></pre></section>	https://developer.apple.com/reference/metal/mtlvertexattributedescriptor
MTLVertexAttributeDescriptorArray	A							https://developer.apple.com/reference/metal/mtlvertexattributedescriptorarray			<section class="prog__container"><p>A MTLVertexAttributeDescriptorArray object is an array of objects that defines how vertex attribute data is formatted and assigned to an index in the attribute argument table. The methods of MTLVertexAttributeDescriptorArray set or retrieve the attribute formatting information from the array.</p><pre><code>MTLVertexAttributeDescriptorArray</code></pre></section>	https://developer.apple.com/reference/metal/mtlvertexattributedescriptorarray
MTLVertexBufferLayoutDescriptor	A							https://developer.apple.com/reference/metal/mtlvertexbufferlayoutdescriptor			<section class="prog__container"><p>A MTLVertexBufferLayoutDescriptor object is used to configure how vertex and attribute data are fetched by a vertex function.</p><pre><code>MTLVertexBufferLayoutDescriptor</code></pre></section>	https://developer.apple.com/reference/metal/mtlvertexbufferlayoutdescriptor
MTLVertexBufferLayoutDescriptorArray	A							https://developer.apple.com/reference/metal/mtlvertexbufferlayoutdescriptorarray			<section class="prog__container"><p>A MTLVertexBufferLayoutDescriptorArray holds an array of vertex buffer layout states. The methods of MTLVertexBufferLayoutDescriptorArray set the vertex buffer layout state in the array or retrieve the state from the array.</p><pre><code>MTLVertexBufferLayoutDescriptorArray</code></pre></section>	https://developer.apple.com/reference/metal/mtlvertexbufferlayoutdescriptorarray
MTLVertexDescriptor	A							https://developer.apple.com/reference/metal/mtlvertexdescriptor			<section class="prog__container"><p>A MTLVertexDescriptor object is used to configure how vertex data stored in memory is mapped to attributes in a vertex shader.</p><pre><code>MTLVertexDescriptor</code></pre></section>	https://developer.apple.com/reference/metal/mtlvertexdescriptor
MTKMesh	A							https://developer.apple.com/reference/metalkit/mtkmesh			<section class="prog__container"><p>The MTKMesh class provides a container for the vertex data of a MetalKit mesh and its submeshes, suitable for rendering in a Metal application. For more information on the Model I/O objects used to generate MetalKit mesh data, see MDLMesh and MDLAsset.</p><pre><code>MTKMesh</code></pre></section>	https://developer.apple.com/reference/metalkit/mtkmesh
MTKMeshBuffer	A							https://developer.apple.com/reference/metalkit/mtkmeshbuffer			<section class="prog__container"><p>The MTKMeshBuffer class provides a Metal buffer to back vertex and index data for Model I/O meshes and submeshes.</p><pre><code>MTKMeshBuffer</code></pre></section>	https://developer.apple.com/reference/metalkit/mtkmeshbuffer
MTKMeshBufferAllocator	A							https://developer.apple.com/reference/metalkit/mtkmeshbufferallocator			<section class="prog__container"><p>The MTKMeshBufferAllocator class provides an allocator object conforming to the MDLMeshBufferAllocator protocol. Model I/O’s MDLAsset class can use a MTKMeshBufferAllocator object to allocate MTKMeshBuffer objects to back vertex and index data within Metal buffers. For more information on model assets, see MDLAsset.</p><pre><code>MTKMeshBufferAllocator</code></pre></section>	https://developer.apple.com/reference/metalkit/mtkmeshbufferallocator
MTKSubmesh	A							https://developer.apple.com/reference/metalkit/mtksubmesh			<section class="prog__container"><p>The MTKSubmesh class provides a container for a segment of mesh data that can be rendered in a single draw call.</p><pre><code>MTKSubmesh</code></pre></section>	https://developer.apple.com/reference/metalkit/mtksubmesh
MTKTextureLoader	A							https://developer.apple.com/reference/metalkit/mtktextureloader			<section class="prog__container"><p>The MTKTextureLoader class simplifies the effort required to load your texture data into a Metal application. This class can load images from common file formats such as PNG, JPEG, and TIFF. Images can also be loaded from KTX and PVR files, along with additional loading options. Images are always loaded as type2D types and their pixel format is intrinsically inferred from their data.</p><pre><code>MTKTextureLoader</code></pre></section>	https://developer.apple.com/reference/metalkit/mtktextureloader
MTKView	A							https://developer.apple.com/reference/metalkit/mtkview			<section class="prog__container"><p>The MTKView class simplifies the effort required to create a Metal drawing application by providing a default implementation of a Metal-aware view. A MTKView object provides a convenient way to manage a MTLRenderPassDescriptor object and its associated render target attachments on your application’s behalf. You simply draw into the view when its contents need to be updated.</p><pre><code>MTKView</code></pre></section>	https://developer.apple.com/reference/metalkit/mtkview
MTKViewDelegate	A							https://developer.apple.com/reference/metalkit/mtkviewdelegate			<section class="prog__container"><p>An object that implements the MTKViewDelegate protocol can be set as a MTKView object’s delegate. A delegate allows your Metal application to provide a drawing method to a MTKView object and respond to rendering events without subclassing the MTKView class.</p><pre><code>MTKViewDelegate</code></pre></section>	https://developer.apple.com/reference/metalkit/mtkviewdelegate
Metal Performance Shaders Constants	A							https://developer.apple.com/reference/metalperformanceshaders/metal_performance_shaders_constants			<section class="prog__container"><p>The Metal Performance Shaders framework provides a single constant that is used as a default clipping rectangle for Metal Performance Shaders kernels.</p></section>	https://developer.apple.com/reference/metalperformanceshaders/metal_performance_shaders_constants
MPSBinaryImageKernel	A							https://developer.apple.com/reference/metalperformanceshaders/mpsbinaryimagekernel			<section class="prog__container"><p>A kernel that consumes two textures and produces one texture.</p><pre><code>MPSBinaryImageKernel</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsbinaryimagekernel
MPSCNNConvolution	A							https://developer.apple.com/reference/metalperformanceshaders/mpscnnconvolution			<section class="prog__container"><p>A convolution kernel that convolves the input image with a set of filters, with each producing one feature map in the output image.</p><pre><code>MPSCNNConvolutionDescriptor</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpscnnconvolution
MPSCNNConvolutionDescriptor	A							https://developer.apple.com/reference/metalperformanceshaders/mpscnnconvolutiondescriptor			<section class="prog__container"><p>A description of the attributes of a convolution kernel.</p><pre><code>MPSCNNConvolutionDescriptor</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpscnnconvolutiondescriptor
MPSCNNCrossChannelNormalization	A							https://developer.apple.com/reference/metalperformanceshaders/mpscnncrosschannelnormalization			<section class="prog__container"><p>Specifies a normalization kernel across feature channels.</p><pre><code>kernel size x 1 x 1</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpscnncrosschannelnormalization
MPSCNNFullyConnected	A							https://developer.apple.com/reference/metalperformanceshaders/mpscnnfullyconnected			<section class="prog__container"><p>A fully connected convolution layer, also known as an inner product layer.</p><pre><code>1 x 1</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpscnnfullyconnected
MPSCNNKernel	A							https://developer.apple.com/reference/metalperformanceshaders/mpscnnkernel			<section class="prog__container"><p>Describes a convolution neural network kernel.</p><pre><code>MPSCNNKernel</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpscnnkernel
MPSCNNLocalContrastNormalization	A							https://developer.apple.com/reference/metalperformanceshaders/mpscnnlocalcontrastnormalization			<section class="prog__container"><p>Specifies a local contrast normalization kernel.</p><pre><code>MPSCNNSpatialNormalization</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpscnnlocalcontrastnormalization
MPSCNNLogSoftMax	A							https://developer.apple.com/reference/metalperformanceshaders/mpscnnlogsoftmax			<section class="prog__container"><p>The logarithmic softmax filter is a neural transfer function that is useful for constructing a loss function to be minimized when training neural networks.</p><pre><code>R = pixel(x,y,k) - ln(sum(exp(pixel(x,y,0))*exp(pixel(x,y,N-1))))</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpscnnlogsoftmax
MPSCNNNeuron	A							https://developer.apple.com/reference/metalperformanceshaders/mpscnnneuron			<section class="prog__container"><p>This filter applies a neuron activation function.</p><pre><code>MPSCNNNeuron</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpscnnneuron
MPSCNNNeuronAbsolute	A							https://developer.apple.com/reference/metalperformanceshaders/mpscnnneuronabsolute			<section class="prog__container"><p>Specifies an absolute neuron filter.</p><pre><code>f(x) = |x|</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpscnnneuronabsolute
MPSCNNNeuronLinear	A							https://developer.apple.com/reference/metalperformanceshaders/mpscnnneuronlinear			<section class="prog__container"><p>Specifies a linear neuron filter.</p><pre><code>f(x) = a * x + b</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpscnnneuronlinear
MPSCNNNeuronReLU	A							https://developer.apple.com/reference/metalperformanceshaders/mpscnnneuronrelu			<section class="prog__container"><p>Specifies a ReLU (Rectified Linear Unit) neuron filter.</p><pre><code>f(x) = x</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpscnnneuronrelu
MPSCNNNeuronSigmoid	A							https://developer.apple.com/reference/metalperformanceshaders/mpscnnneuronsigmoid			<section class="prog__container"><p>Specifies a sigmoid neuron filter.</p><pre><code>f(x) = 1 / (1 + e^-x)</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpscnnneuronsigmoid
MPSCNNNeuronTanH	A							https://developer.apple.com/reference/metalperformanceshaders/mpscnnneurontanh			<section class="prog__container"><p>Specifies a hyperbolic tangent neuron filter.</p><pre><code>f(x) = a * tanh(b * x)</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpscnnneurontanh
MPSCNNPooling	A							https://developer.apple.com/reference/metalperformanceshaders/mpscnnpooling			<section class="prog__container"><p>Specifies a pooling kernel.</p><pre><code>MPSCNNKernel</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpscnnpooling
MPSCNNPoolingAverage	A							https://developer.apple.com/reference/metalperformanceshaders/mpscnnpoolingaverage			<section class="prog__container"><p>Specifies an average pooling filter.</p><pre><code>kernelWidth</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpscnnpoolingaverage
MPSCNNPoolingMax	A							https://developer.apple.com/reference/metalperformanceshaders/mpscnnpoolingmax			<section class="prog__container"><p>Specifies a max pooling filter.</p><pre><code>kernelWidth</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpscnnpoolingmax
MPSCNNSoftMax	A							https://developer.apple.com/reference/metalperformanceshaders/mpscnnsoftmax			<section class="prog__container"><p>The softmax filter is a neural transfer function that is useful for classification tasks.</p><pre><code>R = exp(pixel(x,y,k)) / sum(exp(pixel(x,y,0))*exp(pixel(x,y,N-1)))</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpscnnsoftmax
MPSCNNSpatialNormalization	A							https://developer.apple.com/reference/metalperformanceshaders/mpscnnspatialnormalization			<section class="prog__container"><p>Specifies a spatial normalization kernel.</p><pre><code>1 x kernel width x kernel height</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpscnnspatialnormalization
MPSImage	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimage			<section class="prog__container"><p>An image describes a texture that may have more than 4 channels.</p><pre><code>MTLTexture</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimage
MPSImageAreaMax	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimageareamax			<section class="prog__container"><p>A filter that finds the maximum pixel value in a rectangular region centered around each pixel in the source image. </p><pre><code>edgeMode</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimageareamax
MPSImageAreaMin	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimageareamin			<section class="prog__container"><p>A filter that finds the minimum pixel value in a rectangular region centered around each pixel in the source image. </p><pre><code>MPSImageAreaMin</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimageareamin
MPSImageBox	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagebox			<section class="prog__container"><p>A filter that convolves an image with a given kernel of odd width and height.</p><pre><code>init(device: MTLDevice, kernelWidth: Int, kernelHeight: Int)</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagebox
MPSImageConversion	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimageconversion			<section class="prog__container"><p>A filter that can perform a conversion of color space, alpha, or pixel format.</p><pre><code>MPSImageConversion</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimageconversion
MPSImageConvolution	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimageconvolution			<section class="prog__container"><p>A filter that convolves an image with a given kernel of odd width and height.</p><pre><code>3*3=9</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimageconvolution
MPSImageDescriptor	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagedescriptor			<section class="prog__container"><p>A description of the attributes used to create an MPSImage.</p><pre><code>MPSImage</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagedescriptor
MPSImageDilate	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagedilate			<section class="prog__container"><p>A filter that finds the maximum pixel value in a rectangular region centered around each pixel in the source image. </p><pre><code>MPSImageDilate</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagedilate
MPSImageErode	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimageerode			<section class="prog__container"><p>A filter that finds the minimum pixel value in a rectangular region centered around each pixel in the source image. </p><pre><code>MPSImageErode</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimageerode
MPSImageGaussianBlur	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagegaussianblur			<section class="prog__container"><p>A filter that convolves an image with a Gaussian blur of a given sigma in both the x and y directions.</p><pre><code>MPSImageConvolution</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagegaussianblur
MPSImageGaussianPyramid	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagegaussianpyramid			<section class="prog__container"><p>A filter that convolves an image with a Gaussian pyramid.</p><pre><code>encode(commandBuffer:inPlaceTexture:fallbackCopyAllocator:)</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagegaussianpyramid
MPSImageHistogram	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagehistogram			<section class="prog__container"><p>A filter that computes the histogram of an image.</p><pre><code>MPSImageHistogram</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagehistogram
MPSImageHistogramEqualization	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagehistogramequalization			<section class="prog__container"><p>A filter that equalizes the histogram of an image.</p><pre><code>init(device:histogramInfo:)</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagehistogramequalization
MPSImageHistogramSpecification	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagehistogramspecification			<section class="prog__container"><p>A filter that performs a histogram specification operation on an image. </p><pre><code>MPSImageHistogramSpecification</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagehistogramspecification
MPSImageIntegral	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimageintegral			<section class="prog__container"><p>A filter that calculates the sum of pixels over a specified region in the image.</p><pre><code>sumRect. </code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimageintegral
MPSImageIntegralOfSquares	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimageintegralofsquares			<section class="prog__container"><p>A filter that calculates the sum of squared pixels over a specified region in the image.</p><pre><code>sumRect. </code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimageintegralofsquares
MPSImageLanczosScale	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagelanczosscale			<section class="prog__container"><p>A filter that can be used to resample an existing image by using a different sampling frequency in each dimension. </p><pre><code>var scaleTransform: UnsafePointer<MPSScaleTransform>?</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagelanczosscale
MPSImageLaplacian	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagelaplacian			<section class="prog__container"><p>An optimized Laplacian filter, provided for ease of use.</p><pre><code>MPSImageLaplacian</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagelaplacian
MPSImageMedian	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagemedian			<section class="prog__container"><p>A filter that applies a median filter in a square region centered around each pixel in the source image.</p><pre><code>MPSImageMedian</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagemedian
MPSImagePyramid	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagepyramid			<section class="prog__container"><p>A base class for creating different kinds of pyramid images.</p><pre><code>init(device: MTLDevice)</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagepyramid
MPSImageSobel	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagesobel			<section class="prog__container"><p>A filter that convolves an image with the Sobel operator.</p><pre><code>v </code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagesobel
MPSImageTent	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagetent			<section class="prog__container"><p>A filter that convolves an image with a tent filter.</p><pre><code>MPSImageBox</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagetent
MPSImageThresholdBinary	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagethresholdbinary			<section class="prog__container"><p>A filter that applies a fixed-level threshold to each pixel in the image.</p><pre><code>MPSImageThresholdBinary</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagethresholdbinary
MPSImageThresholdBinaryInverse	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagethresholdbinaryinverse			<section class="prog__container"><p>A filter that applies a fixed-level threshold to each pixel in the image.</p><pre><code>MPSImageThresholdBinaryInverse</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagethresholdbinaryinverse
MPSImageThresholdToZero	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagethresholdtozero			<section class="prog__container"><p>A filter that applies a fixed-level threshold to each pixel in the image.</p><pre><code>MPSImageThresholdToZero</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagethresholdtozero
MPSImageThresholdToZeroInverse	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagethresholdtozeroinverse			<section class="prog__container"><p>A filter that applies a fixed-level threshold to each pixel in the image.</p><pre><code>MPSImageThresholdToZeroInverse</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagethresholdtozeroinverse
MPSImageThresholdTruncate	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagethresholdtruncate			<section class="prog__container"><p>A filter that applies a fixed-level threshold to each pixel in the image.</p><pre><code>MPSImageThresholdTruncate</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagethresholdtruncate
MPSImageTranspose	A							https://developer.apple.com/reference/metalperformanceshaders/mpsimagetranspose			<section class="prog__container"><p>A filter that transposes an image.</p><pre><code>MPSImageTranspose</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsimagetranspose
MPSKernel	A							https://developer.apple.com/reference/metalperformanceshaders/mpskernel			<section class="prog__container"><p>A standard interface for Metal Performance Shaders kernels.</p><pre><code>MPSKernel</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpskernel
MPSMatrix	A							https://developer.apple.com/reference/metalperformanceshaders/mpsmatrix			<section class="prog__container"><p>Describes a 2D array of data and provides storage for its values.</p><pre><code>MPSMatrix</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsmatrix
MPSMatrixDescriptor	A							https://developer.apple.com/reference/metalperformanceshaders/mpsmatrixdescriptor			<section class="prog__container"><p>A matrix descriptor describes the attributes of an MPSMatrix object and is used to create one.</p><pre><code>MPSMatrix</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsmatrixdescriptor
MPSMatrixMultiplication	A							https://developer.apple.com/reference/metalperformanceshaders/mpsmatrixmultiplication			<section class="prog__container"><p>A matrix multiplication kernel.</p><pre><code>MPSMatrixMultiplication</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsmatrixmultiplication
MPSTemporaryImage	A							https://developer.apple.com/reference/metalperformanceshaders/mpstemporaryimage			<section class="prog__container"><p>Temporary images are provided as a fast way to store transient data that will be used and discarded promptly.</p><pre><code>MPSTemporaryImage</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpstemporaryimage
MPSUnaryImageKernel	A							https://developer.apple.com/reference/metalperformanceshaders/mpsunaryimagekernel			<section class="prog__container"><p>A kernel that consumes one texture and produces one texture.</p><pre><code>MPSUnaryImageKernel</code></pre></section>	https://developer.apple.com/reference/metalperformanceshaders/mpsunaryimagekernel
MDLAreaLight	A							https://developer.apple.com/reference/modelio/mdlarealight			<section class="prog__container"><p>A light source that illuminates a 3D scene from an area with a specific shape.</p><pre><code>innerConeAngle</code></pre></section>	https://developer.apple.com/reference/modelio/mdlarealight
MDLAsset	A							https://developer.apple.com/reference/modelio/mdlasset			<section class="prog__container"><p>An indexed container for 3D objects and associated information, such as transform hierarchies, meshes, cameras, and lights. </p><pre><code>MDLAsset</code></pre></section>	https://developer.apple.com/reference/modelio/mdlasset
MDLCamera	A							https://developer.apple.com/reference/modelio/mdlcamera			<section class="prog__container"><p>A point of view for rendering a 3D scene, along with a set of parameters describing an intended appearance for rendering.</p><pre><code>projectionMatrix</code></pre></section>	https://developer.apple.com/reference/modelio/mdlcamera
MDLCheckerboardTexture	A							https://developer.apple.com/reference/modelio/mdlcheckerboardtexture			<section class="prog__container"><p>A generator of texel data that creates a checkerboard pattern with two specified colors.</p><pre><code>MDLTexture</code></pre></section>	https://developer.apple.com/reference/modelio/mdlcheckerboardtexture
MDLColorSwatchTexture	A							https://developer.apple.com/reference/modelio/mdlcolorswatchtexture			<section class="prog__container"><p>A generator of texel data that creates a gradient between two specified colors. </p><pre><code>MDLTexture</code></pre></section>	https://developer.apple.com/reference/modelio/mdlcolorswatchtexture
MDLComponent	A							https://developer.apple.com/reference/modelio/mdlcomponent			<section class="prog__container"><p>The base protocol for extensible file format support in Model I/O. </p><pre><code>MDLObject</code></pre></section>	https://developer.apple.com/reference/modelio/mdlcomponent
MDLLight	A							https://developer.apple.com/reference/modelio/mdllight			<section class="prog__container"><p>The abstract superclass for objects that describe light sources in a scene. </p><pre><code>MDLAsset</code></pre></section>	https://developer.apple.com/reference/modelio/mdllight
MDLLightProbe	A							https://developer.apple.com/reference/modelio/mdllightprobe			<section class="prog__container"><p>A light source described in terms of the variations in color and intensity of its illumination in all directions.</p><pre><code>MDLLightProbe</code></pre></section>	https://developer.apple.com/reference/modelio/mdllightprobe
MDLLightProbeIrradianceDataSource	A							https://developer.apple.com/reference/modelio/mdllightprobeirradiancedatasource			<section class="prog__container"><p>Adopt this protocol to provide information for use in automatic placement of light probes around a scene.</p><pre><code>MDLAsset</code></pre></section>	https://developer.apple.com/reference/modelio/mdllightprobeirradiancedatasource
MDLMaterial	A							https://developer.apple.com/reference/modelio/mdlmaterial			<section class="prog__container"><p>A collection of material properties that together describe the intended surface appearance for rendering a 3D object.</p><pre><code>MDLMaterialProperty</code></pre></section>	https://developer.apple.com/reference/modelio/mdlmaterial
MDLMaterialProperty	A							https://developer.apple.com/reference/modelio/mdlmaterialproperty			<section class="prog__container"><p>A definition for one specific aspect of the rendering parameters for a material.</p><pre><code>MDLMaterial</code></pre></section>	https://developer.apple.com/reference/modelio/mdlmaterialproperty
MDLMesh	A							https://developer.apple.com/reference/modelio/mdlmesh			<section class="prog__container"><p>A container for vertex buffer data to be used in rendering a 3D object.</p><pre><code>MDLSubmesh</code></pre></section>	https://developer.apple.com/reference/modelio/mdlmesh
MDLMeshBuffer	A							https://developer.apple.com/reference/modelio/mdlmeshbuffer			<section class="prog__container"><p>The general interface for managing storage of vertex and index data used in loading, processing, and rendering meshes. </p><pre><code>MDLAsset</code></pre></section>	https://developer.apple.com/reference/modelio/mdlmeshbuffer
MDLMeshBufferAllocator	A							https://developer.apple.com/reference/modelio/mdlmeshbufferallocator			<section class="prog__container"><p>The general interface for managing allocation of data buffers to be used in loading, processing, and rendering meshes. </p><pre><code>MTKMeshBufferAllocator</code></pre></section>	https://developer.apple.com/reference/modelio/mdlmeshbufferallocator
MDLMeshBufferData	A							https://developer.apple.com/reference/modelio/mdlmeshbufferdata			<section class="prog__container"><p>A memory buffer that stores vertex or index data for a Model I/O mesh.</p><pre><code>MDLMeshBuffer</code></pre></section>	https://developer.apple.com/reference/modelio/mdlmeshbufferdata
MDLMeshBufferDataAllocator	A							https://developer.apple.com/reference/modelio/mdlmeshbufferdataallocator			<section class="prog__container"><p>A basic allocator implementation that allocates from main memory using data objects.</p><pre><code>init(url:vertexDescriptor:bufferAllocator:)</code></pre></section>	https://developer.apple.com/reference/modelio/mdlmeshbufferdataallocator
MDLMeshBufferMap	A							https://developer.apple.com/reference/modelio/mdlmeshbuffermap			<section class="prog__container"><p>An object that manages access to a memory buffer used for the data storage of a Model I/O mesh. </p><pre><code>MDLMeshBufferMap</code></pre></section>	https://developer.apple.com/reference/modelio/mdlmeshbuffermap
MDLMeshBufferZone	A							https://developer.apple.com/reference/modelio/mdlmeshbufferzone			<section class="prog__container"><p>The general interface for logical pools of memory used in allocation of related mesh data buffers.</p><pre><code>MDLMeshBufferAllocator</code></pre></section>	https://developer.apple.com/reference/modelio/mdlmeshbufferzone
MDLMeshBufferZoneDefault	A							https://developer.apple.com/reference/modelio/mdlmeshbufferzonedefault			<section class="prog__container"><p>A standard implementation of the MDLMeshBufferZone protocol.</p><pre><code>MDLMeshBufferZone</code></pre></section>	https://developer.apple.com/reference/modelio/mdlmeshbufferzonedefault
MDLNamed	A							https://developer.apple.com/reference/modelio/mdlnamed			<section class="prog__container"><p>The common interface for Model I/O objects that expose a human-readable name.</p><pre><code>name</code></pre></section>	https://developer.apple.com/reference/modelio/mdlnamed
MDLNoiseTexture	A							https://developer.apple.com/reference/modelio/mdlnoisetexture			<section class="prog__container"><p>A generator of texel data that creates a field of random noise.</p><pre><code>MDLTexture</code></pre></section>	https://developer.apple.com/reference/modelio/mdlnoisetexture
MDLNormalMapTexture	A							https://developer.apple.com/reference/modelio/mdlnormalmaptexture			<section class="prog__container"><p>A generator of texel data that computes a normal map from a supplied texture.</p><pre><code>MDLTexture</code></pre></section>	https://developer.apple.com/reference/modelio/mdlnormalmaptexture
MDLObject	A							https://developer.apple.com/reference/modelio/mdlobject			<section class="prog__container"><p>The base class for objects that are part of a 3D asset, including meshes, cameras, and lights.</p><pre><code>MDLAsset</code></pre></section>	https://developer.apple.com/reference/modelio/mdlobject
MDLObjectContainer	A							https://developer.apple.com/reference/modelio/mdlobjectcontainer			<section class="prog__container"><p>A default implementation for handling object hierarchy relationships in a 3D asset. </p><pre><code>MDLObjectContainerComponent</code></pre></section>	https://developer.apple.com/reference/modelio/mdlobjectcontainer
MDLObjectContainerComponent	A							https://developer.apple.com/reference/modelio/mdlobjectcontainercomponent			<section class="prog__container"><p>The general interface for classes that can act as containers in an object hierarchy.</p><pre><code>var objects: [MDLObject]</code></pre></section>	https://developer.apple.com/reference/modelio/mdlobjectcontainercomponent
MDLPhotometricLight	A							https://developer.apple.com/reference/modelio/mdlphotometriclight			<section class="prog__container"><p>A light source whose shape, direction, and intensity of illumination are determined by a photometric profile.</p><pre><code>MDLPhotometricLight</code></pre></section>	https://developer.apple.com/reference/modelio/mdlphotometriclight
MDLPhysicallyPlausibleLight	A							https://developer.apple.com/reference/modelio/mdlphysicallyplausiblelight			<section class="prog__container"><p>A light source for use in shading models based on real-world physics. </p><pre><code>var color: CGColor?</code></pre></section>	https://developer.apple.com/reference/modelio/mdlphysicallyplausiblelight
MDLPhysicallyPlausibleScatteringFunction	A							https://developer.apple.com/reference/modelio/mdlphysicallyplausiblescatteringfunction			<section class="prog__container"><p>A set of material properties that describes a physically realistic shading model for materials.</p><pre><code>MDLScatteringFunction</code></pre></section>	https://developer.apple.com/reference/modelio/mdlphysicallyplausiblescatteringfunction
MDLScatteringFunction	A							https://developer.apple.com/reference/modelio/mdlscatteringfunction			<section class="prog__container"><p>A set of material properties that describes a basic shading model for materials, and the superclass for more complex shading models.</p><pre><code>MDLMaterial</code></pre></section>	https://developer.apple.com/reference/modelio/mdlscatteringfunction
MDLSkyCubeTexture	A							https://developer.apple.com/reference/modelio/mdlskycubetexture			<section class="prog__container"><p>A generator of texel data that creates cube textures using a physically realistic simulation of the sunlit sky.</p><pre><code>MDLTexture</code></pre></section>	https://developer.apple.com/reference/modelio/mdlskycubetexture
MDLStereoscopicCamera	A							https://developer.apple.com/reference/modelio/mdlstereoscopiccamera			<section class="prog__container"><p>A point of view for rendering a stereoscopic display of a 3D scene.</p><pre><code>MDLCamera</code></pre></section>	https://developer.apple.com/reference/modelio/mdlstereoscopiccamera
MDLSubmesh	A							https://developer.apple.com/reference/modelio/mdlsubmesh			<section class="prog__container"><p>A container for index buffer data and material information to be used in rendering all or part of a 3D object. </p><pre><code>MDLMesh</code></pre></section>	https://developer.apple.com/reference/modelio/mdlsubmesh
MDLSubmeshTopology	A							https://developer.apple.com/reference/modelio/mdlsubmeshtopology			<section class="prog__container"><p>A description of how a submesh's index buffer data is arranged and how that arrangement should be used to produce the submesh's intended 3D shape. </p><pre><code>newSubdividedMesh(_:submeshIndex:subdivisionLevels:)</code></pre></section>	https://developer.apple.com/reference/modelio/mdlsubmeshtopology
MDLTexture	A							https://developer.apple.com/reference/modelio/mdltexture			<section class="prog__container"><p>A source of texel data to be used in rendering material surface appearances. </p><pre><code>MDLTexture</code></pre></section>	https://developer.apple.com/reference/modelio/mdltexture
MDLTextureFilter	A							https://developer.apple.com/reference/modelio/mdltexturefilter			<section class="prog__container"><p>A description of filtering modes for a renderer to use when sampling from a texture.</p><pre><code>MDLTexture</code></pre></section>	https://developer.apple.com/reference/modelio/mdltexturefilter
MDLTextureSampler	A							https://developer.apple.com/reference/modelio/mdltexturesampler			<section class="prog__container"><p>An object that pairs a source of texture data with sampling parameters to be used in rendering the texture.</p><pre><code>MDLMaterialProperty</code></pre></section>	https://developer.apple.com/reference/modelio/mdltexturesampler
MDLTransform	A							https://developer.apple.com/reference/modelio/mdltransform			<section class="prog__container"><p>A description of the local coordinate space transformations for a 3D object.</p><pre><code>transform</code></pre></section>	https://developer.apple.com/reference/modelio/mdltransform
MDLTransformComponent	A							https://developer.apple.com/reference/modelio/mdltransformcomponent			<section class="prog__container"><p>The general interface for classes that manage local coordinate space transforms for 3D objects</p><pre><code>MDLTransform</code></pre></section>	https://developer.apple.com/reference/modelio/mdltransformcomponent
MDLURLTexture	A							https://developer.apple.com/reference/modelio/mdlurltexture			<section class="prog__container"><p>A lightweight reference to a URL from which to load texture data.</p><pre><code>MDLTexture</code></pre></section>	https://developer.apple.com/reference/modelio/mdlurltexture
MDLVertexAttribute	A							https://developer.apple.com/reference/modelio/mdlvertexattribute			<section class="prog__container"><p>A description of the format of per-vertex data for a single vertex attribute in a mesh object.</p><pre><code>MDLMesh</code></pre></section>	https://developer.apple.com/reference/modelio/mdlvertexattribute
MDLVertexAttributeData	A							https://developer.apple.com/reference/modelio/mdlvertexattributedata			<section class="prog__container"><p>An object that provides convenience access to vertex data for a specific vertex attribute of a mesh.</p><pre><code>vertexAttributeData(forAttributeNamed:)</code></pre></section>	https://developer.apple.com/reference/modelio/mdlvertexattributedata
MDLVertexBufferLayout	A							https://developer.apple.com/reference/modelio/mdlvertexbufferlayout			<section class="prog__container"><p>A MDLVertexBufferLayout object describes layout information for a vertex buffer in a MDLMesh object. A collection of vertex layer objects, vertex attribute objects, and additional information forms a MDLVertexDescriptor object, which completely describes the layout of vertex buffers for a mesh.</p><pre><code>MDLVertexBufferLayout</code></pre></section>	https://developer.apple.com/reference/modelio/mdlvertexbufferlayout
MDLVertexDescriptor	A							https://developer.apple.com/reference/modelio/mdlvertexdescriptor			<section class="prog__container"><p>A description of the structure, format, and layout for vertex data buffers associated with a mesh.</p><pre><code>MDLMesh</code></pre></section>	https://developer.apple.com/reference/modelio/mdlvertexdescriptor
MDLVoxelArray	A							https://developer.apple.com/reference/modelio/mdlvoxelarray			<section class="prog__container"><p>A model of a 3D object's solid volume as a collection of voxels, or cubic units.</p><pre><code>init(asset: MDLAsset, divisions: Int32, interiorShells: Int32, exteriorShells: Int32, patchRadius: Float)</code></pre></section>	https://developer.apple.com/reference/modelio/mdlvoxelarray
MCAdvertiserAssistant	A							https://developer.apple.com/reference/multipeerconnectivity/mcadvertiserassistant			<section class="prog__container"><p>The MCAdvertiserAssistant is a convenience class that handles advertising, presents incoming invitations to the user, and handles users’ responses. Use this class to provide a user interface for handling invitations when your app does not require programmatic control over the invitation process.</p><pre><code>MCAdvertiserAssistant</code></pre></section>	https://developer.apple.com/reference/multipeerconnectivity/mcadvertiserassistant
MCAdvertiserAssistantDelegate	A							https://developer.apple.com/reference/multipeerconnectivity/mcadvertiserassistantdelegate			<section class="prog__container"><p>The MCAdvertiserAssistantDelegate protocol describes the methods that the delegate object for an MCAdvertiserAssistant instance can implement to handle advertising-related events.</p><pre><code>MCAdvertiserAssistantDelegate</code></pre></section>	https://developer.apple.com/reference/multipeerconnectivity/mcadvertiserassistantdelegate
MCBrowserViewController	A							https://developer.apple.com/reference/multipeerconnectivity/mcbrowserviewcontroller			<section class="prog__container"><p>The MCBrowserViewController class presents nearby devices to the user and enables the user to invite nearby devices to a session. To use this class in iOS or tvOS, call methods from the underlying UIViewController class (prepare(for:sender:) and performSegue(withIdentifier:sender:) for storyboards or present(_:animated:completion:) and dismiss(animated:completion:) for nib-based views) to present and dismiss the view controller. In macOS, use the comparable NSViewController methods presentViewControllerAsSheet(_:) and dismissViewController(_:) instead.</p><pre><code>MCBrowserViewController</code></pre></section>	https://developer.apple.com/reference/multipeerconnectivity/mcbrowserviewcontroller
MCBrowserViewControllerDelegate	A							https://developer.apple.com/reference/multipeerconnectivity/mcbrowserviewcontrollerdelegate			<section class="prog__container"><p>The MCBrowserViewControllerDelegate protocol defines the methods that your delegate object can implement to handle events related to the MCBrowserViewController class.</p><pre><code>MCBrowserViewControllerDelegate</code></pre></section>	https://developer.apple.com/reference/multipeerconnectivity/mcbrowserviewcontrollerdelegate
MCNearbyServiceAdvertiser	A							https://developer.apple.com/reference/multipeerconnectivity/mcnearbyserviceadvertiser			<section class="prog__container"><p>The MCNearbyServiceAdvertiser class publishes an advertisement for a specific service that your app provides through the Multipeer Connectivity framework and notifies its delegate about invitations from nearby peers.</p><pre><code>MCNearbyServiceAdvertiser</code></pre></section>	https://developer.apple.com/reference/multipeerconnectivity/mcnearbyserviceadvertiser
MCNearbyServiceAdvertiserDelegate	A							https://developer.apple.com/reference/multipeerconnectivity/mcnearbyserviceadvertiserdelegate			<section class="prog__container"><p>The MCNearbyServiceAdvertiserDelegate protocol describes the methods that the delegate object for an MCNearbyServiceAdvertiser instance can implement for handling events from the MCNearbyServiceAdvertiser class.</p><pre><code>MCNearbyServiceAdvertiserDelegate</code></pre></section>	https://developer.apple.com/reference/multipeerconnectivity/mcnearbyserviceadvertiserdelegate
MCNearbyServiceBrowser	A							https://developer.apple.com/reference/multipeerconnectivity/mcnearbyservicebrowser			<section class="prog__container"><p>Searches (by service type) for services offered by nearby devices using infrastructure Wi-Fi, peer-to-peer Wi-Fi, and Bluetooth (in iOS) or Ethernet (in macOS and tvOS), and provides the ability to easily invite those devices to a Multipeer Connectivity session (MCSession).</p><pre><code>MCSession</code></pre></section>	https://developer.apple.com/reference/multipeerconnectivity/mcnearbyservicebrowser
MCNearbyServiceBrowserDelegate	A							https://developer.apple.com/reference/multipeerconnectivity/mcnearbyservicebrowserdelegate			<section class="prog__container"><p>The MCNearbyServiceBrowserDelegate protocol defines methods that a MCNearbyServiceBrowser object’s delegate can implement to handle browser-related events.</p><pre><code>MCNearbyServiceBrowserDelegate</code></pre></section>	https://developer.apple.com/reference/multipeerconnectivity/mcnearbyservicebrowserdelegate
MCPeerID	A							https://developer.apple.com/reference/multipeerconnectivity/mcpeerid			<section class="prog__container"><p>An MCPeerID object represents a peer in a multipeer session.</p><pre><code>MCPeerID</code></pre></section>	https://developer.apple.com/reference/multipeerconnectivity/mcpeerid
MCSession	A							https://developer.apple.com/reference/multipeerconnectivity/mcsession			<section class="prog__container"><p>An MCSession object enables and manages communication among all peers in a Multipeer Connectivity session.</p><pre><code>MCSession</code></pre></section>	https://developer.apple.com/reference/multipeerconnectivity/mcsession
MCSessionDelegate	A							https://developer.apple.com/reference/multipeerconnectivity/mcsessiondelegate			<section class="prog__container"><p>The MCSessionDelegate protocol defines methods that a delegate of the MCSession class can implement to handle session-related events. For more information, see MCSession.</p><pre><code>MCSessionDelegate</code></pre></section>	https://developer.apple.com/reference/multipeerconnectivity/mcsessiondelegate
NEAppProxyFlow	A							https://developer.apple.com/reference/networkextension/neappproxyflow			<section class="prog__container"><p>NEAppProxyFlow is used to read data from and write data to a network socket.</p><pre><code>NEAppProxyFlow</code></pre></section>	https://developer.apple.com/reference/networkextension/neappproxyflow
NEAppProxyProvider	A							https://developer.apple.com/reference/networkextension/neappproxyprovider			<section class="prog__container"><p>Create a principal class for an App Proxy Provider app extension.</p><pre><code>NEAppProxyProvider</code></pre></section>	https://developer.apple.com/reference/networkextension/neappproxyprovider
NEAppProxyProviderManager	A							https://developer.apple.com/reference/networkextension/neappproxyprovidermanager			<section class="prog__container"><p>Configure and control network tunnels provided by an App Proxy Provider app extension.</p><pre><code>com.apple.vpn.managed.applayer</code></pre></section>	https://developer.apple.com/reference/networkextension/neappproxyprovidermanager
NEAppProxyTCPFlow	A							https://developer.apple.com/reference/networkextension/neappproxytcpflow			<section class="prog__container"><p>NEAppProxyTCPFlow is used to read data from and write data to a TCP socket that is being proxied by an App Proxy Provider.</p><pre><code>NEAppProxyTCPFlow</code></pre></section>	https://developer.apple.com/reference/networkextension/neappproxytcpflow
NEAppProxyUDPFlow	A							https://developer.apple.com/reference/networkextension/neappproxyudpflow			<section class="prog__container"><p>NEAppProxyUDPFlow is used to read data from and write data to a UDP socket that is being proxied by an App Proxy Provider.</p><pre><code>NEAppProxyUDPFlow</code></pre></section>	https://developer.apple.com/reference/networkextension/neappproxyudpflow
NEAppRule	A							https://developer.apple.com/reference/networkextension/neapprule			<section class="prog__container"><p>NEAppRule contains the match conditions for a rule that is used to match network connections based on source application.</p><pre><code>NEAppRule</code></pre></section>	https://developer.apple.com/reference/networkextension/neapprule
NEDNSSettings	A							https://developer.apple.com/reference/networkextension/nednssettings			<section class="prog__container"><p>NEDNSSettings contains the DNS resolver settings of a network tunnel.</p><pre><code>NEDNSSettings</code></pre></section>	https://developer.apple.com/reference/networkextension/nednssettings
NEEvaluateConnectionRule	A							https://developer.apple.com/reference/networkextension/neevaluateconnectionrule			<section class="prog__container"><p>NEEvaluateConnectionRule associates properties of network connections with an action.</p><pre><code>NEEvaluateConnectionRule</code></pre></section>	https://developer.apple.com/reference/networkextension/neevaluateconnectionrule
NEFilterBrowserFlow	A							https://developer.apple.com/reference/networkextension/nefilterbrowserflow			<section class="prog__container"><p>NEFilterBrowserFlow contains details about a flow of network data which originated from a WebKit browser object.</p><pre><code>var parentURL: URL?</code></pre></section>	https://developer.apple.com/reference/networkextension/nefilterbrowserflow
NEFilterControlProvider	A							https://developer.apple.com/reference/networkextension/nefiltercontrolprovider			<section class="prog__container"><p>Create a principal class for a Filter Control Provider app extension.</p><pre><code>com.apple.developer.networking.networkextension</code></pre></section>	https://developer.apple.com/reference/networkextension/nefiltercontrolprovider
NEFilterControlVerdict	A							https://developer.apple.com/reference/networkextension/nefiltercontrolverdict			<section class="prog__container"><p>NEFilterControlVerdict contains the decision that a Filter Control Provider makes about a flow of network data.</p><pre><code>NEFilterControlVerdict</code></pre></section>	https://developer.apple.com/reference/networkextension/nefiltercontrolverdict
NEFilterDataProvider	A							https://developer.apple.com/reference/networkextension/nefilterdataprovider			<section class="prog__container"><p>Create a principal class for a Filter Data Provider app extension.</p><pre><code>NEFilterFlow</code></pre></section>	https://developer.apple.com/reference/networkextension/nefilterdataprovider
NEFilterDataVerdict	A							https://developer.apple.com/reference/networkextension/nefilterdataverdict			<section class="prog__container"><p>NEFilterDataVerdict contains the decision that a Filter Data Provider makes about a chunk of network data.</p><pre><code>NEFilterDataVerdict</code></pre></section>	https://developer.apple.com/reference/networkextension/nefilterdataverdict
NEFilterFlow	A							https://developer.apple.com/reference/networkextension/nefilterflow			<section class="prog__container"><p>NEFilterFlow contains details about a flow of network data that is being examined by a Filter Provider.</p><pre><code>NEFilterFlow</code></pre></section>	https://developer.apple.com/reference/networkextension/nefilterflow
NEFilterManager	A							https://developer.apple.com/reference/networkextension/nefiltermanager			<section class="prog__container"><p>Create and manage network content filter configurations and to control network content filters.</p><pre><code>NEFilterManager</code></pre></section>	https://developer.apple.com/reference/networkextension/nefiltermanager
NEFilterNewFlowVerdict	A							https://developer.apple.com/reference/networkextension/nefilternewflowverdict			<section class="prog__container"><p>NEFilterNewFlowVerdict contains the decision that a Filter Provider makes about a flow of network data that the Filter Provider has just seen for the first time.</p><pre><code>NEFilterNewFlowVerdict</code></pre></section>	https://developer.apple.com/reference/networkextension/nefilternewflowverdict
NEFilterProvider	A							https://developer.apple.com/reference/networkextension/nefilterprovider			<section class="prog__container"><p>The base class for the two Filter Provider extension principal classes that work together to make a complete on-device network content filtering system.</p><pre><code>T</code></pre></section>	https://developer.apple.com/reference/networkextension/nefilterprovider
NEFilterProviderConfiguration	A							https://developer.apple.com/reference/networkextension/nefilterproviderconfiguration			<section class="prog__container"><p>NEFilterProviderConfiguration contains configuration settings for a Filter Provider.</p><pre><code>NEFilterProviderConfiguration</code></pre></section>	https://developer.apple.com/reference/networkextension/nefilterproviderconfiguration
NEFilterRemediationVerdict	A							https://developer.apple.com/reference/networkextension/nefilterremediationverdict			<section class="prog__container"><p>NEFilterRemediationVerdict contains the decision that Filter Data Provider makes about a flow of network data after the user has requested access to the network data.</p><pre><code>NEFilterRemediationVerdict</code></pre></section>	https://developer.apple.com/reference/networkextension/nefilterremediationverdict
NEFilterSocketFlow	A							https://developer.apple.com/reference/networkextension/nefiltersocketflow			<section class="prog__container"><p>NEFilterSocketFlow contains details about a flow of network data which originated from a socket.</p><pre><code>NEFilterSocketFlow</code></pre></section>	https://developer.apple.com/reference/networkextension/nefiltersocketflow
NEFilterVerdict	A							https://developer.apple.com/reference/networkextension/nefilterverdict			<section class="prog__container"><p>NEFilterVerdict is the base class for Network Extension content filter verdict classes. NEFilterVerdict objects are used by Filter Providers to inform the system about how to handle flows of network data.</p><pre><code>NEFilterVerdict</code></pre></section>	https://developer.apple.com/reference/networkextension/nefilterverdict
NEFlowMetaData	A							https://developer.apple.com/reference/networkextension/neflowmetadata			<section class="prog__container"><p>NEFlowMetaData contains additional information about a flow of network data beyond the flow’s local and remote network endpoints.</p><pre><code>NEFlowMetaData</code></pre></section>	https://developer.apple.com/reference/networkextension/neflowmetadata
NEHotspotHelper	A							https://developer.apple.com/reference/networkextension/nehotspothelper			<section class="prog__container"><p>Register an app as a Hotspot Helper.</p><pre><code>NEHotspotHelper</code></pre></section>	https://developer.apple.com/reference/networkextension/nehotspothelper
NEHotspotHelperCommand	A							https://developer.apple.com/reference/networkextension/nehotspothelpercommand			<section class="prog__container"><p>NEHotspotHelperCommand contains a command for Hotspot Helper apps to handle.</p><pre><code>NEHotspotHelperCommand</code></pre></section>	https://developer.apple.com/reference/networkextension/nehotspothelpercommand
NEHotspotHelperResponse	A							https://developer.apple.com/reference/networkextension/nehotspothelperresponse			<section class="prog__container"><p>NEHotspotHelperResponse contains a response to a Hotspot Helper command.</p><pre><code>NEHotspotHelperResponse</code></pre></section>	https://developer.apple.com/reference/networkextension/nehotspothelperresponse
NEHotspotNetwork	A							https://developer.apple.com/reference/networkextension/nehotspotnetwork			<section class="prog__container"><p>NEHotspotNetwork conveys information about a network to Hotspot Helper apps.</p><pre><code>NEHotspotNetwork</code></pre></section>	https://developer.apple.com/reference/networkextension/nehotspotnetwork
NEIPv4Route	A							https://developer.apple.com/reference/networkextension/neipv4route			<section class="prog__container"><p>NEIPv4Route contains settings for an IPv4 route.</p><pre><code>NEIPv4Route</code></pre></section>	https://developer.apple.com/reference/networkextension/neipv4route
NEIPv4Settings	A							https://developer.apple.com/reference/networkextension/neipv4settings			<section class="prog__container"><p>NEIPv4Settings contains the Internet Protocol version 4 (IPv4) settings of a IP layer network tunnel.</p><pre><code>NEIPv4Settings</code></pre></section>	https://developer.apple.com/reference/networkextension/neipv4settings
NEIPv6Route	A							https://developer.apple.com/reference/networkextension/neipv6route			<section class="prog__container"><p>NEIPv6Route contains settings for an IPv6 route.</p><pre><code>NEIPv6Route</code></pre></section>	https://developer.apple.com/reference/networkextension/neipv6route
NEIPv6Settings	A							https://developer.apple.com/reference/networkextension/neipv6settings			<section class="prog__container"><p>NEIPv6Settings contains the Internet Protocol version 6 (IPv6) settings of a IP layer network tunnel.</p><pre><code>NEIPv6Settings</code></pre></section>	https://developer.apple.com/reference/networkextension/neipv6settings
NEOnDemandRule	A							https://developer.apple.com/reference/networkextension/neondemandrule			<section class="prog__container"><p>NEOnDemandRule defines a rule for when to start a VPN connection automatically.</p><pre><code>NEOnDemandRule</code></pre></section>	https://developer.apple.com/reference/networkextension/neondemandrule
NEOnDemandRuleConnect	A							https://developer.apple.com/reference/networkextension/neondemandruleconnect			<section class="prog__container"><p>NEOnDemandRuleConnect defines a Connect On Demand rule with the NEOnDemandRuleActionConnect action.</p><pre><code>NEOnDemandRuleConnect</code></pre></section>	https://developer.apple.com/reference/networkextension/neondemandruleconnect
NEOnDemandRuleDisconnect	A							https://developer.apple.com/reference/networkextension/neondemandruledisconnect			<section class="prog__container"><p>NEOnDemandRuleDisconnect defines a Connect On Demand rule with the NEOnDemandRuleActionDisconnect action.</p><pre><code>NEOnDemandRuleDisconnect</code></pre></section>	https://developer.apple.com/reference/networkextension/neondemandruledisconnect
NEOnDemandRuleEvaluateConnection	A							https://developer.apple.com/reference/networkextension/neondemandruleevaluateconnection			<section class="prog__container"><p>NEOnDemandRuleEvaluateConnection defines a Connect On Demand rule with the NEOnDemandRuleActionEvaluateConnection action.</p><pre><code>NEOnDemandRuleEvaluateConnection</code></pre></section>	https://developer.apple.com/reference/networkextension/neondemandruleevaluateconnection
NEOnDemandRuleIgnore	A							https://developer.apple.com/reference/networkextension/neondemandruleignore			<section class="prog__container"><p>NEOnDemandRuleIgnore defines a Connect On Demand rule with the NEOnDemandRuleActionIgnore action.</p><pre><code>NEOnDemandRuleIgnore</code></pre></section>	https://developer.apple.com/reference/networkextension/neondemandruleignore
NEPacketTunnelFlow	A							https://developer.apple.com/reference/networkextension/nepackettunnelflow			<section class="prog__container"><p>NEPacketTunnelFlow is used to read packets from and write packets to a TUN virtual interface.</p><pre><code>NEPacketTunnelFlow</code></pre></section>	https://developer.apple.com/reference/networkextension/nepackettunnelflow
NEPacketTunnelNetworkSettings	A							https://developer.apple.com/reference/networkextension/nepackettunnelnetworksettings			<section class="prog__container"><p>NEPacketTunnelNetworkSettings contains the IP network settings of an IP-layer tunnel.</p><pre><code>NEPacketTunnelNetworkSettings</code></pre></section>	https://developer.apple.com/reference/networkextension/nepackettunnelnetworksettings
NEPacketTunnelProvider	A							https://developer.apple.com/reference/networkextension/nepackettunnelprovider			<section class="prog__container"><p>Create a principal class for a Packet Tunnel Provider app extension.</p><pre><code>NEPacketTunnelProvider</code></pre></section>	https://developer.apple.com/reference/networkextension/nepackettunnelprovider
NEProvider	A							https://developer.apple.com/reference/networkextension/neprovider			<section class="prog__container"><p>NEProvider is the base class for all Network Extension Provider classes.</p><pre><code>NEProvider</code></pre></section>	https://developer.apple.com/reference/networkextension/neprovider
NEProxyServer	A							https://developer.apple.com/reference/networkextension/neproxyserver			<section class="prog__container"><p>NEProxyServer contains settings for a proxy server.</p><pre><code>NEProxyServer</code></pre></section>	https://developer.apple.com/reference/networkextension/neproxyserver
NEProxySettings	A							https://developer.apple.com/reference/networkextension/neproxysettings			<section class="prog__container"><p>NEProxySettings contains HTTP proxy settings.</p><pre><code>NEProxySettings</code></pre></section>	https://developer.apple.com/reference/networkextension/neproxysettings
NETunnelNetworkSettings	A							https://developer.apple.com/reference/networkextension/netunnelnetworksettings			<section class="prog__container"><p>NETunnelNetworkSettings contains the network settings of a network tunnel.</p><pre><code>NETunnelNetworkSettings</code></pre></section>	https://developer.apple.com/reference/networkextension/netunnelnetworksettings
NETunnelProvider	A							https://developer.apple.com/reference/networkextension/netunnelprovider			<section class="prog__container"><p>Create a principal class for Network Extension Provider app extensions that implement the client-side of a custom network tunneling protocol.</p><pre><code>NETunnelProvider</code></pre></section>	https://developer.apple.com/reference/networkextension/netunnelprovider
NETunnelProviderManager	A							https://developer.apple.com/reference/networkextension/netunnelprovidermanager			<section class="prog__container"><p>Configure and control VPN connections provided by a Tunnel Provider app extension.</p><pre><code>NEVPNManager</code></pre></section>	https://developer.apple.com/reference/networkextension/netunnelprovidermanager
NETunnelProviderProtocol	A							https://developer.apple.com/reference/networkextension/netunnelproviderprotocol			<section class="prog__container"><p>NETunnelProviderProtocol contains configuration parameters for a network tunnel.</p><pre><code>NETunnelProviderProtocol</code></pre></section>	https://developer.apple.com/reference/networkextension/netunnelproviderprotocol
NETunnelProviderSession	A							https://developer.apple.com/reference/networkextension/netunnelprovidersession			<section class="prog__container"><p>NETunnelProviderSession is used to control a network tunnel connection, and to introspect the status of a tunnel connection.</p><pre><code>NETunnelProviderSession</code></pre></section>	https://developer.apple.com/reference/networkextension/netunnelprovidersession
NEVPNConnection	A							https://developer.apple.com/reference/networkextension/nevpnconnection			<section class="prog__container"><p>NEVPNConnection is used to control a VPN connection and to introspect the status of a VPN connection.</p><pre><code>NEVPNConnection</code></pre></section>	https://developer.apple.com/reference/networkextension/nevpnconnection
NEVPNIKEv2SecurityAssociationParameters	A							https://developer.apple.com/reference/networkextension/nevpnikev2securityassociationparameters			<section class="prog__container"><p>NEVPNIKEv2SecurityAssociationParameters contains parameters for an IKEv2 Security Association.</p><pre><code>NEVPNIKEv2SecurityAssociationParameters</code></pre></section>	https://developer.apple.com/reference/networkextension/nevpnikev2securityassociationparameters
NEVPNManager	A							https://developer.apple.com/reference/networkextension/nevpnmanager			<section class="prog__container"><p>NEVPNManager is used to create and manage VPN configurations and to control the resulting VPN tunnel connections.</p><pre><code>NEVPNManager</code></pre></section>	https://developer.apple.com/reference/networkextension/nevpnmanager
NEVPNProtocol	A							https://developer.apple.com/reference/networkextension/nevpnprotocol			<section class="prog__container"><p>NEVPNProtocol contains the protocol-specific portion of a VPN configuration</p><pre><code>NEVPNProtocol</code></pre></section>	https://developer.apple.com/reference/networkextension/nevpnprotocol
NEVPNProtocolIKEv2	A							https://developer.apple.com/reference/networkextension/nevpnprotocolikev2			<section class="prog__container"><p>NEVPNProtocolIKEv2 contains the IKEv2-specific portion of a VPN configuration.</p><pre><code>NEVPNProtocolIKEv2</code></pre></section>	https://developer.apple.com/reference/networkextension/nevpnprotocolikev2
NEVPNProtocolIPSec	A							https://developer.apple.com/reference/networkextension/nevpnprotocolipsec			<section class="prog__container"><p>NEVPNProtocolIPSec contains the IPSec-specific portion of a VPN configuration.</p><pre><code>NEVPNProtocolIPSec</code></pre></section>	https://developer.apple.com/reference/networkextension/nevpnprotocolipsec
NWBonjourServiceEndpoint	A							https://developer.apple.com/reference/networkextension/nwbonjourserviceendpoint			<section class="prog__container"><p>NWBonjourServiceEndpoint contains the specification of a network endpoint that is resolved using Bonjour.</p><pre><code>NWBonjourServiceEndpoint</code></pre></section>	https://developer.apple.com/reference/networkextension/nwbonjourserviceendpoint
NWEndpoint	A							https://developer.apple.com/reference/networkextension/nwendpoint			<section class="prog__container"><p>NWEndpoint is an abstract base class that represent network endpoints, such as a port on a remote server. All instances should be created using one of the subclasses, NWHostEndpoint or NWBonjourServiceEndpoint.</p><pre><code>NWEndpoint</code></pre></section>	https://developer.apple.com/reference/networkextension/nwendpoint
NWHostEndpoint	A							https://developer.apple.com/reference/networkextension/nwhostendpoint			<section class="prog__container"><p>NWHostEndpoint specifies a network endpoint using the endpoint’s host name or IP address.</p><pre><code>NWHostEndpoint</code></pre></section>	https://developer.apple.com/reference/networkextension/nwhostendpoint
NWPath	A							https://developer.apple.com/reference/networkextension/nwpath			<section class="prog__container"><p>NWPath contains the viability status and the properties of the path that a network connection will take on a device.</p><pre><code>NWPath</code></pre></section>	https://developer.apple.com/reference/networkextension/nwpath
NWTCPConnection	A							https://developer.apple.com/reference/networkextension/nwtcpconnection			<section class="prog__container"><p>NWTCPConnection is used to establish TCP connections to a network endpoint and to send and receive data on the established TCP connection.</p><pre><code>NWTCPConnection</code></pre></section>	https://developer.apple.com/reference/networkextension/nwtcpconnection
NWTCPConnectionAuthenticationDelegate	A							https://developer.apple.com/reference/networkextension/nwtcpconnectionauthenticationdelegate			<section class="prog__container"><p>NWTCPConnectionAuthenticationDelegate declares methods that NWTCPConnection objects call on their delegates to let them take custom actions on some connection events.</p><pre><code>NWTCPConnectionAuthenticationDelegate</code></pre></section>	https://developer.apple.com/reference/networkextension/nwtcpconnectionauthenticationdelegate
NWTLSParameters	A							https://developer.apple.com/reference/networkextension/nwtlsparameters			<section class="prog__container"><p>NWTLSParameters defines advanced TLS options to be used with NWTCPConnection instances.</p><pre><code>NWTLSParameters</code></pre></section>	https://developer.apple.com/reference/networkextension/nwtlsparameters
NWUDPSession	A							https://developer.apple.com/reference/networkextension/nwudpsession			<section class="prog__container"><p>NWUDPSession is used to establish UDP sessions to a network endpoint and send and receive datagrams.</p><pre><code>NWUDPSession</code></pre></section>	https://developer.apple.com/reference/networkextension/nwudpsession
NKAssetDownload	A							https://developer.apple.com/reference/newsstandkit/nkassetdownload			<section class="prog__container"><p>An instance of the NKAssetDownload class represents an asset that is being downloaded (or has downloaded) for an issue of a Newsstand application. </p><pre><code>NKAssetDownload</code></pre></section>	https://developer.apple.com/reference/newsstandkit/nkassetdownload
NKIssue	A							https://developer.apple.com/reference/newsstandkit/nkissue			<section class="prog__container"><p>An instance of the NKIssue class represents an issue of a newsstand content application.</p><pre><code>NKIssue</code></pre></section>	https://developer.apple.com/reference/newsstandkit/nkissue
NKLibrary	A							https://developer.apple.com/reference/newsstandkit/nklibrary			<section class="prog__container"><p>An instance of the NKLibrary class represents the library of issues for a newsstand content application. </p><pre><code>NKLibrary</code></pre></section>	https://developer.apple.com/reference/newsstandkit/nklibrary
NCWidgetController	A							https://developer.apple.com/reference/notificationcenter/ncwidgetcontroller			<section class="prog__container"><p>The NCWidgetController class defines an object that both a widget (that is, a Today extension) and the app that delivers the widget (called the containing app) can use to specify whether the widget has content to display. Because this class helps a widget and its containing app coordinate the display of the widget’s content, a widget that doesn’t communicate with its containing app is unlikely to use this class.</p><pre><code>NCWidgetController</code></pre></section>	https://developer.apple.com/reference/notificationcenter/ncwidgetcontroller
NCWidgetListViewController	A							https://developer.apple.com/reference/notificationcenter/ncwidgetlistviewcontroller			<section class="prog__container"><p>The NCWidgetListViewController class provides a list view for displaying content in a Today widget (a widget is an extension in the Today view of Notification Center). A list view controller works together with its delegate to display content and support user interaction with the list. To learn about the list view controller delegate methods, see NCWidgetListViewDelegate.</p><pre><code>NCWidgetListViewController</code></pre></section>	https://developer.apple.com/reference/notificationcenter/ncwidgetlistviewcontroller
NCWidgetListViewDelegate	A							https://developer.apple.com/reference/notificationcenter/ncwidgetlistviewdelegate			<section class="prog__container"><p>The NCWidgetListViewDelegate protocol defines methods that handle content display and editing in the list view of a Today widget (a widget is an extension in the Today view of Notification Center). The delegate of an NCWidgetListViewController must adopt the NCWidgetListViewDelegate protocol. </p><pre><code>NCWidgetListViewDelegate</code></pre></section>	https://developer.apple.com/reference/notificationcenter/ncwidgetlistviewdelegate
NCWidgetProviding	A							https://developer.apple.com/reference/notificationcenter/ncwidgetproviding			<section class="prog__container"><p>The NCWidgetProviding protocol lets you customize some of the appearance and behavior of a widget (a widget is an app extension).</p><pre><code>NCWidgetProviding</code></pre></section>	https://developer.apple.com/reference/notificationcenter/ncwidgetproviding
NCWidgetSearchViewController	A							https://developer.apple.com/reference/notificationcenter/ncwidgetsearchviewcontroller			<section class="prog__container"><p>The NCWidgetSearchViewController class provides a default search view within a widget (a widget is an extension in the Today view of Notification Center). A search view controller works together with its delegate to perform searches on the user’s input and display results from which a user can choose. To learn about the search view controller delegate methods, see NCWidgetSearchViewDelegate.</p><pre><code>NCWidgetSearchViewController</code></pre></section>	https://developer.apple.com/reference/notificationcenter/ncwidgetsearchviewcontroller
NCWidgetSearchViewDelegate	A							https://developer.apple.com/reference/notificationcenter/ncwidgetsearchviewdelegate			<section class="prog__container"><p>The NCWidgetSearchViewDelegate protocol defines methods that enable user searches in the search view controller of a widget (a widget is an extension in the Today view of Notification Center). The delegate of an NCWidgetSearchViewController must adopt the NCWidgetSearchViewDelegate protocol.</p><pre><code>NCWidgetSearchViewDelegate</code></pre></section>	https://developer.apple.com/reference/notificationcenter/ncwidgetsearchviewdelegate
Notification Center Constants	A							https://developer.apple.com/reference/notificationcenter/notification_center_constants			<section class="prog__container"><p>This document describes the constants in the Notification Center framework.</p><pre><code>NCWidgetDisplayMode</code></pre></section>	https://developer.apple.com/reference/notificationcenter/notification_center_constants
NSObject	A							https://developer.apple.com/reference/objectivec/nsobject			<section class="prog__container"><p>The root class of most Objective-C class hierarchies, from which subclasses inherit a basic interface to the runtime system and the ability to behave as Objective-C objects.</p><pre><code>class func initialize()</code></pre></section>	https://developer.apple.com/reference/objectivec/nsobject
NSObjectProtocol	A							https://developer.apple.com/reference/objectivec/nsobjectprotocol			<section class="prog__container"><p>The NSObject protocol groups methods that are fundamental to all Objective-C objects.</p><pre><code>NSObject</code></pre></section>	https://developer.apple.com/reference/objectivec/nsobjectprotocol
Objective-C Runtime	A							https://developer.apple.com/reference/objectivec/objective_c_runtime			<section class="prog__container"><p>Describes the macOS Objective-C runtime library support functions and data structures.</p><pre><code>/usr/lib/libobjc.A.dylib</code></pre></section>	https://developer.apple.com/reference/objectivec/objective_c_runtime
ODContext	A							https://developer.apple.com/reference/opendirectory/odcontext			<section class="prog__container"><p>An Open Directory context type.</p></section>	https://developer.apple.com/reference/opendirectory/odcontext
ODNode	A							https://developer.apple.com/reference/opendirectory/odnode			<section class="prog__container"><p>An ODNode object serves as a Cocoa wrapper for an Open Directory node.</p><pre><code>ODNode</code></pre></section>	https://developer.apple.com/reference/opendirectory/odnode
ODNodeRef	A							https://developer.apple.com/reference/opendirectory/odnoderef			<section class="prog__container"><p>An Open Directory node type.</p></section>	https://developer.apple.com/reference/opendirectory/odnoderef
ODQuery	A							https://developer.apple.com/reference/opendirectory/odquery			<section class="prog__container"><p>An ODQuery object serves as a Cocoa wrapper for an Open Directory query.</p><pre><code>ODQuery</code></pre></section>	https://developer.apple.com/reference/opendirectory/odquery
ODQueryDelegate	A							https://developer.apple.com/reference/opendirectory/odquerydelegate			<section class="prog__container"><p>The ODQueryDelegate protocol defines methods for receiving results returned from an Open Directory query.</p><pre><code>ODQueryDelegate</code></pre></section>	https://developer.apple.com/reference/opendirectory/odquerydelegate
ODQueryRef	A							https://developer.apple.com/reference/opendirectory/odqueryref			<section class="prog__container"><p>An Open Directory query type.</p><pre><code>ODQueryCreateWithNode(_:_:_:_:_:_:_:_:_:)</code></pre></section>	https://developer.apple.com/reference/opendirectory/odqueryref
ODRecord	A							https://developer.apple.com/reference/opendirectory/odrecord			<section class="prog__container"><p>An ODRecord object serves as a Cocoa wrapper for an Open Directory record.</p><pre><code>ODRecord</code></pre></section>	https://developer.apple.com/reference/opendirectory/odrecord
ODRecordRef	A							https://developer.apple.com/reference/opendirectory/odrecordref			<section class="prog__container"><p>An Open Directory record type.</p></section>	https://developer.apple.com/reference/opendirectory/odrecordref
ODSession	A							https://developer.apple.com/reference/opendirectory/odsession			<section class="prog__container"><p>An ODSession object serves as a Cocoa wrapper for an Open Directory session.</p><pre><code>ODSession</code></pre></section>	https://developer.apple.com/reference/opendirectory/odsession
ODSessionRef	A							https://developer.apple.com/reference/opendirectory/odsessionref			<section class="prog__container"><p>An Open Directory session type.</p><pre><code>ODSessionCreate(_:_:_:)</code></pre></section>	https://developer.apple.com/reference/opendirectory/odsessionref
OpenDirectory Functions	A							https://developer.apple.com/reference/opendirectory/opendirectory_functions			<section class="prog__container"><p>This document describes the functions, constants, and data types used to interact with Open Directory.</p><pre><code>func ODContextGetTypeID()</code></pre></section>	https://developer.apple.com/reference/opendirectory/opendirectory_functions
EAGL Functions	A							https://developer.apple.com/reference/opengles/eagl_functions			<section class="prog__container"><p>This document describes the functions in the OpenGL ES framework.</p><pre><code>func EAGLGetVersion(UnsafeMutablePointer<UInt32>!, UnsafeMutablePointer<UInt32>!)</code></pre></section>	https://developer.apple.com/reference/opengles/eagl_functions
EAGLContext	A							https://developer.apple.com/reference/opengles/eaglcontext			<section class="prog__container"><p>An EAGLContext object manages an OpenGL ES rendering context—the state information, commands, and resources needed to draw using OpenGL ES. To execute OpenGL ES commands, you need a current rendering context.</p><pre><code>EAGLContext</code></pre></section>	https://developer.apple.com/reference/opengles/eaglcontext
EAGLDrawable	A							https://developer.apple.com/reference/opengles/eagldrawable			<section class="prog__container"><p>iOS objects that implement the EAGLDrawable protocol can be used as a rendering surface and displayed to the screen by an EAGLContext object. In iOS 2.0, this protocol is implemented only by the CAEAGLLayer class, but in the future other classes may choose to implement the protocol. The EAGLDrawable protocol is not intended to be implemented by objects outside of the iOS.</p><pre><code>EAGLDrawable</code></pre></section>	https://developer.apple.com/reference/opengles/eagldrawable
EAGLSharegroup	A							https://developer.apple.com/reference/opengles/eaglsharegroup			<section class="prog__container"><p>An EAGLSharegroup object manages OpenGL ES resources associated with one or more EAGLContext objects. It is created when an EAGLContext object is initialized and disposed of when the last EAGLContext object that references it is released. As an opaque object, there is no developer accessible API.</p><pre><code>EAGLSharegroup</code></pre></section>	https://developer.apple.com/reference/opengles/eaglsharegroup
Activity Tracing	A							https://developer.apple.com/reference/os/activity_tracing			<section class="prog__container"><p>Log trace messages to an auto-generated ring buffer while associating them with the originating user action.</p><pre><code>func os_trace_debug_enabled()</code></pre></section>	https://developer.apple.com/reference/os/activity_tracing
Logging	A							https://developer.apple.com/reference/os/logging			<section class="prog__container"><p>Efficiently capture log messages to memory and disk. Manage logging behavior and persistence.</p><pre><code>log</code></pre></section>	https://developer.apple.com/reference/os/logging
Synchronization	A							https://developer.apple.com/reference/os/synchronization			<section class="prog__container"><p>Access low-level synchronization mechanisms to control access to state across different threads.</p><pre><code>xpc_object_t</code></pre></section>	https://developer.apple.com/reference/os/synchronization
PKAddPassButton	A							https://developer.apple.com/reference/passkit/pkaddpassbutton			<section class="prog__container"><p>Provides a button that is used to add passes to Wallet. </p><pre><code>PKAddPassButton</code></pre></section>	https://developer.apple.com/reference/passkit/pkaddpassbutton
PKAddPassesViewController	A							https://developer.apple.com/reference/passkit/pkaddpassesviewcontroller			<section class="prog__container"><p>Lets your app show a pass and prompt the user to add that pass to the pass library.</p><pre><code>addPasses(_:withCompletionHandler:)</code></pre></section>	https://developer.apple.com/reference/passkit/pkaddpassesviewcontroller
PKAddPassesViewControllerDelegate	A							https://developer.apple.com/reference/passkit/pkaddpassesviewcontrollerdelegate			<section class="prog__container"><p>Methods that an add-passes view controller’s delegate implements.</p><pre><code>func addPassesViewControllerDidFinish(PKAddPassesViewController)</code></pre></section>	https://developer.apple.com/reference/passkit/pkaddpassesviewcontrollerdelegate
PKAddPaymentPassRequest	A							https://developer.apple.com/reference/passkit/pkaddpaymentpassrequest			<section class="prog__container"><p>Contains the card data needed to add a card to Apple Pay. </p><pre><code>PKAddPaymentPassRequest</code></pre></section>	https://developer.apple.com/reference/passkit/pkaddpaymentpassrequest
PKAddPaymentPassRequestConfiguration	A							https://developer.apple.com/reference/passkit/pkaddpaymentpassrequestconfiguration			<section class="prog__container"><p>Contains the configuration data needed to instantiate a new PKAddPaymentPassViewController object. </p><pre><code>PKAddPaymentPassViewController</code></pre></section>	https://developer.apple.com/reference/passkit/pkaddpaymentpassrequestconfiguration
PKAddPaymentPassViewController	A							https://developer.apple.com/reference/passkit/pkaddpaymentpassviewcontroller			<section class="prog__container"><p>Lets you display an interface that lets users add cards to Apple Pay from within your app.</p><pre><code>init?(requestConfiguration: PKAddPaymentPassRequestConfiguration, delegate: PKAddPaymentPassViewControllerDelegate?)</code></pre></section>	https://developer.apple.com/reference/passkit/pkaddpaymentpassviewcontroller
PKAddPaymentPassViewControllerDelegate	A							https://developer.apple.com/reference/passkit/pkaddpaymentpassviewcontrollerdelegate			<section class="prog__container"><p>Methods that let the system prompt you for an add payment request, and inform you when a request has succeeded or failed.</p><pre><code>PKAddPaymentPassViewController</code></pre></section>	https://developer.apple.com/reference/passkit/pkaddpaymentpassviewcontrollerdelegate
PKAddressField	A							https://developer.apple.com/reference/passkit/pkaddressfield			<section class="prog__container"><p>Billing or shipping address fields.</p><pre><code>static var postalAddress: PKAddressField</code></pre></section>	https://developer.apple.com/reference/passkit/pkaddressfield
PKContact	A							https://developer.apple.com/reference/passkit/pkcontact			<section class="prog__container"><p>Encapsulates contact information needed for billing and shipping. </p><pre><code>nil</code></pre></section>	https://developer.apple.com/reference/passkit/pkcontact
PKEncryptionScheme	A							https://developer.apple.com/reference/passkit/pkencryptionscheme			<section class="prog__container"><p>Encryption schemes.</p><pre><code>init(rawValue: String)</code></pre></section>	https://developer.apple.com/reference/passkit/pkencryptionscheme
PKLabeledValue	A							https://developer.apple.com/reference/passkit/pklabeledvalue			<section class="prog__container"><p>An object that can represent a detail about a payment card or other item.</p><pre><code>init(label: String, value: String)</code></pre></section>	https://developer.apple.com/reference/passkit/pklabeledvalue
PKMerchantCapability	A							https://developer.apple.com/reference/passkit/pkmerchantcapability			<section class="prog__container"><p>Capabilities for processing payment.</p><pre><code>static var capability3DS: PKMerchantCapability</code></pre></section>	https://developer.apple.com/reference/passkit/pkmerchantcapability
PKObject	A							https://developer.apple.com/reference/passkit/pkobject			<section class="prog__container"><p>An opaque type that acts as the superclass for the PKPass class. </p><pre><code>PKPass</code></pre></section>	https://developer.apple.com/reference/passkit/pkobject
PKPass	A							https://developer.apple.com/reference/passkit/pkpass			<section class="prog__container"><p>An object that represents a single pass.</p><pre><code>init(data: Data, error: NSErrorPointer)</code></pre></section>	https://developer.apple.com/reference/passkit/pkpass
PKPassKitError	A							https://developer.apple.com/reference/passkit/pkpasskiterror			<section class="prog__container"><p>Errors used by the PassKit framework.</p><pre><code>PKPassKitError.Code</code></pre></section>	https://developer.apple.com/reference/passkit/pkpasskiterror
PKPassLibrary	A							https://developer.apple.com/reference/passkit/pkpasslibrary			<section class="prog__container"><p>Provides an interface to the user’s library of passes.</p><pre><code>PKPassLibrary</code></pre></section>	https://developer.apple.com/reference/passkit/pkpasslibrary
PKPassLibraryNotificationKey	A							https://developer.apple.com/reference/passkit/pkpasslibrarynotificationkey			<section class="prog__container"><p>Keys in the PKPassLibraryDidChange user info dictionary.</p><pre><code>PKPassLibraryDidChange</code></pre></section>	https://developer.apple.com/reference/passkit/pkpasslibrarynotificationkey
PKPassLibraryNotificationName	A							https://developer.apple.com/reference/passkit/pkpasslibrarynotificationname			<section class="prog__container"><p>Types of notifications issued by a pass library instance.</p><pre><code>init(String)</code></pre></section>	https://developer.apple.com/reference/passkit/pkpasslibrarynotificationname
PKPayment	A							https://developer.apple.com/reference/passkit/pkpayment			<section class="prog__container"><p>Represents the result of authorizing a payment request and contains payment information, encrypted in the payment token.</p><pre><code>var token: PKPaymentToken</code></pre></section>	https://developer.apple.com/reference/passkit/pkpayment
PKPaymentAuthorizationController	A							https://developer.apple.com/reference/passkit/pkpaymentauthorizationcontroller			<section class="prog__container"><p>Presents a sheet that prompts the user to authorize a payment request. </p><pre><code>PKPaymentAuthorizationController</code></pre></section>	https://developer.apple.com/reference/passkit/pkpaymentauthorizationcontroller
PKPaymentAuthorizationControllerDelegate	A							https://developer.apple.com/reference/passkit/pkpaymentauthorizationcontrollerdelegate			<section class="prog__container"><p>Methods that let you respond to user interactions with your payment authorization controller.</p><pre><code>PKPaymentAuthorizationControllerDelegate</code></pre></section>	https://developer.apple.com/reference/passkit/pkpaymentauthorizationcontrollerdelegate
PKPaymentAuthorizationViewController	A							https://developer.apple.com/reference/passkit/pkpaymentauthorizationviewcontroller			<section class="prog__container"><p>Prompts the user to authorize a payment request. </p><pre><code>class func canMakePayments()</code></pre></section>	https://developer.apple.com/reference/passkit/pkpaymentauthorizationviewcontroller
PKPaymentAuthorizationViewControllerDelegate	A							https://developer.apple.com/reference/passkit/pkpaymentauthorizationviewcontrollerdelegate			<section class="prog__container"><p>Methods that let you respond to user interactions with your payment authorization view controller.</p><pre><code>PKPaymentAuthorizationViewControllerDelegate</code></pre></section>	https://developer.apple.com/reference/passkit/pkpaymentauthorizationviewcontrollerdelegate
PKPaymentButton	A							https://developer.apple.com/reference/passkit/pkpaymentbutton			<section class="prog__container"><p>Provides a button that is used either to trigger payments through Apple Pay or to prompt the user to set up a card.</p><pre><code>PKPaymentButton</code></pre></section>	https://developer.apple.com/reference/passkit/pkpaymentbutton
PKPaymentMethod	A							https://developer.apple.com/reference/passkit/pkpaymentmethod			<section class="prog__container"><p>Contains information about Apple Pay cards.      </p><pre><code>var displayName: String?</code></pre></section>	https://developer.apple.com/reference/passkit/pkpaymentmethod
PKPaymentNetwork	A							https://developer.apple.com/reference/passkit/pkpaymentnetwork			<section class="prog__container"><p>Payment networks.</p><pre><code>init(String)</code></pre></section>	https://developer.apple.com/reference/passkit/pkpaymentnetwork
PKPaymentPass	A							https://developer.apple.com/reference/passkit/pkpaymentpass			<section class="prog__container"><p>Represents a provisioned payment card for in-app payments.</p><pre><code>var activationState: PKPaymentPassActivationState</code></pre></section>	https://developer.apple.com/reference/passkit/pkpaymentpass
PKPaymentRequest	A							https://developer.apple.com/reference/passkit/pkpaymentrequest			<section class="prog__container"><p>Encapsulates a request for payment, including information about payment processing capabilities, the payment amount, and shipping information.</p><pre><code>class func availableNetworks()</code></pre></section>	https://developer.apple.com/reference/passkit/pkpaymentrequest
PKPaymentSummaryItem	A							https://developer.apple.com/reference/passkit/pkpaymentsummaryitem			<section class="prog__container"><p>Defines a summary item in a payment request—for example, total, tax, discount, or grand total.</p><pre><code>PKShippingMethod</code></pre></section>	https://developer.apple.com/reference/passkit/pkpaymentsummaryitem
PKPaymentToken	A							https://developer.apple.com/reference/passkit/pkpaymenttoken			<section class="prog__container"><p>Contains the user’s payment credentials.</p><pre><code>token</code></pre></section>	https://developer.apple.com/reference/passkit/pkpaymenttoken
PKShippingMethod	A							https://developer.apple.com/reference/passkit/pkshippingmethod			<section class="prog__container"><p>Defines a shipping method for delivering physical goods.</p><pre><code>var detail: String?</code></pre></section>	https://developer.apple.com/reference/passkit/pkshippingmethod
PKSuicaPassProperties	A							https://developer.apple.com/reference/passkit/pksuicapassproperties			<section class="prog__container"><p>Represents the properties a Suica pass can have.</p><pre><code>init?(for: PKPass)</code></pre></section>	https://developer.apple.com/reference/passkit/pksuicapassproperties
PHAdjustmentData	A							https://developer.apple.com/reference/photos/phadjustmentdata			<section class="prog__container"><p>A description of the edits made to an asset's photo, video, or Live Photo content, which allows your app to reconstruct or revert the effects of prior editing sessions.</p><pre><code>PHAdjustmentData</code></pre></section>	https://developer.apple.com/reference/photos/phadjustmentdata
PHAsset	A							https://developer.apple.com/reference/photos/phasset			<section class="prog__container"><p>A representation of an image, video or Live Photo in the Photos library.</p><pre><code>PHAsset</code></pre></section>	https://developer.apple.com/reference/photos/phasset
PHAssetBurstSelectionType	A							https://developer.apple.com/reference/photos/phassetburstselectiontype			<section class="prog__container"><p>Bit mask values indicating whether and how an asset is marked as a favorite member of a burst photo sequence. Used by the burstSelectionTypes property.</p><pre><code>burstSelectionTypes</code></pre></section>	https://developer.apple.com/reference/photos/phassetburstselectiontype
PHAssetChangeRequest	A							https://developer.apple.com/reference/photos/phassetchangerequest			<section class="prog__container"><p>A request to create, delete, change metadata for, or edit the content of a Photos asset, for use in a photo library change block.</p><pre><code>PHAssetChangeRequest</code></pre></section>	https://developer.apple.com/reference/photos/phassetchangerequest
PHAssetCollection	A							https://developer.apple.com/reference/photos/phassetcollection			<section class="prog__container"><p>A representation of a Photos asset grouping, such as a moment, user-created album, or smart album.</p><pre><code>PHAsset</code></pre></section>	https://developer.apple.com/reference/photos/phassetcollection
PHAssetCollectionChangeRequest	A							https://developer.apple.com/reference/photos/phassetcollectionchangerequest			<section class="prog__container"><p>A request to create, delete, or modify a Photos asset collection, for use in a photo library change block.</p><pre><code>PHAssetCollectionChangeRequest</code></pre></section>	https://developer.apple.com/reference/photos/phassetcollectionchangerequest
PHAssetCreationRequest	A							https://developer.apple.com/reference/photos/phassetcreationrequest			<section class="prog__container"><p>A request to create a new Photos asset from underlying data resources, for use in a photo library change block.</p><pre><code>PHAssetCreationRequest</code></pre></section>	https://developer.apple.com/reference/photos/phassetcreationrequest
PHAssetMediaSubtype	A							https://developer.apple.com/reference/photos/phassetmediasubtype			<section class="prog__container"><p>Constants identifying specific variations of asset media, such as panorama or screenshot photos and time lapse or high frame rate video.</p><pre><code>PHAsset</code></pre></section>	https://developer.apple.com/reference/photos/phassetmediasubtype
PHAssetMediaType	A							https://developer.apple.com/reference/photos/phassetmediatype			<section class="prog__container"><p>Constants identifying the general type of an asset, such as image or video.</p><pre><code>PHAsset</code></pre></section>	https://developer.apple.com/reference/photos/phassetmediatype
PHAssetResource	A							https://developer.apple.com/reference/photos/phassetresource			<section class="prog__container"><p>An underlying data resource associated with a photo, video, or Live Photo asset in the Photos library. </p><pre><code>PHAsset</code></pre></section>	https://developer.apple.com/reference/photos/phassetresource
PHAssetResourceCreationOptions	A							https://developer.apple.com/reference/photos/phassetresourcecreationoptions			<section class="prog__container"><p>A set of options affecting the creation of a new Photos asset from underlying resources.</p><pre><code>PHAssetCreationRequest</code></pre></section>	https://developer.apple.com/reference/photos/phassetresourcecreationoptions
PHAssetResourceManager	A							https://developer.apple.com/reference/photos/phassetresourcemanager			<section class="prog__container"><p>Provides methods for accessing the underlying data storage for the resources associated with a Photos asset. </p><pre><code>PHAssetResource</code></pre></section>	https://developer.apple.com/reference/photos/phassetresourcemanager
PHAssetResourceRequestOptions	A							https://developer.apple.com/reference/photos/phassetresourcerequestoptions			<section class="prog__container"><p>A set of options affecting the delivery of underlying asset data that you request from the asset resource manager.</p><pre><code>PHAssetResourceManager</code></pre></section>	https://developer.apple.com/reference/photos/phassetresourcerequestoptions
PHAssetSourceType	A							https://developer.apple.com/reference/photos/phassetsourcetype			<section class="prog__container"><p>Means by which an asset enters the Photos library, used by the PHAssetSourceType property.</p><pre><code>PHAssetSourceType</code></pre></section>	https://developer.apple.com/reference/photos/phassetsourcetype
PHCachingImageManager	A							https://developer.apple.com/reference/photos/phcachingimagemanager			<section class="prog__container"><p>Provides methods for retrieving or generating preview thumbnails and full-size image or video data associated with Photos assets, optimized for batch preloading large numbers of assets. </p><pre><code>PHCachingImageManager</code></pre></section>	https://developer.apple.com/reference/photos/phcachingimagemanager
PHChange	A							https://developer.apple.com/reference/photos/phchange			<section class="prog__container"><p>A description of a change that occurred in the Photos library.</p><pre><code>PHChange</code></pre></section>	https://developer.apple.com/reference/photos/phchange
PHCollection	A							https://developer.apple.com/reference/photos/phcollection			<section class="prog__container"><p>The abstract superclass for Photos asset collections and collection lists. </p><pre><code>PHAssetCollection</code></pre></section>	https://developer.apple.com/reference/photos/phcollection
PHCollectionList	A							https://developer.apple.com/reference/photos/phcollectionlist			<section class="prog__container"><p>A representation of a group containing Photos asset collections, such as a moments year or a folder of user-created albums.</p><pre><code>PHCollection</code></pre></section>	https://developer.apple.com/reference/photos/phcollectionlist
PHCollectionListChangeRequest	A							https://developer.apple.com/reference/photos/phcollectionlistchangerequest			<section class="prog__container"><p>A request to create, delete, or modify a Photos collection list, for use in a photo library change block.</p><pre><code>PHCollectionListChangeRequest</code></pre></section>	https://developer.apple.com/reference/photos/phcollectionlistchangerequest
PHContentEditingInput	A							https://developer.apple.com/reference/photos/phcontenteditinginput			<section class="prog__container"><p>A container that provides information about and access to the image, video, or Live Photo content of an asset to be edited.</p><pre><code>PHAsset</code></pre></section>	https://developer.apple.com/reference/photos/phcontenteditinginput
PHContentEditingInputRequestOptions	A							https://developer.apple.com/reference/photos/phcontenteditinginputrequestoptions			<section class="prog__container"><p>A set of options affecting the delivery of image or video data when you request to edit the content of a Photos asset.</p><pre><code>PHContentEditingInputRequestOptions</code></pre></section>	https://developer.apple.com/reference/photos/phcontenteditinginputrequestoptions
PHContentEditingOutput	A							https://developer.apple.com/reference/photos/phcontenteditingoutput			<section class="prog__container"><p>A container to which you provide the results of editing the photo, video, or Live Photo content of a Photos asset.</p><pre><code>PHAsset</code></pre></section>	https://developer.apple.com/reference/photos/phcontenteditingoutput
PHFetchOptions	A							https://developer.apple.com/reference/photos/phfetchoptions			<section class="prog__container"><p>A set of options that affect the filtering, sorting, and management of results that Photos returns when you fetch asset or collection objects.</p><pre><code>PHAsset</code></pre></section>	https://developer.apple.com/reference/photos/phfetchoptions
PHFetchResult	A							https://developer.apple.com/reference/photos/phfetchresult			<section class="prog__container"><p>An ordered list of assets or collections returned from a Photos fetch method. </p><pre><code>PHAsset</code></pre></section>	https://developer.apple.com/reference/photos/phfetchresult
PHFetchResultChangeDetails	A							https://developer.apple.com/reference/photos/phfetchresultchangedetails			<section class="prog__container"><p>A description of changes that occurred in the set of asset or collection objects listed in a fetch result. </p><pre><code>PHFetchResultChangeDetails</code></pre></section>	https://developer.apple.com/reference/photos/phfetchresultchangedetails
PHImageManager	A							https://developer.apple.com/reference/photos/phimagemanager			<section class="prog__container"><p>Provides methods for retrieving or generating preview thumbnails and full-size image or video data associated with Photos assets. </p><pre><code>PHAsset</code></pre></section>	https://developer.apple.com/reference/photos/phimagemanager
PHImageRequestOptions	A							https://developer.apple.com/reference/photos/phimagerequestoptions			<section class="prog__container"><p>A set of options affecting the delivery of still image representations of Photos assets you request from an image manager.</p><pre><code>var isSynchronous: Bool</code></pre></section>	https://developer.apple.com/reference/photos/phimagerequestoptions
PHLivePhoto	A							https://developer.apple.com/reference/photos/phlivephoto			<section class="prog__container"><p>A displayable representation of a Live Photo—a picture that includes motion and sound from the moments just before and after its capture.</p><pre><code>PHAsset</code></pre></section>	https://developer.apple.com/reference/photos/phlivephoto
PHLivePhotoEditingContext	A							https://developer.apple.com/reference/photos/phlivephotoeditingcontext			<section class="prog__container"><p>An editing session for modifying the photo, video, and audio content of a Live Photo.</p><pre><code>PHAsset</code></pre></section>	https://developer.apple.com/reference/photos/phlivephotoeditingcontext
PHLivePhotoFrame	A							https://developer.apple.com/reference/photos/phlivephotoframe			<section class="prog__container"><p>A container that provides image content for a single frame of a Live Photo in an editing context.</p><pre><code>frameProcessor</code></pre></section>	https://developer.apple.com/reference/photos/phlivephotoframe
PHLivePhotoRequestOptions	A							https://developer.apple.com/reference/photos/phlivephotorequestoptions			<section class="prog__container"><p>A set of options affecting the delivery of Live Photo assets you request from an image manager.</p><pre><code>var version: PHImageRequestOptionsVersion</code></pre></section>	https://developer.apple.com/reference/photos/phlivephotorequestoptions
PHObject	A							https://developer.apple.com/reference/photos/phobject			<section class="prog__container"><p>The abstract superclass for Photos model objects (assets and collections).</p><pre><code>PHAsset</code></pre></section>	https://developer.apple.com/reference/photos/phobject
PHObjectChangeDetails	A							https://developer.apple.com/reference/photos/phobjectchangedetails			<section class="prog__container"><p>A description of changes that occurred in an asset or collection object. </p><pre><code>PHObjectChangeDetails</code></pre></section>	https://developer.apple.com/reference/photos/phobjectchangedetails
PHObjectPlaceholder	A							https://developer.apple.com/reference/photos/phobjectplaceholder			<section class="prog__container"><p>A read-only proxy representing a Photos asset or collection object yet to be created by a change request.</p><pre><code>PHAssetChangeRequest *createAssetRequest = [PHAssetChangeRequest creationRequestForAssetFromImage:image];\nPHObjectPlaceholder *assetPlaceholder = createAssetRequest.placeholderForCreatedAsset;\nPHAssetCollectionChangeRequest *albumChangeRequest =\n  [PHAssetCollectionChangeRequest changeRequestForAssetCollection:album];\n[albumChangeRequest addAssets:@[ assetPlaceholder ]];\n</code></pre></section>	https://developer.apple.com/reference/photos/phobjectplaceholder
Photos Constants	A							https://developer.apple.com/reference/photos/photos_constants			<section class="prog__container"><p>This document describes constants used throughout the Photos framework.</p><pre><code>let PHContentEditingInputCancelledKey: String</code></pre></section>	https://developer.apple.com/reference/photos/photos_constants
PHPhotoLibrary	A							https://developer.apple.com/reference/photos/phphotolibrary			<section class="prog__container"><p>A shared object that manages access to and changes in the user’s Photos library.</p><pre><code>PHPhotoLibrary</code></pre></section>	https://developer.apple.com/reference/photos/phphotolibrary
PHPhotoLibraryChangeObserver	A							https://developer.apple.com/reference/photos/phphotolibrarychangeobserver			<section class="prog__container"><p>A protocol you can implement to be notified of changes that occur in the Photos library. </p><pre><code>PHPhotoLibraryChangeObserver</code></pre></section>	https://developer.apple.com/reference/photos/phphotolibrarychangeobserver
PHVideoRequestOptions	A							https://developer.apple.com/reference/photos/phvideorequestoptions			<section class="prog__container"><p>A set of options affecting the delivery of video asset data that you request from an image manager.</p><pre><code>var version: PHVideoRequestOptionsVersion</code></pre></section>	https://developer.apple.com/reference/photos/phvideorequestoptions
PHContentEditingController	A							https://developer.apple.com/reference/photosui/phcontenteditingcontroller			<section class="prog__container"><p>The PHContentEditingController protocol defines methods you implement in a custom view controller class in order to create a Photos extension. The Photos app hosts your extension’s view controller to provide a user interface for editing photo or video assets.</p><pre><code>PHContentEditingController</code></pre></section>	https://developer.apple.com/reference/photosui/phcontenteditingcontroller
PHLivePhotoBadgeOptions	A							https://developer.apple.com/reference/photosui/phlivephotobadgeoptions			<section class="prog__container"><p>Options for the semantic use and display style of icons for badging Live Photo assets, used by the livePhotoBadgeImage(options:) method.</p><pre><code>livePhotoBadgeImage(options:)</code></pre></section>	https://developer.apple.com/reference/photosui/phlivephotobadgeoptions
PHLivePhotoView	A							https://developer.apple.com/reference/photosui/phlivephotoview			<section class="prog__container"><p>A PHLivePhotoView object is a view that displays a Live Photo—a picture that also includes motion and sound from the moments just before and after its capture. </p><pre><code>PHLivePhotoView</code></pre></section>	https://developer.apple.com/reference/photosui/phlivephotoview
PHLivePhotoViewDelegate	A							https://developer.apple.com/reference/photosui/phlivephotoviewdelegate			<section class="prog__container"><p>The PHLivePhotoViewDelegate protocol describes messages sent by a PHLivePhotoView instance in response to playback events when playing the motion and sound content associated with a Live Photo. To receive these messages, implement the methods in this protocol in one of your controller objects and assign that object to the delegate property of a Live Photo view.</p><pre><code>PHLivePhotoViewDelegate</code></pre></section>	https://developer.apple.com/reference/photosui/phlivephotoviewdelegate
PlaygroundLiveViewable	A							https://developer.apple.com/reference/playgroundsupport/playgroundliveviewable			<section class="prog__container"><p>A protocol for types that can be displayed as the live view for a playground. </p><pre><code>PlaygroundLiveViewable</code></pre></section>	https://developer.apple.com/reference/playgroundsupport/playgroundliveviewable
PlaygroundLiveViewRepresentation	A							https://developer.apple.com/reference/playgroundsupport/playgroundliveviewrepresentation			<section class="prog__container"><p>An enumeration describing the supported representations for live views in playgrounds.</p><pre><code>case view(NSView)</code></pre></section>	https://developer.apple.com/reference/playgroundsupport/playgroundliveviewrepresentation
PlaygroundPage	A							https://developer.apple.com/reference/playgroundsupport/playgroundpage			<section class="prog__container"><p>An object that represents the state of a playground page and enables you to interact with Xcode.</p><pre><code>PlaygroundPage</code></pre></section>	https://developer.apple.com/reference/playgroundsupport/playgroundpage
PKPushCredentials	A							https://developer.apple.com/reference/pushkit/pkpushcredentials			<section class="prog__container"><p>An object that is used to encapsulate the granted push token and push type for an app.</p><pre><code>var token: Data</code></pre></section>	https://developer.apple.com/reference/pushkit/pkpushcredentials
PKPushPayload	A							https://developer.apple.com/reference/pushkit/pkpushpayload			<section class="prog__container"><p>A class that contains information about a received remote push.</p><pre><code>var dictionaryPayload: [AnyHashable : Any]</code></pre></section>	https://developer.apple.com/reference/pushkit/pkpushpayload
PKPushRegistry	A							https://developer.apple.com/reference/pushkit/pkpushregistry			<section class="prog__container"><p>An object that requests the delivery of specialized push notifications and handles the receipt of those notifications. </p><pre><code>delegate</code></pre></section>	https://developer.apple.com/reference/pushkit/pkpushregistry
PKPushRegistryDelegate	A							https://developer.apple.com/reference/pushkit/pkpushregistrydelegate			<section class="prog__container"><p>A set of methods that a push registry delegate object must adopt. </p><pre><code>func pushRegistry(PKPushRegistry, didInvalidatePushTokenForType: PKPushType)</code></pre></section>	https://developer.apple.com/reference/pushkit/pkpushregistrydelegate
PKPushType	A							https://developer.apple.com/reference/pushkit/pkpushtype			<section class="prog__container"><p>Constants reflecting the push types you want to support.</p><pre><code>init(rawValue: String)</code></pre></section>	https://developer.apple.com/reference/pushkit/pkpushtype
QTMovieModernizer	A							https://developer.apple.com/reference/qtkit/qtmoviemodernizer?language=objc			<section class="prog__container"><p>The QTMovieModernizer class is used to manage the "modernization" of legacy media.</p><pre><code>QTMovieModernizer</code></pre></section>	https://developer.apple.com/reference/qtkit/qtmoviemodernizer?language=objc
IKCameraDeviceView	A							https://developer.apple.com/reference/quartz/ikcameradeviceview			<section class="prog__container"><p>The IKCameraDeviceView class displays the contents of the selected camera.</p><pre><code>IKCameraDeviceView</code></pre></section>	https://developer.apple.com/reference/quartz/ikcameradeviceview
IKCameraDeviceViewDelegate	A							https://developer.apple.com/reference/quartz/ikcameradeviceviewdelegate			<section class="prog__container"><p>The IKCameraDeviceViewDelegate protocol is adopted by the delegate of the IKCameraDeviceView class. It allows downloading of camera content, handling selection changes, and handling errors.</p><pre><code>IKCameraDeviceViewDelegate</code></pre></section>	https://developer.apple.com/reference/quartz/ikcameradeviceviewdelegate
IKDeviceBrowserView	A							https://developer.apple.com/reference/quartz/ikdevicebrowserview			<section class="prog__container"><p>The IKDeviceBrowserView allows you to select a camera or scanner from a list of the available devices.</p><pre><code>IKDeviceBrowserView</code></pre></section>	https://developer.apple.com/reference/quartz/ikdevicebrowserview
IKDeviceBrowserViewDelegate	A							https://developer.apple.com/reference/quartz/ikdevicebrowserviewdelegate			<section class="prog__container"><p>The IKDeviceBrowserViewDelegate defines the methods that the delegate of the IKDeviceBrowserView class can implement. All the methods are optional.</p><pre><code>IKDeviceBrowserViewDelegate</code></pre></section>	https://developer.apple.com/reference/quartz/ikdevicebrowserviewdelegate
IKFilterBrowserPanel	A							https://developer.apple.com/reference/quartz/ikfilterbrowserpanel			<section class="prog__container"><p>The IKFilterBrowserPanel class provides a user interface that allows users to browse Core Image filters (CIFilter), to preview a filter, and to get additional information about the filter, such as its description.</p><pre><code>IKFilterBrowserPanel</code></pre></section>	https://developer.apple.com/reference/quartz/ikfilterbrowserpanel
IKFilterBrowserView	A							https://developer.apple.com/reference/quartz/ikfilterbrowserview			<section class="prog__container"><p>The IKFilterBrowserView class is used as a container for the elements of an IKFilterBrowserPanel object. </p><pre><code>IKFilterBrowserView</code></pre></section>	https://developer.apple.com/reference/quartz/ikfilterbrowserview
IKFilterCustomUIProvider	A							https://developer.apple.com/reference/quartz/ikfiltercustomuiprovider			<section class="prog__container"><p>The IKFilterCustomUIProvider protocol is an addition to the CIFilter class that defines a method for providing a view for a filter. This protocol is implemented by any filter that provides its own user interface.</p><pre><code>IKFilterCustomUIProvider</code></pre></section>	https://developer.apple.com/reference/quartz/ikfiltercustomuiprovider
IKFilterUIView	A							https://developer.apple.com/reference/quartz/ikfilteruiview			<section class="prog__container"><p>The IKFilterUIView class provides a view that contains input parameter controls for a Core Image filter (CIFilter). You need to use this class when providing a user interface for a custom filter. The class creates a view that has an object controller for the given filter. It also retains the filter.</p><pre><code>IKFilterUIView</code></pre></section>	https://developer.apple.com/reference/quartz/ikfilteruiview
IKImageBrowserCell	A							https://developer.apple.com/reference/quartz/ikimagebrowsercell			<section class="prog__container"><p>The IKImageBrowserCell class is used to display a cell conforming to the IKImageBrowserItem Protocol protocol in an IKImageBrowserView.</p><pre><code>IKImageBrowserCell</code></pre></section>	https://developer.apple.com/reference/quartz/ikimagebrowsercell
IKImageBrowserCellState	A							https://developer.apple.com/reference/quartz/ikimagebrowsercellstate			<section class="prog__container"><p>The possible states for the browser cell. These values are used by the cellState() method. </p><pre><code>cellState()</code></pre></section>	https://developer.apple.com/reference/quartz/ikimagebrowsercellstate
IKImageBrowserDataSource Protocol	A							https://developer.apple.com/reference/quartz/ikimagebrowserdatasource_protocol			<section class="prog__container"><p>The IKImageBrowserDataSource informal protocol declares the methods that an instance of the IKImageBrowserView class uses to access the contents of its data source object.</p><pre><code>IKImageBrowserDataSource</code></pre></section>	https://developer.apple.com/reference/quartz/ikimagebrowserdatasource_protocol
IKImageBrowserDelegate Protocol	A							https://developer.apple.com/reference/quartz/ikimagebrowserdelegate_protocol			<section class="prog__container"><p>The IKImageBrowserDelegate is an informal protocol for the delegate of an IKImageBrowserView object. You can implement these methods to perform custom tasks when in response to events in the image browser view. </p><pre><code>IKImageBrowserDelegate</code></pre></section>	https://developer.apple.com/reference/quartz/ikimagebrowserdelegate_protocol
IKImageBrowserDropOperation	A							https://developer.apple.com/reference/quartz/ikimagebrowserdropoperation			<section class="prog__container"><p>These constants specify the locations for dropping items onto the browser view. Used by the method setDrop(_:dropOperation:).</p><pre><code>setDrop(_:dropOperation:)</code></pre></section>	https://developer.apple.com/reference/quartz/ikimagebrowserdropoperation
IKImageBrowserItem Protocol	A							https://developer.apple.com/reference/quartz/ikimagebrowseritem_protocol			<section class="prog__container"><p>The IKImageBrowserItem informal protocol declares the methods that an instance of the IKImageBrowserView class uses to access the contents of its data source for a given item. Some of the methods in this protocol are needed frequently, so you should implement them efficiently.</p><pre><code>IKImageBrowserItem</code></pre></section>	https://developer.apple.com/reference/quartz/ikimagebrowseritem_protocol
IKImageBrowserView	A							https://developer.apple.com/reference/quartz/ikimagebrowserview			<section class="prog__container"><p>The IKImageBrowserView class is a view for displaying and browsing a large amount of images and movies efficiently. This class will be deprecated in a future release. Please switch to NSCollectionView instead.</p><pre><code>IKImageBrowserView</code></pre></section>	https://developer.apple.com/reference/quartz/ikimagebrowserview
IKImageEditPanel	A							https://developer.apple.com/reference/quartz/ikimageeditpanel			<section class="prog__container"><p>The IKImageEditPanel class provides a panel, that is, a utility window that floats on top of document windows, optimized for image editing.</p><pre><code>IKImageEditPanel</code></pre></section>	https://developer.apple.com/reference/quartz/ikimageeditpanel
IKImageEditPanelDataSource	A							https://developer.apple.com/reference/quartz/ikimageeditpaneldatasource			<section class="prog__container"><p>The IKImageEditPanelDataSource protocol describes the methods that an IKImageEditPanel object uses to access the contents of its data source object.</p><pre><code>IKImageEditPanelDataSource</code></pre></section>	https://developer.apple.com/reference/quartz/ikimageeditpaneldatasource
IKImageView	A							https://developer.apple.com/reference/quartz/ikimageview			<section class="prog__container"><p>The IKImageView class provides an efficient way to display images in a view while at the same time supporting a number of image editing operations such as rotating, zooming, and cropping. It supports drag and drop for the NSFilenamesPboardType flavor so that the user can drag an image to the view. If possible, image rendering uses hardware acceleration to achieve optimal performance. The IKImageView class is implemented as a subclass of NSView. Similar to NSImageView, the IKImageView class is used to display a single image. </p><pre><code>IKImageView</code></pre></section>	https://developer.apple.com/reference/quartz/ikimageview
IKPictureTaker	A							https://developer.apple.com/reference/quartz/ikpicturetaker			<section class="prog__container"><p>The IKPictureTaker class represents a panel that allows users to choose images by browsing the file system. The picture taker panel provides an Open Recent menu, supports image cropping, and supports taking snapshots from an iSight or other digital camera.</p><pre><code>IKPictureTaker</code></pre></section>	https://developer.apple.com/reference/quartz/ikpicturetaker
IKSaveOptions	A							https://developer.apple.com/reference/quartz/iksaveoptions			<section class="prog__container"><p>The IKSaveOptions class initializes, adds, and manages user interface options for saving image data.</p><pre><code>IKSaveOptions</code></pre></section>	https://developer.apple.com/reference/quartz/iksaveoptions
IKScannerDeviceView	A							https://developer.apple.com/reference/quartz/ikscannerdeviceview			<section class="prog__container"><p>The IKScannerDeviceView class displays a view that allows scanning. It can be customized by specifying the display mode. The delegate receives the scanned data and must implement the IKScannerDeviceViewDelegate protocol.</p><pre><code>IKScannerDeviceView</code></pre></section>	https://developer.apple.com/reference/quartz/ikscannerdeviceview
IKScannerDeviceViewDelegate	A							https://developer.apple.com/reference/quartz/ikscannerdeviceviewdelegate			<section class="prog__container"><p>The IKScannerDeviceViewDelegate protocol defines the delegate protocol that the IKScannerDeviceView delegate must conform to.</p><pre><code>IKScannerDeviceViewDelegate</code></pre></section>	https://developer.apple.com/reference/quartz/ikscannerdeviceviewdelegate
IKSlideshow	A							https://developer.apple.com/reference/quartz/ikslideshow			<section class="prog__container"><p>The IKSlideshow class encapsulates a data source and options for a slideshow. </p><pre><code>IKSlideshow</code></pre></section>	https://developer.apple.com/reference/quartz/ikslideshow
IKSlideshowDataSource	A							https://developer.apple.com/reference/quartz/ikslideshowdatasource			<section class="prog__container"><p>The IKSlideshowDataSource protocol describes the methods that an IKSlideshow object uses to access the contents of its data source object.</p><pre><code>IKSlideshowDataSource</code></pre></section>	https://developer.apple.com/reference/quartz/ikslideshowdatasource
PDFAction	A							https://developer.apple.com/reference/quartz/pdfaction			<section class="prog__container"><p>PDFAction, a subclass of NSObject, represents an action that is performed when, for example, a PDF annotation is activated or an outline item is clicked. </p><pre><code>PDFAction</code></pre></section>	https://developer.apple.com/reference/quartz/pdfaction
PDFActionGoTo	A							https://developer.apple.com/reference/quartz/pdfactiongoto			<section class="prog__container"><p>PDFActionGoTo, a subclass of PDFAction, defines methods for getting and setting the destination of a go-to action.</p><pre><code>PDFActionGoTo</code></pre></section>	https://developer.apple.com/reference/quartz/pdfactiongoto
PDFActionNamed	A							https://developer.apple.com/reference/quartz/pdfactionnamed			<section class="prog__container"><p>PDFActionNamed defines methods used to work with actions in PDF documents, some of which are named in the Adobe PDF Specification.</p><pre><code>PDFActionNamed</code></pre></section>	https://developer.apple.com/reference/quartz/pdfactionnamed
PDFActionRemoteGoTo	A							https://developer.apple.com/reference/quartz/pdfactionremotegoto			<section class="prog__container"><p>PDFActionRemoteGoTo, a subclass of PDFAction, defines methods for getting and setting the destination of a go-to action that targets another document.</p><pre><code>PDFActionRemoteGoTo</code></pre></section>	https://developer.apple.com/reference/quartz/pdfactionremotegoto
PDFActionResetForm	A							https://developer.apple.com/reference/quartz/pdfactionresetform			<section class="prog__container"><p>PDFActionResetForm, a subclass of PDFAction, defines methods for getting and clearing fields in a PDF form.</p><pre><code>PDFActionResetForm</code></pre></section>	https://developer.apple.com/reference/quartz/pdfactionresetform
PDFActionURL	A							https://developer.apple.com/reference/quartz/pdfactionurl			<section class="prog__container"><p>PDFActionURL, a subclass of PDFAction, defines methods for getting and setting the URL associated with a URL action. </p><pre><code>PDFActionURL</code></pre></section>	https://developer.apple.com/reference/quartz/pdfactionurl
PDFAnnotation	A							https://developer.apple.com/reference/quartz/pdfannotation			<section class="prog__container"><p>PDFAnnotation, a subclass of NSObject, represents an annotation in a PDF document, which associates an object (such as a note or a sound) with a location in a PDF document.</p><pre><code>PDFAnnotation</code></pre></section>	https://developer.apple.com/reference/quartz/pdfannotation
PDFBorder	A							https://developer.apple.com/reference/quartz/pdfborder			<section class="prog__container"><p>A PDFBorder object, when used, adds an optional border to an annotation. Borders are drawn completely within the annotation rectangle.</p><pre><code>var style: PDFBorderStyle</code></pre></section>	https://developer.apple.com/reference/quartz/pdfborder
PDFDestination	A							https://developer.apple.com/reference/quartz/pdfdestination			<section class="prog__container"><p>A PDFDestination object describes a point on a PDF page.</p><pre><code>PDFDestination</code></pre></section>	https://developer.apple.com/reference/quartz/pdfdestination
PDFDocument	A							https://developer.apple.com/reference/quartz/pdfdocument			<section class="prog__container"><p>A PDFDocument object represents PDF data or a PDF file and defines methods for writing, searching, and selecting PDF data.</p><pre><code>PDFDocument</code></pre></section>	https://developer.apple.com/reference/quartz/pdfdocument
PDFOutline	A							https://developer.apple.com/reference/quartz/pdfoutline			<section class="prog__container"><p>A PDFOutline object is an element in a tree-structured hierarchy that can represent the structure of a PDF document.</p><pre><code>PDFOutline</code></pre></section>	https://developer.apple.com/reference/quartz/pdfoutline
PDFPage	A							https://developer.apple.com/reference/quartz/pdfpage			<section class="prog__container"><p>PDFPage, a subclass of NSObject, defines methods used to render PDF pages and work with annotations, text, and selections.</p><pre><code>PDFPage</code></pre></section>	https://developer.apple.com/reference/quartz/pdfpage
PDFSelection	A							https://developer.apple.com/reference/quartz/pdfselection			<section class="prog__container"><p>A PDFSelection object identifies a contiguous or noncontiguous selection of text in a PDF document.</p><pre><code>PDFSelection</code></pre></section>	https://developer.apple.com/reference/quartz/pdfselection
PDFThumbnailView	A							https://developer.apple.com/reference/quartz/pdfthumbnailview			<section class="prog__container"><p>A PDFThumbnailView object contains a set of thumbnails, each of which represents a page in a PDF document.</p><pre><code>PDFThumbnailView</code></pre></section>	https://developer.apple.com/reference/quartz/pdfthumbnailview
PDFView	A							https://developer.apple.com/reference/quartz/pdfview			<section class="prog__container"><p>A PDFView object encapsulates the functionality of PDF Kit into a single widget that you can add to your application using Interface Builder.</p><pre><code>PDFView</code></pre></section>	https://developer.apple.com/reference/quartz/pdfview
QCComposition	A							https://developer.apple.com/reference/quartz/qccomposition			<section class="prog__container"><p>The QCComposition class represents a Quartz Composer composition that either:</p><pre><code>QCComposition</code></pre></section>	https://developer.apple.com/reference/quartz/qccomposition
QCCompositionLayer	A							https://developer.apple.com/reference/quartz/qccompositionlayer			<section class="prog__container"><p>The QCCompositionLayer class loads, plays, and controls Quartz Composer compositions in a Core Animation layer hierarchy. The composition tracks the Core Animation layer time and is rendered directly at the current dimensions of the QCCompositionLayer object.</p><pre><code>QCCompositionLayer</code></pre></section>	https://developer.apple.com/reference/quartz/qccompositionlayer
QCCompositionParameterView	A							https://developer.apple.com/reference/quartz/qccompositionparameterview			<section class="prog__container"><p>The QCCompositionParameterView class allows allows users to edit, in real time, the input parameters of a composition. The composition can be rendering in any of the following objects: QCRenderer, QCView, or QCCompositionLayer.</p><pre><code>QCCompositionParameterView</code></pre></section>	https://developer.apple.com/reference/quartz/qccompositionparameterview
QCCompositionParameterViewDelegate	A							https://developer.apple.com/reference/quartz/qccompositionparameterviewdelegate			<section class="prog__container"><p>The QCCompositionParameterViewDelegate informal protocol allows your application to define which parameters should be visible in a QCCompositionParameterView object.</p><pre><code>QCCompositionParameterView</code></pre></section>	https://developer.apple.com/reference/quartz/qccompositionparameterviewdelegate
QCCompositionPickerPanel	A							https://developer.apple.com/reference/quartz/qccompositionpickerpanel			<section class="prog__container"><p>The QCCompositionPickerPanel class represents a utility window that allows users to browse compositions that are in the Quartz Composer composition repository and, if supported, preview the composition. The QCCompositionPickerPanel class cannot be subclassed.</p><pre><code>QCCompositionPickerPanel</code></pre></section>	https://developer.apple.com/reference/quartz/qccompositionpickerpanel
QCCompositionPickerView	A							https://developer.apple.com/reference/quartz/qccompositionpickerview			<section class="prog__container"><p>The QCCompositionPickerView class allows users to browse compositions that are in the Quartz Composer composition repository, and to preview them. You can set the default input parameters for a composition preview by using the method setDefaultValue:forInputKey:.</p><pre><code>QCCompositionPickerView</code></pre></section>	https://developer.apple.com/reference/quartz/qccompositionpickerview
QCCompositionPickerViewDelegate	A							https://developer.apple.com/reference/quartz/qccompositionpickerviewdelegate			<section class="prog__container"><p>The QCCompositionPickerViewDelegate informal protocol defines methods that allow your application to respond to changes in a composition picker view (a QCCompositionPickerView object).</p><pre><code>QCCompositionPickerViewDelegate</code></pre></section>	https://developer.apple.com/reference/quartz/qccompositionpickerviewdelegate
QCCompositionRenderer	A							https://developer.apple.com/reference/quartz/qccompositionrenderer			<section class="prog__container"><p>The QCRenderer protocol defines the methods used to pass data to the input ports or retrieve data from the output ports of the root patch of a Quartz Composer composition. This protocol is adopted by the QCRenderer, QCView, and QCCompositionLayer classes.</p><pre><code>QCRenderer</code></pre></section>	https://developer.apple.com/reference/quartz/qccompositionrenderer
QCCompositionRepository	A							https://developer.apple.com/reference/quartz/qccompositionrepository			<section class="prog__container"><p>The QCCompositionRepository class represents a system-wide centralized repository of built-in and installed Quartz Composer compositions (/Library/Compositions and ~/Library/Compositions). The QCCompositionRepository class cannot be subclassed.</p><pre><code>QCCompositionRepository</code></pre></section>	https://developer.apple.com/reference/quartz/qccompositionrepository
QCPlugIn	A							https://developer.apple.com/reference/quartz/qcplugin			<section class="prog__container"><p>The QCPlugIn class provides the base class to subclass for writing custom Quartz Composer patches. You implement a custom patch by subclassing QCPlugIn, overriding the appropriate methods, packaging the code as an NSBundle object, and installing the bundle in the appropriate location. A bundle can contain more than one subclass of QCPlugIn, allowing you to provide a suite of custom patches in one bundle. Quartz Composer Custom Patch Programming Guide provides detailed instructions on how to create and package a custom patch. QCPlugIn Class Reference supplements the information in the programming guide.</p><pre><code>QCPlugIn</code></pre></section>	https://developer.apple.com/reference/quartz/qcplugin
QCPlugInContext	A							https://developer.apple.com/reference/quartz/qcplugincontext			<section class="prog__container"><p>The QCPlugInContext protocol defines methods that you use only from within the execution method (execute(_:atTime:withArguments:)) of a QCPlugIn object.</p><pre><code>QCPlugInContext</code></pre></section>	https://developer.apple.com/reference/quartz/qcplugincontext
QCPlugInExecutionMode	A							https://developer.apple.com/reference/quartz/qcpluginexecutionmode			<section class="prog__container"><p>Execution modes for custom patches.</p><pre><code>var kQCPlugInExecutionModeProvider: QCPlugInExecutionMode</code></pre></section>	https://developer.apple.com/reference/quartz/qcpluginexecutionmode
QCPlugInInputImageSource	A							https://developer.apple.com/reference/quartz/qcplugininputimagesource			<section class="prog__container"><p>The QCPlugInInputImageSource protocol eliminates the need to use explicit image types for the image input ports on your custom patch. Not only does using the protocol avoid restrictions of a specific image type, but it avoids impedance mismatches, and provides better performance by deferring pixel computation until it is needed. When you need to access the pixels in an image, you simply convert the image to a representation (texture or buffer) using one of the methods defined by the QCPlugInInputImageSource protocol. Use a texture representation when you want to use input images on the GPU. Use a buffer representation when you want to use input images on the CPU.</p><pre><code>QCPlugInInputImageSource</code></pre></section>	https://developer.apple.com/reference/quartz/qcplugininputimagesource
QCPlugInOutputImageProvider	A							https://developer.apple.com/reference/quartz/qcpluginoutputimageprovider			<section class="prog__container"><p>The QCPlugInOuputImageProvider protocol eliminates the need to use explicit image types for the image output ports on a custom patch. The methods in this protocol are called by the Quartz Composer engine when the output image is needed. If your custom patch has an image output port, you need to implement the appropriate methods for rendering image data and to supply information about the rendering destination and the image bounds.</p><pre><code>QCPlugInOuputImageProvider</code></pre></section>	https://developer.apple.com/reference/quartz/qcpluginoutputimageprovider
QCPlugInTimeMode	A							https://developer.apple.com/reference/quartz/qcplugintimemode			<section class="prog__container"><p>Time modes for custom patches.</p><pre><code>var kQCPlugInTimeModeNone: QCPlugInTimeMode</code></pre></section>	https://developer.apple.com/reference/quartz/qcplugintimemode
QCPlugInViewController	A							https://developer.apple.com/reference/quartz/qcpluginviewcontroller			<section class="prog__container"><p>The QCPlugInViewController class communicates (through Cocoa bindings) between a custom patch and the view used for the internal settings of the custom patch. Only custom patches that use internal settings exposed to the user need to use the QCPlugInViewController class.</p><pre><code>QCPlugInViewController</code></pre></section>	https://developer.apple.com/reference/quartz/qcpluginviewcontroller
QCRenderer	A							https://developer.apple.com/reference/quartz/qcrenderer			<section class="prog__container"><p>A QCRenderer class is designed for low-level rendering of Quartz Composer compositions. This is the class to use if you want to be in charge of rendering a composition to a specific OpenGL context—either using the NSOpenGLContext class or a CGLContextObj object. QCRenderer also allows you to load, play, and control a composition.</p><pre><code>QCRenderer</code></pre></section>	https://developer.apple.com/reference/quartz/qcrenderer
QCView	A							https://developer.apple.com/reference/quartz/qcview			<section class="prog__container"><p>The QCView class is a custom NSView class that loads, plays, and controls Quartz Composer compositions. It is an autonomous view that is driven by an internal timer running on the main thread. </p><pre><code>QCView</code></pre></section>	https://developer.apple.com/reference/quartz/qcview
QLPreviewItem	A							https://developer.apple.com/reference/quartz/qlpreviewitem			<section class="prog__container"><p>The QLPreviewItem protocol defines properties you implement to make your application’s content visible in a QuickLook preview (QLPreviewController in iOS or QLPreviewPanel in macOS).</p><pre><code>QLPreviewItem</code></pre></section>	https://developer.apple.com/reference/quartz/qlpreviewitem
QLPreviewPanel	A							https://developer.apple.com/reference/quartz/qlpreviewpanel			<section class="prog__container"><p>The QLPreviewPanel class implements the Quick Look preview panel—a user interface object that displays the preview of a list of items.</p><pre><code>QLPreviewPanel</code></pre></section>	https://developer.apple.com/reference/quartz/qlpreviewpanel
QLPreviewPanelDataSource	A							https://developer.apple.com/reference/quartz/qlpreviewpaneldatasource			<section class="prog__container"><p>The QLPreviewPanelDataSource protocol declares the methods that the Quick Look preview panel (QLPreviewPanel) uses to access the contents of its data source object.</p><pre><code>QLPreviewPanelDataSource</code></pre></section>	https://developer.apple.com/reference/quartz/qlpreviewpaneldatasource
QLPreviewPanelDelegate	A							https://developer.apple.com/reference/quartz/qlpreviewpaneldelegate			<section class="prog__container"><p>QLPreviewPanelDelegate is the protocol for the delegate of the Quick Look preview panel (QLPreviewPanel) object.</p><pre><code>QLPreviewPanelDelegate</code></pre></section>	https://developer.apple.com/reference/quartz/qlpreviewpaneldelegate
QLPreviewView	A							https://developer.apple.com/reference/quartz/qlpreviewview			<section class="prog__container"><p>A QLPreviewView object generates a Quick Look preview of an item. This class allows you to imbed a Quick Look preview into your view hierarchy.</p><pre><code>QLPreviewView</code></pre></section>	https://developer.apple.com/reference/quartz/qlpreviewview
CAAction	A							https://developer.apple.com/reference/quartzcore/caaction			<section class="prog__container"><p>An interface that allows objects to respond to actions triggered by a CALayer.</p><pre><code>CALayer</code></pre></section>	https://developer.apple.com/reference/quartzcore/caaction
CAAnimation	A							https://developer.apple.com/reference/quartzcore/caanimation			<section class="prog__container"><p>The abstract superclass for Core Animation animations. </p><pre><code>CAAnimation</code></pre></section>	https://developer.apple.com/reference/quartzcore/caanimation
CAAnimationDelegate	A							https://developer.apple.com/reference/quartzcore/caanimationdelegate			<section class="prog__container"><p>Methods your app can implement to respond when animations start and stop.</p><pre><code>CAAnimationDelegate</code></pre></section>	https://developer.apple.com/reference/quartzcore/caanimationdelegate
CAAnimationGroup	A							https://developer.apple.com/reference/quartzcore/caanimationgroup			<section class="prog__container"><p>An object that allows multiple animations to be grouped and run concurrently. </p><pre><code>CAAnimationGroup</code></pre></section>	https://developer.apple.com/reference/quartzcore/caanimationgroup
CABasicAnimation	A							https://developer.apple.com/reference/quartzcore/cabasicanimation			<section class="prog__container"><p>An object that provides basic, single-keyframe animation capabilities for a layer property. </p><pre><code>CABasicAnimation</code></pre></section>	https://developer.apple.com/reference/quartzcore/cabasicanimation
CAConstraint	A							https://developer.apple.com/reference/quartzcore/caconstraint			<section class="prog__container"><p>A representation of a single layout constraint between two layers. </p><pre><code>CAConstraint</code></pre></section>	https://developer.apple.com/reference/quartzcore/caconstraint
CAConstraintLayoutManager	A							https://developer.apple.com/reference/quartzcore/caconstraintlayoutmanager			<section class="prog__container"><p>An object that provides a constraint-based layout manager. </p><pre><code>layoutManager</code></pre></section>	https://developer.apple.com/reference/quartzcore/caconstraintlayoutmanager
CADisplayLink	A							https://developer.apple.com/reference/quartzcore/cadisplaylink			<section class="prog__container"><p>A CADisplayLink object is a timer object that allows your application to synchronize its drawing to the refresh rate of the display.</p><pre><code>CADisplayLink</code></pre></section>	https://developer.apple.com/reference/quartzcore/cadisplaylink
CAEAGLLayer	A							https://developer.apple.com/reference/quartzcore/caeagllayer			<section class="prog__container"><p>A layer that supports drawing OpenGL content in iOS and tvOS applications. </p><pre><code>layerClass</code></pre></section>	https://developer.apple.com/reference/quartzcore/caeagllayer
CAEmitterBehavior	A							https://developer.apple.com/reference/quartzcore/caemitterbehavior			<section class="prog__container"><p>Advanced animation behaviors for particle emitters. </p><pre><code>init(type:)</code></pre></section>	https://developer.apple.com/reference/quartzcore/caemitterbehavior
CAEmitterCell	A							https://developer.apple.com/reference/quartzcore/caemittercell			<section class="prog__container"><p>The definition of a particle emitted by a CAEmitterLayer.</p><pre><code>CAEmitterCell</code></pre></section>	https://developer.apple.com/reference/quartzcore/caemittercell
CAEmitterLayer	A							https://developer.apple.com/reference/quartzcore/caemitterlayer			<section class="prog__container"><p>A layer that emits, animates, and renders a particle system.</p><pre><code>CAEmitterCell</code></pre></section>	https://developer.apple.com/reference/quartzcore/caemitterlayer
CAGradientLayer	A							https://developer.apple.com/reference/quartzcore/cagradientlayer			<section class="prog__container"><p>A layer that draws a color gradient over its background color, filling the shape of the layer (including rounded corners)</p><pre><code>pi</code></pre></section>	https://developer.apple.com/reference/quartzcore/cagradientlayer
CAKeyframeAnimation	A							https://developer.apple.com/reference/quartzcore/cakeyframeanimation			<section class="prog__container"><p>An object that provides keyframe animation capabilities for a layer object. </p><pre><code>CAKeyframeAnimation</code></pre></section>	https://developer.apple.com/reference/quartzcore/cakeyframeanimation
CALayer	A							https://developer.apple.com/reference/quartzcore/calayer			<section class="prog__container"><p>An object that manages image-based content and allows you to perform animations on that content</p><pre><code>CAMediaTiming</code></pre></section>	https://developer.apple.com/reference/quartzcore/calayer
CALayerDelegate	A							https://developer.apple.com/reference/quartzcore/calayerdelegate			<section class="prog__container"><p>Methods your app can implement to respond to layer related events.</p><pre><code>delegate</code></pre></section>	https://developer.apple.com/reference/quartzcore/calayerdelegate
CALayoutManager	A							https://developer.apple.com/reference/quartzcore/calayoutmanager			<section class="prog__container"><p>Methods that allow an object to manage the layout of a layer and its sublayers.</p><pre><code>func invalidateLayout(of: CALayer)</code></pre></section>	https://developer.apple.com/reference/quartzcore/calayoutmanager
CAMediaTiming	A							https://developer.apple.com/reference/quartzcore/camediatiming			<section class="prog__container"><p>Methods that model a hierarchical timing system, allowing objects to map time between their parent and local time. </p><pre><code>CACurrentMediaTime()</code></pre></section>	https://developer.apple.com/reference/quartzcore/camediatiming
CAMediaTimingFunction	A							https://developer.apple.com/reference/quartzcore/camediatimingfunction			<section class="prog__container"><p>A function that defines the pacing of an animation as a timing curve. </p><pre><code>CAMediaTimingFunction</code></pre></section>	https://developer.apple.com/reference/quartzcore/camediatimingfunction
CAMetalDrawable	A							https://developer.apple.com/reference/quartzcore/cametaldrawable			<section class="prog__container"><p>Methods that define the interface for a display buffer associated with a CAMetalLayer object. </p><pre><code>CAMetalLayer</code></pre></section>	https://developer.apple.com/reference/quartzcore/cametaldrawable
CAMetalLayer	A							https://developer.apple.com/reference/quartzcore/cametallayer			<section class="prog__container"><p>A layer that manages a pool of Metal textures for rendering its content using Metal. </p><pre><code>layerClass</code></pre></section>	https://developer.apple.com/reference/quartzcore/cametallayer
CAOpenGLLayer	A							https://developer.apple.com/reference/quartzcore/caopengllayer			<section class="prog__container"><p>CAOpenGLLayer provides a layer suitable for rendering OpenGL content.</p><pre><code>CAOpenGLLayer</code></pre></section>	https://developer.apple.com/reference/quartzcore/caopengllayer
CAPropertyAnimation	A							https://developer.apple.com/reference/quartzcore/capropertyanimation			<section class="prog__container"><p>An abstract subclass of CAAnimation for creating animations that manipulate the value of layer properties. </p><pre><code>CAAnimation</code></pre></section>	https://developer.apple.com/reference/quartzcore/capropertyanimation
CARenderer	A							https://developer.apple.com/reference/quartzcore/carenderer			<section class="prog__container"><p>A layer that allows an application to render a layer tree into a Core OpenGL (CGL) context. </p><pre><code>NSView</code></pre></section>	https://developer.apple.com/reference/quartzcore/carenderer
CAReplicatorLayer	A							https://developer.apple.com/reference/quartzcore/careplicatorlayer			<section class="prog__container"><p>A layer that creates a specified number of copies of its sublayers (the source layer), each copy potentially having geometric, temporal, and color transformations applied to it.</p><pre><code>CAReplicatorLayer</code></pre></section>	https://developer.apple.com/reference/quartzcore/careplicatorlayer
CAScrollLayer	A							https://developer.apple.com/reference/quartzcore/cascrolllayer			<section class="prog__container"><p>A layer that displays scrollable content larger than its own bounds.</p><pre><code>CAScrollLayer</code></pre></section>	https://developer.apple.com/reference/quartzcore/cascrolllayer
CAShapeLayer	A							https://developer.apple.com/reference/quartzcore/cashapelayer			<section class="prog__container"><p>A layer that draws a cubic Bezier spline in its coordinate space. </p><pre><code>fillRule</code></pre></section>	https://developer.apple.com/reference/quartzcore/cashapelayer
CASpringAnimation	A							https://developer.apple.com/reference/quartzcore/caspringanimation			<section class="prog__container"><p>An animation that applies a spring-like force to a layer's properties. </p><pre><code>CASpringAnimation</code></pre></section>	https://developer.apple.com/reference/quartzcore/caspringanimation
CATextLayer	A							https://developer.apple.com/reference/quartzcore/catextlayer			<section class="prog__container"><p>A layer that provides simple text layout and rendering of plain or attributed strings. </p><pre><code>CATextLayer</code></pre></section>	https://developer.apple.com/reference/quartzcore/catextlayer
CATiledLayer	A							https://developer.apple.com/reference/quartzcore/catiledlayer			<section class="prog__container"><p>A layer that provides a way to asynchronously provide tiles of the layer's content, potentially cached at multiple levels of detail.</p><pre><code>draw(_:in:)</code></pre></section>	https://developer.apple.com/reference/quartzcore/catiledlayer
CATransaction	A							https://developer.apple.com/reference/quartzcore/catransaction			<section class="prog__container"><p>A mechanism for batching multiple layer-tree operations into atomic updates to the render tree. </p><pre><code>CATransaction</code></pre></section>	https://developer.apple.com/reference/quartzcore/catransaction
CATransform3D	A							https://developer.apple.com/reference/quartzcore/catransform3d			<section class="prog__container"><p>Defines the standard transform matrix used throughout Core Animation.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/quartzcore/catransform3d
CATransformLayer	A							https://developer.apple.com/reference/quartzcore/catransformlayer			<section class="prog__container"><p>CATransformLayer objects are used to create true 3D layer hierarchies, rather than the flattened hierarchy rendering model used by other CALayer classes.</p><pre><code>CATransformLayer</code></pre></section>	https://developer.apple.com/reference/quartzcore/catransformlayer
CATransition	A							https://developer.apple.com/reference/quartzcore/catransition			<section class="prog__container"><p>An object that provides an animated transition between a layer's states.</p><pre><code>CATransition</code></pre></section>	https://developer.apple.com/reference/quartzcore/catransition
CAValueFunction	A							https://developer.apple.com/reference/quartzcore/cavaluefunction			<section class="prog__container"><p>An object that provides a flexible method of defining animated transformations.</p><pre><code>CABasicAnimation</code></pre></section>	https://developer.apple.com/reference/quartzcore/cavaluefunction
QLPreviewController	A							https://developer.apple.com/reference/quicklook/qlpreviewcontroller			<section class="prog__container"><p>A QLPreviewController object, or Quick Look preview controller, provides a specialized view for previewing an item. To display a Quick Look preview controller you have two options: You can push it into view using a UINavigationController object, or can present it modally, full screen, using the presentModalViewController:animated: method of its parent class, UIViewController. </p><pre><code>QLPreviewController</code></pre></section>	https://developer.apple.com/reference/quicklook/qlpreviewcontroller
QLPreviewControllerDataSource	A							https://developer.apple.com/reference/quicklook/qlpreviewcontrollerdatasource			<section class="prog__container"><p>The data source for a QLPreviewController (Quick Look preview controller) object must adopt this protocol to enable it to provide preview items to the controller.</p><pre><code>QLPreviewController</code></pre></section>	https://developer.apple.com/reference/quicklook/qlpreviewcontrollerdatasource
QLPreviewControllerDelegate	A							https://developer.apple.com/reference/quicklook/qlpreviewcontrollerdelegate			<section class="prog__container"><p>Implement the methods of this protocol in the delegate of a QLPreviewController (Quick Look preview controller) object to:</p><pre><code>QLPreviewController</code></pre></section>	https://developer.apple.com/reference/quicklook/qlpreviewcontrollerdelegate
QLPreviewRequest	A							https://developer.apple.com/reference/quicklook/qlpreviewrequest			<section class="prog__container"><p>An opaque reference representing an QLPreviewRequest object.</p><pre><code>QLPreviewRequest</code></pre></section>	https://developer.apple.com/reference/quicklook/qlpreviewrequest
QLThumbnailRequest	A							https://developer.apple.com/reference/quicklook/qlthumbnailrequest			<section class="prog__container"><p>An opaque reference representing an QLThumbnailRequest object.</p><pre><code>QLThumbnailRequest</code></pre></section>	https://developer.apple.com/reference/quicklook/qlthumbnailrequest
ReplayKit Constants	A							https://developer.apple.com/reference/replaykit/replaykit_constants			<section class="prog__container"><p>ReplayKit constants affecting multiple classes.</p><pre><code>RPRecordingErrorCode</code></pre></section>	https://developer.apple.com/reference/replaykit/replaykit_constants
ReplayKit Enumerations	A							https://developer.apple.com/reference/replaykit/replaykit_enumerations			<section class="prog__container"><p>ReplayKit enumerations affecting multiple classes.</p><pre><code>RPPreviewViewControllerMode</code></pre></section>	https://developer.apple.com/reference/replaykit/replaykit_enumerations
RPBroadcastActivityViewController	A							https://developer.apple.com/reference/replaykit/rpbroadcastactivityviewcontroller			<section class="prog__container"><p>An object that displays a user interface allowing users to choose a broadcast service.</p><pre><code>class func load(handler: @escaping (RPBroadcastActivityViewController?, Error?) -> Void)</code></pre></section>	https://developer.apple.com/reference/replaykit/rpbroadcastactivityviewcontroller
RPBroadcastActivityViewControllerDelegate	A							https://developer.apple.com/reference/replaykit/rpbroadcastactivityviewcontrollerdelegate			<section class="prog__container"><p>The protocol you implement to respond to changes to a broadcast activity user interface, represented by a RPBroadcastActivityViewController.</p><pre><code>RPBroadcastActivityViewController</code></pre></section>	https://developer.apple.com/reference/replaykit/rpbroadcastactivityviewcontrollerdelegate
RPBroadcastConfiguration	A							https://developer.apple.com/reference/replaykit/rpbroadcastconfiguration			<section class="prog__container"><p>An object used to configure the movie clips produced during a live broadcast.</p><pre><code>var clipDuration: TimeInterval</code></pre></section>	https://developer.apple.com/reference/replaykit/rpbroadcastconfiguration
RPBroadcastController	A							https://developer.apple.com/reference/replaykit/rpbroadcastcontroller			<section class="prog__container"><p>An object containing methods for starting and controlling a broadcast.</p><pre><code>var broadcastURL: URL</code></pre></section>	https://developer.apple.com/reference/replaykit/rpbroadcastcontroller
RPBroadcastControllerDelegate	A							https://developer.apple.com/reference/replaykit/rpbroadcastcontrollerdelegate			<section class="prog__container"><p>The protocol you implement to respond to changes in a live broadcast.</p><pre><code>func broadcastController(RPBroadcastController, didFinishWithError: Error?)</code></pre></section>	https://developer.apple.com/reference/replaykit/rpbroadcastcontrollerdelegate
RPBroadcastHandler	A							https://developer.apple.com/reference/replaykit/rpbroadcasthandler			<section class="prog__container"><p>An object that sends messages to the broadcasting app.</p><pre><code>func updateServiceInfo([String : NSCoding & NSObjectProtocol])</code></pre></section>	https://developer.apple.com/reference/replaykit/rpbroadcasthandler
RPBroadcastMP4ClipHandler	A							https://developer.apple.com/reference/replaykit/rpbroadcastmp4cliphandler			<section class="prog__container"><p>An object that processes MP4 movie clips from ReplayKit.</p><pre><code>func finishedProcessingMP4Clip(withUpdatedBroadcastConfiguration: RPBroadcastConfiguration?, error: Error?)</code></pre></section>	https://developer.apple.com/reference/replaykit/rpbroadcastmp4cliphandler
RPBroadcastSampleHandler	A							https://developer.apple.com/reference/replaykit/rpbroadcastsamplehandler			<section class="prog__container"><p>An object that processes CMSampleBuffer objects as they are received from ReplayKit.</p><pre><code>CMSampleBuffer</code></pre></section>	https://developer.apple.com/reference/replaykit/rpbroadcastsamplehandler
RPPreviewViewController	A							https://developer.apple.com/reference/replaykit/rppreviewviewcontroller			<section class="prog__container"><p>An object that displays a user interface allowing users to preview and edit a screen recording created with ReplayKit.</p><pre><code>stopRecording(handler:)</code></pre></section>	https://developer.apple.com/reference/replaykit/rppreviewviewcontroller
RPPreviewViewControllerDelegate	A							https://developer.apple.com/reference/replaykit/rppreviewviewcontrollerdelegate			<section class="prog__container"><p>The protocol you implement to respond to changes to a screen recording user interface, represented by a RPPreviewViewController object.</p><pre><code>RPPreviewViewController</code></pre></section>	https://developer.apple.com/reference/replaykit/rppreviewviewcontrollerdelegate
RPScreenRecorder	A							https://developer.apple.com/reference/replaykit/rpscreenrecorder			<section class="prog__container"><p>The shared recorder object providing the ability to record audio and video of your app.</p><pre><code>RPScreenRecorder</code></pre></section>	https://developer.apple.com/reference/replaykit/rpscreenrecorder
RPScreenRecorderDelegate	A							https://developer.apple.com/reference/replaykit/rpscreenrecorderdelegate			<section class="prog__container"><p>The protocol you implement to receive notifications from an RPScreenRecorder object.</p><pre><code>RPScreenRecorder</code></pre></section>	https://developer.apple.com/reference/replaykit/rpscreenrecorderdelegate
SafariActivateEvent	A							https://developer.apple.com/reference/safariextensions/safariactivateevent			<section class="prog__container"><p>Instances of the SafariActivateEvent class are used to notify listeners when a tab or window is activated.</p><pre><code>SafariActivateEvent</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariactivateevent
SafariAppExtension	A							https://developer.apple.com/reference/safariextensions/safariappextension			<section class="prog__container"><p>The SafariAppExtension class is used by a content script to represent your extension; an instance of the class is accessible as safari.extension.</p><pre><code>SafariAppExtension</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariappextension
SafariAppExtensionPage	A							https://developer.apple.com/reference/safariextensions/safariappextensionpage			<section class="prog__container"><p>The SafariAppExtensionPage class represents a web content area; an instance of the class is accessible as safari.self. Your extension can listen for events, such as SafariExtensionMessageEvent, using safari.self.addEventListener. See “Registering Event Listeners” in SafariEventTarget.</p><pre><code>SafariAppExtensionPage</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariappextensionpage
SafariApplication	A							https://developer.apple.com/reference/safariextensions/safariapplication			<section class="prog__container"><p>The SafariApplication class allows a Safari extension to interact with the application's SafariBrowserWindow and SafariBrowserTab objects.</p><pre><code>SafariApplication</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariapplication
SafariAvailableEvent	A							https://developer.apple.com/reference/safariextensions/safariavailableevent			<section class="prog__container"><p>Instances of the SafariAvailableEvent class are used to notify listeners when Reader is available.</p><pre><code>SafariAvailableEvent</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariavailableevent
SafariBeforeNavigateEvent	A							https://developer.apple.com/reference/safariextensions/safaribeforenavigateevent			<section class="prog__container"><p>Instances of the SafariBeforeNavigateEvent class are used to notify listeners when the user navigates to a new page, before the page is loaded. You can use the preventDefault method to prevent the new page from loading.</p><pre><code>SafariBeforeNavigateEvent</code></pre></section>	https://developer.apple.com/reference/safariextensions/safaribeforenavigateevent
SafariBeforeSearchEvent	A							https://developer.apple.com/reference/safariextensions/safaribeforesearchevent			<section class="prog__container"><p>The SafariBeforeSearchEvent event fires before the Smart Search Field performs a search, allowing you to intercept the query and execute an alternate task. SafariBeforeSearchEvent can be used with SafariBeforeNavigateEvent to determine what the user intends to do in the Smart Search Field.</p><pre><code>SafariBeforeSearchEvent</code></pre></section>	https://developer.apple.com/reference/safariextensions/safaribeforesearchevent
SafariBrowserTab	A							https://developer.apple.com/reference/safariextensions/safaribrowsertab			<section class="prog__container"><p>Instances of the SafariBrowserTab class represent tabs in the user’s browser window.</p><pre><code>SafariBrowserTab</code></pre></section>	https://developer.apple.com/reference/safariextensions/safaribrowsertab
SafariBrowserWindow	A							https://developer.apple.com/reference/safariextensions/safaribrowserwindow			<section class="prog__container"><p>Instances of the SafariBrowserWindow class represent browser windows. Each window contains one or more tabs, which display web content.</p><pre><code>SafariBrowserWindow</code></pre></section>	https://developer.apple.com/reference/safariextensions/safaribrowserwindow
SafariCloseEvent	A							https://developer.apple.com/reference/safariextensions/safaricloseevent			<section class="prog__container"><p>Instances of the SafariCloseEvent class are used to notify listeners when a tab or window is closed.</p><pre><code>SafariCloseEvent</code></pre></section>	https://developer.apple.com/reference/safariextensions/safaricloseevent
SafariCommandEvent	A							https://developer.apple.com/reference/safariextensions/safaricommandevent			<section class="prog__container"><p>Instances of the SafariCommandEvent class represent events being used to send a command.</p><pre><code>SafariCommandEvent</code></pre></section>	https://developer.apple.com/reference/safariextensions/safaricommandevent
SafariContentBrowserTabProxy	A							https://developer.apple.com/reference/safariextensions/safaricontentbrowsertabproxy			<section class="prog__container"><p>Instances of the SafariContentBrowserTabProxy class serve as proxy objects, allowing scripts injected in the web content to communicate with SafariBrowserTab objects and the rest of the extension.</p><pre><code>SafariContentBrowserTabProxy</code></pre></section>	https://developer.apple.com/reference/safariextensions/safaricontentbrowsertabproxy
SafariContentExtension	A							https://developer.apple.com/reference/safariextensions/safaricontentextension			<section class="prog__container"><p>The SafariContentExtension class represents your extension to scripts running inside the web content; an instance of the class is accessible as safari.extension. Its counterpart class outside of the web content is SafariExtension.</p><pre><code>SafariContentExtension</code></pre></section>	https://developer.apple.com/reference/safariextensions/safaricontentextension
SafariContentNamespace	A							https://developer.apple.com/reference/safariextensions/safaricontentnamespace			<section class="prog__container"><p>The SafariContentNamespace class is a namespace that provides access to the Safari Extensions functionality inside of a web content area.</p><pre><code>SafariContentNamespace</code></pre></section>	https://developer.apple.com/reference/safariextensions/safaricontentnamespace
SafariContentReader	A							https://developer.apple.com/reference/safariextensions/safaricontentreader			<section class="prog__container"><p>The SafariContentReader class allows you to inject content into the Reader view.</p><pre><code>SafariContentReader</code></pre></section>	https://developer.apple.com/reference/safariextensions/safaricontentreader
SafariContentWebPage	A							https://developer.apple.com/reference/safariextensions/safaricontentwebpage			<section class="prog__container"><p>Instances of the SafariContentWebPage class represent a web content area.</p><pre><code>SafariContentWebPage</code></pre></section>	https://developer.apple.com/reference/safariextensions/safaricontentwebpage
SafariDeactivateEvent	A							https://developer.apple.com/reference/safariextensions/safarideactivateevent			<section class="prog__container"><p>Instances of the SafariDeactivateEvent class are used to notify listeners when a browser tab or a browser window is deactivated.</p><pre><code>SafariDeactivateEvent</code></pre></section>	https://developer.apple.com/reference/safariextensions/safarideactivateevent
SafariEvent	A							https://developer.apple.com/reference/safariextensions/safarievent			<section class="prog__container"><p>The SafariEvent class is a base class used to encapsulate events. Developers who are familiar with DOM events will notice many similarities in design and behavior.</p><pre><code>SafariEvent</code></pre></section>	https://developer.apple.com/reference/safariextensions/safarievent
SafariEventTarget	A							https://developer.apple.com/reference/safariextensions/safarieventtarget			<section class="prog__container"><p>The SafariEventTarget class serves as a base class for all objects that participate in the event-dispatch hierarchy.</p><pre><code>SafariEventTarget</code></pre></section>	https://developer.apple.com/reference/safariextensions/safarieventtarget
SafariExtension	A							https://developer.apple.com/reference/safariextensions/safariextension			<section class="prog__container"><p>A SafariExtension instance represents your extension outside of the web content; an instance of the class is accessible as safari.extension. The counterpart class to SafariExtension for scripts running within the web content is SafariContentExtension.</p><pre><code>SafariExtension</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariextension
SafariExtensionBar	A							https://developer.apple.com/reference/safariextensions/safariextensionbar			<section class="prog__container"><p>Instances of the SafariExtensionBar class represent a bar that your extension provides. An extension can add any number of bars to Safari. Adding bars is optional.</p><pre><code>SafariExtensionBar</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariextensionbar
SafariExtensionCompanion	A							https://developer.apple.com/reference/safariextensions/safariextensioncompanion			<section class="prog__container"><p>A SafariExtensionCompanion object is an app extension for your macOS app that receives and responds to secure messages from your Safari extension. Sending a message to a Safari extension companion is similar to sending a message to an injected script; simply call the dispatchMessage method on the extension companion object. See Communicating with your OS X App for more information on extension companions.</p><pre><code>SafariExtensionCompanion</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariextensioncompanion
SafariExtensionContextMenu	A							https://developer.apple.com/reference/safariextensions/safariextensioncontextmenu			<section class="prog__container"><p>Instances of the SafariExtensionContextMenu class represent a contextual menu that is populated by the extension. Safari displays the contents of this menu as part of its contextual menu.</p><pre><code>SafariExtensionContextMenu</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariextensioncontextmenu
SafariExtensionContextMenuEvent	A							https://developer.apple.com/reference/safariextensions/safariextensioncontextmenuevent			<section class="prog__container"><p>Instances of the SafariExtensionContextMenuEvent class are used to notify listeners when a context menu is about to be displayed.</p><pre><code>SafariExtensionContextMenuEvent</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariextensioncontextmenuevent
SafariExtensionContextMenuItem	A							https://developer.apple.com/reference/safariextensions/safariextensioncontextmenuitem			<section class="prog__container"><p>Instances of the SafariExtensionContextMenuItem class represent individual menu items within an extension’s context menu.</p><pre><code>SafariExtensionContextMenuItem</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariextensioncontextmenuitem
SafariExtensionContextMenuItemCommandEvent	A							https://developer.apple.com/reference/safariextensions/safariextensioncontextmenuitemcommandevent			<section class="prog__container"><p>Instances of the SafariExtensionContextMenuItemCommandEvent class are used to send command events from a context menu item.</p><pre><code>SafariExtensionContextMenuItemCommandEvent</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariextensioncontextmenuitemcommandevent
SafariExtensionContextMenuItemValidateEvent	A							https://developer.apple.com/reference/safariextensions/safariextensioncontextmenuitemvalidateevent			<section class="prog__container"><p>Instances of the SafariExtensionContextMenuItemValidateEvent class are used to notify listeners when a context menu is about to be displayed.</p><pre><code>SafariExtensionContextMenuItemValidateEvent</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariextensioncontextmenuitemvalidateevent
SafariExtensionGlobalPage	A							https://developer.apple.com/reference/safariextensions/safariextensionglobalpage			<section class="prog__container"><p>Safari extensions have a global page, represented by the SafariExtensionGlobalPage class. The global page is loaded once when the extension is loaded, but it is never displayed to the user. It can contain resources such as scripts, images, and HTML content.</p><pre><code>SafariExtensionGlobalPage</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariextensionglobalpage
SafariExtensionMenu	A							https://developer.apple.com/reference/safariextensions/safariextensionmenu			<section class="prog__container"><p>The SafariExtensionMenu class represents menus.</p><pre><code>SafariExtensionMenu</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariextensionmenu
SafariExtensionMenuItem	A							https://developer.apple.com/reference/safariextensions/safariextensionmenuitem			<section class="prog__container"><p>The SafariExtensionMenuItem class represents items in a menu.</p><pre><code>SafariExtensionMenuItem</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariextensionmenuitem
SafariExtensionMessageEvent	A							https://developer.apple.com/reference/safariextensions/safariextensionmessageevent			<section class="prog__container"><p>Instances of the SafariExtensionMessageEvent encapsulate a message being passed. Message passing is the only way to communicate information from inside the web content area to scripts running outside of it, and vice versa.</p><pre><code>SafariExtensionMessageEvent</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariextensionmessageevent
SafariExtensionPopover	A							https://developer.apple.com/reference/safariextensions/safariextensionpopover			<section class="prog__container"><p>The SafariExtensionPopover class represents popovers. You use popovers to present information temporarily. The popover content is layered on top of the existing web content in a special type of window.</p><pre><code>SafariExtensionPopover</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariextensionpopover
SafariExtensionPopoverEvent	A							https://developer.apple.com/reference/safariextensions/safariextensionpopoverevent			<section class="prog__container"><p>Instances of the SafariExtensionPopoverEvent class are used to notify listeners when a popover is about to be displayed.</p><pre><code>SafariExtensionPopoverEvent</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariextensionpopoverevent
SafariExtensionSecureSettings	A							https://developer.apple.com/reference/safariextensions/safariextensionsecuresettings			<section class="prog__container"><p>The SafariExtensionSecureSettings class provides a place for your extension to securely store settings that should persist between sessions. You interact with it in exactly the same way as you interact with the SafariExtensionSettings class.</p><pre><code>SafariExtensionSecureSettings</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariextensionsecuresettings
SafariExtensionSettings	A							https://developer.apple.com/reference/safariextensions/safariextensionsettings			<section class="prog__container"><p>The SafariExtensionsSettings class provides a place for your extension to store settings that should persist between sessions.</p><pre><code>SafariExtensionsSettings</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariextensionsettings
SafariExtensionSettingsChangeEvent	A							https://developer.apple.com/reference/safariextensions/safariextensionsettingschangeevent			<section class="prog__container"><p>Instances of the SafariExtensionsSettingsChangeEvent class are used to provide a description of a change made to the extension’s settings. A settings change event is sent when your extension changes a setting as well as when a setting is changed outside your extension (for example, a setting changed in the Safari preferences).</p><pre><code>SafariExtensionsSettingsChangeEvent</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariextensionsettingschangeevent
SafariExtensionToolbarItem	A							https://developer.apple.com/reference/safariextensions/safariextensiontoolbaritem			<section class="prog__container"><p>Instances of the SafariExtensionToolbarItem represent items that your extension adds to the Safari toolbar. Users can select which toolbar items are shown by selecting Customize Toolbar in the same way that they can add and remove toolbar items provided by Safari.</p><pre><code>SafariExtensionToolbarItem</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariextensiontoolbaritem
SafariNamespace	A							https://developer.apple.com/reference/safariextensions/safarinamespace			<section class="prog__container"><p>The SafariNamespace class is a namespace that provides access to the Safari Extensions functionality outside of the web content area.</p><pre><code>SafariNamespace</code></pre></section>	https://developer.apple.com/reference/safariextensions/safarinamespace
SafariNavigateEvent	A							https://developer.apple.com/reference/safariextensions/safarinavigateevent			<section class="prog__container"><p>Instances of the SafariNavigateEventClassRef class are used to notify listeners when the user navigates to a new webpage.</p><pre><code>SafariNavigateEventClassRef</code></pre></section>	https://developer.apple.com/reference/safariextensions/safarinavigateevent
SafariOpenEvent	A							https://developer.apple.com/reference/safariextensions/safariopenevent			<section class="prog__container"><p>Instances of the SafariOpenEvent class are used to notify listeners when a tab or window is opened.</p><pre><code>SafariOpenEvent</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariopenevent
SafariPrivateBrowsing	A							https://developer.apple.com/reference/safariextensions/safariprivatebrowsing			<section class="prog__container"><p>The SafariPrivateBrowsing class allows you to determine whether Safari currently has Private Browsing enabled. Private Browsing mode disables the ability for Safari to store cookies, browsing history, search history, caches, and Autofill information. If Private Browsing is enabled, you should make efforts not to track the user’s browsing behavior and respect their decision to browse privately.</p><pre><code>SafariPrivateBrowsing</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariprivatebrowsing
SafariReader	A							https://developer.apple.com/reference/safariextensions/safarireader			<section class="prog__container"><p>Reader is a Safari feature that allows users to read online articles in a continuous, clutter-free view, with no ads or visual distractions. Reader concatenates multipage articles into a single scrolling pane.</p><pre><code>SafariReader</code></pre></section>	https://developer.apple.com/reference/safariextensions/safarireader
SafariValidateEvent	A							https://developer.apple.com/reference/safariextensions/safarivalidateevent			<section class="prog__container"><p>Instances of the SafariValidateEvent class encapsulate a validate event. User interface elements such as contextual menu items and toolbar buttons send a validate event when they are about to display. You can prevent the element from displaying by listening for validate events and marking the element as disabled.</p><pre><code>SafariValidateEvent</code></pre></section>	https://developer.apple.com/reference/safariextensions/safarivalidateevent
SafariWebPageProxy	A							https://developer.apple.com/reference/safariextensions/safariwebpageproxy			<section class="prog__container"><p>Instances of the SafariWebPageProxy class serve as a proxy objects, allowing objects outside of the web content to communicate with the SafariContentWebPage object.</p><pre><code>SafariWebPageProxy</code></pre></section>	https://developer.apple.com/reference/safariextensions/safariwebpageproxy
SFContentBlockerManager	A							https://developer.apple.com/reference/safariservices/sfcontentblockermanager			<section class="prog__container"><p>A class used by your app to interact with a content blocker extension. </p><pre><code>class func getStateOfContentBlocker(withIdentifier: String, completionHandler: @escaping (SFContentBlockerState?, Error?) -> Void)</code></pre></section>	https://developer.apple.com/reference/safariservices/sfcontentblockermanager
SFContentBlockerState	A							https://developer.apple.com/reference/safariservices/sfcontentblockerstate			<section class="prog__container"><p>The state of a content blocker extension.</p><pre><code>var isEnabled: Bool</code></pre></section>	https://developer.apple.com/reference/safariservices/sfcontentblockerstate
SFErrorCode	A							https://developer.apple.com/reference/safariservices/sferrorcode			<section class="prog__container"><p>A content blocker or Safari app extension error.</p><pre><code>case loadingInterrupted</code></pre></section>	https://developer.apple.com/reference/safariservices/sferrorcode
SFSafariApplication	A							https://developer.apple.com/reference/safariservices/sfsafariapplication			<section class="prog__container"><p>A proxy for the Safari app.</p><pre><code>SFSafariApplication</code></pre></section>	https://developer.apple.com/reference/safariservices/sfsafariapplication
SFSafariExtensionHandler	A							https://developer.apple.com/reference/safariservices/sfsafariextensionhandler			<section class="prog__container"><p>A base class that you subclass to handle events in your Safari app extension.</p><pre><code>NSObject</code></pre></section>	https://developer.apple.com/reference/safariservices/sfsafariextensionhandler
SFSafariExtensionHandling	A							https://developer.apple.com/reference/safariservices/sfsafariextensionhandling			<section class="prog__container"><p>A protocol used to implement event handling in a Safari app extension.</p><pre><code>func messageReceived(withName: String, from: SFSafariPage, userInfo: [String : Any]? = nil)</code></pre></section>	https://developer.apple.com/reference/safariservices/sfsafariextensionhandling
SFSafariExtensionViewController	A							https://developer.apple.com/reference/safariservices/sfsafariextensionviewcontroller			<section class="prog__container"><p>The view controller for a popover associated with your app extension.</p><pre><code>NSViewController</code></pre></section>	https://developer.apple.com/reference/safariservices/sfsafariextensionviewcontroller
SFSafariPage	A							https://developer.apple.com/reference/safariservices/sfsafaripage			<section class="prog__container"><p>A proxy for a Safari webpage. </p><pre><code>SFSafariPage</code></pre></section>	https://developer.apple.com/reference/safariservices/sfsafaripage
SFSafariPageProperties	A							https://developer.apple.com/reference/safariservices/sfsafaripageproperties			<section class="prog__container"><p>Information about a webpage. </p><pre><code>var isActive: Bool</code></pre></section>	https://developer.apple.com/reference/safariservices/sfsafaripageproperties
SFSafariTab	A							https://developer.apple.com/reference/safariservices/sfsafaritab			<section class="prog__container"><p>A proxy for a tab in a Safari window.</p><pre><code>func getActivePage(completionHandler: @escaping (SFSafariPage?) -> Void)</code></pre></section>	https://developer.apple.com/reference/safariservices/sfsafaritab
SFSafariToolbarItem	A							https://developer.apple.com/reference/safariservices/sfsafaritoolbaritem			<section class="prog__container"><p>A proxy for a Safari app extension toolbar item in a Safari window. </p><pre><code>validateToolbarItem(in:validationHandler:)</code></pre></section>	https://developer.apple.com/reference/safariservices/sfsafaritoolbaritem
SFSafariViewController	A							https://developer.apple.com/reference/safariservices/sfsafariviewcontroller			<section class="prog__container"><p>An object that provides a standard interface for browsing the web.</p><pre><code>SFSafariViewController</code></pre></section>	https://developer.apple.com/reference/safariservices/sfsafariviewcontroller
SFSafariViewControllerDelegate	A							https://developer.apple.com/reference/safariservices/sfsafariviewcontrollerdelegate			<section class="prog__container"><p>A protocol used to implement custom event handling for a Safari view controller.</p><pre><code>SFSafariViewController</code></pre></section>	https://developer.apple.com/reference/safariservices/sfsafariviewcontrollerdelegate
SFSafariWindow	A							https://developer.apple.com/reference/safariservices/sfsafariwindow			<section class="prog__container"><p>A proxy for a Safari window.</p><pre><code>func getActiveTab(completionHandler: @escaping (SFSafariTab?) -> Void)</code></pre></section>	https://developer.apple.com/reference/safariservices/sfsafariwindow
SSReadingList	A							https://developer.apple.com/reference/safariservices/ssreadinglist			<section class="prog__container"><p>An object used to add items to a user’s Safari Reading List.</p><pre><code>class func `default`()</code></pre></section>	https://developer.apple.com/reference/safariservices/ssreadinglist
SSReadingListErrorCode	A							https://developer.apple.com/reference/safariservices/ssreadinglisterrorcode			<section class="prog__container"><p>Messages that describe a Reading List error.</p><pre><code>case urlSchemeNotAllowed</code></pre></section>	https://developer.apple.com/reference/safariservices/ssreadinglisterrorcode
SceneKit Constants	A							https://developer.apple.com/reference/scenekit/scenekit_constants			<section class="prog__container"><p>Constants used throughout the SceneKit framework.</p><pre><code>SCNGeometry</code></pre></section>	https://developer.apple.com/reference/scenekit/scenekit_constants
SceneKit Functions	A							https://developer.apple.com/reference/scenekit/scenekit_functions			<section class="prog__container"><p>Functions used throughout the SceneKit framework.</p><pre><code>func SCNVector3Make(Float, Float, Float)</code></pre></section>	https://developer.apple.com/reference/scenekit/scenekit_functions
SCNAction	A							https://developer.apple.com/reference/scenekit/scnaction			<section class="prog__container"><p>A simple, reusable animation that changes attributes of any node you attach it to.</p><pre><code>SCNNode</code></pre></section>	https://developer.apple.com/reference/scenekit/scnaction
SCNActionable	A							https://developer.apple.com/reference/scenekit/scnactionable			<section class="prog__container"><p>Methods for running actions on nodes.</p><pre><code>SCNAction</code></pre></section>	https://developer.apple.com/reference/scenekit/scnactionable
SCNAnimatable	A							https://developer.apple.com/reference/scenekit/scnanimatable			<section class="prog__container"><p>The common interface for attaching animations to nodes, geometries, materials, and other SceneKit objects.</p><pre><code>SCNTransaction</code></pre></section>	https://developer.apple.com/reference/scenekit/scnanimatable
SCNAnimationEvent	A							https://developer.apple.com/reference/scenekit/scnanimationevent			<section class="prog__container"><p>A container for a closure to be executed at a specific time during playback of an animation.</p><pre><code>animationEvents</code></pre></section>	https://developer.apple.com/reference/scenekit/scnanimationevent
SCNAudioPlayer	A							https://developer.apple.com/reference/scenekit/scnaudioplayer			<section class="prog__container"><p>A controller for playback of a positional audio source in a SceneKit scene.</p><pre><code>SCNAudioPlayer</code></pre></section>	https://developer.apple.com/reference/scenekit/scnaudioplayer
SCNAudioSource	A							https://developer.apple.com/reference/scenekit/scnaudiosource			<section class="prog__container"><p>A simple, reusable audio source—music or sound effects loaded from a file—for use in positional audio playback.</p><pre><code>SCNAudioPlayer</code></pre></section>	https://developer.apple.com/reference/scenekit/scnaudiosource
SCNBillboardAxis	A							https://developer.apple.com/reference/scenekit/scnbillboardaxis			<section class="prog__container"><p>Options for locking the orientation of nodes affected by a billboard constraint.</p><pre><code>static var X: SCNBillboardAxis</code></pre></section>	https://developer.apple.com/reference/scenekit/scnbillboardaxis
SCNBillboardConstraint	A							https://developer.apple.com/reference/scenekit/scnbillboardconstraint			<section class="prog__container"><p>A constraint that orients a node to always point toward the current camera.</p><pre><code>SCNBillboardConstraint</code></pre></section>	https://developer.apple.com/reference/scenekit/scnbillboardconstraint
SCNBoundingVolume	A							https://developer.apple.com/reference/scenekit/scnboundingvolume			<section class="prog__container"><p>Properties for measuring an object's location and size, expressed as either a box or a sphere.</p><pre><code>SCNNode</code></pre></section>	https://developer.apple.com/reference/scenekit/scnboundingvolume
SCNBox	A							https://developer.apple.com/reference/scenekit/scnbox			<section class="prog__container"><p>A six-sided polyhedron geometry whose faces are all rectangles, optionally with rounded edges and corners.</p><pre><code>width</code></pre></section>	https://developer.apple.com/reference/scenekit/scnbox
SCNBufferStream	A							https://developer.apple.com/reference/scenekit/scnbufferstream			<section class="prog__container"><p>An object that manages a Metal buffer used by a custom shader program. </p><pre><code>SCNProgram</code></pre></section>	https://developer.apple.com/reference/scenekit/scnbufferstream
SCNCamera	A							https://developer.apple.com/reference/scenekit/scncamera			<section class="prog__container"><p>A set of camera attributes that can be attached to a node to provide a point of view for displaying the scene.</p><pre><code>camera</code></pre></section>	https://developer.apple.com/reference/scenekit/scncamera
SCNCapsule	A							https://developer.apple.com/reference/scenekit/scncapsule			<section class="prog__container"><p>A right circular cylinder geometry whose ends are capped with hemispheres.</p><pre><code>capRadius</code></pre></section>	https://developer.apple.com/reference/scenekit/scncapsule
SCNCone	A							https://developer.apple.com/reference/scenekit/scncone			<section class="prog__container"><p>A right circular cone or frustum geometry.</p><pre><code>bottomRadius</code></pre></section>	https://developer.apple.com/reference/scenekit/scncone
SCNConstraint	A							https://developer.apple.com/reference/scenekit/scnconstraint			<section class="prog__container"><p>The abstract superclass for objects that automatically adjust the position, rotation, or scale of a node based on rules you define.</p><pre><code>SCNNode</code></pre></section>	https://developer.apple.com/reference/scenekit/scnconstraint
SCNCylinder	A							https://developer.apple.com/reference/scenekit/scncylinder			<section class="prog__container"><p>A right circular cylinder geometry.</p><pre><code>radius</code></pre></section>	https://developer.apple.com/reference/scenekit/scncylinder
SCNDebugOptions	A							https://developer.apple.com/reference/scenekit/scndebugoptions			<section class="prog__container"><p>Options for drawing overlays with SceneKit content that can aid in debugging, used with the debugOptions property.</p><pre><code>debugOptions</code></pre></section>	https://developer.apple.com/reference/scenekit/scndebugoptions
SCNFloor	A							https://developer.apple.com/reference/scenekit/scnfloor			<section class="prog__container"><p>An infinite plane that can optionally display a reflection of the scene above it.</p><pre><code>geometry</code></pre></section>	https://developer.apple.com/reference/scenekit/scnfloor
SCNGeometry	A							https://developer.apple.com/reference/scenekit/scngeometry			<section class="prog__container"><p>A three-dimensional shape (also called a model or mesh) that can be displayed in a scene, with attached materials that define its appearance.</p><pre><code>SCNNode</code></pre></section>	https://developer.apple.com/reference/scenekit/scngeometry
SCNGeometryElement	A							https://developer.apple.com/reference/scenekit/scngeometryelement			<section class="prog__container"><p>A container for index data describing how vertices connect to define a three-dimensional object, or geometry.</p><pre><code>SCNGeometrySource</code></pre></section>	https://developer.apple.com/reference/scenekit/scngeometryelement
SCNGeometrySource	A							https://developer.apple.com/reference/scenekit/scngeometrysource			<section class="prog__container"><p>A container for vertex data forming part of the definition for a three-dimensional object, or geometry.</p><pre><code>SCNGeometryElement</code></pre></section>	https://developer.apple.com/reference/scenekit/scngeometrysource
SCNHitTestResult	A							https://developer.apple.com/reference/scenekit/scnhittestresult			<section class="prog__container"><p>Detailed information about a result from searching for elements of a scene located at a specified point, or along a specified line segment (or ray).</p><pre><code>SCNHitTestResult</code></pre></section>	https://developer.apple.com/reference/scenekit/scnhittestresult
SCNIKConstraint	A							https://developer.apple.com/reference/scenekit/scnikconstraint			<section class="prog__container"><p>A constraint that applies inverse kinematics to make a chain of nodes “reach” toward a target point.</p><pre><code>position</code></pre></section>	https://developer.apple.com/reference/scenekit/scnikconstraint
SCNLayer	A							https://developer.apple.com/reference/scenekit/scnlayer			<section class="prog__container"><p>A Core Animation layer that renders a SceneKit scene as its content.</p><pre><code>SCNScene</code></pre></section>	https://developer.apple.com/reference/scenekit/scnlayer
SCNLevelOfDetail	A							https://developer.apple.com/reference/scenekit/scnlevelofdetail			<section class="prog__container"><p>An object that defines alternate resolutions for a geometry that SceneKit can automatically substitute to improve rendering performance.</p><pre><code>SCNGeometry</code></pre></section>	https://developer.apple.com/reference/scenekit/scnlevelofdetail
SCNLight	A							https://developer.apple.com/reference/scenekit/scnlight			<section class="prog__container"><p>A light source that can be attached to a node to illuminate the scene.</p><pre><code>SCNNode</code></pre></section>	https://developer.apple.com/reference/scenekit/scnlight
SCNLookAtConstraint	A							https://developer.apple.com/reference/scenekit/scnlookatconstraint			<section class="prog__container"><p>A constraint that orients a node to always point toward a specified other node. </p><pre><code>SCNNode</code></pre></section>	https://developer.apple.com/reference/scenekit/scnlookatconstraint
SCNMaterial	A							https://developer.apple.com/reference/scenekit/scnmaterial			<section class="prog__container"><p>A set of shading attributes that define the appearance of a geometry's surface when rendered.</p><pre><code>SCNMaterialProperty</code></pre></section>	https://developer.apple.com/reference/scenekit/scnmaterial
SCNMaterialProperty	A							https://developer.apple.com/reference/scenekit/scnmaterialproperty			<section class="prog__container"><p>A container for the color or texture of one of a material’s visual properties. </p><pre><code>contents</code></pre></section>	https://developer.apple.com/reference/scenekit/scnmaterialproperty
SCNMorpher	A							https://developer.apple.com/reference/scenekit/scnmorpher			<section class="prog__container"><p>An object that manages smooth transitions between a node's base geometry and one or more target geometries.</p><pre><code>SCNMorpher</code></pre></section>	https://developer.apple.com/reference/scenekit/scnmorpher
SCNNode	A							https://developer.apple.com/reference/scenekit/scnnode			<section class="prog__container"><p>A structural element of a scene graph, representing a position and transform in a 3D coordinate space, to which you can attach geometry, lights, cameras, or other displayable content.</p><pre><code>SCNNode</code></pre></section>	https://developer.apple.com/reference/scenekit/scnnode
SCNNodeRendererDelegate	A							https://developer.apple.com/reference/scenekit/scnnoderendererdelegate			<section class="prog__container"><p>Methods you can implement to use your own custom Metal or OpenGL drawing code to render content for a node. </p><pre><code>SCNNode</code></pre></section>	https://developer.apple.com/reference/scenekit/scnnoderendererdelegate
SCNParticlePropertyController	A							https://developer.apple.com/reference/scenekit/scnparticlepropertycontroller			<section class="prog__container"><p>An animation for a single property of the individual particles rendered by a particle system.</p><pre><code>SCNParticleSystem</code></pre></section>	https://developer.apple.com/reference/scenekit/scnparticlepropertycontroller
SCNParticleSystem	A							https://developer.apple.com/reference/scenekit/scnparticlesystem			<section class="prog__container"><p>Manages the animation and rendering of a system of small image sprites, or particles, using a high-level simulation whose general behavior you specify.</p><pre><code>birthRate</code></pre></section>	https://developer.apple.com/reference/scenekit/scnparticlesystem
SCNPhysicsBallSocketJoint	A							https://developer.apple.com/reference/scenekit/scnphysicsballsocketjoint			<section class="prog__container"><p>A physics behavior that connects two physics bodies and allows them to pivot around each other in any direction.</p><pre><code>init(bodyA: SCNPhysicsBody, anchorA: SCNVector3, bodyB: SCNPhysicsBody, anchorB: SCNVector3)</code></pre></section>	https://developer.apple.com/reference/scenekit/scnphysicsballsocketjoint
SCNPhysicsBehavior	A							https://developer.apple.com/reference/scenekit/scnphysicsbehavior			<section class="prog__container"><p>The abstract superclass for joints, vehicle simulations, and other high-level behaviors that incorporate multiple physics bodies.</p><pre><code>SCNPhysicsBehavior</code></pre></section>	https://developer.apple.com/reference/scenekit/scnphysicsbehavior
SCNPhysicsBody	A							https://developer.apple.com/reference/scenekit/scnphysicsbody			<section class="prog__container"><p>A set of physics simulation attributes attached to a scene graph node. </p><pre><code>SCNPhysicsBody</code></pre></section>	https://developer.apple.com/reference/scenekit/scnphysicsbody
SCNPhysicsCollisionCategory	A							https://developer.apple.com/reference/scenekit/scnphysicscollisioncategory			<section class="prog__container"><p>Default values for a physics body’s categoryBitMask and collisionBitMask properties.</p><pre><code>categoryBitMask</code></pre></section>	https://developer.apple.com/reference/scenekit/scnphysicscollisioncategory
SCNPhysicsContact	A							https://developer.apple.com/reference/scenekit/scnphysicscontact			<section class="prog__container"><p>Detailed information about a contact between two physics bodies in a scene’s physics simulation. </p><pre><code>SCNPhysicsContact</code></pre></section>	https://developer.apple.com/reference/scenekit/scnphysicscontact
SCNPhysicsContactDelegate	A							https://developer.apple.com/reference/scenekit/scnphysicscontactdelegate			<section class="prog__container"><p>Methods you can implement to respond when a contact or collision occurs between two physics bodies in a scene.</p><pre><code>contactDelegate</code></pre></section>	https://developer.apple.com/reference/scenekit/scnphysicscontactdelegate
SCNPhysicsField	A							https://developer.apple.com/reference/scenekit/scnphysicsfield			<section class="prog__container"><p>An object that applies forces, such as gravitation, electromagnetism, and turbulence, to physics bodies within a certain area of effect. </p><pre><code>physicsField</code></pre></section>	https://developer.apple.com/reference/scenekit/scnphysicsfield
SCNPhysicsHingeJoint	A							https://developer.apple.com/reference/scenekit/scnphysicshingejoint			<section class="prog__container"><p>A physics behavior that connects two bodies and allows them to pivot around each other on a single axis.</p><pre><code>init(bodyA: SCNPhysicsBody, axisA: SCNVector3, anchorA: SCNVector3, bodyB: SCNPhysicsBody, axisB: SCNVector3, anchorB: SCNVector3)</code></pre></section>	https://developer.apple.com/reference/scenekit/scnphysicshingejoint
SCNPhysicsShape	A							https://developer.apple.com/reference/scenekit/scnphysicsshape			<section class="prog__container"><p>An abstraction of a physics body’s solid volume for use in tuning or optimizing collision detection.</p><pre><code>SCNPhysicsBody</code></pre></section>	https://developer.apple.com/reference/scenekit/scnphysicsshape
SCNPhysicsSliderJoint	A							https://developer.apple.com/reference/scenekit/scnphysicssliderjoint			<section class="prog__container"><p>A physics behavior that connects two bodies and allows them to slide against each other and rotate around their connecting points.</p><pre><code>init(bodyA: SCNPhysicsBody, axisA: SCNVector3, anchorA: SCNVector3, bodyB: SCNPhysicsBody, axisB: SCNVector3, anchorB: SCNVector3)</code></pre></section>	https://developer.apple.com/reference/scenekit/scnphysicssliderjoint
SCNPhysicsVehicle	A							https://developer.apple.com/reference/scenekit/scnphysicsvehicle			<section class="prog__container"><p>A physics behavior that modifies a physics body to behave like a car, motorcycle, or other wheeled vehicle.</p><pre><code>SCNPhysicsBody</code></pre></section>	https://developer.apple.com/reference/scenekit/scnphysicsvehicle
SCNPhysicsVehicleWheel	A							https://developer.apple.com/reference/scenekit/scnphysicsvehiclewheel			<section class="prog__container"><p>The appearance and physical characteristics of an individual wheel associated with an physics vehicle behavior.</p><pre><code>SCNPhysicsVehicle</code></pre></section>	https://developer.apple.com/reference/scenekit/scnphysicsvehiclewheel
SCNPhysicsWorld	A							https://developer.apple.com/reference/scenekit/scnphysicsworld			<section class="prog__container"><p>The global simulation of collisions, gravity, joints, and other physics effects in a scene.</p><pre><code>SCNPhysicsWorld</code></pre></section>	https://developer.apple.com/reference/scenekit/scnphysicsworld
SCNPlane	A							https://developer.apple.com/reference/scenekit/scnplane			<section class="prog__container"><p>A rectangular, one-sided plane geometry of specified width and height.</p><pre><code>width</code></pre></section>	https://developer.apple.com/reference/scenekit/scnplane
SCNProgram	A							https://developer.apple.com/reference/scenekit/scnprogram			<section class="prog__container"><p>A complete Metal or OpenGL shader program that replaces SceneKit's rendering of a geometry or material.</p><pre><code>SCNProgram</code></pre></section>	https://developer.apple.com/reference/scenekit/scnprogram
SCNProgramDelegate	A							https://developer.apple.com/reference/scenekit/scnprogramdelegate			<section class="prog__container"><p>The interface for tracking errors that occur when compiling shader source code.</p><pre><code>SCNProgram</code></pre></section>	https://developer.apple.com/reference/scenekit/scnprogramdelegate
SCNPyramid	A							https://developer.apple.com/reference/scenekit/scnpyramid			<section class="prog__container"><p>A right rectangular pyramid geometry.</p><pre><code>width</code></pre></section>	https://developer.apple.com/reference/scenekit/scnpyramid
SCNReferenceNode	A							https://developer.apple.com/reference/scenekit/scnreferencenode			<section class="prog__container"><p>A scene graph node that serves as a placeholder for content to be loaded from a separate scene file. </p><pre><code>init?(url: URL)</code></pre></section>	https://developer.apple.com/reference/scenekit/scnreferencenode
SCNRenderer	A							https://developer.apple.com/reference/scenekit/scnrenderer			<section class="prog__container"><p>A renderer for displaying SceneKit scene in an an existing Metal workflow or OpenGL context. </p><pre><code>SCNScene</code></pre></section>	https://developer.apple.com/reference/scenekit/scnrenderer
SCNScene	A							https://developer.apple.com/reference/scenekit/scnscene			<section class="prog__container"><p>A scene graph—a hierarchy of nodes with attached geometries, lights, cameras and other attributes that together form a displayable 3D scene.</p><pre><code>SCNScene</code></pre></section>	https://developer.apple.com/reference/scenekit/scnscene
SCNSceneExportDelegate	A							https://developer.apple.com/reference/scenekit/scnsceneexportdelegate			<section class="prog__container"><p>Methods you can implement to participate in the process of exporting a scene to a file.</p><pre><code>SCNScene</code></pre></section>	https://developer.apple.com/reference/scenekit/scnsceneexportdelegate
SCNSceneRenderer	A							https://developer.apple.com/reference/scenekit/scnscenerenderer			<section class="prog__container"><p>Methods and properties common to the SCNView, SCNLayer and SCNRenderer classes.</p><pre><code>SCNView</code></pre></section>	https://developer.apple.com/reference/scenekit/scnscenerenderer
SCNSceneRendererDelegate	A							https://developer.apple.com/reference/scenekit/scnscenerendererdelegate			<section class="prog__container"><p>Methods your app can implement to participate in SceneKit’s animation loop or perform additional rendering. </p><pre><code>SCNView</code></pre></section>	https://developer.apple.com/reference/scenekit/scnscenerendererdelegate
SCNSceneSource	A							https://developer.apple.com/reference/scenekit/scnscenesource			<section class="prog__container"><p>Manages the data-reading tasks associated with loading scene contents from a file or data.</p><pre><code>NSData</code></pre></section>	https://developer.apple.com/reference/scenekit/scnscenesource
SCNShadable	A							https://developer.apple.com/reference/scenekit/scnshadable			<section class="prog__container"><p>Methods for customizing SceneKit's rendering of geometry and materials using Metal or OpenGL shader programs.</p><pre><code>SCNProgram</code></pre></section>	https://developer.apple.com/reference/scenekit/scnshadable
SCNShape	A							https://developer.apple.com/reference/scenekit/scnshape			<section class="prog__container"><p>A geometry based on a two-dimensional path, optionally extruded to create a three-dimensional object.</p><pre><code>1.0</code></pre></section>	https://developer.apple.com/reference/scenekit/scnshape
SCNSkinner	A							https://developer.apple.com/reference/scenekit/scnskinner			<section class="prog__container"><p>An object that manages the relationship between skeletal animations and the nodes and geometries they animate.</p><pre><code>init(baseGeometry:bones:boneInverseBindTransforms:boneWeights:boneIndices:)</code></pre></section>	https://developer.apple.com/reference/scenekit/scnskinner
SCNSphere	A							https://developer.apple.com/reference/scenekit/scnsphere			<section class="prog__container"><p>A sphere (or ball or globe) geometry.</p><pre><code>radius</code></pre></section>	https://developer.apple.com/reference/scenekit/scnsphere
SCNTechnique	A							https://developer.apple.com/reference/scenekit/scntechnique			<section class="prog__container"><p>A specification for augmenting or postprocessing SceneKit's rendering of a scene using additional drawing passes with custom Metal or OpenGL shaders.</p><pre><code>SCNTechnique</code></pre></section>	https://developer.apple.com/reference/scenekit/scntechnique
SCNTechniqueSupport	A							https://developer.apple.com/reference/scenekit/scntechniquesupport			<section class="prog__container"><p>The common interface for SceneKit objects that support multipass rendering using SCNTechnique objects.</p><pre><code>SCNTechnique</code></pre></section>	https://developer.apple.com/reference/scenekit/scntechniquesupport
SCNText	A							https://developer.apple.com/reference/scenekit/scntext			<section class="prog__container"><p>A geometry based on a string of text, optionally extruded to create a three-dimensional object. </p><pre><code>NSString</code></pre></section>	https://developer.apple.com/reference/scenekit/scntext
SCNTorus	A							https://developer.apple.com/reference/scenekit/scntorus			<section class="prog__container"><p>A torus, or ring-shaped geometry.</p><pre><code>ringRadius</code></pre></section>	https://developer.apple.com/reference/scenekit/scntorus
SCNTransaction	A							https://developer.apple.com/reference/scenekit/scntransaction			<section class="prog__container"><p>The SCNTransaction class defines SceneKit’s mechanism for batching scene graph modifications into atomic updates. You use SCNTransaction class methods to control the animation that results from changing animatable properties in the scene graph and to combine sets of changes into nested transactions.</p><pre><code>SCNTransaction</code></pre></section>	https://developer.apple.com/reference/scenekit/scntransaction
SCNTransformConstraint	A							https://developer.apple.com/reference/scenekit/scntransformconstraint			<section class="prog__container"><p>A constraint that runs a specified closure to compute a new transform (position, rotation, and scale) for each node that the constraint affects.</p><pre><code>SCNNode</code></pre></section>	https://developer.apple.com/reference/scenekit/scntransformconstraint
SCNTube	A							https://developer.apple.com/reference/scenekit/scntube			<section class="prog__container"><p>A tube or pipe geometry—a right circular cylinder with a circular hole along its central axis.</p><pre><code>outerRadius</code></pre></section>	https://developer.apple.com/reference/scenekit/scntube
SCNView	A							https://developer.apple.com/reference/scenekit/scnview			<section class="prog__container"><p>A view for displaying 3D SceneKit content.</p><pre><code>SCNView</code></pre></section>	https://developer.apple.com/reference/scenekit/scnview
Screen Saver Functions	A							https://developer.apple.com/reference/screensaver/screen_saver_functions			<section class="prog__container"><p>This chapter describes functions and function-like macros available in the Screen Saver framework.</p><pre><code>random()</code></pre></section>	https://developer.apple.com/reference/screensaver/screen_saver_functions
ScreenSaverDefaults	A							https://developer.apple.com/reference/screensaver/screensaverdefaults			<section class="prog__container"><p>ScreenSaverDefaults defines a set of methods for saving and restoring user defaults for screen savers.</p><pre><code>init(forModuleWithName:)</code></pre></section>	https://developer.apple.com/reference/screensaver/screensaverdefaults
ScreenSaverView	A							https://developer.apple.com/reference/screensaver/screensaverview			<section class="prog__container"><p>ScreenSaverView is an abstract class that defines the interface for subclassers to interact with the screen saver infrastructure.</p><pre><code>ScreenSaverView</code></pre></section>	https://developer.apple.com/reference/screensaver/screensaverview
SBApplication	A							https://developer.apple.com/reference/scriptingbridge/sbapplication			<section class="prog__container"><p>The SBApplication class provides a mechanism enabling an Objective-C program to send Apple events to a scriptable application and receive Apple events in response. It thereby makes it possible for that program to control the application and exchange data with it. Scripting Bridge works by bridging data types between Apple event descriptors and Cocoa objects. </p><pre><code>SBApplication</code></pre></section>	https://developer.apple.com/reference/scriptingbridge/sbapplication
SBApplicationDelegate	A							https://developer.apple.com/reference/scriptingbridge/sbapplicationdelegate			<section class="prog__container"><p>This informal protocol defines a delegation method for handling Apple event errors that are sent from an target application to an SBApplication object.</p><pre><code>SBApplication</code></pre></section>	https://developer.apple.com/reference/scriptingbridge/sbapplicationdelegate
SBElementArray	A							https://developer.apple.com/reference/scriptingbridge/sbelementarray			<section class="prog__container"><p>SBElementArray is subclass of NSMutableArray that manages collections of related SBObject objects. For example, when you ask the Finder for a list of disks, or ask iTunes for a list of playlists, you get the result back as an SBElementArray containing Scripting Bridge objects representing those items.</p><pre><code>SBElementArray</code></pre></section>	https://developer.apple.com/reference/scriptingbridge/sbelementarray
SBObject	A							https://developer.apple.com/reference/scriptingbridge/sbobject			<section class="prog__container"><p>The SBObject class declares methods that can be invoked on any object in a scriptable application. It defines methods for getting elements and properties of an object, as well as setting a given object to a new value.</p><pre><code>SBObject</code></pre></section>	https://developer.apple.com/reference/scriptingbridge/sbobject
Authorization Services	A							https://developer.apple.com/reference/security/authorization_services			<section class="prog__container"><p>The programming interface you use to access restricted areas of the operating system, and to control access to particular features of your macOS app.</p><pre><code>func AuthorizationCreate(UnsafePointer<AuthorizationRights>?, UnsafePointer<AuthorizationEnvironment>?, AuthorizationFlags, UnsafeMutablePointer<AuthorizationRef?>?)</code></pre></section>	https://developer.apple.com/reference/security/authorization_services
Certificate, Key, and Trust Services	A							https://developer.apple.com/reference/security/certificate_key_and_trust_services			<section class="prog__container"><p>The functions and constants of the Security Framework used to manage certificates, keys, and trust policies.</p><pre><code>func SecCertificateGetTypeID()</code></pre></section>	https://developer.apple.com/reference/security/certificate_key_and_trust_services
Cryptographic Message Syntax Services	A							https://developer.apple.com/reference/security/cryptographic_message_syntax_services			<section class="prog__container"><p>Cryptographic Message Syntax Services is an API that implements Cryptographic Message Syntax (CMS) digital signatures and encryption for S/MIME messages. </p><pre><code>func CMSEncoderCreate(UnsafeMutablePointer<CMSEncoder?>)</code></pre></section>	https://developer.apple.com/reference/security/cryptographic_message_syntax_services
Keychain Services	A							https://developer.apple.com/reference/security/keychain_services			<section class="prog__container"><p>Keychain Services is a programming interface that enables you to find, add, modify, and delete keychain items.</p><pre><code>SecurityTool</code></pre></section>	https://developer.apple.com/reference/security/keychain_services
SecCode	A							https://developer.apple.com/reference/security/seccode			<section class="prog__container"><p>A reference to a SecCode object, representing signed code running on the system.</p><pre><code>SecCodeRef</code></pre></section>	https://developer.apple.com/reference/security/seccode
SecRequirement	A							https://developer.apple.com/reference/security/secrequirement			<section class="prog__container"><p>A reference to a SecRequirement object, representing a code requirement.</p></section>	https://developer.apple.com/reference/security/secrequirement
SecStaticCode	A							https://developer.apple.com/reference/security/secstaticcode			<section class="prog__container"><p>A reference to a SecStaticCode object, representing signed code on disk.</p><pre><code>SecCode</code></pre></section>	https://developer.apple.com/reference/security/secstaticcode
Secure Transport	A							https://developer.apple.com/reference/security/secure_transport			<section class="prog__container"><p>This document describes the Apple platforms implementation of the following cryptographic protocols: Secure Sockets Layer version 3.0 (SSLv3), Transport Layer Security (TLS) versions 1.0 through 1.2, and Datagram Transport Layer Security (DTLS) version 1.0.</p><pre><code>SSLConnectionRef</code></pre></section>	https://developer.apple.com/reference/security/secure_transport
Shared Web Credentials	A							https://developer.apple.com/reference/security/shared_web_credentials			<section class="prog__container"><p>Shared web credentials is a programming interface that enables native iOS apps to share credentials with their website counterparts. For example, a user may log in to a website in Safari, entering a user name and password, and save those credentials using the iCloud Keychain. Later, the user may run a native app from the same developer, and instead of the app requiring the user to reenter a user name and password, shared web credentials gives it access to the credentials that were entered earlier in Safari. The user can also create new accounts, update passwords, or delete her account from within the app. These changes are then saved and used by Safari.</p><pre><code>com.apple.developer.associated-domains</code></pre></section>	https://developer.apple.com/reference/security/shared_web_credentials
SFAuthorization	A							https://developer.apple.com/reference/securityfoundation/sfauthorization			<section class="prog__container"><p>The SFAuthorization class allows you to restrict a user’s access to particular features in your Mac app or daemon. </p><pre><code>SFAuthorization</code></pre></section>	https://developer.apple.com/reference/securityfoundation/sfauthorization
ServiceManagement.h	A							https://developer.apple.com/reference/servicemanagement/servicemanagement.h			<section class="prog__container"><p>The main header for the ServiceManagement framework. This header provides support for loading and unloading launchd jobs and reading and manipulating job dictionaries from within an application.</p><pre><code>func SMCopyAllJobDictionaries(CFString!)</code></pre></section>	https://developer.apple.com/reference/servicemanagement/servicemanagement.h
SMErrors.h	A							https://developer.apple.com/reference/servicemanagement/smerrors.h			<section class="prog__container"><p>The header containing error codes returned by functions in the ServiceManagement framework. You do not need to include this directly; ServiceManagement.h includes it for you.</p></section>	https://developer.apple.com/reference/servicemanagement/smerrors.h
SMLoginItem.h	A							https://developer.apple.com/reference/servicemanagement/smloginitem.h			<section class="prog__container"><p></p><pre><code>func SMLoginItemSetEnabled(CFString, Bool)</code></pre></section>	https://developer.apple.com/reference/servicemanagement/smloginitem.h
SLComposeServiceViewController	A							https://developer.apple.com/reference/social/slcomposeserviceviewcontroller			<section class="prog__container"><p>The SLComposeServiceViewController class provides a standard compose view you can present for social sharing extensions on both platforms. By default, the compose view includes items such as an editable text view and an indication of remaining characters, in addition to support for previewing attachments and displaying configuration items, such as an account or privacy picker.</p><pre><code>SLComposeServiceViewController</code></pre></section>	https://developer.apple.com/reference/social/slcomposeserviceviewcontroller
SLComposeSheetConfigurationItem	A							https://developer.apple.com/reference/social/slcomposesheetconfigurationitem			<section class="prog__container"><p>The SLComposeSheetConfigurationItem class helps you give users ways to configure the properties of a post before posting it. For example, you can use SLComposeSheetConfigurationItem objects to let users choose an account to post from, an album to post to, or a location to add to a post.</p><pre><code>SLComposeSheetConfigurationItem</code></pre></section>	https://developer.apple.com/reference/social/slcomposesheetconfigurationitem
SLComposeViewController	A							https://developer.apple.com/reference/social/slcomposeviewcontroller			<section class="prog__container"><p>The SLComposeViewController class presents a view to the user to compose a post for supported social networking services.</p><pre><code>SLComposeViewController</code></pre></section>	https://developer.apple.com/reference/social/slcomposeviewcontroller
SLRequest	A							https://developer.apple.com/reference/social/slrequest			<section class="prog__container"><p>The SLRequest object encapsulates the properties of an HTTP request, providing a convenient template for you to make requests. You send a request to a social networking service to perform some operation on behalf of the user or to retrieve user information.</p><pre><code>SLRequest</code></pre></section>	https://developer.apple.com/reference/social/slrequest
SFSpeechAudioBufferRecognitionRequest	A							https://developer.apple.com/reference/speech/sfspeechaudiobufferrecognitionrequest			<section class="prog__container"><p>A request to recognize speech provided in audio buffers.</p><pre><code>SFSpeechAudioBufferRecognitionRequest</code></pre></section>	https://developer.apple.com/reference/speech/sfspeechaudiobufferrecognitionrequest
SFSpeechRecognitionRequest	A							https://developer.apple.com/reference/speech/sfspeechrecognitionrequest			<section class="prog__container"><p>A request to recognize speech from an audio source.</p><pre><code>var contextualStrings: [String]</code></pre></section>	https://developer.apple.com/reference/speech/sfspeechrecognitionrequest
SFSpeechRecognitionResult	A							https://developer.apple.com/reference/speech/sfspeechrecognitionresult			<section class="prog__container"><p>A recognized utterance that corresponds to a segment of recorded speech and that contains one or more transcription hypotheses.</p><pre><code>SFSpeechRecognitionResult</code></pre></section>	https://developer.apple.com/reference/speech/sfspeechrecognitionresult
SFSpeechRecognitionTask	A							https://developer.apple.com/reference/speech/sfspeechrecognitiontask			<section class="prog__container"><p>A speech recognition task that lets you monitor recognition progress.</p><pre><code>SFSpeechRecognitionTask</code></pre></section>	https://developer.apple.com/reference/speech/sfspeechrecognitiontask
SFSpeechRecognitionTaskDelegate	A							https://developer.apple.com/reference/speech/sfspeechrecognitiontaskdelegate			<section class="prog__container"><p>A protocol that supports complex or multi-utterance speech recognition requests. </p><pre><code>speechRecognitionDidDetectSpeech(_:)</code></pre></section>	https://developer.apple.com/reference/speech/sfspeechrecognitiontaskdelegate
SFSpeechRecognizer	A							https://developer.apple.com/reference/speech/sfspeechrecognizer			<section class="prog__container"><p>A supported speech recognizer.</p><pre><code>supportedLocales()</code></pre></section>	https://developer.apple.com/reference/speech/sfspeechrecognizer
SFSpeechRecognizerDelegate	A							https://developer.apple.com/reference/speech/sfspeechrecognizerdelegate			<section class="prog__container"><p>A protocol that helps you track the availability of a speech recognizer.</p><pre><code>func speechRecognizer(SFSpeechRecognizer, availabilityDidChange: Bool)</code></pre></section>	https://developer.apple.com/reference/speech/sfspeechrecognizerdelegate
SFSpeechURLRecognitionRequest	A							https://developer.apple.com/reference/speech/sfspeechurlrecognitionrequest			<section class="prog__container"><p>A request to recognize speech in a recorded audio file.</p><pre><code>init(url: URL)</code></pre></section>	https://developer.apple.com/reference/speech/sfspeechurlrecognitionrequest
SFTranscription	A							https://developer.apple.com/reference/speech/sftranscription			<section class="prog__container"><p>A hypothesized textual representation of recognized speech.</p><pre><code>var formattedString: String</code></pre></section>	https://developer.apple.com/reference/speech/sftranscription
SFTranscriptionSegment	A							https://developer.apple.com/reference/speech/sftranscriptionsegment			<section class="prog__container"><p>A part of the entire hypothesized transcription.</p><pre><code>substringRange</code></pre></section>	https://developer.apple.com/reference/speech/sftranscriptionsegment
Speech Enumerations	A							https://developer.apple.com/reference/speech/speech_enumerations			<section class="prog__container"><p>Constants that specify types of speech recognition, the state of a recognition task, and the status of the authorization request.</p><pre><code>SFSpeechRecognitionTaskHint</code></pre></section>	https://developer.apple.com/reference/speech/speech_enumerations
SK3DNode	A							https://developer.apple.com/reference/spritekit/sk3dnode			<section class="prog__container"><p>A node that renders a Scene Kit scene as a 2D image. </p><pre><code>SK3DNode</code></pre></section>	https://developer.apple.com/reference/spritekit/sk3dnode
SKAction	A							https://developer.apple.com/reference/spritekit/skaction			<section class="prog__container"><p>An object that is executed by an SKNode to change its structure or content.</p><pre><code>SKNode</code></pre></section>	https://developer.apple.com/reference/spritekit/skaction
SKAttribute	A							https://developer.apple.com/reference/spritekit/skattribute			<section class="prog__container"><p>A specification for dynamic per-node data used with a custom shader.</p><pre><code>SKAttribute</code></pre></section>	https://developer.apple.com/reference/spritekit/skattribute
SKAttributeValue	A							https://developer.apple.com/reference/spritekit/skattributevalue			<section class="prog__container"><p>A container for dynamic shader data associated with a node.</p><pre><code>SKAttributeValue</code></pre></section>	https://developer.apple.com/reference/spritekit/skattributevalue
SKAudioNode	A							https://developer.apple.com/reference/spritekit/skaudionode			<section class="prog__container"><p>A node which adds positional audio to a scene.</p><pre><code>SKAudioNode</code></pre></section>	https://developer.apple.com/reference/spritekit/skaudionode
SKCameraNode	A							https://developer.apple.com/reference/spritekit/skcameranode			<section class="prog__container"><p>A node that controls camera movement, zoom and rotation.</p><pre><code>SKCameraNode</code></pre></section>	https://developer.apple.com/reference/spritekit/skcameranode
SKConstraint	A							https://developer.apple.com/reference/spritekit/skconstraint			<section class="prog__container"><p>A specification for constraining a node's position or rotation. </p><pre><code>SKConstraint</code></pre></section>	https://developer.apple.com/reference/spritekit/skconstraint
SKCropNode	A							https://developer.apple.com/reference/spritekit/skcropnode			<section class="prog__container"><p>A node that masks pixels drawn by its children so that only some are rendered to the parent’s frame buffer.</p><pre><code>maskNode</code></pre></section>	https://developer.apple.com/reference/spritekit/skcropnode
SKEffectNode	A							https://developer.apple.com/reference/spritekit/skeffectnode			<section class="prog__container"><p>A node that can apply Core Image filters or SKWarpGeometry distortions to its children.</p><pre><code>SKWarpGeometry</code></pre></section>	https://developer.apple.com/reference/spritekit/skeffectnode
SKEmitterNode	A							https://developer.apple.com/reference/spritekit/skemitternode			<section class="prog__container"><p>A node that creates and renders particles.</p><pre><code>SKEmitterNode</code></pre></section>	https://developer.apple.com/reference/spritekit/skemitternode
SKFieldNode	A							https://developer.apple.com/reference/spritekit/skfieldnode			<section class="prog__container"><p>A node that applies physics effects to a portion of the scene.</p><pre><code>isEnabled</code></pre></section>	https://developer.apple.com/reference/spritekit/skfieldnode
SKKeyframeSequence	A							https://developer.apple.com/reference/spritekit/skkeyframesequence			<section class="prog__container"><p>An object which performs interpolation between values specified at different times (keyframes). </p><pre><code>SKKeyframeSequence</code></pre></section>	https://developer.apple.com/reference/spritekit/skkeyframesequence
SKLabelNode	A							https://developer.apple.com/reference/spritekit/sklabelnode			<section class="prog__container"><p>A node that displays a text label.</p><pre><code>SKLabelNode</code></pre></section>	https://developer.apple.com/reference/spritekit/sklabelnode
SKLightNode	A							https://developer.apple.com/reference/spritekit/sklightnode			<section class="prog__container"><p>A node that adds lighting into a scene.</p><pre><code>SKLightNode</code></pre></section>	https://developer.apple.com/reference/spritekit/sklightnode
SKMutableTexture	A							https://developer.apple.com/reference/spritekit/skmutabletexture			<section class="prog__container"><p>A texture whose contents can be dynamically updated.</p><pre><code>SKTexture</code></pre></section>	https://developer.apple.com/reference/spritekit/skmutabletexture
SKNode	A							https://developer.apple.com/reference/spritekit/sknode			<section class="prog__container"><p>The SKNode class is the fundamental building block of most SpriteKit content. </p><pre><code>SKNode</code></pre></section>	https://developer.apple.com/reference/spritekit/sknode
SKPhysicsBody	A							https://developer.apple.com/reference/spritekit/skphysicsbody			<section class="prog__container"><p>An object which adds physics simulation to a node.</p><pre><code>SKPhysicsBody</code></pre></section>	https://developer.apple.com/reference/spritekit/skphysicsbody
SKPhysicsContact	A							https://developer.apple.com/reference/spritekit/skphysicscontact			<section class="prog__container"><p>A description of the contact between two physics bodies. </p><pre><code>SKPhysicsContact</code></pre></section>	https://developer.apple.com/reference/spritekit/skphysicscontact
SKPhysicsContactDelegate	A							https://developer.apple.com/reference/spritekit/skphysicscontactdelegate			<section class="prog__container"><p>Methods your app can implement to respond when physics bodies come into contact. </p><pre><code>SKPhysicsContactDelegate</code></pre></section>	https://developer.apple.com/reference/spritekit/skphysicscontactdelegate
SKPhysicsJoint	A							https://developer.apple.com/reference/spritekit/skphysicsjoint			<section class="prog__container"><p>The abstract superclass for objects that connect physics bodies.</p><pre><code>SKPhysicsJoint</code></pre></section>	https://developer.apple.com/reference/spritekit/skphysicsjoint
SKPhysicsJointFixed	A							https://developer.apple.com/reference/spritekit/skphysicsjointfixed			<section class="prog__container"><p>A joint that fixes two physics bodies together.</p><pre><code>SKPhysicsJointFixed</code></pre></section>	https://developer.apple.com/reference/spritekit/skphysicsjointfixed
SKPhysicsJointLimit	A							https://developer.apple.com/reference/spritekit/skphysicsjointlimit			<section class="prog__container"><p>A joint that imposes a maximum distance between two physics bodies, as if they were connected by a rope.</p><pre><code>class func joint(withBodyA: SKPhysicsBody, bodyB: SKPhysicsBody, anchorA: CGPoint, anchorB: CGPoint)</code></pre></section>	https://developer.apple.com/reference/spritekit/skphysicsjointlimit
SKPhysicsJointPin	A							https://developer.apple.com/reference/spritekit/skphysicsjointpin			<section class="prog__container"><p>A joint that pins together two physics bodies, allowing independent rotation. </p><pre><code>SKPhysicsJointPin</code></pre></section>	https://developer.apple.com/reference/spritekit/skphysicsjointpin
SKPhysicsJointSliding	A							https://developer.apple.com/reference/spritekit/skphysicsjointsliding			<section class="prog__container"><p>A joint that allows two physics bodies to slide along an axis. </p><pre><code>SKPhysicsJointSliding</code></pre></section>	https://developer.apple.com/reference/spritekit/skphysicsjointsliding
SKPhysicsJointSpring	A							https://developer.apple.com/reference/spritekit/skphysicsjointspring			<section class="prog__container"><p>A joint that simulates a spring connecting two physics bodies. </p><pre><code>SKPhysicsJointSpring</code></pre></section>	https://developer.apple.com/reference/spritekit/skphysicsjointspring
SKPhysicsWorld	A							https://developer.apple.com/reference/spritekit/skphysicsworld			<section class="prog__container"><p>An object which encapsulates a scene's physics simulation.</p><pre><code>SKPhysicsWorld</code></pre></section>	https://developer.apple.com/reference/spritekit/skphysicsworld
SKRange	A							https://developer.apple.com/reference/spritekit/skrange			<section class="prog__container"><p>The definition of a range of CGFloat values. </p><pre><code>CGFloat</code></pre></section>	https://developer.apple.com/reference/spritekit/skrange
SKReachConstraints	A							https://developer.apple.com/reference/spritekit/skreachconstraints			<section class="prog__container"><p>A specification of the degree of freedom when solving inverse kinematics.</p><pre><code>SKReachConstraints</code></pre></section>	https://developer.apple.com/reference/spritekit/skreachconstraints
SKReferenceNode	A							https://developer.apple.com/reference/spritekit/skreferencenode			<section class="prog__container"><p>A node that creates its children from an archived collection of other nodes.</p><pre><code>init(url: URL)</code></pre></section>	https://developer.apple.com/reference/spritekit/skreferencenode
SKRegion	A							https://developer.apple.com/reference/spritekit/skregion			<section class="prog__container"><p>A definition of an arbitrary area.</p><pre><code>SKRegion</code></pre></section>	https://developer.apple.com/reference/spritekit/skregion
SKScene	A							https://developer.apple.com/reference/spritekit/skscene			<section class="prog__container"><p>The root node for all Sprite Kit objects displayed in a view. </p><pre><code>SKScene</code></pre></section>	https://developer.apple.com/reference/spritekit/skscene
SKSceneDelegate	A							https://developer.apple.com/reference/spritekit/skscenedelegate			<section class="prog__container"><p>Methods your app can implement to participate in SpriteKit's animation loop.</p><pre><code>SKSceneDelegate</code></pre></section>	https://developer.apple.com/reference/spritekit/skscenedelegate
SKShader	A							https://developer.apple.com/reference/spritekit/skshader			<section class="prog__container"><p>An object that allows nodes to be rendered or filtered with a custom OpenGL ES fragment shader. </p><pre><code>SKShader</code></pre></section>	https://developer.apple.com/reference/spritekit/skshader
SKShapeNode	A							https://developer.apple.com/reference/spritekit/skshapenode			<section class="prog__container"><p>A node that renders a shape defined by a Core Graphics path.</p><pre><code>SKSpriteNode</code></pre></section>	https://developer.apple.com/reference/spritekit/skshapenode
SKSpriteNode	A							https://developer.apple.com/reference/spritekit/skspritenode			<section class="prog__container"><p>A node that draws a rectangular texture, image or color. </p><pre><code>SKSpriteNode</code></pre></section>	https://developer.apple.com/reference/spritekit/skspritenode
SKTexture	A							https://developer.apple.com/reference/spritekit/sktexture			<section class="prog__container"><p>A representation of an image for use in SpriteKit.</p><pre><code>SKTexture</code></pre></section>	https://developer.apple.com/reference/spritekit/sktexture
SKTextureAtlas	A							https://developer.apple.com/reference/spritekit/sktextureatlas			<section class="prog__container"><p>A collection of textures. </p><pre><code>SKTextureAtlas</code></pre></section>	https://developer.apple.com/reference/spritekit/sktextureatlas
SKTileAdjacencyMask	A							https://developer.apple.com/reference/spritekit/sktileadjacencymask			<section class="prog__container"><p>An enumeration defining how neighboring tiles are automatically placed next to each other. </p><pre><code>init(rawValue: UInt)</code></pre></section>	https://developer.apple.com/reference/spritekit/sktileadjacencymask
SKTileDefinition	A							https://developer.apple.com/reference/spritekit/sktiledefinition			<section class="prog__container"><p>A class that describes a single type of tile that is used within a tile map. </p><pre><code>SKTileDefinition</code></pre></section>	https://developer.apple.com/reference/spritekit/sktiledefinition
SKTileGroup	A							https://developer.apple.com/reference/spritekit/sktilegroup			<section class="prog__container"><p>A class that encapsulates a collection of related tile definitions that are designed to be pieced together within a tile map.</p><pre><code>SKTileGroup</code></pre></section>	https://developer.apple.com/reference/spritekit/sktilegroup
SKTileGroupRule	A							https://developer.apple.com/reference/spritekit/sktilegrouprule			<section class="prog__container"><p>A class that defines how tiles should be placed in a map.</p><pre><code>var adjacency: SKTileAdjacencyMask</code></pre></section>	https://developer.apple.com/reference/spritekit/sktilegrouprule
SKTileMapNode	A							https://developer.apple.com/reference/spritekit/sktilemapnode			<section class="prog__container"><p>A node used to render a 2D array of textured sprites.</p><pre><code>SKTileMapNode</code></pre></section>	https://developer.apple.com/reference/spritekit/sktilemapnode
SKTileSet	A							https://developer.apple.com/reference/spritekit/sktileset			<section class="prog__container"><p>A class that contains all the tile definitions available for use in a tile map. </p><pre><code>SKTileSet</code></pre></section>	https://developer.apple.com/reference/spritekit/sktileset
SKTransition	A							https://developer.apple.com/reference/spritekit/sktransition			<section class="prog__container"><p>An SKTransition object is used to perform an animated transition between a SKScene object already presented by an SKView object and a new incoming scene.</p><pre><code>SKTransition</code></pre></section>	https://developer.apple.com/reference/spritekit/sktransition
SKUniform	A							https://developer.apple.com/reference/spritekit/skuniform			<section class="prog__container"><p>A container for uniform shader data. </p><pre><code>SKUniform</code></pre></section>	https://developer.apple.com/reference/spritekit/skuniform
SKVideoNode	A							https://developer.apple.com/reference/spritekit/skvideonode			<section class="prog__container"><p>A node that displays video content.</p><pre><code>SKSpriteNode</code></pre></section>	https://developer.apple.com/reference/spritekit/skvideonode
SKView	A							https://developer.apple.com/reference/spritekit/skview			<section class="prog__container"><p>An object that displays SpriteKit content. This content is provided by an SKScene object.</p><pre><code>SKScene</code></pre></section>	https://developer.apple.com/reference/spritekit/skview
SKViewDelegate	A							https://developer.apple.com/reference/spritekit/skviewdelegate			<section class="prog__container"><p>Methods that allow dynamic control of an SKView object's render rate.</p><pre><code>SKView</code></pre></section>	https://developer.apple.com/reference/spritekit/skviewdelegate
SKWarpable	A							https://developer.apple.com/reference/spritekit/skwarpable			<section class="prog__container"><p>A protocol for objects that can be warped and animated by an SKWarpGeometry. </p><pre><code>SKWarpGeometry</code></pre></section>	https://developer.apple.com/reference/spritekit/skwarpable
SKWarpGeometry	A							https://developer.apple.com/reference/spritekit/skwarpgeometry			<section class="prog__container"><p>A definition for a deformation of nodes that conform to SKWarpable.</p><pre><code>SKWarpable</code></pre></section>	https://developer.apple.com/reference/spritekit/skwarpgeometry
SKWarpGeometryGrid	A							https://developer.apple.com/reference/spritekit/skwarpgeometrygrid			<section class="prog__container"><p>A definition for a grid based deformation of nodes that conform to SKWarpable. </p><pre><code>SKWarpable</code></pre></section>	https://developer.apple.com/reference/spritekit/skwarpgeometrygrid
SKCloudServiceCapability	A							https://developer.apple.com/reference/storekit/skcloudservicecapability			<section class="prog__container"><p>Constants that specify the current capabilities of the user’s music library on the device.</p><pre><code>static var musicCatalogPlayback: SKCloudServiceCapability</code></pre></section>	https://developer.apple.com/reference/storekit/skcloudservicecapability
SKCloudServiceController	A							https://developer.apple.com/reference/storekit/skcloudservicecontroller			<section class="prog__container"><p>An SKCloudServiceController object is used to determine the current capabilities of the user’s music library, such as if the device allows playback of Apple Music catalog tracks and the addition of tracks to the library.</p><pre><code>SKCloudServiceController</code></pre></section>	https://developer.apple.com/reference/storekit/skcloudservicecontroller
SKCloudServiceSetupAction	A							https://developer.apple.com/reference/storekit/skcloudservicesetupaction			<section class="prog__container"><p>A string used to specify the type of setup action to offer for a cloud service.</p><pre><code>init(rawValue: String)</code></pre></section>	https://developer.apple.com/reference/storekit/skcloudservicesetupaction
SKCloudServiceSetupOptionsKey	A							https://developer.apple.com/reference/storekit/skcloudservicesetupoptionskey			<section class="prog__container"><p>A key used to specify the type of setup option for a cloud service.</p><pre><code>init(rawValue: String)</code></pre></section>	https://developer.apple.com/reference/storekit/skcloudservicesetupoptionskey
SKCloudServiceSetupViewController	A							https://developer.apple.com/reference/storekit/skcloudservicesetupviewcontroller			<section class="prog__container"><p>A view controller that helps users perform setup for a cloud service, such as an Apple Music subscription.</p><pre><code>SKCloudServiceController</code></pre></section>	https://developer.apple.com/reference/storekit/skcloudservicesetupviewcontroller
SKCloudServiceSetupViewControllerDelegate	A							https://developer.apple.com/reference/storekit/skcloudservicesetupviewcontrollerdelegate			<section class="prog__container"><p>A protocol that defines the methods a cloud service setup view controller can use to get information about the status of a setup view.</p><pre><code>func cloudServiceSetupViewControllerDidDismiss(SKCloudServiceSetupViewController)</code></pre></section>	https://developer.apple.com/reference/storekit/skcloudservicesetupviewcontrollerdelegate
SKDownload	A							https://developer.apple.com/reference/storekit/skdownload			<section class="prog__container"><p>A SKDownload object represents downloadable content associated with a product. When you create a product in iTunes Connect, you can associate one or more pieces of downloadable content with it. Then, at runtime, when a product is purchased by a user, your app uses SKDownload objects to download the content from the App Store.</p><pre><code>SKDownload</code></pre></section>	https://developer.apple.com/reference/storekit/skdownload
SKMutablePayment	A							https://developer.apple.com/reference/storekit/skmutablepayment			<section class="prog__container"><p>The SKMutablePayment class defines a request to the Apple App Store to process payment for additional functionality offered by your application. A payment encapsulates a string that identifies a particular product and the quantity of that item the user would like to purchase.</p><pre><code>SKMutablePayment</code></pre></section>	https://developer.apple.com/reference/storekit/skmutablepayment
SKPayment	A							https://developer.apple.com/reference/storekit/skpayment			<section class="prog__container"><p>The SKPayment class defines a request to the Apple App Store to process payment for additional functionality offered by your application. A payment encapsulates a string that identifies a particular product and the quantity of those items the user would like to purchase.</p><pre><code>SKPayment</code></pre></section>	https://developer.apple.com/reference/storekit/skpayment
SKPaymentQueue	A							https://developer.apple.com/reference/storekit/skpaymentqueue			<section class="prog__container"><p>The SKPaymentQueue class provides a queue of payment transactions to be processed by the App Store. The payment queue communicates with the App Store and presents a user interface so that the user can authorize payment. The contents of the queue are persistent between launches of your app.</p><pre><code>SKPaymentQueue</code></pre></section>	https://developer.apple.com/reference/storekit/skpaymentqueue
SKPaymentTransaction	A							https://developer.apple.com/reference/storekit/skpaymenttransaction			<section class="prog__container"><p>The SKPaymentTransaction class defines objects residing in the payment queue. A payment transaction is created whenever a payment is added to the payment queue. Transactions are delivered to your application when the App Store has finished processing the payment. Completed transactions provide a receipt and transaction identifier that your application can use to save a permanent record of the processed payment.</p><pre><code>SKPaymentTransaction</code></pre></section>	https://developer.apple.com/reference/storekit/skpaymenttransaction
SKPaymentTransactionObserver	A							https://developer.apple.com/reference/storekit/skpaymenttransactionobserver			<section class="prog__container"><p>The SKPaymentTransactionObserver protocol declares methods that are implemented by observers of an SKPaymentQueue object.</p><pre><code>SKPaymentTransactionObserver</code></pre></section>	https://developer.apple.com/reference/storekit/skpaymenttransactionobserver
SKProduct	A							https://developer.apple.com/reference/storekit/skproduct			<section class="prog__container"><p>SKProduct objects are returned as part of an SKProductsResponse object. Each product object provides information about a product you previously registered in iTunes Connect.</p><pre><code>SKProduct</code></pre></section>	https://developer.apple.com/reference/storekit/skproduct
SKProductsRequest	A							https://developer.apple.com/reference/storekit/skproductsrequest			<section class="prog__container"><p>An SKProductsRequest object is used to retrieve localized information about a list of products from the Apple App Store. Your application uses this request to present localized prices and other information to the user without having to maintain that list itself.</p><pre><code>SKProductsRequest</code></pre></section>	https://developer.apple.com/reference/storekit/skproductsrequest
SKProductsRequestDelegate	A							https://developer.apple.com/reference/storekit/skproductsrequestdelegate			<section class="prog__container"><p>The SKProductsRequestDelegate protocol declares methods that are implemented by the delegate of an SKProductsRequest object. The delegate receives the product information that the request was interested in.</p><pre><code>SKProductsRequestDelegate</code></pre></section>	https://developer.apple.com/reference/storekit/skproductsrequestdelegate
SKProductsResponse	A							https://developer.apple.com/reference/storekit/skproductsresponse			<section class="prog__container"><p>An SKProductsResponse object is returned by the Apple App Store in response to a request for information about a list of products.</p><pre><code>SKProductsResponse</code></pre></section>	https://developer.apple.com/reference/storekit/skproductsresponse
SKReceiptRefreshRequest	A							https://developer.apple.com/reference/storekit/skreceiptrefreshrequest			<section class="prog__container"><p>The SKReceiptRefreshRequest class allows an app to refresh its receipt. With this API, the app can request a new receipt if the receipt is invalid or missing. In the sandbox environment, you can request a receipt with any combination of properties to test the state transitions related to Volume Purchase Plan receipts.</p><pre><code>SKReceiptRefreshRequest</code></pre></section>	https://developer.apple.com/reference/storekit/skreceiptrefreshrequest
SKRequest	A							https://developer.apple.com/reference/storekit/skrequest			<section class="prog__container"><p>SKRequest is an abstract class representing a request to the Apple App Store. Subclasses of SKRequest represent different kinds of requests.</p><pre><code>SKRequest</code></pre></section>	https://developer.apple.com/reference/storekit/skrequest
SKRequestDelegate	A							https://developer.apple.com/reference/storekit/skrequestdelegate			<section class="prog__container"><p>The SKRequestDelegate protocol declares common methods that are implemented by delegates for any subclass of the SKRequest abstract class.</p><pre><code>SKRequestDelegate</code></pre></section>	https://developer.apple.com/reference/storekit/skrequestdelegate
SKStoreProductViewController	A							https://developer.apple.com/reference/storekit/skstoreproductviewcontroller			<section class="prog__container"><p>A SKStoreProductViewController object presents a store that allows the user to purchase other media from the App Store. For example, your app might display the store to allow the user to purchase another app.</p><pre><code>SKStoreProductViewController</code></pre></section>	https://developer.apple.com/reference/storekit/skstoreproductviewcontroller
SKStoreProductViewControllerDelegate	A							https://developer.apple.com/reference/storekit/skstoreproductviewcontrollerdelegate			<section class="prog__container"><p>An object implementing the SKStoreProductViewControllerDelegate protocol is called when the user dismisses the store screen. Typically, this protocol is implemented by the view controller in your application that originally displayed the store screen.</p><pre><code>SKStoreProductViewControllerDelegate</code></pre></section>	https://developer.apple.com/reference/storekit/skstoreproductviewcontrollerdelegate
SKStoreReviewController	A							https://developer.apple.com/reference/storekit/skstorereviewcontroller			<section class="prog__container"><p>Controls the process of requesting App Store ratings and reviews from users.</p><pre><code>requestReview()</code></pre></section>	https://developer.apple.com/reference/storekit/skstorereviewcontroller
StoreKit Constants	A							https://developer.apple.com/reference/storekit/storekit_constants			<section class="prog__container"><p>This document describes the constants defined in the StoreKit framework and not described in a document for an individual class.</p><pre><code>let SKErrorDomain: String</code></pre></section>	https://developer.apple.com/reference/storekit/storekit_constants
AbsoluteValuable	A							https://developer.apple.com/reference/swift/absolutevaluable			<section class="prog__container"><p>A type that supports an “absolute value” function.</p><pre><code>static func abs(Self)</code></pre></section>	https://developer.apple.com/reference/swift/absolutevaluable
AnyBidirectionalCollection	A							https://developer.apple.com/reference/swift/anybidirectionalcollection			<section class="prog__container"><p>A type-erased wrapper over any collection with indices that support bidirectional traversal.</p><pre><code>AnyBidirectionalCollection</code></pre></section>	https://developer.apple.com/reference/swift/anybidirectionalcollection
AnyCollection	A							https://developer.apple.com/reference/swift/anycollection			<section class="prog__container"><p>A type-erased wrapper over any collection with indices that support forward traversal.</p><pre><code>AnyCollection</code></pre></section>	https://developer.apple.com/reference/swift/anycollection
AnyHashable	A							https://developer.apple.com/reference/swift/anyhashable			<section class="prog__container"><p>A type-erased hashable value.</p><pre><code>AnyHashable</code></pre></section>	https://developer.apple.com/reference/swift/anyhashable
AnyIndex	A							https://developer.apple.com/reference/swift/anyindex			<section class="prog__container"><p>A wrapper over an underlying index that hides the specific underlying type.</p><pre><code>init<BaseIndex>( BaseIndex : Comparable</code></pre></section>	https://developer.apple.com/reference/swift/anyindex
AnyIterator	A							https://developer.apple.com/reference/swift/anyiterator			<section class="prog__container"><p>A type-erased iterator of Element.</p><pre><code>Element</code></pre></section>	https://developer.apple.com/reference/swift/anyiterator
AnyObject	A							https://developer.apple.com/reference/swift/anyobject			<section class="prog__container"><p>The protocol to which all classes implicitly conform.</p><pre><code>AnyObject</code></pre></section>	https://developer.apple.com/reference/swift/anyobject
AnyRandomAccessCollection	A							https://developer.apple.com/reference/swift/anyrandomaccesscollection			<section class="prog__container"><p>A type-erased wrapper over any collection with indices that support random access traversal.</p><pre><code>AnyRandomAccessCollection</code></pre></section>	https://developer.apple.com/reference/swift/anyrandomaccesscollection
AnySequence	A							https://developer.apple.com/reference/swift/anysequence			<section class="prog__container"><p>A type-erased sequence.</p><pre><code>AnySequence</code></pre></section>	https://developer.apple.com/reference/swift/anysequence
Arithmetic	A							https://developer.apple.com/reference/swift/arithmetic			<section class="prog__container"><p>Declares methods backing binary arithmetic operators–such as +, - and *–and their mutating counterparts.</p><pre><code>+</code></pre></section>	https://developer.apple.com/reference/swift/arithmetic
Array	A							https://developer.apple.com/reference/swift/array			<section class="prog__container"><p>An ordered, random-access collection.</p><pre><code>Array</code></pre></section>	https://developer.apple.com/reference/swift/array
ArraySlice	A							https://developer.apple.com/reference/swift/arrayslice			<section class="prog__container"><p>A slice of an Array, ContiguousArray, or ArraySlice instance.</p><pre><code>Array</code></pre></section>	https://developer.apple.com/reference/swift/arrayslice
AutoreleasingUnsafeMutablePointer	A							https://developer.apple.com/reference/swift/autoreleasingunsafemutablepointer			<section class="prog__container"><p>A mutable pointer-to-ObjC-pointer argument.</p><pre><code>nil</code></pre></section>	https://developer.apple.com/reference/swift/autoreleasingunsafemutablepointer
BidirectionalCollection	A							https://developer.apple.com/reference/swift/bidirectionalcollection			<section class="prog__container"><p>A collection that supports backward as well as forward traversal.</p><pre><code>startIndex</code></pre></section>	https://developer.apple.com/reference/swift/bidirectionalcollection
BidirectionalSlice	A							https://developer.apple.com/reference/swift/bidirectionalslice			<section class="prog__container"><p>A view into a subsequence of elements of another collection.</p><pre><code>var absences = [0, 2, 0, 4, 0, 3, 1, 0]\n</code></pre></section>	https://developer.apple.com/reference/swift/bidirectionalslice
BinaryFloatingPoint	A							https://developer.apple.com/reference/swift/binaryfloatingpoint			<section class="prog__container"><p>A radix-2 (binary) floating-point type.</p><pre><code>BinaryFloatingPoint</code></pre></section>	https://developer.apple.com/reference/swift/binaryfloatingpoint
BitwiseOperations	A							https://developer.apple.com/reference/swift/bitwiseoperations			<section class="prog__container"><p>A type that supports standard bitwise arithmetic operators.</p><pre><code>BitwiseOperations</code></pre></section>	https://developer.apple.com/reference/swift/bitwiseoperations
Bool	A							https://developer.apple.com/reference/swift/bool			<section class="prog__container"><p>A value type whose instances are either true or false.</p><pre><code>true</code></pre></section>	https://developer.apple.com/reference/swift/bool
Character	A							https://developer.apple.com/reference/swift/character			<section class="prog__container"><p>A single extended grapheme cluster, which approximates a user-perceived character.</p><pre><code>Character</code></pre></section>	https://developer.apple.com/reference/swift/character
ClosedRange	A							https://developer.apple.com/reference/swift/closedrange			<section class="prog__container"><p>An interval over a comparable type, from a lower bound up to, and including, an upper bound.</p><pre><code>ClosedRange</code></pre></section>	https://developer.apple.com/reference/swift/closedrange
ClosedRangeIndex	A							https://developer.apple.com/reference/swift/closedrangeindex			<section class="prog__container"><p>A position in a CountableClosedRange instance.</p><pre><code>CountableClosedRange</code></pre></section>	https://developer.apple.com/reference/swift/closedrangeindex
ClosedRangeIterator	A							https://developer.apple.com/reference/swift/closedrangeiterator			<section class="prog__container"><p>An iterator over the elements of a CountableClosedRange instance.</p><pre><code>CountableClosedRange</code></pre></section>	https://developer.apple.com/reference/swift/closedrangeiterator
Collection	A							https://developer.apple.com/reference/swift/collection			<section class="prog__container"><p>A sequence whose elements can be traversed multiple times, nondestructively, and accessed by indexed subscript.</p><pre><code>Collection</code></pre></section>	https://developer.apple.com/reference/swift/collection
CollectionOfOne	A							https://developer.apple.com/reference/swift/collectionofone			<section class="prog__container"><p>A collection containing a single element of type Element.</p><pre><code>Element</code></pre></section>	https://developer.apple.com/reference/swift/collectionofone
CommandLine	A							https://developer.apple.com/reference/swift/commandline			<section class="prog__container"><p>Command-line arguments for the current process.</p><pre><code>static var argc: Int32</code></pre></section>	https://developer.apple.com/reference/swift/commandline
Comparable	A							https://developer.apple.com/reference/swift/comparable			<section class="prog__container"><p>A type that can be compared using the relational operators <, <=, >=, and >.</p><pre><code><</code></pre></section>	https://developer.apple.com/reference/swift/comparable
ContiguousArray	A							https://developer.apple.com/reference/swift/contiguousarray			<section class="prog__container"><p>A contiguously stored array.</p><pre><code>ContiguousArray</code></pre></section>	https://developer.apple.com/reference/swift/contiguousarray
CountableClosedRange	A							https://developer.apple.com/reference/swift/countableclosedrange			<section class="prog__container"><p>A closed range that forms a collection of consecutive values.</p><pre><code>CountableClosedRange</code></pre></section>	https://developer.apple.com/reference/swift/countableclosedrange
CountableRange	A							https://developer.apple.com/reference/swift/countablerange			<section class="prog__container"><p>A half-open range that forms a collection of consecutive values.</p><pre><code>CountableRange</code></pre></section>	https://developer.apple.com/reference/swift/countablerange
CustomDebugStringConvertible	A							https://developer.apple.com/reference/swift/customdebugstringconvertible			<section class="prog__container"><p>A type with a customized textual representation suitable for debugging purposes.</p><pre><code>String(reflecting:)</code></pre></section>	https://developer.apple.com/reference/swift/customdebugstringconvertible
CustomLeafReflectable	A							https://developer.apple.com/reference/swift/customleafreflectable			<section class="prog__container"><p>A type that explicitly supplies its own mirror, but whose descendant classes are not represented in the mirror unless they also override customMirror.</p><pre><code>customMirror</code></pre></section>	https://developer.apple.com/reference/swift/customleafreflectable
CustomPlaygroundQuickLookable	A							https://developer.apple.com/reference/swift/customplaygroundquicklookable			<section class="prog__container"><p>A type that explicitly supplies its own playground Quick Look.</p><pre><code>PlaygroundQuickLook(reflecting:)</code></pre></section>	https://developer.apple.com/reference/swift/customplaygroundquicklookable
CustomReflectable	A							https://developer.apple.com/reference/swift/customreflectable			<section class="prog__container"><p>A type that explicitly supplies its own mirror.</p><pre><code>Mirror(reflect:)</code></pre></section>	https://developer.apple.com/reference/swift/customreflectable
CustomStringConvertible	A							https://developer.apple.com/reference/swift/customstringconvertible			<section class="prog__container"><p>A type with a customized textual representation.</p><pre><code>CustomStringConvertible</code></pre></section>	https://developer.apple.com/reference/swift/customstringconvertible
CVaListPointer	A							https://developer.apple.com/reference/swift/cvalistpointer			<section class="prog__container"><p>The corresponding Swift type to va_list in imported C APIs.</p><pre><code>va_list</code></pre></section>	https://developer.apple.com/reference/swift/cvalistpointer
CVarArg	A							https://developer.apple.com/reference/swift/cvararg			<section class="prog__container"><p>Instances of conforming types can be encoded, and appropriately passed, as elements of a C va_list.</p><pre><code>va_list</code></pre></section>	https://developer.apple.com/reference/swift/cvararg
DefaultBidirectionalIndices	A							https://developer.apple.com/reference/swift/defaultbidirectionalindices			<section class="prog__container"><p>A collection of indices for an arbitrary bidirectional collection.</p><pre><code>Index</code></pre></section>	https://developer.apple.com/reference/swift/defaultbidirectionalindices
DefaultIndices	A							https://developer.apple.com/reference/swift/defaultindices			<section class="prog__container"><p>A collection of indices for an arbitrary collection.</p><pre><code>Index</code></pre></section>	https://developer.apple.com/reference/swift/defaultindices
DefaultRandomAccessIndices	A							https://developer.apple.com/reference/swift/defaultrandomaccessindices			<section class="prog__container"><p>A collection of indices for an arbitrary random-access collection.</p><pre><code>Index</code></pre></section>	https://developer.apple.com/reference/swift/defaultrandomaccessindices
Dictionary	A							https://developer.apple.com/reference/swift/dictionary			<section class="prog__container"><p>A collection whose elements are key-value pairs.</p><pre><code>var responseMessages = [200: "OK",\n            403: "Access forbidden",\n            404: "File not found",\n            500: "Internal server error"]\n</code></pre></section>	https://developer.apple.com/reference/swift/dictionary
Dictionary.Index	A							https://developer.apple.com/reference/swift/dictionary.index			<section class="prog__container"><p>Used to access the key-value pairs in an instance of Dictionary<Key, Value>.</p><pre><code>Dictionary<Key, Value></code></pre></section>	https://developer.apple.com/reference/swift/dictionary.index
DictionaryIterator	A							https://developer.apple.com/reference/swift/dictionaryiterator			<section class="prog__container"><p>An iterator over the members of a Dictionary<Key, Value>.</p><pre><code>Dictionary<Key, Value></code></pre></section>	https://developer.apple.com/reference/swift/dictionaryiterator
DictionaryLiteral	A							https://developer.apple.com/reference/swift/dictionaryliteral			<section class="prog__container"><p>A lightweight collection of key-value pairs.</p><pre><code>DictionaryLiteral</code></pre></section>	https://developer.apple.com/reference/swift/dictionaryliteral
Double	A							https://developer.apple.com/reference/swift/double			<section class="prog__container"><p>A double-precision, floating-point value type.</p><pre><code>Exponent</code></pre></section>	https://developer.apple.com/reference/swift/double
EmptyCollection	A							https://developer.apple.com/reference/swift/emptycollection			<section class="prog__container"><p>A collection whose element type is Element but that is always empty.</p><pre><code>Element</code></pre></section>	https://developer.apple.com/reference/swift/emptycollection
EmptyIterator	A							https://developer.apple.com/reference/swift/emptyiterator			<section class="prog__container"><p>An iterator that never produces an element.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/swift/emptyiterator
EnumeratedIterator	A							https://developer.apple.com/reference/swift/enumeratediterator			<section class="prog__container"><p>The iterator for EnumeratedSequence.</p><pre><code>EnumeratedSequence</code></pre></section>	https://developer.apple.com/reference/swift/enumeratediterator
EnumeratedSequence	A							https://developer.apple.com/reference/swift/enumeratedsequence			<section class="prog__container"><p>An enumeration of the elements of a sequence or collection.</p><pre><code>EnumeratedSequence</code></pre></section>	https://developer.apple.com/reference/swift/enumeratedsequence
Equatable	A							https://developer.apple.com/reference/swift/equatable			<section class="prog__container"><p>A type that can be compared for value equality.</p><pre><code>Equatable</code></pre></section>	https://developer.apple.com/reference/swift/equatable
Error	A							https://developer.apple.com/reference/swift/error			<section class="prog__container"><p>A type representing an error value that can be thrown.</p><pre><code>Error</code></pre></section>	https://developer.apple.com/reference/swift/error
ExpressibleByArrayLiteral	A							https://developer.apple.com/reference/swift/expressiblebyarrayliteral			<section class="prog__container"><p>A type that can be initialized using an array literal.</p><pre><code>ExpressibleByArrayLiteral</code></pre></section>	https://developer.apple.com/reference/swift/expressiblebyarrayliteral
ExpressibleByBooleanLiteral	A							https://developer.apple.com/reference/swift/expressiblebybooleanliteral			<section class="prog__container"><p>A type that can be initialized with the Boolean literals true and false.</p><pre><code>true</code></pre></section>	https://developer.apple.com/reference/swift/expressiblebybooleanliteral
ExpressibleByDictionaryLiteral	A							https://developer.apple.com/reference/swift/expressiblebydictionaryliteral			<section class="prog__container"><p>A type that can be initialized using a dictionary literal.</p><pre><code>:</code></pre></section>	https://developer.apple.com/reference/swift/expressiblebydictionaryliteral
ExpressibleByExtendedGraphemeClusterLiteral	A							https://developer.apple.com/reference/swift/expressiblebyextendedgraphemeclusterliteral			<section class="prog__container"><p>A type that can be initialized with a string literal containing a single extended grapheme cluster.</p><pre><code>String</code></pre></section>	https://developer.apple.com/reference/swift/expressiblebyextendedgraphemeclusterliteral
ExpressibleByFloatLiteral	A							https://developer.apple.com/reference/swift/expressiblebyfloatliteral			<section class="prog__container"><p>A type that can be initialized with a floating-point literal.</p><pre><code>Float</code></pre></section>	https://developer.apple.com/reference/swift/expressiblebyfloatliteral
ExpressibleByIntegerLiteral	A							https://developer.apple.com/reference/swift/expressiblebyintegerliteral			<section class="prog__container"><p>A type that can be initialized with an integer literal.</p><pre><code>Int</code></pre></section>	https://developer.apple.com/reference/swift/expressiblebyintegerliteral
ExpressibleByNilLiteral	A							https://developer.apple.com/reference/swift/expressiblebynilliteral			<section class="prog__container"><p>A type that can be initialized using the nil literal, nil.</p><pre><code>nil</code></pre></section>	https://developer.apple.com/reference/swift/expressiblebynilliteral
ExpressibleByStringLiteral	A							https://developer.apple.com/reference/swift/expressiblebystringliteral			<section class="prog__container"><p>A type that can be initialized with a string literal.</p><pre><code>String</code></pre></section>	https://developer.apple.com/reference/swift/expressiblebystringliteral
ExpressibleByUnicodeScalarLiteral	A							https://developer.apple.com/reference/swift/expressiblebyunicodescalarliteral			<section class="prog__container"><p>A type that can be initialized with a string literal containing a single Unicode scalar value.</p><pre><code>String</code></pre></section>	https://developer.apple.com/reference/swift/expressiblebyunicodescalarliteral
FlattenBidirectionalCollection	A							https://developer.apple.com/reference/swift/flattenbidirectionalcollection			<section class="prog__container"><p>A flattened view of a base collection of collections.</p><pre><code>joined</code></pre></section>	https://developer.apple.com/reference/swift/flattenbidirectionalcollection
FlattenBidirectionalCollectionIndex	A							https://developer.apple.com/reference/swift/flattenbidirectionalcollectionindex			<section class="prog__container"><p>A position in a FlattenBidirectionalCollection.</p><pre><code>FlattenBidirectionalCollection</code></pre></section>	https://developer.apple.com/reference/swift/flattenbidirectionalcollectionindex
FlattenCollection	A							https://developer.apple.com/reference/swift/flattencollection			<section class="prog__container"><p>A flattened view of a base collection of collections.</p><pre><code>joined</code></pre></section>	https://developer.apple.com/reference/swift/flattencollection
FlattenCollectionIndex	A							https://developer.apple.com/reference/swift/flattencollectionindex			<section class="prog__container"><p>A position in a FlattenCollection.</p><pre><code>FlattenCollection</code></pre></section>	https://developer.apple.com/reference/swift/flattencollectionindex
FlattenIterator	A							https://developer.apple.com/reference/swift/flatteniterator			<section class="prog__container"><p>An iterator that produces the elements contained in each segment produced by some Base Iterator.</p><pre><code>Base</code></pre></section>	https://developer.apple.com/reference/swift/flatteniterator
FlattenSequence	A							https://developer.apple.com/reference/swift/flattensequence			<section class="prog__container"><p>A sequence consisting of all the elements contained in each segment contained in some Base sequence.</p><pre><code>Base</code></pre></section>	https://developer.apple.com/reference/swift/flattensequence
Float	A							https://developer.apple.com/reference/swift/float			<section class="prog__container"><p>A single-precision, floating-point value type.</p><pre><code>Exponent</code></pre></section>	https://developer.apple.com/reference/swift/float
Float80	A							https://developer.apple.com/reference/swift/float80			<section class="prog__container"><p>An extended-precision, floating-point value type.</p><pre><code>Exponent</code></pre></section>	https://developer.apple.com/reference/swift/float80
FloatingPoint	A							https://developer.apple.com/reference/swift/floatingpoint			<section class="prog__container"><p>A floating-point numeric type.</p><pre><code>Float</code></pre></section>	https://developer.apple.com/reference/swift/floatingpoint
FloatingPointClassification	A							https://developer.apple.com/reference/swift/floatingpointclassification			<section class="prog__container"><p>The IEEE 754 floating-point classes.</p><pre><code>case negativeInfinity</code></pre></section>	https://developer.apple.com/reference/swift/floatingpointclassification
FloatingPointRoundingRule	A							https://developer.apple.com/reference/swift/floatingpointroundingrule			<section class="prog__container"><p>A rule for rounding a floating-point number.</p><pre><code>case awayFromZero</code></pre></section>	https://developer.apple.com/reference/swift/floatingpointroundingrule
FloatingPointSign	A							https://developer.apple.com/reference/swift/floatingpointsign			<section class="prog__container"><p>The sign of a floating-point value.</p><pre><code>case minus</code></pre></section>	https://developer.apple.com/reference/swift/floatingpointsign
Hashable	A							https://developer.apple.com/reference/swift/hashable			<section class="prog__container"><p>A type that provides an integer hash value.</p><pre><code>Hashable</code></pre></section>	https://developer.apple.com/reference/swift/hashable
ImplicitlyUnwrappedOptional	A							https://developer.apple.com/reference/swift/implicitlyunwrappedoptional			<section class="prog__container"><p>An optional type that allows implicit member access.</p><pre><code>case none</code></pre></section>	https://developer.apple.com/reference/swift/implicitlyunwrappedoptional
_Incrementable	A							https://developer.apple.com/reference/swift/incrementable			<section class="prog__container"><p>This protocol is an implementation detail of Integer; do not use it directly.</p><pre><code>Integer</code></pre></section>	https://developer.apple.com/reference/swift/incrementable
IndexingIterator	A							https://developer.apple.com/reference/swift/indexingiterator			<section class="prog__container"><p>A type that iterates over a collection using its indices.</p><pre><code>IndexingIterator</code></pre></section>	https://developer.apple.com/reference/swift/indexingiterator
Int	A							https://developer.apple.com/reference/swift/int			<section class="prog__container"><p>A signed integer value type.</p><pre><code>Int</code></pre></section>	https://developer.apple.com/reference/swift/int
Int16	A							https://developer.apple.com/reference/swift/int16			<section class="prog__container"><p>A 16-bit signed integer value type.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/swift/int16
Int32	A							https://developer.apple.com/reference/swift/int32			<section class="prog__container"><p>A 32-bit signed integer value type.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/swift/int32
Int64	A							https://developer.apple.com/reference/swift/int64			<section class="prog__container"><p>A 64-bit signed integer value type.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/swift/int64
Int8	A							https://developer.apple.com/reference/swift/int8			<section class="prog__container"><p>An 8-bit signed integer value type.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/swift/int8
Integer	A							https://developer.apple.com/reference/swift/integer			<section class="prog__container"><p>A set of common requirements for Swift’s integer types.</p><pre><code>Strideable</code></pre></section>	https://developer.apple.com/reference/swift/integer
IntegerArithmetic	A							https://developer.apple.com/reference/swift/integerarithmetic			<section class="prog__container"><p>The common requirements for types that support integer arithmetic.</p><pre><code>func toIntMax()</code></pre></section>	https://developer.apple.com/reference/swift/integerarithmetic
IteratorOverOne	A							https://developer.apple.com/reference/swift/iteratoroverone			<section class="prog__container"><p>An iterator that produces one or fewer instances of Element.</p><pre><code>Element</code></pre></section>	https://developer.apple.com/reference/swift/iteratoroverone
IteratorProtocol	A							https://developer.apple.com/reference/swift/iteratorprotocol			<section class="prog__container"><p>A type that supplies the values of a sequence one at a time.</p><pre><code>IteratorProtocol</code></pre></section>	https://developer.apple.com/reference/swift/iteratorprotocol
IteratorSequence	A							https://developer.apple.com/reference/swift/iteratorsequence			<section class="prog__container"><p>A sequence built around an iterator of type Base.</p><pre><code>Base</code></pre></section>	https://developer.apple.com/reference/swift/iteratorsequence
JoinedIterator	A							https://developer.apple.com/reference/swift/joinediterator			<section class="prog__container"><p>An iterator that presents the elements of the sequences traversed by a base iterator, concatenated using a given separator.</p><pre><code>init<Separator>(base: Base, separator: Separator : Sequence, Separator.Iterator.Element == Base.Element.Iterator.Element</code></pre></section>	https://developer.apple.com/reference/swift/joinediterator
JoinedSequence	A							https://developer.apple.com/reference/swift/joinedsequence			<section class="prog__container"><p>A sequence that presents the elements of a base sequence of sequences concatenated using a given separator.</p><pre><code>init<Separator>(base: Base, separator: Separator : Sequence, Separator.Iterator.Element == Base.Iterator.Element.Iterator.Element</code></pre></section>	https://developer.apple.com/reference/swift/joinedsequence
LazyBidirectionalCollection	A							https://developer.apple.com/reference/swift/lazybidirectionalcollection			<section class="prog__container"><p>A collection containing the same elements as a Base collection, but on which some operations such as map and filter are implemented lazily.</p><pre><code>Base</code></pre></section>	https://developer.apple.com/reference/swift/lazybidirectionalcollection
LazyCollection	A							https://developer.apple.com/reference/swift/lazycollection			<section class="prog__container"><p>A collection containing the same elements as a Base collection, but on which some operations such as map and filter are implemented lazily.</p><pre><code>Base</code></pre></section>	https://developer.apple.com/reference/swift/lazycollection
LazyCollectionProtocol	A							https://developer.apple.com/reference/swift/lazycollectionprotocol			<section class="prog__container"><p>A collection on which normally-eager operations such as map and filter are implemented lazily.</p><pre><code>map</code></pre></section>	https://developer.apple.com/reference/swift/lazycollectionprotocol
LazyDropWhileBidirectionalCollection	A							https://developer.apple.com/reference/swift/lazydropwhilebidirectionalcollection			<section class="prog__container"><p>A lazy BidirectionalCollection wrapper that includes the elements of an underlying collection after any initial consecutive elements that satisfy a predicate.</p><pre><code>BidirectionalCollection</code></pre></section>	https://developer.apple.com/reference/swift/lazydropwhilebidirectionalcollection
LazyDropWhileCollection	A							https://developer.apple.com/reference/swift/lazydropwhilecollection			<section class="prog__container"><p>A lazy Collection wrapper that includes the elements of an underlying collection after any initial consecutive elements that satisfy a predicate.</p><pre><code>Collection</code></pre></section>	https://developer.apple.com/reference/swift/lazydropwhilecollection
LazyDropWhileIndex	A							https://developer.apple.com/reference/swift/lazydropwhileindex			<section class="prog__container"><p>A position in a LazyDropWhileCollection or LazyDropWhileBidirectionalCollection instance.</p><pre><code>LazyDropWhileCollection</code></pre></section>	https://developer.apple.com/reference/swift/lazydropwhileindex
LazyDropWhileIterator	A							https://developer.apple.com/reference/swift/lazydropwhileiterator			<section class="prog__container"><p>An iterator over the elements traversed by a base iterator that follow the initial consecutive elements that satisfy a given predicate.</p><pre><code>LazyDropWhileSequence</code></pre></section>	https://developer.apple.com/reference/swift/lazydropwhileiterator
LazyDropWhileSequence	A							https://developer.apple.com/reference/swift/lazydropwhilesequence			<section class="prog__container"><p>A sequence whose elements consist of the elements that follow the initial consecutive elements of some base sequence that satisfy a given predicate.</p><pre><code>Elements</code></pre></section>	https://developer.apple.com/reference/swift/lazydropwhilesequence
LazyFilterBidirectionalCollection	A							https://developer.apple.com/reference/swift/lazyfilterbidirectionalcollection			<section class="prog__container"><p>A lazy Collection wrapper that includes the elements of an underlying collection that satisfy a predicate.</p><pre><code>Collection</code></pre></section>	https://developer.apple.com/reference/swift/lazyfilterbidirectionalcollection
LazyFilterCollection	A							https://developer.apple.com/reference/swift/lazyfiltercollection			<section class="prog__container"><p>A lazy Collection wrapper that includes the elements of an underlying collection that satisfy a predicate.</p><pre><code>Collection</code></pre></section>	https://developer.apple.com/reference/swift/lazyfiltercollection
LazyFilterIndex	A							https://developer.apple.com/reference/swift/lazyfilterindex			<section class="prog__container"><p>The Index used for subscripting a LazyFilterCollection.</p><pre><code>Index</code></pre></section>	https://developer.apple.com/reference/swift/lazyfilterindex
LazyFilterIterator	A							https://developer.apple.com/reference/swift/lazyfilteriterator			<section class="prog__container"><p>An iterator over the elements traversed by some base iterator that also satisfy a given predicate.</p><pre><code>Iterator</code></pre></section>	https://developer.apple.com/reference/swift/lazyfilteriterator
LazyFilterSequence	A							https://developer.apple.com/reference/swift/lazyfiltersequence			<section class="prog__container"><p>A sequence whose elements consist of the elements of some base sequence that also satisfy a given predicate.</p><pre><code>s.lazy.filter { ... }</code></pre></section>	https://developer.apple.com/reference/swift/lazyfiltersequence
LazyMapBidirectionalCollection	A							https://developer.apple.com/reference/swift/lazymapbidirectionalcollection			<section class="prog__container"><p>A Collection whose elements consist of those in a Base Collection passed through a transform function returning Element. These elements are computed lazily, each time they’re read, by calling the transform function on a base element.</p><pre><code>Collection</code></pre></section>	https://developer.apple.com/reference/swift/lazymapbidirectionalcollection
LazyMapCollection	A							https://developer.apple.com/reference/swift/lazymapcollection			<section class="prog__container"><p>A Collection whose elements consist of those in a Base Collection passed through a transform function returning Element. These elements are computed lazily, each time they’re read, by calling the transform function on a base element.</p><pre><code>Collection</code></pre></section>	https://developer.apple.com/reference/swift/lazymapcollection
LazyMapIterator	A							https://developer.apple.com/reference/swift/lazymapiterator			<section class="prog__container"><p>The IteratorProtocol used by MapSequence and MapCollection. Produces each element by passing the output of the Base IteratorProtocol through a transform function returning Element.</p><pre><code>IteratorProtocol</code></pre></section>	https://developer.apple.com/reference/swift/lazymapiterator
LazyMapRandomAccessCollection	A							https://developer.apple.com/reference/swift/lazymaprandomaccesscollection			<section class="prog__container"><p>A Collection whose elements consist of those in a Base Collection passed through a transform function returning Element. These elements are computed lazily, each time they’re read, by calling the transform function on a base element.</p><pre><code>Collection</code></pre></section>	https://developer.apple.com/reference/swift/lazymaprandomaccesscollection
LazyMapSequence	A							https://developer.apple.com/reference/swift/lazymapsequence			<section class="prog__container"><p>A Sequence whose elements consist of those in a Base Sequence passed through a transform function returning Element. These elements are computed lazily, each time they’re read, by calling the transform function on a base element.</p><pre><code>Sequence</code></pre></section>	https://developer.apple.com/reference/swift/lazymapsequence
LazyPrefixWhileBidirectionalCollection	A							https://developer.apple.com/reference/swift/lazyprefixwhilebidirectionalcollection			<section class="prog__container"><p>A lazy BidirectionalCollection wrapper that includes the initial consecutive elements of an underlying collection that satisfy a predicate.</p><pre><code>BidirectionalCollection</code></pre></section>	https://developer.apple.com/reference/swift/lazyprefixwhilebidirectionalcollection
LazyPrefixWhileCollection	A							https://developer.apple.com/reference/swift/lazyprefixwhilecollection			<section class="prog__container"><p>A lazy Collection wrapper that includes the initial consecutive elements of an underlying collection that satisfy a predicate.</p><pre><code>Collection</code></pre></section>	https://developer.apple.com/reference/swift/lazyprefixwhilecollection
LazyPrefixWhileIndex	A							https://developer.apple.com/reference/swift/lazyprefixwhileindex			<section class="prog__container"><p>A position in a LazyPrefixWhileCollection or LazyPrefixWhileBidirectionalCollection instance.</p><pre><code>LazyPrefixWhileCollection</code></pre></section>	https://developer.apple.com/reference/swift/lazyprefixwhileindex
LazyPrefixWhileIterator	A							https://developer.apple.com/reference/swift/lazyprefixwhileiterator			<section class="prog__container"><p>An iterator over the initial elements traversed by a base iterator that satisfy a given predicate.</p><pre><code>LazyPrefixWhileSequence</code></pre></section>	https://developer.apple.com/reference/swift/lazyprefixwhileiterator
LazyPrefixWhileSequence	A							https://developer.apple.com/reference/swift/lazyprefixwhilesequence			<section class="prog__container"><p>A sequence whose elements consist of the initial consecutive elements of some base sequence that satisfy a given predicate.</p><pre><code>Elements</code></pre></section>	https://developer.apple.com/reference/swift/lazyprefixwhilesequence
LazyRandomAccessCollection	A							https://developer.apple.com/reference/swift/lazyrandomaccesscollection			<section class="prog__container"><p>A collection containing the same elements as a Base collection, but on which some operations such as map and filter are implemented lazily.</p><pre><code>Base</code></pre></section>	https://developer.apple.com/reference/swift/lazyrandomaccesscollection
LazySequence	A							https://developer.apple.com/reference/swift/lazysequence			<section class="prog__container"><p>A sequence containing the same elements as a Base sequence, but on which some operations such as map and filter are implemented lazily.</p><pre><code>Base</code></pre></section>	https://developer.apple.com/reference/swift/lazysequence
LazySequenceProtocol	A							https://developer.apple.com/reference/swift/lazysequenceprotocol			<section class="prog__container"><p>A sequence on which normally-eager operations such as map and filter are implemented lazily.</p><pre><code>map</code></pre></section>	https://developer.apple.com/reference/swift/lazysequenceprotocol
LosslessStringConvertible	A							https://developer.apple.com/reference/swift/losslessstringconvertible			<section class="prog__container"><p>A type that can be represented as a string in a lossless, unambiguous way.</p><pre><code>init?(String)</code></pre></section>	https://developer.apple.com/reference/swift/losslessstringconvertible
ManagedBuffer	A							https://developer.apple.com/reference/swift/managedbuffer			<section class="prog__container"><p>A class whose instances contain a property of type Header and raw storage for an array of Element, whose size is determined at instance creation.</p><pre><code>Header</code></pre></section>	https://developer.apple.com/reference/swift/managedbuffer
ManagedBufferPointer	A							https://developer.apple.com/reference/swift/managedbufferpointer			<section class="prog__container"><p>Contains a buffer object, and provides access to an instance of Header and contiguous storage for an arbitrary number of Element instances stored in that buffer.</p><pre><code>Header</code></pre></section>	https://developer.apple.com/reference/swift/managedbufferpointer
MemoryLayout	A							https://developer.apple.com/reference/swift/memorylayout			<section class="prog__container"><p>The memory layout of a type, describing its size, stride, and alignment.</p><pre><code>MemoryLayout</code></pre></section>	https://developer.apple.com/reference/swift/memorylayout
Mirror	A							https://developer.apple.com/reference/swift/mirror			<section class="prog__container"><p>Representation of the sub-structure and optional “display style” of any arbitrary subject instance.</p><pre><code>Mirror.AncestorRepresentation</code></pre></section>	https://developer.apple.com/reference/swift/mirror
Mirror.AncestorRepresentation	A							https://developer.apple.com/reference/swift/mirror.ancestorrepresentation			<section class="prog__container"><p>Representation of ancestor classes.</p><pre><code>CustomReflectable</code></pre></section>	https://developer.apple.com/reference/swift/mirror.ancestorrepresentation
Mirror.DisplayStyle	A							https://developer.apple.com/reference/swift/mirror.displaystyle			<section class="prog__container"><p>A suggestion of how a Mirror’s subject is to be interpreted.</p><pre><code>Mirror</code></pre></section>	https://developer.apple.com/reference/swift/mirror.displaystyle
MutableBidirectionalSlice	A							https://developer.apple.com/reference/swift/mutablebidirectionalslice			<section class="prog__container"><p>A view into a subsequence of elements of another collection.</p><pre><code>var absences = [0, 2, 0, 4, 0, 3, 1, 0]\n</code></pre></section>	https://developer.apple.com/reference/swift/mutablebidirectionalslice
MutableCollection	A							https://developer.apple.com/reference/swift/mutablecollection			<section class="prog__container"><p>A collection that supports subscript assignment.</p><pre><code>MutableCollection</code></pre></section>	https://developer.apple.com/reference/swift/mutablecollection
MutableRandomAccessSlice	A							https://developer.apple.com/reference/swift/mutablerandomaccessslice			<section class="prog__container"><p>A view into a subsequence of elements of another collection.</p><pre><code>var absences = [0, 2, 0, 4, 0, 3, 1, 0]\n</code></pre></section>	https://developer.apple.com/reference/swift/mutablerandomaccessslice
MutableRangeReplaceableBidirectionalSlice	A							https://developer.apple.com/reference/swift/mutablerangereplaceablebidirectionalslice			<section class="prog__container"><p>A view into a subsequence of elements of another collection.</p><pre><code>var absences = [0, 2, 0, 4, 0, 3, 1, 0]\n</code></pre></section>	https://developer.apple.com/reference/swift/mutablerangereplaceablebidirectionalslice
MutableRangeReplaceableRandomAccessSlice	A							https://developer.apple.com/reference/swift/mutablerangereplaceablerandomaccessslice			<section class="prog__container"><p>A view into a subsequence of elements of another collection.</p><pre><code>var absences = [0, 2, 0, 4, 0, 3, 1, 0]\n</code></pre></section>	https://developer.apple.com/reference/swift/mutablerangereplaceablerandomaccessslice
MutableRangeReplaceableSlice	A							https://developer.apple.com/reference/swift/mutablerangereplaceableslice			<section class="prog__container"><p>A view into a subsequence of elements of another collection.</p><pre><code>var absences = [0, 2, 0, 4, 0, 3, 1, 0]\n</code></pre></section>	https://developer.apple.com/reference/swift/mutablerangereplaceableslice
MutableSlice	A							https://developer.apple.com/reference/swift/mutableslice			<section class="prog__container"><p>A view into a subsequence of elements of another collection.</p><pre><code>var absences = [0, 2, 0, 4, 0, 3, 1, 0]\n</code></pre></section>	https://developer.apple.com/reference/swift/mutableslice
Never	A							https://developer.apple.com/reference/swift/never			<section class="prog__container"><p>The return type of functions that do not return normally; a type with no values.</p><pre><code>Never</code></pre></section>	https://developer.apple.com/reference/swift/never
ObjectIdentifier	A							https://developer.apple.com/reference/swift/objectidentifier			<section class="prog__container"><p>A unique identifier for a class instance or metatype.</p><pre><code>init(Any.Type)</code></pre></section>	https://developer.apple.com/reference/swift/objectidentifier
OpaquePointer	A							https://developer.apple.com/reference/swift/opaquepointer			<section class="prog__container"><p>A wrapper around an opaque C pointer.</p><pre><code>init(UnsafeRawPointer)</code></pre></section>	https://developer.apple.com/reference/swift/opaquepointer
Optional	A							https://developer.apple.com/reference/swift/optional			<section class="prog__container"><p>A type that represents either a wrapped value or nil, the absence of a value.</p><pre><code>nil</code></pre></section>	https://developer.apple.com/reference/swift/optional
OptionSet	A							https://developer.apple.com/reference/swift/optionset			<section class="prog__container"><p>A type that presents a mathematical set interface to a bit mask.</p><pre><code>OptionSet</code></pre></section>	https://developer.apple.com/reference/swift/optionset
PlaygroundQuickLook	A							https://developer.apple.com/reference/swift/playgroundquicklook			<section class="prog__container"><p>The sum of types that can be used as a Quick Look representation.</p><pre><code>case attributedString(Any)</code></pre></section>	https://developer.apple.com/reference/swift/playgroundquicklook
RandomAccessCollection	A							https://developer.apple.com/reference/swift/randomaccesscollection			<section class="prog__container"><p>A collection that supports efficient random-access index traversal.</p><pre><code>count</code></pre></section>	https://developer.apple.com/reference/swift/randomaccesscollection
RandomAccessSlice	A							https://developer.apple.com/reference/swift/randomaccessslice			<section class="prog__container"><p>A view into a subsequence of elements of another collection.</p><pre><code>var absences = [0, 2, 0, 4, 0, 3, 1, 0]\n</code></pre></section>	https://developer.apple.com/reference/swift/randomaccessslice
Range	A							https://developer.apple.com/reference/swift/range			<section class="prog__container"><p>A half-open interval over a comparable type, from a lower bound up to, but not including, an upper bound.</p><pre><code>Range</code></pre></section>	https://developer.apple.com/reference/swift/range
RangeReplaceableBidirectionalSlice	A							https://developer.apple.com/reference/swift/rangereplaceablebidirectionalslice			<section class="prog__container"><p>A view into a subsequence of elements of another collection.</p><pre><code>var absences = [0, 2, 0, 4, 0, 3, 1, 0]\n</code></pre></section>	https://developer.apple.com/reference/swift/rangereplaceablebidirectionalslice
RangeReplaceableCollection	A							https://developer.apple.com/reference/swift/rangereplaceablecollection			<section class="prog__container"><p>A collection that supports replacement of an arbitrary subrange of elements with the elements of another collection.</p><pre><code>RangeReplaceableCollection</code></pre></section>	https://developer.apple.com/reference/swift/rangereplaceablecollection
RangeReplaceableRandomAccessSlice	A							https://developer.apple.com/reference/swift/rangereplaceablerandomaccessslice			<section class="prog__container"><p>A view into a subsequence of elements of another collection.</p><pre><code>var absences = [0, 2, 0, 4, 0, 3, 1, 0]\n</code></pre></section>	https://developer.apple.com/reference/swift/rangereplaceablerandomaccessslice
RangeReplaceableSlice	A							https://developer.apple.com/reference/swift/rangereplaceableslice			<section class="prog__container"><p>A view into a subsequence of elements of another collection.</p><pre><code>var absences = [0, 2, 0, 4, 0, 3, 1, 0]\n</code></pre></section>	https://developer.apple.com/reference/swift/rangereplaceableslice
RawRepresentable	A							https://developer.apple.com/reference/swift/rawrepresentable			<section class="prog__container"><p>A type that can be converted to and from an associated raw value.</p><pre><code>RawRepresentable</code></pre></section>	https://developer.apple.com/reference/swift/rawrepresentable
Repeated	A							https://developer.apple.com/reference/swift/repeated			<section class="prog__container"><p>A collection whose elements are all identical.</p><pre><code>Repeated</code></pre></section>	https://developer.apple.com/reference/swift/repeated
ReversedCollection	A							https://developer.apple.com/reference/swift/reversedcollection			<section class="prog__container"><p>A collection that presents the elements of its base collection in reverse order.</p><pre><code>x.reversed()</code></pre></section>	https://developer.apple.com/reference/swift/reversedcollection
ReversedIndex	A							https://developer.apple.com/reference/swift/reversedindex			<section class="prog__container"><p>An index that traverses the same positions as an underlying index, with inverted traversal direction.</p><pre><code>init(Base.Index)</code></pre></section>	https://developer.apple.com/reference/swift/reversedindex
ReversedRandomAccessCollection	A							https://developer.apple.com/reference/swift/reversedrandomaccesscollection			<section class="prog__container"><p>A collection that presents the elements of its base collection in reverse order.</p><pre><code>x.reversed()</code></pre></section>	https://developer.apple.com/reference/swift/reversedrandomaccesscollection
ReversedRandomAccessIndex	A							https://developer.apple.com/reference/swift/reversedrandomaccessindex			<section class="prog__container"><p>An index that traverses the same positions as an underlying index, with inverted traversal direction.</p><pre><code>init(Base.Index)</code></pre></section>	https://developer.apple.com/reference/swift/reversedrandomaccessindex
Sequence	A							https://developer.apple.com/reference/swift/sequence			<section class="prog__container"><p>A type that provides sequential, iterated access to its elements.</p><pre><code>for</code></pre></section>	https://developer.apple.com/reference/swift/sequence
Set	A							https://developer.apple.com/reference/swift/set			<section class="prog__container"><p>An unordered collection of unique elements.</p><pre><code>Hashable</code></pre></section>	https://developer.apple.com/reference/swift/set
Set.Index	A							https://developer.apple.com/reference/swift/set.index			<section class="prog__container"><p>Used to access the members in an instance of Set<Element>.</p><pre><code>Set<Element></code></pre></section>	https://developer.apple.com/reference/swift/set.index
SetAlgebra	A							https://developer.apple.com/reference/swift/setalgebra			<section class="prog__container"><p>A type that provides mathematical set operations.</p><pre><code>SetAlgebra</code></pre></section>	https://developer.apple.com/reference/swift/setalgebra
SetIterator	A							https://developer.apple.com/reference/swift/setiterator			<section class="prog__container"><p>An iterator over the members of a Set<Element>.</p><pre><code>Set<Element></code></pre></section>	https://developer.apple.com/reference/swift/setiterator
SignedInteger	A							https://developer.apple.com/reference/swift/signedinteger			<section class="prog__container"><p>A set of common requirements for Swift’s signed integer types.</p><pre><code>init(IntMax)</code></pre></section>	https://developer.apple.com/reference/swift/signedinteger
SignedNumber	A							https://developer.apple.com/reference/swift/signednumber			<section class="prog__container"><p>Instances of conforming types can be subtracted, arithmetically negated, and initialized from 0.</p><pre><code>0</code></pre></section>	https://developer.apple.com/reference/swift/signednumber
Slice	A							https://developer.apple.com/reference/swift/slice			<section class="prog__container"><p>A view into a subsequence of elements of another collection.</p><pre><code>var absences = [0, 2, 0, 4, 0, 3, 1, 0]\n</code></pre></section>	https://developer.apple.com/reference/swift/slice
StaticString	A							https://developer.apple.com/reference/swift/staticstring			<section class="prog__container"><p>A string type designed to represent text that is known at compile time.</p><pre><code>StaticString</code></pre></section>	https://developer.apple.com/reference/swift/staticstring
Strideable	A							https://developer.apple.com/reference/swift/strideable			<section class="prog__container"><p>Conforming types are notionally continuous, one-dimensional values that can be offset and measured.</p><pre><code>Stride</code></pre></section>	https://developer.apple.com/reference/swift/strideable
StrideThrough	A							https://developer.apple.com/reference/swift/stridethrough			<section class="prog__container"><p>A Sequence of values formed by striding over a closed interval.</p><pre><code>Sequence</code></pre></section>	https://developer.apple.com/reference/swift/stridethrough
StrideThroughIterator	A							https://developer.apple.com/reference/swift/stridethroughiterator			<section class="prog__container"><p>An iterator for StrideThrough<Element>.</p><pre><code>StrideThrough<Element></code></pre></section>	https://developer.apple.com/reference/swift/stridethroughiterator
StrideTo	A							https://developer.apple.com/reference/swift/strideto			<section class="prog__container"><p>A Sequence of values formed by striding over a half-open interval.</p><pre><code>Sequence</code></pre></section>	https://developer.apple.com/reference/swift/strideto
StrideToIterator	A							https://developer.apple.com/reference/swift/stridetoiterator			<section class="prog__container"><p>An iterator for StrideTo<Element>.</p><pre><code>StrideTo<Element></code></pre></section>	https://developer.apple.com/reference/swift/stridetoiterator
String	A							https://developer.apple.com/reference/swift/string			<section class="prog__container"><p>A Unicode string value.</p><pre><code>"Swift"</code></pre></section>	https://developer.apple.com/reference/swift/string
String.CharacterView	A							https://developer.apple.com/reference/swift/string.characterview			<section class="prog__container"><p>A view of a string’s contents as a collection of characters.</p><pre><code>Character</code></pre></section>	https://developer.apple.com/reference/swift/string.characterview
String.CharacterView.Index	A							https://developer.apple.com/reference/swift/string.characterview.index			<section class="prog__container"><p>A position in a string’s CharacterView instance.</p><pre><code>CharacterView</code></pre></section>	https://developer.apple.com/reference/swift/string.characterview.index
String.UnicodeScalarView	A							https://developer.apple.com/reference/swift/string.unicodescalarview			<section class="prog__container"><p>A view of a string’s contents as a collection of Unicode scalar values.</p><pre><code>unicodeScalars</code></pre></section>	https://developer.apple.com/reference/swift/string.unicodescalarview
String.UnicodeScalarView.Index	A							https://developer.apple.com/reference/swift/string.unicodescalarview.index			<section class="prog__container"><p>A position in a string’s UnicodeScalars view.</p><pre><code>UnicodeScalars</code></pre></section>	https://developer.apple.com/reference/swift/string.unicodescalarview.index
String.UnicodeScalarView.Iterator	A							https://developer.apple.com/reference/swift/string.unicodescalarview.iterator			<section class="prog__container"><p>An iterator over the Unicode scalars that make up a UnicodeScalarView collection.</p><pre><code>UnicodeScalarView</code></pre></section>	https://developer.apple.com/reference/swift/string.unicodescalarview.iterator
String.UTF16View	A							https://developer.apple.com/reference/swift/string.utf16view			<section class="prog__container"><p>A view of a string’s contents as a collection of UTF-16 code units.</p><pre><code>utf16</code></pre></section>	https://developer.apple.com/reference/swift/string.utf16view
String.UTF16View.Index	A							https://developer.apple.com/reference/swift/string.utf16view.index			<section class="prog__container"><p>A position in a string’s collection of UTF-16 code units.</p><pre><code>samePosition(in:)</code></pre></section>	https://developer.apple.com/reference/swift/string.utf16view.index
String.UTF8View	A							https://developer.apple.com/reference/swift/string.utf8view			<section class="prog__container"><p>A view of a string’s contents as a collection of UTF-8 code units.</p><pre><code>utf8</code></pre></section>	https://developer.apple.com/reference/swift/string.utf8view
String.UTF8View.Index	A							https://developer.apple.com/reference/swift/string.utf8view.index			<section class="prog__container"><p>A position in a string’s UTF8View instance.</p><pre><code>UTF8View</code></pre></section>	https://developer.apple.com/reference/swift/string.utf8view.index
Swift Standard Library Functions	A							https://developer.apple.com/reference/swift/swift_standard_library_functions			<section class="prog__container"><p>This chapter describes the global functions defined in the Swift standard library.</p><pre><code>func abs<T>(T) T : SignedNumber</code></pre></section>	https://developer.apple.com/reference/swift/swift_standard_library_functions
Swift Standard Library Operators	A							https://developer.apple.com/reference/swift/swift_standard_library_operators			<section class="prog__container"><p>This chapter describes the operator declarations and corresponding global operator functions defined in the Swift standard library.</p><pre><code>!</code></pre></section>	https://developer.apple.com/reference/swift/swift_standard_library_operators
Swift Standard Library Type Aliases	A							https://developer.apple.com/reference/swift/swift_standard_library_type_aliases			<section class="prog__container"><p>This chapter describes the global type aliases defined in the Swift standard library.</p><pre><code>AnyClass</code></pre></section>	https://developer.apple.com/reference/swift/swift_standard_library_type_aliases
TextOutputStream	A							https://developer.apple.com/reference/swift/textoutputstream			<section class="prog__container"><p>A type that can be the target of text-streaming operations.</p><pre><code>print(_:to:)</code></pre></section>	https://developer.apple.com/reference/swift/textoutputstream
TextOutputStreamable	A							https://developer.apple.com/reference/swift/textoutputstreamable			<section class="prog__container"><p>A source of text-streaming operations.</p><pre><code>TextOutputStreamable</code></pre></section>	https://developer.apple.com/reference/swift/textoutputstreamable
UInt	A							https://developer.apple.com/reference/swift/uint			<section class="prog__container"><p>An unsigned integer value type.</p><pre><code>UInt</code></pre></section>	https://developer.apple.com/reference/swift/uint
UInt16	A							https://developer.apple.com/reference/swift/uint16			<section class="prog__container"><p>A 16-bit unsigned integer value type.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/swift/uint16
UInt32	A							https://developer.apple.com/reference/swift/uint32			<section class="prog__container"><p>A 32-bit unsigned integer value type.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/swift/uint32
UInt64	A							https://developer.apple.com/reference/swift/uint64			<section class="prog__container"><p>A 64-bit unsigned integer value type.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/swift/uint64
UInt8	A							https://developer.apple.com/reference/swift/uint8			<section class="prog__container"><p>An 8-bit unsigned integer value type.</p><pre><code>init()</code></pre></section>	https://developer.apple.com/reference/swift/uint8
UnfoldSequence	A							https://developer.apple.com/reference/swift/unfoldsequence			<section class="prog__container"><p>A sequence whose elements are produced via repeated applications of a closure to some mutable state.</p><pre><code>UnfoldSequence</code></pre></section>	https://developer.apple.com/reference/swift/unfoldsequence
UnicodeCodec	A							https://developer.apple.com/reference/swift/unicodecodec			<section class="prog__container"><p>A Unicode encoding form that translates between Unicode scalar values and form-specific code units.</p><pre><code>UnicodeCodec</code></pre></section>	https://developer.apple.com/reference/swift/unicodecodec
UnicodeDecodingResult	A							https://developer.apple.com/reference/swift/unicodedecodingresult			<section class="prog__container"><p>The result of one Unicode decoding step.</p><pre><code>UnicodeDecodingResult</code></pre></section>	https://developer.apple.com/reference/swift/unicodedecodingresult
UnicodeScalar	A							https://developer.apple.com/reference/swift/unicodescalar			<section class="prog__container"><p>A Unicode scalar value.</p><pre><code>UnicodeScalar</code></pre></section>	https://developer.apple.com/reference/swift/unicodescalar
Unmanaged	A							https://developer.apple.com/reference/swift/unmanaged			<section class="prog__container"><p>A type for propagating an unmanaged object reference.</p><pre><code>func autorelease()</code></pre></section>	https://developer.apple.com/reference/swift/unmanaged
UnsafeBufferPointer	A							https://developer.apple.com/reference/swift/unsafebufferpointer			<section class="prog__container"><p>A non-owning collection interface to a buffer of elements stored contiguously in memory.</p><pre><code>UnsafeBufferPointer</code></pre></section>	https://developer.apple.com/reference/swift/unsafebufferpointer
UnsafeBufferPointerIterator	A							https://developer.apple.com/reference/swift/unsafebufferpointeriterator			<section class="prog__container"><p>An iterator for the elements in the buffer referenced by an UnsafeBufferPointer or UnsafeMutableBufferPointer instance.</p><pre><code>UnsafeBufferPointer</code></pre></section>	https://developer.apple.com/reference/swift/unsafebufferpointeriterator
UnsafeMutableBufferPointer	A							https://developer.apple.com/reference/swift/unsafemutablebufferpointer			<section class="prog__container"><p>A non-owning collection interface to a buffer of mutable elements stored contiguously in memory.</p><pre><code>UnsafeMutableBufferPointer</code></pre></section>	https://developer.apple.com/reference/swift/unsafemutablebufferpointer
UnsafeMutablePointer	A							https://developer.apple.com/reference/swift/unsafemutablepointer			<section class="prog__container"><p>A pointer for accessing and manipulating data of a specific type.</p><pre><code>UnsafeMutablePointer</code></pre></section>	https://developer.apple.com/reference/swift/unsafemutablepointer
UnsafeMutableRawBufferPointer	A							https://developer.apple.com/reference/swift/unsafemutablerawbufferpointer			<section class="prog__container"><p>A mutable nonowning collection interface to the bytes in a region of memory.</p><pre><code>UnsafeMutableRawBufferPointer</code></pre></section>	https://developer.apple.com/reference/swift/unsafemutablerawbufferpointer
UnsafeMutableRawBufferPointer.Iterator	A							https://developer.apple.com/reference/swift/unsafemutablerawbufferpointer.iterator			<section class="prog__container"><p>An iterator over the bytes viewed by a raw buffer pointer.</p><pre><code>var lazy: LazySequence<UnsafeMutableRawBufferPointer.Iterator></code></pre></section>	https://developer.apple.com/reference/swift/unsafemutablerawbufferpointer.iterator
UnsafeMutableRawPointer	A							https://developer.apple.com/reference/swift/unsafemutablerawpointer			<section class="prog__container"><p>A raw pointer for accessing and manipulating untyped data.</p><pre><code>UnsafeMutableRawPointer</code></pre></section>	https://developer.apple.com/reference/swift/unsafemutablerawpointer
UnsafePointer	A							https://developer.apple.com/reference/swift/unsafepointer			<section class="prog__container"><p>A pointer for accessing data of a specific type.</p><pre><code>UnsafePointer</code></pre></section>	https://developer.apple.com/reference/swift/unsafepointer
UnsafeRawBufferPointer	A							https://developer.apple.com/reference/swift/unsaferawbufferpointer			<section class="prog__container"><p>A nonowning collection interface to the bytes in a region of memory.</p><pre><code>UnsafeRawBufferPointer</code></pre></section>	https://developer.apple.com/reference/swift/unsaferawbufferpointer
UnsafeRawBufferPointer.Iterator	A							https://developer.apple.com/reference/swift/unsaferawbufferpointer.iterator			<section class="prog__container"><p>An iterator over the bytes viewed by a raw buffer pointer.</p><pre><code>var lazy: LazySequence<UnsafeRawBufferPointer.Iterator></code></pre></section>	https://developer.apple.com/reference/swift/unsaferawbufferpointer.iterator
UnsafeRawPointer	A							https://developer.apple.com/reference/swift/unsaferawpointer			<section class="prog__container"><p>A raw pointer for accessing untyped data.</p><pre><code>UnsafeRawPointer</code></pre></section>	https://developer.apple.com/reference/swift/unsaferawpointer
UnsignedInteger	A							https://developer.apple.com/reference/swift/unsignedinteger			<section class="prog__container"><p>A set of common requirements for Swift’s unsigned integer types.</p><pre><code>init(UIntMax)</code></pre></section>	https://developer.apple.com/reference/swift/unsignedinteger
UTF16	A							https://developer.apple.com/reference/swift/utf16			<section class="prog__container"><p>A codec for translating between Unicode scalar values and UTF-16 code units.</p><pre><code>CodeUnit</code></pre></section>	https://developer.apple.com/reference/swift/utf16
UTF32	A							https://developer.apple.com/reference/swift/utf32			<section class="prog__container"><p>A codec for translating between Unicode scalar values and UTF-32 code units.</p><pre><code>CodeUnit</code></pre></section>	https://developer.apple.com/reference/swift/utf32
UTF8	A							https://developer.apple.com/reference/swift/utf8			<section class="prog__container"><p>A codec for translating between Unicode scalar values and UTF-8 code units.</p><pre><code>CodeUnit</code></pre></section>	https://developer.apple.com/reference/swift/utf8
Zip2Iterator	A							https://developer.apple.com/reference/swift/zip2iterator			<section class="prog__container"><p>An iterator for Zip2Sequence.</p><pre><code>Zip2Sequence</code></pre></section>	https://developer.apple.com/reference/swift/zip2iterator
Zip2Sequence	A							https://developer.apple.com/reference/swift/zip2sequence			<section class="prog__container"><p>A sequence of pairs built out of two underlying sequences.</p><pre><code>Zip2Sequence</code></pre></section>	https://developer.apple.com/reference/swift/zip2sequence
App	A							https://developer.apple.com/reference/tvmljs/app			<section class="prog__container"><p>The App class provides access to and a means to respond to app life cycle events.</p><pre><code>App</code></pre></section>	https://developer.apple.com/reference/tvmljs/app
Device	A							https://developer.apple.com/reference/tvmljs/device			<section class="prog__container"><p>A Device instance provides information about an Apple TV and apps installed on the device.</p><pre><code>Device</code></pre></section>	https://developer.apple.com/reference/tvmljs/device
EventListenerObject	A							https://developer.apple.com/reference/tvmljs/eventlistenerobject			<section class="prog__container"><p>An event listener object listens for developer created events. You can add and remove event listeners.</p><pre><code>addEventListener</code></pre></section>	https://developer.apple.com/reference/tvmljs/eventlistenerobject
Keyboard	A							https://developer.apple.com/reference/tvmljs/keyboard			<section class="prog__container"><p>A Keyboard instance enables you to retrieve user inputs from search fields and text fields.</p><pre><code>Keyboard</code></pre></section>	https://developer.apple.com/reference/tvmljs/keyboard
MediaItem	A							https://developer.apple.com/reference/tvmljs/mediaitem			<section class="prog__container"><p>A MediaItem object contains information about a single audio or video item. Media items are contained in a playlist. The Player object is used to play the MediaItem objects contained within the Playlist object.</p><pre><code>MediaItem</code></pre></section>	https://developer.apple.com/reference/tvmljs/mediaitem
MenuBarDocument	A							https://developer.apple.com/reference/tvmljs/menubardocument			<section class="prog__container"><p>A MenuBarDocument class instance provides functions for setting and retrieving documents associated with a menu item.</p><pre><code>MenuBarDocument</code></pre></section>	https://developer.apple.com/reference/tvmljs/menubardocument
NavigationDocument	A							https://developer.apple.com/reference/tvmljs/navigationdocument			<section class="prog__container"><p>The NavigationDocument class provides functions that you use to control the document stack that holds the individual TVML documents for a client-server app.</p><pre><code>NavigationDocument</code></pre></section>	https://developer.apple.com/reference/tvmljs/navigationdocument
Player	A							https://developer.apple.com/reference/tvmljs/player			<section class="prog__container"><p>A Player object contains a playlist and displays the UI for playing video and audio in an Apple TV client-server app. After you create a new player, you need to associate the player with a playlist that contains media items.</p><pre><code>Player</code></pre></section>	https://developer.apple.com/reference/tvmljs/player
Playlist	A							https://developer.apple.com/reference/tvmljs/playlist			<section class="prog__container"><p>The Playlist object is an array of media items that are to be played in an Apple TV client-server app. The player (Player object) accesses the playlist to play the designated media objects.</p><pre><code>Playlist</code></pre></section>	https://developer.apple.com/reference/tvmljs/playlist
Restrictions	A							https://developer.apple.com/reference/tvmljs/restrictions			<section class="prog__container"><p>Use the Restrictions class to retrieve rating restriction information. Different countries often allow different levels of content to be shown. This class also allows you to specify the maximum and minimum rankings for content.</p><pre><code>Restrictions</code></pre></section>	https://developer.apple.com/reference/tvmljs/restrictions
Settings	A							https://developer.apple.com/reference/tvmljs/settings			<section class="prog__container"><p>A Settings class instance provides access settings information for a device.</p><pre><code>Settings</code></pre></section>	https://developer.apple.com/reference/tvmljs/settings
Slideshow	A							https://developer.apple.com/reference/tvmljs/slideshow			<section class="prog__container"><p>The Slideshow class provides developers with a way to display images on the Apple TV in a slideshow format.</p><pre><code>Slideshow</code></pre></section>	https://developer.apple.com/reference/tvmljs/slideshow
Storage	A							https://developer.apple.com/reference/tvmljs/storage			<section class="prog__container"><p>The Storage class provides functions that you use to store key-value pair information.</p><pre><code>Storage</code></pre></section>	https://developer.apple.com/reference/tvmljs/storage
TVError	A							https://developer.apple.com/reference/tvmljs/tverror			<section class="prog__container"><p>A TVError object encapsulates richer and more extensible error information than is possible when you use only an error code or error string. The core attributes of a TVError object are an error domain (represented by a string), a domain-specific error code, and a user info dictionary containing app-specific information. See User Info Dictionary Keys and Error Domains.</p><pre><code>TVError</code></pre></section>	https://developer.apple.com/reference/tvmljs/tverror
TVMLKit JS Functions	A							https://developer.apple.com/reference/tvmljs/tvmlkit_js_functions			<section class="prog__container"><p>The functions contained in this reference can be used globally in your app. They are not associated with a particular class.</p><pre><code>evaluateScripts</code></pre></section>	https://developer.apple.com/reference/tvmljs/tvmlkit_js_functions
UserDefaults	A							https://developer.apple.com/reference/tvmljs/userdefaults			<section class="prog__container"><p>A UserDefaults object contains information which allows the application to customize its behavior to match a user’s preferences.</p><pre><code>UserDefaults</code></pre></section>	https://developer.apple.com/reference/tvmljs/userdefaults
XMLHttpRequest	A							https://developer.apple.com/reference/tvmljs/xmlhttprequest			<section class="prog__container"><p>An XMLHttpRequest instance enables you to retrieve data from a URL without having to do a page refresh.</p><pre><code>XMLHttpRequest</code></pre></section>	https://developer.apple.com/reference/tvmljs/xmlhttprequest
TVApplicationController	A							https://developer.apple.com/reference/tvmlkit/tvapplicationcontroller			<section class="prog__container"><p>The TVApplicationController class establishes the JavaScript environment and provides a centralized point of control and coordination between the JavaScript environment and tvOS. The class bridges the UI, navigation stack, storage, and event handling from JavaScript.</p><pre><code>TVApplicationController</code></pre></section>	https://developer.apple.com/reference/tvmlkit/tvapplicationcontroller
TVApplicationControllerContext	A							https://developer.apple.com/reference/tvmlkit/tvapplicationcontrollercontext			<section class="prog__container"><p>The TVApplicationControllerContext class provides launch information to the TV application controller.</p><pre><code>TVApplicationControllerContext</code></pre></section>	https://developer.apple.com/reference/tvmlkit/tvapplicationcontrollercontext
TVApplicationControllerDelegate	A							https://developer.apple.com/reference/tvmlkit/tvapplicationcontrollerdelegate			<section class="prog__container"><p>The TVApplicationControllerDelegate protocol defines methods that allow you to observe and manage different states of a TVApplicationController object.</p><pre><code>TVApplicationControllerDelegate</code></pre></section>	https://developer.apple.com/reference/tvmlkit/tvapplicationcontrollerdelegate
TVColor	A							https://developer.apple.com/reference/tvmlkit/tvcolor			<section class="prog__container"><p>The TVColor class describes the color data used by color styles.</p><pre><code>TVColor</code></pre></section>	https://developer.apple.com/reference/tvmlkit/tvcolor
TVElementFactory	A							https://developer.apple.com/reference/tvmlkit/tvelementfactory			<section class="prog__container"><p>The TVElementFactory class lets you register new elements to extend the Apple TV Markup Language (TVML). You must register new elements before initializing a TVApplicationController object.</p><pre><code>TVElementFactory</code></pre></section>	https://developer.apple.com/reference/tvmlkit/tvelementfactory
TVImageElement	A							https://developer.apple.com/reference/tvmlkit/tvimageelement			<section class="prog__container"><p>A TVImageElement object represents a read-only DOM node containing the attributes that describe an image element.</p><pre><code>TVImageElement</code></pre></section>	https://developer.apple.com/reference/tvmlkit/tvimageelement
TVInterfaceCreating	A							https://developer.apple.com/reference/tvmlkit/tvinterfacecreating			<section class="prog__container"><p>The TVInterfaceCreating factory protocol declares methods that are used to create views and view controllers from a TVViewElement.</p><pre><code>TVInterfaceCreating</code></pre></section>	https://developer.apple.com/reference/tvmlkit/tvinterfacecreating
TVInterfaceFactory	A							https://developer.apple.com/reference/tvmlkit/tvinterfacefactory			<section class="prog__container"><p>The TVInterfaceFactory class provides a factory for the creation of views and view controllers. The app can extend or override the framework implementation by setting extendedInterfaceCreator.</p><pre><code>TVInterfaceFactory</code></pre></section>	https://developer.apple.com/reference/tvmlkit/tvinterfacefactory
TVStyleFactory	A							https://developer.apple.com/reference/tvmlkit/tvstylefactory			<section class="prog__container"><p>The TVStyleFactory class is used to register custom style properties.</p><pre><code>TVStyleFactory</code></pre></section>	https://developer.apple.com/reference/tvmlkit/tvstylefactory
TVTextElement	A							https://developer.apple.com/reference/tvmlkit/tvtextelement			<section class="prog__container"><p>A TVTextElement object that represents the textual content for the DOM element.</p><pre><code>TVTextElement</code></pre></section>	https://developer.apple.com/reference/tvmlkit/tvtextelement
TVViewElement	A							https://developer.apple.com/reference/tvmlkit/tvviewelement			<section class="prog__container"><p>A TVViewElement object represents a read-only DOM node along with it's attributes and aggregated styles. The TVViewElement model object is traversed by the TVInterfaceFactory factory to construct views and view controllers, and to render templates. Views and view controllers should use the available dispatch APIs to send user events to JavaScript.</p><pre><code>TVViewElement</code></pre></section>	https://developer.apple.com/reference/tvmlkit/tvviewelement
TVViewElementStyle	A							https://developer.apple.com/reference/tvmlkit/tvviewelementstyle			<section class="prog__container"><p>A TVViewElementStyle object represents a style applied to a view element.</p><pre><code>func value(propertyName: String)</code></pre></section>	https://developer.apple.com/reference/tvmlkit/tvviewelementstyle
TVContentIdentifier	A							https://developer.apple.com/reference/tvservices/tvcontentidentifier			<section class="prog__container"><p>A TVContentIdentifier object uniquely identifies media content in either a single piece or a collection.</p><pre><code>TVContentIdentifier</code></pre></section>	https://developer.apple.com/reference/tvservices/tvcontentidentifier
TVContentItem	A							https://developer.apple.com/reference/tvservices/tvcontentitem			<section class="prog__container"><p>A TVContentItem object describes either a piece of content or a container for other content items. The exact details of what a content item is are dependent on your app. For example, a content item might be a piece of media or it might provide access to news or other content available to your app.</p><pre><code>TVContentItem</code></pre></section>	https://developer.apple.com/reference/tvservices/tvcontentitem
TVServices Functions	A							https://developer.apple.com/reference/tvservices/tvservices_functions			<section class="prog__container"><p>This reference includes functions that are not part of any class or protocol.</p><pre><code>func TVTopShelfImageSize(shape: TVContentItemImageShape, style: TVTopShelfContentStyle)</code></pre></section>	https://developer.apple.com/reference/tvservices/tvservices_functions
TVTopShelfProvider	A							https://developer.apple.com/reference/tvservices/tvtopshelfprovider			<section class="prog__container"><p>The TVTopShelfProvider protocol is implemented by apps to provide items for display in the main menu’s Top Shelf user interface on an Apple TV.</p><pre><code>TVTopShelfProvider</code></pre></section>	https://developer.apple.com/reference/tvservices/tvtopshelfprovider
NSDataAsset	A							https://developer.apple.com/reference/uikit/nsdataasset			<section class="prog__container"><p>The NSDataAsset class enables you to access an object from a data set type stored in an asset catalog. The object’s content is stored as a set of one or more files with associated device attributes. These sets can also be tagged for use as on-demand resources.</p><pre><code>NSDataAsset</code></pre></section>	https://developer.apple.com/reference/uikit/nsdataasset
NSFileProviderExtension	A							https://developer.apple.com/reference/uikit/nsfileproviderextension			<section class="prog__container"><p>NSFileProviderExtension is the principal class for the File Provider extension. The file provider acts as the back end for the Document Picker extension. It ensures that all the URLs returned by the document picker are backed by files on disk. It can respond to both coordinated-read and coordinated-write operations from the host app, letting you download and upload files as needed. You must provide a file provider if you want to support the open and move modes.</p><pre><code>NSFileProviderExtension</code></pre></section>	https://developer.apple.com/reference/uikit/nsfileproviderextension
NSLayoutAnchor	A							https://developer.apple.com/reference/uikit/nslayoutanchor			<section class="prog__container"><p>The NSLayoutAnchor class is a factory class for creating NSLayoutConstraint objects using a fluent API. Use these constraints to programatically define your layout using Auto Layout.</p><pre><code>NSLayoutAnchor</code></pre></section>	https://developer.apple.com/reference/uikit/nslayoutanchor
NSLayoutConstraint	A							https://developer.apple.com/reference/uikit/nslayoutconstraint			<section class="prog__container"><p>A constraint defines a relationship between two user interface objects that must be satisfied by the constraint-based layout system. Each constraint is a linear equation with the following format:</p><pre><code>item1.attribute1 = multiplier × item2.attribute2 + constant\n</code></pre></section>	https://developer.apple.com/reference/uikit/nslayoutconstraint
NSLayoutDimension	A							https://developer.apple.com/reference/uikit/nslayoutdimension			<section class="prog__container"><p>The NSLayoutDimension class is a factory class for creating size-based NSLayoutConstraint objects using a fluent API. Use these constraints to programatically define your layout using Auto Layout. All sizes are measured in points.</p><pre><code>NSLayoutDimension</code></pre></section>	https://developer.apple.com/reference/uikit/nslayoutdimension
NSLayoutFormatOptions	A							https://developer.apple.com/reference/uikit/nslayoutformatoptions			<section class="prog__container"><p>A bit mask that specifies both a part of an interface element to align and a direction for the alignment between two interface elements.</p><pre><code>static var alignAllLeft: NSLayoutFormatOptions</code></pre></section>	https://developer.apple.com/reference/uikit/nslayoutformatoptions
NSLayoutManager	A							https://developer.apple.com/reference/uikit/nslayoutmanager			<section class="prog__container"><p>An NSLayoutManager object coordinates the layout and display of characters held in an NSTextStorage object. It maps Unicode character codes to glyphs, sets the glyphs in a series of NSTextContainer objects, and displays them in a series of NSTextView objects. In addition to its core function of laying out text, an NSLayoutManager object coordinates its NSTextView objects, provides services to those text views to support NSRulerView instances for editing paragraph styles, and handles the layout and display of text attributes not inherent in glyphs (such as underline or strikethrough). You can create a subclass of NSLayoutManager to handle additional text attributes, whether inherent or not.</p><pre><code>NSLayoutManager</code></pre></section>	https://developer.apple.com/reference/uikit/nslayoutmanager
NSLayoutManagerDelegate	A							https://developer.apple.com/reference/uikit/nslayoutmanagerdelegate			<section class="prog__container"><p>The NSLayoutManagerDelegate protocol defines the optional methods implemented by delegates of NSLayoutManager objects.</p><pre><code>NSLayoutManagerDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/nslayoutmanagerdelegate
NSLayoutXAxisAnchor	A							https://developer.apple.com/reference/uikit/nslayoutxaxisanchor			<section class="prog__container"><p>The NSLayoutXAxisAnchor class is a factory class for creating horizontal NSLayoutConstraint objects using a fluent interface (an interface designed to produce more readable code). Use these constraints to programatically define your layout using Auto Layout.</p><pre><code>NSLayoutXAxisAnchor</code></pre></section>	https://developer.apple.com/reference/uikit/nslayoutxaxisanchor
NSLayoutYAxisAnchor	A							https://developer.apple.com/reference/uikit/nslayoutyaxisanchor			<section class="prog__container"><p>The NSLayoutYAxisAnchor class is a factory class for creating vertical NSLayoutConstraint objects using a fluent interface (an interface designed to produce more readable code). Use these constraints to programatically define your layout using Auto Layout.</p><pre><code>NSLayoutYAxisAnchor</code></pre></section>	https://developer.apple.com/reference/uikit/nslayoutyaxisanchor
NSMutableParagraphStyle	A							https://developer.apple.com/reference/uikit/nsmutableparagraphstyle			<section class="prog__container"><p>The NSMutableParagraphStyle class adds methods to its superclass, NSParagraphStyle, for changing the values of the subattributes in a paragraph style attribute. See the NSParagraphStyle and NSAttributedString specifications for more information.</p><pre><code>NSMutableParagraphStyle</code></pre></section>	https://developer.apple.com/reference/uikit/nsmutableparagraphstyle
NSParagraphStyle	A							https://developer.apple.com/reference/uikit/nsparagraphstyle			<section class="prog__container"><p>The NSParagraphStyle class and its subclass NSMutableParagraphStyle encapsulate the paragraph or ruler attributes used by the NSAttributedString classes. Instances of these classes are often referred to as paragraph style objects or, when no confusion will result, paragraph styles.</p><pre><code>NSParagraphStyle</code></pre></section>	https://developer.apple.com/reference/uikit/nsparagraphstyle
NSShadow	A							https://developer.apple.com/reference/uikit/nsshadow			<section class="prog__container"><p>An NSShadow object encapsulates the attributes used to create a drop shadow during drawing operations.</p><pre><code>NSShadow</code></pre></section>	https://developer.apple.com/reference/uikit/nsshadow
NSStringDrawingContext	A							https://developer.apple.com/reference/uikit/nsstringdrawingcontext			<section class="prog__container"><p>The NSStringDrawingContext class manages metrics used when drawing attributed strings. Prior to drawing, you can create an instance of this class and use it to specify the minimum scale factor and tracking adjustments for a string. After drawing, you can retrieve the actual values that were used during drawing.</p><pre><code>NSStringDrawingContext</code></pre></section>	https://developer.apple.com/reference/uikit/nsstringdrawingcontext
NSStringDrawingOptions	A							https://developer.apple.com/reference/uikit/nsstringdrawingoptions			<section class="prog__container"><p>The following constants are provided as rendering options for a string when it is drawn.</p><pre><code>static var usesLineFragmentOrigin: NSStringDrawingOptions</code></pre></section>	https://developer.apple.com/reference/uikit/nsstringdrawingoptions
NSTextAttachment	A							https://developer.apple.com/reference/uikit/nstextattachment			<section class="prog__container"><p>NSTextAttachment objects are used by the NSAttributedString class cluster as the values for attachment attributes (stored in the attributed string under the key named NSAttachmentAttributeName). The objects you create with this class are referred to as text attachment objects, or when no confusion will result, as text attachments or merely attachments.</p><pre><code>NSTextAttachment</code></pre></section>	https://developer.apple.com/reference/uikit/nstextattachment
NSTextAttachmentContainer	A							https://developer.apple.com/reference/uikit/nstextattachmentcontainer			<section class="prog__container"><p>The NSTextAttachmentContainer protocol defines the interface to text attachment objects from NSLayoutManager.</p><pre><code>NSTextAttachmentContainer</code></pre></section>	https://developer.apple.com/reference/uikit/nstextattachmentcontainer
NSTextContainer	A							https://developer.apple.com/reference/uikit/nstextcontainer			<section class="prog__container"><p>The NSTextContainer class defines a region where text is laid out. An NSLayoutManager uses NSTextContainer to determine where to break lines, lay out portions of text, and so on. An NSTextContainer object normally defines rectangular regions, but you can define exclusion paths inside the text container to create regions where text does not flow. You can also subclass to create text containers with nonrectangular regions, such as circular regions, regions with holes in them, or regions that flow alongside graphics.</p><pre><code>NSTextContainer</code></pre></section>	https://developer.apple.com/reference/uikit/nstextcontainer
NSTextLayoutOrientationProvider	A							https://developer.apple.com/reference/uikit/nstextlayoutorientationprovider			<section class="prog__container"><p>The NSTextLayoutOrientationProvider protocol defines the orientation of text for an object. In macOS, the NSTextContainer and NSTextView classes adopt this protocol; in iOS, only the NSTextContainer class implements it. A NSTextContainer object returns the value from its associated text view when present; otherwise, it returns horizontal by default. If you define a custom NSTextContainer object, you can override this method and return vertical to support laying out text vertically. </p><pre><code>NSTextLayoutOrientationProvider</code></pre></section>	https://developer.apple.com/reference/uikit/nstextlayoutorientationprovider
NSTextStorage	A							https://developer.apple.com/reference/uikit/nstextstorage			<section class="prog__container"><p>The NSTextStorage class defines the fundamental storage mechanism of TextKit. This class is a semi concrete subclass of NSMutableAttributedString that adds behavior for managing a set of client NSLayoutManager objects. A text storage object notifies its layout managers of changes to its characters or attributes, which lets the layout managers redisplay the text as needed. </p><pre><code>NSTextStorage</code></pre></section>	https://developer.apple.com/reference/uikit/nstextstorage
NSTextStorageDelegate	A							https://developer.apple.com/reference/uikit/nstextstoragedelegate			<section class="prog__container"><p>The NSTextStorageDelegate protocol defines the optional methods implemented by delegates of NSTextStorage objects.</p><pre><code>NSTextStorageDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/nstextstoragedelegate
NSTextStorageEditActions	A							https://developer.apple.com/reference/uikit/nstextstorageeditactions			<section class="prog__container"><p>Constants indicating the types of changes that were made.</p><pre><code>NSLayoutManager</code></pre></section>	https://developer.apple.com/reference/uikit/nstextstorageeditactions
NSTextTab	A							https://developer.apple.com/reference/uikit/nstexttab			<section class="prog__container"><p>An NSTextTab object represents a tab in an NSParagraphStyle object, storing an alignment type and location. NSTextTab objects are most frequently used with the TextKit system and with NSRulerView and NSRulerMarker objects.</p><pre><code>NSTextTab</code></pre></section>	https://developer.apple.com/reference/uikit/nstexttab
UIAccelerometerDelegate	A							https://developer.apple.com/reference/uikit/uiaccelerometerdelegate			<section class="prog__container"><p>The UIAccelerometerDelegate protocol defines a single method for receiving acceleration-related data from the system. Implementation of this method is optional, but expected. </p><pre><code>UIAccelerometerDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uiaccelerometerdelegate
UIAccessibility	A							https://developer.apple.com/reference/uikit/uiaccessibility			<section class="prog__container"><p>A set of methods that provide accessibility information about views and controls in an app's user interface.</p><pre><code>UIAccessibility</code></pre></section>	https://developer.apple.com/reference/uikit/uiaccessibility
UIAccessibilityAction	A							https://developer.apple.com/reference/uikit/uiaccessibilityaction			<section class="prog__container"><p>A set of methods that accessibility elements can use to support specific actions.</p><pre><code>accessibilityScroll(_:)</code></pre></section>	https://developer.apple.com/reference/uikit/uiaccessibilityaction
UIAccessibilityContainer	A							https://developer.apple.com/reference/uikit/uiaccessibilitycontainer			<section class="prog__container"><p>A set of methods that view subclasses use to make subcomponents accessible as separate elements.</p><pre><code>UIView</code></pre></section>	https://developer.apple.com/reference/uikit/uiaccessibilitycontainer
UIAccessibilityCustomAction	A							https://developer.apple.com/reference/uikit/uiaccessibilitycustomaction			<section class="prog__container"><p>A custom action to be performed on an accessible object. </p><pre><code>accessibilityCustomActions</code></pre></section>	https://developer.apple.com/reference/uikit/uiaccessibilitycustomaction
UIAccessibilityElement	A							https://developer.apple.com/reference/uikit/uiaccessibilityelement			<section class="prog__container"><p>Encapsulates information about an item that should be accessible to users with disabilities, but that isn’t accessible by default. </p><pre><code>UIAccessibilityElement</code></pre></section>	https://developer.apple.com/reference/uikit/uiaccessibilityelement
UIAccessibilityFocus	A							https://developer.apple.com/reference/uikit/uiaccessibilityfocus			<section class="prog__container"><p>An informal protocol that provides a way to find out whether an assistive technology, such as VoiceOver, is focused on an accessible element.</p><pre><code>func accessibilityElementDidBecomeFocused()</code></pre></section>	https://developer.apple.com/reference/uikit/uiaccessibilityfocus
UIAccessibilityIdentification	A							https://developer.apple.com/reference/uikit/uiaccessibilityidentification			<section class="prog__container"><p>Methods that associate a unique identifier with elements in your user interface. </p><pre><code>accessibilityIdentifier</code></pre></section>	https://developer.apple.com/reference/uikit/uiaccessibilityidentification
UIAccessibilityReadingContent	A							https://developer.apple.com/reference/uikit/uiaccessibilityreadingcontent			<section class="prog__container"><p>Methods to implement on an object that represents content that is intended to be read by users, such as a book or an article. </p><pre><code>UIAccessibilityTraitCausesPageTurn</code></pre></section>	https://developer.apple.com/reference/uikit/uiaccessibilityreadingcontent
UIActionSheetDelegate	A							https://developer.apple.com/reference/uikit/uiactionsheetdelegate			<section class="prog__container"><p>Important: UIActionSheetDelegate is deprecated in iOS 8. (Note that UIActionSheet is also deprecated.) To create and manage action sheets in iOS 8 and later, use UIAlertController.</p><pre><code>UIActionSheetDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uiactionsheetdelegate
UIActivity	A							https://developer.apple.com/reference/uikit/uiactivity			<section class="prog__container"><p>An abstract class that you subclass in order to implement app-specific services. </p><pre><code>UIActivity</code></pre></section>	https://developer.apple.com/reference/uikit/uiactivity
UIActivityIndicatorView	A							https://developer.apple.com/reference/uikit/uiactivityindicatorview			<section class="prog__container"><p>Use an activity indicator to show that a task is in progress. An activity indicator appears as a “gear” that is either spinning or stopped.</p><pre><code>startAnimating()</code></pre></section>	https://developer.apple.com/reference/uikit/uiactivityindicatorview
UIActivityItemProvider	A							https://developer.apple.com/reference/uikit/uiactivityitemprovider			<section class="prog__container"><p>A UIActivityItemProvider object is a proxy for data passed to an activity view controller. You can use a provider object in situations where you want to make data available for use by an activity but you want to delay providing that data until it is actually needed. For example, you might use a provider object to represent a large video file that needs to be processed before it can be shared to a user’s social media account.</p><pre><code>UIActivityItemProvider</code></pre></section>	https://developer.apple.com/reference/uikit/uiactivityitemprovider
UIActivityItemSource	A							https://developer.apple.com/reference/uikit/uiactivityitemsource			<section class="prog__container"><p>The UIActivityItemSource protocol defines the methods used by a UIActivityViewController object to retrieve the data items to act on. You can use this protocol in situations where you want to provide the data from one of your app’s existing objects instead of creating a separate UIActivityItemProvider object. When implementing this protocol, your object becomes the data provider, providing the view controller with access to the items. </p><pre><code>UIActivityItemSource</code></pre></section>	https://developer.apple.com/reference/uikit/uiactivityitemsource
UIActivityViewController	A							https://developer.apple.com/reference/uikit/uiactivityviewcontroller			<section class="prog__container"><p>The UIActivityViewController class is a standard view controller that you can use to offer various services from your application. The system provides several standard services, such as copying items to the pasteboard, posting content to social media sites, sending items via email or SMS, and more. Apps can also define custom services.</p><pre><code>UIActivityViewController</code></pre></section>	https://developer.apple.com/reference/uikit/uiactivityviewcontroller
UIAdaptivePresentationControllerDelegate	A							https://developer.apple.com/reference/uikit/uiadaptivepresentationcontrollerdelegate			<section class="prog__container"><p>An object that conforms to the UIAdaptivePresentationControllerDelegate protocol works with a presentation controller to determine how to respond to trait changes in your app. Your delegate can suggest a new presentation style or an entirely new view controller for displaying content.</p><pre><code>UIAdaptivePresentationControllerDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uiadaptivepresentationcontrollerdelegate
UIAlertAction	A							https://developer.apple.com/reference/uikit/uialertaction			<section class="prog__container"><p>A UIAlertAction object represents an action that can be taken when tapping a button in an alert. You use this class to configure information about a single action, including the title to display in the button, any styling information, and a handler to execute when the user taps the button. After creating an alert action object, add it to a UIAlertController object before displaying the corresponding alert to the user.</p><pre><code>UIAlertAction</code></pre></section>	https://developer.apple.com/reference/uikit/uialertaction
UIAlertController	A							https://developer.apple.com/reference/uikit/uialertcontroller			<section class="prog__container"><p>A UIAlertController object displays an alert message to the user. This class replaces the UIActionSheet and UIAlertView classes for displaying alerts. After configuring the alert controller with the actions and style you want, present it using the present(_:animated:completion:) method.</p><pre><code>UIAlertController</code></pre></section>	https://developer.apple.com/reference/uikit/uialertcontroller
UIAlertViewDelegate	A							https://developer.apple.com/reference/uikit/uialertviewdelegate			<section class="prog__container"><p>For apps that run in versions of iOS prior to iOS 8, the UIAlertViewDelegate protocol defines the methods a delegate of a UIAlertView object should implement. The delegate implements the button actions and any other custom behavior. Some of the methods defined in this protocol are optional.</p><pre><code>UIAlertViewDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uialertviewdelegate
UIAppearance	A							https://developer.apple.com/reference/uikit/uiappearance			<section class="prog__container"><p>Use the UIAppearance protocol to get the appearance proxy for a class. You can customize the appearance of instances of a class by sending appearance modification messages to the class’s appearance proxy. </p><pre><code>UIAppearance</code></pre></section>	https://developer.apple.com/reference/uikit/uiappearance
UIAppearanceContainer	A							https://developer.apple.com/reference/uikit/uiappearancecontainer			<section class="prog__container"><p>A class must adopt the UIAppearance protocol to allow appearance customization using the UIAppearance API. </p><pre><code>UIAppearance</code></pre></section>	https://developer.apple.com/reference/uikit/uiappearancecontainer
UIApplication	A							https://developer.apple.com/reference/uikit/uiapplication			<section class="prog__container"><p>The UIApplication class provides a centralized point of control and coordination for apps running in iOS. Every app has exactly one instance of UIApplication (or, very rarely, a subclass of UIApplication). When an app is launched, the system calls the UIApplicationMain(_:_:_:_:) function; among its other tasks, this function creates a Singleton UIApplication object. Thereafter you access the object by calling the shared class method.</p><pre><code>UIApplication</code></pre></section>	https://developer.apple.com/reference/uikit/uiapplication
UIApplicationDelegate	A							https://developer.apple.com/reference/uikit/uiapplicationdelegate			<section class="prog__container"><p>The UIApplicationDelegate protocol defines methods that are called by the singleton UIApplication object in response to important events in the lifetime of your app.</p><pre><code>UIApplicationDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uiapplicationdelegate
UIApplicationShortcutIcon	A							https://developer.apple.com/reference/uikit/uiapplicationshortcuticon			<section class="prog__container"><p>An application shortcut, or quick action, icon is an image you can optionally associate with a Home screen quick action to improve its appearance and usability.</p><pre><code>UIApplicationShortcutItem</code></pre></section>	https://developer.apple.com/reference/uikit/uiapplicationshortcuticon
UIApplicationShortcutItem	A							https://developer.apple.com/reference/uikit/uiapplicationshortcutitem			<section class="prog__container"><p>An application shortcut item, also called a Home screen dynamic quick action, specifies a user-initiated action for your app.</p><pre><code>UIApplicationShortcutItem</code></pre></section>	https://developer.apple.com/reference/uikit/uiapplicationshortcutitem
UIAttachmentBehavior	A							https://developer.apple.com/reference/uikit/uiattachmentbehavior			<section class="prog__container"><p>A UIAttachmentBehavior object creates a relationship between two dynamic items, or between a dynamic item and an anchor point. When two items are attached to each other, forces imparted on one item affect the movement of the other in a prescribed way. When an item is attached to an anchor point, the movement of that item is affected by its attachment to the specified anchor point. Some attachment behaviors support both two items and an anchor point. </p><pre><code>UIAttachmentBehavior</code></pre></section>	https://developer.apple.com/reference/uikit/uiattachmentbehavior
UIBarButtonItem	A							https://developer.apple.com/reference/uikit/uibarbuttonitem			<section class="prog__container"><p>A bar button item is a button specialized for placement on a UIToolbar or UINavigationBar object. It inherits basic button behavior from its abstract superclass, UIBarItem. The UIBarButtonItem defines additional initialization methods and properties for use on toolbars and navigation bars.</p><pre><code>UIToolbar</code></pre></section>	https://developer.apple.com/reference/uikit/uibarbuttonitem
UIBarButtonItemGroup	A							https://developer.apple.com/reference/uikit/uibarbuttonitemgroup			<section class="prog__container"><p>A UIBarButtonItemGroup object manages a set of bar button items on the shortcuts bar above the keyboard on iPad. A group contains one or more bar button items and an optional representative item that is displayed instead of the individual items when space is constrained. You can create any number of groups and configure each group with any number of items.</p><pre><code>UIBarButtonItemGroup</code></pre></section>	https://developer.apple.com/reference/uikit/uibarbuttonitemgroup
UIBarItem	A							https://developer.apple.com/reference/uikit/uibaritem			<section class="prog__container"><p>UIBarItem is an abstract superclass for items added to a bar that appears at the bottom of the screen. Items on a bar behave in a way similar to buttons (instances of UIButton). They have a title, image, action, and target. You can also enable and disable an item on a bar.</p><pre><code>UIBarItem</code></pre></section>	https://developer.apple.com/reference/uikit/uibaritem
UIBarPositioning	A							https://developer.apple.com/reference/uikit/uibarpositioning			<section class="prog__container"><p>The UIBarPositioning protocol defines the ways that bars can be positioned on iOS devices. Bars can be positioned at the bottom of their enclosing view, at the top of their enclosing view, or at both the top of their enclosing view and also the top of the screen. In this last case, the bar will abut the status bar displayed by the system. Bars in this position need to have their background extend above their own frame to the top of the screen. This allows the background to show through the status bar.</p><pre><code>UIBarPositioning</code></pre></section>	https://developer.apple.com/reference/uikit/uibarpositioning
UIBarPositioningDelegate	A							https://developer.apple.com/reference/uikit/uibarpositioningdelegate			<section class="prog__container"><p>The UIBarPositioningDelegate protocol supports the positioning of a bar that conforms to the UIBarPositioning protocol. Navigation bars, toolbars, and search bars all have delegates that support this protocol. The delegate can use the method of this protocol to specify the bar’s position when that bar is moved to a window. </p><pre><code>UIBarPositioningDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uibarpositioningdelegate
UIBezierPath	A							https://developer.apple.com/reference/uikit/uibezierpath			<section class="prog__container"><p>The UIBezierPath class lets you define a path consisting of straight and curved line segments and render that path in your custom views. You use this class initially to specify just the geometry for your path. Paths can define simple shapes such as rectangles, ovals, and arcs or they can define complex polygons that incorporate a mixture of straight and curved line segments. After defining the shape, you can use additional methods of this class to render the path in the current drawing context. </p><pre><code>UIBezierPath</code></pre></section>	https://developer.apple.com/reference/uikit/uibezierpath
UIBlurEffect	A							https://developer.apple.com/reference/uikit/uiblureffect			<section class="prog__container"><p>A UIBlurEffect object applies a blurring effect to the content layered behind a UIVisualEffectView. Views added to the contentView of a UIVisualEffectView are not affected by the blur effect.</p><pre><code>UIBlurEffect</code></pre></section>	https://developer.apple.com/reference/uikit/uiblureffect
UIButton	A							https://developer.apple.com/reference/uikit/uibutton			<section class="prog__container"><p>A UIButton object is a view that executes your custom code in response to user interactions. </p><pre><code>UIButton</code></pre></section>	https://developer.apple.com/reference/uikit/uibutton
UICollectionReusableView	A							https://developer.apple.com/reference/uikit/uicollectionreusableview			<section class="prog__container"><p>The UICollectionReusableView class defines the behavior for all cells and supplementary views presented by a collection view. Reusable views are so named because the collection view places them on a reuse queue rather than deleting them when they are scrolled out of the visible bounds. Such a view can then be retrieved and repurposed for a different set of content.</p><pre><code>UICollectionReusableView</code></pre></section>	https://developer.apple.com/reference/uikit/uicollectionreusableview
UICollectionView	A							https://developer.apple.com/reference/uikit/uicollectionview			<section class="prog__container"><p>Manages an ordered collection of data items and presents them using customizable layouts.</p><pre><code>UICollectionViewDataSource</code></pre></section>	https://developer.apple.com/reference/uikit/uicollectionview
UICollectionViewCell	A							https://developer.apple.com/reference/uikit/uicollectionviewcell			<section class="prog__container"><p>A UICollectionViewCell object presents the content for a single data item when that item is within the collection view’s visible bounds. You can use this class as-is or subclass it to add additional properties and methods. The layout and presentation of cells is managed by the collection view and its corresponding layout object.</p><pre><code>UICollectionViewCell</code></pre></section>	https://developer.apple.com/reference/uikit/uicollectionviewcell
UICollectionViewController	A							https://developer.apple.com/reference/uikit/uicollectionviewcontroller			<section class="prog__container"><p>The UICollectionViewController class represents a view controller whose content consists of a collection view. It implements the following behavior:</p><pre><code>UICollectionViewController</code></pre></section>	https://developer.apple.com/reference/uikit/uicollectionviewcontroller
UICollectionViewDataSource	A							https://developer.apple.com/reference/uikit/uicollectionviewdatasource			<section class="prog__container"><p>An object that adopts the UICollectionViewDataSource protocol is responsible for providing the data and views required by a collection view. A data source object represents your app’s data model and vends information to the collection view as needed. It also handles the creation and configuration of cells and supplementary views used by the collection view to display your data.</p><pre><code>UICollectionViewDataSource</code></pre></section>	https://developer.apple.com/reference/uikit/uicollectionviewdatasource
UICollectionViewDataSourcePrefetching	A							https://developer.apple.com/reference/uikit/uicollectionviewdatasourceprefetching			<section class="prog__container"><p>A protocol that provides advance warning of the data requirements for a collection view, allowing the triggering of asynchronous data load operations.</p><pre><code>collectionView(_:cellForItemAt:)</code></pre></section>	https://developer.apple.com/reference/uikit/uicollectionviewdatasourceprefetching
UICollectionViewDelegate	A							https://developer.apple.com/reference/uikit/uicollectionviewdelegate			<section class="prog__container"><p>The UICollectionViewDelegate protocol defines methods that allow you to manage the selection and highlighting of items in a collection view and to perform actions on those items. The methods of this protocol are all optional.</p><pre><code>UICollectionViewDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uicollectionviewdelegate
UICollectionViewDelegateFlowLayout	A							https://developer.apple.com/reference/uikit/uicollectionviewdelegateflowlayout			<section class="prog__container"><p>The UICollectionViewDelegateFlowLayout protocol defines methods that let you coordinate with a UICollectionViewFlowLayout object to implement a grid-based layout. The methods of this protocol define the size of items and the spacing between items in the grid.</p><pre><code>UICollectionViewDelegateFlowLayout</code></pre></section>	https://developer.apple.com/reference/uikit/uicollectionviewdelegateflowlayout
UICollectionViewFlowLayout	A							https://developer.apple.com/reference/uikit/uicollectionviewflowlayout			<section class="prog__container"><p>The UICollectionViewFlowLayout class is a concrete layout object that organizes items into a grid with optional header and footer views for each section. The items in the collection view flow from one row or column (depending on the scrolling direction) to the next, with each row comprising as many cells as will fit. Cells can be the same sizes or different sizes. </p><pre><code>UICollectionViewFlowLayout</code></pre></section>	https://developer.apple.com/reference/uikit/uicollectionviewflowlayout
UICollectionViewFlowLayoutInvalidationContext	A							https://developer.apple.com/reference/uikit/uicollectionviewflowlayoutinvalidationcontext			<section class="prog__container"><p>A UICollectionViewFlowLayoutInvalidationContext object specifies properties for determining whether to recompute the size of items or their position in the layout. The flow layout object creates instances of this class when it needs to invalidate its contents in response to changes. You can also create instances when invalidating the flow layout manually. </p><pre><code>UICollectionViewFlowLayoutInvalidationContext</code></pre></section>	https://developer.apple.com/reference/uikit/uicollectionviewflowlayoutinvalidationcontext
UICollectionViewFocusUpdateContext	A							https://developer.apple.com/reference/uikit/uicollectionviewfocusupdatecontext			<section class="prog__container"><p>A UICollectionViewFocusUpdateContext object stores information specific to a focus update in a collection view. When focus changes, the collection view delegate receives a context object with the relevant information. Your delegate methods use the information in this object to create animations or to perform other tasks related to the change in focus. </p><pre><code>UICollectionViewFocusUpdateContext</code></pre></section>	https://developer.apple.com/reference/uikit/uicollectionviewfocusupdatecontext
UICollectionViewLayout	A							https://developer.apple.com/reference/uikit/uicollectionviewlayout			<section class="prog__container"><p>The UICollectionViewLayout class is an abstract base class that you subclass and use to generate layout information for a collection view. The job of a layout object is to determine the placement of cells, supplementary views, and decoration views inside the collection view’s bounds and to report that information to the collection view when asked. The collection view then applies the provided layout information to the corresponding views so that they can be presented onscreen.</p><pre><code>UICollectionViewLayout</code></pre></section>	https://developer.apple.com/reference/uikit/uicollectionviewlayout
UICollectionViewLayoutAttributes	A							https://developer.apple.com/reference/uikit/uicollectionviewlayoutattributes			<section class="prog__container"><p>An UICollectionViewLayoutAttributes object manages the layout-related attributes for a given item in a collection view. Layout objects create instances of this class when asked to do so by the collection view. In turn, the collection view uses the layout information to position cells and supplementary views inside its bounds.</p><pre><code>UICollectionViewLayoutAttributes</code></pre></section>	https://developer.apple.com/reference/uikit/uicollectionviewlayoutattributes
UICollectionViewLayoutInvalidationContext	A							https://developer.apple.com/reference/uikit/uicollectionviewlayoutinvalidationcontext			<section class="prog__container"><p>A UICollectionViewLayoutInvalidationContext object declares which parts of your layout need to be updated when the layout is invalidated. Layout objects that are designed to support invalidation contexts can use that information to optimize their behavior during the invalidation cycle.</p><pre><code>UICollectionViewLayoutInvalidationContext</code></pre></section>	https://developer.apple.com/reference/uikit/uicollectionviewlayoutinvalidationcontext
UICollectionViewTransitionLayout	A							https://developer.apple.com/reference/uikit/uicollectionviewtransitionlayout			<section class="prog__container"><p>The UICollectionViewTransitionLayout class is a special type of layout object that lets you implement behaviors when changing from one layout to another in your collection view. You can use this class as-is or subclass it to provide specialized behavior for your app. A common use for transition layouts is to create interactive transitions, such as those that are driven by gesture recognizers or touch events. </p><pre><code>UICollectionViewTransitionLayout</code></pre></section>	https://developer.apple.com/reference/uikit/uicollectionviewtransitionlayout
UICollectionViewUpdateItem	A							https://developer.apple.com/reference/uikit/uicollectionviewupdateitem			<section class="prog__container"><p>The UICollectionViewUpdateItem class describes a single change to make to an item in a collection view. You do not create instances of this class directly. When updating its content, the collection view object creates them and passes them to the layout object’s prepare(forCollectionViewUpdates:) method, which can use them to prepare the layout object for the upcoming changes. </p><pre><code>UICollectionViewUpdateItem</code></pre></section>	https://developer.apple.com/reference/uikit/uicollectionviewupdateitem
UICollisionBehavior	A							https://developer.apple.com/reference/uikit/uicollisionbehavior			<section class="prog__container"><p>A collision behavior confers, to a specified array of dynamic items, the ability of those items to engage in collisions with each other and with the behavior’s specified boundaries. A collision behavior also specifies some characteristics of its items’ collisions, with other characteristics optionally specified by a UIDynamicItemBehavior object.</p><pre><code>UIDynamicItemBehavior</code></pre></section>	https://developer.apple.com/reference/uikit/uicollisionbehavior
UICollisionBehaviorDelegate	A							https://developer.apple.com/reference/uikit/uicollisionbehaviordelegate			<section class="prog__container"><p>To respond to UIKit dynamic item collisions, configure a custom class to adopt the UICollisionBehaviorDelegate protocol. Then, in a collision behavior (an instance of the UICollisionBehavior class), set the delegate to be an instance of your custom class.</p><pre><code>UICollisionBehaviorDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uicollisionbehaviordelegate
UIColor	A							https://developer.apple.com/reference/uikit/uicolor			<section class="prog__container"><p>An object that stores color data and sometimes opacity (that is, alpha value). </p><pre><code>UIColor</code></pre></section>	https://developer.apple.com/reference/uikit/uicolor
UIContentContainer	A							https://developer.apple.com/reference/uikit/uicontentcontainer			<section class="prog__container"><p>The methods of the UIContentContainer protocol help you adapt the contents of your view controllers to size and trait changes. All UIViewController and UIPresentationController objects provide default implementations for the methods of this protocol. When creating your own custom view controller or presentation controller, you can override the default implementations to make adjustments to your content. For example, you might use these methods to adjust the size or position of any child view controllers.</p><pre><code>UIContentContainer</code></pre></section>	https://developer.apple.com/reference/uikit/uicontentcontainer
UIControl	A							https://developer.apple.com/reference/uikit/uicontrol			<section class="prog__container"><p>The UIControl class implements common behavior for visual elements that convey a specific action or intention in response to user interactions. Controls implement elements such as buttons and sliders, which your app might use to facilitate navigation, gather user input, or manipulate content. Controls use the Target-Action mechanism to report user interactions to your app. </p><pre><code>UIControl</code></pre></section>	https://developer.apple.com/reference/uikit/uicontrol
UICoordinateSpace	A							https://developer.apple.com/reference/uikit/uicoordinatespace			<section class="prog__container"><p>The UICoordinateSpace protocol defines methods for converting between different frames of reference on a screen. The UIView class adopts this protocol so that you can convert easily between most coordinate spaces in your app. The UIScreen class includes the coordinateSpace and fixedCoordinateSpace properties, which give you access to the screen’s coordinate spaces. You can adopt this protocol in your own classes to convert between your custom coordinate spaces and the coordinate spaces of your app’s views and screens.</p><pre><code>UICoordinateSpace</code></pre></section>	https://developer.apple.com/reference/uikit/uicoordinatespace
UICubicTimingParameters	A							https://developer.apple.com/reference/uikit/uicubictimingparameters			<section class="prog__container"><p>Specifies timing information for animations in the form of a cubic Bézier curve. </p><pre><code>UICubicTimingParameters</code></pre></section>	https://developer.apple.com/reference/uikit/uicubictimingparameters
UIDataSourceModelAssociation	A							https://developer.apple.com/reference/uikit/uidatasourcemodelassociation			<section class="prog__container"><p>The UIDataSourceModelAssociation protocol defines an interface for providing persistent references to data objects in your app. Your data source objects can adopt this protocol in order to assist a corresponding table or collection view during the state restoration process. Those classes use the methods of this protocol to ensure that the same data objects (and not just the same row indexes) are scrolled into view and selected.</p><pre><code>UIDataSourceModelAssociation</code></pre></section>	https://developer.apple.com/reference/uikit/uidatasourcemodelassociation
UIDatePicker	A							https://developer.apple.com/reference/uikit/uidatepicker			<section class="prog__container"><p>A UIDatePicker object is a control used for the inputting of date and time values. You can use a date picker to allow a user to enter either a point in time (calendar date, time value or both) or a time interval (for example for a timer). The date picker reports interactions to its associated target object.</p><pre><code>UIDatePicker</code></pre></section>	https://developer.apple.com/reference/uikit/uidatepicker
UIDevice	A							https://developer.apple.com/reference/uikit/uidevice			<section class="prog__container"><p>The UIDevice class provides a Singleton instance representing the current device. From this instance you can obtain information about the device such as assigned name, device model, and operating-system name and version.</p><pre><code>UIDevice</code></pre></section>	https://developer.apple.com/reference/uikit/uidevice
UIDictationPhrase	A							https://developer.apple.com/reference/uikit/uidictationphrase			<section class="prog__container"><p>A dictation phrase object represents the textual interpretation of a spoken phrase as dictated by a user.</p><pre><code>UIDictationPhrase</code></pre></section>	https://developer.apple.com/reference/uikit/uidictationphrase
UIDocument	A							https://developer.apple.com/reference/uikit/uidocument			<section class="prog__container"><p>An abstract base class for managing the data of documents. </p><pre><code>UIDocument</code></pre></section>	https://developer.apple.com/reference/uikit/uidocument
UIDocumentInteractionController	A							https://developer.apple.com/reference/uikit/uidocumentinteractioncontroller			<section class="prog__container"><p>A document interaction controller, along with a delegate object, provides in-app support for managing user interactions with files in the local system. For example, an email program might use this class to allow the user to preview attachments and open them in other apps. Use this class to present an appropriate user interface for previewing, opening, copying, or printing a specified file.</p><pre><code>UIDocumentInteractionControllerDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uidocumentinteractioncontroller
UIDocumentInteractionControllerDelegate	A							https://developer.apple.com/reference/uikit/uidocumentinteractioncontrollerdelegate			<section class="prog__container"><p>The UIDocumentInteractionControllerDelegate protocol includes methods you can implement to respond to messages from a document interaction controller. Use this protocol to participate when document previews are displayed and when a document is about to be opened by another application. You can also use this protocol to respond to commands (such as “copy” and “print”) from a document interaction controller’s options menu.</p><pre><code>UIDocumentInteractionControllerDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uidocumentinteractioncontrollerdelegate
UIDocumentMenuDelegate	A							https://developer.apple.com/reference/uikit/uidocumentmenudelegate			<section class="prog__container"><p>The UIDocumentMenuDelegate protocol defines the methods you must implement to track user interactions with a document menu view controller. The document menu calls these methods when the user selects a document picker or dismisses the menu. If the user selects a document picker, set the picker’s delegate and present it.</p><pre><code>UIDocumentMenuDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uidocumentmenudelegate
UIDocumentMenuViewController	A							https://developer.apple.com/reference/uikit/uidocumentmenuviewcontroller			<section class="prog__container"><p>A UIDocumentMenuViewController object represents a list of all the available document providers for a given file type and mode. You can also add your own custom menu items to this list.</p><pre><code>UIDocumentMenuViewController</code></pre></section>	https://developer.apple.com/reference/uikit/uidocumentmenuviewcontroller
UIDocumentPickerDelegate	A							https://developer.apple.com/reference/uikit/uidocumentpickerdelegate			<section class="prog__container"><p>The UIDocumentPickerDelegate protocol defines the methods you must implement to trackwhen the user selects a document or destination, or to track when the document picker is canceled.</p><pre><code>UIDocumentPickerDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uidocumentpickerdelegate
UIDocumentPickerExtensionViewController	A							https://developer.apple.com/reference/uikit/uidocumentpickerextensionviewcontroller			<section class="prog__container"><p>The UIDocumentPickerExtensionViewController class is the principal class for the Document Picker View Controller extension. When creating a Document Picker extension, you must subclass UIDocumentPickerExtensionViewController to provide the document picker’s user interface. Your subclass presents a list of available documents and destinations to the user. When the user makes a selection, you trigger the file transfer and pass the selected URL back to the host app.</p><pre><code>UIDocumentPickerExtensionViewController</code></pre></section>	https://developer.apple.com/reference/uikit/uidocumentpickerextensionviewcontroller
UIDocumentPickerViewController	A							https://developer.apple.com/reference/uikit/uidocumentpickerviewcontroller			<section class="prog__container"><p>A UIDocumentPickerViewController object lets the user select documents or destinations outside your app’s sandbox. You must enable iCloud document support before you can use the document picker. For more information, see iCloud Design Guide.</p><pre><code>UIDocumentPickerViewController</code></pre></section>	https://developer.apple.com/reference/uikit/uidocumentpickerviewcontroller
UIDynamicAnimator	A							https://developer.apple.com/reference/uikit/uidynamicanimator			<section class="prog__container"><p>A dynamic animator provides physics-related capabilities and animations for its dynamic items, and provides the context for those animations. It does this by intermediating between the underlying iOS physics engine and dynamic items, via behavior objects you add to the animator.</p><pre><code>UIDynamicItem</code></pre></section>	https://developer.apple.com/reference/uikit/uidynamicanimator
UIDynamicAnimatorDelegate	A							https://developer.apple.com/reference/uikit/uidynamicanimatordelegate			<section class="prog__container"><p>To respond to the pausing or resumption of UIKit dynamic animation, configure a custom class to adopt the UIDynamicAnimatorDelegate protocol. Then, in a dynamic animator (an instance of the UIDynamicAnimator class), set the delegate to be an instance of your custom class.</p><pre><code>UIDynamicAnimatorDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uidynamicanimatordelegate
UIDynamicBehavior	A							https://developer.apple.com/reference/uikit/uidynamicbehavior			<section class="prog__container"><p>A dynamic behavior confers a behavioral configuration on one or more dynamic items for their participation in two-dimensional animation.</p><pre><code>UIDynamicItem</code></pre></section>	https://developer.apple.com/reference/uikit/uidynamicbehavior
UIDynamicItem	A							https://developer.apple.com/reference/uikit/uidynamicitem			<section class="prog__container"><p>To make a custom object eligible to participate in UIKit Dynamics, adopt the UIDynamicItem protocol in the object’s class.</p><pre><code>UIDynamicItem</code></pre></section>	https://developer.apple.com/reference/uikit/uidynamicitem
UIDynamicItemBehavior	A							https://developer.apple.com/reference/uikit/uidynamicitembehavior			<section class="prog__container"><p>A dynamic item behavior represents a base dynamic animation configuration for one or more dynamic items. Each of its properties overrides a corresponding default value.</p><pre><code>UIDynamicItem</code></pre></section>	https://developer.apple.com/reference/uikit/uidynamicitembehavior
UIDynamicItemGroup	A							https://developer.apple.com/reference/uikit/uidynamicitemgroup			<section class="prog__container"><p>A UIDynamicItemGroup object represents a dynamic item comprised of multiple other dynamic items. Use groups to manipulate a group of dynamic items together and treat them as a single unit for the purpose of collisions. The group can contain dynamic items but cannot contain other UIDynamicItemGroup objects. You can add a group to any UIDynamicBehavior object. </p><pre><code>UIDynamicItemGroup</code></pre></section>	https://developer.apple.com/reference/uikit/uidynamicitemgroup
UIEvent	A							https://developer.apple.com/reference/uikit/uievent			<section class="prog__container"><p>An object that describes a single user interaction with your app.  </p><pre><code>type</code></pre></section>	https://developer.apple.com/reference/uikit/uievent
UIFeedbackGenerator	A							https://developer.apple.com/reference/uikit/uifeedbackgenerator			<section class="prog__container"><p>The abstract superclass for all feedback generators.</p><pre><code>UIImpactFeedbackGenerator</code></pre></section>	https://developer.apple.com/reference/uikit/uifeedbackgenerator
UIFieldBehavior	A							https://developer.apple.com/reference/uikit/uifieldbehavior			<section class="prog__container"><p>A UIFieldBehavior object applies field-based physics to dynamic items. A field behavior defines an area in which forces such as gravity, magnetism, drag, velocity, turbulence, and others can be applied. After creating a field behavior object of the appropriate type, configure the strength of the intended force along with any other field attributes. </p><pre><code>UIFieldBehavior</code></pre></section>	https://developer.apple.com/reference/uikit/uifieldbehavior
UIFocusAnimationCoordinator	A							https://developer.apple.com/reference/uikit/uifocusanimationcoordinator			<section class="prog__container"><p>The UIFocusAnimationCoordinator class helps coordinate focus-related animations during a focus update. UIFocusAnimationCoordinator instances are always created by the system and vended to your application during a focus update, and are typically discarded once the update is complete. It is not useful to instantiate UIFocusAnimationCoordinator yourself. The UIFocus header file- and its related classes and protocol- creates a single high-level software interface for controlling focus in applications that use focus-based input. This programming interface also helps to control focus behavior on the screen. </p><pre><code>UIFocusAnimationCoordinator</code></pre></section>	https://developer.apple.com/reference/uikit/uifocusanimationcoordinator
UIFocusEnvironment	A							https://developer.apple.com/reference/uikit/uifocusenvironment			<section class="prog__container"><p>A protocol that defines the focus behavior for a branch of the view hierarchy. </p><pre><code>UIFocusEnvironment</code></pre></section>	https://developer.apple.com/reference/uikit/uifocusenvironment
UIFocusGuide	A							https://developer.apple.com/reference/uikit/uifocusguide			<section class="prog__container"><p>The UIFocusGuide class is designed to expose non view areas as focusable. UIFocusGuide, as subclasses of UILayoutGuide are not views and do not define a new view or participate in the view hierarchy at all, except as Auto Layout guides. Unlike UILayoutGuide, UIFocusGuide represents an invisible, focusable region that can redirect focus movement to other views. The UIFocus header file- and its related classes and its protocol- creates a single high-level software interface for controlling focus in applications that use focus-based input. This programming interface also helps to control focus behavior on the screen. </p><pre><code>UIFocusGuide</code></pre></section>	https://developer.apple.com/reference/uikit/uifocusguide
UIFocusItem	A							https://developer.apple.com/reference/uikit/uifocusitem			<section class="prog__container"><p>A protocol—not intended for conformance by third-party classes—that lets an item declare its ability to participate in the focus system.</p><pre><code>UIFocusItem</code></pre></section>	https://developer.apple.com/reference/uikit/uifocusitem
UIFocusUpdateContext	A							https://developer.apple.com/reference/uikit/uifocusupdatecontext			<section class="prog__container"><p>The UIFocusUpdateContext class provides information relevant to a specific focus update from one view to another. The objects of this class are ephemeral and are usually discarded after the update is finished. The UIFocus APIs creates a single high level software interface for controlling focus in apps using focus-based input.</p><pre><code>UIFocusUpdateContext</code></pre></section>	https://developer.apple.com/reference/uikit/uifocusupdatecontext
UIFont	A							https://developer.apple.com/reference/uikit/uifont			<section class="prog__container"><p>The UIFont class provides the interface for getting and setting font information. The class provides you with access to the font’s characteristics and also provides the system with access to the font’s glyph information, which is used during layout. You use font objects by passing them to methods that accept them as a parameter. </p><pre><code>UIFont</code></pre></section>	https://developer.apple.com/reference/uikit/uifont
UIFontDescriptor	A							https://developer.apple.com/reference/uikit/uifontdescriptor			<section class="prog__container"><p>UIFontDescriptor objects provide a mechanism to describe a font with a dictionary of attributes. This font descriptor can be used later to create or modify a UIFont object. Font descriptors can be archived and unarchived. Font descriptors have a font matching capability, so that you can partially describe a font by creating a font descriptor with, for example, just a family name. You can then find all the available fonts on the system with a matching family name using matchingFontDescriptors(withMandatoryKeys:).</p><pre><code>UIFontDescriptor</code></pre></section>	https://developer.apple.com/reference/uikit/uifontdescriptor
UIFontDescriptorSymbolicTraits	A							https://developer.apple.com/reference/uikit/uifontdescriptorsymbolictraits			<section class="prog__container"><p>UIFontDescriptorSymbolicTraits symbolically describes stylistic aspects of a font. The lower 16 bits represent the typeface, and the upper 16 bits describe appearance of the font.</p><pre><code>UIFontDescriptorSymbolicTraits</code></pre></section>	https://developer.apple.com/reference/uikit/uifontdescriptorsymbolictraits
UIGestureRecognizer	A							https://developer.apple.com/reference/uikit/uigesturerecognizer			<section class="prog__container"><p>The base class for concrete gesture recognizers.</p><pre><code>The base class for concrete gesture recognizers.</code></pre></section>	https://developer.apple.com/reference/uikit/uigesturerecognizer
UIGestureRecognizerDelegate	A							https://developer.apple.com/reference/uikit/uigesturerecognizerdelegate			<section class="prog__container"><p>Delegates of a gesture recognizer—that is, an instance of a concrete subclass of UIGestureRecognizer—adopt the UIGestureRecognizerDelegate protocol to fine-tune an app’s gesture-recognition behavior. The delegates receive messages from a gesture recognizer, and their responses to these messages enable them to affect the operation of the gesture recognizer or to specify a relationship between it and another gesture recognizer, such as allowing simultaneous recognition or setting up a dynamic failure requirement.</p><pre><code>UIGestureRecognizer</code></pre></section>	https://developer.apple.com/reference/uikit/uigesturerecognizerdelegate
UIGravityBehavior	A							https://developer.apple.com/reference/uikit/uigravitybehavior			<section class="prog__container"><p>A UIGravityBehavior object applies a gravity-like force to all of its associated dynamic items. The magnitude and direction of the gravity force are configurable and are applied equally to all associated items. Use this behavior to modify the position of views and other dynamic items in your app’s interface. </p><pre><code>UIGravityBehavior</code></pre></section>	https://developer.apple.com/reference/uikit/uigravitybehavior
UIGuidedAccessRestrictionDelegate	A							https://developer.apple.com/reference/uikit/uiguidedaccessrestrictiondelegate			<section class="prog__container"><p>Adopting the UIGuidedAccessRestrictionDelegate protocol in your application delegate allows you to add custom restrictions for the Guided Access feature in iOS.</p><pre><code>UIGuidedAccessRestrictionDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uiguidedaccessrestrictiondelegate
UIImage	A							https://developer.apple.com/reference/uikit/uiimage			<section class="prog__container"><p>An object that manages image data in your app.  </p><pre><code>UIImage</code></pre></section>	https://developer.apple.com/reference/uikit/uiimage
UIImageAsset	A							https://developer.apple.com/reference/uikit/uiimageasset			<section class="prog__container"><p>A UIImageAsset object is a container for a collection of images that represent multiple ways of describing a single piece of artwork. A common use case for UIImageAsset is the grouping of multiple images of the same item at different display scales.</p><pre><code>UIImageAsset</code></pre></section>	https://developer.apple.com/reference/uikit/uiimageasset
UIImagePickerController	A							https://developer.apple.com/reference/uikit/uiimagepickercontroller			<section class="prog__container"><p>The UIImagePickerController class manages customizable, system-supplied user interfaces for taking pictures and movies on supported devices, and for choosing saved images and movies for use in your app. An image picker controller manages user interactions and delivers the results of those interactions to a delegate object.</p><pre><code>UIImagePickerController</code></pre></section>	https://developer.apple.com/reference/uikit/uiimagepickercontroller
UIImagePickerControllerDelegate	A							https://developer.apple.com/reference/uikit/uiimagepickercontrollerdelegate			<section class="prog__container"><p>The UIImagePickerControllerDelegate protocol defines methods that your delegate object must implement to interact with the image picker interface. The methods of this protocol notify your delegate when the user either picks an image or movie, or cancels the picker operation.</p><pre><code>UIImagePickerControllerDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uiimagepickercontrollerdelegate
UIImageView	A							https://developer.apple.com/reference/uikit/uiimageview			<section class="prog__container"><p>An object that displays a single image or a sequence of animated images in your interface.</p><pre><code>UIImage</code></pre></section>	https://developer.apple.com/reference/uikit/uiimageview
UIImpactFeedbackGenerator	A							https://developer.apple.com/reference/uikit/uiimpactfeedbackgenerator			<section class="prog__container"><p>A concrete UIFeedbackGenerator subclass that creates haptics to simulate physical impacts. </p><pre><code>UIFeedbackGenerator</code></pre></section>	https://developer.apple.com/reference/uikit/uiimpactfeedbackgenerator
UIInputView	A							https://developer.apple.com/reference/uikit/uiinputview			<section class="prog__container"><p>The UIInputView class is designed to match the appearance of the standard system keyboard when used as an input view with a responder. When defining your own custom input views or input accessory views, you can use a UIInputView object as the root view and add any subviews you want to create your input view. The input view and its subviews receive tinting and blur effects based on the options you specify at initialization time. </p><pre><code>UIInputView</code></pre></section>	https://developer.apple.com/reference/uikit/uiinputview
UIInputViewAudioFeedback	A							https://developer.apple.com/reference/uikit/uiinputviewaudiofeedback			<section class="prog__container"><p>The UIInputViewAudioFeedback protocol defines a single property for enabling a custom input or keyboard accessory view to play standard keyboard input clicks.</p><pre><code>UIInputViewAudioFeedback</code></pre></section>	https://developer.apple.com/reference/uikit/uiinputviewaudiofeedback
UIInputViewController	A							https://developer.apple.com/reference/uikit/uiinputviewcontroller			<section class="prog__container"><p>To create a custom keyboard, start by subclassing the UIInputViewController class. Add your keyboard’s user interface to the inputView property of your subclass.</p><pre><code>UIInputViewController</code></pre></section>	https://developer.apple.com/reference/uikit/uiinputviewcontroller
UIInterpolatingMotionEffect	A							https://developer.apple.com/reference/uikit/uiinterpolatingmotioneffect			<section class="prog__container"><p>A UIInterpolatingMotionEffect object maps the horizontal or vertical tilt of a device to values that you specify so that UIKit can apply those values to your views. You use this class to determine the amount of tilt along a single axis to apply to a view.</p><pre><code>UIInterpolatingMotionEffect</code></pre></section>	https://developer.apple.com/reference/uikit/uiinterpolatingmotioneffect
UIKeyCommand	A							https://developer.apple.com/reference/uikit/uikeycommand			<section class="prog__container"><p>The UIKeyCommand class specifies a key presses performed on a hardware keyboard and the resulting action that should take place. Hardware keyboards allow a user to hold down the Control, Option, Command, or other modifier key and press a key in combination to initiate commands such as cut, copy, or paste. You can use instances of this class to define custom command sequences that your app recognizes and then provide an appropriate response.</p><pre><code>UIKeyCommand</code></pre></section>	https://developer.apple.com/reference/uikit/uikeycommand
UIKeyInput	A							https://developer.apple.com/reference/uikit/uikeyinput			<section class="prog__container"><p>A subclass of UIResponder can adopt this protocol to implement simple text entry. When instances of this subclass are the first responder, the system keyboard is displayed. </p><pre><code>UIResponder</code></pre></section>	https://developer.apple.com/reference/uikit/uikeyinput
UILabel	A							https://developer.apple.com/reference/uikit/uilabel			<section class="prog__container"><p>A view that displays one or more lines of read-only text, often used in conjunction with controls to describe their intended purpose.</p><pre><code>text</code></pre></section>	https://developer.apple.com/reference/uikit/uilabel
UILayoutGuide	A							https://developer.apple.com/reference/uikit/uilayoutguide			<section class="prog__container"><p>The UILayoutGuide class defines a rectangular area that can interact with Auto Layout. Use layout guides to replace the dummy views you may have created to represent inter-view spaces or encapsulation in your user interface.</p><pre><code>UILayoutGuide</code></pre></section>	https://developer.apple.com/reference/uikit/uilayoutguide
UILayoutSupport	A							https://developer.apple.com/reference/uikit/uilayoutsupport			<section class="prog__container"><p>This protocol is implemented by the UIViewController properties topLayoutGuide and bottomLayoutGuide to support using Auto Layout with a view controller’s view, starting in iOS 7. You can use layout guides as layout items in the NSLayoutConstraint factory methods.</p><pre><code>UIViewController</code></pre></section>	https://developer.apple.com/reference/uikit/uilayoutsupport
UILexicon	A							https://developer.apple.com/reference/uikit/uilexicon			<section class="prog__container"><p>A lexicon contains a read-only array of term pairs, each in a UILexiconEntry object, for use by a custom keyboard.</p><pre><code>UILexiconEntry</code></pre></section>	https://developer.apple.com/reference/uikit/uilexicon
UILexiconEntry	A							https://developer.apple.com/reference/uikit/uilexiconentry			<section class="prog__container"><p>A lexicon entry specifies a read-only term pair, available within a UILexicon object, for use by a custom keyboard.</p><pre><code>UILexicon</code></pre></section>	https://developer.apple.com/reference/uikit/uilexiconentry
UILocalizedIndexedCollation	A							https://developer.apple.com/reference/uikit/uilocalizedindexedcollation			<section class="prog__container"><p>The UILocalizedIndexedCollation class is a convenience for organizing, sorting, and localizing the data for a table view that has a section index. The table view’s data source then uses the collation object to provide the table view with input for section titles and section index titles.</p><pre><code>UILocalizedIndexedCollation</code></pre></section>	https://developer.apple.com/reference/uikit/uilocalizedindexedcollation
UILongPressGestureRecognizer	A							https://developer.apple.com/reference/uikit/uilongpressgesturerecognizer			<section class="prog__container"><p>UILongPressGestureRecognizer is a concrete subclass of UIGestureRecognizer that looks for long-press gestures. The user must press one or more fingers on a view and hold them there for a minimum period of time before the action triggers. While down, the user’s fingers may not move more than a specified distance; if they move beyond the specified distance, the gesture fails. </p><pre><code>UILongPressGestureRecognizer</code></pre></section>	https://developer.apple.com/reference/uikit/uilongpressgesturerecognizer
UIManagedDocument	A							https://developer.apple.com/reference/uikit/uimanageddocument			<section class="prog__container"><p>A managed document object that integrates with Core Data.</p><pre><code>UIManagedDocument</code></pre></section>	https://developer.apple.com/reference/uikit/uimanageddocument
UIMarkupTextPrintFormatter	A							https://developer.apple.com/reference/uikit/uimarkuptextprintformatter			<section class="prog__container"><p>Instances of the UIMarkupTextPrintFormatter class lay out HTML markup text for a multipage print job.</p><pre><code>UIMarkupTextPrintFormatter</code></pre></section>	https://developer.apple.com/reference/uikit/uimarkuptextprintformatter
UIMenuController	A							https://developer.apple.com/reference/uikit/uimenucontroller			<section class="prog__container"><p>The singleton UIMenuController instance presents the menu interface for the Cut, Copy, Paste, Select, Select All, and Delete commands.</p><pre><code>UIMenuController</code></pre></section>	https://developer.apple.com/reference/uikit/uimenucontroller
UIMenuItem	A							https://developer.apple.com/reference/uikit/uimenuitem			<section class="prog__container"><p>An instance of the UIMenuItem class represents a custom item in the editing menu managed by the UIMenuController object.</p><pre><code>UIMenuItem</code></pre></section>	https://developer.apple.com/reference/uikit/uimenuitem
UIMotionEffect	A							https://developer.apple.com/reference/uikit/uimotioneffect			<section class="prog__container"><p>The UIMotionEffect class is an abstract superclass for defining motion-based modifiers for views. Subclasses are responsible for defining the behavior to apply to a view when motion is detected. They do this by overriding the keyPathsAndRelativeValues(forViewerOffset:) method and returning one or more key paths representing the view properties to modify. </p><pre><code>UIMotionEffect</code></pre></section>	https://developer.apple.com/reference/uikit/uimotioneffect
UIMotionEffectGroup	A							https://developer.apple.com/reference/uikit/uimotioneffectgroup			<section class="prog__container"><p>The UIMotionEffectGroup class manages a collection of motion effects that you want to apply to a view at the same time. This class behaves similarly to the CAAnimationGroup class in Core Animation. The key paths and values returned by each motion effect object are applied simultaneously and with the same timing. </p><pre><code>UIMotionEffectGroup</code></pre></section>	https://developer.apple.com/reference/uikit/uimotioneffectgroup
UIMutableApplicationShortcutItem	A							https://developer.apple.com/reference/uikit/uimutableapplicationshortcutitem			<section class="prog__container"><p>A mutable application shortcut item, also called, verbosely, a mutable Home screen dynamic quick action, specifies a configurable user-initiated action for your app. This class is a convenience subclass of UIApplicationShortcutItem, helping you work with registered, and therefore immutable, quick actions.</p><pre><code>UIApplicationShortcutItem</code></pre></section>	https://developer.apple.com/reference/uikit/uimutableapplicationshortcutitem
UINavigationBar	A							https://developer.apple.com/reference/uikit/uinavigationbar			<section class="prog__container"><p>A visual control that supports navigation of hierarchical content, most often used in navigation controllers.</p><pre><code>UINavigationBar</code></pre></section>	https://developer.apple.com/reference/uikit/uinavigationbar
UINavigationBarDelegate	A							https://developer.apple.com/reference/uikit/uinavigationbardelegate			<section class="prog__container"><p>The UINavigationBarDelegate protocol defines optional methods that a UINavigationBar delegate should implement to update its views when items are pushed and popped from the stack. The navigation bar represents only the bar at the top of the screen, not the view below. It’s the application’s responsibility to implement the behavior when the top item changes.</p><pre><code>UINavigationBarDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uinavigationbardelegate
UINavigationController	A							https://developer.apple.com/reference/uikit/uinavigationcontroller			<section class="prog__container"><p>The UINavigationController class implements a specialized view controller that manages the navigation of hierarchical content. This navigation interface makes it possible to present your data efficiently and makes it easier for the user to navigate that content. You generally use this class as-is but you may also subclass to customize the class behavior.</p><pre><code>UINavigationController</code></pre></section>	https://developer.apple.com/reference/uikit/uinavigationcontroller
UINavigationControllerDelegate	A							https://developer.apple.com/reference/uikit/uinavigationcontrollerdelegate			<section class="prog__container"><p>Use a navigation controller delegate (a custom object that implements this protocol) to modify behavior when a view controller is pushed or popped from the navigation stack of a UINavigationController object.</p><pre><code>UINavigationController</code></pre></section>	https://developer.apple.com/reference/uikit/uinavigationcontrollerdelegate
UINavigationItem	A							https://developer.apple.com/reference/uikit/uinavigationitem			<section class="prog__container"><p>A UINavigationItem object manages the buttons and views to be displayed in a UINavigationBar object. When building a navigation interface, each view controller pushed onto the navigation stack must have a UINavigationItem object that contains the buttons and views it wants displayed in the navigation bar. The managing UINavigationController object uses the navigation items of the topmost two view controllers to populate the navigation bar with content. </p><pre><code>UINavigationItem</code></pre></section>	https://developer.apple.com/reference/uikit/uinavigationitem
UINib	A							https://developer.apple.com/reference/uikit/uinib			<section class="prog__container"><p>Instances of the UINib class serve as object wrappers, or containers, for Interface Builder nib files. </p><pre><code>UINib</code></pre></section>	https://developer.apple.com/reference/uikit/uinib
UINotificationFeedbackGenerator	A							https://developer.apple.com/reference/uikit/uinotificationfeedbackgenerator			<section class="prog__container"><p>A concrete UIFeedbackGenerator subclass that creates haptics to communicate successes, failures, and warnings. </p><pre><code>UIFeedbackGenerator</code></pre></section>	https://developer.apple.com/reference/uikit/uinotificationfeedbackgenerator
UIObjectRestoration	A							https://developer.apple.com/reference/uikit/uiobjectrestoration			<section class="prog__container"><p>The UIObjectRestoration protocol should be adopted by classes that act as "restoration classes” for objects during the state restoration process. The method in this protocol should be used to return the object if it already exists or create it if needed.</p><pre><code>UIObjectRestoration</code></pre></section>	https://developer.apple.com/reference/uikit/uiobjectrestoration
UIPageControl	A							https://developer.apple.com/reference/uikit/uipagecontrol			<section class="prog__container"><p>A control that displays a horizontal series of dots, each of which corresponds to a page in the application’s document (or other data-model entity). </p><pre><code>valueChanged</code></pre></section>	https://developer.apple.com/reference/uikit/uipagecontrol
UIPageViewController	A							https://developer.apple.com/reference/uikit/uipageviewcontroller			<section class="prog__container"><p>A page view controller lets the user navigate between pages of content, where each page is managed by its own view controller object. Navigation can be controlled programmatically by your app or directly by the user using gestures. When navigating from page to page, the page view controller uses the transition that you specify to animate the change. </p><pre><code>UIPageViewController</code></pre></section>	https://developer.apple.com/reference/uikit/uipageviewcontroller
UIPageViewControllerDataSource	A							https://developer.apple.com/reference/uikit/uipageviewcontrollerdatasource			<section class="prog__container"><p>The UIPageViewControllerDataSource protocol is adopted by an object that provides view controllers to the page view controller on an as-needed basis, in response to navigation gestures.</p><pre><code>UIPageViewControllerDataSource</code></pre></section>	https://developer.apple.com/reference/uikit/uipageviewcontrollerdatasource
UIPageViewControllerDelegate	A							https://developer.apple.com/reference/uikit/uipageviewcontrollerdelegate			<section class="prog__container"><p>The delegate of a page view controller must adopt the UIPageViewControllerDelegate protocol. These methods allow the delegate to receive a notification when the device orientation changes and when the user navigates to a new page. For page-curl style transitions, the delegate can provide a different spine location in response to a change in the interface orientation.</p><pre><code>UIPageViewControllerDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uipageviewcontrollerdelegate
UIPanGestureRecognizer	A							https://developer.apple.com/reference/uikit/uipangesturerecognizer			<section class="prog__container"><p>UIPanGestureRecognizer is a concrete subclass of UIGestureRecognizer that looks for panning (dragging) gestures. The user must be pressing one or more fingers on a view while they pan it. Clients implementing the action method for this gesture recognizer can ask it for the current translation and velocity of the gesture.</p><pre><code>UIPanGestureRecognizer</code></pre></section>	https://developer.apple.com/reference/uikit/uipangesturerecognizer
UIPasteboard	A							https://developer.apple.com/reference/uikit/uipasteboard			<section class="prog__container"><p>Use the UIPasteboard class to let a user to share data from one place to another within your app, and from your app to other apps. For sharing data with any other app, use the systemwide general pasteboard; for sharing data with another app from your team—that has the same team ID as the app to share from—use named pasteboards.</p><pre><code>UIPasteboard</code></pre></section>	https://developer.apple.com/reference/uikit/uipasteboard
UIPercentDrivenInteractiveTransition	A							https://developer.apple.com/reference/uikit/uipercentdriveninteractivetransition			<section class="prog__container"><p>A percent-driven interactive transition object drives the custom animation between the disappearance of one view controller and the appearance of another. It relies on a transition animator delegate—a custom object that adopts the UIViewControllerAnimatedTransitioning protocol—to set up and perform the animations.</p><pre><code>UIViewControllerAnimatedTransitioning</code></pre></section>	https://developer.apple.com/reference/uikit/uipercentdriveninteractivetransition
UIPickerView	A							https://developer.apple.com/reference/uikit/uipickerview			<section class="prog__container"><p>The UIPickerView class implements objects, called picker views, that use a spinning-wheel or slot-machine metaphor to show one or more sets of values. Users select values by rotating the wheels so that the desired row of values aligns with a selection indicator.</p><pre><code>UIPickerView</code></pre></section>	https://developer.apple.com/reference/uikit/uipickerview
UIPickerViewAccessibilityDelegate	A							https://developer.apple.com/reference/uikit/uipickerviewaccessibilitydelegate			<section class="prog__container"><p>The UIPickerViewAccessibilityDelegate protocol defines methods you can implement to provide accessibility information for individual components of a picker view.</p><pre><code>UIPickerViewAccessibilityDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uipickerviewaccessibilitydelegate
UIPickerViewDataSource	A							https://developer.apple.com/reference/uikit/uipickerviewdatasource			<section class="prog__container"><p>The UIPickerViewDataSource protocol must be adopted by an object that mediates between a UIPickerView object and your application’s data model for that picker view. The data source provides the picker view with the number of components, and the number of rows in each component, for displaying the picker view data. Both methods in this protocol are required.</p><pre><code>UIPickerViewDataSource</code></pre></section>	https://developer.apple.com/reference/uikit/uipickerviewdatasource
UIPickerViewDelegate	A							https://developer.apple.com/reference/uikit/uipickerviewdelegate			<section class="prog__container"><p>The delegate of a UIPickerView object must adopt this protocol and implement at least some of its methods to provide the picker view with the data it needs to construct itself.</p><pre><code>UIPickerView</code></pre></section>	https://developer.apple.com/reference/uikit/uipickerviewdelegate
UIPinchGestureRecognizer	A							https://developer.apple.com/reference/uikit/uipinchgesturerecognizer			<section class="prog__container"><p>UIPinchGestureRecognizer is a concrete subclass of UIGestureRecognizer that looks for pinching gestures involving two touches. When the user moves the two fingers toward each other, the conventional meaning is zoom-out; when the user moves the two fingers away from each other, the conventional meaning is zoom-in.</p><pre><code>UIPinchGestureRecognizer</code></pre></section>	https://developer.apple.com/reference/uikit/uipinchgesturerecognizer
UIPopoverBackgroundView	A							https://developer.apple.com/reference/uikit/uipopoverbackgroundview			<section class="prog__container"><p>The UIPopoverBackgroundView class provides the background appearance for a popover. This class must be subclassed before it can be used. The implementation of your subclass is responsible for providing the border decoration and arrow for the popover. Subclasses must override all declared properties and methods to provide information about where to lay out the corresponding popover content and arrow. Subclasses must also provide implementations for all methods of the UIPopoverBackgroundViewMethods protocol.</p><pre><code>UIPopoverBackgroundView</code></pre></section>	https://developer.apple.com/reference/uikit/uipopoverbackgroundview
UIPopoverBackgroundViewMethods	A							https://developer.apple.com/reference/uikit/uipopoverbackgroundviewmethods			<section class="prog__container"><p>The UIPopoverBackgroundViewMethods protocol defines methods that UIPopoverBackgroundView subclasses must implement. The methods in this protocol are called only once when the popover is presented. All methods of this protocol are required. </p><pre><code>UIPopoverBackgroundViewMethods</code></pre></section>	https://developer.apple.com/reference/uikit/uipopoverbackgroundviewmethods
UIPopoverControllerDelegate	A							https://developer.apple.com/reference/uikit/uipopovercontrollerdelegate			<section class="prog__container"><p>The UIPopoverControllerDelegate protocol defines the methods you can implement for the delegate of a UIPopoverController object. Popover controllers notify their delegate whenever user interactions would cause the dismissal of the popover and, in some cases, give the user a chance to prevent that dismissal.</p><pre><code>UIPopoverControllerDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uipopovercontrollerdelegate
UIPopoverPresentationController	A							https://developer.apple.com/reference/uikit/uipopoverpresentationcontroller			<section class="prog__container"><p>A UIPopoverPresentationController object manages the display of content in a popover. From the time a popover is presented until the time it is dismissed, UIKit uses an instance of this class to manage the presentation behavior. You use instances of this class as-is to configure aspects of the popover appearance and behavior for view controllers whose presentation style is set to popover. </p><pre><code>UIPopoverPresentationController</code></pre></section>	https://developer.apple.com/reference/uikit/uipopoverpresentationcontroller
UIPopoverPresentationControllerDelegate	A							https://developer.apple.com/reference/uikit/uipopoverpresentationcontrollerdelegate			<section class="prog__container"><p>The methods of the UIPopoverPresentationControllerDelegate protocol let you customize the behavior of a popover-based presentation. A popover presentation controller notifies your delegate at appropriate points during the presentation process. You can use the delegate methods to customize this process and respond to changes dynamically.</p><pre><code>UIPopoverPresentationControllerDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uipopoverpresentationcontrollerdelegate
UIPresentationController	A							https://developer.apple.com/reference/uikit/uipresentationcontroller			<section class="prog__container"><p>A UIPresentationController object provides advanced view and transition management for presented view controllers. From the time a view controller is presented until the time it is dismissed, UIKit uses a presentation controller to manage various aspects of the presentation process for that view controller. The presentation controller can add its own animations on top of those provided by animator objects, it can respond to size changes, and it can manage other aspects of how the view controller is presented onscreen. </p><pre><code>UIPresentationController</code></pre></section>	https://developer.apple.com/reference/uikit/uipresentationcontroller
UIPress	A							https://developer.apple.com/reference/uikit/uipress			<section class="prog__container"><p>A UIPress object represents the presence or movement of a button press on the screen for a particular event. The press specifically encapsulates the pressing of some physically actuated button. All of the press types represent actual physical buttons on one of a variety of remotes. You access UIPress objects through UIEvent objects passed into responder objects for event handling. The gestureRecognizers property returns the gesture recognizers—that is, instances of a concrete subclass of UIGestureRecognizer—that are currently handling the given button press.</p><pre><code>UIPress</code></pre></section>	https://developer.apple.com/reference/uikit/uipress
UIPressesEvent	A							https://developer.apple.com/reference/uikit/uipressesevent			<section class="prog__container"><p>A UIPressesEvent object is an event that describes the state of a set of physical buttons that are available to the device, such as those on an associated remote or game controller.</p><pre><code>UIPressesEvent</code></pre></section>	https://developer.apple.com/reference/uikit/uipressesevent
UIPreviewAction	A							https://developer.apple.com/reference/uikit/uipreviewaction			<section class="prog__container"><p>A preview action, or peek quick action, is displayed below a peek when a user swipes the peek upward. A peek quick action typically selects a deep link to your app and has a title, a style, and a handler.</p><pre><code>init(title: String, style: UIPreviewActionStyle, handler: @escaping (UIPreviewAction, UIViewController) -> Void)</code></pre></section>	https://developer.apple.com/reference/uikit/uipreviewaction
UIPreviewActionGroup	A							https://developer.apple.com/reference/uikit/uipreviewactiongroup			<section class="prog__container"><p>A preview quick action group contains one or more child quick actions, each an instance of the UIPreviewAction class.</p><pre><code>UIPreviewAction</code></pre></section>	https://developer.apple.com/reference/uikit/uipreviewactiongroup
UIPreviewActionItem	A							https://developer.apple.com/reference/uikit/uipreviewactionitem			<section class="prog__container"><p>The UIPreviewActionItem protocol is adopted by the UIPreviewAction and UIPreviewActionGroup classes.</p><pre><code>UIPreviewActionItem</code></pre></section>	https://developer.apple.com/reference/uikit/uipreviewactionitem
UIPreviewInteraction	A							https://developer.apple.com/reference/uikit/uipreviewinteraction			<section class="prog__container"><p>A class that registers a view to provide a custom user experience in response to 3D Touch interactions.</p><pre><code>registerForPreviewing(with:sourceView:)</code></pre></section>	https://developer.apple.com/reference/uikit/uipreviewinteraction
UIPreviewInteractionDelegate	A							https://developer.apple.com/reference/uikit/uipreviewinteractiondelegate			<section class="prog__container"><p>A protocol that provides methods for communicating the progress of a preview interaction.</p><pre><code>delegate</code></pre></section>	https://developer.apple.com/reference/uikit/uipreviewinteractiondelegate
UIPrinter	A							https://developer.apple.com/reference/uikit/uiprinter			<section class="prog__container"><p>A UIPrinter object contains the attributes of a printer on the network. You use a printer object to obtain information about a printer so that you can display that information in your app’s interface. You do not use printer objects to communicate with the printer directly. </p><pre><code>UIPrinter</code></pre></section>	https://developer.apple.com/reference/uikit/uiprinter
UIPrinterPickerController	A							https://developer.apple.com/reference/uikit/uiprinterpickercontroller			<section class="prog__container"><p>A UIPrinterPickerController object displays the system interface for selecting a printer. You can use a printer picker controller to display a list of printers to the user prior to printing a document, photo, or other content. Printer pickers display all pickers normally but you can filter out printers by assigning an appropriate delegate object to the picker before displaying it.</p><pre><code>UIPrinterPickerController</code></pre></section>	https://developer.apple.com/reference/uikit/uiprinterpickercontroller
UIPrinterPickerControllerDelegate	A							https://developer.apple.com/reference/uikit/uiprinterpickercontrollerdelegate			<section class="prog__container"><p>The UIPrinterPickerControllerDelegate protocol defines methods for managing the presentation and dismissal of a printer picker interface. You also use the methods of this protocol to influence the content displayed in the picker and to respond when the user selects a printer. </p><pre><code>UIPrinterPickerControllerDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uiprinterpickercontrollerdelegate
UIPrintFormatter	A							https://developer.apple.com/reference/uikit/uiprintformatter			<section class="prog__container"><p>UIPrintFormatter is an abstract base class for print formatters: objects that lay out custom printable content that can cross page boundaries. Given a print formatter, the printing system can automate the printing of the type of content associated with the print formatter. </p><pre><code>UIPrintFormatter</code></pre></section>	https://developer.apple.com/reference/uikit/uiprintformatter
UIPrintInfo	A							https://developer.apple.com/reference/uikit/uiprintinfo			<section class="prog__container"><p>A UIPrintInfo object encapsulates information about a print job, including printer identifier, job name, output type (photo, normal, grayscale), orientation (portrait or landscape), and any selected duplex mode. This information is used by the printing system when it prints.</p><pre><code>UIPrintInfo</code></pre></section>	https://developer.apple.com/reference/uikit/uiprintinfo
UIPrintInteractionController	A							https://developer.apple.com/reference/uikit/uiprintinteractioncontroller			<section class="prog__container"><p>The shared instance of the UIPrintInteractionController class presents a printing user interface and manages the printing of documents, images, and other printable content in iOS. </p><pre><code>UIPrintInteractionController</code></pre></section>	https://developer.apple.com/reference/uikit/uiprintinteractioncontroller
UIPrintInteractionControllerDelegate	A							https://developer.apple.com/reference/uikit/uiprintinteractioncontrollerdelegate			<section class="prog__container"><p>The UIPrintInteractionControllerDelegate protocol is implemented by the delegate of the UIPrintInteractionController shared instance to perform a number of optional tasks. </p><pre><code>UIPrintInteractionControllerDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uiprintinteractioncontrollerdelegate
UIPrintPageRenderer	A							https://developer.apple.com/reference/uikit/uiprintpagerenderer			<section class="prog__container"><p>A UIPrintPageRenderer object draws pages of content that are to be printed, with or without the assistance of print formatters. </p><pre><code>UIPrintPageRenderer</code></pre></section>	https://developer.apple.com/reference/uikit/uiprintpagerenderer
UIPrintPaper	A							https://developer.apple.com/reference/uikit/uiprintpaper			<section class="prog__container"><p>An instance of the UIPrintPaper class encapsulates the size of paper used for a print job and the rectangle in which content can be printed.</p><pre><code>UIPrintPaper</code></pre></section>	https://developer.apple.com/reference/uikit/uiprintpaper
UIProgressView	A							https://developer.apple.com/reference/uikit/uiprogressview			<section class="prog__container"><p>You use the UIProgressView class to depict the progress of a task over time. An example of a progress bar is the one shown at the bottom of the Mail application when it’s downloading messages.</p><pre><code>UIProgressView</code></pre></section>	https://developer.apple.com/reference/uikit/uiprogressview
UIPushBehavior	A							https://developer.apple.com/reference/uikit/uipushbehavior			<section class="prog__container"><p>A push behavior applies a continuous or instantaneous force to one or more dynamic items, causing those items to change position accordingly.</p><pre><code>UIDynamicItem</code></pre></section>	https://developer.apple.com/reference/uikit/uipushbehavior
UIRectCorner	A							https://developer.apple.com/reference/uikit/uirectcorner			<section class="prog__container"><p>The corners of a rectangle.</p><pre><code>static var topLeft: UIRectCorner</code></pre></section>	https://developer.apple.com/reference/uikit/uirectcorner
UIReferenceLibraryViewController	A							https://developer.apple.com/reference/uikit/uireferencelibraryviewcontroller			<section class="prog__container"><p>A UIReferenceLibraryViewController object provides a dictionary service to look up the definition of a word or term from within an app. It should not be used to display wordlists, create a standalone dictionary app, or republish the content in any form.</p><pre><code>UIReferenceLibraryViewController</code></pre></section>	https://developer.apple.com/reference/uikit/uireferencelibraryviewcontroller
UIRefreshControl	A							https://developer.apple.com/reference/uikit/uirefreshcontrol			<section class="prog__container"><p>A UIRefreshControl object provides a standard control that can be used to initiate the refreshing of a table view’s contents. You link a refresh control to a table through an associated table view controller object. The table view controller handles the work of adding the control to the table’s visual appearance and managing the display of that control in response to appropriate user gestures.</p><pre><code>UIRefreshControl</code></pre></section>	https://developer.apple.com/reference/uikit/uirefreshcontrol
UIRegion	A							https://developer.apple.com/reference/uikit/uiregion			<section class="prog__container"><p>A UIRegion object defines shape for use in UIKit Dynamics. When creating animations, you use regions to define the effective area of a field behavior such as a magnetic or gravitational force. Most regions are rectangular or elliptical in shape, but you can use the methods of this class to create more complex shapes by adding, subtracting, and intersecting other regions.</p><pre><code>UIRegion</code></pre></section>	https://developer.apple.com/reference/uikit/uiregion
UIResponder	A							https://developer.apple.com/reference/uikit/uiresponder			<section class="prog__container"><p>An abstract interface for responding to and handling events. </p><pre><code>UIResponder</code></pre></section>	https://developer.apple.com/reference/uikit/uiresponder
UIRotationGestureRecognizer	A							https://developer.apple.com/reference/uikit/uirotationgesturerecognizer			<section class="prog__container"><p>UIRotationGestureRecognizer is a concrete subclass of UIGestureRecognizer that looks for rotation gestures involving two touches. When the user moves the fingers opposite each other in a circular motion, the underlying view should rotate in a corresponding direction and speed.</p><pre><code>UIRotationGestureRecognizer</code></pre></section>	https://developer.apple.com/reference/uikit/uirotationgesturerecognizer
UIScreen	A							https://developer.apple.com/reference/uikit/uiscreen			<section class="prog__container"><p>A UIScreen object defines the properties associated with a hardware-based display. iOS devices have a main screen and zero or more attached screens. A tvOS device has a main screen for the television connected to the device. Use this class to obtain screen objects for each display attached to the device. Each screen object defines the bounds rectangle for the associated display and other interesting properties such as its brightness.</p><pre><code>UIScreen</code></pre></section>	https://developer.apple.com/reference/uikit/uiscreen
UIScreenEdgePanGestureRecognizer	A							https://developer.apple.com/reference/uikit/uiscreenedgepangesturerecognizer			<section class="prog__container"><p>A UIScreenEdgePanGestureRecognizer looks for panning (dragging) gestures that start near an edge of the screen. The system uses screen edge gestures in some cases to initiate view controller transitions. You can use this class to replicate the same gesture behavior for your own actions. </p><pre><code>UIScreenEdgePanGestureRecognizer</code></pre></section>	https://developer.apple.com/reference/uikit/uiscreenedgepangesturerecognizer
UIScreenMode	A							https://developer.apple.com/reference/uikit/uiscreenmode			<section class="prog__container"><p>A UIScreenMode object represents a possible set of attributes that can be applied to a UIScreen object. The object encapsulates information about the size of the screen’s underlying display buffer and the aspect ratio it uses for individual pixels. </p><pre><code>UIScreenMode</code></pre></section>	https://developer.apple.com/reference/uikit/uiscreenmode
UIScrollView	A							https://developer.apple.com/reference/uikit/uiscrollview			<section class="prog__container"><p>The UIScrollView class provides support for displaying content that is larger than the size of the application’s window. It enables users to scroll within that content by making swiping gestures, and to zoom in and back from portions of the content by making pinching gestures.</p><pre><code>UIScrollView</code></pre></section>	https://developer.apple.com/reference/uikit/uiscrollview
UIScrollViewAccessibilityDelegate	A							https://developer.apple.com/reference/uikit/uiscrollviewaccessibilitydelegate			<section class="prog__container"><p>The UIScrollViewAccessibilityDelegate protocol defines methods you can implement to provide accessibility information for a scrollview.</p><pre><code>UIScrollViewAccessibilityDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uiscrollviewaccessibilitydelegate
UIScrollViewDelegate	A							https://developer.apple.com/reference/uikit/uiscrollviewdelegate			<section class="prog__container"><p>The methods declared by the UIScrollViewDelegate protocol allow the adopting delegate to respond to messages from the UIScrollView class and thus respond to, and in some affect, operations such as scrolling, zooming, deceleration of scrolled content, and scrolling animations.</p><pre><code>UIScrollViewDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uiscrollviewdelegate
UISearchBar	A							https://developer.apple.com/reference/uikit/uisearchbar			<section class="prog__container"><p>The UISearchBar class implements a text field control for text-based searches. The control provides a text field for entering text, a search button, a bookmark button, and a cancel button. The UISearchBar object does not actually perform any searches. You use a delegate, an object conforming to the UISearchBarDelegate protocol, to implement the actions when text is entered and buttons are clicked. </p><pre><code>UISearchBar</code></pre></section>	https://developer.apple.com/reference/uikit/uisearchbar
UISearchBarDelegate	A							https://developer.apple.com/reference/uikit/uisearchbardelegate			<section class="prog__container"><p>The UISearchBarDelegate protocol defines the optional methods you implement to make a UISearchBar control functional. A UISearchBar object provides the user interface for a search field on a bar, but it’s the application’s responsibility to implement the actions when buttons are tapped. At a minimum, the delegate needs to perform the actual search when text is entered in the text field.</p><pre><code>UISearchBarDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uisearchbardelegate
UISearchContainerViewController	A							https://developer.apple.com/reference/uikit/uisearchcontainerviewcontroller			<section class="prog__container"><p>A UISearchContainerViewController object is a wrapper for search results that you want to embed in a container view controller. Although you can present a UISearchController object modally, you should never push one onto a navigation controller’s stack or use one as a child of another container view controller. Instead, embed an instance of this class and let it manage the presentation of the search controller’s content.</p><pre><code>UISearchContainerViewController</code></pre></section>	https://developer.apple.com/reference/uikit/uisearchcontainerviewcontroller
UISearchController	A							https://developer.apple.com/reference/uikit/uisearchcontroller			<section class="prog__container"><p>A UISearchController object manages the display of search results based on interactions with a search bar. You use a search controller in tandem with your existing view controllers. When you have a view controller with searchable content, incorporate the search bar of a UISearchController object into your view controller’s interface. When the user interacts with that search bar, the search controller automatically displays a new view controller with the search results that you specify.</p><pre><code>UISearchController</code></pre></section>	https://developer.apple.com/reference/uikit/uisearchcontroller
UISearchControllerDelegate	A							https://developer.apple.com/reference/uikit/uisearchcontrollerdelegate			<section class="prog__container"><p>This protocol defines delegate methods for UISearchController objects.</p><pre><code>UISearchController</code></pre></section>	https://developer.apple.com/reference/uikit/uisearchcontrollerdelegate
UISearchDisplayDelegate	A							https://developer.apple.com/reference/uikit/uisearchdisplaydelegate			<section class="prog__container"><p>Important: UISearchDisplayDelegate is deprecated in iOS 8. (Note that UISearchDisplayController is also deprecated.) To manage the presentation of a search bar and display search results in iOS 8 and later, instead use UISearchControllerDelegate.</p><pre><code>UISearchDisplayDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uisearchdisplaydelegate
UISearchResultsUpdating	A							https://developer.apple.com/reference/uikit/uisearchresultsupdating			<section class="prog__container"><p>Use the UISearchResultsUpdating protocol to update search results based on information the user enters into the search bar.</p><pre><code>UISearchResultsUpdating</code></pre></section>	https://developer.apple.com/reference/uikit/uisearchresultsupdating
UISegmentedControl	A							https://developer.apple.com/reference/uikit/uisegmentedcontrol			<section class="prog__container"><p>A UISegmentedControl object is a horizontal control made of multiple segments, each segment functioning as a discrete button. A segmented control affords a compact means to group together a number of controls.</p><pre><code>UISegmentedControl</code></pre></section>	https://developer.apple.com/reference/uikit/uisegmentedcontrol
UISelectionFeedbackGenerator	A							https://developer.apple.com/reference/uikit/uiselectionfeedbackgenerator			<section class="prog__container"><p>A concrete UIFeedbackGenerator subclass that creates haptics to indicate a change in selection. </p><pre><code>UIFeedbackGenerator</code></pre></section>	https://developer.apple.com/reference/uikit/uiselectionfeedbackgenerator
UISimpleTextPrintFormatter	A							https://developer.apple.com/reference/uikit/uisimpletextprintformatter			<section class="prog__container"><p>Instances of the UISimpleTextPrintFormatter class lay out plain text for printing, possibly over multiple pages. The class allows you to specify global font, color, and text alignment properties for the printed text.</p><pre><code>UISimpleTextPrintFormatter</code></pre></section>	https://developer.apple.com/reference/uikit/uisimpletextprintformatter
UISlider	A							https://developer.apple.com/reference/uikit/uislider			<section class="prog__container"><p>A visual control used to select a single value from a continuous range of values.</p><pre><code>UISlider</code></pre></section>	https://developer.apple.com/reference/uikit/uislider
UISnapBehavior	A							https://developer.apple.com/reference/uikit/uisnapbehavior			<section class="prog__container"><p>A snap behavior defines a dynamic item’s movement to a specified point; the movement proceeds with a spring-like effect, ending with an oscillation whose amount you can set.</p><pre><code>UIDynamicItem</code></pre></section>	https://developer.apple.com/reference/uikit/uisnapbehavior
UISplitViewController	A							https://developer.apple.com/reference/uikit/uisplitviewcontroller			<section class="prog__container"><p>The UISplitViewController class is a container view controller that presents a master-detail interface. In a master-detail interface, changes in the primary view controller (the master) drive changes in a secondary view controller (the detail). The two view controllers can be arranged so that they are side-by-side, so that only one at a time is visible, or so that one only partially hides the other. In iOS 8 and later, you can use the UISplitViewController class on all iOS devices; in previous versions of iOS, the class is available only on iPad.</p><pre><code>UISplitViewController</code></pre></section>	https://developer.apple.com/reference/uikit/uisplitviewcontroller
UISplitViewControllerDelegate	A							https://developer.apple.com/reference/uikit/uisplitviewcontrollerdelegate			<section class="prog__container"><p>The UISplitViewControllerDelegate protocol defines methods that allow you to manage changes to a split view interface. Use the methods of this protocol to respond to changes in the current display mode and to the current interface orientation. When the split view interface collapses and expands, or when a new view controller is added to the interface, you can also use these methods to configure the child view controllers appropriately.</p><pre><code>UISplitViewControllerDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uisplitviewcontrollerdelegate
UISpringTimingParameters	A							https://developer.apple.com/reference/uikit/uispringtimingparameters			<section class="prog__container"><p>Specifies timing information for animations that mimics the behavior of a spring. </p><pre><code>UISpringTimingParameters</code></pre></section>	https://developer.apple.com/reference/uikit/uispringtimingparameters
UIStackView	A							https://developer.apple.com/reference/uikit/uistackview			<section class="prog__container"><p>Provides a streamlined interface for laying out a collection of views in either a column or a row. </p><pre><code>arrangedSubviews</code></pre></section>	https://developer.apple.com/reference/uikit/uistackview
UIStateRestoring	A							https://developer.apple.com/reference/uikit/uistaterestoring			<section class="prog__container"><p>The UIStateRestoring protocol lets you include any object in your state restoration archives. You can add state restoring objects to an archive directly or by referencing them from another object that is preserved, such as a view controller. The methods of the protocol let you save enough information about the object to find or recreate it during the next launch cycle. </p><pre><code>UIStateRestoring</code></pre></section>	https://developer.apple.com/reference/uikit/uistaterestoring
UIStepper	A							https://developer.apple.com/reference/uikit/uistepper			<section class="prog__container"><p>A stepper control provides a user interface for incrementing or decrementing a value. A stepper displays two buttons, one with a minus (“–”) symbol and one with a plus (“+”) symbol.</p><pre><code>var isContinuous: Bool</code></pre></section>	https://developer.apple.com/reference/uikit/uistepper
UIStoryboard	A							https://developer.apple.com/reference/uikit/uistoryboard			<section class="prog__container"><p>A UIStoryboard object encapsulates the view controller graph stored in an Interface Builder storyboard resource file. This view controller graph represents the view controllers for all or part of your application’s user interface. Normally, view controllers in a storyboard are instantiated and created automatically in response to actions defined within the storyboard itself. However, you can use a storyboard object to instantiate the initial view controller in a storyboard file or instantiate other view controllers that you want to present programmatically.</p><pre><code>UIStoryboard</code></pre></section>	https://developer.apple.com/reference/uikit/uistoryboard
UIStoryboardSegue	A							https://developer.apple.com/reference/uikit/uistoryboardsegue			<section class="prog__container"><p>Prepares for and performs the visual transition between two view controllers. </p><pre><code>UIStoryboardSegue</code></pre></section>	https://developer.apple.com/reference/uikit/uistoryboardsegue
UIStoryboardUnwindSegueSource	A							https://developer.apple.com/reference/uikit/uistoryboardunwindseguesource			<section class="prog__container"><p>A UIStoryboardUnwindSegueSource object encapsulates information about an unwind segue. The information includes the view controller being dismissed by the unwind segue and the action method responsible for the dismissal.</p><pre><code>UIStoryboardUnwindSegueSource</code></pre></section>	https://developer.apple.com/reference/uikit/uistoryboardunwindseguesource
UISwipeGestureRecognizer	A							https://developer.apple.com/reference/uikit/uiswipegesturerecognizer			<section class="prog__container"><p>UISwipeGestureRecognizer is a concrete subclass of UIGestureRecognizer that looks for swiping gestures in one or more directions. A swipe is a discrete gesture, and thus the associated action message is sent only once per gesture. </p><pre><code>UISwipeGestureRecognizer</code></pre></section>	https://developer.apple.com/reference/uikit/uiswipegesturerecognizer
UISwitch	A							https://developer.apple.com/reference/uikit/uiswitch			<section class="prog__container"><p>You use the UISwitch class to create and manage the On/Off buttons used, for example, in the Settings app for options such as Airplane Mode and Bluetooth. These objects are known as switches.</p><pre><code>UISwitch</code></pre></section>	https://developer.apple.com/reference/uikit/uiswitch
UITabBar	A							https://developer.apple.com/reference/uikit/uitabbar			<section class="prog__container"><p>A UITabBar object is a control for selecting between different subtasks, views, or modes in an app. Normally, you use tab bars in conjunction with a UITabBarController object, but you can also use them as standalone controls in your app. Tab bars always appear across the bottom edge of the screen and display the contents of one or more UITabBarItem objects. A tab bar’s appearance can be customized with a background image or tint color to suit the needs of your interface. Tapping an item selects and highlights that item, and you use the selection of the item to enable the corresponding mode for your app. </p><pre><code>UITabBar</code></pre></section>	https://developer.apple.com/reference/uikit/uitabbar
UITabBarController	A							https://developer.apple.com/reference/uikit/uitabbarcontroller			<section class="prog__container"><p>The UITabBarController class implements a specialized view controller that manages a radio-style selection interface. This tab bar interface displays tabs at the bottom of the window for selecting between the different modes and for displaying the views for that mode. This class is generally used as-is but may be subclassed in iOS 6 and later.</p><pre><code>UITabBarController</code></pre></section>	https://developer.apple.com/reference/uikit/uitabbarcontroller
UITabBarControllerDelegate	A							https://developer.apple.com/reference/uikit/uitabbarcontrollerdelegate			<section class="prog__container"><p>You use the UITabBarControllerDelegate protocol when you want to augment the behavior of a tab bar. In particular, you can use it to determine whether specific tabs should be selected, to perform actions after a tab is selected, or to perform actions before or after the user customizes the order of the tabs. After implementing these methods in your custom object, you should then assign that object to the delegate property of the corresponding UITabBarController object.</p><pre><code>UITabBarControllerDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uitabbarcontrollerdelegate
UITabBarDelegate	A							https://developer.apple.com/reference/uikit/uitabbardelegate			<section class="prog__container"><p>The UITabBarDelegate protocol defines optional methods for a delegate of a UITabBar object. The UITabBar class provides the ability for the user to reorder, remove, and add items to the tab bar; this process is referred to as customizing the tab bar. The tab bar delegate receives messages when customizing occurs. </p><pre><code>UITabBarDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uitabbardelegate
UITabBarItem	A							https://developer.apple.com/reference/uikit/uitabbaritem			<section class="prog__container"><p>The UITabBarItem class implements an item on a UITabBar object. A tab bar operates strictly in radio mode, where one item is selected at a time—tapping a tab bar item toggles the view above the tab bar. You can also specify a badge value on the tab bar item for adding additional visual information—for example, the Messages app uses a badge on the item to show the number of new messages. This class also provides a number of system defaults for creating items.</p><pre><code>UITabBarItem</code></pre></section>	https://developer.apple.com/reference/uikit/uitabbaritem
UITableView	A							https://developer.apple.com/reference/uikit/uitableview			<section class="prog__container"><p>Displays hierarchical lists of information and supports selection and editing of the information.</p><pre><code>UITableView</code></pre></section>	https://developer.apple.com/reference/uikit/uitableview
UITableViewCell	A							https://developer.apple.com/reference/uikit/uitableviewcell			<section class="prog__container"><p>The UITableViewCell class defines the attributes and behavior of the cells that appear in UITableView objects. This class includes properties and methods for setting and managing cell content and background (including text, images, and custom views), managing the cell selection and highlight state, managing accessory views, and initiating the editing of the cell contents.</p><pre><code>UITableViewCell</code></pre></section>	https://developer.apple.com/reference/uikit/uitableviewcell
UITableViewController	A							https://developer.apple.com/reference/uikit/uitableviewcontroller			<section class="prog__container"><p>A controller object that manages a table view. </p><pre><code>UITableViewController</code></pre></section>	https://developer.apple.com/reference/uikit/uitableviewcontroller
UITableViewDataSource	A							https://developer.apple.com/reference/uikit/uitableviewdatasource			<section class="prog__container"><p>The UITableViewDataSource protocol is adopted by an object that mediates the application’s data model for a UITableView object. The data source provides the table-view object with the information it needs to construct and modify a table view. </p><pre><code>UITableViewDataSource</code></pre></section>	https://developer.apple.com/reference/uikit/uitableviewdatasource
UITableViewDataSourcePrefetching	A							https://developer.apple.com/reference/uikit/uitableviewdatasourceprefetching			<section class="prog__container"><p>A protocol that provides advance warning of the data requirements for a table view, allowing the triggers of asynchronous data load operations.</p><pre><code>tableView(_:cellForRowAt:)</code></pre></section>	https://developer.apple.com/reference/uikit/uitableviewdatasourceprefetching
UITableViewDelegate	A							https://developer.apple.com/reference/uikit/uitableviewdelegate			<section class="prog__container"><p>The delegate of a UITableView object must adopt the UITableViewDelegate protocol. Optional methods of the protocol allow the delegate to manage selections, configure section headings and footers, help to delete and reorder cells, and perform other actions.</p><pre><code>UITableView</code></pre></section>	https://developer.apple.com/reference/uikit/uitableviewdelegate
UITableViewFocusUpdateContext	A							https://developer.apple.com/reference/uikit/uitableviewfocusupdatecontext			<section class="prog__container"><p>The UITableViewFocusUpdateContext is a subclass of the UIFocusUpdateContext and provide information relevant to a specific focus update from one view to another. These subclasses provide extra information that is only relevant to focus updates involving tableviews. Instances of this class are ephemeral and are usually discarded after the update is finished.</p><pre><code>UITableViewFocusUpdateContext</code></pre></section>	https://developer.apple.com/reference/uikit/uitableviewfocusupdatecontext
UITableViewHeaderFooterView	A							https://developer.apple.com/reference/uikit/uitableviewheaderfooterview			<section class="prog__container"><p>The UITableViewHeaderFooterView class implements a reusable view that can be placed at the top or bottom of a table section. You use headers and footers to display additional information for that section.</p><pre><code>UITableViewHeaderFooterView</code></pre></section>	https://developer.apple.com/reference/uikit/uitableviewheaderfooterview
UITableViewRowAction	A							https://developer.apple.com/reference/uikit/uitableviewrowaction			<section class="prog__container"><p>A UITableViewRowAction object defines a single action to present when the user swipes horizontally in a table row. In an editable table, performing a horizontal swipe in a row reveals a button to delete the row by default. This class lets you define one or more custom actions to display for a given row in your table. Each instance of this class represents a single action to perform and includes the text, formatting information, and behavior for the corresponding button.</p><pre><code>UITableViewRowAction</code></pre></section>	https://developer.apple.com/reference/uikit/uitableviewrowaction
UITapGestureRecognizer	A							https://developer.apple.com/reference/uikit/uitapgesturerecognizer			<section class="prog__container"><p>UITapGestureRecognizer is a concrete subclass of UIGestureRecognizer that looks for single or multiple taps. For the gesture to be recognized, the specified number of fingers must tap the view a specified number of times. </p><pre><code>UITapGestureRecognizer</code></pre></section>	https://developer.apple.com/reference/uikit/uitapgesturerecognizer
UITextChecker	A							https://developer.apple.com/reference/uikit/uitextchecker			<section class="prog__container"><p>You use instances of the UITextChecker class to check a string (usually the text of a document) for misspelled words. </p><pre><code>UITextChecker</code></pre></section>	https://developer.apple.com/reference/uikit/uitextchecker
UITextDocumentProxy	A							https://developer.apple.com/reference/uikit/uitextdocumentproxy			<section class="prog__container"><p>A text document proxy provides textual context to a custom keyboard (which is based on the UIInputViewController class) by way of the keyboard’s textDocumentProxy property.</p><pre><code>UIInputViewController</code></pre></section>	https://developer.apple.com/reference/uikit/uitextdocumentproxy
UITextField	A							https://developer.apple.com/reference/uikit/uitextfield			<section class="prog__container"><p>A UITextField object displays an editable text area in your interface. You use text fields to gather text-based input from the user using the onscreen keyboard. The keyboard is configurable for many different types of input such as plain text, emails, numbers, and so on. Text fields use the target-action mechanism and a delegate object to report changes made during the course of editing. </p><pre><code>UITextField</code></pre></section>	https://developer.apple.com/reference/uikit/uitextfield
UITextFieldDelegate	A							https://developer.apple.com/reference/uikit/uitextfielddelegate			<section class="prog__container"><p>The UITextFieldDelegate protocol defines methods that you use to manage the editing and validation of text in a UITextField object. All of the methods of this protocol are optional. </p><pre><code>UITextFieldDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uitextfielddelegate
UITextInput	A							https://developer.apple.com/reference/uikit/uitextinput			<section class="prog__container"><p>The protocol you implement to interact with the text input system and enable features such as autocorrection and multistage text input in documents.  </p><pre><code>UITextInput</code></pre></section>	https://developer.apple.com/reference/uikit/uitextinput
UITextInputAssistantItem	A							https://developer.apple.com/reference/uikit/uitextinputassistantitem			<section class="prog__container"><p>A UITextInputAssistantItem object manages bar button items displayed in the shortcuts bar above the keyboard on iPad. Use this object to add app-specific actions to the shortcuts bar. The center of the shortcuts bar displays typing suggestions for the user. You can install custom bar button items that lead or trail the typing suggestions. </p><pre><code>UITextInputAssistantItem</code></pre></section>	https://developer.apple.com/reference/uikit/uitextinputassistantitem
UITextInputDelegate	A							https://developer.apple.com/reference/uikit/uitextinputdelegate			<section class="prog__container"><p>The text input delegate acts as an intermediary between a document and the text input system, conveying notifications of pending or transpired changes in text and selection in the document. </p><pre><code>inputDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uitextinputdelegate
UITextInputMode	A							https://developer.apple.com/reference/uikit/uitextinputmode			<section class="prog__container"><p>An instance of the UITextInputMode class represents the current text-input mode. You can use this object to determine the primary language currently being used for text input.</p><pre><code>UITextInputMode</code></pre></section>	https://developer.apple.com/reference/uikit/uitextinputmode
UITextInputStringTokenizer	A							https://developer.apple.com/reference/uikit/uitextinputstringtokenizer			<section class="prog__container"><p>The UITextInputStringTokenizer class is a base implementation of the UITextInputTokenizer protocol provided by the UIKit framework.</p><pre><code>UITextInputStringTokenizer</code></pre></section>	https://developer.apple.com/reference/uikit/uitextinputstringtokenizer
UITextInputTokenizer	A							https://developer.apple.com/reference/uikit/uitextinputtokenizer			<section class="prog__container"><p>An instance of a class that adopts the UITextInputTokenizer protocol is a tokenizer; a tokenizer allows the text input system to evaluate text units of different granularities. Granularities of text units are always evaluated with reference to a storage or reference direction.</p><pre><code>UITextInputTokenizer</code></pre></section>	https://developer.apple.com/reference/uikit/uitextinputtokenizer
UITextInputTraits	A							https://developer.apple.com/reference/uikit/uitextinputtraits			<section class="prog__container"><p>The UITextInputTraits protocol defines features associated with keyboard input to a text object. </p><pre><code>UITextInputTraits</code></pre></section>	https://developer.apple.com/reference/uikit/uitextinputtraits
UITextPosition	A							https://developer.apple.com/reference/uikit/uitextposition			<section class="prog__container"><p>A UITextPosition object represents a position in a text container; in other words, it is an index into the backing string in a text-displaying view. </p><pre><code>UITextPosition</code></pre></section>	https://developer.apple.com/reference/uikit/uitextposition
UITextRange	A							https://developer.apple.com/reference/uikit/uitextrange			<section class="prog__container"><p>A UITextRange object represents a range of characters in a text container; in other words, it identifies a starting index and an ending index in string backing a text-entry object. </p><pre><code>UITextRange</code></pre></section>	https://developer.apple.com/reference/uikit/uitextrange
UITextSelectionRect	A							https://developer.apple.com/reference/uikit/uitextselectionrect			<section class="prog__container"><p>The UITextSelectionRect class encapsulates information about a selected range of text in a document. This class is an abstract class and must be subclassed to be used. The system text input views provide their own concrete implementations of this class. </p><pre><code>UITextSelectionRect</code></pre></section>	https://developer.apple.com/reference/uikit/uitextselectionrect
UITextView	A							https://developer.apple.com/reference/uikit/uitextview			<section class="prog__container"><p>The UITextView class implements the behavior for a scrollable, multiline text region. The class supports the display of text using custom style information and also supports text editing. You typically use a text view to display multiple lines of text, such as when displaying the body of a large text document. </p><pre><code>UITextView</code></pre></section>	https://developer.apple.com/reference/uikit/uitextview
UITextViewDelegate	A							https://developer.apple.com/reference/uikit/uitextviewdelegate			<section class="prog__container"><p>The UITextViewDelegate protocol defines a set of optional methods you can use to receive editing-related messages for UITextView objects. All of the methods in this protocol are optional. You can use them in situations where you might want to adjust the text being edited (such as in the case of a spell checker program) or modify the intended insertion point.</p><pre><code>UITextViewDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uitextviewdelegate
UITimingCurveProvider	A							https://developer.apple.com/reference/uikit/uitimingcurveprovider			<section class="prog__container"><p>Provides the timing information needed to perform animations. </p><pre><code>UITimingCurveProvider</code></pre></section>	https://developer.apple.com/reference/uikit/uitimingcurveprovider
UIToolbar	A							https://developer.apple.com/reference/uikit/uitoolbar			<section class="prog__container"><p>A toolbar is a control that displays one or more buttons, called toolbar items. A toolbar momentarily highlights or does not change the appearance of an item when tapped.</p><pre><code>UIBarButtonItem</code></pre></section>	https://developer.apple.com/reference/uikit/uitoolbar
UIToolbarDelegate	A							https://developer.apple.com/reference/uikit/uitoolbardelegate			<section class="prog__container"><p>The UIToolbarDelegate protocol defines the interface that toolbar delegate objects implement to manage the toolbar behavior. This protocol declares no methods of its own but conforms to the UIBarPositioningDelegate protocol to support the positioning of a toolbar when it is moved to a window.</p><pre><code>UIToolbarDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uitoolbardelegate
UITouch	A							https://developer.apple.com/reference/uikit/uitouch			<section class="prog__container"><p>An object representing the location, size, movement, and force of a touch occuring on the screen. </p><pre><code>UIEvent</code></pre></section>	https://developer.apple.com/reference/uikit/uitouch
UITraitCollection	A							https://developer.apple.com/reference/uikit/uitraitcollection			<section class="prog__container"><p> A trait collection describes the iOS interface environment for your app, including traits such as horizontal and vertical size class, display scale, and user interface idiom. To create an adaptive interface, write code to adjust your app’s layout according to changes in these traits.</p><pre><code>traitCollection</code></pre></section>	https://developer.apple.com/reference/uikit/uitraitcollection
UITraitEnvironment	A							https://developer.apple.com/reference/uikit/uitraitenvironment			<section class="prog__container"><p>The iOS interface environment, which includes traits such as horizontal and vertical size class, display scale, and user interface idiom, is available to apps through the UITraitEnvironment protocol. The following interface classes adopt this protocol: UIScreen, UIWindow, UIViewController, UIPresentationController, and UIView.</p><pre><code>UITraitEnvironment</code></pre></section>	https://developer.apple.com/reference/uikit/uitraitenvironment
UIVibrancyEffect	A							https://developer.apple.com/reference/uikit/uivibrancyeffect			<section class="prog__container"><p>A UIVibrancyEffect object amplifies and adjusts the color of the content layered behind a UIVisualEffectView object, allowing the content placed inside of the contentView to become more vivid. </p><pre><code>UIVibrancyEffect</code></pre></section>	https://developer.apple.com/reference/uikit/uivibrancyeffect
UIVideoEditorController	A							https://developer.apple.com/reference/uikit/uivideoeditorcontroller			<section class="prog__container"><p>A UIVideoEditorController object, or video editor, manages the system-supplied user interface for trimming video frames from the start and end of a previously recorded movie as well as reencoding to lower quality. The object manages user interactions and provides the filesystem path of the edited movie to your delegate object (see UIVideoEditorControllerDelegate). The features of the UIVideoEditorController class are available only on devices that support video recording.</p><pre><code>UIVideoEditorController</code></pre></section>	https://developer.apple.com/reference/uikit/uivideoeditorcontroller
UIVideoEditorControllerDelegate	A							https://developer.apple.com/reference/uikit/uivideoeditorcontrollerdelegate			<section class="prog__container"><p>The UIVideoEditorControllerDelegate protocol defines methods that your delegate object must implement to respond to the video editor. The methods of this protocol notify your delegate when the system has saved an edited movie or the user has cancelled editing to discard any changes. There is also a method for responding to errors encountered by the video editor.</p><pre><code>UIVideoEditorControllerDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uivideoeditorcontrollerdelegate
UIView	A							https://developer.apple.com/reference/uikit/uiview			<section class="prog__container"><p>The UIView class defines a rectangular area on the screen and the interfaces for managing the content in that area.</p><pre><code>UIView</code></pre></section>	https://developer.apple.com/reference/uikit/uiview
UIViewAnimating	A							https://developer.apple.com/reference/uikit/uiviewanimating			<section class="prog__container"><p>Defines methods for implementing custom animator objects.</p><pre><code>UIViewAnimating</code></pre></section>	https://developer.apple.com/reference/uikit/uiviewanimating
UIViewController	A							https://developer.apple.com/reference/uikit/uiviewcontroller			<section class="prog__container"><p>Provides the infrastructure for managing the views of your UIKit app. </p><pre><code>UIViewController</code></pre></section>	https://developer.apple.com/reference/uikit/uiviewcontroller
UIViewControllerAnimatedTransitioning	A							https://developer.apple.com/reference/uikit/uiviewcontrolleranimatedtransitioning			<section class="prog__container"><p>Adopt the UIViewControllerAnimatedTransitioning protocol in objects that implement the animations for a custom view controller transition. The methods in this protocol let you define an animator object, which creates the animations for transitioning a view controller on or off screen in a fixed amount of time. The animations you create using this protocol must not be interactive. To create interactive transitions, you must combine your animator object with another object that controls the timing of your animations.</p><pre><code>UIViewControllerAnimatedTransitioning</code></pre></section>	https://developer.apple.com/reference/uikit/uiviewcontrolleranimatedtransitioning
UIViewControllerContextTransitioning	A							https://developer.apple.com/reference/uikit/uiviewcontrollercontexttransitioning			<section class="prog__container"><p>The UIViewControllerContextTransitioning protocol’s methods provide contextual information for transition animations between view controllers. Do not adopt this protocol in your own classes, nor should you directly create objects that adopt this protocol. During a transition, the animator objects involved in that transition receive a fully configured context object from UIKit. Custom animator objects—objects that adopt the UIViewControllerAnimatedTransitioning or UIViewControllerInteractiveTransitioning protocol—should simply retrieve the information they need from the provided object.</p><pre><code>UIViewControllerContextTransitioning</code></pre></section>	https://developer.apple.com/reference/uikit/uiviewcontrollercontexttransitioning
UIViewControllerInteractiveTransitioning	A							https://developer.apple.com/reference/uikit/uiviewcontrollerinteractivetransitioning			<section class="prog__container"><p>To enable an object (such as a navigation controller) to drive a view controller transition, configure a custom class to adopt the UIViewControllerInteractiveTransitioning protocol. An object that supports this protocol is called an interactive transition delegate.</p><pre><code>UIViewControllerInteractiveTransitioning</code></pre></section>	https://developer.apple.com/reference/uikit/uiviewcontrollerinteractivetransitioning
UIViewControllerPreviewing	A							https://developer.apple.com/reference/uikit/uiviewcontrollerpreviewing			<section class="prog__container"><p>This protocol defines the interface for configuring a previewing view controller on devices that support 3D Touch.</p><pre><code>registerForPreviewing(with:sourceView:)</code></pre></section>	https://developer.apple.com/reference/uikit/uiviewcontrollerpreviewing
UIViewControllerPreviewingDelegate	A							https://developer.apple.com/reference/uikit/uiviewcontrollerpreviewingdelegate			<section class="prog__container"><p>Implement the methods of this protocol to respond, with a preview view controller and a commit view controller, to the user pressing a view object on the screen of a device that supports 3D Touch.</p><pre><code>func previewingContext(UIViewControllerPreviewing, viewControllerForLocation: CGPoint)</code></pre></section>	https://developer.apple.com/reference/uikit/uiviewcontrollerpreviewingdelegate
UIViewControllerRestoration	A							https://developer.apple.com/reference/uikit/uiviewcontrollerrestoration			<section class="prog__container"><p>The UIViewControllerRestoration protocol should be adopted by classes that act as "restoration classes” for view controllers during the state restoration process. The method in this protocol should be used to create the view controller, if it does not yet exist, or return an existing view controller object, if one does exist.</p><pre><code>UIViewControllerRestoration</code></pre></section>	https://developer.apple.com/reference/uikit/uiviewcontrollerrestoration
UIViewControllerTransitionCoordinator	A							https://developer.apple.com/reference/uikit/uiviewcontrollertransitioncoordinator			<section class="prog__container"><p>An object that adopts the UIViewControllerTransitionCoordinator protocol provides support for animations associated with a view controller transition. Typically, you do not adopt this protocol in your own classes. When you present or dismiss a view controller, UIKit creates a transition coordinator object automatically and assigns it to the view controller’s transitionCoordinator property. That transition coordinator object is ephemeral and lasts for the duration of the transition animation. </p><pre><code>UIViewControllerTransitionCoordinator</code></pre></section>	https://developer.apple.com/reference/uikit/uiviewcontrollertransitioncoordinator
UIViewControllerTransitionCoordinatorContext	A							https://developer.apple.com/reference/uikit/uiviewcontrollertransitioncoordinatorcontext			<section class="prog__container"><p>An object that conforms to the UIViewControllerTransitionCoordinatorContext protocol provides information about an in-progress view controller transition. Do not adopt this protocol in your own classes. UIKit creates an object that adopts this protocol and makes it available to your code when you animate changes using a transition coordinator object.</p><pre><code>UIViewControllerTransitionCoordinatorContext</code></pre></section>	https://developer.apple.com/reference/uikit/uiviewcontrollertransitioncoordinatorcontext
UIViewControllerTransitioningDelegate	A							https://developer.apple.com/reference/uikit/uiviewcontrollertransitioningdelegate			<section class="prog__container"><p>An object that implements the UIViewControllerTransitioningDelegate protocol vends the objects used to manage a fixed-length or interactive transition between view controllers. When you want to present a view controller using a custom modal presentation type, set its modalPresentationStyle property to custom and assign an object that conforms to this protocol to its transitioningDelegate property. When you present that view controller, UIKit queries your transitioning delegate for the objects to use when animating the view controller into position.</p><pre><code>UIViewControllerTransitioningDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uiviewcontrollertransitioningdelegate
UIViewImplicitlyAnimating	A							https://developer.apple.com/reference/uikit/uiviewimplicitlyanimating			<section class="prog__container"><p>Provides methods for modifying an animation while it is running.</p><pre><code>UIViewImplicitlyAnimating</code></pre></section>	https://developer.apple.com/reference/uikit/uiviewimplicitlyanimating
UIViewPrintFormatter	A							https://developer.apple.com/reference/uikit/uiviewprintformatter			<section class="prog__container"><p>An instance of the UIViewPrintFormatter class lays out the drawn content of a view for printing. The view’s content can span multiple pages.</p><pre><code>UIViewPrintFormatter</code></pre></section>	https://developer.apple.com/reference/uikit/uiviewprintformatter
UIViewPropertyAnimator	A							https://developer.apple.com/reference/uikit/uiviewpropertyanimator			<section class="prog__container"><p>Animates changes to views and allows the dynamic modification of those animations. </p><pre><code>UIViewPropertyAnimator</code></pre></section>	https://developer.apple.com/reference/uikit/uiviewpropertyanimator
UIVisualEffect	A							https://developer.apple.com/reference/uikit/uivisualeffect			<section class="prog__container"><p>This class contains no methods and is intended as a way to initialize a UIVisualEffectView with UIBlurEffect and UIVibrancyEffect objects.</p><pre><code>UIVisualEffectView</code></pre></section>	https://developer.apple.com/reference/uikit/uivisualeffect
UIVisualEffectView	A							https://developer.apple.com/reference/uikit/uivisualeffectview			<section class="prog__container"><p>A UIVisualEffectView object gives you an easy way implement some complex visual effects. Depending on the desired effect, the effect may affect content layered behind the view or content added to the visual effect view’s contentView.</p><pre><code>UIVisualEffectView</code></pre></section>	https://developer.apple.com/reference/uikit/uivisualeffectview
UIWebView	A							https://developer.apple.com/reference/uikit/uiwebview			<section class="prog__container"><p>You can use the UIWebView class to embed web content in your app. To do so, create a UIWebView object, attach it to a window, and send it a request to load web content. You can also use this class to move back and forward in the history of webpages, and you can even set some web content properties programmatically.</p><pre><code>UIWebView</code></pre></section>	https://developer.apple.com/reference/uikit/uiwebview
UIWebViewDelegate	A							https://developer.apple.com/reference/uikit/uiwebviewdelegate			<section class="prog__container"><p>The UIWebViewDelegate protocol defines methods that a delegate of a UIWebView object can optionally implement to intervene when web content is loaded.</p><pre><code>UIWebViewDelegate</code></pre></section>	https://developer.apple.com/reference/uikit/uiwebviewdelegate
UIWindow	A							https://developer.apple.com/reference/uikit/uiwindow			<section class="prog__container"><p>A UIWindow object provides the backdrop for your app’s user interface and provides important event-handling behaviors. Windows do not have any visual appearance of their own, but they are crucial to the presentation of your app’s views. Every view that appears onscreen is enclosed by a window, and each window is independent of the other windows in your app. Events received by your app are initially routed to the appropriate window object, which in turn forwards those events to the appropriate view. Windows work with your view controllers to implement orientation changes and to perform many other tasks that are fundamental to your app’s operation. </p><pre><code>UIWindow</code></pre></section>	https://developer.apple.com/reference/uikit/uiwindow
UNAuthorizationOptions	A							https://developer.apple.com/reference/usernotifications/unauthorizationoptions			<section class="prog__container"><p>Constants for requesting authorization to interact with the user.</p><pre><code>static var badge: UNAuthorizationOptions</code></pre></section>	https://developer.apple.com/reference/usernotifications/unauthorizationoptions
UNCalendarNotificationTrigger	A							https://developer.apple.com/reference/usernotifications/uncalendarnotificationtrigger			<section class="prog__container"><p>Triggers a notification at the specified date and time. </p><pre><code>UNCalendarNotificationTrigger</code></pre></section>	https://developer.apple.com/reference/usernotifications/uncalendarnotificationtrigger
UNLocationNotificationTrigger	A							https://developer.apple.com/reference/usernotifications/unlocationnotificationtrigger			<section class="prog__container"><p>Triggers the delivery of a notification when the user reaches the specified geographic location. </p><pre><code>UNLocationNotificationTrigger</code></pre></section>	https://developer.apple.com/reference/usernotifications/unlocationnotificationtrigger
UNMutableNotificationContent	A							https://developer.apple.com/reference/usernotifications/unmutablenotificationcontent			<section class="prog__container"><p>Provides the editable content for a notification. </p><pre><code>UNMutableNotificationContent</code></pre></section>	https://developer.apple.com/reference/usernotifications/unmutablenotificationcontent
UNNotification	A							https://developer.apple.com/reference/usernotifications/unnotification			<section class="prog__container"><p>Contains the data for a delivered notification.</p><pre><code>UNNotification</code></pre></section>	https://developer.apple.com/reference/usernotifications/unnotification
UNNotificationAction	A							https://developer.apple.com/reference/usernotifications/unnotificationaction			<section class="prog__container"><p>Defines a task to perform in response to a delivered notification. </p><pre><code>UNNotificationAction</code></pre></section>	https://developer.apple.com/reference/usernotifications/unnotificationaction
UNNotificationActionOptions	A							https://developer.apple.com/reference/usernotifications/unnotificationactionoptions			<section class="prog__container"><p>Constants indicating behaviors to apply to the action.</p><pre><code>static var authenticationRequired: UNNotificationActionOptions</code></pre></section>	https://developer.apple.com/reference/usernotifications/unnotificationactionoptions
UNNotificationAttachment	A							https://developer.apple.com/reference/usernotifications/unnotificationattachment			<section class="prog__container"><p>Manages media content associated with a notification. </p><pre><code>UNNotificationAttachment</code></pre></section>	https://developer.apple.com/reference/usernotifications/unnotificationattachment
UNNotificationCategory	A							https://developer.apple.com/reference/usernotifications/unnotificationcategory			<section class="prog__container"><p>Defines the types of notifications your app supports and the custom actions displayed for each type. </p><pre><code>UNNotificationCategory</code></pre></section>	https://developer.apple.com/reference/usernotifications/unnotificationcategory
UNNotificationCategoryOptions	A							https://developer.apple.com/reference/usernotifications/unnotificationcategoryoptions			<section class="prog__container"><p>Constants indicating how to handle notifications associated with this category.</p><pre><code>static var customDismissAction: UNNotificationCategoryOptions</code></pre></section>	https://developer.apple.com/reference/usernotifications/unnotificationcategoryoptions
UNNotificationContent	A							https://developer.apple.com/reference/usernotifications/unnotificationcontent			<section class="prog__container"><p>Stores the content of a local or remote notification. </p><pre><code>UNNotificationContent</code></pre></section>	https://developer.apple.com/reference/usernotifications/unnotificationcontent
UNNotificationPresentationOptions	A							https://developer.apple.com/reference/usernotifications/unnotificationpresentationoptions			<section class="prog__container"><p>Constants indicating how to present a notification in a foreground app.</p><pre><code>static var badge: UNNotificationPresentationOptions</code></pre></section>	https://developer.apple.com/reference/usernotifications/unnotificationpresentationoptions
UNNotificationRequest	A							https://developer.apple.com/reference/usernotifications/unnotificationrequest			<section class="prog__container"><p>Encompasses a notification’s content and the condition that triggers its delivery. </p><pre><code>UNNotificationContent</code></pre></section>	https://developer.apple.com/reference/usernotifications/unnotificationrequest
UNNotificationResponse	A							https://developer.apple.com/reference/usernotifications/unnotificationresponse			<section class="prog__container"><p>Contains the user’s response to an actionable notification.</p><pre><code>UNNotificationResponse</code></pre></section>	https://developer.apple.com/reference/usernotifications/unnotificationresponse
UNNotificationServiceExtension	A							https://developer.apple.com/reference/usernotifications/unnotificationserviceextension			<section class="prog__container"><p>Modifies the content of remote notifications before they are delivered to the user. </p><pre><code>UNNotificationServiceExtension</code></pre></section>	https://developer.apple.com/reference/usernotifications/unnotificationserviceextension
UNNotificationSettings	A							https://developer.apple.com/reference/usernotifications/unnotificationsettings			<section class="prog__container"><p>Contains the notification-related settings and authorization status of your app </p><pre><code>UNNotificationSettings</code></pre></section>	https://developer.apple.com/reference/usernotifications/unnotificationsettings
UNNotificationSound	A							https://developer.apple.com/reference/usernotifications/unnotificationsound			<section class="prog__container"><p>Represents a sound to be played when a notification is delivered. </p><pre><code>UNNotificationSound</code></pre></section>	https://developer.apple.com/reference/usernotifications/unnotificationsound
UNNotificationTrigger	A							https://developer.apple.com/reference/usernotifications/unnotificationtrigger			<section class="prog__container"><p>Provides common behavior for subclasses that trigger the delivery of a notification. </p><pre><code>UNNotificationTrigger</code></pre></section>	https://developer.apple.com/reference/usernotifications/unnotificationtrigger
UNPushNotificationTrigger	A							https://developer.apple.com/reference/usernotifications/unpushnotificationtrigger			<section class="prog__container"><p>Indicates that a delivered notification was sent using the Apple Push Notification Service. </p><pre><code>UNPushNotificationTrigger</code></pre></section>	https://developer.apple.com/reference/usernotifications/unpushnotificationtrigger
UNTextInputNotificationAction	A							https://developer.apple.com/reference/usernotifications/untextinputnotificationaction			<section class="prog__container"><p>Defines an action that contains user-specified text. </p><pre><code>UNTextInputNotificationAction</code></pre></section>	https://developer.apple.com/reference/usernotifications/untextinputnotificationaction
UNTextInputNotificationResponse	A							https://developer.apple.com/reference/usernotifications/untextinputnotificationresponse			<section class="prog__container"><p>Contains the user’s response to an actionable notification, including any custom text that the user typed or dictated.</p><pre><code>UNTextInputNotificationResponse</code></pre></section>	https://developer.apple.com/reference/usernotifications/untextinputnotificationresponse
UNTimeIntervalNotificationTrigger	A							https://developer.apple.com/reference/usernotifications/untimeintervalnotificationtrigger			<section class="prog__container"><p>Triggers the delivery of a local notification after the specified amount of time. </p><pre><code>UNTimeIntervalNotificationTrigger</code></pre></section>	https://developer.apple.com/reference/usernotifications/untimeintervalnotificationtrigger
UNUserNotificationCenter	A							https://developer.apple.com/reference/usernotifications/unusernotificationcenter			<section class="prog__container"><p>Manages the notification-related activities for your app or app extension. </p><pre><code>UNUserNotificationCenter</code></pre></section>	https://developer.apple.com/reference/usernotifications/unusernotificationcenter
UNUserNotificationCenterDelegate	A							https://developer.apple.com/reference/usernotifications/unusernotificationcenterdelegate			<section class="prog__container"><p>Handles notification-related interactions for your app or app extension.</p><pre><code>UNUserNotificationCenterDelegate</code></pre></section>	https://developer.apple.com/reference/usernotifications/unusernotificationcenterdelegate
UNNotificationContentExtension	A							https://developer.apple.com/reference/usernotificationsui/unnotificationcontentextension			<section class="prog__container"><p>Presents a custom interface for a delivered local or remote notification. </p><pre><code>UNNotificationContentExtension</code></pre></section>	https://developer.apple.com/reference/usernotificationsui/unnotificationcontentextension
Error Code Constants	A							https://developer.apple.com/reference/videotoolbox/1490398-error_code_constants			<section class="prog__container"><p>Constants for Video Toolbox operation error codes.</p><pre><code>var kVTAllocationFailedErr: OSStatus</code></pre></section>	https://developer.apple.com/reference/videotoolbox/1490398-error_code_constants
Compression Properties	A							https://developer.apple.com/reference/videotoolbox/compression_properties			<section class="prog__container"><p>Properties used to configure a VTCompressionSession.</p><pre><code>let kVTCompressionPropertyKey_Depth: CFString</code></pre></section>	https://developer.apple.com/reference/videotoolbox/compression_properties
Decompression Properties	A							https://developer.apple.com/reference/videotoolbox/decompression_properties			<section class="prog__container"><p>Properties used to configure a VTDecompressionSession.</p><pre><code>let kVTDecompressionPropertyKey_MaxOutputPresentationTimeStampOfFramesBeingDecoded: CFString</code></pre></section>	https://developer.apple.com/reference/videotoolbox/decompression_properties
Pixel Transfer Properties	A							https://developer.apple.com/reference/videotoolbox/pixel_transfer_properties			<section class="prog__container"><p>Properties used to configure a VTPixelTransferSession.</p><pre><code>let kVTPixelTransferPropertyKey_ScalingMode: CFString</code></pre></section>	https://developer.apple.com/reference/videotoolbox/pixel_transfer_properties
Video Encoder List Keys	A							https://developer.apple.com/reference/videotoolbox/video_encoder_list_keys			<section class="prog__container"><p>Dictionary keys used in call to VTCopyVideoEncoderList(_:_:).</p><pre><code>VTCopyVideoEncoderList(_:_:)</code></pre></section>	https://developer.apple.com/reference/videotoolbox/video_encoder_list_keys
VTCompressionSession	A							https://developer.apple.com/reference/videotoolbox/vtcompressionsession-7bn			<section class="prog__container"><p>An object managing the compression of incoming video data.</p><pre><code>VTCompressionSessionCreate(_:_:_:_:_:_:_:_:_:_:)</code></pre></section>	https://developer.apple.com/reference/videotoolbox/vtcompressionsession-7bn
VTDecompressionSession	A							https://developer.apple.com/reference/videotoolbox/vtdecompressionsession-7bu			<section class="prog__container"><p>An object managing the decompression of incoming video data.</p><pre><code>func VTDecompressionSessionCreate(CFAllocator?, CMVideoFormatDescription, CFDictionary?, CFDictionary?, UnsafePointer<VTDecompressionOutputCallbackRecord>?, UnsafeMutablePointer<VTDecompressionSession?>)</code></pre></section>	https://developer.apple.com/reference/videotoolbox/vtdecompressionsession-7bu
VTFrameSilo	A							https://developer.apple.com/reference/videotoolbox/vtframesilo-7c6			<section class="prog__container"><p>An object that stores a large number of sample buffers, as produced by a multipass compression session.</p><pre><code>func VTFrameSiloCreate(CFAllocator?, CFURL?, CMTimeRange, CFDictionary?, UnsafeMutablePointer<VTFrameSilo?>)</code></pre></section>	https://developer.apple.com/reference/videotoolbox/vtframesilo-7c6
VTMultiPassStorage	A							https://developer.apple.com/reference/videotoolbox/vtmultipassstorage-7cc			<section class="prog__container"><p>An object used for the storage of multipass video encoding metadata.</p><pre><code>func VTMultiPassStorageCreate(CFAllocator?, CFURL?, CMTimeRange, CFDictionary?, UnsafeMutablePointer<VTMultiPassStorage?>)</code></pre></section>	https://developer.apple.com/reference/videotoolbox/vtmultipassstorage-7cc
VTPixelTransferSession	A							https://developer.apple.com/reference/videotoolbox/vtpixeltransfersession-7cg			<section class="prog__container"><p>An object used to copy and/or convert video data from source pixel buffers to destination pixel buffers.</p><pre><code>func VTPixelTransferSessionCreate(CFAllocator?, UnsafeMutablePointer<VTPixelTransferSession?>)</code></pre></section>	https://developer.apple.com/reference/videotoolbox/vtpixeltransfersession-7cg
VTSession	A							https://developer.apple.com/reference/videotoolbox/vtsession-7ck			<section class="prog__container"><p>A reference to a Video Toolbox Compression, Decompression, or Pixel Transfer Session.</p><pre><code>func VTSessionSetProperty(VTSession, CFString, CFTypeRef)</code></pre></section>	https://developer.apple.com/reference/videotoolbox/vtsession-7ck
event XPC Dictionary	A							https://developer.apple.com/reference/vmnet/event_xpc_dictionary			<section class="prog__container"><p>XPC dictionary keys used by the event value returned to the client in the handler callback specified by the vmnet function that provides information about the callback event.</p><pre><code>event</code></pre></section>	https://developer.apple.com/reference/vmnet/event_xpc_dictionary
interface_desc XPC Dictionary Keys	A							https://developer.apple.com/reference/vmnet/interface_desc_xpc_dictionary_keys			<section class="prog__container"><p>XPC dictionary keys supported by the interface_desc parameter passed to the vmnet function to describe the parameters of the network interface.</p><pre><code>interface_desc</code></pre></section>	https://developer.apple.com/reference/vmnet/interface_desc_xpc_dictionary_keys
interface_event_t	A							https://developer.apple.com/reference/vmnet/interface_event_t			<section class="prog__container"><p>Interface event types.</p><pre><code>static var VMNET_INTERFACE_PACKETS_AVAILABLE: interface_event_t</code></pre></section>	https://developer.apple.com/reference/vmnet/interface_event_t
interface_param XPC Dictionary Keys	A							https://developer.apple.com/reference/vmnet/interface_param_xpc_dictionary_keys			<section class="prog__container"><p>XPC dictionary keys used by the interface_param argument returned by the completion handler of the vmnet function that describes the parameters that should be used to configure the network interface.</p><pre><code>interface_param</code></pre></section>	https://developer.apple.com/reference/vmnet/interface_param_xpc_dictionary_keys
operating_modes_t	A							https://developer.apple.com/reference/vmnet/operating_modes_t			<section class="prog__container"><p>The operating modes for an interface.</p><pre><code>case VMNET_HOST_MODE</code></pre></section>	https://developer.apple.com/reference/vmnet/operating_modes_t
vmnet_return_t	A							https://developer.apple.com/reference/vmnet/vmnet_return_t			<section class="prog__container"><p>Values returned by functions in the vmnet Framework.</p><pre><code>case VMNET_SUCCESS</code></pre></section>	https://developer.apple.com/reference/vmnet/vmnet_return_t
vmpktdesc	A							https://developer.apple.com/reference/vmnet/vmpktdesc			<section class="prog__container"><p>Describes a packet.</p><pre><code>var vm_flags: UInt32</code></pre></section>	https://developer.apple.com/reference/vmnet/vmpktdesc
WCSession	A							https://developer.apple.com/reference/watchconnectivity/wcsession			<section class="prog__container"><p>The WCSession class facilitates communication between a WatchKit extension and its companion iOS app. Both processes must create and configure an instance of this class at some point during their execution. When both session objects are active, the two processes can communicate immediately by sending messages back and forth. When only one session is active, the active session may still send updates and transfer files, but those transfers happen opportunistically in the background.</p><pre><code>WCSession</code></pre></section>	https://developer.apple.com/reference/watchconnectivity/wcsession
WCSessionDelegate	A							https://developer.apple.com/reference/watchconnectivity/wcsessiondelegate			<section class="prog__container"><p>The WCSessionDelegate protocol defines methods for responding to messages sent by a WCSession object. Session objects are used to communicate between a WatchKit extension and the companion iOS app on a paired and active iPhone. When configuring your session object, you must specify a delegate object that implements this protocol. The session calls your delegate methods to deliver incoming data from the counterpart app and to manage session-related changes. </p><pre><code>WCSessionDelegate</code></pre></section>	https://developer.apple.com/reference/watchconnectivity/wcsessiondelegate
WCSessionFile	A							https://developer.apple.com/reference/watchconnectivity/wcsessionfile			<section class="prog__container"><p>A WCSessionFile object encompasses information about a file being transferred between counterpart apps. The object includes the URL of the file on the local system and an optional dictionary of keys and values that accompany the file. </p><pre><code>WCSessionFile</code></pre></section>	https://developer.apple.com/reference/watchconnectivity/wcsessionfile
WCSessionFileTransfer	A							https://developer.apple.com/reference/watchconnectivity/wcsessionfiletransfer			<section class="prog__container"><p>A WCSessionFileTransfer object stores information about in-progress file transfers. You do not create instances of this class yourself. When you initiate a file transfer, the system creates a new file transfer object to represent the transferred file. Use that object to get the file information or to cancel the transfer as needed.</p><pre><code>WCSessionFileTransfer</code></pre></section>	https://developer.apple.com/reference/watchconnectivity/wcsessionfiletransfer
WCSessionUserInfoTransfer	A							https://developer.apple.com/reference/watchconnectivity/wcsessionuserinfotransfer			<section class="prog__container"><p>A WCSessionUserInfoTransfer object stores information about in-progress data transfers. You do not create instances of this class yourself. When you begin a data transfer, the system creates a new instance of this class for you. Use the created object to monitor or cancel the transfer as needed.</p><pre><code>WCSessionUserInfoTransfer</code></pre></section>	https://developer.apple.com/reference/watchconnectivity/wcsessionuserinfotransfer
WKAccessibilityImageRegion	A							https://developer.apple.com/reference/watchkit/wkaccessibilityimageregion			<section class="prog__container"><p>A WKAccessibilityImageRegion object defines a portion of an image that you want to call out separately to an assistive app. The accessibility image region object defines the portion of the image that you want to call out separately and the label you want to apply to that region.</p><pre><code>WKAccessibilityImageRegion</code></pre></section>	https://developer.apple.com/reference/watchkit/wkaccessibilityimageregion
WKAlertAction	A							https://developer.apple.com/reference/watchkit/wkalertaction			<section class="prog__container"><p>A WKAlertAction object encapsulates information about a button displayed in an alert or action sheet. When creating an alert action, you specify the title and visual style to apply to the button and a block to execute when the button is tapped. Use the defined visual styles to convey the purpose of the button to the user.</p><pre><code>WKAlertAction</code></pre></section>	https://developer.apple.com/reference/watchkit/wkalertaction
WKApplicationRefreshBackgroundTask	A							https://developer.apple.com/reference/watchkit/wkapplicationrefreshbackgroundtask			<section class="prog__container"><p>Use the WKApplicationRefreshBackgroundTask class to update your app’s state in the background.</p><pre><code>WKApplicationRefreshBackgroundTask</code></pre></section>	https://developer.apple.com/reference/watchkit/wkapplicationrefreshbackgroundtask
WKAudioFileAsset	A							https://developer.apple.com/reference/watchkit/wkaudiofileasset			<section class="prog__container"><p>A WKAudioFileAsset object stores a reference to an audio file and provides metadata information about that file. You create assets when you want to play audio from your WatchKit app. Use the audio file asset object to store the location of the file and any Now Playing information you want displayed while the audio is playing. </p><pre><code>WKAudioFileAsset</code></pre></section>	https://developer.apple.com/reference/watchkit/wkaudiofileasset
WKAudioFilePlayer	A							https://developer.apple.com/reference/watchkit/wkaudiofileplayer			<section class="prog__container"><p>A WKAudioFilePlayer object controls playback of a single audio item. (The WKAudioFileQueuePlayer subclass extends the basic behavior to support playback of more than one item.) Use a player object start and stop playback and to control the rate of playback. </p><pre><code>WKAudioFilePlayer</code></pre></section>	https://developer.apple.com/reference/watchkit/wkaudiofileplayer
WKAudioFilePlayerItem	A							https://developer.apple.com/reference/watchkit/wkaudiofileplayeritem			<section class="prog__container"><p>A WKAudioFilePlayerItem object manages the presentation state of an audio file while it is being played. Create a player item for each WKAudioFileAsset object you want to play and use the player item to observe the state of the audio during playback. You can then associate the player item with an audio queue or player object to control the playback. </p><pre><code>WKAudioFilePlayerItem</code></pre></section>	https://developer.apple.com/reference/watchkit/wkaudiofileplayeritem
WKAudioFileQueuePlayer	A							https://developer.apple.com/reference/watchkit/wkaudiofilequeueplayer			<section class="prog__container"><p>A WKAudioFileQueuePlayer controls playback of one or more audio items. Items are stored in a queue and are played sequentially. When playback of the current item ends, playback of the next item begins automatically.</p><pre><code>WKAudioFileQueuePlayer</code></pre></section>	https://developer.apple.com/reference/watchkit/wkaudiofilequeueplayer
WKCrownDelegate	A							https://developer.apple.com/reference/watchkit/wkcrowndelegate			<section class="prog__container"><p>The WKCrownDelegate protocol defines methods for tracking the digital crown. Use these methods to receive notifications when the user rotates the crown, or when rotation stops.</p><pre><code>WKCrownDelegate</code></pre></section>	https://developer.apple.com/reference/watchkit/wkcrowndelegate
WKCrownSequencer	A							https://developer.apple.com/reference/watchkit/wkcrownsequencer			<section class="prog__container"><p>A WKCrownSequencer object reports the current state of the digital crown, including its rotational speed when it is in motion. Because the crown sequencer is not tied to a specific interface object, you can use it as general input for your app. </p><pre><code>WKCrownSequencer</code></pre></section>	https://developer.apple.com/reference/watchkit/wkcrownsequencer
WKExtension	A							https://developer.apple.com/reference/watchkit/wkextension			<section class="prog__container"><p>The WKExtension object manages behaviors that are shared among all of your app’s interface controllers. Every WatchKit extension has a single extension object that is created and managed by the system. You use the extension object to perform app-level tasks such as opening URLs and getting the root interface controller of your app. </p><pre><code>WKExtension</code></pre></section>	https://developer.apple.com/reference/watchkit/wkextension
WKExtensionDelegate	A							https://developer.apple.com/reference/watchkit/wkextensiondelegate			<section class="prog__container"><p>The WKExtensionDelegate protocol defines methods for managing the app-level behavior of your WatchKit extension. You use the delegate to respond to actionable notifications and manage Handoff transitions. You also use the delegate to respond to life-cycle events, such as the activation and deactivation of your app. </p><pre><code>WKExtensionDelegate</code></pre></section>	https://developer.apple.com/reference/watchkit/wkextensiondelegate
WKGestureRecognizer	A							https://developer.apple.com/reference/watchkit/wkgesturerecognizer			<section class="prog__container"><p>The WKGestureRecognizer class is the base class for all other gesture recognizer classes. Gesture recognizers simplify the event-handling process by tracking touch events for you and calling your custom code when those events match a specific pattern. Gesture recognizers report the results of their tracking to an action method that you define.</p><pre><code>WKGestureRecognizer</code></pre></section>	https://developer.apple.com/reference/watchkit/wkgesturerecognizer
WKImage	A							https://developer.apple.com/reference/watchkit/wkimage			<section class="prog__container"><p>A WKImage object is a wrapper for images you use with a picker interface. The methods of this class let you create your image from any number of image sources.</p><pre><code>WKImage</code></pre></section>	https://developer.apple.com/reference/watchkit/wkimage
WKImageAnimatable	A							https://developer.apple.com/reference/watchkit/wkimageanimatable			<section class="prog__container"><p>The WKImageAnimatable protocol defines methods for controlling the playback of animated images. Existing classes adopt this protocol and you use the methods to control the animation of those images. Do not adopt this protocol in your own classes. </p><pre><code>WKImageAnimatable</code></pre></section>	https://developer.apple.com/reference/watchkit/wkimageanimatable
WKInterfaceActivityRing	A							https://developer.apple.com/reference/watchkit/wkinterfaceactivityring			<section class="prog__container"><p>This view displays data from an HKActivitySummary object, using the Move, Exercise, and Stand activity rings (see Figure 1).</p><pre><code>HKActivitySummary</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfaceactivityring
WKInterfaceButton	A							https://developer.apple.com/reference/watchkit/wkinterfacebutton			<section class="prog__container"><p>A WKInterfaceButton object represents a tappable area on the screen. The content of that area is filled with text and an optional background color or image. When tapped by the user, the button calls its associated action method, which you define on the owning interface controller. Use that action method to initiate tasks and update your app’s interface.</p><pre><code>WKInterfaceButton</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfacebutton
WKInterfaceController	A							https://developer.apple.com/reference/watchkit/wkinterfacecontroller			<section class="prog__container"><p>The WKInterfaceController class is the main class for implementing your Watch app’s interface. An interface controller serves the same purpose as a UIViewController object in UIKit, except that it does not manage any actual views. It runs in your WatchKit extension and remotely manages the behavior associated with an interface controller in your Watch app’s storyboard file. You subclass WKInterfaceController and use its methods to configure the elements of your storyboard scene and to respond to interactions with those elements. </p><pre><code>WKInterfaceController</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfacecontroller
WKInterfaceDate	A							https://developer.apple.com/reference/watchkit/wkinterfacedate			<section class="prog__container"><p>A WKInterfaceDate object is a custom label that displays the current date or time. Use this object when you want to display date or time information without further interaction from your WatchKit extension. At runtime, use the date object to configure the appearance of the date and time information being displayed. </p><pre><code>WKInterfaceDate</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfacedate
WKInterfaceDevice	A							https://developer.apple.com/reference/watchkit/wkinterfacedevice			<section class="prog__container"><p>A WKInterfaceDevice object provides information about the user’s Apple Watch. Use this information to make decisions about the content you display in your app. You can also use this object to play haptic feedback when your app is active.</p><pre><code>WKInterfaceDevice</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfacedevice
WKInterfaceGroup	A							https://developer.apple.com/reference/watchkit/wkinterfacegroup			<section class="prog__container"><p>A WKInterfaceGroup object is a container for one or more interface objects. A group is conceptually similar to a superview in UIKit, in that it handles layout for its contained items. A group arranges items vertically or horizontally within its available space. Groups also have attributes that you can use to configure the precise placement of items within the group. You can also nest groups inside of other groups to manage more complex layouts.</p><pre><code>WKInterfaceGroup</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfacegroup
WKInterfaceHMCamera	A							https://developer.apple.com/reference/watchkit/wkinterfacehmcamera			<section class="prog__container"><p>The WKInterfaceHMCamera interface object displays either a video stream or a single snapshot from an IP camera connected to HomeKit.</p><pre><code>WKInterfaceHMCamera</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfacehmcamera
WKInterfaceImage	A							https://developer.apple.com/reference/watchkit/wkinterfaceimage			<section class="prog__container"><p>A WKInterfaceImage object manages an image displayed by your Watch app’s interface. The images you display in your Watch app can be static or animated. You use image objects to specify the image data you want to display and to start and stop animations. </p><pre><code>WKInterfaceImage</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfaceimage
WKInterfaceInlineMovie	A							https://developer.apple.com/reference/watchkit/wkinterfaceinlinemovie			<section class="prog__container"><p>A WKInterfaceInlineMovie object lets you display an inline video as part of your watchOS scene.</p><pre><code>WKInterfaceInlineMovie</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfaceinlinemovie
WKInterfaceLabel	A							https://developer.apple.com/reference/watchkit/wkinterfacelabel			<section class="prog__container"><p>A WKInterfaceLabel object lets you manipulate the contents of an onscreen label at runtime. Use a label object to set a new text string for the label. The string you specify can use the default styling you specified at design time, or you can use an attributed string to add custom styling to the text.</p><pre><code>WKInterfaceLabel</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfacelabel
WKInterfaceMap	A							https://developer.apple.com/reference/watchkit/wkinterfacemap			<section class="prog__container"><p>A WKInterfaceMap object displays a noninteractive map for the location you specify. Maps must be configured dynamically from your interface controller. Use the methods of the WKInterfaceMap class to specify the visible region of the map and to add any annotations or points of interest. Tapping the map launches the Maps app on the user’s Apple Watch and displays the corresponding location.</p><pre><code>WKInterfaceMap</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfacemap
WKInterfaceMovie	A							https://developer.apple.com/reference/watchkit/wkinterfacemovie			<section class="prog__container"><p>A WKInterfaceMovie object lets you play back video and audio content directly from your interface. A movie object displays a poster image with a play button on top of it. When the user taps the play button, WatchKit plays the movie in a modal interface.</p><pre><code>WKInterfaceMovie</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfacemovie
WKInterfaceObject	A							https://developer.apple.com/reference/watchkit/wkinterfaceobject			<section class="prog__container"><p>The WKInterfaceObject class provides information that is common to all interface objects in your app. Your WatchKit extension uses interface objects to manipulate the visual elements displayed on Apple Watch. Specifically, you use the methods of this class to change the size, alignment, and visibility of those elements. You can also configure the accessibility information displayed through assistive technologies like VoiceOver. </p><pre><code>WKInterfaceObject</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfaceobject
WKInterfacePaymentButton	A							https://developer.apple.com/reference/watchkit/wkinterfacepaymentbutton			<section class="prog__container"><p>The WKInterfacePaymentButton class provides a button that you can use to trigger payments through Apple Pay.</p><pre><code>WKInterfacePaymentButton</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfacepaymentbutton
WKInterfacePicker	A							https://developer.apple.com/reference/watchkit/wkinterfacepicker			<section class="prog__container"><p>A WKInterfacePicker object presents a scrolling list of items for the user to choose from. Items in the picker may consist of text, images, or a combination of the two. The user interacts with a picker by tapping it, using the crown to scroll through items, and tapping again to select an item. A single interface controller may contain multiple pickers, each with its own set of items. </p><pre><code>WKInterfacePicker</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfacepicker
WKInterfaceSCNScene	A							https://developer.apple.com/reference/watchkit/wkinterfacescnscene			<section class="prog__container"><p>Use a WKInterfaceSCNScene interface object to manage SceneKit content for display in your app. To provide content, assign a SCNScene object to the interface’s scene property. </p><pre><code>WKInterfaceSCNScene</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfacescnscene
WKInterfaceSeparator	A							https://developer.apple.com/reference/watchkit/wkinterfaceseparator			<section class="prog__container"><p>A WKInterfaceSeparator object lets you manipulate a separator at runtime. Use a separator object to change its color. You can also use the inherited methods to show or hide it and configure other attributes. </p><pre><code>WKInterfaceSeparator</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfaceseparator
WKInterfaceSKScene	A							https://developer.apple.com/reference/watchkit/wkinterfaceskscene			<section class="prog__container"><p>A WKInterfaceSKScene object is an interface object that manages SpriteKit scene. Present a scene by calling the interface’s presentScene(_:) or presentScene(_:transition:) method and passing in a SKScene object. When a scene is presented, it alternates between running its simulation (which animates the content) and rendering the content for display. You can pause the scene by setting the interface’s isPaused property to true.</p><pre><code>WKInterfaceSKScene</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfaceskscene
WKInterfaceSlider	A							https://developer.apple.com/reference/watchkit/wkinterfaceslider			<section class="prog__container"><p>A WKInterfaceSlider object represents a visual control used to select a single floating-point value from a range of values. You configure the appearance of sliders in your storyboard file, including the images to display for the minimum and maximum value. At runtime, you use a slider object to enable the slider or set its value.</p><pre><code>WKInterfaceSlider</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfaceslider
WKInterfaceSwitch	A							https://developer.apple.com/reference/watchkit/wkinterfaceswitch			<section class="prog__container"><p>A WKInterfaceSwitch object represents a control that toggles between an On and Off state. Switches are commonly used to indicate whether a feature is enabled or disabled. You set the initial value of the switch in your storyboard file but can modify that value at runtime using the methods of this class. </p><pre><code>WKInterfaceSwitch</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfaceswitch
WKInterfaceTable	A							https://developer.apple.com/reference/watchkit/wkinterfacetable			<section class="prog__container"><p>A WKInterfaceTable object creates and manages the contents of a single-column table interface. You use a table object to set the number and type of rows and to configure the data objects for those rows. </p><pre><code>WKInterfaceTable</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfacetable
WKInterfaceTimer	A							https://developer.apple.com/reference/watchkit/wkinterfacetimer			<section class="prog__container"><p>A WKInterfaceTimer object is a special type of label that displays a countdown or count-up timer. Use a timer object to configure the amount of time and the appearance of the timer text. When you start the timer, WatchKit updates the displayed text automatically on the user’s Apple Watch without further interactions from your extension. To know when the timer reaches 0, configure an Timer object with the same target date you used to set up the timer. </p><pre><code>WKInterfaceTimer</code></pre></section>	https://developer.apple.com/reference/watchkit/wkinterfacetimer
WKLongPressGestureRecognizer	A							https://developer.apple.com/reference/watchkit/wklongpressgesturerecognizer			<section class="prog__container"><p>A WKLongPressGestureRecognizer object looks for a touch event that occurs in the same relative area for an extended period of time. A long-press gesture is essentially a tap where the user’s finger remains on the screen for a minimum amount of time, which is configurable. You can configure the amount of time required for the long-press to be recognized and the maximum distance those touches are allowed to move before being disallowed.</p><pre><code>WKLongPressGestureRecognizer</code></pre></section>	https://developer.apple.com/reference/watchkit/wklongpressgesturerecognizer
WKPanGestureRecognizer	A							https://developer.apple.com/reference/watchkit/wkpangesturerecognizer			<section class="prog__container"><p>A WKPanGestureRecognizer object looks for a touch event that moves around the screen. In watchOS, a pan gesture must track exactly one touch event, but that touch event may move freely. Pan gestures are often used to drag content around a given area. </p><pre><code>WKPanGestureRecognizer</code></pre></section>	https://developer.apple.com/reference/watchkit/wkpangesturerecognizer
WKPickerItem	A							https://developer.apple.com/reference/watchkit/wkpickeritem			<section class="prog__container"><p>A WKPickerItem object encapsulates information about a single item in a picker interface. You create picker items yourself and assign them to a WKInterfacePicker object in your interface. For each item, you can specify a title string, an image, or both based on the style of the picker.</p><pre><code>WKPickerItem</code></pre></section>	https://developer.apple.com/reference/watchkit/wkpickeritem
WKRefreshBackgroundTask	A							https://developer.apple.com/reference/watchkit/wkrefreshbackgroundtask			<section class="prog__container"><p>The abstract superclass for WatchKit’s background task objects.</p><pre><code>handle(_:)</code></pre></section>	https://developer.apple.com/reference/watchkit/wkrefreshbackgroundtask
WKSnapshotRefreshBackgroundTask	A							https://developer.apple.com/reference/watchkit/wksnapshotrefreshbackgroundtask			<section class="prog__container"><p>Use the WKSnapshotRefreshBackgroundTask class to update your app’s user interface. You can push, pop, or present other interface controllers, and then update the content of the desired interface controller. The system automatically takes a snapshot of your user interface as soon as this task completes.</p><pre><code>WKSnapshotRefreshBackgroundTask</code></pre></section>	https://developer.apple.com/reference/watchkit/wksnapshotrefreshbackgroundtask
WKSwipeGestureRecognizer	A							https://developer.apple.com/reference/watchkit/wkswipegesturerecognizer			<section class="prog__container"><p>A WKSwipeGestureRecognizer object looks for swiping gestures in one or more directions. A swipe is a discrete gesture; the associated action message is sent only once per gesture.</p><pre><code>WKSwipeGestureRecognizer</code></pre></section>	https://developer.apple.com/reference/watchkit/wkswipegesturerecognizer
WKSwipeGestureRecognizerDirection	A							https://developer.apple.com/reference/watchkit/wkswipegesturerecognizerdirection			<section class="prog__container"><p>Constants indicating the direction of a swipe.</p><pre><code>static var right: WKSwipeGestureRecognizerDirection</code></pre></section>	https://developer.apple.com/reference/watchkit/wkswipegesturerecognizerdirection
WKTapGestureRecognizer	A							https://developer.apple.com/reference/watchkit/wktapgesturerecognizer			<section class="prog__container"><p>A WKTapGestureRecognizer object looks for a touch event occurring and ending in approximately the same area on the screen. The tap gesture recognizer can report when a single tap happens or when multiple taps happen.</p><pre><code>WKTapGestureRecognizer</code></pre></section>	https://developer.apple.com/reference/watchkit/wktapgesturerecognizer
WKURLSessionRefreshBackgroundTask	A							https://developer.apple.com/reference/watchkit/wkurlsessionrefreshbackgroundtask			<section class="prog__container"><p>Use the WKURLSessionRefreshBackgroundTask class to respond to URLSession background transfers.</p><pre><code>WKURLSessionRefreshBackgroundTask</code></pre></section>	https://developer.apple.com/reference/watchkit/wkurlsessionrefreshbackgroundtask
WKUserNotificationInterfaceController	A							https://developer.apple.com/reference/watchkit/wkusernotificationinterfacecontroller			<section class="prog__container"><p>The WKUserNotificationInterfaceController class manages a dynamic user interface for a local or remote notification. Apps that support notifications can define one or more subclasses and use them to implement their dynamic notification interfaces. For example, you might use a dynamic interface to display custom data from the notification payload or add related graphics.</p><pre><code>WKUserNotificationInterfaceController</code></pre></section>	https://developer.apple.com/reference/watchkit/wkusernotificationinterfacecontroller
WKWatchConnectivityRefreshBackgroundTask	A							https://developer.apple.com/reference/watchkit/wkwatchconnectivityrefreshbackgroundtask			<section class="prog__container"><p>Use the WKWatchConnectivityRefreshBackgroundTask class to receive background updates from the WatchConnectivity framework.</p><pre><code>WKWatchConnectivityRefreshBackgroundTask</code></pre></section>	https://developer.apple.com/reference/watchkit/wkwatchconnectivityrefreshbackgroundtask
WebKit Constants	A							https://developer.apple.com/reference/webkit/webkit_constants			<section class="prog__container"><p>WebKit constants affecting multiple classes.</p><pre><code>let WKPreviewActionItemIdentifierAddToReadingList: String</code></pre></section>	https://developer.apple.com/reference/webkit/webkit_constants
WebKit Data Types	A							https://developer.apple.com/reference/webkit/webkit_data_types			<section class="prog__container"><p>WebKit data types affecting multiple classes.</p><pre><code>DOMEventExceptionCode</code></pre></section>	https://developer.apple.com/reference/webkit/webkit_data_types
WebKit Enumerations	A							https://developer.apple.com/reference/webkit/webkit_enumerations			<section class="prog__container"><p>WebKit enumerations affecting multiple classes.</p><pre><code>WKAudiovisualMediaTypes</code></pre></section>	https://developer.apple.com/reference/webkit/webkit_enumerations
WebKit Error Codes	A							https://developer.apple.com/reference/webkit/webkit_error_codes			<section class="prog__container"><p>The error code domain for WebKit.</p><pre><code>WKError</code></pre></section>	https://developer.apple.com/reference/webkit/webkit_error_codes
WebKit Structures	A							https://developer.apple.com/reference/webkit/webkit_structures			<section class="prog__container"><p>WebKit structures affecting multiple classes.</p><pre><code>NSNotification.Name</code></pre></section>	https://developer.apple.com/reference/webkit/webkit_structures
WKAudiovisualMediaTypes	A							https://developer.apple.com/reference/webkit/wkaudiovisualmediatypes			<section class="prog__container"><p>The media types that require a user gesture to begin playing</p><pre><code>[]</code></pre></section>	https://developer.apple.com/reference/webkit/wkaudiovisualmediatypes
WKBackForwardList	A							https://developer.apple.com/reference/webkit/wkbackforwardlist			<section class="prog__container"><p>A WKBackForwardList object maintains a list of visited pages used to go back and forward to the most recent page.</p><pre><code>WKBackForwardList</code></pre></section>	https://developer.apple.com/reference/webkit/wkbackforwardlist
WKBackForwardListItem	A							https://developer.apple.com/reference/webkit/wkbackforwardlistitem			<section class="prog__container"><p>A WKBackForwardListItem object represents a webpage in the back-forward list of a web view.</p><pre><code>WKBackForwardListItem</code></pre></section>	https://developer.apple.com/reference/webkit/wkbackforwardlistitem
WKDataDetectorTypes	A							https://developer.apple.com/reference/webkit/wkdatadetectortypes			<section class="prog__container"><p>The type of data detected.</p><pre><code>[]</code></pre></section>	https://developer.apple.com/reference/webkit/wkdatadetectortypes
WKFrameInfo	A							https://developer.apple.com/reference/webkit/wkframeinfo			<section class="prog__container"><p>A WKFrameInfo object contains information about a frame on a webpage.</p><pre><code>WKFrameInfo</code></pre></section>	https://developer.apple.com/reference/webkit/wkframeinfo
WKNavigation	A							https://developer.apple.com/reference/webkit/wknavigation			<section class="prog__container"><p>A WKNavigation object contains information for tracking the loading progress of a webpage.</p><pre><code>WKNavigation</code></pre></section>	https://developer.apple.com/reference/webkit/wknavigation
WKNavigationAction	A							https://developer.apple.com/reference/webkit/wknavigationaction			<section class="prog__container"><p>A WKNavigationAction object contains information about an action that may cause a navigation, used for making policy decisions.</p><pre><code>WKNavigationAction</code></pre></section>	https://developer.apple.com/reference/webkit/wknavigationaction
WKNavigationDelegate	A							https://developer.apple.com/reference/webkit/wknavigationdelegate			<section class="prog__container"><p>The methods of the WKNavigationDelegate protocol help you implement custom behaviors that are triggered during a web view's process of accepting, loading, and completing a navigation request.</p><pre><code>WKNavigationDelegate</code></pre></section>	https://developer.apple.com/reference/webkit/wknavigationdelegate
WKNavigationResponse	A							https://developer.apple.com/reference/webkit/wknavigationresponse			<section class="prog__container"><p>A WKNavigationResponse object contains information about a navigation response, used for making policy decisions.</p><pre><code>WKNavigationResponse</code></pre></section>	https://developer.apple.com/reference/webkit/wknavigationresponse
WKOpenPanelParameters	A							https://developer.apple.com/reference/webkit/wkopenpanelparameters			<section class="prog__container"><p>A WKOpenPanelParameters object contains the parameters that a file upload control has specified.</p><pre><code>WKOpenPanelParameters</code></pre></section>	https://developer.apple.com/reference/webkit/wkopenpanelparameters
WKPreferences	A							https://developer.apple.com/reference/webkit/wkpreferences			<section class="prog__container"><p>A WKPreferences object encapsulates the preference settings for a web view.</p><pre><code>WKPreferences</code></pre></section>	https://developer.apple.com/reference/webkit/wkpreferences
WKPreviewActionItem	A							https://developer.apple.com/reference/webkit/wkpreviewactionitem			<section class="prog__container"><p>The WKPreviewActionItem protocol provides access to the properties of a Preview action item.</p><pre><code>WKPreviewActionItem</code></pre></section>	https://developer.apple.com/reference/webkit/wkpreviewactionitem
WKPreviewElementInfo	A							https://developer.apple.com/reference/webkit/wkpreviewelementinfo			<section class="prog__container"><p>The WKPreviewElement object contains information for previewing a webpage.</p><pre><code>WKPreviewElement</code></pre></section>	https://developer.apple.com/reference/webkit/wkpreviewelementinfo
WKProcessPool	A							https://developer.apple.com/reference/webkit/wkprocesspool			<section class="prog__container"><p>A WKProcessPool object represents a pool of Web Content processes.</p><pre><code>WKProcessPool</code></pre></section>	https://developer.apple.com/reference/webkit/wkprocesspool
WKScriptMessage	A							https://developer.apple.com/reference/webkit/wkscriptmessage			<section class="prog__container"><p>A WKScriptMessage object contains information about a message sent from a webpage.</p><pre><code>WKScriptMessage</code></pre></section>	https://developer.apple.com/reference/webkit/wkscriptmessage
WKScriptMessageHandler	A							https://developer.apple.com/reference/webkit/wkscriptmessagehandler			<section class="prog__container"><p>A class conforming to the WKScriptMessageHandler protocol provides a method for receiving messages from JavaScript running in a webpage.</p><pre><code>WKScriptMessageHandler</code></pre></section>	https://developer.apple.com/reference/webkit/wkscriptmessagehandler
WKSecurityOrigin	A							https://developer.apple.com/reference/webkit/wksecurityorigin			<section class="prog__container"><p>A WKSecurityOrigin object consists of a host name, a protocol, and a port number. A first-party load is any load URL has the same security origin as the requesting web site. First-party webpages can access each other’s resources such as scripts and databases.</p><pre><code>WKSecurityOrigin</code></pre></section>	https://developer.apple.com/reference/webkit/wksecurityorigin
WKUIDelegate	A							https://developer.apple.com/reference/webkit/wkuidelegate			<section class="prog__container"><p>The WKUIDelegate class provides methods for presenting native user interface elements on behalf of a webpage.</p><pre><code>WKUIDelegate</code></pre></section>	https://developer.apple.com/reference/webkit/wkuidelegate
WKUserContentController	A							https://developer.apple.com/reference/webkit/wkusercontentcontroller			<section class="prog__container"><p>A WKUserContentController object provides a way for JavaScript to post messages and inject user scripts to a web view.</p><pre><code>WKUserContentController</code></pre></section>	https://developer.apple.com/reference/webkit/wkusercontentcontroller
WKUserScript	A							https://developer.apple.com/reference/webkit/wkuserscript			<section class="prog__container"><p>A WKUserScript object represents a script that can be injected into a webpage.</p><pre><code>WKUserScript</code></pre></section>	https://developer.apple.com/reference/webkit/wkuserscript
WKWebsiteDataRecord	A							https://developer.apple.com/reference/webkit/wkwebsitedatarecord			<section class="prog__container"><p>A WKWebsiteDataRecord object represents website data grouped by the originating URL’s domain name and suffix.</p><pre><code>WKWebsiteDataRecord</code></pre></section>	https://developer.apple.com/reference/webkit/wkwebsitedatarecord
WKWebsiteDataStore	A							https://developer.apple.com/reference/webkit/wkwebsitedatastore			<section class="prog__container"><p>A WKWebsiteDataStore object represents various types of data used by a chosen website. Data types include cookies, disk and memory caches, and persistent data such as WebSQL, IndexedDB databases, and local storage.</p><pre><code>WKWebsiteDataStore</code></pre></section>	https://developer.apple.com/reference/webkit/wkwebsitedatastore
WKWebView	A							https://developer.apple.com/reference/webkit/wkwebview			<section class="prog__container"><p>A WKWebView object displays interactive web content, such as for an in-app browser. You can use the WKWebView class to embed web content in your app. To do so, create a WKWebView object, set it as the view, and send it a request to load web content.</p><pre><code>WKWebView</code></pre></section>	https://developer.apple.com/reference/webkit/wkwebview
WKWebViewConfiguration	A							https://developer.apple.com/reference/webkit/wkwebviewconfiguration			<section class="prog__container"><p>A collection of properties used to initialize a web view.</p><pre><code>WKWebViewConfiguration</code></pre></section>	https://developer.apple.com/reference/webkit/wkwebviewconfiguration
WKWindowFeatures	A							https://developer.apple.com/reference/webkit/wkwindowfeatures			<section class="prog__container"><p>A WKWindowFeatures object specifies optional attributes for the containing window when a new web view is requested.</p><pre><code>WKWindowFeatures</code></pre></section>	https://developer.apple.com/reference/webkit/wkwindowfeatures
CanvasGradient	A							https://developer.apple.com/reference/webkitjs/canvasgradient			<section class="prog__container"><p>CanvasGradient instances define visual gradients that can be displayed on the HTML canvas element. The CanvasRenderingContext2D properties fillStyle and strokeStyle can be set to a CanvasGradient object. You obtain a CanvasGradient instance by calling one of the gradient creation methods of the CanvasRenderingContext2D class—createLinearGradient() or createRadialGradient().</p><pre><code>CanvasGradient</code></pre></section>	https://developer.apple.com/reference/webkitjs/canvasgradient
CanvasRenderingContext2D	A							https://developer.apple.com/reference/webkitjs/canvasrenderingcontext2d			<section class="prog__container"><p>The CanvasRenderingContext2D class provides a 2D drawing context for a canvas element. Use the methods of this class to draw on the canvas. To obtain an instance of the CanvasRenderingContext2D, call the getContext('2d') method on a canvas object. See Safari HTML5 Canvas Guide for usage examples.</p><pre><code>CanvasRenderingContext2D</code></pre></section>	https://developer.apple.com/reference/webkitjs/canvasrenderingcontext2d
CSSRule Additions Reference	A							https://developer.apple.com/reference/webkitjs/cssrule_additions_reference			<section class="prog__container"><p>These extensions to the CSSRule class are used to access animation keyframe and keyframes rules.</p><pre><code>CSSRule</code></pre></section>	https://developer.apple.com/reference/webkitjs/cssrule_additions_reference
DeviceMotionEvent	A							https://developer.apple.com/reference/webkitjs/devicemotionevent			<section class="prog__container"><p>An instance of DeviceMotionEvent is created when significant change in motion occurs. The event object encapsulates the measurements of the interval, rotation rate, and acceleration of a device. </p><pre><code>DeviceMotionEvent</code></pre></section>	https://developer.apple.com/reference/webkitjs/devicemotionevent
DeviceOrientationEvent	A							https://developer.apple.com/reference/webkitjs/deviceorientationevent			<section class="prog__container"><p>Instances of the DeviceOrientationEvent class are fired only when the device has a gyroscope and while the user is changing the orientation. The DeviceOrientationEvent class encapsulates the angles of rotation in degrees and heading. </p><pre><code>DeviceOrientationEvent</code></pre></section>	https://developer.apple.com/reference/webkitjs/deviceorientationevent
Document	A							https://developer.apple.com/reference/webkitjs/document			<section class="prog__container"><p>These additions to the Document class are used to create touch event objects on iOS and control full-screen mode on the desktop.</p><pre><code>Document</code></pre></section>	https://developer.apple.com/reference/webkitjs/document
DOMApplicationCache	A							https://developer.apple.com/reference/webkitjs/domapplicationcache			<section class="prog__container"><p>A DOMApplicationCache object is used to store resources—such as, HTML, JavaScript, CSS, and images—locally. This allows your web application to continue running offline when there is no network connection. The cache persists after Safari exits, so it can be used by multiple browser sessions. There is one application cache per browsing context. </p><pre><code>DOMApplicationCache</code></pre></section>	https://developer.apple.com/reference/webkitjs/domapplicationcache
DOMWindow Additions	A							https://developer.apple.com/reference/webkitjs/domwindow_additions			<section class="prog__container"><p>DOMWindow additions allow conversion of points between page- and node-coordinate systems for transitions, support for CSS media queries, and device orientation and motion events.</p><pre><code>DOMWindow</code></pre></section>	https://developer.apple.com/reference/webkitjs/domwindow_additions
GestureEvent	A							https://developer.apple.com/reference/webkitjs/gestureevent			<section class="prog__container"><p>The GestureEvent class encapsulates information about a multi-touch gesture.</p><pre><code>GestureEvent</code></pre></section>	https://developer.apple.com/reference/webkitjs/gestureevent
HTMLAudioElement	A							https://developer.apple.com/reference/webkitjs/htmlaudioelement			<section class="prog__container"><p>A class representing the HTML audio element that plays a sound or audio stream in a webpage. All of the methods and properties in this class are inherited from HTMLMediaElement.</p><pre><code>audio</code></pre></section>	https://developer.apple.com/reference/webkitjs/htmlaudioelement
HTMLCanvasElement	A							https://developer.apple.com/reference/webkitjs/htmlcanvaselement			<section class="prog__container"><p>A canvas is an HTML element that defines a runtime drawing region within your web content. You can access the canvas as a JavaScript object and obtain a drawing context from it, in the form of a CanvasRenderingContext2D object. You draw on the canvas by using the JavaScript methods of the CanvasRenderingContext2D class.</p><pre><code>CanvasRenderingContext2D</code></pre></section>	https://developer.apple.com/reference/webkitjs/htmlcanvaselement
HTMLMediaElement	A							https://developer.apple.com/reference/webkitjs/htmlmediaelement			<section class="prog__container"><p>An abstract superclass for media classes that display audio or video in webpages. This class defines common properties and methods inherited by the HTMLAudioElement and HTMLVideoElement classes representing the HTML audio and video elements.</p><pre><code>HTMLAudioElement</code></pre></section>	https://developer.apple.com/reference/webkitjs/htmlmediaelement
HTMLVideoElement	A							https://developer.apple.com/reference/webkitjs/htmlvideoelement			<section class="prog__container"><p>A class representing the HTML video element that plays a video in a webpage. Use the HTMLAudioElement class for the HTML audio element.</p><pre><code>video</code></pre></section>	https://developer.apple.com/reference/webkitjs/htmlvideoelement
StyleMedia	A							https://developer.apple.com/reference/webkitjs/stylemedia			<section class="prog__container"><p>The StyleMedia class provides a way to evaluate CSS media queries from JavaScript. You do not need to, nor should you, create instances of this class. You access the shared StyleMedia object using the window’s styleMedia property.</p><pre><code>StyleMedia</code></pre></section>	https://developer.apple.com/reference/webkitjs/stylemedia
Touch	A							https://developer.apple.com/reference/webkitjs/touch			<section class="prog__container"><p>A Touch object represents a single user touch on the screen of the device. A touch is the presence or movement of a finger and is part of a unique multi-touch sequence. Use the changedTouches method to get all the touch objects that changed in a TouchEvent object.</p><pre><code>Touch</code></pre></section>	https://developer.apple.com/reference/webkitjs/touch
TouchEvent	A							https://developer.apple.com/reference/webkitjs/touchevent			<section class="prog__container"><p>The TouchEvent class encapsulates information about a touch event.</p><pre><code>TouchEvent</code></pre></section>	https://developer.apple.com/reference/webkitjs/touchevent
TouchList	A							https://developer.apple.com/reference/webkitjs/touchlist			<section class="prog__container"><p>The TouchList class is used to represent a collection of Touch objects. For example, the changedTouches method in TouchEvent returns a TouchList object.</p><pre><code>TouchList</code></pre></section>	https://developer.apple.com/reference/webkitjs/touchlist
WebKitAnimationEvent	A							https://developer.apple.com/reference/webkitjs/webkitanimationevent			<section class="prog__container"><p>WebKitAnimationEvent objects encapsulate information about running animations.</p><pre><code>WebKitAnimationEvent</code></pre></section>	https://developer.apple.com/reference/webkitjs/webkitanimationevent
WebKitCSSKeyframeRule	A							https://developer.apple.com/reference/webkitjs/webkitcsskeyframerule			<section class="prog__container"><p>WebKitCSSKeyframeRule objects represent the style rule for a single keyframe in the @-webkit-keyframes CSS rule used in animations. The WebKitAnimationEvent class encapsulate information about running animations.</p><pre><code>WebKitCSSKeyframeRule</code></pre></section>	https://developer.apple.com/reference/webkitjs/webkitcsskeyframerule
WebKitCSSKeyframesRule	A							https://developer.apple.com/reference/webkitjs/webkitcsskeyframesrule			<section class="prog__container"><p>WebKitCSSKeyframesRule objects represent the keyframes for a single animation, that is, the contents of an @-webkit-keyframes CSS rule used in animations. The WebKitAnimationEvent class encapsulate information about running animations.</p><pre><code>WebKitCSSKeyframesRule</code></pre></section>	https://developer.apple.com/reference/webkitjs/webkitcsskeyframesrule
WebKitCSSMatrix	A							https://developer.apple.com/reference/webkitjs/webkitcssmatrix			<section class="prog__container"><p>WebKitCSSMatrix objects represent a 4x4 homogeneous matrix for 3D transforms or a vector for 2D transforms. You can use these objects to manipulate matrices in JavaScript. For example, you can multiply, translate, and scale matrices.</p><pre><code>WebKitCSSMatrix</code></pre></section>	https://developer.apple.com/reference/webkitjs/webkitcssmatrix
WebKitCSSTransformValue	A							https://developer.apple.com/reference/webkitjs/webkitcsstransformvalue			<section class="prog__container"><p>WebKitCSSTransformValue objects represent one transform function in a CSS transform specified using the -webkit-transform property. The operationType property in this class specifies which function is used. The objects also contain a list of values which are the parameters to the function. The parameters appear in the same order as they appear in the function.</p><pre><code>WebKitCSSTransformValue</code></pre></section>	https://developer.apple.com/reference/webkitjs/webkitcsstransformvalue
WebKitPoint	A							https://developer.apple.com/reference/webkitjs/webkitpoint			<section class="prog__container"><p>WebKitPoint objects represent a point in two-dimensional space used by CSS transitions specified using the -webkit-transition property.</p><pre><code>WebKitPoint</code></pre></section>	https://developer.apple.com/reference/webkitjs/webkitpoint
WebKitTransitionEvent	A							https://developer.apple.com/reference/webkitjs/webkittransitionevent			<section class="prog__container"><p>WebKitTransitionEvent objects provide information about CSS transitions specified using the transition property. An event is sent at the end of a transition for each CSS property in the transition. Each event contains the name of the CSS property and duration of the transition. You can use these events to perform some action that starts at the end of a transition.</p><pre><code>WebKitTransitionEvent</code></pre></section>	https://developer.apple.com/reference/webkitjs/webkittransitionevent
XCSourceEditorCommand	A							https://developer.apple.com/reference/xcodekit/xcsourceeditorcommand			<section class="prog__container"><p>The XCSourceEditorCommand protocol specifies the required methods for a command provided by a source editor extension. </p><pre><code>XCSourceEditorCommand</code></pre></section>	https://developer.apple.com/reference/xcodekit/xcsourceeditorcommand
XCSourceEditorCommandInvocation	A							https://developer.apple.com/reference/xcodekit/xcsourceeditorcommandinvocation			<section class="prog__container"><p>The XCSourceEditorCommandInvocation class encapsulates information about the source editor command that the user invoked, such as the identifier of the command, the text buffer on which the command is to operate, and whether the command has been canceled by Xcode or the user.</p><pre><code>XCSourceEditorCommandInvocation</code></pre></section>	https://developer.apple.com/reference/xcodekit/xcsourceeditorcommandinvocation
XCSourceEditorExtension	A							https://developer.apple.com/reference/xcodekit/xcsourceeditorextension			<section class="prog__container"><p>An Xcode Source Editor Extension is an instance of a class conforming to this protocol, which is set as the value of the XCSourceEditorExtensionPrincipalClass key in the NSExtensionAttributes dictionary in the extension's Info.plist file.</p><pre><code>XCSourceEditorExtensionPrincipalClass</code></pre></section>	https://developer.apple.com/reference/xcodekit/xcsourceeditorextension
XCSourceTextBuffer	A							https://developer.apple.com/reference/xcodekit/xcsourcetextbuffer			<section class="prog__container"><p>The XCSourceTextBuffer class encapsulates a buffer representing some editor text. </p><pre><code>XCSourceTextBuffer</code></pre></section>	https://developer.apple.com/reference/xcodekit/xcsourcetextbuffer
XCSourceTextRange	A							https://developer.apple.com/reference/xcodekit/xcsourcetextrange			<section class="prog__container"><p>The XCSourceTextRange class encapsulates a range of text in a buffer.</p><pre><code>XCSourceTextRange</code></pre></section>	https://developer.apple.com/reference/xcodekit/xcsourcetextrange
XCTest	A							https://developer.apple.com/reference/xctest/xctest			<section class="prog__container"><p>An abstract base class for testing.</p><pre><code>XCTest</code></pre></section>	https://developer.apple.com/reference/xctest/xctest
XCTestCase	A							https://developer.apple.com/reference/xctest/xctestcase			<section class="prog__container"><p>A subclass of XCTest that provides an override point for defining custom tests.</p><pre><code>XCTest</code></pre></section>	https://developer.apple.com/reference/xctest/xctestcase
XCTestCaseRun	A							https://developer.apple.com/reference/xctest/xctestcaserun			<section class="prog__container"><p>Collects information about a specific execution of an XCTestCase.</p><pre><code>XCTestCase</code></pre></section>	https://developer.apple.com/reference/xctest/xctestcaserun
XCTestExpectation	A							https://developer.apple.com/reference/xctest/xctestexpectation			<section class="prog__container"><p>An expected outcome in an asynchronous test.</p><pre><code>XCTestCase</code></pre></section>	https://developer.apple.com/reference/xctest/xctestexpectation
XCTestObservation	A							https://developer.apple.com/reference/xctest/xctestobservation			<section class="prog__container"><p>The XCTestObservation protocol defines methods that are called in response to significant events in the progress of test runs.</p><pre><code>XCTestObservation</code></pre></section>	https://developer.apple.com/reference/xctest/xctestobservation
XCTestObservationCenter	A							https://developer.apple.com/reference/xctest/xctestobservationcenter			<section class="prog__container"><p>Provides information about the progress of test runs to registered observers.</p><pre><code>XCTestObservation</code></pre></section>	https://developer.apple.com/reference/xctest/xctestobservationcenter
XCTestRun	A							https://developer.apple.com/reference/xctest/xctestrun			<section class="prog__container"><p>A base class for collecting information about a specific execution of an XCTest.</p><pre><code>XCTest</code></pre></section>	https://developer.apple.com/reference/xctest/xctestrun
XCTestSuite	A							https://developer.apple.com/reference/xctest/xctestsuite			<section class="prog__container"><p>A collection (or suite) of test cases.</p><pre><code>XCTestSuite</code></pre></section>	https://developer.apple.com/reference/xctest/xctestsuite
XCTestSuiteRun	A							https://developer.apple.com/reference/xctest/xctestsuiterun			<section class="prog__container"><p>Collects information about a specific execution of an XCTestSuite.</p><pre><code>XCTestSuite</code></pre></section>	https://developer.apple.com/reference/xctest/xctestsuiterun
XCUIApplication	A							https://developer.apple.com/reference/xctest/xcuiapplication			<section class="prog__container"><p>A proxy for an application that can be launched and terminated.</p><pre><code>func launch()</code></pre></section>	https://developer.apple.com/reference/xctest/xcuiapplication
XCUICoordinate	A							https://developer.apple.com/reference/xctest/xcuicoordinate			<section class="prog__container"><p>A location on screen relative to some UI element. </p><pre><code>var referencedElement: XCUIElement</code></pre></section>	https://developer.apple.com/reference/xctest/xcuicoordinate
XCUIDevice	A							https://developer.apple.com/reference/xctest/xcuidevice			<section class="prog__container"><p>Simulates events involving physical buttons and device state for an iOS device. </p><pre><code>class func shared()</code></pre></section>	https://developer.apple.com/reference/xctest/xcuidevice
XCUIDeviceButton	A							https://developer.apple.com/reference/xctest/xcuidevicebutton			<section class="prog__container"><p>A physical button on an iOS device.</p><pre><code>case home</code></pre></section>	https://developer.apple.com/reference/xctest/xcuidevicebutton
XCUIElement	A							https://developer.apple.com/reference/xctest/xcuielement			<section class="prog__container"><p>A user interface element in an application.</p><pre><code>XCUIElement</code></pre></section>	https://developer.apple.com/reference/xctest/xcuielement
XCUIElementAttributes	A							https://developer.apple.com/reference/xctest/xcuielementattributes			<section class="prog__container"><p>Describes the attributes exposed by UI elements. </p><pre><code>var elementType: XCUIElementType</code></pre></section>	https://developer.apple.com/reference/xctest/xcuielementattributes
XCUIElementQuery	A							https://developer.apple.com/reference/xctest/xcuielementquery			<section class="prog__container"><p>A query for locating UI elements. </p><pre><code>var debugDescription: String</code></pre></section>	https://developer.apple.com/reference/xctest/xcuielementquery
XCUIElementType	A							https://developer.apple.com/reference/xctest/xcuielementtype			<section class="prog__container"><p>The different types of UI element that can be located.</p><pre><code>case activityIndicator</code></pre></section>	https://developer.apple.com/reference/xctest/xcuielementtype
XCUIElementTypeQueryProvider	A							https://developer.apple.com/reference/xctest/xcuielementtypequeryprovider			<section class="prog__container"><p>A protocol adopted by classes that provide ready-made queries for descendant elements of specific types.</p><pre><code>XCUIElement</code></pre></section>	https://developer.apple.com/reference/xctest/xcuielementtypequeryprovider
XCUIKeyboardKey Constants	A							https://developer.apple.com/reference/xctest/xcuikeyboardkey_constants			<section class="prog__container"><p>Constants for use with typeKey(_:modifierFlags:) to represent keys that have no textual equivalent.</p><pre><code>typeKey(_:modifierFlags:)</code></pre></section>	https://developer.apple.com/reference/xctest/xcuikeyboardkey_constants
XCUIKeyModifierFlags	A							https://developer.apple.com/reference/xctest/xcuikeymodifierflags			<section class="prog__container"><p>Flags for keyboard modifiers such as shift, control, option, and command. </p><pre><code>static var alphaShift: XCUIKeyModifierFlags</code></pre></section>	https://developer.apple.com/reference/xctest/xcuikeymodifierflags
XCUIRemote	A							https://developer.apple.com/reference/xctest/xcuiremote			<section class="prog__container"><p>Simulates interaction with a physical remote control.</p><pre><code>class func shared()</code></pre></section>	https://developer.apple.com/reference/xctest/xcuiremote
XCUIRemoteButton	A							https://developer.apple.com/reference/xctest/xcuiremotebutton			<section class="prog__container"><p>A button on a physical remote control.</p><pre><code>case up</code></pre></section>	https://developer.apple.com/reference/xctest/xcuiremotebutton
XCUIUserInterfaceSizeClass	A							https://developer.apple.com/reference/xctest/xcuiuserinterfacesizeclass			<section class="prog__container"><p>Describes the available user interface size classes.</p><pre><code>case regular</code></pre></section>	https://developer.apple.com/reference/xctest/xcuiuserinterfacesizeclass
activity.h	A							https://developer.apple.com/reference/xpc/activity.h			<section class="prog__container"><p></p><pre><code>func xpc_activity_copy_criteria(xpc_activity_t)</code></pre></section>	https://developer.apple.com/reference/xpc/activity.h
debug.h	A							https://developer.apple.com/reference/xpc/debug.h			<section class="prog__container"><p></p><pre><code>func xpc_debugger_api_misuse_info()</code></pre></section>	https://developer.apple.com/reference/xpc/debug.h
XPC Services connection.h	A							https://developer.apple.com/reference/xpc/xpc_services_connection.h			<section class="prog__container"><p></p><pre><code>func xpc_connection_cancel(xpc_connection_t)</code></pre></section>	https://developer.apple.com/reference/xpc/xpc_services_connection.h
XPC Services endpoint.h	A							https://developer.apple.com/reference/xpc/xpc_services_endpoint.h			<section class="prog__container"><p></p><pre><code>func xpc_endpoint_create(xpc_connection_t)</code></pre></section>	https://developer.apple.com/reference/xpc/xpc_services_endpoint.h
XPC Services xpc.h	A							https://developer.apple.com/reference/xpc/xpc_services_xpc.h			<section class="prog__container"><p></p><pre><code>func xpc_array_append_value(xpc_object_t, xpc_object_t)</code></pre></section>	https://developer.apple.com/reference/xpc/xpc_services_xpc.h
