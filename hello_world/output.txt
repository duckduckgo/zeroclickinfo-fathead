hello world 1c-enterprise		https://github.com/leachim6/hello-world	Hello World in 1c-enterprise (1c-enterprise)	Message("Hello, World!");\\n\\n			
hello world actionscript		https://github.com/leachim6/hello-world	Hello World in actionscript (actionscript.as)	package \\n{\\n\\timport flash.display.Sprite;\\n\\timport flash.text.TextField;\\n\\t\\n\\tpublic class actionscript extends Sprite\\n\\t{\\n\\t\\tprivate var hello:TextField = new TextField();\\n\\t\\t\\n\\t\\tpublic function actionscript(){\\n\\t\\t\\thello.text = "Hello, World!";\\n\\t\\t\\taddChild(hello);\\n\\t\\t}\\n\\t}\\n}\\n			
hello world actionscript2		https://github.com/leachim6/hello-world	Hello World in actionscript2 (actionscript2.as)	trace( "Hello World" );			
hello world actionscript3		https://github.com/leachim6/hello-world	Hello World in actionscript3 (actionscript3.as)	package {\\n\\timport flash.display.Sprite;\\n\\tpublic class HelloWorld extends Sprite {\\n\\t\\tpublic function HelloWorld():void {\\n\\t\\t\\ttrace("Hello World");\\n\\t\\t}\\n\\t}\\n}			
hello world ada		https://github.com/leachim6/hello-world	Hello World in ada (ada.ada)	with Text_IO;\\nprocedure Hello_World is\\n\\tbegin\\n\\t\\tText_IO.Put_line("Hello World!");\\n\\tend Hello_World;\\n			
hello world algol60		https://github.com/leachim6/hello-world	Hello World in algol60 (algol60.algol60)	BEGIN\\n  FILE F(KIND=REMOTE);\\n  EBCDIC ARRAY E[0:11];\\n  REPLACE E BY "HELLO WORLD!";\\n  WRITE(F, *, E);\\nEND.\\n			
hello world algol68		https://github.com/leachim6/hello-world	Hello World in algol68 (algol68.algol68)	begin\\n  print(("Hello, world!",newline))\\nend\\n			
hello world apc		https://github.com/leachim6/hello-world	Hello World in apc (apc.apc)	probe program\\n{\\n\\ton_entry log ("Hello, World!\n");\\n}\\n			
hello world apl		https://github.com/leachim6/hello-world	Hello World in apl (apl.apl)	[]<-'Hello World!'			
hello world applescript		https://github.com/leachim6/hello-world	Hello World in applescript (applescript.scpt)	display dialog "Hello World"  \\n			
hello world arena		https://github.com/leachim6/hello-world	Hello World in arena (arena.are)	print("Hello World!");\\n			
hello world argh		https://github.com/leachim6/hello-world	Hello World in argh (argh.agh)	lppppppppppppsrfj\\n Hello World!*  j\\n              qPh			
hello world asp		https://github.com/leachim6/hello-world	Hello World in asp (asp.asp)	 <html>\\n     <body>                    \\n         <% Response.Write "Hello World!  How are you today?" %>                          \\n     </body>\\n</html>\\n			
hello world assembler_intel		https://github.com/leachim6/hello-world	Hello World in assembler_intel (assembler_intel.asm)	; hello_world.asm intel \\n\\n.model small\\n\\n.stack 100h\\n\\n.data\\nmsg db "Hello World!",'$'\\n\\n.code\\nmain proc\\n        mov ax,@data\\n        mov ds, ax\\n\\n; hello-world is there \\n        mov dx,offset msg\\n        mov ah,09\\n        int 21h\\n\\n        mov ax,4c00h\\n        int 21h\\n\\nmain endp\\nend main\\n			
hello world autohotkey		https://github.com/leachim6/hello-world	Hello World in autohotkey (autohotkey.ahk)	MsgBox, Hello World!\\n			
hello world autoit		https://github.com/leachim6/hello-world	Hello World in autoit (autoit.au3)	MsgBox(0, "Message Box", "Hello World!")			
hello world awk		https://github.com/leachim6/hello-world	Hello World in awk (awk.awk)	# awk -f awk.awk\\nBEGIN { print "Hello World" }\\n			
hello world B		https://github.com/leachim6/hello-world	Hello World in B (B.b)	/* Hello World in B */\\n\\nmain() {\\n    extern a, b, c;\\n      putchar (a); putchar (b); putchar (c); putchar ('!*n');\\n}\\n\\na 'hell' ;\\nb 'o, w' ;\\nc 'orld' ;\\n			
hello world bash		https://github.com/leachim6/hello-world	Hello World in bash (bash.bash)	#!/bin/bash\\n\\necho "Hello World!";			
hello world basic		https://github.com/leachim6/hello-world	Hello World in basic (basic.bas)	10 REM Hello World in BASIC\\n20 PRINT "Hello World"\\n			
hello world batch		https://github.com/leachim6/hello-world	Hello World in batch (batch.bat)	@echo off\\necho Hello, World!\\npause\\n			
hello world befunge		https://github.com/leachim6/hello-world	Hello World in befunge (befunge.be)	>"dlroW olleH",,,,,,,,,,,@\\n			
hello world BIT		https://github.com/leachim6/hello-world	Hello World in BIT (BIT.bit)	\\nLINENUMBERZEROCODEPRINTZEROGOTOONELINENUMBERONECODEPRINTONEGOTOONEZEROLINENUMBE\\nRONEZEROCODEPRINTZEROGOTOONEONELINENUMBERONEONECODEPRINTZEROGOTOONEZEROZEROLINE\\nNUMBERONEZEROZEROCODEPRINTONEGOTOONEZEROONELINENUMBERONEZEROONECODEPRINTZEROGOT\\nOONEONEZEROLINENUMBERONEONEZEROCODEPRINTZEROGOTOONEONEONELINENUMBERONEONEONECOD\\nEPRINTZEROGOTOONEZEROZEROZEROLINENUMBERONEZEROZEROZEROCODEPRINTZEROGOTOONEZEROZ\\nEROONELINENUMBERONEZEROZEROONECODEPRINTONEGOTOONEZEROONEZEROLINENUMBERONEZEROON\\nEZEROCODEPRINTONEGOTOONEZEROONEONELINENUMBERONEZEROONEONECODEPRINTZEROGOTOONEON\\nEZEROZEROLINENUMBERONEONEZEROZEROCODEPRINTZEROGOTOONEONEZEROONELINENUMBERONEONE\\nZEROONECODEPRINTONEGOTOONEONEONEZEROLINENUMBERONEONEONEZEROCODEPRINTZEROGOTOONE\\nONEONEONELINENUMBERONEONEONEONECODEPRINTONEGOTOONEZEROZEROZEROZEROLINENUMBERONE\\nZEROZEROZEROZEROCODEPRINTZEROGOTOONEZEROZEROZEROONELINENUMBERONEZEROZEROZEROONE\\nCODEPRINTONEGOTOONEZEROZEROONEZEROLINENUMBERONEZEROZEROONEZEROCODEPRINTONEGOTOO\\nNEZEROZEROONEONELINENUMBERONEZEROZEROONEONECODEPRINTZEROGOTOONEZEROONEZEROZEROL\\nINENUMBERONEZEROONEZEROZEROCODEPRINTONEGOTOONEZEROONEZEROONELINENUMBERONEZEROON\\nEZEROONECODEPRINTONEGOTOONEZEROONEONEZEROLINENUMBERONEZEROONEONEZEROCODEPRINTZE\\nROGOTOONEZEROONEONEONELINENUMBERONEZEROONEONEONECODEPRINTZEROGOTOONEONEZEROZERO\\nZEROLINENUMBERONEONEZEROZEROZEROCODEPRINTZEROGOTOONEONEZEROZEROONELINENUMBERONE\\nONEZEROZEROONECODEPRINTONEGOTOONEONEZEROONEZEROLINENUMBERONEONEZEROONEZEROCODEP\\nRINTONEGOTOONEONEZEROONEONELINENUMBERONEONEZEROONEONECODEPRINTZEROGOTOONEONEONE\\nZEROZEROLINENUMBERONEONEONEZEROZEROCODEPRINTONEGOTOONEONEONEZEROONELINENUMBERON\\nEONEONEZEROONECODEPRINTONEGOTOONEONEONEONEZEROLINENUMBERONEONEONEONEZEROCODEPRI\\nNTZEROGOTOONEONEONEONEONELINENUMBERONEONEONEONEONECODEPRINTZEROGOTOONEZEROZEROZ\\nEROZEROZEROLINENUMBERONEZEROZEROZEROZEROZEROCODEPRINTZEROGOTOONEZEROZEROZEROZER\\nOONELINENUMBERONEZEROZEROZEROZEROONECODEPRINTONEGOTOONEZEROZEROZEROONEZEROLINEN\\nUMBERONEZEROZEROZEROONEZEROCODEPRINTONEGOTOONEZEROZEROZEROONEONELINENUMBERONEZE\\nROZEROZEROONEONECODEPRINTZEROGOTOONEZEROZEROONEZEROZEROLINENUMBERONEZEROZEROONE\\nZEROZEROCODEPRINTONEGOTOONEZEROZEROONEZEROONELINENUMBERONEZEROZEROONEZEROONECOD\\nEPRINTONEGOTOONEZEROZEROONEONEZEROLINENUMBERONEZEROZEROONEONEZEROCODEPRINTONEGO\\nTOONEZEROZEROONEONEONELINENUMBERONEZEROZEROONEONEONECODEPRINTONEGOTOONEZEROONEZ\\nEROZEROZEROLINENUMBERONEZEROONEZEROZEROZEROCODEPRINTZEROGOTOONEZEROONEZEROZEROO\\nNELINENUMBERONEZEROONEZEROZEROONECODEPRINTZEROGOTOONEZEROONEZEROONEZEROLINENUMB\\nERONEZEROONEZEROONEZEROCODEPRINTONEGOTOONEZEROONEZEROONEONELINENUMBERONEZEROONE\\nZEROONEONECODEPRINTZEROGOTOONEZEROONEONEZEROZEROLINENUMBERONEZEROONEONEZEROZERO\\nCODEPRINTZEROGOTOONEZEROONEONEZEROONELINENUMBERONEZEROONEONEZEROONECODEPRINTZER\\nOGOTOONEZEROONEONEONEZEROLINENUMBERONEZEROONEONEONEZEROCODEPRINTZEROGOTOONEZERO\\nONEONEONEONELINENUMBERONEZEROONEONEONEONECODEPRINTZEROGOTOONEONEZEROZEROZEROZER\\nOLINENUMBERONEONEZEROZEROZEROZEROCODEPRINTZEROGOTOONEONEZEROZEROZEROONELINENUMB\\nERONEONEZEROZEROZEROONECODEPRINTONEGOTOONEONEZEROZEROONEZEROLINENUMBERONEONEZER\\nOZEROONEZEROCODEPRINTONEGOTOONEONEZEROZEROONEONELINENUMBERONEONEZEROZEROONEONEC\\nODEPRINTONEGOTOONEONEZEROONEZEROZEROLINENUMBERONEONEZEROONEZEROZEROCODEPRINTZER\\nOGOTOONEONEZEROONEZEROONELINENUMBERONEONEZEROONEZEROONECODEPRINTONEGOTOONEONEZE\\nROONEONEZEROLINENUMBERONEONEZEROONEONEZEROCODEPRINTONEGOTOONEONEZEROONEONEONELI\\nNENUMBERONEONEZEROONEONEONECODEPRINTONEGOTOONEONEONEZEROZEROZEROLINENUMBERONEON\\nEONEZEROZEROZEROCODEPRINTZEROGOTOONEONEONEZEROZEROONELINENUMBERONEONEONEZEROZER\\nOONECODEPRINTONEGOTOONEONEONEZEROONEZEROLINENUMBERONEONEONEZEROONEZEROCODEPRINT\\nONEGOTOONEONEONEZEROONEONELINENUMBERONEONEONEZEROONEONECODEPRINTZEROGOTOONEONEO\\nNEONEZEROZEROLINENUMBERONEONEONEONEZEROZEROCODEPRINTONEGOTOONEONEONEONEZEROONEL\\nINENUMBERONEONEONEONEZEROONECODEPRINTONEGOTOONEONEONEONEONEZEROLINENUMBERONEONE\\nONEONEONEZEROCODEPRINTONEGOTOONEONEONEONEONEONELINENUMBERONEONEONEONEONEONECODE\\nPRINTONEGOTOONEZEROZEROZEROZEROZEROZEROLINENUMBERONEZEROZEROZEROZEROZEROZEROCOD\\nEPRINTZEROGOTOONEZEROZEROZEROZEROZEROONELINENUMBERONEZEROZEROZEROZEROZEROONECOD\\nEPRINTONEGOTOONEZEROZEROZEROZEROONEZEROLINENUMBERONEZEROZEROZEROZEROONEZEROCODE\\nPRINTONEGOTOONEZEROZEROZEROZEROONEONELINENUMBERONEZEROZEROZEROZEROONEONECODEPRI\\nNTONEGOTOONEZEROZEROZEROONEZEROZEROLINENUMBERONEZEROZEROZEROONEZEROZEROCODEPRIN\\nTZEROGOTOONEZEROZEROZEROONEZEROONELINENUMBERONEZEROZEROZEROONEZEROONECODEPRINTZ\\nEROGOTOONEZEROZEROZEROONEONEZEROLINENUMBERONEZEROZEROZEROONEONEZEROCODEPRINTONE\\nGOTOONEZEROZEROZEROONEONEONELINENUMBERONEZEROZEROZEROONEONEONECODEPRINTZEROGOTO\\nONEZEROZEROONEZEROZEROZEROLINENUMBERONEZEROZEROONEZEROZEROZEROCODEPRINTZEROGOTO\\nONEZEROZEROONEZEROZEROONELINENUMBERONEZEROZEROONEZEROZEROONECODEPRINTONEGOTOONE\\nZEROZEROONEZEROONEZEROLINENUMBERONEZEROZEROONEZEROONEZEROCODEPRINTONEGOTOONEZER\\nOZEROONEZEROONEONELINENUMBERONEZEROZEROONEZEROONEONECODEPRINTZEROGOTOONEZEROZER\\nOONEONEZEROZEROLINENUMBERONEZEROZEROONEONEZEROZEROCODEPRINTONEGOTOONEZEROZEROON\\nEONEZEROONELINENUMBERONEZEROZEROONEONEZEROONECODEPRINTONEGOTOONEZEROZEROONEONEO\\nNEZEROLINENUMBERONEZEROZEROONEONEONEZEROCODEPRINTZEROGOTOONEZEROZEROONEONEONEON\\nELINENUMBERONEZEROZEROONEONEONEONECODEPRINTZEROGOTOONEZEROONEZEROZEROZEROZEROLI\\nNENUMBERONEZEROONEZEROZEROZEROZEROCODEPRINTZEROGOTOONEZEROONEZEROZEROZEROONELIN\\nENUMBERONEZEROONEZEROZEROZEROONECODEPRINTONEGOTOONEZEROONEZEROZEROONEZEROLINENU\\nMBERONEZEROONEZEROZEROONEZEROCODEPRINTONEGOTOONEZEROONEZEROZEROONEONELINENUMBER\\nONEZEROONEZEROZEROONEONECODEPRINTZEROGOTOONEZEROONEZEROONEZEROZEROLINENUMBERONE\\nZEROONEZEROONEZEROZEROCODEPRINTZEROGOTOONEZEROONEZEROONEZEROONELINENUMBERONEZER\\nOONEZEROONEZEROONECODEPRINTONEGOTOONEZEROONEZEROONEONEZEROLINENUMBERONEZEROONEZ\\nEROONEONEZEROCODEPRINTZEROGOTOONEZEROONEZEROONEONEONELINENUMBERONEZEROONEZEROON\\nEONEONECODEPRINTZEROGOTOONEZEROONEONEZEROZEROZEROLINENUMBERONEZEROONEONEZEROZER\\nOZEROCODEPRINTZEROGOTOONEZEROONEONEZEROZEROONELINENUMBERONEZEROONEONEZEROZEROON\\nECODEPRINTZEROGOTOONEZEROONEONEZEROONEZEROLINENUMBERONEZEROONEONEZEROONEZEROCOD\\nEPRINTONEGOTOONEZEROONEONEZEROONEONELINENUMBERONEZEROONEONEZEROONEONECODEPRINTZ\\nEROGOTOONEZEROONEONEONEZEROZEROLINENUMBERONEZEROONEONEONEZEROZEROCODEPRINTZEROG\\nOTOONEZEROONEONEONEZEROONELINENUMBERONEZEROONEONEONEZEROONECODEPRINTZEROGOTOONE\\nZEROONEONEONEONEZEROLINENUMBERONEZEROONEONEONEONEZEROCODEPRINTZEROGOTOONEZEROON\\nEONEONEONEONELINENUMBERONEZEROONEONEONEONEONECODEPRINTONE\\n			
hello world boo		https://github.com/leachim6/hello-world	Hello World in boo (boo.boo)	print "Hello World"\\n			
hello world brainfuck		https://github.com/leachim6/hello-world	Hello World in brainfuck (brainfuck.bf)	 ++++++++++[>+++++++>++++++++++>+++>+<<<<-]>++.>+.+++++++..+++.>++.<<+++++++++++++++.>.+++.------.--------.>+.>.\\n			
hello world broccoli		https://github.com/leachim6/hello-world	Hello World in broccoli (broccoli.brocc)	(out "Hello World" crlf)\\n			
hello world c++		https://github.com/leachim6/hello-world	Hello World in c++ (c++.cpp)	#include<iostream>\\n\\nusing namespace std;\\n\\nint main()\\n{\\n\\tcout << "Hello World" << endl;\\n}\\n			
hello world c		https://github.com/leachim6/hello-world	Hello World in c (c.c)	#include<stdio.h>\\n\\nint main(void) {\\n\\tprintf("Hello World\n");\\n\\treturn 0;\\n}\\n			
hello world caml		https://github.com/leachim6/hello-world	Hello World in caml (caml.ml)	print_endline "Hello world!";;\\n			
hello world cat		https://github.com/leachim6/hello-world	Hello World in cat (cat.cat)	Hello World\\n			
hello world chef		https://github.com/leachim6/hello-world	Hello World in chef (chef.ch)	\\n World Souffle.\\n \\n Ingredients.\\n 72 g haricot beans\\n 101 eggs\\n 108 g lard\\n 111 cups oil\\n 32 zucchinis\\n 119 ml water\\n 114 g red salmon\\n 100 g dijon mustard\\n 33 potatoes\\n \\n Method.\\n Put potatoes into the mixing bowl.\\n Put dijon mustard into the mixing bowl.\\n Put lard into the mixing bowl.\\n Put red salmon into the mixing bowl.\\n Put oil into the mixing bowl.\\n Put water into the mixing bowl.\\n Put zucchinis into the mixing bowl.\\n Put oil into the mixing bowl.\\n Put lard into the mixing bowl.\\n Put lard into the mixing bowl.\\n Put eggs into the mixing bowl.\\n Put haricot beans into the mixing bowl.\\n Liquefy contents of the mixing bowl.\\n Pour contents of the mixing bowl into the baking dish.\\n \\n Serves 1.\\n\\n			
hello world cil		https://github.com/leachim6/hello-world	Hello World in cil (cil.il)	// ilasm cil.il\\n.assembly HelloWorld {}\\n.method public static void Main() cil managed\\n{\\n     .entrypoint\\n     .maxstack 1\\n     ldstr "Hello World"\\n     call void [mscorlib]System.Console::WriteLine(string)\\n     ret\\n}\\n			
hello world clipper		https://github.com/leachim6/hello-world	Hello World in clipper (clipper.prg)	? 'Hello World'\\n			
hello world clips		https://github.com/leachim6/hello-world	Hello World in clips (clips.clips)	(defrule hw\\n    (f ?x)\\n=>\\n    (printout t ?x crlf))\\n\\n(assert (f "Hello World"))\\n\\n(run)\\n			
hello world clisp		https://github.com/leachim6/hello-world	Hello World in clisp (clisp.lisp)	(write-line "Hello World")			
hello world clojure		https://github.com/leachim6/hello-world	Hello World in clojure (clojure.clj)	(println "Hello, World")\\n			
hello world cobol		https://github.com/leachim6/hello-world	Hello World in cobol (cobol.cbl)	IDENTIFICATION DIVISION.\\nPROGRAM-ID. HELLOWORLD.\\nPROCEDURE DIVISION.\\nMAIN.\\n  DISPLAY 'Hello, world.'.\\n  STOP RUN.\\n			
hello world coffeescript		https://github.com/leachim6/hello-world	Hello World in coffeescript (coffeescript.coffee)	alert "Hello, World!"\\n			
hello world coldfusion		https://github.com/leachim6/hello-world	Hello World in coldfusion (coldfusion.cfm)	<cfset message = "Hello World">\\n<cfoutput> #message#</cfoutput>\\n			
hello world csh		https://github.com/leachim6/hello-world	Hello World in csh (csh.csh)	#!/bin/csh\\necho "Hello, World!"\\n			
hello world csharp		https://github.com/leachim6/hello-world	Hello World in csharp (csharp.cs)	class HelloWorld {\\n\\tstatic void Main() {\\n\\t\\tSystem.Console.WriteLine("Hello World");\\n\\t}\\n}			
hello world d		https://github.com/leachim6/hello-world	Hello World in d (d.D)	// Hello World in D\\nimport std.stdio;\\n\\nvoid main()\\n{\\n\\t   writefln("Hello World!");\\n}\\n			
hello world db2		https://github.com/leachim6/hello-world	Hello World in db2 (db2.sql)	VALUES('hello world')\\n			
hello world delphi		https://github.com/leachim6/hello-world	Hello World in delphi (delphi.delphi)	// Hello World in Delphi\\nProgram Hello_World;\\n\\n($APPTYPE CONSOLE)\\n\\nBegin\\n  WriteLn('Hello World');\\nEnd.\\n			
hello world delphi		https://github.com/leachim6/hello-world	Hello World in delphi (delphi.pas)	program HelloWorld;\\n{$APPTYPE CONSOLE}\\n\\nbegin\\n\\tWriteLn('Hello World');\\nend.			
hello world dos		https://github.com/leachim6/hello-world	Hello World in dos (dos.bat)	@echo Hello World!\\n			
hello world dtrace		https://github.com/leachim6/hello-world	Hello World in dtrace (dtrace.d)	#!/usr/sbin/dtrace -qs\\nBEGIN {\\n\\tprintf("Hello World");\\n\\texit(0);\\n}\\n			
hello world dylan		https://github.com/leachim6/hello-world	Hello World in dylan (dylan.dl)	define method main (#rest args)\\n  princ("Hello world!");\\nend;\\n\\nmain();\\n			
hello world ebuild		https://github.com/leachim6/hello-world	Hello World in ebuild (ebuild.ebuild)	# Copyright 1999-2008 Gentoo Foundation\\n# Distributed under the terms of the GNU General Public License v2\\n# $Header: $\\n\\nDESCRIPTION="Hello World"\\nHOMEPAGE="http://hello-world.org/"\\nSRC_URI="http://hello-world.org/"\\n\\nLICENSE="GPL"\\nSLOT="0"\\nKEYWORDS="~x86"\\nIUSE=""\\n\\nDEPEND=""\\nRDEPEND=""\\n\\nsrc_compile() {\\n\\teinfo "Hello World"\\n}\\n			
hello world Eiffel		https://github.com/leachim6/hello-world	Hello World in Eiffel (Eiffel.eiff)	indexing "Hello World in Eiffel , from http://roesler-ac.de/wolfram/hello.htm#Eiffel"\\n\\nclass HELLO\\n\\ncreation\\n\\trun\\n\\nfeature\\n\\n\\trun is\\n\\t\\tlocal\\n\\t\\t\\tio : BASIC_IO;\\n\\t\\tdo\\n\\t\\t\\t!!io;\\n\\t\\t\\tio.put_string("Hello World!");\\n\\t\\t\\tio.put_newline\\n\\t\\tend; -- run\\nend; -- class HELLO\\n			
hello world erlang_hw		https://github.com/leachim6/hello-world	Hello World in erlang_hw (erlang_hw.erl)	-module(erlang_hw).\\n-export([start/0]).\\n\\nstart() ->\\n  io:format("Hello World~n").			
hello world falcon		https://github.com/leachim6/hello-world	Hello World in falcon (falcon.fal)	#!/usr/bin/env falcon\\n\\n> "Hello, World"\\n			
hello world focal		https://github.com/leachim6/hello-world	Hello World in focal (focal.fc)	0.1.0.1 TYPE "HELLO WORLD" , !\\n			
hello world forth		https://github.com/leachim6/hello-world	Hello World in forth (forth.f)	: HELLO S" Hello, world!" TELL CR ;			
hello world fortran		https://github.com/leachim6/hello-world	Hello World in fortran (fortran.f90)	program helloworld\\nprint *,'Hello World'\\nend program helloworld			
hello world fortran77		https://github.com/leachim6/hello-world	Hello World in fortran77 (fortran77.f77)	      PROGRAM HELLOW\\n      WRITE(UNIT=*, FMT=*) 'Hello World'\\n      END\\n			
hello world go		https://github.com/leachim6/hello-world	Hello World in go (go.go)	package main\\n\\nimport "fmt"\\n\\nfunc main() {\\n  fmt.Printf("Hello, 世界\n")\\n}\\n			
hello world golfscript		https://github.com/leachim6/hello-world	Hello World in golfscript (golfscript.rb)	"Hello World"\\n			
hello world gri		https://github.com/leachim6/hello-world	Hello World in gri (gri.gri)	show "hello world"			
hello world groovy		https://github.com/leachim6/hello-world	Hello World in groovy (groovy.groovy)	println "Hello World"\\n			
hello world haskell		https://github.com/leachim6/hello-world	Hello World in haskell (haskell.hs)	module Main\\n  where\\n\\nmain=putStrLn "Hello, World!"			
hello world Haxe		https://github.com/leachim6/hello-world	Hello World in Haxe (Haxe.hx)	class Haxe {\\n\\tstatic function main() {\\n\\t\\ttrace("Hello, World!");\\n\\t}\\n}\\n			
hello world hq9+		https://github.com/leachim6/hello-world	Hello World in hq9+ (hq9+.h)	H			
hello world html		https://github.com/leachim6/hello-world	Hello World in html (html.html)	<!DOCTYPE html>\\n<html>\\n<head>\\n<title>Hello World HTML</title>\\n</head>\\n<body>\\n<h1>Hello World</h1>\\n</body>\\n</html>\\n			
hello world ici		https://github.com/leachim6/hello-world	Hello World in ici (ici.ici)	printf("Hello World\n");			
hello world icon		https://github.com/leachim6/hello-world	Hello World in icon (icon.icn)	procedure main()\\n    write("Hello World");\\nend			
hello world Io		https://github.com/leachim6/hello-world	Hello World in Io (Io.Io)	"Hello, world!\n" print\\n			
hello world ioke		https://github.com/leachim6/hello-world	Hello World in ioke (ioke.ik)	"Hello, World!" println\\n			
hello world j		https://github.com/leachim6/hello-world	Hello World in j (j.ijs)	#!/opt/local/bin/jc\\necho 'Hello World'\\nexit ''\\n			
hello world jade		https://github.com/leachim6/hello-world	Hello World in jade (jade.jade)	helloWorld();\\n\\nbegin\\n   write "Hello World";\\nend;			
hello world jason		https://github.com/leachim6/hello-world	Hello World in jason (jason.mas2j)	!greeting.\\n+!greeting : true <- .print("Hello World").			
hello world java		https://github.com/leachim6/hello-world	Hello World in java (java.java)	public class java {\\n\\tpublic static void main(String[] args) {\\n\\t\\tSystem.out.println("Hello World");\\n\\t}\\n}\\n			
hello world javascript		https://github.com/leachim6/hello-world	Hello World in javascript (javascript.js)	alert("Hello World");			
hello world jess		https://github.com/leachim6/hello-world	Hello World in jess (jess.cpl)	(printout t "Hello World")			
hello world k		https://github.com/leachim6/hello-world	Hello World in k (k.k)	"Hello World\n"			
hello world ksh		https://github.com/leachim6/hello-world	Hello World in ksh (ksh.ksh)	#!/bin/ksh\\necho "Hello, World!"\\n			
hello world LaTeX		https://github.com/leachim6/hello-world	Hello World in LaTeX (LaTeX.tex)	\documentclass{article}\\n\begin{document}\\nHello World\\n\end{document}\\n			
hello world limbo		https://github.com/leachim6/hello-world	Hello World in limbo (limbo.b)	implement Hello;\\n\\ninclude "sys.m";\\n\\tsys: Sys;\\ninclude "draw.m";\\n\\nHello: module\\n{\\n\\tinit:\\tfn(ctxt: ref Draw->Context, argv: list of string);\\n};\\n\\ninit(ctxt: ref Draw->Context, argv: list of string)\\n{\\n\\tsys = load Sys Sys->PATH;\\n\\tsys->print("Hello World\n");\\n}\\n			
hello world linux-x86		https://github.com/leachim6/hello-world	Hello World in linux-x86 (linux-x86.nasm)	# nasm linux-x86.nasm -o linux-x86.o -f elf && ld linux-x86.o -m elf_i386 -o linux-x86\\n\\nsection .data\\nmsg     db      "Hello World", 0xa\\nlen     equ     $ - msg\\n\\nsection .text\\nglobal _start\\n_start:\\n\\tmov     eax, 4\\n\\tmov     ebx, 1\\n\\tmov     ecx, msg\\n\\tmov     edx, len\\n\\tint     0x80\\n\\t\\n\\tmov     eax, 1\\n\\tmov     ebx, 0\\n\\tint     0x80\\n			
hello world lisp		https://github.com/leachim6/hello-world	Hello World in lisp (lisp.lsp)	; LISP\\n(DEFUN HELLO-WORLD ()\\n  (PRINT (LIST 'HELLO 'WORLD))\\n)\\n			
hello world llvm		https://github.com/leachim6/hello-world	Hello World in llvm (llvm.ll)	; llvm-as llvm.ll\\n; x86 assembly: llc llvm.bc -o llvm.s -march x86\\n; interpreter: lli llvm.bc\\n\\ntarget datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:128:128"\\n@.str = internal constant [12 x i8] c"Hello World\00"\\n\\n; puts from libc\\ndeclare i32 @puts(i8*)\\n\\ndefine i32 @main(...) {\\n\\tcall i32 @puts(i8* getelementptr([12 x i8]* @.str, i32 0, i32 0))\\n\\tret i32 0\\n}\\n			
hello world lolcode		https://github.com/leachim6/hello-world	Hello World in lolcode (lolcode.lol)	HAI\\nCAN HAS STDIO?\\nVISIBLE "Hello World"\\nKTHXBYE\\n			
hello world lsl		https://github.com/leachim6/hello-world	Hello World in lsl (lsl.lsl)	default\\n{\\n    state_entry()\\n    {\\n        llSay(0, "Hello World");\\n    }\\n}			
hello world lua		https://github.com/leachim6/hello-world	Hello World in lua (lua.lua)	print("Hello World")			
hello world m4		https://github.com/leachim6/hello-world	Hello World in m4 (m4.m4)	Hello			
hello world malbolge		https://github.com/leachim6/hello-world	Hello World in malbolge (malbolge.mbg)	(=<`:9876Z4321UT.-Q+*)M'&%$H"!~}|Bzy?=|{z]KwZY44Eq0/{mlk**\\nhKs_dG5[m_BA{?-Y;;Vb'rR5431M}/.zHGwEDCAA@98\6543W10/.R,+O< \\n			
hello world matlab		https://github.com/leachim6/hello-world	Hello World in matlab (matlab.m)	disp('hello world')			
hello world mel		https://github.com/leachim6/hello-world	Hello World in mel (mel.mel)	proc helloWorld () {\\n   print "Hello World\n";\\n}\\nhelloWorld;\\n			
hello world modula-2		https://github.com/leachim6/hello-world	Hello World in modula-2 (modula-2.mod)	MODULE HelloWorld;\\n\\nFROM Terminal2 IMPORT WriteString, WriteLn;\\n\\nBEGIN\\n\\n    WriteString("Hello World");\\n    WriteLn;\\n    \\nEND HelloWorld.			
hello world modula-3		https://github.com/leachim6/hello-world	Hello World in modula-3 (modula-3.m3)	MODULE HelloWorld;\\nIMPORT Io;\\nBEGIN\\n    IO.Put ("Hello World\n")\\nEND HelloWorld.			
hello world morsecode		https://github.com/leachim6/hello-world	Hello World in morsecode (morsecode)	.... . .-.. .-.. ---   .-- --- .-. .-.. -..\\n			
hello world muf		https://github.com/leachim6/hello-world	Hello World in muf (muf.muf)	: main\\n    me @ "Hello World" notify\\n;\\n			
hello world mysql		https://github.com/leachim6/hello-world	Hello World in mysql (mysql.sql)	SET @message = 'Hello World!';\\nSELECT @message;\\n			
hello world nemerle		https://github.com/leachim6/hello-world	Hello World in nemerle (nemerle.n)	class Hello\\n{\\n    static Main () : void\\n    {\\n        System.Console.WriteLine ("Hello world!");\\n    }\\n}			
hello world newtonscript		https://github.com/leachim6/hello-world	Hello World in newtonscript (newtonscript.nwt)	baseview :=\\n   {viewBounds: {left: -3, top: 71, right: 138, bottom: 137},\\n    viewFlags: 581,\\n    declareSelf: 'base,\\n    _proto: protoFloatNGo,\\n    debug: "baseview"\\n   };\\n\\ntextview := * child of baseview *\\n   {text: "Hello World!",\\n    viewBounds: {left: 33, top: 24, right: 113, bottom: 46},\\n    viewFlags: 579,\\n    _proto: protoStaticText,\\n    debug: "textview"\\n   };\\n			
hello world nice		https://github.com/leachim6/hello-world	Hello World in nice (nice.nice)	void main(String[] args){ \\n   println("hello world"); \\n}			
hello world nimrod		https://github.com/leachim6/hello-world	Hello World in nimrod (nimrod.nim)	echo("hello world")\\n			
hello world node		https://github.com/leachim6/hello-world	Hello World in node (node.js)	console.log('Hello world!');\\n			
hello world nu		https://github.com/leachim6/hello-world	Hello World in nu (nu.nu)	(puts "Hello World")\\n			
hello world oberon-2		https://github.com/leachim6/hello-world	Hello World in oberon-2 (oberon-2.obn)	MODULE HelloWorld;                     \\nIMPORT Out;\\nBEGIN\\n  Out.String( "Hello World" );\\n  Out.Ln;\\nEND HelloWorld.			
hello world oberon		https://github.com/leachim6/hello-world	Hello World in oberon (oberon.o)	MODULE HelloWorld;\\n\\nIMPORT Out;\\n\\nBEGIN\\n   Out.Open;\\n   Out.String('Hello World');\\nEND HelloWorld.\\n			
hello world objc		https://github.com/leachim6/hello-world	Hello World in objc (objc.m)	#import <Cocoa/Cocoa.h>\\n\\nint main(int argc, char *argv[])\\n{\\n    NSLog(@"Hello, World!\n");\\n\\treturn 0;\\n}\\n			
hello world objective-j		https://github.com/leachim6/hello-world	Hello World in objective-j (objective-j.j)	document.write("Hello, World!");\\n			
hello world ocaml		https://github.com/leachim6/hello-world	Hello World in ocaml (ocaml.ml)	print_string "Hello World\n"			
hello world octave		https://github.com/leachim6/hello-world	Hello World in octave (octave.octave)	#Hello World in Octave (http://www.octave.org/)\\nprintf("Hello World\n");\\n			
hello world ooc		https://github.com/leachim6/hello-world	Hello World in ooc (ooc.ooc)	main: func {\\n    "Hello World" println()\\n}\\n\\n			
hello world ook		https://github.com/leachim6/hello-world	Hello World in ook (ook.ok)	Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\\nOok. Ook. Ook. Ook. Ook! Ook? Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook! Ook! Ook? Ook! Ook? Ook.\\nOok! Ook. Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\\nOok. Ook. Ook! Ook? Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook?\\nOok! Ook! Ook? Ook! Ook? Ook. Ook. Ook. Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook.\\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook! Ook. Ook. Ook. Ook. Ook.\\nOok. Ook. Ook! Ook. Ook. Ook? Ook. Ook? Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook.\\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook? Ook. Ook. Ook.\\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook! Ook! Ook? Ook! Ook? Ook. Ook! Ook.\\nOok. Ook? Ook. Ook? Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook? Ook. Ook. Ook.\\nOok. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.\\nOok. Ook? Ook! Ook! Ook? Ook! Ook? Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook.\\nOok? Ook. Ook? Ook. Ook? Ook. Ook? Ook. Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook.\\nOok! Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook.\\nOok! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!\\nOok! Ook. Ook. Ook? Ook. Ook? Ook. Ook. Ook! Ook.\\n\\n			
hello world OpenLaszlo		https://github.com/leachim6/hello-world	Hello World in OpenLaszlo (OpenLaszlo.lzx)	<canvas>\\n    <text>Hello World!</text>\\n</canvas>\\n			
hello world pascal		https://github.com/leachim6/hello-world	Hello World in pascal (pascal.p)	program HelloWorld(output);\\nbegin\\n        writeln('Hello World')\\nend.\\n			
hello world perl		https://github.com/leachim6/hello-world	Hello World in perl (perl.pl)	#!/usr/bin/perl\\nprint "Hello World\n";\\n			
hello world php		https://github.com/leachim6/hello-world	Hello World in php (php.php)	<?php\\n\\tprint("Hello World");\\n?>\\n			
hello world pike		https://github.com/leachim6/hello-world	Hello World in pike (pike.pike)	// Hello world in Pike (pike.roxen.com)\\n\\nint main(){\\n          write("Hello World!\n");\\n}\\n			
hello world pizza		https://github.com/leachim6/hello-world	Hello World in pizza (pizza.pizza)	class HelloWorld {\\n  public static void main(String[] args) {\\n    System.out.println("Hello World");\\n  }\\n}			
hello world pluvo		https://github.com/leachim6/hello-world	Hello World in pluvo (pluvo.pvo)	say "Hello World"\\n			
hello world postgresql		https://github.com/leachim6/hello-world	Hello World in postgresql (postgresql.sql)	SELECT 'Hello World' as hello_message;\\n			
hello world postscript		https://github.com/leachim6/hello-world	Hello World in postscript (postscript.ps)	% run> gs -q -sDEVICE=nullpage postscript.ps\\n(Hello world!\n) print quit			
hello world postscript_page		https://github.com/leachim6/hello-world	Hello World in postscript_page (postscript_page.ps)	% run> gs -q postscript_page.ps\\n/pt {72 div} def\\n/y 9 def\\n/textdraw {/Courier findfont 12 pt scalefont setfont 8 pt y moveto show} def\\n\\n72 72 scale\\n0 0 0 setrgbcolor\\n\\n(Hello world!) textdraw\\nshowpage\\nquit			
hello world prolog		https://github.com/leachim6/hello-world	Hello World in prolog (prolog.pro)	write('Hello World').\\n			
hello world python		https://github.com/leachim6/hello-world	Hello World in python (python.py)	#!/usr/bin/env python\\nprint "Hello World"\\n			
hello world python3		https://github.com/leachim6/hello-world	Hello World in python3 (python3.py)	#!/usr/bin/env python\\nprint("Hello World")\\n			
hello world qore		https://github.com/leachim6/hello-world	Hello World in qore (qore.q)	#!/usr/bin/env qore\\n%exec-class HelloWorld\\nclass HelloWorld\\n{\\n    constructor()\\n    {\\n\\t    background $.say("Hello World");\\n    }\\n    private say($arg)\\n    {\\n\\t    printf("%s\n", $arg);\\n    }\\n}\\n			
hello world qu		https://github.com/leachim6/hello-world	Hello World in qu (qu.qu)	'Hello, World!'\\n			
hello world QuakeC		https://github.com/leachim6/hello-world	Hello World in QuakeC (QuakeC.qc)	bprint("Hello World\n");			
hello world R		https://github.com/leachim6/hello-world	Hello World in R (R.R)	cat("Hello world\n")			
hello world racket		https://github.com/leachim6/hello-world	Hello World in racket (racket.rkt)	#lang racket\\n(display "Hello world")\\n			
hello world ratfor		https://github.com/leachim6/hello-world	Hello World in ratfor (ratfor.ratfor)	print *, 'Hello, world'\\nend			
hello world rebol		https://github.com/leachim6/hello-world	Hello World in rebol (rebol.r)	print "Hello World!"\\n			
hello world rexx		https://github.com/leachim6/hello-world	Hello World in rexx (rexx.rexx)	<<hello.rexx>>=\\nSay "Hello, World!"\\n			
hello world ruby		https://github.com/leachim6/hello-world	Hello World in ruby (ruby.rb)	#!/usr/bin/ruby\\nputs "Hello World"\\n			
hello world scala		https://github.com/leachim6/hello-world	Hello World in scala (scala.scala)	object HelloWorld extends Application {\\n  println("Hello World")\\n}\\n			
hello world scheme		https://github.com/leachim6/hello-world	Hello World in scheme (scheme.scm)	(display "Hello World") (newline)\\n			
hello world shakespeare		https://github.com/leachim6/hello-world	Hello World in shakespeare (shakespeare.spl)	The Infamous Hello World Program.\\n\\nRomeo, a young man with a remarkable patience.\\nJuliet, a likewise young woman of remarkable grace.\\nOphelia, a remarkable woman much in dispute with Hamlet.\\nHamlet, the flatterer of Andersen Insulting A/S.\\n\\n\\n                    Act I: Hamlet's insults and flattery.\\n\\n                    Scene I: The insulting of Romeo.\\n\\n[Enter Hamlet and Romeo]\\n\\nHamlet:\\n You lying stupid fatherless big smelly half-witted coward!\\n You are as stupid as the difference between a handsome rich brave\\n hero and thyself! Speak your mind!\\n\\n You are as brave as the sum of your fat little stuffed misused dusty\\n old rotten codpiece and a beautiful fair warm peaceful sunny summer's\\n day. You are as healthy as the difference between the sum of the\\n sweetest reddest rose and my father and yourself! Speak your mind!\\n\\n You are as cowardly as the sum of yourself and the difference\\n between a big mighty proud kingdom and a horse. Speak your mind.\\n\\n Speak your mind!\\n\\n[Exit Romeo]\\n\\n                    Scene II: The praising of Juliet.\\n\\n[Enter Juliet]\\n\\nHamlet:\\n Thou art as sweet as the sum of the sum of Romeo and his horse and his\\n black cat! Speak thy mind!\\n\\n[Exit Juliet]\\n\\n                    Scene III: The praising of Ophelia.\\n\\n[Enter Ophelia]\\n\\nHamlet:\\n Thou art as lovely as the product of a large rural town and my amazing\\n bottomless embroidered purse. Speak thy mind!\\n\\n Thou art as loving as the product of the bluest clearest sweetest sky\\n and the sum of a squirrel and a white horse. Thou art as beautiful as\\n the difference between Juliet and thyself. Speak thy mind!\\n\\n[Exeunt Ophelia and Hamlet]\\n\\n\\n                    Act II: Behind Hamlet's back.\\n\\n                    Scene I: Romeo and Juliet's conversation.\\n\\n[Enter Romeo and Juliet]\\n\\nRomeo:\\n Speak your mind. You are as worried as the sum of yourself and the\\n difference between my small smooth hamster and my nose. Speak your\\n mind!\\n\\nJuliet:\\n Speak YOUR mind! You are as bad as Hamlet! You are as small as the\\n difference between the square of the difference between my little pony\\n and your big hairy hound and the cube of your sorry little\\n codpiece. Speak your mind!\\n\\n[Exit Romeo]\\n\\n                    Scene II: Juliet and Ophelia's conversation.\\n\\n[Enter Ophelia]\\n\\nJuliet:\\n Thou art as good as the quotient between Romeo and the sum of a small\\n furry animal and a leech. Speak your mind!\\n\\nOphelia:\\n Thou art as disgusting as the quotient between Romeo and twice the\\n difference between a mistletoe and an oozing infected blister! Speak\\n your mind!\\n\\n[Exeunt]\\n			
hello world shell		https://github.com/leachim6/hello-world	Hello World in shell (shell.sh)	#!/bin/sh\\necho "Hello World"\\n			
hello world simula		https://github.com/leachim6/hello-world	Hello World in simula (simula.sim)	Begin\\n   OutText ("Hello World!");\\n   Outimage;\\nEnd;			
hello world smalltalk		https://github.com/leachim6/hello-world	Hello World in smalltalk (smalltalk.sm)	Transcript show: 'Hello, world!'.\\n			
hello world smil		https://github.com/leachim6/hello-world	Hello World in smil (smil.smil)	<smil>\\n <head>\\n  <layout>\\n   <root-layout width="300" height="160" background-color="white"/>\\n   <region id="text_region" left="115" top="60"/>\\n  </layout>\\n </head>\\n <body>\\n  <text src="data:,Hello%20World!" region="text_region">\\n   <param name="fontFace" value="Arial"/>\\n  </text>\\n </body>\\n</smil>			
hello world svg		https://github.com/leachim6/hello-world	Hello World in svg (svg.svg)	<?xml version="1.0" encoding="utf-8" standalone="no"?>\\n<svg width="240" height="100" viewBox="0 0 240 100" zoomAndPan="disable"\\n     xmlns="http://www.w3.org/2000/svg"  xmlns:xlink="http://www.w3.org/1999/xlink">\\n  <title>Hello World</title>\\n    <g>\\n      <text x="10" y="50">Hello World</text>\\n      <animate attributeName='opacity' values='0;1' dur='4s' fill='freeze' begin="0s"/>\\n    </g>\\n</svg>\\n			
hello world tcsh		https://github.com/leachim6/hello-world	Hello World in tcsh (tcsh.tcsh)	#!/bin/tcsh\\necho "Hello, World!"\\n			
hello world telephone		https://github.com/leachim6/hello-world	Hello World in telephone (telephone)	#How to Spell HELO WORLD on a standard telephone keypad\\n435509 990753\\n			
hello world TeX		https://github.com/leachim6/hello-world	Hello World in TeX (TeX.tex)	Hello World\\n\bye\\n			
hello world thue		https://github.com/leachim6/hello-world	Hello World in thue (thue.th)	a::=~Hello World!\\n::=\\na\\n\\n			
hello world tibasic		https://github.com/leachim6/hello-world	Hello World in tibasic (tibasic.ti)	PROGRAM:HELLOW\\n:ClrHome\\n:Disp "HELLO WORLD!"			
hello world tk		https://github.com/leachim6/hello-world	Hello World in tk (tk.tk)	label .l -text "Hello World!"\\npack .l			
hello world trollscript		https://github.com/leachim6/hello-world	Hello World in trollscript (trollscript.troll)	Trooloolooloolooloolooloolooloolollooooolooloolooloolooloolooooolooloolooloolooloolooloolooloooooloolooloooooloooloolooloololllllooooloololoooooololooolooloolooloolooloololoolooolooloololooooooloololooooloololooloolooloolooloolooloolooloolooloolooloololooooolooolooloololooollollollollollolllooollollollollollollollollloooooololooooolooll.\\n\\n			
hello world tsql		https://github.com/leachim6/hello-world	Hello World in tsql (tsql.sql)	DECLARE @message varchar(128)\\nSELECT  @message = 'Hello World!'\\nPRINT   @message\\n			
hello world turing		https://github.com/leachim6/hello-world	Hello World in turing (turing.oot)	put "Hello World"			
hello world ubiquity		https://github.com/leachim6/hello-world	Hello World in ubiquity (ubiquity.ubiquity)	function cmd_hello_world() {\\n  displayMessage("Hello, World!");\\n}\\n			
hello world umajin		https://github.com/leachim6/hello-world	Hello World in umajin (umajin.u)	println 'Hello World!'\\n\\n			
hello world unicomal		https://github.com/leachim6/hello-world	Hello World in unicomal (unicomal.lst)	0100 PRINT "Hello World"			
hello world unlambda		https://github.com/leachim6/hello-world	Hello World in unlambda (unlambda.unl)	`r```````````.H.e.l.l.o. .w.o.r.l.di			
hello world vala		https://github.com/leachim6/hello-world	Hello World in vala (vala.vala)	static void main (string[] args)\\n{\\n\\tstdout.printf ("Hello World\n");\\n}\\n\\n			
hello world vbnet		https://github.com/leachim6/hello-world	Hello World in vbnet (vbnet.vb)	Module HelloWorld\\n    Sub Main()\\n        System.Console.WriteLine("Hello World")\\n    End Sub\\nEnd Module			
hello world vhdl		https://github.com/leachim6/hello-world	Hello World in vhdl (vhdl.vhdl)	use std.textio.all;\\n\\nentity hello_world is\\nend hello_world;\\n\\narchitecture behaviour of hello_world is\\nbegin\\n\\tprocess\\n    begin\\n       write (output, String'("Hello world!"));\\n       wait;\\n    end process;\\nend behaviour;			
hello world vimscript		https://github.com/leachim6/hello-world	Hello World in vimscript (vimscript.vim)	echo "Hello World"\\n			
hello world visualbasic		https://github.com/leachim6/hello-world	Hello World in visualbasic (visualbasic.vb)	Module HelloWorld\\n    Sub Main()\\n        MsgBox("Hello world!")\\n    End Sub\\nEnd Module			
hello world vrml		https://github.com/leachim6/hello-world	Hello World in vrml (vrml.wrl)	#VRML V2.0 utf8\\nShape {\\n    geometry Text {\\n        string "Hello World"\\n    }\\n}			
hello world whenever		https://github.com/leachim6/hello-world	Hello World in whenever (whenever.whenever)	1 print("Hello world!"); \\n			
hello world whitespace		https://github.com/leachim6/hello-world	Hello World in whitespace (whitespace.ws)	Say hello.   \\n   \\t  \\t   \\n\\t\\t    \\t\\n   \\t\\t  \\t \\t\\n\\t\\t    \\t \\n   \\t\\t \\t\\t  \\n\\t\\t    \\t\\t\\n   \\t\\t \\t\\t  \\n\\t\\t    \\t  \\n   \\t\\t \\t\\t\\t\\t\\n\\t\\t    \\t \\t\\n   \\t \\t\\t  \\n\\t\\t    \\t\\t \\n   \\t     \\n\\t\\t    \\t\\t\\t\\n   \\t\\t\\t \\t\\t\\t\\n\\t\\t    \\t   \\n   \\t\\t \\t\\t\\t\\t\\n\\t\\t    \\t  \\t\\n   \\t\\t\\t  \\t \\n\\t\\t    \\t \\t \\n   \\t\\t \\t\\t  \\n\\t\\t    \\t \\t\\t\\n   \\t\\t  \\t  \\n\\t\\t    \\t\\t  \\n   \\t     \\n\\t\\t    \\t\\t \\t\\n   \\t\\t \\t\\t\\t\\t\\n\\t\\t    \\t\\t\\t \\n   \\t\\t  \\t\\t \\n\\t\\t    \\t\\t\\t\\t\\n   \\t     \\n\\t\\t    \\t    \\n   \\t\\t\\t  \\t\\t\\n\\t\\t    \\t   \\t\\n   \\t\\t\\t    \\n\\t\\t    \\t  \\t \\n   \\t\\t    \\t\\n\\t\\t    \\t  \\t\\t\\n   \\t\\t   \\t\\t\\n\\t\\t    \\t \\t  \\n   \\t\\t  \\t \\t\\n\\t\\t    \\t \\t \\t\\n   \\t\\t\\t  \\t\\t\\n\\t\\t    \\t \\t\\t \\n   \\t    \\t\\n\\t\\t    \\t \\t\\t\\t\\n    \\n\\t\\t     \\n\\n \\t \\t\\t\\t \\t\\t\\t \\t\\t\\t  \\t  \\t\\t \\t  \\t \\t\\t\\t \\t   \\t\\t  \\t \\t\\n\\n \\t \\t\\t \\t\\t\\t  \\t\\t  \\t \\t \\t\\t\\t \\t\\t\\t \\t\\t \\t\\t   \\t\\t \\t  \\t \\t\\t \\t\\t\\t  \\t\\t  \\t \\t\\n\\n\\n\\n\\n   \\t\\t    \\t \\t\\t  \\t   \\t\\t  \\t  \\n\\t   \\n\\t\\n\\n   \\t\\t\\t \\t\\t\\t \\t\\t\\t  \\t  \\t\\t \\t  \\t \\t\\t\\t \\t   \\t\\t  \\t \\t\\n \\n \\t\\t\\t \\n \\n\\t  \\t\\t\\t \\t\\t\\t \\t\\t\\t  \\t  \\t\\t \\t  \\t \\t\\t\\t \\t   \\t\\t  \\t \\t \\t \\t\\t\\t\\t\\t \\t\\t  \\t \\t \\t\\t \\t\\t\\t  \\t\\t  \\t  \\n\\t\\n     \\t\\n\\t   \\n \\n \\t\\t\\t \\t\\t\\t \\t\\t\\t  \\t  \\t\\t \\t  \\t \\t\\t\\t \\t   \\t\\t  \\t \\t\\n\\n   \\t\\t\\t \\t\\t\\t \\t\\t\\t  \\t  \\t\\t \\t  \\t \\t\\t\\t \\t   \\t\\t  \\t \\t \\t \\t\\t\\t\\t\\t \\t\\t  \\t \\t \\t\\t \\t\\t\\t  \\t\\t  \\t  \\n \\n\\n \\n\\n\\n\\t\\n\\n   \\t\\t\\t  \\t  \\t\\t  \\t \\t \\t\\t    \\t \\t\\t  \\t  \\n \\n  \\n \\t\\n\\t \\t\\t\\t \\n    \\t \\t \\n\\t  \\t\\n\\t  \\t\\t\\t  \\t  \\t\\t  \\t \\t \\t\\t    \\t \\t\\t  \\t   \\t \\t\\t\\t\\t\\t \\t\\t  \\t \\t \\t\\t \\t\\t\\t  \\t\\t  \\t  \\n \\n\\n   \\t\\n\\t   \\n \\n \\t\\t\\t  \\t  \\t\\t  \\t \\t \\t\\t    \\t \\t\\t  \\t  \\n\\n   \\t\\t\\t  \\t  \\t\\t  \\t \\t \\t\\t    \\t \\t\\t  \\t   \\t \\t\\t\\t\\t\\t \\t\\t  \\t \\t \\t\\t \\t\\t\\t  \\t\\t  \\t  \\n \\n\\n   \\t\\n\\t       \\n\\t\\t \\n\\t\\n\\n   \\t\\t \\t\\t\\t  \\t\\t  \\t \\t \\t\\t\\t \\t\\t\\t \\t\\t \\t\\t   \\t\\t \\t  \\t \\t\\t \\t\\t\\t  \\t\\t  \\t \\t\\n   \\t \\t \\n   \\t\\t \\t\\n\\t\\n  \\t\\n  \\n\\t\\n\\n			
hello world wml		https://github.com/leachim6/hello-world	Hello World in wml (wml.wml)	#define HELLOWORLD\\n  [message]\\n    speaker="narrator"\\n    message=_"Hello World"\\n  [/message]\\n#enddef			
hello world wsh		https://github.com/leachim6/hello-world	Hello World in wsh (wsh.vbs)	WScript.Echo "Hello World"\\nWScript.Quit			
hello world xbase++		https://github.com/leachim6/hello-world	Hello World in xbase++ (xbase++.prg)	func Main()\\n    Qout("Hello World")\\nreturn 1			
hello world xlogo		https://github.com/leachim6/hello-world	Hello World in xlogo (xlogo.lgo)	to HelloWorld\\n resetall\\n hideturtle\\n fd 20 left 180\\n fd 40 left 180\\n fd 20 right 90\\n fd 20 left 90\\n fd 20 left 180\\n fd 40 left 90\\n fd 20 left 90\\n fd 20 right 90\\n fd 20 right 90\\n fd 10 right 90\\n fd 20 left 90\\n fd 10 left 90\\n fd 30 left 90\\n fd 40 left 180\\n fd 40 left 90\\n fd 20 left 90\\n fd 40 left 180\\n fd 40 left 90\\n fd 40 left 90\\n fd 20 left 90\\n fd 20 left 90\\n fd 20 left 90\\n fd 60 left 90\\n fd 40 left 180\\n fd 40 left 90\\n fd 20 left 90\\n fd 20 left 180\\n fd 20 left 90\\n fd 20 left 90\\n fd 40 left 180\\n fd 40 left 90\\n fd 40 left 90\\n fd 20 left 90\\n fd 20 left 90\\n fd 20 left 90\\n fd 40 left 90\\n fd 20 right 90\\n fd 20 right 90\\n fd 5  left 90  \\n fd 5  left 90  \\n fd 25 left 180\\n fd 40 left 90\\n fd 40 left 90\\n fd 20 left 90\\n fd 20 left 90\\n fd 20 left 90\\n fd 20 left 90\\n fd 40 left 180\\n fd 40\\nend			
hello world xml		https://github.com/leachim6/hello-world	Hello World in xml (xml.xml)	<?xml version="1.0" encoding="UTF-8"?>\\n<text><![CDATA[Hello World]]></text>			
hello world xpl0		https://github.com/leachim6/hello-world	Hello World in xpl0 (xpl0.xpl)	code Text=12;\\nText(0, "Hello World")\\n			
hello world xquery		https://github.com/leachim6/hello-world	Hello World in xquery (xquery.xq)	let $hello := "Hello, World!"\\nreturn $hello\\n			
hello world xslt		https://github.com/leachim6/hello-world	Hello World in xslt (xslt.xslt)	<?xml version="1.0" encoding="UTF-8"?>\\n<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">\\n    <xsl:template match="/">\\n        <xsl:text>Hello World!</xsl:text>\\n    </xsl:template>\\n</xsl:stylesheet>\\n			
hello world xul		https://github.com/leachim6/hello-world	Hello World in xul (xul.xul)	<?xml version="1.0"?>\\n<window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">\\n    <label value="Hello World"/>\\n</window>\\n			
hello world Y		https://github.com/leachim6/hello-world	Hello World in Y (Y.y)	module helloworld\\n\\n\\tdefine(EOF,(-1))\\n\\t\\n\\timport printf from "ylib.d"\\n\\n\\tmain()\\n\\t\\tprintf("Hello World\n")\\n\\tend\\nend			
hello world yaml		https://github.com/leachim6/hello-world	Hello World in yaml (yaml.yaml)	hello: world			
hello world zim		https://github.com/leachim6/hello-world	Hello World in zim (zim.zim)	output "Hello World"			
hello world zombie		https://github.com/leachim6/hello-world	Hello World in zombie (zombie.zombie)	HelloWorld is a zombie\\nsummon\\n  task SayHello\\n      say "Hello World!"\\n  animate\\nanimate\\n			
hello world zonnon		https://github.com/leachim6/hello-world	Hello World in zonnon (zonnon.znn)	module HelloWorld;\\nbegin\\n    writeln("Hello World");\\nend HelloWorld.    			
hello world zsh		https://github.com/leachim6/hello-world	Hello World in zsh (zsh.zsh)	#!/bin/zsh\\necho "Hello, World!"\\n			
