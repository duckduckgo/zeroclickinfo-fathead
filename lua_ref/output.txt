_G	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>_G</code></pre>\nA global variable (not a function) that\nholds the global environment (that is, <code>_G._G = _G</code>).\nLua itself does not use this variable;\nchanging its value does not affect any environment,\nnor vice-versa.\n(Use <a href="http://www.lua.org/manual/5.1/manual.html#pdf-setfenv"><code>setfenv</code></a> to change environments.)\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-_G
_VERSION	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>_VERSION</code></pre>\nA global variable (not a function) that\nholds a string containing the current interpreter version.\nThe current contents of this variable is "<code>Lua 5.1</code>".\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-_VERSION
assert	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>assert (v [, message])</code></pre>\nIssues an  error when\nthe value of its argument <code>v</code> is false (i.e., <b>nil</b> or <b>false</b>);\notherwise, returns all its arguments.\n<code>message</code> is an error message;\nwhen absent, it defaults to "assertion failed!"\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-assert
collectgarbage	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>collectgarbage ([opt [, arg]])</code></pre>\n\n\n<p>\nThis function is a generic interface to the garbage collector.\nIt performs different functions according to its first argument, <code>opt</code>:\n\n<ul>\n\n<li><b>"collect":</b>\nperforms a full garbage-collection cycle.\nThis is the default option.\n</li>\n\n<li><b>"stop":</b>\nstops the garbage collector.\n</li>\n\n<li><b>"restart":</b>\nrestarts the garbage collector.\n</li>\n\n<li><b>"count":</b>\nreturns the total memory in use by Lua (in Kbytes).\n</li>\n\n<li><b>"step":</b>\nperforms a garbage-collection step.\nThe step "size" is controlled by <code>arg</code>\n(larger values mean more steps) in a non-specified way.\nIf you want to control the step size\nyou must experimentally tune the value of <code>arg</code>.\nReturns <b>true</b> if the step finished a collection cycle.\n</li>\n\n<li><b>"setpause":</b>\nsets <code>arg</code> as the new value for the <em>pause</em> of\nthe collector (see <a href="http://www.lua.org/manual/5.1/manual.html#2.10">&sect;2.10</a>).\nReturns the previous value for <em>pause</em>.\n</li>\n\n<li><b>"setstepmul":</b>\nsets <code>arg</code> as the new value for the <em>step multiplier</em> of\nthe collector (see <a href="http://www.lua.org/manual/5.1/manual.html#2.10">&sect;2.10</a>).\nReturns the previous value for <em>step</em>.\n</li>\n\n</ul>\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-collectgarbage
coroutine.create	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>coroutine.create (f)</code></pre>\n\n\n<p>\nCreates a new coroutine, with body <code>f</code>.\n<code>f</code> must be a Lua function.\nReturns this new coroutine,\nan object with type <code>"thread"</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-coroutine.create
coroutine.resume	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>coroutine.resume (co [, val1, &middot;&middot;&middot;])</code></pre>\n\n\n<p>\nStarts or continues the execution of coroutine <code>co</code>.\nThe first time you resume a coroutine,\nit starts running its body.\nThe values <code>val1</code>, &middot;&middot;&middot; are passed\nas the arguments to the body function.\nIf the coroutine has yielded,\n<code>resume</code> restarts it;\nthe values <code>val1</code>, &middot;&middot;&middot; are passed\nas the results from the yield.\n\n\n<p>\nIf the coroutine runs without any errors,\n<code>resume</code> returns <b>true</b> plus any values passed to <code>yield</code>\n(if the coroutine yields) or any values returned by the body function\n(if the coroutine terminates).\nIf there is any error,\n<code>resume</code> returns <b>false</b> plus the error message.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-coroutine.resume
coroutine.running	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>coroutine.running ()</code></pre>\n\n\n<p>\nReturns the running coroutine,\nor <b>nil</b> when called by the main thread.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-coroutine.running
coroutine.status	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>coroutine.status (co)</code></pre>\n\n\n<p>\nReturns the status of coroutine <code>co</code>, as a string:\n<code>"running"</code>,\nif the coroutine is running (that is, it called <code>status</code>);\n<code>"suspended"</code>, if the coroutine is suspended in a call to <code>yield</code>,\nor if it has not started running yet;\n<code>"normal"</code> if the coroutine is active but not running\n(that is, it has resumed another coroutine);\nand <code>"dead"</code> if the coroutine has finished its body function,\nor if it has stopped with an error.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-coroutine.status
coroutine.wrap	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>coroutine.wrap (f)</code></pre>\n\n\n<p>\nCreates a new coroutine, with body <code>f</code>.\n<code>f</code> must be a Lua function.\nReturns a function that resumes the coroutine each time it is called.\nAny arguments passed to the function behave as the\nextra arguments to <code>resume</code>.\nReturns the same values returned by <code>resume</code>,\nexcept the first boolean.\nIn case of error, propagates the error.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-coroutine.wrap
coroutine.yield	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>coroutine.yield (&middot;&middot;&middot;)</code></pre>\n\n\n<p>\nSuspends the execution of the calling coroutine.\nThe coroutine cannot be running a C&nbsp;function,\na metamethod, or an iterator.\nAny arguments to <code>yield</code> are passed as extra results to <code>resume</code>.\n\n\n\n\n\n\n	http://www.lua.org/manual/5.1/manual.html#pdf-coroutine.yield
debug.debug	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>debug.debug ()</code></pre>\n\n\n<p>\nEnters an interactive mode with the user,\nrunning each string that the user enters.\nUsing simple commands and other debug facilities,\nthe user can inspect global and local variables,\nchange their values, evaluate expressions, and so on.\nA line containing only the word <code>cont</code> finishes this function,\nso that the caller continues its execution.\n\n\n<p>\nNote that commands for <code>debug.debug</code> are not lexically nested\nwithin any function, and so have no direct access to local variables.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-debug.debug
debug.getfenv	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>debug.getfenv (o)</code></pre>\nReturns the environment of object <code>o</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-debug.getfenv
debug.gethook	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>debug.gethook ([thread])</code></pre>\n\n\n<p>\nReturns the current hook settings of the thread, as three values:\nthe current hook function, the current hook mask,\nand the current hook count\n(as set by the <a href="http://www.lua.org/manual/5.1/manual.html#pdf-debug.sethook"><code>debug.sethook</code></a> function).\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-debug.gethook
debug.getinfo	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>debug.getinfo ([thread,] function [, what])</code></pre>\n\n\n<p>\nReturns a table with information about a function.\nYou can give the function directly,\nor you can give a number as the value of <code>function</code>,\nwhich means the function running at level <code>function</code> of the call stack\nof the given thread:\nlevel&nbsp;0 is the current function (<code>getinfo</code> itself);\nlevel&nbsp;1 is the function that called <code>getinfo</code>;\nand so on.\nIf <code>function</code> is a number larger than the number of active functions,\nthen <code>getinfo</code> returns <b>nil</b>.\n\n\n<p>\nThe returned table can contain all the fields returned by <a href="http://www.lua.org/manual/5.1/manual.html#lua_getinfo"><code>lua_getinfo</code></a>,\nwith the string <code>what</code> describing which fields to fill in.\nThe default for <code>what</code> is to get all information available,\nexcept the table of valid lines.\nIf present,\nthe option '<code>f</code>'\nadds a field named <code>func</code> with the function itself.\nIf present,\nthe option '<code>L</code>'\nadds a field named <code>activelines</code> with the table of\nvalid lines.\n\n\n<p>\nFor instance, the expression <code>debug.getinfo(1,"n").name</code> returns\na table with a name for the current function,\nif a reasonable name can be found,\nand the expression <code>debug.getinfo(print)</code>\nreturns a table with all available information\nabout the <a href="http://www.lua.org/manual/5.1/manual.html#pdf-print"><code>print</code></a> function.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-debug.getinfo
debug.getlocal	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>debug.getlocal ([thread,] level, local)</code></pre>\n\n\n<p>\nThis function returns the name and the value of the local variable\nwith index <code>local</code> of the function at level <code>level</code> of the stack.\n(The first parameter or local variable has index&nbsp;1, and so on,\nuntil the last active local variable.)\nThe function returns <b>nil</b> if there is no local\nvariable with the given index,\nand raises an error when called with a <code>level</code> out of range.\n(You can call <a href="http://www.lua.org/manual/5.1/manual.html#pdf-debug.getinfo"><code>debug.getinfo</code></a> to check whether the level is valid.)\n\n\n<p>\nVariable names starting with '<code>(</code>' (open parentheses)\nrepresent internal variables\n(loop control variables, temporaries, and C&nbsp;function locals).\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-debug.getlocal
debug.getmetatable	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>debug.getmetatable (object)</code></pre>\n\n\n<p>\nReturns the metatable of the given <code>object</code>\nor <b>nil</b> if it does not have a metatable.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-debug.getmetatable
debug.getregistry	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>debug.getregistry ()</code></pre>\n\n\n<p>\nReturns the registry table (see <a href="http://www.lua.org/manual/5.1/manual.html#3.5">&sect;3.5</a>).\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-debug.getregistry
debug.getupvalue	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>debug.getupvalue (func, up)</code></pre>\n\n\n<p>\nThis function returns the name and the value of the upvalue\nwith index <code>up</code> of the function <code>func</code>.\nThe function returns <b>nil</b> if there is no upvalue with the given index.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-debug.getupvalue
debug.setfenv	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>debug.setfenv (object, table)</code></pre>\n\n\n<p>\nSets the environment of the given <code>object</code> to the given <code>table</code>.\nReturns <code>object</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-debug.setfenv
debug.sethook	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>debug.sethook ([thread,] hook, mask [, count])</code></pre>\n\n\n<p>\nSets the given function as a hook.\nThe string <code>mask</code> and the number <code>count</code> describe\nwhen the hook will be called.\nThe string mask may have the following characters,\nwith the given meaning:\n\n<ul>\n<li><b><code>"c"</code>:</b> the hook is called every time Lua calls a function;</li>\n<li><b><code>"r"</code>:</b> the hook is called every time Lua returns from a function;</li>\n<li><b><code>"l"</code>:</b> the hook is called every time Lua enters a new line of code.</li>\n</ul><p>\nWith a <code>count</code> different from zero,\nthe hook is called after every <code>count</code> instructions.\n\n\n<p>\nWhen called without arguments,\n<a href="http://www.lua.org/manual/5.1/manual.html#pdf-debug.sethook"><code>debug.sethook</code></a> turns off the hook.\n\n\n<p>\nWhen the hook is called, its first parameter is a string\ndescribing the event that has triggered its call:\n<code>"call"</code>, <code>"return"</code> (or <code>"tail return"</code>,\nwhen simulating a return from a tail call),\n<code>"line"</code>, and <code>"count"</code>.\nFor line events,\nthe hook also gets the new line number as its second parameter.\nInside a hook,\nyou can call <code>getinfo</code> with level&nbsp;2 to get more information about\nthe running function\n(level&nbsp;0 is the <code>getinfo</code> function,\nand level&nbsp;1 is the hook function),\nunless the event is <code>"tail return"</code>.\nIn this case, Lua is only simulating the return,\nand a call to <code>getinfo</code> will return invalid data.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-debug.sethook
debug.setlocal	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>debug.setlocal ([thread,] level, local, value)</code></pre>\n\n\n<p>\nThis function assigns the value <code>value</code> to the local variable\nwith index <code>local</code> of the function at level <code>level</code> of the stack.\nThe function returns <b>nil</b> if there is no local\nvariable with the given index,\nand raises an error when called with a <code>level</code> out of range.\n(You can call <code>getinfo</code> to check whether the level is valid.)\nOtherwise, it returns the name of the local variable.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-debug.setlocal
debug.setmetatable	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>debug.setmetatable (object, table)</code></pre>\n\n\n<p>\nSets the metatable for the given <code>object</code> to the given <code>table</code>\n(which can be <b>nil</b>).\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-debug.setmetatable
debug.setupvalue	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>debug.setupvalue (func, up, value)</code></pre>\n\n\n<p>\nThis function assigns the value <code>value</code> to the upvalue\nwith index <code>up</code> of the function <code>func</code>.\nThe function returns <b>nil</b> if there is no upvalue\nwith the given index.\nOtherwise, it returns the name of the upvalue.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-debug.setupvalue
dofile	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>dofile ([filename])</code></pre>\nOpens the named file and executes its contents as a Lua chunk.\nWhen called without arguments,\n<code>dofile</code> executes the contents of the standard input (<code>stdin</code>).\nReturns all values returned by the chunk.\nIn case of errors, <code>dofile</code> propagates the error\nto its caller (that is, <code>dofile</code> does not run in protected mode).\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-dofile
error	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>error (message [, level])</code></pre>\nTerminates the last protected function called\nand returns <code>message</code> as the error message.\nFunction <code>error</code> never returns.\n\n\n<p>\nUsually, <code>error</code> adds some information about the error position\nat the beginning of the message.\nThe <code>level</code> argument specifies how to get the error position.\nWith level&nbsp;1 (the default), the error position is where the\n<code>error</code> function was called.\nLevel&nbsp;2 points the error to where the function\nthat called <code>error</code> was called; and so on.\nPassing a level&nbsp;0 avoids the addition of error position information\nto the message.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-error
file:close	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>file:close ()</code></pre>\n\n\n<p>\nCloses <code>file</code>.\nNote that files are automatically closed when\ntheir handles are garbage collected,\nbut that takes an unpredictable amount of time to happen.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-file:close
file:flush	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>file:flush ()</code></pre>\n\n\n<p>\nSaves any written data to <code>file</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-file:flush
file:lines	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>file:lines ()</code></pre>\n\n\n<p>\nReturns an iterator function that,\neach time it is called,\nreturns a new line from the file.\nTherefore, the construction\n\n<pre>\n     for line in file:lines() do <em>body</em> end\n</pre><p>\nwill iterate over all lines of the file.\n(Unlike <a href="http://www.lua.org/manual/5.1/manual.html#pdf-io.lines"><code>io.lines</code></a>, this function does not close the file\nwhen the loop ends.)\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-file:lines
file:read	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>file:read (&middot;&middot;&middot;)</code></pre>\n\n\n<p>\nReads the file <code>file</code>,\naccording to the given formats, which specify what to read.\nFor each format,\nthe function returns a string (or a number) with the characters read,\nor <b>nil</b> if it cannot read data with the specified format.\nWhen called without formats,\nit uses a default format that reads the entire next line\n(see below).\n\n\n<p>\nThe available formats are\n\n<ul>\n\n<li><b>"*n":</b>\nreads a number;\nthis is the only format that returns a number instead of a string.\n</li>\n\n<li><b>"*a":</b>\nreads the whole file, starting at the current position.\nOn end of file, it returns the empty string.\n</li>\n\n<li><b>"*l":</b>\nreads the next line (skipping the end of line),\nreturning <b>nil</b> on end of file.\nThis is the default format.\n</li>\n\n<li><b><em>number</em>:</b>\nreads a string with up to this number of characters,\nreturning <b>nil</b> on end of file.\nIf number is zero,\nit reads nothing and returns an empty string,\nor <b>nil</b> on end of file.\n</li>\n\n</ul>\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-file:read
file:seek	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>file:seek ([whence] [, offset])</code></pre>\n\n\n<p>\nSets and gets the file position,\nmeasured from the beginning of the file,\nto the position given by <code>offset</code> plus a base\nspecified by the string <code>whence</code>, as follows:\n\n<ul>\n<li><b>"set":</b> base is position 0 (beginning of the file);</li>\n<li><b>"cur":</b> base is current position;</li>\n<li><b>"end":</b> base is end of file;</li>\n</ul><p>\nIn case of success, function <code>seek</code> returns the final file position,\nmeasured in bytes from the beginning of the file.\nIf this function fails, it returns <b>nil</b>,\nplus a string describing the error.\n\n\n<p>\nThe default value for <code>whence</code> is <code>"cur"</code>,\nand for <code>offset</code> is 0.\nTherefore, the call <code>file:seek()</code> returns the current\nfile position, without changing it;\nthe call <code>file:seek("set")</code> sets the position to the\nbeginning of the file (and returns 0);\nand the call <code>file:seek("end")</code> sets the position to the\nend of the file, and returns its size.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-file:seek
file:setvbuf	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>file:setvbuf (mode [, size])</code></pre>\n\n\n<p>\nSets the buffering mode for an output file.\nThere are three available modes:\n\n<ul>\n\n<li><b>"no":</b>\nno buffering; the result of any output operation appears immediately.\n</li>\n\n<li><b>"full":</b>\nfull buffering; output operation is performed only\nwhen the buffer is full (or when you explicitly <code>flush</code> the file\n(see <a href="http://www.lua.org/manual/5.1/manual.html#pdf-io.flush"><code>io.flush</code></a>)).\n</li>\n\n<li><b>"line":</b>\nline buffering; output is buffered until a newline is output\nor there is any input from some special files\n(such as a terminal device).\n</li>\n\n</ul><p>\nFor the last two cases, <code>size</code>\nspecifies the size of the buffer, in bytes.\nThe default is an appropriate size.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-file:setvbuf
file:write	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>file:write (&middot;&middot;&middot;)</code></pre>\n\n\n<p>\nWrites the value of each of its arguments to\nthe <code>file</code>.\nThe arguments must be strings or numbers.\nTo write other values,\nuse <a href="http://www.lua.org/manual/5.1/manual.html#pdf-tostring"><code>tostring</code></a> or <a href="http://www.lua.org/manual/5.1/manual.html#pdf-string.format"><code>string.format</code></a> before <code>write</code>.\n\n\n\n\n\n\n	http://www.lua.org/manual/5.1/manual.html#pdf-file:write
getfenv	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>getfenv ([f])</code></pre>\nReturns the current environment in use by the function.\n<code>f</code> can be a Lua function or a number\nthat specifies the function at that stack level:\nLevel&nbsp;1 is the function calling <code>getfenv</code>.\nIf the given function is not a Lua function,\nor if <code>f</code> is 0,\n<code>getfenv</code> returns the global environment.\nThe default for <code>f</code> is 1.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-getfenv
getmetatable	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>getmetatable (object)</code></pre>\n\n\n<p>\nIf <code>object</code> does not have a metatable, returns <b>nil</b>.\nOtherwise,\nif the object's metatable has a <code>"__metatable"</code> field,\nreturns the associated value.\nOtherwise, returns the metatable of the given object.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-getmetatable
io.close	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>io.close ([file])</code></pre>\n\n\n<p>\nEquivalent to <code>file:close()</code>.\nWithout a <code>file</code>, closes the default output file.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-io.close
io.flush	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>io.flush ()</code></pre>\n\n\n<p>\nEquivalent to <code>file:flush</code> over the default output file.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-io.flush
io.input	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>io.input ([file])</code></pre>\n\n\n<p>\nWhen called with a file name, it opens the named file (in text mode),\nand sets its handle as the default input file.\nWhen called with a file handle,\nit simply sets this file handle as the default input file.\nWhen called without parameters,\nit returns the current default input file.\n\n\n<p>\nIn case of errors this function raises the error,\ninstead of returning an error code.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-io.input
io.lines	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>io.lines ([filename])</code></pre>\n\n\n<p>\nOpens the given file name in read mode\nand returns an iterator function that,\neach time it is called,\nreturns a new line from the file.\nTherefore, the construction\n\n<pre>\n     for line in io.lines(filename) do <em>body</em> end\n</pre><p>\nwill iterate over all lines of the file.\nWhen the iterator function detects the end of file,\nit returns <b>nil</b> (to finish the loop) and automatically closes the file.\n\n\n<p>\nThe call <code>io.lines()</code> (with no file name) is equivalent\nto <code>io.input():lines()</code>;\nthat is, it iterates over the lines of the default input file.\nIn this case it does not close the file when the loop ends.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-io.lines
io.open	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>io.open (filename [, mode])</code></pre>\n\n\n<p>\nThis function opens a file,\nin the mode specified in the string <code>mode</code>.\nIt returns a new file handle,\nor, in case of errors, <b>nil</b> plus an error message.\n\n\n<p>\nThe <code>mode</code> string can be any of the following:\n\n<ul>\n<li><b>"r":</b> read mode (the default);</li>\n<li><b>"w":</b> write mode;</li>\n<li><b>"a":</b> append mode;</li>\n<li><b>"r+":</b> update mode, all previous data is preserved;</li>\n<li><b>"w+":</b> update mode, all previous data is erased;</li>\n<li><b>"a+":</b> append update mode, previous data is preserved,\n  writing is only allowed at the end of file.</li>\n</ul><p>\nThe <code>mode</code> string can also have a '<code>b</code>' at the end,\nwhich is needed in some systems to open the file in binary mode.\nThis string is exactly what is used in the\nstandard&nbsp;C function <code>fopen</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-io.open
io.output	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>io.output ([file])</code></pre>\n\n\n<p>\nSimilar to <a href="http://www.lua.org/manual/5.1/manual.html#pdf-io.input"><code>io.input</code></a>, but operates over the default output file.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-io.output
io.popen	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>io.popen (prog [, mode])</code></pre>\n\n\n<p>\nStarts program <code>prog</code> in a separated process and returns\na file handle that you can use to read data from this program\n(if <code>mode</code> is <code>"r"</code>, the default)\nor to write data to this program\n(if <code>mode</code> is <code>"w"</code>).\n\n\n<p>\nThis function is system dependent and is not available\non all platforms.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-io.popen
io.read	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>io.read (&middot;&middot;&middot;)</code></pre>\n\n\n<p>\nEquivalent to <code>io.input():read</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-io.read
io.tmpfile	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>io.tmpfile ()</code></pre>\n\n\n<p>\nReturns a handle for a temporary file.\nThis file is opened in update mode\nand it is automatically removed when the program ends.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-io.tmpfile
io.type	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>io.type (obj)</code></pre>\n\n\n<p>\nChecks whether <code>obj</code> is a valid file handle.\nReturns the string <code>"file"</code> if <code>obj</code> is an open file handle,\n<code>"closed file"</code> if <code>obj</code> is a closed file handle,\nor <b>nil</b> if <code>obj</code> is not a file handle.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-io.type
io.write	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>io.write (&middot;&middot;&middot;)</code></pre>\n\n\n<p>\nEquivalent to <code>io.output():write</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-io.write
ipairs	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>ipairs (t)</code></pre>\n\n\n<p>\nReturns three values: an iterator function, the table <code>t</code>, and 0,\nso that the construction\n\n<pre>\n     for i,v in ipairs(t) do <em>body</em> end\n</pre><p>\nwill iterate over the pairs (<code>1,t[1]</code>), (<code>2,t[2]</code>), &middot;&middot;&middot;,\nup to the first integer key absent from the table.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-ipairs
load	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>load (func [, chunkname])</code></pre>\n\n\n<p>\nLoads a chunk using function <code>func</code> to get its pieces.\nEach call to <code>func</code> must return a string that concatenates\nwith previous results.\nA return of an empty string, <b>nil</b>, or no value signals the end of the chunk.\n\n\n<p>\nIf there are no errors, \nreturns the compiled chunk as a function;\notherwise, returns <b>nil</b> plus the error message.\nThe environment of the returned function is the global environment.\n\n\n<p>\n<code>chunkname</code> is used as the chunk name for error messages\nand debug information.\nWhen absent,\nit defaults to "<code>=(load)</code>".\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-load
loadfile	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>loadfile ([filename])</code></pre>\n\n\n<p>\nSimilar to <a href="http://www.lua.org/manual/5.1/manual.html#pdf-load"><code>load</code></a>,\nbut gets the chunk from file <code>filename</code>\nor from the standard input,\nif no file name is given.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-loadfile
loadstring	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>loadstring (string [, chunkname])</code></pre>\n\n\n<p>\nSimilar to <a href="http://www.lua.org/manual/5.1/manual.html#pdf-load"><code>load</code></a>,\nbut gets the chunk from the given string.\n\n\n<p>\nTo load and run a given string, use the idiom\n\n<pre>\n     assert(loadstring(s))()\n</pre>\n\n<p>\nWhen absent,\n<code>chunkname</code> defaults to the given string.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-loadstring
math.abs	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.abs (x)</code></pre>\n\n\n<p>\nReturns the absolute value of <code>x</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.abs
math.acos	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.acos (x)</code></pre>\n\n\n<p>\nReturns the arc cosine of <code>x</code> (in radians).\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.acos
math.asin	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.asin (x)</code></pre>\n\n\n<p>\nReturns the arc sine of <code>x</code> (in radians).\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.asin
math.atan	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.atan (x)</code></pre>\n\n\n<p>\nReturns the arc tangent of <code>x</code> (in radians).\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.atan
math.atan2	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.atan2 (y, x)</code></pre>\n\n\n<p>\nReturns the arc tangent of <code>y/x</code> (in radians),\nbut uses the signs of both parameters to find the\nquadrant of the result.\n(It also handles correctly the case of <code>x</code> being zero.)\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.atan2
math.ceil	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.ceil (x)</code></pre>\n\n\n<p>\nReturns the smallest integer larger than or equal to <code>x</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.ceil
math.cos	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.cos (x)</code></pre>\n\n\n<p>\nReturns the cosine of <code>x</code> (assumed to be in radians).\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.cos
math.cosh	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.cosh (x)</code></pre>\n\n\n<p>\nReturns the hyperbolic cosine of <code>x</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.cosh
math.deg	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.deg (x)</code></pre>\n\n\n<p>\nReturns the angle <code>x</code> (given in radians) in degrees.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.deg
math.exp	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.exp (x)</code></pre>\n\n\n<p>\nReturns the value <em>e<sup>x</sup></em>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.exp
math.floor	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.floor (x)</code></pre>\n\n\n<p>\nReturns the largest integer smaller than or equal to <code>x</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.floor
math.fmod	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.fmod (x, y)</code></pre>\n\n\n<p>\nReturns the remainder of the division of <code>x</code> by <code>y</code>\nthat rounds the quotient towards zero.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.fmod
math.frexp	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.frexp (x)</code></pre>\n\n\n<p>\nReturns <code>m</code> and <code>e</code> such that <em>x = m2<sup>e</sup></em>,\n<code>e</code> is an integer and the absolute value of <code>m</code> is\nin the range <em>[0.5, 1)</em>\n(or zero when <code>x</code> is zero).\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.frexp
math.huge	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.huge</code></pre>\n\n\n<p>\nThe value <code>HUGE_VAL</code>,\na value larger than or equal to any other numerical value.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.huge
math.ldexp	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.ldexp (m, e)</code></pre>\n\n\n<p>\nReturns <em>m2<sup>e</sup></em> (<code>e</code> should be an integer).\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.ldexp
math.log	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.log (x)</code></pre>\n\n\n<p>\nReturns the natural logarithm of <code>x</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.log
math.log10	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.log10 (x)</code></pre>\n\n\n<p>\nReturns the base-10 logarithm of <code>x</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.log10
math.max	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.max (x, &middot;&middot;&middot;)</code></pre>\n\n\n<p>\nReturns the maximum value among its arguments.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.max
math.min	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.min (x, &middot;&middot;&middot;)</code></pre>\n\n\n<p>\nReturns the minimum value among its arguments.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.min
math.modf	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.modf (x)</code></pre>\n\n\n<p>\nReturns two numbers,\nthe integral part of <code>x</code> and the fractional part of <code>x</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.modf
math.pi	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.pi</code></pre>\n\n\n<p>\nThe value of <em>pi</em>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.pi
math.pow	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.pow (x, y)</code></pre>\n\n\n<p>\nReturns <em>x<sup>y</sup></em>.\n(You can also use the expression <code>x^y</code> to compute this value.)\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.pow
math.rad	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.rad (x)</code></pre>\n\n\n<p>\nReturns the angle <code>x</code> (given in degrees) in radians.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.rad
math.random	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.random ([m [, n]])</code></pre>\n\n\n<p>\nThis function is an interface to the simple\npseudo-random generator function <code>rand</code> provided by ANSI&nbsp;C.\n(No guarantees can be given for its statistical properties.)\n\n\n<p>\nWhen called without arguments,\nreturns a uniform pseudo-random real number\nin the range <em>[0,1)</em>.  \nWhen called with an integer number <code>m</code>,\n<code>math.random</code> returns\na uniform pseudo-random integer in the range <em>[1, m]</em>.\nWhen called with two integer numbers <code>m</code> and <code>n</code>,\n<code>math.random</code> returns a uniform pseudo-random\ninteger in the range <em>[m, n]</em>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.random
math.randomseed	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.randomseed (x)</code></pre>\n\n\n<p>\nSets <code>x</code> as the "seed"\nfor the pseudo-random generator:\nequal seeds produce equal sequences of numbers.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.randomseed
math.sin	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.sin (x)</code></pre>\n\n\n<p>\nReturns the sine of <code>x</code> (assumed to be in radians).\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.sin
math.sinh	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.sinh (x)</code></pre>\n\n\n<p>\nReturns the hyperbolic sine of <code>x</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.sinh
math.sqrt	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.sqrt (x)</code></pre>\n\n\n<p>\nReturns the square root of <code>x</code>.\n(You can also use the expression <code>x^0.5</code> to compute this value.)\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.sqrt
math.tan	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.tan (x)</code></pre>\n\n\n<p>\nReturns the tangent of <code>x</code> (assumed to be in radians).\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-math.tan
math.tanh	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>math.tanh (x)</code></pre>\n\n\n<p>\nReturns the hyperbolic tangent of <code>x</code>.\n\n\n\n\n\n\n	http://www.lua.org/manual/5.1/manual.html#pdf-math.tanh
module	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>module (name [, &middot;&middot;&middot;])</code></pre>\n\n\n<p>\nCreates a module.\nIf there is a table in <code>package.loaded[name]</code>,\nthis table is the module.\nOtherwise, if there is a global table <code>t</code> with the given name,\nthis table is the module.\nOtherwise creates a new table <code>t</code> and\nsets it as the value of the global <code>name</code> and\nthe value of <code>package.loaded[name]</code>.\nThis function also initializes <code>t._NAME</code> with the given name,\n<code>t._M</code> with the module (<code>t</code> itself),\nand <code>t._PACKAGE</code> with the package name\n(the full module name minus last component; see below).\nFinally, <code>module</code> sets <code>t</code> as the new environment\nof the current function and the new value of <code>package.loaded[name]</code>,\nso that <a href="http://www.lua.org/manual/5.1/manual.html#pdf-require"><code>require</code></a> returns <code>t</code>.\n\n\n<p>\nIf <code>name</code> is a compound name\n(that is, one with components separated by dots),\n<code>module</code> creates (or reuses, if they already exist)\ntables for each component.\nFor instance, if <code>name</code> is <code>a.b.c</code>,\nthen <code>module</code> stores the module table in field <code>c</code> of\nfield <code>b</code> of global <code>a</code>.\n\n\n<p>\nThis function can receive optional <em>options</em> after\nthe module name,\nwhere each option is a function to be applied over the module.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-module
next	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>next (table [, index])</code></pre>\n\n\n<p>\nAllows a program to traverse all fields of a table.\nIts first argument is a table and its second argument\nis an index in this table.\n<code>next</code> returns the next index of the table\nand its associated value.\nWhen called with <b>nil</b> as its second argument,\n<code>next</code> returns an initial index\nand its associated value.\nWhen called with the last index,\nor with <b>nil</b> in an empty table,\n<code>next</code> returns <b>nil</b>.\nIf the second argument is absent, then it is interpreted as <b>nil</b>.\nIn particular,\nyou can use <code>next(t)</code> to check whether a table is empty.\n\n\n<p>\nThe order in which the indices are enumerated is not specified,\n<em>even for numeric indices</em>.\n(To traverse a table in numeric order,\nuse a numerical <b>for</b> or the <a href="http://www.lua.org/manual/5.1/manual.html#pdf-ipairs"><code>ipairs</code></a> function.)\n\n\n<p>\nThe behavior of <code>next</code> is <em>undefined</em> if,\nduring the traversal,\nyou assign any value to a non-existent field in the table.\nYou may however modify existing fields.\nIn particular, you may clear existing fields.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-next
os.clock	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>os.clock ()</code></pre>\n\n\n<p>\nReturns an approximation of the amount in seconds of CPU time\nused by the program.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-os.clock
os.date	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>os.date ([format [, time]])</code></pre>\n\n\n<p>\nReturns a string or a table containing date and time,\nformatted according to the given string <code>format</code>.\n\n\n<p>\nIf the <code>time</code> argument is present,\nthis is the time to be formatted\n(see the <a href="http://www.lua.org/manual/5.1/manual.html#pdf-os.time"><code>os.time</code></a> function for a description of this value).\nOtherwise, <code>date</code> formats the current time.\n\n\n<p>\nIf <code>format</code> starts with '<code>!</code>',\nthen the date is formatted in Coordinated Universal Time.\nAfter this optional character,\nif <code>format</code> is the string "<code>*t</code>",\nthen <code>date</code> returns a table with the following fields:\n<code>year</code> (four digits), <code>month</code> (1--12), <code>day</code> (1--31),\n<code>hour</code> (0--23), <code>min</code> (0--59), <code>sec</code> (0--61),\n<code>wday</code> (weekday, Sunday is&nbsp;1),\n<code>yday</code> (day of the year),\nand <code>isdst</code> (daylight saving flag, a boolean).\n\n\n<p>\nIf <code>format</code> is not "<code>*t</code>",\nthen <code>date</code> returns the date as a string,\nformatted according to the same rules as the C&nbsp;function <code>strftime</code>.\n\n\n<p>\nWhen called without arguments,\n<code>date</code> returns a reasonable date and time representation that depends on\nthe host system and on the current locale\n(that is, <code>os.date()</code> is equivalent to <code>os.date("%c")</code>).\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-os.date
os.difftime	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>os.difftime (t2, t1)</code></pre>\n\n\n<p>\nReturns the number of seconds from time <code>t1</code> to time <code>t2</code>.\nIn POSIX, Windows, and some other systems,\nthis value is exactly <code>t2</code><em>-</em><code>t1</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-os.difftime
os.execute	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>os.execute ([command])</code></pre>\n\n\n<p>\nThis function is equivalent to the C&nbsp;function <code>system</code>.\nIt passes <code>command</code> to be executed by an operating system shell.\nIt returns a status code, which is system-dependent.\nIf <code>command</code> is absent, then it returns nonzero if a shell is available\nand zero otherwise.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-os.execute
os.exit	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>os.exit ([code])</code></pre>\n\n\n<p>\nCalls the C&nbsp;function <code>exit</code>,\nwith an optional <code>code</code>,\nto terminate the host program.\nThe default value for <code>code</code> is the success code.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-os.exit
os.getenv	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>os.getenv (varname)</code></pre>\n\n\n<p>\nReturns the value of the process environment variable <code>varname</code>,\nor <b>nil</b> if the variable is not defined.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-os.getenv
os.remove	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>os.remove (filename)</code></pre>\n\n\n<p>\nDeletes the file or directory with the given name.\nDirectories must be empty to be removed.\nIf this function fails, it returns <b>nil</b>,\nplus a string describing the error.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-os.remove
os.rename	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>os.rename (oldname, newname)</code></pre>\n\n\n<p>\nRenames file or directory named <code>oldname</code> to <code>newname</code>.\nIf this function fails, it returns <b>nil</b>,\nplus a string describing the error.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-os.rename
os.setlocale	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>os.setlocale (locale [, category])</code></pre>\n\n\n<p>\nSets the current locale of the program.\n<code>locale</code> is a string specifying a locale;\n<code>category</code> is an optional string describing which category to change:\n<code>"all"</code>, <code>"collate"</code>, <code>"ctype"</code>,\n<code>"monetary"</code>, <code>"numeric"</code>, or <code>"time"</code>;\nthe default category is <code>"all"</code>.\nThe function returns the name of the new locale,\nor <b>nil</b> if the request cannot be honored.\n\n\n<p>\nIf <code>locale</code> is the empty string,\nthe current locale is set to an implementation-defined native locale.\nIf <code>locale</code> is the string "<code>C</code>",\nthe current locale is set to the standard C locale.\n\n\n<p>\nWhen called with <b>nil</b> as the first argument,\nthis function only returns the name of the current locale\nfor the given category.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-os.setlocale
os.time	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>os.time ([table])</code></pre>\n\n\n<p>\nReturns the current time when called without arguments,\nor a time representing the date and time specified by the given table.\nThis table must have fields <code>year</code>, <code>month</code>, and <code>day</code>,\nand may have fields <code>hour</code>, <code>min</code>, <code>sec</code>, and <code>isdst</code>\n(for a description of these fields, see the <a href="http://www.lua.org/manual/5.1/manual.html#pdf-os.date"><code>os.date</code></a> function).\n\n\n<p>\nThe returned value is a number, whose meaning depends on your system.\nIn POSIX, Windows, and some other systems, this number counts the number\nof seconds since some given start time (the "epoch").\nIn other systems, the meaning is not specified,\nand the number returned by <code>time</code> can be used only as an argument to\n<code>date</code> and <code>difftime</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-os.time
os.tmpname	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>os.tmpname ()</code></pre>\n\n\n<p>\nReturns a string with a file name that can\nbe used for a temporary file.\nThe file must be explicitly opened before its use\nand explicitly removed when no longer needed.\n\n\n<p>\nOn some systems (POSIX),\nthis function also creates a file with that name,\nto avoid security risks.\n(Someone else might create the file with wrong permissions\nin the time between getting the name and creating the file.)\nYou still have to open the file to use it\nand to remove it (even if you do not use it).\n\n\n<p>\nWhen possible,\nyou may prefer to use <a href="http://www.lua.org/manual/5.1/manual.html#pdf-io.tmpfile"><code>io.tmpfile</code></a>,\nwhich automatically removes the file when the program ends.\n\n\n\n\n\n\n	http://www.lua.org/manual/5.1/manual.html#pdf-os.tmpname
package.cpath	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>package.cpath</code></pre>\n\n\n<p>\nThe path used by <a href="http://www.lua.org/manual/5.1/manual.html#pdf-require"><code>require</code></a> to search for a C&nbsp;loader.\n\n\n<p>\nLua initializes the C&nbsp;path <a href="http://www.lua.org/manual/5.1/manual.html#pdf-package.cpath"><code>package.cpath</code></a> in the same way\nit initializes the Lua path <a href="http://www.lua.org/manual/5.1/manual.html#pdf-package.path"><code>package.path</code></a>,\nusing the environment variable <a name="pdf-LUA_CPATH"><code>LUA_CPATH</code></a>\nor a default path defined in <code>luaconf.h</code>.\n\n\n\n\n<p>\n	http://www.lua.org/manual/5.1/manual.html#pdf-package.cpath
package.loaded	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>package.loaded</code></pre>\n\n\n<p>\nA table used by <a href="http://www.lua.org/manual/5.1/manual.html#pdf-require"><code>require</code></a> to control which\nmodules are already loaded.\nWhen you require a module <code>modname</code> and\n<code>package.loaded[modname]</code> is not false,\n<a href="http://www.lua.org/manual/5.1/manual.html#pdf-require"><code>require</code></a> simply returns the value stored there.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-package.loaded
package.loaders	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>package.loaders</code></pre>\n\n\n<p>\nA table used by <a href="http://www.lua.org/manual/5.1/manual.html#pdf-require"><code>require</code></a> to control how to load modules.\n\n\n<p>\nEach entry in this table is a <em>searcher function</em>.\nWhen looking for a module,\n<a href="http://www.lua.org/manual/5.1/manual.html#pdf-require"><code>require</code></a> calls each of these searchers in ascending order,\nwith the module name (the argument given to <a href="http://www.lua.org/manual/5.1/manual.html#pdf-require"><code>require</code></a>) as its\nsole parameter.\nThe function can return another function (the module <em>loader</em>)\nor a string explaining why it did not find that module\n(or <b>nil</b> if it has nothing to say).\nLua initializes this table with four functions.\n\n\n<p>\nThe first searcher simply looks for a loader in the\n<a href="http://www.lua.org/manual/5.1/manual.html#pdf-package.preload"><code>package.preload</code></a> table.\n\n\n<p>\nThe second searcher looks for a loader as a Lua library,\nusing the path stored at <a href="http://www.lua.org/manual/5.1/manual.html#pdf-package.path"><code>package.path</code></a>.\nA path is a sequence of <em>templates</em> separated by semicolons.\nFor each template,\nthe searcher will change each interrogation\nmark in the template by <code>filename</code>,\nwhich is the module name with each dot replaced by a\n"directory separator" (such as "<code>/</code>" in Unix);\nthen it will try to open the resulting file name.\nSo, for instance, if the Lua path is the string\n\n<pre>\n     "./?.lua;./?.lc;/usr/local/?/init.lua"\n</pre><p>\nthe search for a Lua file for module <code>foo</code>\nwill try to open the files\n<code>./foo.lua</code>, <code>./foo.lc</code>, and\n<code>/usr/local/foo/init.lua</code>, in that order.\n\n\n<p>\nThe third searcher looks for a loader as a C&nbsp;library,\nusing the path given by the variable <a href="http://www.lua.org/manual/5.1/manual.html#pdf-package.cpath"><code>package.cpath</code></a>.\nFor instance,\nif the C&nbsp;path is the string\n\n<pre>\n     "./?.so;./?.dll;/usr/local/?/init.so"\n</pre><p>\nthe searcher for module <code>foo</code>\nwill try to open the files <code>./foo.so</code>, <code>./foo.dll</code>,\nand <code>/usr/local/foo/init.so</code>, in that order.\nOnce it finds a C&nbsp;library,\nthis searcher first uses a dynamic link facility to link the\napplication with the library.\nThen it tries to find a C&nbsp;function inside the library to\nbe used as the loader.\nThe name of this C&nbsp;function is the string "<code>luaopen_</code>"\nconcatenated with a copy of the module name where each dot\nis replaced by an underscore.\nMoreover, if the module name has a hyphen,\nits prefix up to (and including) the first hyphen is removed.\nFor instance, if the module name is <code>a.v1-b.c</code>,\nthe function name will be <code>luaopen_b_c</code>.\n\n\n<p>\nThe fourth searcher tries an <em>all-in-one loader</em>.\nIt searches the C&nbsp;path for a library for\nthe root name of the given module.\nFor instance, when requiring <code>a.b.c</code>,\nit will search for a C&nbsp;library for <code>a</code>.\nIf found, it looks into it for an open function for\nthe submodule;\nin our example, that would be <code>luaopen_a_b_c</code>.\nWith this facility, a package can pack several C&nbsp;submodules\ninto one single library,\nwith each submodule keeping its original open function.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-package.loaders
package.loadlib	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>package.loadlib (libname, funcname)</code></pre>\n\n\n<p>\nDynamically links the host program with the C&nbsp;library <code>libname</code>.\nInside this library, looks for a function <code>funcname</code>\nand returns this function as a C&nbsp;function.\n(So, <code>funcname</code> must follow the protocol (see <a href="http://www.lua.org/manual/5.1/manual.html#lua_CFunction"><code>lua_CFunction</code></a>)).\n\n\n<p>\nThis is a low-level function.\nIt completely bypasses the package and module system.\nUnlike <a href="http://www.lua.org/manual/5.1/manual.html#pdf-require"><code>require</code></a>,\nit does not perform any path searching and\ndoes not automatically adds extensions.\n<code>libname</code> must be the complete file name of the C&nbsp;library,\nincluding if necessary a path and extension.\n<code>funcname</code> must be the exact name exported by the C&nbsp;library\n(which may depend on the C&nbsp;compiler and linker used).\n\n\n<p>\nThis function is not supported by ANSI C.\nAs such, it is only available on some platforms\n(Windows, Linux, Mac OS X, Solaris, BSD,\nplus other Unix systems that support the <code>dlfcn</code> standard).\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-package.loadlib
package.path	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>package.path</code></pre>\n\n\n<p>\nThe path used by <a href="http://www.lua.org/manual/5.1/manual.html#pdf-require"><code>require</code></a> to search for a Lua loader.\n\n\n<p>\nAt start-up, Lua initializes this variable with\nthe value of the environment variable <a name="pdf-LUA_PATH"><code>LUA_PATH</code></a> or\nwith a default path defined in <code>luaconf.h</code>,\nif the environment variable is not defined.\nAny "<code>;;</code>" in the value of the environment variable\nis replaced by the default path.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-package.path
package.preload	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>package.preload</code></pre>\n\n\n<p>\nA table to store loaders for specific modules\n(see <a href="http://www.lua.org/manual/5.1/manual.html#pdf-require"><code>require</code></a>).\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-package.preload
package.seeall	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>package.seeall (module)</code></pre>\n\n\n<p>\nSets a metatable for <code>module</code> with\nits <code>__index</code> field referring to the global environment,\nso that this module inherits values\nfrom the global environment.\nTo be used as an option to function <a href="http://www.lua.org/manual/5.1/manual.html#pdf-module"><code>module</code></a>.\n\n\n\n\n\n\n	http://www.lua.org/manual/5.1/manual.html#pdf-package.seeall
pairs	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>pairs (t)</code></pre>\n\n\n<p>\nReturns three values: the <a href="http://www.lua.org/manual/5.1/manual.html#pdf-next"><code>next</code></a> function, the table <code>t</code>, and <b>nil</b>,\nso that the construction\n\n<pre>\n     for k,v in pairs(t) do <em>body</em> end\n</pre><p>\nwill iterate over all key&ndash;value pairs of table <code>t</code>.\n\n\n<p>\nSee function <a href="http://www.lua.org/manual/5.1/manual.html#pdf-next"><code>next</code></a> for the caveats of modifying\nthe table during its traversal.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-pairs
pcall	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>pcall (f, arg1, &middot;&middot;&middot;)</code></pre>\n\n\n<p>\nCalls function <code>f</code> with\nthe given arguments in <em>protected mode</em>.\nThis means that any error inside&nbsp;<code>f</code> is not propagated;\ninstead, <code>pcall</code> catches the error\nand returns a status code.\nIts first result is the status code (a boolean),\nwhich is true if the call succeeds without errors.\nIn such case, <code>pcall</code> also returns all results from the call,\nafter this first result.\nIn case of any error, <code>pcall</code> returns <b>false</b> plus the error message.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-pcall
print	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>print (&middot;&middot;&middot;)</code></pre>\nReceives any number of arguments,\nand prints their values to <code>stdout</code>,\nusing the <a href="http://www.lua.org/manual/5.1/manual.html#pdf-tostring"><code>tostring</code></a> function to convert them to strings.\n<code>print</code> is not intended for formatted output,\nbut only as a quick way to show a value,\ntypically for debugging.\nFor formatted output, use <a href="http://www.lua.org/manual/5.1/manual.html#pdf-string.format"><code>string.format</code></a>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-print
rawequal	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>rawequal (v1, v2)</code></pre>\nChecks whether <code>v1</code> is equal to <code>v2</code>,\nwithout invoking any metamethod.\nReturns a boolean.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-rawequal
rawget	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>rawget (table, index)</code></pre>\nGets the real value of <code>table[index]</code>,\nwithout invoking any metamethod.\n<code>table</code> must be a table;\n<code>index</code> may be any value.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-rawget
rawset	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>rawset (table, index, value)</code></pre>\nSets the real value of <code>table[index]</code> to <code>value</code>,\nwithout invoking any metamethod.\n<code>table</code> must be a table,\n<code>index</code> any value different from <b>nil</b>,\nand <code>value</code> any Lua value.\n\n\n<p>\nThis function returns <code>table</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-rawset
require	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>require (modname)</code></pre>\n\n\n<p>\nLoads the given module.\nThe function starts by looking into the <a href="http://www.lua.org/manual/5.1/manual.html#pdf-package.loaded"><code>package.loaded</code></a> table\nto determine whether <code>modname</code> is already loaded.\nIf it is, then <code>require</code> returns the value stored\nat <code>package.loaded[modname]</code>.\nOtherwise, it tries to find a <em>loader</em> for the module.\n\n\n<p>\nTo find a loader,\n<code>require</code> is guided by the <a href="http://www.lua.org/manual/5.1/manual.html#pdf-package.loaders"><code>package.loaders</code></a> array.\nBy changing this array,\nwe can change how <code>require</code> looks for a module.\nThe following explanation is based on the default configuration\nfor <a href="http://www.lua.org/manual/5.1/manual.html#pdf-package.loaders"><code>package.loaders</code></a>.\n\n\n<p>\nFirst <code>require</code> queries <code>package.preload[modname]</code>.\nIf it has a value,\nthis value (which should be a function) is the loader.\nOtherwise <code>require</code> searches for a Lua loader using the\npath stored in <a href="http://www.lua.org/manual/5.1/manual.html#pdf-package.path"><code>package.path</code></a>.\nIf that also fails, it searches for a C&nbsp;loader using the\npath stored in <a href="http://www.lua.org/manual/5.1/manual.html#pdf-package.cpath"><code>package.cpath</code></a>.\nIf that also fails,\nit tries an <em>all-in-one</em> loader (see <a href="http://www.lua.org/manual/5.1/manual.html#pdf-package.loaders"><code>package.loaders</code></a>).\n\n\n<p>\nOnce a loader is found,\n<code>require</code> calls the loader with a single argument, <code>modname</code>.\nIf the loader returns any value,\n<code>require</code> assigns the returned value to <code>package.loaded[modname]</code>.\nIf the loader returns no value and\nhas not assigned any value to <code>package.loaded[modname]</code>,\nthen <code>require</code> assigns <b>true</b> to this entry.\nIn any case, <code>require</code> returns the\nfinal value of <code>package.loaded[modname]</code>.\n\n\n<p>\nIf there is any error loading or running the module,\nor if it cannot find any loader for the module,\nthen <code>require</code> signals an error. \n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-require
select	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>select (index, &middot;&middot;&middot;)</code></pre>\n\n\n<p>\nIf <code>index</code> is a number,\nreturns all arguments after argument number <code>index</code>.\nOtherwise, <code>index</code> must be the string <code>"#"</code>,\nand <code>select</code> returns the total number of extra arguments it received.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-select
setfenv	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>setfenv (f, table)</code></pre>\n\n\n<p>\nSets the environment to be used by the given function.\n<code>f</code> can be a Lua function or a number\nthat specifies the function at that stack level:\nLevel&nbsp;1 is the function calling <code>setfenv</code>.\n<code>setfenv</code> returns the given function.\n\n\n<p>\nAs a special case, when <code>f</code> is 0 <code>setfenv</code> changes\nthe environment of the running thread.\nIn this case, <code>setfenv</code> returns no values.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-setfenv
setmetatable	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>setmetatable (table, metatable)</code></pre>\n\n\n<p>\nSets the metatable for the given table.\n(You cannot change the metatable of other types from Lua, only from&nbsp;C.)\nIf <code>metatable</code> is <b>nil</b>,\nremoves the metatable of the given table.\nIf the original metatable has a <code>"__metatable"</code> field,\nraises an error.\n\n\n<p>\nThis function returns <code>table</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-setmetatable
string.byte	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>string.byte (s [, i [, j]])</code></pre>\nReturns the internal numerical codes of the characters <code>s[i]</code>,\n<code>s[i+1]</code>, &middot;&middot;&middot;, <code>s[j]</code>.\nThe default value for <code>i</code> is&nbsp;1;\nthe default value for <code>j</code> is&nbsp;<code>i</code>.\n\n\n<p>\nNote that numerical codes are not necessarily portable across platforms.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-string.byte
string.char	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>string.char (&middot;&middot;&middot;)</code></pre>\nReceives zero or more integers.\nReturns a string with length equal to the number of arguments,\nin which each character has the internal numerical code equal\nto its corresponding argument.\n\n\n<p>\nNote that numerical codes are not necessarily portable across platforms.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-string.char
string.dump	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>string.dump (function)</code></pre>\n\n\n<p>\nReturns a string containing a binary representation of the given function,\nso that a later <a href="http://www.lua.org/manual/5.1/manual.html#pdf-loadstring"><code>loadstring</code></a> on this string returns\na copy of the function.\n<code>function</code> must be a Lua function without upvalues.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-string.dump
string.find	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>string.find (s, pattern [, init [, plain]])</code></pre>\nLooks for the first match of\n<code>pattern</code> in the string <code>s</code>.\nIf it finds a match, then <code>find</code> returns the indices of&nbsp;<code>s</code>\nwhere this occurrence starts and ends;\notherwise, it returns <b>nil</b>.\nA third, optional numerical argument <code>init</code> specifies\nwhere to start the search;\nits default value is&nbsp;1 and can be negative.\nA value of <b>true</b> as a fourth, optional argument <code>plain</code>\nturns off the pattern matching facilities,\nso the function does a plain "find substring" operation,\nwith no characters in <code>pattern</code> being considered "magic".\nNote that if <code>plain</code> is given, then <code>init</code> must be given as well.\n\n\n<p>\nIf the pattern has captures,\nthen in a successful match\nthe captured values are also returned,\nafter the two indices.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-string.find
string.format	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>string.format (formatstring, &middot;&middot;&middot;)</code></pre>\nReturns a formatted version of its variable number of arguments\nfollowing the description given in its first argument (which must be a string).\nThe format string follows the same rules as the <code>printf</code> family of\nstandard C&nbsp;functions.\nThe only differences are that the options/modifiers\n<code>*</code>, <code>l</code>, <code>L</code>, <code>n</code>, <code>p</code>,\nand <code>h</code> are not supported\nand that there is an extra option, <code>q</code>.\nThe <code>q</code> option formats a string in a form suitable to be safely read\nback by the Lua interpreter:\nthe string is written between double quotes,\nand all double quotes, newlines, embedded zeros,\nand backslashes in the string\nare correctly escaped when written.\nFor instance, the call\n\n<pre>\n     string.format('%q', 'a string with "quotes" and \n new line')\n</pre><p>\nwill produce the string:\n\n<pre>\n     "a string with \"quotes\" and \\n      new line"\n</pre>\n\n<p>\nThe options <code>c</code>, <code>d</code>, <code>E</code>, <code>e</code>, <code>f</code>,\n<code>g</code>, <code>G</code>, <code>i</code>, <code>o</code>, <code>u</code>, <code>X</code>, and <code>x</code> all\nexpect a number as argument,\nwhereas <code>q</code> and <code>s</code> expect a string.\n\n\n<p>\nThis function does not accept string values\ncontaining embedded zeros,\nexcept as arguments to the <code>q</code> option.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-string.format
string.gmatch	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>string.gmatch (s, pattern)</code></pre>\nReturns an iterator function that,\neach time it is called,\nreturns the next captures from <code>pattern</code> over string <code>s</code>.\nIf <code>pattern</code> specifies no captures,\nthen the whole match is produced in each call.\n\n\n<p>\nAs an example, the following loop\n\n<pre>\n     s = "hello world from Lua"\n     for w in string.gmatch(s, "%a+") do\n       print(w)\n     end\n</pre><p>\nwill iterate over all the words from string <code>s</code>,\nprinting one per line.\nThe next example collects all pairs <code>key=value</code> from the\ngiven string into a table:\n\n<pre>\n     t = {}\n     s = "from=world, to=Lua"\n     for k, v in string.gmatch(s, "(%w+)=(%w+)") do\n       t[k] = v\n     end\n</pre>\n\n<p>\nFor this function, a '<code>^</code>' at the start of a pattern does not\nwork as an anchor, as this would prevent the iteration.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-string.gmatch
string.gsub	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>string.gsub (s, pattern, repl [, n])</code></pre>\nReturns a copy of <code>s</code>\nin which all (or the first <code>n</code>, if given)\noccurrences of the <code>pattern</code> have been\nreplaced by a replacement string specified by <code>repl</code>,\nwhich can be a string, a table, or a function.\n<code>gsub</code> also returns, as its second value,\nthe total number of matches that occurred.\n\n\n<p>\nIf <code>repl</code> is a string, then its value is used for replacement.\nThe character&nbsp;<code>%</code> works as an escape character:\nany sequence in <code>repl</code> of the form <code>%<em>n</em></code>,\nwith <em>n</em> between 1 and 9,\nstands for the value of the <em>n</em>-th captured substring (see below).\nThe sequence <code>%0</code> stands for the whole match.\nThe sequence <code>%%</code> stands for a single&nbsp;<code>%</code>.\n\n\n<p>\nIf <code>repl</code> is a table, then the table is queried for every match,\nusing the first capture as the key;\nif the pattern specifies no captures,\nthen the whole match is used as the key.\n\n\n<p>\nIf <code>repl</code> is a function, then this function is called every time a\nmatch occurs, with all captured substrings passed as arguments,\nin order;\nif the pattern specifies no captures,\nthen the whole match is passed as a sole argument.\n\n\n<p>\nIf the value returned by the table query or by the function call\nis a string or a number,\nthen it is used as the replacement string;\notherwise, if it is <b>false</b> or <b>nil</b>,\nthen there is no replacement\n(that is, the original match is kept in the string).\n\n\n<p>\nHere are some examples:\n\n<pre>\n     x = string.gsub("hello world", "(%w+)", "%1 %1")\n     --&gt; x="hello hello world world"\n     \n     x = string.gsub("hello world", "%w+", "%0 %0", 1)\n     --&gt; x="hello hello world"\n     \n     x = string.gsub("hello world from Lua", "(%w+)%s*(%w+)", "%2 %1")\n     --&gt; x="world hello Lua from"\n     \n     x = string.gsub("home = $HOME, user = $USER", "%$(%w+)", os.getenv)\n     --&gt; x="home = /home/roberto, user = roberto"\n     \n     x = string.gsub("4+5 = $return 4+5$", "%$(.-)%$", function (s)\n           return loadstring(s)()\n         end)\n     --&gt; x="4+5 = 9"\n     \n     local t = {name="lua", version="5.1"}\n     x = string.gsub("$name-$version.tar.gz", "%$(%w+)", t)\n     --&gt; x="lua-5.1.tar.gz"\n</pre>\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-string.gsub
string.len	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>string.len (s)</code></pre>\nReceives a string and returns its length.\nThe empty string <code>""</code> has length 0.\nEmbedded zeros are counted,\nso <code>"a\000bc\000"</code> has length 5.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-string.len
string.lower	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>string.lower (s)</code></pre>\nReceives a string and returns a copy of this string with all\nuppercase letters changed to lowercase.\nAll other characters are left unchanged.\nThe definition of what an uppercase letter is depends on the current locale.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-string.lower
string.match	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>string.match (s, pattern [, init])</code></pre>\nLooks for the first <em>match</em> of\n<code>pattern</code> in the string <code>s</code>.\nIf it finds one, then <code>match</code> returns\nthe captures from the pattern;\notherwise it returns <b>nil</b>.\nIf <code>pattern</code> specifies no captures,\nthen the whole match is returned.\nA third, optional numerical argument <code>init</code> specifies\nwhere to start the search;\nits default value is&nbsp;1 and can be negative.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-string.match
string.rep	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>string.rep (s, n)</code></pre>\nReturns a string that is the concatenation of <code>n</code> copies of\nthe string <code>s</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-string.rep
string.reverse	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>string.reverse (s)</code></pre>\nReturns a string that is the string <code>s</code> reversed.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-string.reverse
string.sub	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>string.sub (s, i [, j])</code></pre>\nReturns the substring of <code>s</code> that\nstarts at <code>i</code>  and continues until <code>j</code>;\n<code>i</code> and <code>j</code> can be negative.\nIf <code>j</code> is absent, then it is assumed to be equal to -1\n(which is the same as the string length).\nIn particular,\nthe call <code>string.sub(s,1,j)</code> returns a prefix of <code>s</code>\nwith length <code>j</code>,\nand <code>string.sub(s, -i)</code> returns a suffix of <code>s</code>\nwith length <code>i</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-string.sub
table.concat	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>table.concat (table [, sep [, i [, j]]])</code></pre>\nGiven an array where all elements are strings or numbers,\nreturns <code>table[i]..sep..table[i+1] &middot;&middot;&middot; sep..table[j]</code>.\nThe default value for <code>sep</code> is the empty string,\nthe default for <code>i</code> is 1,\nand the default for <code>j</code> is the length of the table.\nIf <code>i</code> is greater than <code>j</code>, returns the empty string.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-table.concat
table.insert	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>table.insert (table, [pos,] value)</code></pre>\n\n\n<p>\nInserts element <code>value</code> at position <code>pos</code> in <code>table</code>,\nshifting up other elements to open space, if necessary.\nThe default value for <code>pos</code> is <code>n+1</code>,\nwhere <code>n</code> is the length of the table (see <a href="http://www.lua.org/manual/5.1/manual.html#2.5.5">&sect;2.5.5</a>),\nso that a call <code>table.insert(t,x)</code> inserts <code>x</code> at the end\nof table <code>t</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-table.insert
table.maxn	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>table.maxn (table)</code></pre>\n\n\n<p>\nReturns the largest positive numerical index of the given table,\nor zero if the table has no positive numerical indices.\n(To do its job this function does a linear traversal of\nthe whole table.) \n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-table.maxn
table.remove	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>table.remove (table [, pos])</code></pre>\n\n\n<p>\nRemoves from <code>table</code> the element at position <code>pos</code>,\nshifting down other elements to close the space, if necessary.\nReturns the value of the removed element.\nThe default value for <code>pos</code> is <code>n</code>,\nwhere <code>n</code> is the length of the table,\nso that a call <code>table.remove(t)</code> removes the last element\nof table <code>t</code>.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-table.remove
table.sort	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>table.sort (table [, comp])</code></pre>\nSorts table elements in a given order, <em>in-place</em>,\nfrom <code>table[1]</code> to <code>table[n]</code>,\nwhere <code>n</code> is the length of the table.\nIf <code>comp</code> is given,\nthen it must be a function that receives two table elements,\nand returns true\nwhen the first is less than the second\n(so that <code>not comp(a[i+1],a[i])</code> will be true after the sort).\nIf <code>comp</code> is not given,\nthen the standard Lua operator <code>&lt;</code> is used instead.\n\n\n<p>\nThe sort algorithm is not stable;\nthat is, elements considered equal by the given order\nmay have their relative positions changed by the sort.\n\n\n\n\n\n\n	http://www.lua.org/manual/5.1/manual.html#pdf-table.sort
tonumber	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>tonumber (e [, base])</code></pre>\nTries to convert its argument to a number.\nIf the argument is already a number or a string convertible\nto a number, then <code>tonumber</code> returns this number;\notherwise, it returns <b>nil</b>.\n\n\n<p>\nAn optional argument specifies the base to interpret the numeral.\nThe base may be any integer between 2 and 36, inclusive.\nIn bases above&nbsp;10, the letter '<code>A</code>' (in either upper or lower case)\nrepresents&nbsp;10, '<code>B</code>' represents&nbsp;11, and so forth,\nwith '<code>Z</code>' representing 35.\nIn base 10 (the default), the number can have a decimal part,\nas well as an optional exponent part (see <a href="http://www.lua.org/manual/5.1/manual.html#2.1">&sect;2.1</a>).\nIn other bases, only unsigned integers are accepted.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-tonumber
tostring	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>tostring (e)</code></pre>\nReceives an argument of any type and\nconverts it to a string in a reasonable format.\nFor complete control of how numbers are converted,\nuse <a href="http://www.lua.org/manual/5.1/manual.html#pdf-string.format"><code>string.format</code></a>.\n\n\n<p>\nIf the metatable of <code>e</code> has a <code>"__tostring"</code> field,\nthen <code>tostring</code> calls the corresponding value\nwith <code>e</code> as argument,\nand uses the result of the call as its result.\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-tostring
type	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>type (v)</code></pre>\nReturns the type of its only argument, coded as a string.\nThe possible results of this function are\n"<code>nil</code>" (a string, not the value <b>nil</b>),\n"<code>number</code>",\n"<code>string</code>",\n"<code>boolean</code>",\n"<code>table</code>",\n"<code>function</code>",\n"<code>thread</code>",\nand "<code>userdata</code>".\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-type
unpack	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>unpack (list [, i [, j]])</code></pre>\nReturns the elements from the given table.\nThis function is equivalent to\n\n<pre>\n     return list[i], list[i+1], &middot;&middot;&middot;, list[j]\n</pre><p>\nexcept that the above code can be written only for a fixed number\nof elements.\nBy default, <code>i</code> is&nbsp;1 and <code>j</code> is the length of the list,\nas defined by the length operator (see <a href="http://www.lua.org/manual/5.1/manual.html#2.5.5">&sect;2.5.5</a>).\n\n\n\n\n<p>	http://www.lua.org/manual/5.1/manual.html#pdf-unpack
xpcall	A							http://www.lua.org/manual/5.1/manual.html			<pre><code>xpcall (f, err)</code></pre>\n\n\n<p>\nThis function is similar to <a href="http://www.lua.org/manual/5.1/manual.html#pdf-pcall"><code>pcall</code></a>,\nexcept that you can set a new error handler.\n\n\n<p>\n<code>xpcall</code> calls function <code>f</code> in protected mode,\nusing <code>err</code> as the error handler.\nAny error inside <code>f</code> is not propagated;\ninstead, <code>xpcall</code> catches the error,\ncalls the <code>err</code> function with the original error object,\nand returns a status code.\nIts first result is the status code (a boolean),\nwhich is true if the call succeeds without errors.\nIn this case, <code>xpcall</code> also returns all results from the call,\nafter this first result.\nIn case of any error,\n<code>xpcall</code> returns <b>false</b> plus the result from <code>err</code>.\n\n\n\n\n\n\n	http://www.lua.org/manual/5.1/manual.html#pdf-xpcall
